

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 21:39:05 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    98                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    99   000000                     
   100                           ; Generated 06/04/2022 GMT
   101                           ; 
   102                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC18F67K40 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134   000000                     
   135                           	psect	idataBANK0
   136   0061C0                     __pidataBANK0:
   137                           	callstack 0
   138                           
   139                           ;initializer for _RunOneBlockTime
   140   0061C0  07D0               	dw	2000
   141                           
   142                           ;initializer for _Turn45Delay
   143   0061C2  00DC               	dw	220
   144                           
   145                           ;initializer for _power
   146   0061C4  001E               	dw	30
   147                           
   148                           ;initializer for _DataFlag
   149   0061C6  01                 	db	1
   150   000000                     _TRISEbits	set	3973
   151   000000                     _LATHbits	set	3968
   152   000000                     _TX4REG	set	3812
   153   000000                     _RC4STAbits	set	3815
   154   000000                     _SP4BRGH	set	3814
   155   000000                     _SSP2CON2bits	set	3802
   156   000000                     _RX4PPS	set	3605
   157   000000                     _SSP2CLKPPS	set	3612
   158   000000                     _SSP2DATPPS	set	3613
   159   000000                     _ANSELDbits	set	3751
   160   000000                     _SSP2ADD	set	3798
   161   000000                     _SSP2CON1bits	set	3801
   162   000000                     _LATAbits	set	3961
   163   000000                     _LATFbits	set	3966
   164   000000                     _LATGbits	set	3967
   165   000000                     _TRISAbits	set	3969
   166   000000                     _TRISGbits	set	3975
   167   000000                     _PORTFbits	set	3982
   168   000000                     _TRISHbits	set	3976
   169   000000                     _CCPR2H	set	4006
   170   000000                     _CCPR1H	set	4010
   171   000000                     _TRISCbits	set	3971
   172   000000                     _TRISDbits	set	3972
   173   000000                     _TRISFbits	set	3974
   174   000000                     _LATDbits	set	3964
   175   000000                     _RC4REG	set	3811
   176   000000                     _SP4BRGL	set	3813
   177   000000                     _TX4STAbits	set	3816
   178   000000                     _BAUD4CONbits	set	3817
   179   000000                     _SSP2CON2	set	3802
   180   000000                     _SSP2STAT	set	3800
   181   000000                     _ANSELFbits	set	3764
   182   000000                     _SSP2BUF	set	3797
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186   000000                     _RD5PPS	set	3695
   187   000000                     _RE2PPS	set	3700
   188   000000                     _RD6PPS	set	3696
   189   000000                     _RC7PPS	set	3689
   190   000000                     _CCPR4H	set	3873
   191   000000                     _CCPR3H	set	3877
   192   000000                     _CCP1CONbits	set	4011
   193   000000                     _CCPTMRS0bits	set	4013
   194   000000                     _T2PR	set	4028
   195   000000                     _T2CONbits	set	4029
   196   000000                     _TMR0L	set	4051
   197   000000                     _TMR0H	set	4052
   198   000000                     _CCP2CONbits	set	4007
   199   000000                     _CCP3CONbits	set	3878
   200   000000                     _CCP4CONbits	set	3874
   201   000000                     _T0CON1bits	set	4054
   202   000000                     _T0CON0bits	set	4053
   203   000000                     _RE4PPS	set	3702
   204   000000                     _RG6PPS	set	3720
   205   000000                     _T2CLKCONbits	set	4031
   206   000000                     _T2HLTbits	set	4030
   207                           
   208                           	psect	smallconst
   209   000E00                     __psmallconst:
   210                           	callstack 0
   211   000E00  00                 	db	0
   212   000E01                     STR_1:
   213   000E01  72                 	db	114	;'r'
   214   000E02  65                 	db	101	;'e'
   215   000E03  64                 	db	100	;'d'
   216   000E04  3D                 	db	61	;'='
   217   000E05  25                 	db	37
   218   000E06  64                 	db	100	;'d'
   219   000E07  20                 	db	32
   220   000E08  67                 	db	103	;'g'
   221   000E09  72                 	db	114	;'r'
   222   000E0A  65                 	db	101	;'e'
   223   000E0B  65                 	db	101	;'e'
   224   000E0C  6E                 	db	110	;'n'
   225   000E0D  3D                 	db	61	;'='
   226   000E0E  25                 	db	37
   227   000E0F  64                 	db	100	;'d'
   228   000E10  20                 	db	32
   229   000E11  62                 	db	98	;'b'
   230   000E12  6C                 	db	108	;'l'
   231   000E13  75                 	db	117	;'u'
   232   000E14  65                 	db	101	;'e'
   233   000E15  3D                 	db	61	;'='
   234   000E16  25                 	db	37
   235   000E17  64                 	db	100	;'d'
   236   000E18  20                 	db	32
   237   000E19  63                 	db	99	;'c'
   238   000E1A  6F                 	db	111	;'o'
   239   000E1B  6C                 	db	108	;'l'
   240   000E1C  6F                 	db	111	;'o'
   241   000E1D  75                 	db	117	;'u'
   242   000E1E  72                 	db	114	;'r'
   243   000E1F  3D                 	db	61	;'='
   244   000E20  25                 	db	37
   245   000E21  64                 	db	100	;'d'
   246   000E22  20                 	db	32
   247   000E23  0D                 	db	13
   248   000E24  0A                 	db	10
   249   000E25  00                 	db	0
   250   000E26                     STR_2:
   251   000E26  72                 	db	114	;'r'
   252   000E27  65                 	db	101	;'e'
   253   000E28  64                 	db	100	;'d'
   254   000E29  3D                 	db	61	;'='
   255   000E2A  25                 	db	37
   256   000E2B  66                 	db	102	;'f'
   257   000E2C  20                 	db	32
   258   000E2D  67                 	db	103	;'g'
   259   000E2E  72                 	db	114	;'r'
   260   000E2F  65                 	db	101	;'e'
   261   000E30  65                 	db	101	;'e'
   262   000E31  6E                 	db	110	;'n'
   263   000E32  3D                 	db	61	;'='
   264   000E33  25                 	db	37
   265   000E34  66                 	db	102	;'f'
   266   000E35  20                 	db	32
   267   000E36  62                 	db	98	;'b'
   268   000E37  6C                 	db	108	;'l'
   269   000E38  75                 	db	117	;'u'
   270   000E39  65                 	db	101	;'e'
   271   000E3A  3D                 	db	61	;'='
   272   000E3B  25                 	db	37
   273   000E3C  66                 	db	102	;'f'
   274   000E3D  20                 	db	32
   275   000E3E  6C                 	db	108	;'l'
   276   000E3F  75                 	db	117	;'u'
   277   000E40  6D                 	db	109	;'m'
   278   000E41  3D                 	db	61	;'='
   279   000E42  25                 	db	37
   280   000E43  64                 	db	100	;'d'
   281   000E44  20                 	db	32
   282   000E45  20                 	db	32
   283   000E46  0D                 	db	13
   284   000E47  0A                 	db	10
   285   000E48  00                 	db	0
   286   000E49                     STR_3:
   287   000E49  69                 	db	105	;'i'
   288   000E4A  6E                 	db	110	;'n'
   289   000E4B  66                 	db	102	;'f'
   290   000E4C  00                 	db	0
   291   000E4D                     STR_6:
   292   000E4D  6E                 	db	110	;'n'
   293   000E4E  61                 	db	97	;'a'
   294   000E4F  6E                 	db	110	;'n'
   295   000E50  00                 	db	0
   296   000E51  00                 	db	0	; dummy byte at the end
   297   000000                     
   298                           ; #config settings
   299                           
   300                           	psect	cinit
   301   005D94                     __pcinit:
   302                           	callstack 0
   303   005D94                     start_initialization:
   304                           	callstack 0
   305   005D94                     __initialization:
   306                           	callstack 0
   307                           
   308                           ; Initialize objects allocated to BANK0 (7 bytes)
   309                           ; load TBLPTR registers with __pidataBANK0
   310   005D94  0EC0               	movlw	low __pidataBANK0
   311   005D96  6EF6               	movwf	tblptrl,c
   312   005D98  0E61               	movlw	high __pidataBANK0
   313   005D9A  6EF7               	movwf	tblptrh,c
   314   005D9C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   315   005D9E  6EF8               	movwf	tblptru,c
   316   005DA0  EE00  F0F7         	lfsr	0,__pdataBANK0
   317   005DA4  EE10 F007          	lfsr	1,7
   318   005DA8                     copy_data0:
   319   005DA8  0009               	tblrd		*+
   320   005DAA  CFF5 FFEE          	movff	tablat,postinc0
   321   005DAE  50E5               	movf	postdec1,w,c
   322   005DB0  50E1               	movf	fsr1l,w,c
   323   005DB2  E1FA               	bnz	copy_data0
   324                           
   325                           ; Clear objects allocated to BANK2 (240 bytes)
   326   005DB4  EE02  F000         	lfsr	0,__pbssBANK2
   327   005DB8  0EF0               	movlw	240
   328   005DBA                     clear_0:
   329   005DBA  6AEE               	clrf	postinc0,c
   330   005DBC  06E8               	decf	wreg,f,c
   331   005DBE  E1FD               	bnz	clear_0
   332                           
   333                           ; Clear objects allocated to BANK1 (102 bytes)
   334   005DC0  EE01  F072         	lfsr	0,__pbssBANK1
   335   005DC4  0E66               	movlw	102
   336   005DC6                     clear_1:
   337   005DC6  6AEE               	clrf	postinc0,c
   338   005DC8  06E8               	decf	wreg,f,c
   339   005DCA  E1FD               	bnz	clear_1
   340                           
   341                           ; Clear objects allocated to BANK0 (38 bytes)
   342   005DCC  EE00  F0D1         	lfsr	0,__pbssBANK0
   343   005DD0  0E26               	movlw	38
   344   005DD2                     clear_2:
   345   005DD2  6AEE               	clrf	postinc0,c
   346   005DD4  06E8               	decf	wreg,f,c
   347   005DD6  E1FD               	bnz	clear_2
   348                           
   349                           ; Clear objects allocated to COMRAM (1 bytes)
   350   005DD8  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   351   005DDA                     end_of_initialization:
   352                           	callstack 0
   353   005DDA                     __end_of__initialization:
   354                           	callstack 0
   355   005DDA  0100               	movlb	0
   356   005DDC  EF94  F011         	goto	_main	;jump to C main() function
   357                           
   358                           	psect	bssCOMRAM
   359   00005F                     __pbssCOMRAM:
   360                           	callstack 0
   361   00005F                     _TxBufWriteCnt:
   362                           	callstack 0
   363   00005F                     	ds	1
   364                           
   365                           	psect	bssBANK0
   366   0000D1                     __pbssBANK0:
   367                           	callstack 0
   368   0000D1                     _EUSART4RXbuf:
   369                           	callstack 0
   370   0000D1                     	ds	20
   371   0000E5                     floorf@F526:
   372                           	callstack 0
   373   0000E5                     	ds	4
   374   0000E9                     ___fpclassifyf@F465:
   375                           	callstack 0
   376   0000E9                     	ds	4
   377   0000ED                     _width:
   378                           	callstack 0
   379   0000ED                     	ds	2
   380   0000EF                     _prec:
   381                           	callstack 0
   382   0000EF                     	ds	2
   383   0000F1                     _lost_flag:
   384                           	callstack 0
   385   0000F1                     	ds	2
   386   0000F3                     _flags:
   387                           	callstack 0
   388   0000F3                     	ds	1
   389   0000F4                     _TxBufReadCnt:
   390                           	callstack 0
   391   0000F4                     	ds	1
   392   0000F5                     _RxBufReadCnt:
   393                           	callstack 0
   394   0000F5                     	ds	1
   395   0000F6                     _RxBufWriteCnt:
   396                           	callstack 0
   397   0000F6                     	ds	1
   398                           
   399                           	psect	dataBANK0
   400   0000F7                     __pdataBANK0:
   401                           	callstack 0
   402   0000F7                     _RunOneBlockTime:
   403                           	callstack 0
   404   0000F7                     	ds	2
   405   0000F9                     _Turn45Delay:
   406                           	callstack 0
   407   0000F9                     	ds	2
   408   0000FB                     _power:
   409                           	callstack 0
   410   0000FB                     	ds	2
   411   0000FD                     _DataFlag:
   412                           	callstack 0
   413   0000FD                     	ds	1
   414                           
   415                           	psect	bssBANK1
   416   000172                     __pbssBANK1:
   417                           	callstack 0
   418   000172                     	ds	12
   419   00017E                     _move_count:
   420                           	callstack 0
   421   00017E                     	ds	2
   422   000180                     _WayBack:
   423                           	callstack 0
   424   000180                     	ds	50
   425   0001B2                     _rel:
   426                           	callstack 0
   427   0001B2                     	ds	12
   428   0001BE                     _motorR:
   429                           	callstack 0
   430   0001BE                     	ds	9
   431   0001C7                     _motorL:
   432                           	callstack 0
   433   0001C7                     	ds	9
   434   0001D0                     _vals:
   435                           	callstack 0
   436   0001D0                     	ds	8
   437                           
   438                           	psect	bssBANK2
   439   000200                     __pbssBANK2:
   440                           	callstack 0
   441   000200                     _EUSART4TXbuf:
   442                           	callstack 0
   443   000200                     	ds	60
   444   00023C                     _Time_forward:
   445                           	callstack 0
   446   00023C                     	ds	100
   447   0002A0                     _dbuf:
   448                           	callstack 0
   449   0002A0                     	ds	80
   450                           
   451                           	psect	cstackBANK1
   452   000100                     __pcstackBANK1:
   453                           	callstack 0
   454   000100                     main@buf:
   455                           	callstack 0
   456                           
   457                           ; 100 bytes @ 0x0
   458   000100                     	ds	100
   459   000164                     main@temp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x64
   463   000164                     	ds	2
   464   000166                     main@colour_1291:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x66
   468   000166                     	ds	2
   469   000168                     main@run_flag:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x68
   473   000168                     	ds	2
   474   00016A                     main@lost_count:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x6A
   478   00016A                     	ds	2
   479   00016C                     main@consecuitive:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x6C
   483   00016C                     	ds	2
   484   00016E                     main@colour:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x6E
   488   00016E                     	ds	2
   489   000170                     main@prev_colour:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x70
   493   000170                     	ds	2
   494                           
   495                           	psect	cstackBANK0
   496   000060                     __pcstackBANK0:
   497                           	callstack 0
   498   000060                     efgtoa@fp:
   499                           	callstack 0
   500   000060                     colour_rel@L:
   501                           	callstack 0
   502   000060                     _Colour_decider$3144:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x0
   506   000060                     	ds	2
   507   000062                     efgtoa@f:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x2
   511   000062                     	ds	2
   512   000064                     Colour_decider@Cmax_i:
   513                           	callstack 0
   514   000064                     _colour_rel$3142:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x4
   518   000064                     	ds	2
   519   000066                     efgtoa@c:
   520                           	callstack 0
   521   000066                     Colour_decider@RGB_col:
   522                           	callstack 0
   523                           
   524                           ; 12 bytes @ 0x6
   525   000066                     	ds	1
   526   000067                     ??_efgtoa:
   527                           
   528                           ; 1 bytes @ 0x7
   529   000067                     	ds	1
   530   000068                     _colour_rel$3143:
   531                           	callstack 0
   532                           
   533                           ; 4 bytes @ 0x8
   534   000068                     	ds	1
   535   000069                     efgtoa@ne:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x9
   539   000069                     	ds	2
   540   00006B                     efgtoa@p:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0xB
   544   00006B                     	ds	1
   545   00006C                     colour_rel@R:
   546                           	callstack 0
   547                           
   548                           ; 4 bytes @ 0xC
   549   00006C                     	ds	1
   550   00006D                     efgtoa@t:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0xD
   554   00006D                     	ds	2
   555   00006F                     _efgtoa$2772:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0xF
   559   00006F                     	ds	1
   560   000070                     colour_rel@G:
   561                           	callstack 0
   562                           
   563                           ; 4 bytes @ 0x10
   564   000070                     	ds	1
   565   000071                     efgtoa@pp:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x11
   569   000071                     	ds	1
   570   000072                     efgtoa@mode:
   571                           	callstack 0
   572   000072                     Colour_decider@Cmax:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x12
   576   000072                     	ds	1
   577   000073                     efgtoa@nmode:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x13
   581   000073                     	ds	1
   582   000074                     efgtoa@d:
   583                           	callstack 0
   584   000074                     colour_rel@B:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x14
   588   000074                     	ds	2
   589   000076                     efgtoa@m:
   590                           	callstack 0
   591   000076                     Colour_decider@Cmin:
   592                           	callstack 0
   593                           
   594                           ; 4 bytes @ 0x16
   595   000076                     	ds	2
   596   000078                     efgtoa@e:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x18
   600   000078                     	ds	2
   601   00007A                     Colour_decider@i:
   602                           	callstack 0
   603   00007A                     efgtoa@w:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x1A
   607   00007A                     	ds	2
   608   00007C                     Colour_decider@Hue:
   609                           	callstack 0
   610   00007C                     efgtoa@ou:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x1C
   614   00007C                     	ds	4
   615   000080                     efgtoa@i:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x20
   619   000080                     	ds	2
   620   000082                     efgtoa@h:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x22
   624   000082                     	ds	4
   625   000086                     efgtoa@l:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x26
   629   000086                     	ds	4
   630   00008A                     efgtoa@sign:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x2A
   634   00008A                     	ds	1
   635   00008B                     efgtoa@n:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x2B
   639   00008B                     	ds	2
   640   00008D                     efgtoa@g:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x2D
   644   00008D                     	ds	4
   645   000091                     efgtoa@u:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x31
   649   000091                     	ds	4
   650   000095                     vfpfcnvrt@fp:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x35
   654   000095                     	ds	2
   655   000097                     vfpfcnvrt@fmt:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x37
   659   000097                     	ds	2
   660   000099                     vfpfcnvrt@ap:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x39
   664   000099                     	ds	2
   665   00009B                     ??_vfpfcnvrt:
   666                           
   667                           ; 1 bytes @ 0x3B
   668   00009B                     	ds	2
   669   00009D                     vfpfcnvrt@convarg:
   670                           	callstack 0
   671                           
   672                           ; 8 bytes @ 0x3D
   673   00009D                     	ds	8
   674   0000A5                     vfpfcnvrt@c:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x45
   678   0000A5                     	ds	1
   679   0000A6                     vfpfcnvrt@cp:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0x46
   683   0000A6                     	ds	2
   684   0000A8                     ?_vfprintf:
   685                           	callstack 0
   686   0000A8                     vfprintf@fp:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x48
   690   0000A8                     	ds	2
   691   0000AA                     vfprintf@fmt:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x4A
   695   0000AA                     	ds	2
   696   0000AC                     vfprintf@ap:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x4C
   700   0000AC                     	ds	2
   701   0000AE                     vfprintf@cfmt:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x4E
   705   0000AE                     	ds	2
   706   0000B0                     ?_sprintf:
   707                           	callstack 0
   708   0000B0                     sprintf@s:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x50
   712   0000B0                     	ds	2
   713   0000B2                     sprintf@fmt:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x52
   717   0000B2                     	ds	16
   718   0000C2                     sprintf@ap:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x62
   722   0000C2                     	ds	2
   723   0000C4                     sprintf@f:
   724                           	callstack 0
   725                           
   726                           ; 11 bytes @ 0x64
   727   0000C4                     	ds	11
   728   0000CF                     ??_main:
   729                           
   730                           ; 1 bytes @ 0x6F
   731   0000CF                     	ds	2
   732                           
   733                           	psect	cstackCOMRAM
   734   000001                     __pcstackCOMRAM:
   735                           	callstack 0
   736   000001                     ??_I2C_2_Master_Idle:
   737   000001                     ?___fpclassifyf:
   738                           	callstack 0
   739   000001                     ?___wmul:
   740                           	callstack 0
   741   000001                     ?___fladd:
   742                           	callstack 0
   743   000001                     ?_labs:
   744                           	callstack 0
   745   000001                     ?___flneg:
   746                           	callstack 0
   747   000001                     ?___fltol:
   748                           	callstack 0
   749   000001                     ?___xxtofl:
   750                           	callstack 0
   751   000001                     ?___aodiv:
   752                           	callstack 0
   753   000001                     ?___aomod:
   754                           	callstack 0
   755   000001                     sendCharSerial4@charToSend:
   756                           	callstack 0
   757   000001                     initDCmotorsPWM@PWMperiod:
   758                           	callstack 0
   759   000001                     TurnDelay@Turn45Delay:
   760                           	callstack 0
   761   000001                     getTMR0val@moving:
   762                           	callstack 0
   763   000001                     delayed_ms@time:
   764                           	callstack 0
   765   000001                     ___wmul@multiplier:
   766                           	callstack 0
   767   000001                     memcpy@d1:
   768                           	callstack 0
   769   000001                     fputc@c:
   770                           	callstack 0
   771   000001                     strcpy@dest:
   772                           	callstack 0
   773   000001                     ___flneg@f1:
   774                           	callstack 0
   775   000001                     ___fltol@f1:
   776                           	callstack 0
   777   000001                     ___fladd@b:
   778                           	callstack 0
   779   000001                     ___xxtofl@val:
   780                           	callstack 0
   781   000001                     ___fpclassifyf@x:
   782                           	callstack 0
   783   000001                     labs@a:
   784                           	callstack 0
   785   000001                     ___aodiv@dividend:
   786                           	callstack 0
   787   000001                     ___aomod@dividend:
   788                           	callstack 0
   789                           
   790                           ; 8 bytes @ 0x0
   791   000001                     	ds	1
   792   000002                     ??_I2C_2_Master_Read:
   793   000002                     I2C_2_Master_Write@data_byte:
   794                           	callstack 0
   795   000002                     sendStringSerial4@string:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x1
   799   000002                     	ds	1
   800   000003                     ??_delayed_ms:
   801   000003                     ??_TurnDelay:
   802   000003                     color_writetoaddr@value:
   803                           	callstack 0
   804   000003                     I2C_2_Master_Read@ack:
   805                           	callstack 0
   806   000003                     ___wmul@multiplicand:
   807                           	callstack 0
   808   000003                     memcpy@s1:
   809                           	callstack 0
   810   000003                     fputc@fp:
   811                           	callstack 0
   812   000003                     strcpy@src:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816   000003                     	ds	1
   817   000004                     color_writetoaddr@address:
   818                           	callstack 0
   819   000004                     I2C_2_Master_Read@tmp:
   820                           	callstack 0
   821   000004                     delayed_ms@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x3
   825   000004                     	ds	1
   826   000005                     ??_fputc:
   827   000005                     ??___fpclassifyf:
   828   000005                     ??_labs:
   829   000005                     ??_color_click_init:
   830   000005                     ??___fltol:
   831   000005                     ??___xxtofl:
   832   000005                     ?_color_read_lum:
   833                           	callstack 0
   834   000005                     ?_color_read_Red:
   835                           	callstack 0
   836   000005                     ?_color_read_Green:
   837                           	callstack 0
   838   000005                     ?_color_read_Blue:
   839                           	callstack 0
   840   000005                     ___wmul@product:
   841                           	callstack 0
   842   000005                     memcpy@n:
   843                           	callstack 0
   844   000005                     strcpy@s:
   845                           	callstack 0
   846   000005                     ___fladd@a:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x4
   850   000005                     	ds	2
   851   000007                     ??_color_read_lum:
   852   000007                     ??_color_read_Red:
   853   000007                     ??_color_read_Green:
   854   000007                     ??_color_read_Blue:
   855   000007                     ?___lwdiv:
   856                           	callstack 0
   857   000007                     ___lwdiv@dividend:
   858                           	callstack 0
   859   000007                     memcpy@d:
   860                           	callstack 0
   861   000007                     strcpy@d:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x6
   865   000007                     	ds	2
   866   000009                     ??___fladd:
   867   000009                     ___fltol@sign1:
   868                           	callstack 0
   869   000009                     ___xxtofl@sign:
   870                           	callstack 0
   871   000009                     ___lwdiv@divisor:
   872                           	callstack 0
   873   000009                     ___fpclassifyf@e:
   874                           	callstack 0
   875   000009                     memcpy@s:
   876                           	callstack 0
   877   000009                     ___aodiv@divisor:
   878                           	callstack 0
   879   000009                     ___aomod@divisor:
   880                           	callstack 0
   881                           
   882                           ; 8 bytes @ 0x8
   883   000009                     	ds	1
   884   00000A                     ___fltol@exp1:
   885                           	callstack 0
   886   00000A                     ___xxtofl@exp:
   887                           	callstack 0
   888   00000A                     color_read_lum@tmp:
   889                           	callstack 0
   890   00000A                     color_read_Red@tmp:
   891                           	callstack 0
   892   00000A                     color_read_Green@tmp:
   893                           	callstack 0
   894   00000A                     color_read_Blue@tmp:
   895                           	callstack 0
   896   00000A                     fputs@s:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x9
   900   00000A                     	ds	1
   901   00000B                     memcpy@tmp:
   902                           	callstack 0
   903   00000B                     ___lwdiv@quotient:
   904                           	callstack 0
   905   00000B                     ___xxtofl@arg:
   906                           	callstack 0
   907   00000B                     ___fpclassifyf@u:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0xA
   911   00000B                     	ds	1
   912   00000C                     readColours@vals:
   913                           	callstack 0
   914   00000C                     fputs@fp:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0xB
   918   00000C                     	ds	1
   919   00000D                     ___lwdiv@counter:
   920                           	callstack 0
   921   00000D                     ___fladd@signs:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0xC
   925   00000D                     	ds	1
   926   00000E                     ___fladd@aexp:
   927                           	callstack 0
   928   00000E                     fputs@c:
   929                           	callstack 0
   930   00000E                     setMotorPWM@m:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0xD
   934   00000E                     	ds	1
   935   00000F                     ___fladd@bexp:
   936                           	callstack 0
   937   00000F                     fputs@i:
   938                           	callstack 0
   939                           
   940                           ; 2 bytes @ 0xE
   941   00000F                     	ds	1
   942   000010                     ??_setMotorPWM:
   943   000010                     ___fladd@grs:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0xF
   947   000010                     	ds	1
   948   000011                     ?___flmul:
   949                           	callstack 0
   950   000011                     ___aodiv@counter:
   951                           	callstack 0
   952   000011                     ___aomod@counter:
   953                           	callstack 0
   954   000011                     pad@fp:
   955                           	callstack 0
   956   000011                     ___flmul@b:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x10
   960   000011                     	ds	1
   961   000012                     setMotorPWM@posDuty:
   962                           	callstack 0
   963   000012                     ___aodiv@sign:
   964                           	callstack 0
   965   000012                     ___aomod@sign:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x11
   969   000012                     	ds	1
   970   000013                     ?_abs:
   971                           	callstack 0
   972   000013                     setMotorPWM@negDuty:
   973                           	callstack 0
   974   000013                     pad@buf:
   975                           	callstack 0
   976   000013                     abs@a:
   977                           	callstack 0
   978   000013                     ___aodiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 8 bytes @ 0x12
   982   000013                     	ds	1
   983   000014                     stop@mL:
   984                           	callstack 0
   985   000014                     turnLeft@mL:
   986                           	callstack 0
   987   000014                     turnRight@mL:
   988                           	callstack 0
   989   000014                     fullSpeedAhead@mL:
   990                           	callstack 0
   991   000014                     timed_forward@mL:
   992                           	callstack 0
   993   000014                     fullSpeedBack@mL:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x13
   997   000014                     	ds	1
   998   000015                     ??_abs:
   999   000015                     pad@p:
  1000                           	callstack 0
  1001   000015                     ___flmul@a:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x14
  1005   000015                     	ds	1
  1006   000016                     stop@mR:
  1007                           	callstack 0
  1008   000016                     turnLeft@mR:
  1009                           	callstack 0
  1010   000016                     turnRight@mR:
  1011                           	callstack 0
  1012   000016                     fullSpeedAhead@mR:
  1013                           	callstack 0
  1014   000016                     timed_forward@mR:
  1015                           	callstack 0
  1016   000016                     fullSpeedBack@mR:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x15
  1020   000016                     	ds	1
  1021   000017                     ??_pad:
  1022                           
  1023                           ; 1 bytes @ 0x16
  1024   000017                     	ds	1
  1025   000018                     ??_fullSpeedAhead:
  1026   000018                     ??_stop:
  1027   000018                     ??_turnLeft:
  1028   000018                     ??_turnRight:
  1029   000018                     ??_fullSpeedBack:
  1030   000018                     timed_forward@time:
  1031                           	callstack 0
  1032   000018                     pad@i:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x17
  1036   000018                     	ds	1
  1037   000019                     ??___flmul:
  1038                           
  1039                           ; 1 bytes @ 0x18
  1040   000019                     	ds	1
  1041   00001A                     ??_timed_forward:
  1042   00001A                     turnRight45@mL:
  1043                           	callstack 0
  1044   00001A                     turnLeft45@mL:
  1045                           	callstack 0
  1046   00001A                     reverseDetect@mL:
  1047                           	callstack 0
  1048   00001A                     reverseOneBlock@mL:
  1049                           	callstack 0
  1050   00001A                     ForwardOneBlock@mL:
  1051                           	callstack 0
  1052   00001A                     Forwardhalfblock@mL:
  1053                           	callstack 0
  1054   00001A                     RetryMove@mL:
  1055                           	callstack 0
  1056   00001A                     pad@w:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x19
  1060   00001A                     	ds	2
  1061   00001C                     turnRight45@mR:
  1062                           	callstack 0
  1063   00001C                     turnLeft45@mR:
  1064                           	callstack 0
  1065   00001C                     reverseDetect@mR:
  1066                           	callstack 0
  1067   00001C                     reverseOneBlock@mR:
  1068                           	callstack 0
  1069   00001C                     ForwardOneBlock@mR:
  1070                           	callstack 0
  1071   00001C                     Forwardhalfblock@mR:
  1072                           	callstack 0
  1073   00001C                     RetryMove@mR:
  1074                           	callstack 0
  1075   00001C                     dtoa@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x1B
  1079   00001C                     	ds	1
  1080   00001D                     ___flmul@sign:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x1C
  1084   00001D                     	ds	1
  1085   00001E                     ??_Forwardhalfblock:
  1086   00001E                     ??_RetryMove:
  1087   00001E                     ??_turnRight45:
  1088   00001E                     ??_turnLeft45:
  1089   00001E                     ??_reverseDetect:
  1090   00001E                     ??_reverseOneBlock:
  1091   00001E                     ??_ForwardOneBlock:
  1092   00001E                     ___flmul@grs:
  1093                           	callstack 0
  1094   00001E                     dtoa@d:
  1095                           	callstack 0
  1096                           
  1097                           ; 8 bytes @ 0x1D
  1098   00001E                     	ds	2
  1099   000020                     RedMove@mL:
  1100                           	callstack 0
  1101   000020                     GreenMove@mL:
  1102                           	callstack 0
  1103   000020                     BlueMove@mL:
  1104                           	callstack 0
  1105   000020                     YellowMove@mL:
  1106                           	callstack 0
  1107   000020                     PinkMove@mL:
  1108                           	callstack 0
  1109   000020                     OrangeMove@mL:
  1110                           	callstack 0
  1111   000020                     LightBlueMove@mL:
  1112                           	callstack 0
  1113   000020                     ReverseYellow@mL:
  1114                           	callstack 0
  1115   000020                     ReversePink@mL:
  1116                           	callstack 0
  1117   000020                     turnCalibration@mL:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x1F
  1121   000020                     	ds	2
  1122   000022                     ___flmul@aexp:
  1123                           	callstack 0
  1124   000022                     RedMove@mR:
  1125                           	callstack 0
  1126   000022                     GreenMove@mR:
  1127                           	callstack 0
  1128   000022                     BlueMove@mR:
  1129                           	callstack 0
  1130   000022                     YellowMove@mR:
  1131                           	callstack 0
  1132   000022                     PinkMove@mR:
  1133                           	callstack 0
  1134   000022                     OrangeMove@mR:
  1135                           	callstack 0
  1136   000022                     LightBlueMove@mR:
  1137                           	callstack 0
  1138   000022                     ReverseYellow@mR:
  1139                           	callstack 0
  1140   000022                     ReversePink@mR:
  1141                           	callstack 0
  1142   000022                     turnCalibration@mR:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x21
  1146   000022                     	ds	1
  1147   000023                     ___flmul@bexp:
  1148                           	callstack 0
  1149                           
  1150                           ; 1 bytes @ 0x22
  1151   000023                     	ds	1
  1152   000024                     ??_turnCalibration:
  1153   000024                     go_Home@WayBack:
  1154                           	callstack 0
  1155   000024                     ___flmul@prod:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x23
  1159   000024                     	ds	2
  1160   000026                     ??_dtoa:
  1161   000026                     go_Home@Time_forward:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x25
  1165   000026                     	ds	2
  1166   000028                     ??_go_Home:
  1167   000028                     ___flmul@temp:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x27
  1171   000028                     	ds	2
  1172   00002A                     ?___flsub:
  1173                           	callstack 0
  1174   00002A                     ___flge@ff1:
  1175                           	callstack 0
  1176   00002A                     ___flsub@b:
  1177                           	callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x29
  1180   00002A                     	ds	1
  1181   00002B                     go_Home@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x2A
  1185   00002B                     	ds	3
  1186   00002E                     _dtoa$2741:
  1187                           	callstack 0
  1188   00002E                     ___flge@ff2:
  1189                           	callstack 0
  1190   00002E                     ___flsub@a:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x2D
  1194   00002E                     	ds	2
  1195   000030                     dtoa@p:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x2F
  1199   000030                     	ds	2
  1200   000032                     ??___flge:
  1201   000032                     ?___fldiv:
  1202                           	callstack 0
  1203   000032                     dtoa@w:
  1204                           	callstack 0
  1205   000032                     ___fleq@ff1:
  1206                           	callstack 0
  1207   000032                     ___fldiv@b:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x31
  1211   000032                     	ds	2
  1212   000034                     dtoa@n:
  1213                           	callstack 0
  1214                           
  1215                           ; 8 bytes @ 0x33
  1216   000034                     	ds	2
  1217   000036                     ___fleq@ff2:
  1218                           	callstack 0
  1219   000036                     ___fldiv@a:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x35
  1223   000036                     	ds	4
  1224   00003A                     ??___fldiv:
  1225   00003A                     ??___fleq:
  1226                           
  1227                           ; 1 bytes @ 0x39
  1228   00003A                     	ds	2
  1229   00003C                     dtoa@i:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x3B
  1233   00003C                     	ds	2
  1234   00003E                     dtoa@s:
  1235                           	callstack 0
  1236   00003E                     ___fldiv@rem:
  1237                           	callstack 0
  1238                           
  1239                           ; 4 bytes @ 0x3D
  1240   00003E                     	ds	4
  1241   000042                     ___fldiv@sign:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x41
  1245   000042                     	ds	1
  1246   000043                     ___fldiv@new_exp:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x42
  1250   000043                     	ds	2
  1251   000045                     ___fldiv@grs:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x44
  1255   000045                     	ds	4
  1256   000049                     ___fldiv@bexp:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x48
  1260   000049                     	ds	1
  1261   00004A                     ___fldiv@aexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x49
  1265   00004A                     	ds	1
  1266   00004B                     ?_Colour_decider:
  1267                           	callstack 0
  1268   00004B                     ?_floorf:
  1269                           	callstack 0
  1270   00004B                     colour_rel@vals:
  1271                           	callstack 0
  1272   00004B                     Colour_decider@vals:
  1273                           	callstack 0
  1274   00004B                     floorf@x:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x4A
  1278   00004B                     	ds	2
  1279   00004D                     colour_rel@rel:
  1280                           	callstack 0
  1281   00004D                     Colour_decider@rel:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x4C
  1285   00004D                     	ds	2
  1286   00004F                     ??_floorf:
  1287   00004F                     ??_Colour_decider:
  1288                           
  1289                           ; 1 bytes @ 0x4E
  1290   00004F                     	ds	6
  1291   000055                     floorf@m:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x54
  1295   000055                     	ds	4
  1296   000059                     floorf@e:
  1297                           	callstack 0
  1298                           
  1299                           ; 2 bytes @ 0x58
  1300   000059                     	ds	2
  1301   00005B                     floorf@u:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x5A
  1305   00005B                     	ds	4
  1306   00005F                     
  1307                           ; 1 bytes @ 0x5E
  1308 ;;
  1309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1310 ;;
  1311 ;; *************** function _main *****************
  1312 ;; Defined at:
  1313 ;;		line 30 in file "main.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  colour          2  110[BANK1 ] int 
  1318 ;;  colour          2  102[BANK1 ] int 
  1319 ;;  temp            2  100[BANK1 ] int 
  1320 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1321 ;;  prev_colour     2  112[BANK1 ] int 
  1322 ;;  consecuitive    2  108[BANK1 ] int 
  1323 ;;  lost_count      2  106[BANK1 ] int 
  1324 ;;  run_flag        2  104[BANK1 ] int 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1335 ;;      Locals:         0       0     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1336 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1337 ;;      Totals:         0       2     114       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1338 ;;Total ram usage:      116 bytes
  1339 ;; Hardware stack levels required when called: 8
  1340 ;; This function calls:
  1341 ;;		_BlueMove
  1342 ;;		_Colour_decider
  1343 ;;		_Forwardhalfblock
  1344 ;;		_GreenMove
  1345 ;;		_I2C_2_Master_Init
  1346 ;;		_Interrupts_init
  1347 ;;		_LightBlueMove
  1348 ;;		_OrangeMove
  1349 ;;		_PinkMove
  1350 ;;		_RedMove
  1351 ;;		_RetryMove
  1352 ;;		_Timer0_init
  1353 ;;		_YellowMove
  1354 ;;		_color_click_init
  1355 ;;		_colour_rel
  1356 ;;		_fullSpeedAhead
  1357 ;;		_getTMR0val
  1358 ;;		_go_Home
  1359 ;;		_initDCmotorsPWM
  1360 ;;		_initUSART4
  1361 ;;		_readColours
  1362 ;;		_sendStringSerial4
  1363 ;;		_sprintf
  1364 ;;		_stop
  1365 ;;		_turnCalibration
  1366 ;; This function is called by:
  1367 ;;		Startup code after reset
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           	psect	text0
  1372   002328                     __ptext0:
  1373                           	callstack 0
  1374   002328                     _main:
  1375                           	callstack 23
  1376   002328                     
  1377                           ;main.c: 31:     initUSART4();
  1378   002328  ECB0  F030         	call	_initUSART4	;wreg free
  1379   00232C                     
  1380                           ;main.c: 32:     Interrupts_init();
  1381   00232C  ECE5  F030         	call	_Interrupts_init	;wreg free
  1382   002330                     
  1383                           ;main.c: 33:     color_click_init();
  1384   002330  EC39  F02D         	call	_color_click_init	;wreg free
  1385   002334                     
  1386                           ;main.c: 34:     I2C_2_Master_Init();
  1387   002334  EC41  F030         	call	_I2C_2_Master_Init	;wreg free
  1388   002338                     
  1389                           ;main.c: 35:     initDCmotorsPWM(200);
  1390   002338  0E00               	movlw	0
  1391   00233A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1392   00233C  0EC8               	movlw	200
  1393   00233E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1394   002340  EC0F  F02A         	call	_initDCmotorsPWM	;wreg free
  1395   002344                     
  1396                           ;main.c: 36:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1397   002344  9287               	bcf	135,1,c	;volatile
  1398   002346                     
  1399                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1400   002346  9881               	bcf	129,4,c	;volatile
  1401   002348                     
  1402                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1403   002348  9E86               	bcf	134,7,c	;volatile
  1404   00234A                     
  1405                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1406   00234A  8486               	bsf	134,2,c	;volatile
  1407   00234C                     
  1408                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1409   00234C  010E               	movlb	14	; () banked
  1410   00234E  95B4               	bcf	180,2,b	;volatile
  1411   002350                     
  1412                           ; BSR set to: 14
  1413                           ;main.c: 43:     TRISFbits.TRISF3 = 1;
  1414   002350  8686               	bsf	134,3,c	;volatile
  1415   002352                     
  1416                           ; BSR set to: 14
  1417                           ;main.c: 44:     ANSELFbits.ANSELF3=0;
  1418   002352  97B4               	bcf	180,3,b	;volatile
  1419   002354                     
  1420                           ; BSR set to: 14
  1421                           ;main.c: 45:     LATGbits.LATG1=1;
  1422   002354  827F               	bsf	127,1,c	;volatile
  1423   002356                     
  1424                           ; BSR set to: 14
  1425                           ;main.c: 46:     LATAbits.LATA4=1;
  1426   002356  8879               	bsf	121,4,c	;volatile
  1427   002358                     
  1428                           ; BSR set to: 14
  1429                           ;main.c: 47:     LATFbits.LATF7=1;
  1430   002358  8E7E               	bsf	126,7,c	;volatile
  1431   00235A                     
  1432                           ; BSR set to: 14
  1433                           ;main.c: 50:     LATDbits.LATD7=0;
  1434   00235A  9E7C               	bcf	124,7,c	;volatile
  1435   00235C                     
  1436                           ; BSR set to: 14
  1437                           ;main.c: 51:     TRISDbits.TRISD7=0;
  1438   00235C  9E84               	bcf	132,7,c	;volatile
  1439   00235E                     
  1440                           ; BSR set to: 14
  1441                           ;main.c: 52:     LATHbits.LATH3=0;
  1442   00235E  9680               	bcf	128,3,c	;volatile
  1443   002360                     
  1444                           ; BSR set to: 14
  1445                           ;main.c: 53:     TRISHbits.TRISH3=0;
  1446   002360  9688               	bcf	136,3,c	;volatile
  1447   002362                     
  1448                           ; BSR set to: 14
  1449                           ;main.c: 56:     LATHbits.LATH0=0;
  1450   002362  9080               	bcf	128,0,c	;volatile
  1451   002364                     
  1452                           ; BSR set to: 14
  1453                           ;main.c: 57:     TRISHbits.TRISH0=0;
  1454   002364  9088               	bcf	136,0,c	;volatile
  1455   002366                     
  1456                           ; BSR set to: 14
  1457                           ;main.c: 60:     LATFbits.LATF0=0;
  1458   002366  907E               	bcf	126,0,c	;volatile
  1459   002368                     
  1460                           ; BSR set to: 14
  1461                           ;main.c: 61:     TRISFbits.TRISF0=0;
  1462   002368  9086               	bcf	134,0,c	;volatile
  1463   00236A                     
  1464                           ; BSR set to: 14
  1465                           ;main.c: 64:     LATDbits.LATD4=0;
  1466   00236A  987C               	bcf	124,4,c	;volatile
  1467   00236C                     
  1468                           ; BSR set to: 14
  1469                           ;main.c: 65:     TRISDbits.TRISD4=0;
  1470   00236C  9884               	bcf	132,4,c	;volatile
  1471   00236E                     
  1472                           ; BSR set to: 14
  1473                           ;main.c: 68:     LATDbits.LATD3=0;
  1474   00236E  967C               	bcf	124,3,c	;volatile
  1475   002370                     
  1476                           ; BSR set to: 14
  1477                           ;main.c: 69:     TRISDbits.TRISD3=0;
  1478   002370  9684               	bcf	132,3,c	;volatile
  1479   002372                     
  1480                           ; BSR set to: 14
  1481                           ;main.c: 74:     motorL.power=0;
  1482   002372  0E00               	movlw	0
  1483   002374  0101               	movlb	1	; () banked
  1484   002376  6FC7               	movwf	_motorL& (0+255),b
  1485   002378                     
  1486                           ; BSR set to: 1
  1487                           ;main.c: 75:     motorL.direction=1;
  1488   002378  0E01               	movlw	1
  1489   00237A  6FC8               	movwf	(_motorL+1)& (0+255),b
  1490   00237C                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 76:     motorL.brakemode=1;
  1493   00237C  0E01               	movlw	1
  1494   00237E  6FC9               	movwf	(_motorL+2)& (0+255),b
  1495   002380                     
  1496                           ; BSR set to: 1
  1497                           ;main.c: 77:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1498   002380  0EAA               	movlw	170
  1499   002382  6FCC               	movwf	(_motorL+5)& (0+255),b
  1500   002384  0E0F               	movlw	15
  1501   002386  6FCD               	movwf	(_motorL+6)& (0+255),b
  1502   002388                     
  1503                           ; BSR set to: 1
  1504                           ;main.c: 78:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1505   002388  0EA6               	movlw	166
  1506   00238A  6FCE               	movwf	(_motorL+7)& (0+255),b
  1507   00238C  0E0F               	movlw	15
  1508   00238E  6FCF               	movwf	(_motorL+8)& (0+255),b
  1509   002390                     
  1510                           ; BSR set to: 1
  1511                           ;main.c: 79:     motorL.PWMperiod=200;
  1512   002390  0E00               	movlw	0
  1513   002392  6FCB               	movwf	(_motorL+4)& (0+255),b
  1514   002394  0EC8               	movlw	200
  1515   002396  6FCA               	movwf	(_motorL+3)& (0+255),b
  1516   002398                     
  1517                           ; BSR set to: 1
  1518                           ;main.c: 80:     motorR.power=0;
  1519   002398  0E00               	movlw	0
  1520   00239A  6FBE               	movwf	_motorR& (0+255),b
  1521   00239C                     
  1522                           ; BSR set to: 1
  1523                           ;main.c: 81:     motorR.direction=1;
  1524   00239C  0E01               	movlw	1
  1525   00239E  6FBF               	movwf	(_motorR+1)& (0+255),b
  1526   0023A0                     
  1527                           ; BSR set to: 1
  1528                           ;main.c: 82:     motorR.brakemode=1;
  1529   0023A0  0E01               	movlw	1
  1530   0023A2  6FC0               	movwf	(_motorR+2)& (0+255),b
  1531   0023A4                     
  1532                           ; BSR set to: 1
  1533                           ;main.c: 83:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1534   0023A4  0E25               	movlw	37
  1535   0023A6  6FC3               	movwf	(_motorR+5)& (0+255),b
  1536   0023A8  0E0F               	movlw	15
  1537   0023AA  6FC4               	movwf	(_motorR+6)& (0+255),b
  1538   0023AC                     
  1539                           ; BSR set to: 1
  1540                           ;main.c: 84:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1541   0023AC  0E21               	movlw	33
  1542   0023AE  6FC5               	movwf	(_motorR+7)& (0+255),b
  1543   0023B0  0E0F               	movlw	15
  1544   0023B2  6FC6               	movwf	(_motorR+8)& (0+255),b
  1545   0023B4                     
  1546                           ; BSR set to: 1
  1547                           ;main.c: 85:     motorR.PWMperiod=200;
  1548   0023B4  0E00               	movlw	0
  1549   0023B6  6FC2               	movwf	(_motorR+4)& (0+255),b
  1550   0023B8  0EC8               	movlw	200
  1551   0023BA  6FC1               	movwf	(_motorR+3)& (0+255),b
  1552   0023BC                     
  1553                           ; BSR set to: 1
  1554                           ;main.c: 87:     int consecuitive=0;
  1555   0023BC  0E00               	movlw	0
  1556   0023BE  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1557   0023C0  0E00               	movlw	0
  1558   0023C2  6F6C               	movwf	main@consecuitive& (0+255),b
  1559   0023C4                     
  1560                           ; BSR set to: 1
  1561                           ;main.c: 88:     int prev_colour =0;
  1562   0023C4  0E00               	movlw	0
  1563   0023C6  6F71               	movwf	(main@prev_colour+1)& (0+255),b
  1564   0023C8  0E00               	movlw	0
  1565   0023CA  6F70               	movwf	main@prev_colour& (0+255),b
  1566   0023CC                     
  1567                           ; BSR set to: 1
  1568                           ;main.c: 89:     int run_flag=1;
  1569   0023CC  0E00               	movlw	0
  1570   0023CE  6F69               	movwf	(main@run_flag+1)& (0+255),b
  1571   0023D0  0E01               	movlw	1
  1572   0023D2  6F68               	movwf	main@run_flag& (0+255),b
  1573   0023D4                     
  1574                           ; BSR set to: 1
  1575                           ;main.c: 90:     move_count=-1;
  1576   0023D4  697E               	setf	_move_count& (0+255),b	;volatile
  1577   0023D6  697F               	setf	(_move_count+1)& (0+255),b	;volatile
  1578   0023D8                     
  1579                           ; BSR set to: 1
  1580                           ;main.c: 92:     turnCalibration(&motorL,&motorR);
  1581   0023D8  0EC7               	movlw	low _motorL
  1582   0023DA  6E20               	movwf	turnCalibration@mL^0,c
  1583   0023DC  0E01               	movlw	high _motorL
  1584   0023DE  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1585   0023E0  0EBE               	movlw	low _motorR
  1586   0023E2  6E22               	movwf	turnCalibration@mR^0,c
  1587   0023E4  0E01               	movlw	high _motorR
  1588   0023E6  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1589   0023E8  EC94  F021         	call	_turnCalibration	;wreg free
  1590   0023EC                     
  1591                           ;main.c: 94:     LATFbits.LATF0=0;
  1592   0023EC  907E               	bcf	126,0,c	;volatile
  1593   0023EE                     
  1594                           ;main.c: 95:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1595   0023EE  0E52               	movlw	82
  1596   0023F0  0100               	movlb	0	; () banked
  1597   0023F2  6FD0               	movwf	(??_main+1)& (0+255),b
  1598   0023F4  0E2B               	movlw	43
  1599   0023F6  6FCF               	movwf	??_main& (0+255),b
  1600   0023F8  0E00               	movlw	0
  1601   0023FA                     u6027:
  1602   0023FA  2EE8               	decfsz	wreg,f,c
  1603   0023FC  D7FE               	bra	u6027
  1604   0023FE  2FCF               	decfsz	??_main& (0+255),f,b
  1605   002400  D7FC               	bra	u6027
  1606   002402  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1607   002404  D7FA               	bra	u6027
  1608   002406  F000               	nop	
  1609   002408                     l387:
  1610   002408  B48E               	btfsc	142,2,c	;volatile
  1611   00240A  EF09  F012         	goto	u5811
  1612   00240E  EF0B  F012         	goto	u5810
  1613   002412                     u5811:
  1614   002412  EF04  F012         	goto	l387
  1615   002416                     u5810:
  1616   002416                     
  1617                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1618   002416  0E52               	movlw	82
  1619   002418  0100               	movlb	0	; () banked
  1620   00241A  6FD0               	movwf	(??_main+1)& (0+255),b
  1621   00241C  0E2B               	movlw	43
  1622   00241E  6FCF               	movwf	??_main& (0+255),b
  1623   002420  0E00               	movlw	0
  1624   002422                     u6037:
  1625   002422  2EE8               	decfsz	wreg,f,c
  1626   002424  D7FE               	bra	u6037
  1627   002426  2FCF               	decfsz	??_main& (0+255),f,b
  1628   002428  D7FC               	bra	u6037
  1629   00242A  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1630   00242C  D7FA               	bra	u6037
  1631   00242E  F000               	nop	
  1632   002430                     
  1633                           ;main.c: 99:     Timer0_init();
  1634   002430  ECA0  F030         	call	_Timer0_init	;wreg free
  1635                           
  1636                           ;main.c: 100:     while (run_flag)
  1637   002434  EF8E  F014         	goto	l6013
  1638   002438                     l5869:
  1639                           
  1640                           ; BSR set to: 1
  1641                           ;main.c: 101:     {;main.c: 102:         TMR0H=0;
  1642   002438  0E00               	movlw	0
  1643   00243A  6ED4               	movwf	212,c	;volatile
  1644                           
  1645                           ;main.c: 103:         TMR0L=0;
  1646   00243C  0E00               	movlw	0
  1647   00243E  6ED3               	movwf	211,c	;volatile
  1648                           
  1649                           ;main.c: 104:         lost_count=0;
  1650   002440  0E00               	movlw	0
  1651   002442  6F6B               	movwf	(main@lost_count+1)& (0+255),b
  1652   002444  0E00               	movlw	0
  1653   002446  6F6A               	movwf	main@lost_count& (0+255),b
  1654   002448                     
  1655                           ; BSR set to: 1
  1656                           ;main.c: 105:         fullSpeedAhead(&motorL,&motorR);
  1657   002448  0EC7               	movlw	low _motorL
  1658   00244A  6E14               	movwf	fullSpeedAhead@mL^0,c
  1659   00244C  0E01               	movlw	high _motorL
  1660   00244E  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1661   002450  0EBE               	movlw	low _motorR
  1662   002452  6E16               	movwf	fullSpeedAhead@mR^0,c
  1663   002454  0E01               	movlw	high _motorR
  1664   002456  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1665   002458  ECC0  F029         	call	_fullSpeedAhead	;wreg free
  1666   00245C                     
  1667                           ;main.c: 107:         readColours(&vals);
  1668   00245C  0ED0               	movlw	low _vals
  1669   00245E  6E0C               	movwf	readColours@vals^0,c
  1670   002460  0E01               	movlw	high _vals
  1671   002462  6E0D               	movwf	(readColours@vals+1)^0,c
  1672   002464  ECB0  F02B         	call	_readColours	;wreg free
  1673   002468                     
  1674                           ;main.c: 110:         colour_rel(&vals, &rel);
  1675   002468  0ED0               	movlw	low _vals
  1676   00246A  6E4B               	movwf	colour_rel@vals^0,c
  1677   00246C  0E01               	movlw	high _vals
  1678   00246E  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1679   002470  0EB2               	movlw	low _rel
  1680   002472  6E4D               	movwf	colour_rel@rel^0,c
  1681   002474  0E01               	movlw	high _rel
  1682   002476  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1683   002478  ECDC  F01A         	call	_colour_rel	;wreg free
  1684   00247C                     
  1685                           ;main.c: 113:         if (vals.L>=500){
  1686   00247C  0101               	movlb	1	; () banked
  1687   00247E  BFD7               	btfsc	(_vals+7)& (0+255),7,b
  1688   002480  EF4B  F012         	goto	u5821
  1689   002484  0EF4               	movlw	244
  1690   002486  5DD6               	subwf	(_vals+6)& (0+255),w,b
  1691   002488  0E01               	movlw	1
  1692   00248A  59D7               	subwfb	(_vals+7)& (0+255),w,b
  1693   00248C  A0D8               	btfss	status,0,c
  1694   00248E  EF4B  F012         	goto	u5821
  1695   002492  EF4D  F012         	goto	u5820
  1696   002496                     u5821:
  1697   002496  EF52  F014         	goto	l6005
  1698   00249A                     u5820:
  1699   00249A                     
  1700                           ; BSR set to: 1
  1701                           ;main.c: 114:             move_count++;
  1702   00249A  4B7E               	infsnz	_move_count& (0+255),f,b	;volatile
  1703   00249C  2B7F               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1704   00249E                     
  1705                           ; BSR set to: 1
  1706                           ;main.c: 115:             getTMR0val();
  1707   00249E  EC6A  F030         	call	_getTMR0val	;wreg free
  1708   0024A2                     
  1709                           ;main.c: 117:             Forwardhalfblock(&motorL,&motorR);
  1710   0024A2  0EC7               	movlw	low _motorL
  1711   0024A4  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1712   0024A6  0E01               	movlw	high _motorL
  1713   0024A8  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1714   0024AA  0EBE               	movlw	low _motorR
  1715   0024AC  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1716   0024AE  0E01               	movlw	high _motorR
  1717   0024B0  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1718   0024B2  EC66  F02C         	call	_Forwardhalfblock	;wreg free
  1719   0024B6                     
  1720                           ;main.c: 119:             stop(&motorL, &motorR);
  1721   0024B6  0EC7               	movlw	low _motorL
  1722   0024B8  6E14               	movwf	stop@mL^0,c
  1723   0024BA  0E01               	movlw	high _motorL
  1724   0024BC  6E15               	movwf	(stop@mL+1)^0,c
  1725   0024BE  0EBE               	movlw	low _motorR
  1726   0024C0  6E16               	movwf	stop@mR^0,c
  1727   0024C2  0E01               	movlw	high _motorR
  1728   0024C4  6E17               	movwf	(stop@mR+1)^0,c
  1729   0024C6  EC94  F02A         	call	_stop	;wreg free
  1730   0024CA                     
  1731                           ;main.c: 120:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1732   0024CA  0E11               	movlw	17
  1733   0024CC  0100               	movlb	0	; () banked
  1734   0024CE  6FD0               	movwf	(??_main+1)& (0+255),b
  1735   0024D0  0E3C               	movlw	60
  1736   0024D2  6FCF               	movwf	??_main& (0+255),b
  1737   0024D4  0ECB               	movlw	203
  1738   0024D6                     u6047:
  1739   0024D6  2EE8               	decfsz	wreg,f,c
  1740   0024D8  D7FE               	bra	u6047
  1741   0024DA  2FCF               	decfsz	??_main& (0+255),f,b
  1742   0024DC  D7FC               	bra	u6047
  1743   0024DE  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1744   0024E0  D7FA               	bra	u6047
  1745                           
  1746                           ;main.c: 127:             while (consecuitive<3){
  1747   0024E2  EFB0  F012         	goto	l5903
  1748   0024E6                     l5889:
  1749                           
  1750                           ; BSR set to: 1
  1751                           ;main.c: 128:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1752   0024E6  0E05               	movlw	5
  1753   0024E8  0100               	movlb	0	; () banked
  1754   0024EA  6FD0               	movwf	(??_main+1)& (0+255),b
  1755   0024EC  0E0F               	movlw	15
  1756   0024EE  6FCF               	movwf	??_main& (0+255),b
  1757   0024F0  0EF1               	movlw	241
  1758   0024F2                     u6057:
  1759   0024F2  2EE8               	decfsz	wreg,f,c
  1760   0024F4  D7FE               	bra	u6057
  1761   0024F6  2FCF               	decfsz	??_main& (0+255),f,b
  1762   0024F8  D7FC               	bra	u6057
  1763   0024FA  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1764   0024FC  D7FA               	bra	u6057
  1765   0024FE                     
  1766                           ;main.c: 129:                 int colour = Colour_decider(&vals, &rel);
  1767   0024FE  0ED0               	movlw	low _vals
  1768   002500  6E4B               	movwf	Colour_decider@vals^0,c
  1769   002502  0E01               	movlw	high _vals
  1770   002504  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1771   002506  0EB2               	movlw	low _rel
  1772   002508  6E4D               	movwf	Colour_decider@rel^0,c
  1773   00250A  0E01               	movlw	high _rel
  1774   00250C  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1775   00250E  EC29  F007         	call	_Colour_decider	;wreg free
  1776   002512  C04B  F16E         	movff	?_Colour_decider,main@colour
  1777   002516  C04C  F16F         	movff	?_Colour_decider+1,main@colour+1
  1778   00251A                     
  1779                           ;main.c: 130:                 if (colour==prev_colour){
  1780   00251A  0101               	movlb	1	; () banked
  1781   00251C  5170               	movf	main@prev_colour& (0+255),w,b
  1782   00251E  196E               	xorwf	main@colour& (0+255),w,b
  1783   002520  E107               	bnz	u5831
  1784   002522  5171               	movf	(main@prev_colour+1)& (0+255),w,b
  1785   002524  196F               	xorwf	(main@colour+1)& (0+255),w,b
  1786   002526  A4D8               	btfss	status,2,c
  1787   002528  EF98  F012         	goto	u5831
  1788   00252C  EF9A  F012         	goto	u5830
  1789   002530                     u5831:
  1790   002530  EF9E  F012         	goto	l5897
  1791   002534                     u5830:
  1792   002534                     
  1793                           ; BSR set to: 1
  1794                           ;main.c: 131:                     consecuitive++;
  1795   002534  4B6C               	infsnz	main@consecuitive& (0+255),f,b
  1796   002536  2B6D               	incf	(main@consecuitive+1)& (0+255),f,b
  1797                           
  1798                           ;main.c: 132:                 }
  1799   002538  EFA2  F012         	goto	l5899
  1800   00253C                     l5897:
  1801                           
  1802                           ; BSR set to: 1
  1803                           ;main.c: 134:                     consecuitive=0;
  1804   00253C  0E00               	movlw	0
  1805   00253E  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1806   002540  0E00               	movlw	0
  1807   002542  6F6C               	movwf	main@consecuitive& (0+255),b
  1808   002544                     l5899:
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 136:                 prev_colour=colour;
  1812   002544  C16E  F170         	movff	main@colour,main@prev_colour
  1813   002548  C16F  F171         	movff	main@colour+1,main@prev_colour+1
  1814   00254C                     
  1815                           ; BSR set to: 1
  1816                           ;main.c: 137:                 RetryMove(&motorL, &motorR);
  1817   00254C  0EC7               	movlw	low _motorL
  1818   00254E  6E1A               	movwf	RetryMove@mL^0,c
  1819   002550  0E01               	movlw	high _motorL
  1820   002552  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1821   002554  0EBE               	movlw	low _motorR
  1822   002556  6E1C               	movwf	RetryMove@mR^0,c
  1823   002558  0E01               	movlw	high _motorR
  1824   00255A  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1825   00255C  EC53  F02A         	call	_RetryMove	;wreg free
  1826   002560                     l5903:
  1827                           
  1828                           ;main.c: 127:             while (consecuitive<3){
  1829   002560  0101               	movlb	1	; () banked
  1830   002562  BF6D               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1831   002564  EFBD  F012         	goto	u5841
  1832   002568  516D               	movf	(main@consecuitive+1)& (0+255),w,b
  1833   00256A  E109               	bnz	u5840
  1834   00256C  0E03               	movlw	3
  1835   00256E  5D6C               	subwf	main@consecuitive& (0+255),w,b
  1836   002570  A0D8               	btfss	status,0,c
  1837   002572  EFBD  F012         	goto	u5841
  1838   002576  EFBF  F012         	goto	u5840
  1839   00257A                     u5841:
  1840   00257A  EF73  F012         	goto	l5889
  1841   00257E                     u5840:
  1842   00257E                     
  1843                           ; BSR set to: 1
  1844                           ;main.c: 139:             consecuitive=0;
  1845   00257E  0E00               	movlw	0
  1846   002580  6F6D               	movwf	(main@consecuitive+1)& (0+255),b
  1847   002582  0E00               	movlw	0
  1848   002584  6F6C               	movwf	main@consecuitive& (0+255),b
  1849   002586                     
  1850                           ; BSR set to: 1
  1851                           ;main.c: 140:             int temp=TMR0L;
  1852   002586  CFD3 F164          	movff	4051,main@temp	;volatile
  1853   00258A  6B65               	clrf	(main@temp+1)& (0+255),b
  1854   00258C                     
  1855                           ; BSR set to: 1
  1856                           ;main.c: 141:             sprintf(buf,"red=%d green=%d blue=%d colour=%d \r\n",vals.R, v
      +                          als.G,vals.B,TMR0H);
  1857   00258C  0E00               	movlw	low main@buf
  1858   00258E  0100               	movlb	0	; () banked
  1859   002590  6FB0               	movwf	sprintf@s& (0+255),b
  1860   002592  0E01               	movlw	high main@buf
  1861   002594  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1862   002596  0E01               	movlw	low STR_1
  1863   002598  6FB2               	movwf	sprintf@fmt& (0+255),b
  1864   00259A  0E0E               	movlw	high STR_1
  1865   00259C  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1866   00259E  C1D0  F0B4         	movff	_vals,?_sprintf+4
  1867   0025A2  C1D1  F0B5         	movff	_vals+1,?_sprintf+5
  1868   0025A6  C1D2  F0B6         	movff	_vals+2,?_sprintf+6
  1869   0025AA  C1D3  F0B7         	movff	_vals+3,?_sprintf+7
  1870   0025AE  C1D4  F0B8         	movff	_vals+4,?_sprintf+8
  1871   0025B2  C1D5  F0B9         	movff	_vals+5,?_sprintf+9
  1872   0025B6  CFD4 F0BA          	movff	4052,?_sprintf+10	;volatile
  1873   0025BA  6BBB               	clrf	(?_sprintf+11)& (0+255),b
  1874   0025BC  ECBE  F02C         	call	_sprintf	;wreg free
  1875   0025C0                     
  1876                           ;main.c: 144:             sendStringSerial4(buf);
  1877   0025C0  0E00               	movlw	low main@buf
  1878   0025C2  6E02               	movwf	sendStringSerial4@string^0,c
  1879   0025C4  0E01               	movlw	high main@buf
  1880   0025C6  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1881   0025C8  EC29  F030         	call	_sendStringSerial4	;wreg free
  1882   0025CC                     
  1883                           ;main.c: 146:             if (prev_colour==1){
  1884   0025CC  0101               	movlb	1	; () banked
  1885   0025CE  0570               	decf	main@prev_colour& (0+255),w,b
  1886   0025D0  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1887   0025D2  A4D8               	btfss	status,2,c
  1888   0025D4  EFEE  F012         	goto	u5851
  1889   0025D8  EFF0  F012         	goto	u5850
  1890   0025DC                     u5851:
  1891   0025DC  EF09  F013         	goto	l5923
  1892   0025E0                     u5850:
  1893   0025E0                     
  1894                           ; BSR set to: 1
  1895                           ;main.c: 147:                 RedMove(&motorL, &motorR);
  1896   0025E0  0EC7               	movlw	low _motorL
  1897   0025E2  6E20               	movwf	RedMove@mL^0,c
  1898   0025E4  0E01               	movlw	high _motorL
  1899   0025E6  6E21               	movwf	(RedMove@mL+1)^0,c
  1900   0025E8  0EBE               	movlw	low _motorR
  1901   0025EA  6E22               	movwf	RedMove@mR^0,c
  1902   0025EC  0E01               	movlw	high _motorR
  1903   0025EE  6E23               	movwf	(RedMove@mR+1)^0,c
  1904   0025F0  EC98  F02F         	call	_RedMove	;wreg free
  1905   0025F4                     
  1906                           ;main.c: 148:                 TMR0H=0;
  1907   0025F4  0E00               	movlw	0
  1908   0025F6  6ED4               	movwf	212,c	;volatile
  1909   0025F8                     
  1910                           ;main.c: 149:                 TMR0L=0;
  1911   0025F8  0E00               	movlw	0
  1912   0025FA  6ED3               	movwf	211,c	;volatile
  1913   0025FC                     
  1914                           ;main.c: 150:                 WayBack[move_count]=1;
  1915   0025FC  0E80               	movlw	low _WayBack
  1916   0025FE  0101               	movlb	1	; () banked
  1917   002600  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1918   002602  6ED9               	movwf	fsr2l,c
  1919   002604  0E01               	movlw	high _WayBack
  1920   002606  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1921   002608  6EDA               	movwf	fsr2h,c
  1922   00260A  0E01               	movlw	1
  1923   00260C  6EDF               	movwf	indf2,c
  1924                           
  1925                           ;main.c: 151:             }
  1926   00260E  EF8E  F014         	goto	l6013
  1927   002612                     l5923:
  1928                           
  1929                           ; BSR set to: 1
  1930   002612  0E02               	movlw	2
  1931   002614  1970               	xorwf	main@prev_colour& (0+255),w,b
  1932   002616  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1933   002618  A4D8               	btfss	status,2,c
  1934   00261A  EF11  F013         	goto	u5861
  1935   00261E  EF13  F013         	goto	u5860
  1936   002622                     u5861:
  1937   002622  EF2C  F013         	goto	l5933
  1938   002626                     u5860:
  1939   002626                     
  1940                           ; BSR set to: 1
  1941                           ;main.c: 153:                 OrangeMove(&motorL, &motorR);
  1942   002626  0EC7               	movlw	low _motorL
  1943   002628  6E20               	movwf	OrangeMove@mL^0,c
  1944   00262A  0E01               	movlw	high _motorL
  1945   00262C  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1946   00262E  0EBE               	movlw	low _motorR
  1947   002630  6E22               	movwf	OrangeMove@mR^0,c
  1948   002632  0E01               	movlw	high _motorR
  1949   002634  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1950   002636  ECE7  F02C         	call	_OrangeMove	;wreg free
  1951   00263A                     
  1952                           ;main.c: 154:                 TMR0H=0;
  1953   00263A  0E00               	movlw	0
  1954   00263C  6ED4               	movwf	212,c	;volatile
  1955   00263E                     
  1956                           ;main.c: 155:                 TMR0L=0;
  1957   00263E  0E00               	movlw	0
  1958   002640  6ED3               	movwf	211,c	;volatile
  1959   002642                     
  1960                           ;main.c: 156:                 WayBack[move_count]=2;
  1961   002642  0E80               	movlw	low _WayBack
  1962   002644  0101               	movlb	1	; () banked
  1963   002646  257E               	addwf	_move_count& (0+255),w,b	;volatile
  1964   002648  6ED9               	movwf	fsr2l,c
  1965   00264A  0E01               	movlw	high _WayBack
  1966   00264C  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1967   00264E  6EDA               	movwf	fsr2h,c
  1968   002650  0E02               	movlw	2
  1969   002652  6EDF               	movwf	indf2,c
  1970                           
  1971                           ;main.c: 157:             }
  1972   002654  EF8E  F014         	goto	l6013
  1973   002658                     l5933:
  1974                           
  1975                           ; BSR set to: 1
  1976   002658  0E03               	movlw	3
  1977   00265A  1970               	xorwf	main@prev_colour& (0+255),w,b
  1978   00265C  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1979   00265E  A4D8               	btfss	status,2,c
  1980   002660  EF34  F013         	goto	u5871
  1981   002664  EF36  F013         	goto	u5870
  1982   002668                     u5871:
  1983   002668  EF4F  F013         	goto	l5943
  1984   00266C                     u5870:
  1985   00266C                     
  1986                           ; BSR set to: 1
  1987                           ;main.c: 159:                 YellowMove(&motorL, &motorR);
  1988   00266C  0EC7               	movlw	low _motorL
  1989   00266E  6E20               	movwf	YellowMove@mL^0,c
  1990   002670  0E01               	movlw	high _motorL
  1991   002672  6E21               	movwf	(YellowMove@mL+1)^0,c
  1992   002674  0EBE               	movlw	low _motorR
  1993   002676  6E22               	movwf	YellowMove@mR^0,c
  1994   002678  0E01               	movlw	high _motorR
  1995   00267A  6E23               	movwf	(YellowMove@mR+1)^0,c
  1996   00267C  EC62  F02D         	call	_YellowMove	;wreg free
  1997   002680                     
  1998                           ;main.c: 160:                 TMR0H=0;
  1999   002680  0E00               	movlw	0
  2000   002682  6ED4               	movwf	212,c	;volatile
  2001   002684                     
  2002                           ;main.c: 161:                 TMR0L=0;
  2003   002684  0E00               	movlw	0
  2004   002686  6ED3               	movwf	211,c	;volatile
  2005   002688                     
  2006                           ;main.c: 162:                 WayBack[move_count]=3;
  2007   002688  0E80               	movlw	low _WayBack
  2008   00268A  0101               	movlb	1	; () banked
  2009   00268C  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2010   00268E  6ED9               	movwf	fsr2l,c
  2011   002690  0E01               	movlw	high _WayBack
  2012   002692  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2013   002694  6EDA               	movwf	fsr2h,c
  2014   002696  0E03               	movlw	3
  2015   002698  6EDF               	movwf	indf2,c
  2016                           
  2017                           ;main.c: 163:             }
  2018   00269A  EF8E  F014         	goto	l6013
  2019   00269E                     l5943:
  2020                           
  2021                           ; BSR set to: 1
  2022   00269E  0E04               	movlw	4
  2023   0026A0  1970               	xorwf	main@prev_colour& (0+255),w,b
  2024   0026A2  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2025   0026A4  A4D8               	btfss	status,2,c
  2026   0026A6  EF57  F013         	goto	u5881
  2027   0026AA  EF59  F013         	goto	u5880
  2028   0026AE                     u5881:
  2029   0026AE  EF72  F013         	goto	l5953
  2030   0026B2                     u5880:
  2031   0026B2                     
  2032                           ; BSR set to: 1
  2033                           ;main.c: 165:                 BlueMove(&motorL, &motorR);
  2034   0026B2  0EC7               	movlw	low _motorL
  2035   0026B4  6E20               	movwf	BlueMove@mL^0,c
  2036   0026B6  0E01               	movlw	high _motorL
  2037   0026B8  6E21               	movwf	(BlueMove@mL+1)^0,c
  2038   0026BA  0EBE               	movlw	low _motorR
  2039   0026BC  6E22               	movwf	BlueMove@mR^0,c
  2040   0026BE  0E01               	movlw	high _motorR
  2041   0026C0  6E23               	movwf	(BlueMove@mR+1)^0,c
  2042   0026C2  EC7D  F02B         	call	_BlueMove	;wreg free
  2043   0026C6                     
  2044                           ;main.c: 166:                 TMR0H=0;
  2045   0026C6  0E00               	movlw	0
  2046   0026C8  6ED4               	movwf	212,c	;volatile
  2047   0026CA                     
  2048                           ;main.c: 167:                 TMR0L=0;
  2049   0026CA  0E00               	movlw	0
  2050   0026CC  6ED3               	movwf	211,c	;volatile
  2051   0026CE                     
  2052                           ;main.c: 168:                 WayBack[move_count]=4;
  2053   0026CE  0E80               	movlw	low _WayBack
  2054   0026D0  0101               	movlb	1	; () banked
  2055   0026D2  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2056   0026D4  6ED9               	movwf	fsr2l,c
  2057   0026D6  0E01               	movlw	high _WayBack
  2058   0026D8  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2059   0026DA  6EDA               	movwf	fsr2h,c
  2060   0026DC  0E04               	movlw	4
  2061   0026DE  6EDF               	movwf	indf2,c
  2062                           
  2063                           ;main.c: 169:             }
  2064   0026E0  EF8E  F014         	goto	l6013
  2065   0026E4                     l5953:
  2066                           
  2067                           ; BSR set to: 1
  2068   0026E4  0E05               	movlw	5
  2069   0026E6  1970               	xorwf	main@prev_colour& (0+255),w,b
  2070   0026E8  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2071   0026EA  A4D8               	btfss	status,2,c
  2072   0026EC  EF7A  F013         	goto	u5891
  2073   0026F0  EF7C  F013         	goto	u5890
  2074   0026F4                     u5891:
  2075   0026F4  EF95  F013         	goto	l5963
  2076   0026F8                     u5890:
  2077   0026F8                     
  2078                           ; BSR set to: 1
  2079                           ;main.c: 171:                 GreenMove(&motorL, &motorR);
  2080   0026F8  0EC7               	movlw	low _motorL
  2081   0026FA  6E20               	movwf	GreenMove@mL^0,c
  2082   0026FC  0E01               	movlw	high _motorL
  2083   0026FE  6E21               	movwf	(GreenMove@mL+1)^0,c
  2084   002700  0EBE               	movlw	low _motorR
  2085   002702  6E22               	movwf	GreenMove@mR^0,c
  2086   002704  0E01               	movlw	high _motorR
  2087   002706  6E23               	movwf	(GreenMove@mR+1)^0,c
  2088   002708  ECB7  F02F         	call	_GreenMove	;wreg free
  2089   00270C                     
  2090                           ;main.c: 172:                 TMR0H=0;
  2091   00270C  0E00               	movlw	0
  2092   00270E  6ED4               	movwf	212,c	;volatile
  2093   002710                     
  2094                           ;main.c: 173:                 TMR0L=0;
  2095   002710  0E00               	movlw	0
  2096   002712  6ED3               	movwf	211,c	;volatile
  2097   002714                     
  2098                           ;main.c: 174:                 WayBack[move_count]=5;
  2099   002714  0E80               	movlw	low _WayBack
  2100   002716  0101               	movlb	1	; () banked
  2101   002718  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2102   00271A  6ED9               	movwf	fsr2l,c
  2103   00271C  0E01               	movlw	high _WayBack
  2104   00271E  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2105   002720  6EDA               	movwf	fsr2h,c
  2106   002722  0E05               	movlw	5
  2107   002724  6EDF               	movwf	indf2,c
  2108                           
  2109                           ;main.c: 175:             }
  2110   002726  EF8E  F014         	goto	l6013
  2111   00272A                     l5963:
  2112                           
  2113                           ; BSR set to: 1
  2114   00272A  0E06               	movlw	6
  2115   00272C  1970               	xorwf	main@prev_colour& (0+255),w,b
  2116   00272E  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2117   002730  A4D8               	btfss	status,2,c
  2118   002732  EF9D  F013         	goto	u5901
  2119   002736  EF9F  F013         	goto	u5900
  2120   00273A                     u5901:
  2121   00273A  EFB8  F013         	goto	l5973
  2122   00273E                     u5900:
  2123   00273E                     
  2124                           ; BSR set to: 1
  2125                           ;main.c: 177:                 LightBlueMove(&motorL, &motorR);
  2126   00273E  0EC7               	movlw	low _motorL
  2127   002740  6E20               	movwf	LightBlueMove@mL^0,c
  2128   002742  0E01               	movlw	high _motorL
  2129   002744  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  2130   002746  0EBE               	movlw	low _motorR
  2131   002748  6E22               	movwf	LightBlueMove@mR^0,c
  2132   00274A  0E01               	movlw	high _motorR
  2133   00274C  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  2134   00274E  EC10  F02D         	call	_LightBlueMove	;wreg free
  2135   002752                     
  2136                           ;main.c: 178:                 TMR0H=0;
  2137   002752  0E00               	movlw	0
  2138   002754  6ED4               	movwf	212,c	;volatile
  2139   002756                     
  2140                           ;main.c: 179:                 TMR0L=0;
  2141   002756  0E00               	movlw	0
  2142   002758  6ED3               	movwf	211,c	;volatile
  2143   00275A                     
  2144                           ;main.c: 180:                 WayBack[move_count]=6;
  2145   00275A  0E80               	movlw	low _WayBack
  2146   00275C  0101               	movlb	1	; () banked
  2147   00275E  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2148   002760  6ED9               	movwf	fsr2l,c
  2149   002762  0E01               	movlw	high _WayBack
  2150   002764  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2151   002766  6EDA               	movwf	fsr2h,c
  2152   002768  0E06               	movlw	6
  2153   00276A  6EDF               	movwf	indf2,c
  2154                           
  2155                           ;main.c: 181:             }
  2156   00276C  EF8E  F014         	goto	l6013
  2157   002770                     l5973:
  2158                           
  2159                           ; BSR set to: 1
  2160   002770  0E07               	movlw	7
  2161   002772  1970               	xorwf	main@prev_colour& (0+255),w,b
  2162   002774  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2163   002776  A4D8               	btfss	status,2,c
  2164   002778  EFC0  F013         	goto	u5911
  2165   00277C  EFC2  F013         	goto	u5910
  2166   002780                     u5911:
  2167   002780  EFDB  F013         	goto	l5983
  2168   002784                     u5910:
  2169   002784                     
  2170                           ; BSR set to: 1
  2171                           ;main.c: 183:                 PinkMove(&motorL, &motorR);
  2172   002784  0EC7               	movlw	low _motorL
  2173   002786  6E20               	movwf	PinkMove@mL^0,c
  2174   002788  0E01               	movlw	high _motorL
  2175   00278A  6E21               	movwf	(PinkMove@mL+1)^0,c
  2176   00278C  0EBE               	movlw	low _motorR
  2177   00278E  6E22               	movwf	PinkMove@mR^0,c
  2178   002790  0E01               	movlw	high _motorR
  2179   002792  6E23               	movwf	(PinkMove@mR+1)^0,c
  2180   002794  EC8B  F02D         	call	_PinkMove	;wreg free
  2181   002798                     
  2182                           ;main.c: 184:                 TMR0H=0;
  2183   002798  0E00               	movlw	0
  2184   00279A  6ED4               	movwf	212,c	;volatile
  2185   00279C                     
  2186                           ;main.c: 185:                 TMR0L=0;
  2187   00279C  0E00               	movlw	0
  2188   00279E  6ED3               	movwf	211,c	;volatile
  2189   0027A0                     
  2190                           ;main.c: 186:                 WayBack[move_count]=7;
  2191   0027A0  0E80               	movlw	low _WayBack
  2192   0027A2  0101               	movlb	1	; () banked
  2193   0027A4  257E               	addwf	_move_count& (0+255),w,b	;volatile
  2194   0027A6  6ED9               	movwf	fsr2l,c
  2195   0027A8  0E01               	movlw	high _WayBack
  2196   0027AA  217F               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2197   0027AC  6EDA               	movwf	fsr2h,c
  2198   0027AE  0E07               	movlw	7
  2199   0027B0  6EDF               	movwf	indf2,c
  2200                           
  2201                           ;main.c: 187:             }
  2202   0027B2  EF8E  F014         	goto	l6013
  2203   0027B6                     l5983:
  2204                           
  2205                           ; BSR set to: 1
  2206   0027B6  0E0A               	movlw	10
  2207   0027B8  1970               	xorwf	main@prev_colour& (0+255),w,b
  2208   0027BA  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2209   0027BC  A4D8               	btfss	status,2,c
  2210   0027BE  EFE3  F013         	goto	u5921
  2211   0027C2  EFE5  F013         	goto	u5920
  2212   0027C6                     u5921:
  2213   0027C6  EF21  F014         	goto	l5997
  2214   0027CA                     u5920:
  2215   0027CA                     
  2216                           ; BSR set to: 1
  2217                           ;main.c: 189:                 lost_count++;
  2218   0027CA  4B6A               	infsnz	main@lost_count& (0+255),f,b
  2219   0027CC  2B6B               	incf	(main@lost_count+1)& (0+255),f,b
  2220   0027CE                     
  2221                           ; BSR set to: 1
  2222                           ;main.c: 190:                 if (lost_count==4){
  2223   0027CE  0E04               	movlw	4
  2224   0027D0  196A               	xorwf	main@lost_count& (0+255),w,b
  2225   0027D2  116B               	iorwf	(main@lost_count+1)& (0+255),w,b
  2226   0027D4  A4D8               	btfss	status,2,c
  2227   0027D6  EFEF  F013         	goto	u5931
  2228   0027DA  EFF1  F013         	goto	u5930
  2229   0027DE                     u5931:
  2230   0027DE  EF15  F014         	goto	l5995
  2231   0027E2                     u5930:
  2232   0027E2                     
  2233                           ; BSR set to: 1
  2234                           ;main.c: 191:                     BlueMove(&motorL, &motorR);
  2235   0027E2  0EC7               	movlw	low _motorL
  2236   0027E4  6E20               	movwf	BlueMove@mL^0,c
  2237   0027E6  0E01               	movlw	high _motorL
  2238   0027E8  6E21               	movwf	(BlueMove@mL+1)^0,c
  2239   0027EA  0EBE               	movlw	low _motorR
  2240   0027EC  6E22               	movwf	BlueMove@mR^0,c
  2241   0027EE  0E01               	movlw	high _motorR
  2242   0027F0  6E23               	movwf	(BlueMove@mR+1)^0,c
  2243   0027F2  EC7D  F02B         	call	_BlueMove	;wreg free
  2244   0027F6                     
  2245                           ;main.c: 192:                     T0CON0bits.T0EN=0;
  2246   0027F6  9ED5               	bcf	213,7,c	;volatile
  2247                           
  2248                           ;main.c: 193:                     go_Home(WayBack, Time_forward);
  2249   0027F8  0E80               	movlw	low _WayBack
  2250   0027FA  6E24               	movwf	go_Home@WayBack^0,c
  2251   0027FC  0E01               	movlw	high _WayBack
  2252   0027FE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2253   002800  0E3C               	movlw	low _Time_forward
  2254   002802  6E26               	movwf	go_Home@Time_forward^0,c
  2255   002804  0E02               	movlw	high _Time_forward
  2256   002806  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2257   002808  ECF6  F01D         	call	_go_Home	;wreg free
  2258                           
  2259                           ;main.c: 194:                     stop(&motorL, &motorR);
  2260   00280C  0EC7               	movlw	low _motorL
  2261   00280E  6E14               	movwf	stop@mL^0,c
  2262   002810  0E01               	movlw	high _motorL
  2263   002812  6E15               	movwf	(stop@mL+1)^0,c
  2264   002814  0EBE               	movlw	low _motorR
  2265   002816  6E16               	movwf	stop@mR^0,c
  2266   002818  0E01               	movlw	high _motorR
  2267   00281A  6E17               	movwf	(stop@mR+1)^0,c
  2268   00281C  EC94  F02A         	call	_stop	;wreg free
  2269   002820                     
  2270                           ;main.c: 195:                     run_flag=0;
  2271   002820  0E00               	movlw	0
  2272   002822  0101               	movlb	1	; () banked
  2273   002824  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2274   002826  0E00               	movlw	0
  2275   002828  6F68               	movwf	main@run_flag& (0+255),b
  2276   00282A                     l5995:
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;main.c: 197:                 RetryMove(&motorL, &motorR);
  2280   00282A  0EC7               	movlw	low _motorL
  2281   00282C  6E1A               	movwf	RetryMove@mL^0,c
  2282   00282E  0E01               	movlw	high _motorL
  2283   002830  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2284   002832  0EBE               	movlw	low _motorR
  2285   002834  6E1C               	movwf	RetryMove@mR^0,c
  2286   002836  0E01               	movlw	high _motorR
  2287   002838  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2288   00283A  EC53  F02A         	call	_RetryMove	;wreg free
  2289                           
  2290                           ;main.c: 198:             }
  2291   00283E  EF8E  F014         	goto	l6013
  2292   002842                     l5997:
  2293                           
  2294                           ; BSR set to: 1
  2295   002842  5170               	movf	main@prev_colour& (0+255),w,b
  2296   002844  1171               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2297   002846  A4D8               	btfss	status,2,c
  2298   002848  EF28  F014         	goto	u5941
  2299   00284C  EF2A  F014         	goto	u5940
  2300   002850                     u5941:
  2301   002850  EF50  F014         	goto	l409
  2302   002854                     u5940:
  2303   002854                     
  2304                           ; BSR set to: 1
  2305                           ;main.c: 200:                 BlueMove(&motorL, &motorR);
  2306   002854  0EC7               	movlw	low _motorL
  2307   002856  6E20               	movwf	BlueMove@mL^0,c
  2308   002858  0E01               	movlw	high _motorL
  2309   00285A  6E21               	movwf	(BlueMove@mL+1)^0,c
  2310   00285C  0EBE               	movlw	low _motorR
  2311   00285E  6E22               	movwf	BlueMove@mR^0,c
  2312   002860  0E01               	movlw	high _motorR
  2313   002862  6E23               	movwf	(BlueMove@mR+1)^0,c
  2314   002864  EC7D  F02B         	call	_BlueMove	;wreg free
  2315   002868                     
  2316                           ;main.c: 201:                 T0CON0bits.T0EN=0;
  2317   002868  9ED5               	bcf	213,7,c	;volatile
  2318                           
  2319                           ;main.c: 202:                 go_Home(WayBack, Time_forward);
  2320   00286A  0E80               	movlw	low _WayBack
  2321   00286C  6E24               	movwf	go_Home@WayBack^0,c
  2322   00286E  0E01               	movlw	high _WayBack
  2323   002870  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2324   002872  0E3C               	movlw	low _Time_forward
  2325   002874  6E26               	movwf	go_Home@Time_forward^0,c
  2326   002876  0E02               	movlw	high _Time_forward
  2327   002878  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2328   00287A  ECF6  F01D         	call	_go_Home	;wreg free
  2329                           
  2330                           ;main.c: 203:                 stop(&motorL, &motorR);
  2331   00287E  0EC7               	movlw	low _motorL
  2332   002880  6E14               	movwf	stop@mL^0,c
  2333   002882  0E01               	movlw	high _motorL
  2334   002884  6E15               	movwf	(stop@mL+1)^0,c
  2335   002886  0EBE               	movlw	low _motorR
  2336   002888  6E16               	movwf	stop@mR^0,c
  2337   00288A  0E01               	movlw	high _motorR
  2338   00288C  6E17               	movwf	(stop@mR+1)^0,c
  2339   00288E  EC94  F02A         	call	_stop	;wreg free
  2340   002892                     
  2341                           ;main.c: 204:                 run_flag=0;
  2342   002892  0E00               	movlw	0
  2343   002894  0101               	movlb	1	; () banked
  2344   002896  6F69               	movwf	(main@run_flag+1)& (0+255),b
  2345   002898  0E00               	movlw	0
  2346   00289A  6F68               	movwf	main@run_flag& (0+255),b
  2347   00289C  EF8E  F014         	goto	l6013
  2348   0028A0                     l409:
  2349                           
  2350                           ; BSR set to: 1
  2351   0028A0  EF8E  F014         	goto	l6013
  2352   0028A4                     l6005:
  2353                           
  2354                           ; BSR set to: 1
  2355                           ;main.c: 207:                 int colour = Colour_decider(&vals, &rel);
  2356   0028A4  0ED0               	movlw	low _vals
  2357   0028A6  6E4B               	movwf	Colour_decider@vals^0,c
  2358   0028A8  0E01               	movlw	high _vals
  2359   0028AA  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  2360   0028AC  0EB2               	movlw	low _rel
  2361   0028AE  6E4D               	movwf	Colour_decider@rel^0,c
  2362   0028B0  0E01               	movlw	high _rel
  2363   0028B2  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  2364   0028B4  EC29  F007         	call	_Colour_decider	;wreg free
  2365   0028B8  C04B  F166         	movff	?_Colour_decider,main@colour_1291
  2366   0028BC  C04C  F167         	movff	?_Colour_decider+1,main@colour_1291+1
  2367   0028C0                     
  2368                           ;main.c: 208:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, 
      +                          rel.G,rel.B,vals.L);
  2369   0028C0  0E00               	movlw	low main@buf
  2370   0028C2  0100               	movlb	0	; () banked
  2371   0028C4  6FB0               	movwf	sprintf@s& (0+255),b
  2372   0028C6  0E01               	movlw	high main@buf
  2373   0028C8  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2374   0028CA  0E26               	movlw	low STR_2
  2375   0028CC  6FB2               	movwf	sprintf@fmt& (0+255),b
  2376   0028CE  0E0E               	movlw	high STR_2
  2377   0028D0  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2378   0028D2  C1B2  F0B4         	movff	_rel,?_sprintf+4
  2379   0028D6  C1B3  F0B5         	movff	_rel+1,?_sprintf+5
  2380   0028DA  C1B4  F0B6         	movff	_rel+2,?_sprintf+6
  2381   0028DE  C1B5  F0B7         	movff	_rel+3,?_sprintf+7
  2382   0028E2  C1B6  F0B8         	movff	_rel+4,?_sprintf+8
  2383   0028E6  C1B7  F0B9         	movff	_rel+5,?_sprintf+9
  2384   0028EA  C1B8  F0BA         	movff	_rel+6,?_sprintf+10
  2385   0028EE  C1B9  F0BB         	movff	_rel+7,?_sprintf+11
  2386   0028F2  C1BA  F0BC         	movff	_rel+8,?_sprintf+12
  2387   0028F6  C1BB  F0BD         	movff	_rel+9,?_sprintf+13
  2388   0028FA  C1BC  F0BE         	movff	_rel+10,?_sprintf+14
  2389   0028FE  C1BD  F0BF         	movff	_rel+11,?_sprintf+15
  2390   002902  C1D6  F0C0         	movff	_vals+6,?_sprintf+16
  2391   002906  C1D7  F0C1         	movff	_vals+7,?_sprintf+17
  2392   00290A  ECBE  F02C         	call	_sprintf	;wreg free
  2393   00290E                     
  2394                           ;main.c: 209:                 sendStringSerial4(buf);
  2395   00290E  0E00               	movlw	low main@buf
  2396   002910  6E02               	movwf	sendStringSerial4@string^0,c
  2397   002912  0E01               	movlw	high main@buf
  2398   002914  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2399   002916  EC29  F030         	call	_sendStringSerial4	;wreg free
  2400   00291A                     
  2401                           ;main.c: 213:               T0CON0bits.T0EN=0;
  2402   00291A  9ED5               	bcf	213,7,c	;volatile
  2403   00291C                     l6013:
  2404                           
  2405                           ;main.c: 100:     while (run_flag)
  2406   00291C  0101               	movlb	1	; () banked
  2407   00291E  5168               	movf	main@run_flag& (0+255),w,b
  2408   002920  1169               	iorwf	(main@run_flag+1)& (0+255),w,b
  2409   002922  A4D8               	btfss	status,2,c
  2410   002924  EF96  F014         	goto	u5951
  2411   002928  EF98  F014         	goto	u5950
  2412   00292C                     u5951:
  2413   00292C  EF1C  F012         	goto	l5869
  2414   002930                     u5950:
  2415   002930                     
  2416                           ; BSR set to: 1
  2417   002930  EF01  F000         	goto	start
  2418   002934                     __end_of_main:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function _turnCalibration *****************
  2422 ;; Defined at:
  2423 ;;		line 357 in file "dc_motor.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2426 ;;		 -> motorL(9), 
  2427 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2428 ;;		 -> motorR(9), 
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;Total ram usage:        6 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 4
  2447 ;; This function calls:
  2448 ;;		_turnLeft45
  2449 ;; This function is called by:
  2450 ;;		_main
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text1
  2455   004328                     __ptext1:
  2456                           	callstack 0
  2457   004328                     _turnCalibration:
  2458                           	callstack 26
  2459   004328                     
  2460                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  2461   004328  807E               	bsf	126,0,c	;volatile
  2462   00432A                     
  2463                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2464   00432A  0E52               	movlw	82
  2465   00432C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2466   00432E  0E2B               	movlw	43
  2467   004330  6E24               	movwf	??_turnCalibration^0,c
  2468   004332  0E00               	movlw	0
  2469   004334                     u6067:
  2470   004334  2EE8               	decfsz	wreg,f,c
  2471   004336  D7FE               	bra	u6067
  2472   004338  2E24               	decfsz	??_turnCalibration^0,f,c
  2473   00433A  D7FC               	bra	u6067
  2474   00433C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2475   00433E  D7FA               	bra	u6067
  2476   004340  D000               	nop2	
  2477                           
  2478                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2479   004342  EF5B  F022         	goto	l596
  2480   004346                     l597:
  2481                           
  2482                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  2483   004346  867C               	bsf	124,3,c	;volatile
  2484   004348                     
  2485                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  2486   004348  0EC7               	movlw	low _motorL
  2487   00434A  6E1A               	movwf	turnLeft45@mL^0,c
  2488   00434C  0E01               	movlw	high _motorL
  2489   00434E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2490   004350  0EBE               	movlw	low _motorR
  2491   004352  6E1C               	movwf	turnLeft45@mR^0,c
  2492   004354  0E01               	movlw	high _motorR
  2493   004356  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2494   004358  ECA3  F02E         	call	_turnLeft45	;wreg free
  2495                           
  2496                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  2497   00435C  0EC7               	movlw	low _motorL
  2498   00435E  6E1A               	movwf	turnLeft45@mL^0,c
  2499   004360  0E01               	movlw	high _motorL
  2500   004362  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2501   004364  0EBE               	movlw	low _motorR
  2502   004366  6E1C               	movwf	turnLeft45@mR^0,c
  2503   004368  0E01               	movlw	high _motorR
  2504   00436A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2505   00436C  ECA3  F02E         	call	_turnLeft45	;wreg free
  2506                           
  2507                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  2508   004370  0EC7               	movlw	low _motorL
  2509   004372  6E1A               	movwf	turnLeft45@mL^0,c
  2510   004374  0E01               	movlw	high _motorL
  2511   004376  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2512   004378  0EBE               	movlw	low _motorR
  2513   00437A  6E1C               	movwf	turnLeft45@mR^0,c
  2514   00437C  0E01               	movlw	high _motorR
  2515   00437E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2516   004380  ECA3  F02E         	call	_turnLeft45	;wreg free
  2517                           
  2518                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  2519   004384  0EC7               	movlw	low _motorL
  2520   004386  6E1A               	movwf	turnLeft45@mL^0,c
  2521   004388  0E01               	movlw	high _motorL
  2522   00438A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2523   00438C  0EBE               	movlw	low _motorR
  2524   00438E  6E1C               	movwf	turnLeft45@mR^0,c
  2525   004390  0E01               	movlw	high _motorR
  2526   004392  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2527   004394  ECA3  F02E         	call	_turnLeft45	;wreg free
  2528                           
  2529                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2530   004398  EF40  F022         	goto	l5633
  2531   00439C                     l599:
  2532                           
  2533                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  2534   00439C  887C               	bsf	124,4,c	;volatile
  2535   00439E                     
  2536                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2537   00439E  0EA3               	movlw	163
  2538   0043A0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2539   0043A2  0E57               	movlw	87
  2540   0043A4  6E24               	movwf	??_turnCalibration^0,c
  2541   0043A6  0E02               	movlw	2
  2542   0043A8                     u6077:
  2543   0043A8  2EE8               	decfsz	wreg,f,c
  2544   0043AA  D7FE               	bra	u6077
  2545   0043AC  2E24               	decfsz	??_turnCalibration^0,f,c
  2546   0043AE  D7FC               	bra	u6077
  2547   0043B0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2548   0043B2  D7FA               	bra	u6077
  2549   0043B4  D000               	nop2	
  2550                           
  2551                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2552   0043B6  A48E               	btfss	142,2,c	;volatile
  2553   0043B8  EFE0  F021         	goto	u5581
  2554   0043BC  EFE3  F021         	goto	u5580
  2555   0043C0                     u5581:
  2556   0043C0  0E01               	movlw	1
  2557   0043C2  EFE4  F021         	goto	u5582
  2558   0043C6                     u5580:
  2559   0043C6  0E00               	movlw	0
  2560   0043C8                     u5582:
  2561   0043C8  6E24               	movwf	??_turnCalibration^0,c
  2562   0043CA  A68E               	btfss	142,3,c	;volatile
  2563   0043CC  EFEA  F021         	goto	u5591
  2564   0043D0  EFED  F021         	goto	u5590
  2565   0043D4                     u5591:
  2566   0043D4  0E01               	movlw	1
  2567   0043D6  EFEE  F021         	goto	u5592
  2568   0043DA                     u5590:
  2569   0043DA  0E00               	movlw	0
  2570   0043DC                     u5592:
  2571   0043DC  1424               	andwf	??_turnCalibration^0,w,c
  2572   0043DE  A0E8               	btfss	wreg,0,c
  2573   0043E0  EFF4  F021         	goto	u5601
  2574   0043E4  EFF6  F021         	goto	u5600
  2575   0043E8                     u5601:
  2576   0043E8  EF08  F022         	goto	l600
  2577   0043EC                     u5600:
  2578   0043EC                     
  2579                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  2580   0043EC  8680               	bsf	128,3,c	;volatile
  2581                           
  2582                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  2583   0043EE  8E7C               	bsf	124,7,c	;volatile
  2584   0043F0                     
  2585                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2586   0043F0  0E52               	movlw	82
  2587   0043F2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2588   0043F4  0E2B               	movlw	43
  2589   0043F6  6E24               	movwf	??_turnCalibration^0,c
  2590   0043F8  0E00               	movlw	0
  2591   0043FA                     u6087:
  2592   0043FA  2EE8               	decfsz	wreg,f,c
  2593   0043FC  D7FE               	bra	u6087
  2594   0043FE  2E24               	decfsz	??_turnCalibration^0,f,c
  2595   004400  D7FC               	bra	u6087
  2596   004402  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2597   004404  D7FA               	bra	u6087
  2598   004406  D000               	nop2	
  2599   004408                     
  2600                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  2601   004408  9680               	bcf	128,3,c	;volatile
  2602   00440A                     
  2603                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  2604   00440A  9E7C               	bcf	124,7,c	;volatile
  2605                           
  2606                           ;dc_motor.c: 380:             }
  2607   00440C  EF40  F022         	goto	l5633
  2608   004410                     l600:
  2609   004410  B68E               	btfsc	142,3,c	;volatile
  2610   004412  EF0D  F022         	goto	u5611
  2611   004416  EF0F  F022         	goto	u5610
  2612   00441A                     u5611:
  2613   00441A  EF24  F022         	goto	l602
  2614   00441E                     u5610:
  2615   00441E                     
  2616                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  2617   00441E  0E0A               	movlw	10
  2618   004420  0100               	movlb	0	; () banked
  2619   004422  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2620   004424  0E00               	movlw	0
  2621   004426  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2622   004428                     
  2623                           ; BSR set to: 0
  2624                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  2625   004428  8680               	bsf	128,3,c	;volatile
  2626   00442A                     
  2627                           ; BSR set to: 0
  2628                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2629   00442A  0E52               	movlw	82
  2630   00442C  6E25               	movwf	(??_turnCalibration+1)^0,c
  2631   00442E  0E2B               	movlw	43
  2632   004430  6E24               	movwf	??_turnCalibration^0,c
  2633   004432  0E00               	movlw	0
  2634   004434                     u6097:
  2635   004434  2EE8               	decfsz	wreg,f,c
  2636   004436  D7FE               	bra	u6097
  2637   004438  2E24               	decfsz	??_turnCalibration^0,f,c
  2638   00443A  D7FC               	bra	u6097
  2639   00443C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2640   00443E  D7FA               	bra	u6097
  2641   004440  D000               	nop2	
  2642   004442                     
  2643                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  2644   004442  9680               	bcf	128,3,c	;volatile
  2645                           
  2646                           ;dc_motor.c: 387:             }
  2647   004444  EF40  F022         	goto	l5633
  2648   004448                     l602:
  2649   004448  B48E               	btfsc	142,2,c	;volatile
  2650   00444A  EF29  F022         	goto	u5621
  2651   00444E  EF2B  F022         	goto	u5620
  2652   004452                     u5621:
  2653   004452  EF40  F022         	goto	l601
  2654   004456                     u5620:
  2655   004456                     
  2656                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  2657   004456  0100               	movlb	0	; () banked
  2658   004458  0EF6               	movlw	246
  2659   00445A  27F9               	addwf	_Turn45Delay& (0+255),f,b
  2660   00445C  0EFF               	movlw	255
  2661   00445E  23FA               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2662   004460                     
  2663                           ; BSR set to: 0
  2664                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  2665   004460  8E7C               	bsf	124,7,c	;volatile
  2666   004462                     
  2667                           ; BSR set to: 0
  2668                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2669   004462  0E52               	movlw	82
  2670   004464  6E25               	movwf	(??_turnCalibration+1)^0,c
  2671   004466  0E2B               	movlw	43
  2672   004468  6E24               	movwf	??_turnCalibration^0,c
  2673   00446A  0E00               	movlw	0
  2674   00446C                     u6107:
  2675   00446C  2EE8               	decfsz	wreg,f,c
  2676   00446E  D7FE               	bra	u6107
  2677   004470  2E24               	decfsz	??_turnCalibration^0,f,c
  2678   004472  D7FC               	bra	u6107
  2679   004474  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2680   004476  D7FA               	bra	u6107
  2681   004478  D000               	nop2	
  2682   00447A                     
  2683                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  2684   00447A  9E7C               	bcf	124,7,c	;volatile
  2685   00447C  EF40  F022         	goto	l5633
  2686   004480                     l601:
  2687   004480                     l5633:
  2688                           
  2689                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2690   004480  A48E               	btfss	142,2,c	;volatile
  2691   004482  EF45  F022         	goto	u5631
  2692   004486  EF47  F022         	goto	u5630
  2693   00448A                     u5631:
  2694   00448A  EF4E  F022         	goto	l607
  2695   00448E                     u5630:
  2696   00448E  B68E               	btfsc	142,3,c	;volatile
  2697   004490  EF4C  F022         	goto	u5641
  2698   004494  EF4E  F022         	goto	u5640
  2699   004498                     u5641:
  2700   004498  EFCE  F021         	goto	l599
  2701   00449C                     u5640:
  2702   00449C                     l607:
  2703                           
  2704                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  2705   00449C  987C               	bcf	124,4,c	;volatile
  2706   00449E                     
  2707                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2708   00449E  0EA3               	movlw	163
  2709   0044A0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2710   0044A2  0E57               	movlw	87
  2711   0044A4  6E24               	movwf	??_turnCalibration^0,c
  2712   0044A6  0E02               	movlw	2
  2713   0044A8                     u6117:
  2714   0044A8  2EE8               	decfsz	wreg,f,c
  2715   0044AA  D7FE               	bra	u6117
  2716   0044AC  2E24               	decfsz	??_turnCalibration^0,f,c
  2717   0044AE  D7FC               	bra	u6117
  2718   0044B0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2719   0044B2  D7FA               	bra	u6117
  2720   0044B4  D000               	nop2	
  2721   0044B6                     l596:
  2722                           
  2723                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2724   0044B6  A68E               	btfss	142,3,c	;volatile
  2725   0044B8  EF60  F022         	goto	u5651
  2726   0044BC  EF63  F022         	goto	u5650
  2727   0044C0                     u5651:
  2728   0044C0  0E01               	movlw	1
  2729   0044C2  EF64  F022         	goto	u5652
  2730   0044C6                     u5650:
  2731   0044C6  0E00               	movlw	0
  2732   0044C8                     u5652:
  2733   0044C8  6E24               	movwf	??_turnCalibration^0,c
  2734   0044CA  A48E               	btfss	142,2,c	;volatile
  2735   0044CC  EF6A  F022         	goto	u5661
  2736   0044D0  EF6D  F022         	goto	u5660
  2737   0044D4                     u5661:
  2738   0044D4  0E01               	movlw	1
  2739   0044D6  EF6E  F022         	goto	u5662
  2740   0044DA                     u5660:
  2741   0044DA  0E00               	movlw	0
  2742   0044DC                     u5662:
  2743   0044DC  1424               	andwf	??_turnCalibration^0,w,c
  2744   0044DE  A0E8               	btfss	wreg,0,c
  2745   0044E0  EF74  F022         	goto	u5671
  2746   0044E4  EF76  F022         	goto	u5670
  2747   0044E8                     u5671:
  2748   0044E8  EFA3  F021         	goto	l597
  2749   0044EC                     u5670:
  2750   0044EC                     
  2751                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  2752   0044EC  967C               	bcf	124,3,c	;volatile
  2753   0044EE                     
  2754                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2755   0044EE  0EA3               	movlw	163
  2756   0044F0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2757   0044F2  0E57               	movlw	87
  2758   0044F4  6E24               	movwf	??_turnCalibration^0,c
  2759   0044F6  0E02               	movlw	2
  2760   0044F8                     u6127:
  2761   0044F8  2EE8               	decfsz	wreg,f,c
  2762   0044FA  D7FE               	bra	u6127
  2763   0044FC  2E24               	decfsz	??_turnCalibration^0,f,c
  2764   0044FE  D7FC               	bra	u6127
  2765   004500  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2766   004502  D7FA               	bra	u6127
  2767   004504  D000               	nop2	
  2768   004506  0012               	return		;funcret
  2769   004508                     __end_of_turnCalibration:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _sprintf *****************
  2773 ;; Defined at:
  2774 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2777 ;;		 -> main@buf(100), 
  2778 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2779 ;;		 -> STR_2(35), STR_1(37), 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;  f              11  100[BANK0 ] struct _IO_FILE
  2782 ;;  ap              2   98[BANK0 ] PTR void [1]
  2783 ;;		 -> ?_sprintf(2), 
  2784 ;;  ret             2    0        int 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  2   80[BANK0 ] int 
  2787 ;; Registers used:
  2788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2794 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2795 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;Total ram usage:       31 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 7
  2801 ;; This function calls:
  2802 ;;		_vfprintf
  2803 ;; This function is called by:
  2804 ;;		_main
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text2
  2809   00597C                     __ptext2:
  2810                           	callstack 0
  2811   00597C                     _sprintf:
  2812                           	callstack 23
  2813   00597C  0EB4               	movlw	low (?_sprintf+4)
  2814   00597E  0100               	movlb	0	; () banked
  2815   005980  6FC2               	movwf	sprintf@ap& (0+255),b
  2816   005982  0E00               	movlw	high (?_sprintf+4)
  2817   005984  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2818   005986  C0B0  F0C4         	movff	sprintf@s,sprintf@f
  2819   00598A  C0B1  F0C5         	movff	sprintf@s+1,sprintf@f+1
  2820   00598E                     
  2821                           ; BSR set to: 0
  2822   00598E  0E00               	movlw	0
  2823   005990  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  2824   005992  0E00               	movlw	0
  2825   005994  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  2826   005996                     
  2827                           ; BSR set to: 0
  2828   005996  0E00               	movlw	0
  2829   005998  6FCE               	movwf	(sprintf@f+10)& (0+255),b
  2830   00599A  0E00               	movlw	0
  2831   00599C  6FCD               	movwf	(sprintf@f+9)& (0+255),b
  2832   00599E                     
  2833                           ; BSR set to: 0
  2834   00599E  0EC4               	movlw	low sprintf@f
  2835   0059A0  6FA8               	movwf	vfprintf@fp& (0+255),b
  2836   0059A2  0E00               	movlw	high sprintf@f
  2837   0059A4  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2838   0059A6  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2839   0059AA  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2840   0059AE  0EC2               	movlw	low sprintf@ap
  2841   0059B0  6FAC               	movwf	vfprintf@ap& (0+255),b
  2842   0059B2  0E00               	movlw	high sprintf@ap
  2843   0059B4  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2844   0059B6  EC93  F02C         	call	_vfprintf	;wreg free
  2845   0059BA  0100               	movlb	0	; () banked
  2846   0059BC  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  2847   0059BE  25B0               	addwf	sprintf@s& (0+255),w,b
  2848   0059C0  6ED9               	movwf	fsr2l,c
  2849   0059C2  51C8               	movf	(sprintf@f+4)& (0+255),w,b
  2850   0059C4  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2851   0059C6  6EDA               	movwf	fsr2h,c
  2852   0059C8  0E00               	movlw	0
  2853   0059CA  6EDF               	movwf	indf2,c
  2854   0059CC                     
  2855                           ; BSR set to: 0
  2856   0059CC  0012               	return		;funcret
  2857   0059CE                     __end_of_sprintf:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _vfprintf *****************
  2861 ;; Defined at:
  2862 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2865 ;;		 -> sprintf@f(11), 
  2866 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2867 ;;		 -> STR_2(35), STR_1(37), 
  2868 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2869 ;;		 -> sprintf@ap(2), 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2872 ;;		 -> STR_2(35), STR_1(37), 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  2   72[BANK0 ] int 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2882 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;Total ram usage:        8 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 6
  2889 ;; This function calls:
  2890 ;;		_vfpfcnvrt
  2891 ;; This function is called by:
  2892 ;;		_sprintf
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text3
  2897   005926                     __ptext3:
  2898                           	callstack 0
  2899   005926                     _vfprintf:
  2900                           	callstack 23
  2901   005926                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2903   005926  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2904   00592A  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2907   00592E  EFA8  F02C         	goto	l5301
  2908   005932                     l5299:
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2911   005932  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2912   005936  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2913   00593A  0EAE               	movlw	low vfprintf@cfmt
  2914   00593C  0100               	movlb	0	; () banked
  2915   00593E  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2916   005940  0E00               	movlw	high vfprintf@cfmt
  2917   005942  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2918   005944  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2919   005948  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2920   00594C  EC73  F01C         	call	_vfpfcnvrt	;wreg free
  2921   005950                     l5301:
  2922                           
  2923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2924   005950  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2925   005954  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2926   005958                     	if	0	;tblptru may be non-zero
  2927   005958                     	endif
  2928   005958                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2929   005958  0E00               	movlw	low (__mediumconst shr (0+16))
  2930   00595A  6EF8               	movwf	tblptru,c
  2931   00595C                     	endif
  2932   00595C  0008               	tblrd		*
  2933   00595E  50F5               	movf	tablat,w,c
  2934   005960  0900               	iorlw	0
  2935   005962  A4D8               	btfss	status,2,c
  2936   005964  EFB6  F02C         	goto	u5201
  2937   005968  EFB8  F02C         	goto	u5200
  2938   00596C                     u5201:
  2939   00596C  EF99  F02C         	goto	l5299
  2940   005970                     u5200:
  2941   005970                     
  2942                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2943   005970  0E00               	movlw	0
  2944   005972  0100               	movlb	0	; () banked
  2945   005974  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2946   005976  0E00               	movlw	0
  2947   005978  6FA8               	movwf	?_vfprintf& (0+255),b
  2948   00597A                     
  2949                           ; BSR set to: 0
  2950   00597A  0012               	return		;funcret
  2951   00597C                     __end_of_vfprintf:
  2952                           	callstack 0
  2953                           
  2954 ;; *************** function _vfpfcnvrt *****************
  2955 ;; Defined at:
  2956 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2959 ;;		 -> sprintf@f(11), 
  2960 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2961 ;;		 -> vfprintf@cfmt(2), 
  2962 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2963 ;;		 -> sprintf@ap(2), 
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;  convarg         8   61[BANK0 ] struct .
  2966 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2967 ;;		 -> STR_2(35), STR_1(37), 
  2968 ;;  i               2    0        int 
  2969 ;;  done            2    0        int 
  2970 ;;  c               1   69[BANK0 ] unsigned char 
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2980 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2981 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2982 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2983 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2984 ;;Total ram usage:       19 bytes
  2985 ;; Hardware stack levels used: 1
  2986 ;; Hardware stack levels required when called: 5
  2987 ;; This function calls:
  2988 ;;		_dtoa
  2989 ;;		_efgtoa
  2990 ;;		_fputc
  2991 ;; This function is called by:
  2992 ;;		_vfprintf
  2993 ;; This function uses a non-reentrant model
  2994 ;;
  2995                           
  2996                           	psect	text4
  2997   0038E6                     __ptext4:
  2998                           	callstack 0
  2999   0038E6                     _vfpfcnvrt:
  3000                           	callstack 23
  3001   0038E6                     
  3002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3003   0038E6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3004   0038EA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3005   0038EE  CFDE FFF6          	movff	postinc2,tblptrl
  3006   0038F2  CFDD FFF7          	movff	postdec2,tblptrh
  3007   0038F6                     	if	0	;tblptru may be non-zero
  3008   0038F6                     	endif
  3009   0038F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3010   0038F6  0E00               	movlw	low (__mediumconst shr (0+16))
  3011   0038F8  6EF8               	movwf	tblptru,c
  3012   0038FA                     	endif
  3013   0038FA  0008               	tblrd		*
  3014   0038FC  50F5               	movf	tablat,w,c
  3015   0038FE  0A25               	xorlw	37
  3016   003900  A4D8               	btfss	status,2,c
  3017   003902  EF85  F01C         	goto	u5031
  3018   003906  EF87  F01C         	goto	u5030
  3019   00390A                     u5031:
  3020   00390A  EFDF  F01D         	goto	l5149
  3021   00390E                     u5030:
  3022   00390E                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3024   00390E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3025   003912  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3026   003916  2ADE               	incf	postinc2,f,c
  3027   003918  0E00               	movlw	0
  3028   00391A  22DD               	addwfc	postdec2,f,c
  3029   00391C                     
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3031   00391C  0E00               	movlw	0
  3032   00391E  0100               	movlb	0	; () banked
  3033   003920  6FEE               	movwf	(_width+1)& (0+255),b
  3034   003922  0E00               	movlw	0
  3035   003924  6FED               	movwf	_width& (0+255),b
  3036   003926  C0ED  F0F3         	movff	_width,_flags
  3037   00392A                     
  3038                           ; BSR set to: 0
  3039                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3040   00392A  69EF               	setf	_prec& (0+255),b
  3041   00392C  69F0               	setf	(_prec+1)& (0+255),b
  3042   00392E                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3045   00392E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3046   003932  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3047   003936  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3048   00393A  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3049   00393E                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3052   00393E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3053   003942  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3054   003946                     	if	0	;tblptru may be non-zero
  3055   003946                     	endif
  3056   003946                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3057   003946  0E00               	movlw	low (__mediumconst shr (0+16))
  3058   003948  6EF8               	movwf	tblptru,c
  3059   00394A                     	endif
  3060   00394A  0008               	tblrd		*
  3061   00394C  50F5               	movf	tablat,w,c
  3062   00394E  0A64               	xorlw	100
  3063   003950  B4D8               	btfsc	status,2,c
  3064   003952  EFAD  F01C         	goto	u5041
  3065   003956  EFAF  F01C         	goto	u5040
  3066   00395A                     u5041:
  3067   00395A  EFBF  F01C         	goto	l5105
  3068   00395E                     u5040:
  3069   00395E                     
  3070                           ; BSR set to: 0
  3071   00395E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3072   003962  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3073   003966                     	if	0	;tblptru may be non-zero
  3074   003966                     	endif
  3075   003966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3076   003966  0E00               	movlw	low (__mediumconst shr (0+16))
  3077   003968  6EF8               	movwf	tblptru,c
  3078   00396A                     	endif
  3079   00396A  0008               	tblrd		*
  3080   00396C  50F5               	movf	tablat,w,c
  3081   00396E  0A69               	xorlw	105
  3082   003970  A4D8               	btfss	status,2,c
  3083   003972  EFBD  F01C         	goto	u5051
  3084   003976  EFBF  F01C         	goto	u5050
  3085   00397A                     u5051:
  3086   00397A  EF02  F01D         	goto	l5111
  3087   00397E                     u5050:
  3088   00397E                     l5105:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3092   00397E  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3093   003982  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3094   003986  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3095   00398A  0E02               	movlw	2
  3096   00398C  26DE               	addwf	postinc2,f,c
  3097   00398E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3098   003992  0E00               	movlw	0
  3099   003994  22DD               	addwfc	postdec2,f,c
  3100   003996  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3101   00399A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3102   00399E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3103   0039A2  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  3104   0039A6  0E00               	movlw	0
  3105   0039A8  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3106   0039AA  0EFF               	movlw	-1
  3107   0039AC  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3108   0039AE  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3109   0039B0  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3110   0039B2  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3111   0039B4  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3112   0039B6  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3113                           
  3114                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3115   0039B8  0E01               	movlw	1
  3116   0039BA  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3117   0039BC  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3118   0039BE  0E00               	movlw	0
  3119   0039C0  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3120   0039C2  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3121   0039C4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3122   0039C8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3123   0039CC  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3124   0039D0  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3125   0039D4                     
  3126                           ; BSR set to: 0
  3127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3128   0039D4  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3129   0039D8  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3130   0039DC  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3131   0039E0  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3132   0039E4  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3133   0039E8  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3134   0039EC  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3135   0039F0  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3136   0039F4  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3137   0039F8  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3138   0039FC  EC4C  F01F         	call	_dtoa	;wreg free
  3139   003A00  EFF5  F01D         	goto	l1486
  3140   003A04                     l5111:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3144   003A04  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3145   003A08  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3146   003A0C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3147   003A10  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3148   003A14                     
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3151   003A14  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3152   003A18  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3153   003A1C                     	if	0	;tblptru may be non-zero
  3154   003A1C                     	endif
  3155   003A1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3156   003A1C  0E00               	movlw	low (__mediumconst shr (0+16))
  3157   003A1E  6EF8               	movwf	tblptru,c
  3158   003A20                     	endif
  3159   003A20  0008               	tblrd		*
  3160   003A22  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3161                           
  3162                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3163   003A26  EF21  F01D         	goto	l5123
  3164   003A2A                     l5115:
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3168   003A2A  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3169   003A2C  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3170                           
  3171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3172   003A2E  EF3A  F01D         	goto	l5125
  3173   003A32                     l5117:
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3177   003A32  0E6C               	movlw	108
  3178   003A34  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3179                           
  3180                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3181   003A36  EF3A  F01D         	goto	l5125
  3182   003A3A                     l5119:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3186   003A3A  0E00               	movlw	0
  3187   003A3C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3190   003A3E  EF3A  F01D         	goto	l5125
  3191   003A42                     l5123:
  3192                           
  3193                           ; BSR set to: 0
  3194   003A42  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3195   003A44  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3196   003A46  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3197                           
  3198                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3199                           ; Switch size 1, requested type "simple"
  3200                           ; Number of cases is 1, Range of values is 0 to 0
  3201                           ; switch strategies available:
  3202                           ; Name         Instructions Cycles
  3203                           ; simple_byte            4     3 (average)
  3204                           ;	Chosen strategy is simple_byte
  3205   003A48  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3206   003A4A  0A00               	xorlw	0	; case 0
  3207   003A4C  B4D8               	btfsc	status,2,c
  3208   003A4E  EF2B  F01D         	goto	l6155
  3209   003A52  EF1D  F01D         	goto	l5119
  3210   003A56                     l6155:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ; Switch size 1, requested type "simple"
  3214                           ; Number of cases is 3, Range of values is 76 to 108
  3215                           ; switch strategies available:
  3216                           ; Name         Instructions Cycles
  3217                           ; simple_byte           10     6 (average)
  3218                           ;	Chosen strategy is simple_byte
  3219   003A56  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3220   003A58  0A4C               	xorlw	76	; case 76
  3221   003A5A  B4D8               	btfsc	status,2,c
  3222   003A5C  EF15  F01D         	goto	l5115
  3223   003A60  0A2A               	xorlw	42	; case 102
  3224   003A62  B4D8               	btfsc	status,2,c
  3225   003A64  EF19  F01D         	goto	l5117
  3226   003A68  0A0A               	xorlw	10	; case 108
  3227   003A6A  B4D8               	btfsc	status,2,c
  3228   003A6C  EF15  F01D         	goto	l5115
  3229   003A70  EF1D  F01D         	goto	l5119
  3230   003A74                     l5125:
  3231                           
  3232                           ; BSR set to: 0
  3233   003A74  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3234   003A78  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3235   003A7C                     	if	0	;tblptru may be non-zero
  3236   003A7C                     	endif
  3237   003A7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3238   003A7C  0E00               	movlw	low (__mediumconst shr (0+16))
  3239   003A7E  6EF8               	movwf	tblptru,c
  3240   003A80                     	endif
  3241   003A80  0008               	tblrd		*
  3242   003A82  50F5               	movf	tablat,w,c
  3243   003A84  0A66               	xorlw	102
  3244   003A86  A4D8               	btfss	status,2,c
  3245   003A88  EF48  F01D         	goto	u5061
  3246   003A8C  EF4A  F01D         	goto	u5060
  3247   003A90                     u5061:
  3248   003A90  EFD6  F01D         	goto	l5145
  3249   003A94                     u5060:
  3250   003A94  EF80  F01D         	goto	l5133
  3251   003A98                     l5127:
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3255   003A98  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3256   003A9C  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3257   003AA0  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3258   003AA4  0E04               	movlw	4
  3259   003AA6  26DE               	addwf	postinc2,f,c
  3260   003AA8  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3261   003AAC  0E00               	movlw	0
  3262   003AAE  22DD               	addwfc	postdec2,f,c
  3263   003AB0  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3264   003AB4  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3265   003AB8  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3266   003ABC  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3267   003AC0  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3268   003AC4  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3269                           
  3270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3271   003AC8  EF95  F01D         	goto	l5135
  3272   003ACC                     l5129:
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3276   003ACC  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3277   003AD0  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3278   003AD4  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3279   003AD8  0E04               	movlw	4
  3280   003ADA  26DE               	addwf	postinc2,f,c
  3281   003ADC  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3282   003AE0  0E00               	movlw	0
  3283   003AE2  22DD               	addwfc	postdec2,f,c
  3284   003AE4  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3285   003AE8  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3286   003AEC  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3287   003AF0  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3288   003AF4  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3289   003AF8  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3292   003AFC  EF95  F01D         	goto	l5135
  3293   003B00                     l5133:
  3294                           
  3295                           ; BSR set to: 0
  3296   003B00  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3297   003B02  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3298   003B04  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3299                           
  3300                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3301                           ; Switch size 1, requested type "simple"
  3302                           ; Number of cases is 1, Range of values is 0 to 0
  3303                           ; switch strategies available:
  3304                           ; Name         Instructions Cycles
  3305                           ; simple_byte            4     3 (average)
  3306                           ;	Chosen strategy is simple_byte
  3307   003B06  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3308   003B08  0A00               	xorlw	0	; case 0
  3309   003B0A  B4D8               	btfsc	status,2,c
  3310   003B0C  EF8A  F01D         	goto	l6157
  3311   003B10  EF95  F01D         	goto	l5135
  3312   003B14                     l6157:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ; Switch size 1, requested type "simple"
  3316                           ; Number of cases is 2, Range of values is 76 to 108
  3317                           ; switch strategies available:
  3318                           ; Name         Instructions Cycles
  3319                           ; simple_byte            7     4 (average)
  3320                           ;	Chosen strategy is simple_byte
  3321   003B14  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3322   003B16  0A4C               	xorlw	76	; case 76
  3323   003B18  B4D8               	btfsc	status,2,c
  3324   003B1A  EF66  F01D         	goto	l5129
  3325   003B1E  0A20               	xorlw	32	; case 108
  3326   003B20  B4D8               	btfsc	status,2,c
  3327   003B22  EF4C  F01D         	goto	l5127
  3328   003B26  EF95  F01D         	goto	l5135
  3329   003B2A                     l5135:
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3333   003B2A  0E01               	movlw	1
  3334   003B2C  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3335   003B2E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3336   003B30  0E00               	movlw	0
  3337   003B32  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3338   003B34  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3339   003B36  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3340   003B3A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3341   003B3E  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3342   003B42  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3345   003B46  EFBE  F01D         	goto	l5143
  3346   003B4A                     l5137:
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3350   003B4A  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3351   003B4E  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3352   003B52  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3353   003B56  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3354   003B5A  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3355   003B5E  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3356   003B62  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3357   003B66  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3358   003B6A                     	if	0	;tblptru may be non-zero
  3359   003B6A                     	endif
  3360   003B6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3361   003B6A  0E00               	movlw	low (__mediumconst shr (0+16))
  3362   003B6C  6EF8               	movwf	tblptru,c
  3363   003B6E                     	endif
  3364   003B6E  0008               	tblrd		*
  3365   003B70  CFF5 F066          	movff	tablat,efgtoa@c
  3366   003B74  EC97  F00C         	call	_efgtoa	;wreg free
  3367   003B78  EFF5  F01D         	goto	l1486
  3368   003B7C                     l5143:
  3369                           
  3370                           ; BSR set to: 0
  3371   003B7C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3372   003B80  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3373   003B84                     	if	0	;tblptru may be non-zero
  3374   003B84                     	endif
  3375   003B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3376   003B84  0E00               	movlw	low (__mediumconst shr (0+16))
  3377   003B86  6EF8               	movwf	tblptru,c
  3378   003B88                     	endif
  3379   003B88  0008               	tblrd		*
  3380   003B8A  50F5               	movf	tablat,w,c
  3381   003B8C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3382   003B8E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3383                           
  3384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3385                           ; Switch size 1, requested type "simple"
  3386                           ; Number of cases is 1, Range of values is 0 to 0
  3387                           ; switch strategies available:
  3388                           ; Name         Instructions Cycles
  3389                           ; simple_byte            4     3 (average)
  3390                           ;	Chosen strategy is simple_byte
  3391   003B90  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3392   003B92  0A00               	xorlw	0	; case 0
  3393   003B94  B4D8               	btfsc	status,2,c
  3394   003B96  EFCF  F01D         	goto	l6159
  3395   003B9A  EFD6  F01D         	goto	l5145
  3396   003B9E                     l6159:
  3397                           
  3398                           ; BSR set to: 0
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 102 to 102
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405   003B9E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3406   003BA0  0A66               	xorlw	102	; case 102
  3407   003BA2  B4D8               	btfsc	status,2,c
  3408   003BA4  EFA5  F01D         	goto	l5137
  3409   003BA8  EFD6  F01D         	goto	l5145
  3410   003BAC                     l5145:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3413   003BAC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3414   003BB0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3415   003BB4  2ADE               	incf	postinc2,f,c
  3416   003BB6  0E00               	movlw	0
  3417   003BB8  22DD               	addwfc	postdec2,f,c
  3418   003BBA  EFF5  F01D         	goto	l1486
  3419   003BBE                     l5149:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3422   003BBE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3423   003BC2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3424   003BC6  CFDE FFF6          	movff	postinc2,tblptrl
  3425   003BCA  CFDD FFF7          	movff	postdec2,tblptrh
  3426   003BCE                     	if	0	;tblptru may be non-zero
  3427   003BCE                     	endif
  3428   003BCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3429   003BCE  0E00               	movlw	low (__mediumconst shr (0+16))
  3430   003BD0  6EF8               	movwf	tblptru,c
  3431   003BD2                     	endif
  3432   003BD2  0008               	tblrd		*
  3433   003BD4  50F5               	movf	tablat,w,c
  3434   003BD6  6E01               	movwf	fputc@c^0,c
  3435   003BD8  6A02               	clrf	(fputc@c+1)^0,c
  3436   003BDA  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3437   003BDE  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3438   003BE2  EC0E  F027         	call	_fputc	;wreg free
  3439   003BE6  EFD6  F01D         	goto	l5145
  3440   003BEA                     l1486:
  3441   003BEA  0012               	return		;funcret
  3442   003BEC                     __end_of_vfpfcnvrt:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _efgtoa *****************
  3446 ;; Defined at:
  3447 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3450 ;;		 -> sprintf@f(11), 
  3451 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3452 ;;  c               1    6[BANK0 ] unsigned char 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  u               4   49[BANK0 ] struct flui
  3455 ;;  g               4   45[BANK0 ] struct flui
  3456 ;;  l               4   38[BANK0 ] struct flui
  3457 ;;  h               4   34[BANK0 ] struct flui
  3458 ;;  ou              4   28[BANK0 ] struct flui
  3459 ;;  n               2   43[BANK0 ] int 
  3460 ;;  i               2   32[BANK0 ] int 
  3461 ;;  w               2   26[BANK0 ] int 
  3462 ;;  e               2   24[BANK0 ] int 
  3463 ;;  m               2   22[BANK0 ] int 
  3464 ;;  d               2   20[BANK0 ] int 
  3465 ;;  t               2   13[BANK0 ] int 
  3466 ;;  p               2   11[BANK0 ] int 
  3467 ;;  ne              2    9[BANK0 ] int 
  3468 ;;  sign            1   42[BANK0 ] unsigned char 
  3469 ;;  nmode           1   19[BANK0 ] unsigned char 
  3470 ;;  mode            1   18[BANK0 ] unsigned char 
  3471 ;;  pp              1   17[BANK0 ] unsigned char 
  3472 ;;  esign           1    0        unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3482 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3483 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;Total ram usage:       53 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; Hardware stack levels required when called: 4
  3489 ;; This function calls:
  3490 ;;		___fladd
  3491 ;;		___fldiv
  3492 ;;		___fleq
  3493 ;;		___flge
  3494 ;;		___flmul
  3495 ;;		___flneg
  3496 ;;		___flsub
  3497 ;;		___fltol
  3498 ;;		___fpclassifyf
  3499 ;;		_floorf
  3500 ;;		_labs
  3501 ;;		_memcpy
  3502 ;;		_pad
  3503 ;;		_strcpy
  3504 ;; This function is called by:
  3505 ;;		_vfpfcnvrt
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text5
  3510   00192E                     __ptext5:
  3511                           	callstack 0
  3512   00192E                     _efgtoa:
  3513                           	callstack 23
  3514   00192E                     
  3515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3516   00192E  0E00               	movlw	0
  3517   001930  0100               	movlb	0	; () banked
  3518   001932  6F8A               	movwf	efgtoa@sign& (0+255),b
  3519   001934                     
  3520                           ; BSR set to: 0
  3521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3522   001934  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3523   001938  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3524   00193C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3525   001940  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3526   001944                     
  3527                           ; BSR set to: 0
  3528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3529   001944  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3530   001946  EFA9  F00C         	goto	u4680
  3531   00194A  EFA7  F00C         	goto	u4681
  3532   00194E                     u4681:
  3533   00194E  EFBD  F00C         	goto	l4815
  3534   001952                     u4680:
  3535   001952                     
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3538   001952  0E01               	movlw	1
  3539   001954  6F8A               	movwf	efgtoa@sign& (0+255),b
  3540   001956                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3543   001956  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3544   00195A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3545   00195E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3546   001962  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3547   001966  ECD6  F02F         	call	___flneg	;wreg free
  3548   00196A  C001  F08D         	movff	?___flneg,efgtoa@g
  3549   00196E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3550   001972  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3551   001976  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3552   00197A                     l4815:
  3553                           
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3555   00197A  0E00               	movlw	0
  3556   00197C  0100               	movlb	0	; () banked
  3557   00197E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3558   001980  0E00               	movlw	0
  3559   001982  6F8B               	movwf	efgtoa@n& (0+255),b
  3560   001984                     
  3561                           ; BSR set to: 0
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3563   001984  C0ED  F07A         	movff	_width,efgtoa@w
  3564   001988  C0EE  F07B         	movff	_width+1,efgtoa@w+1
  3565   00198C                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3568   00198C  518A               	movf	efgtoa@sign& (0+255),w,b
  3569   00198E  B4D8               	btfsc	status,2,c
  3570   001990  EFCC  F00C         	goto	u4691
  3571   001994  EFCE  F00C         	goto	u4690
  3572   001998                     u4691:
  3573   001998  EFE2  F00C         	goto	l4829
  3574   00199C                     u4690:
  3575   00199C                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3578   00199C  518A               	movf	efgtoa@sign& (0+255),w,b
  3579   00199E  A4D8               	btfss	status,2,c
  3580   0019A0  EFD4  F00C         	goto	u4701
  3581   0019A4  EFD6  F00C         	goto	u4700
  3582   0019A8                     u4701:
  3583   0019A8  EFDC  F00C         	goto	l4825
  3584   0019AC                     u4700:
  3585   0019AC                     
  3586                           ; BSR set to: 0
  3587   0019AC  0E00               	movlw	0
  3588   0019AE  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3589   0019B0  0E2B               	movlw	43
  3590   0019B2  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3591   0019B4  EFE0  F00C         	goto	l4827
  3592   0019B8                     l4825:
  3593                           
  3594                           ; BSR set to: 0
  3595   0019B8  0E00               	movlw	0
  3596   0019BA  6F70               	movwf	(_efgtoa$2772+1)& (0+255),b
  3597   0019BC  0E2D               	movlw	45
  3598   0019BE  6F6F               	movwf	_efgtoa$2772& (0+255),b
  3599   0019C0                     l4827:
  3600                           
  3601                           ; BSR set to: 0
  3602   0019C0  C06F  F08A         	movff	_efgtoa$2772,efgtoa@sign
  3603   0019C4                     l4829:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3607   0019C4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3608   0019C8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3609   0019CC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3610   0019D0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3611   0019D4  EC8F  F026         	call	___fpclassifyf	;wreg free
  3612   0019D8  0401               	decf	?___fpclassifyf^0,w,c
  3613   0019DA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3614   0019DC  A4D8               	btfss	status,2,c
  3615   0019DE  EFF3  F00C         	goto	u4711
  3616   0019E2  EFF5  F00C         	goto	u4710
  3617   0019E6                     u4711:
  3618   0019E6  EF28  F00D         	goto	l4847
  3619   0019EA                     u4710:
  3620   0019EA                     
  3621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3622   0019EA  0100               	movlb	0	; () banked
  3623   0019EC  518A               	movf	efgtoa@sign& (0+255),w,b
  3624   0019EE  B4D8               	btfsc	status,2,c
  3625   0019F0  EFFC  F00C         	goto	u4721
  3626   0019F4  EFFE  F00C         	goto	u4720
  3627   0019F8                     u4721:
  3628   0019F8  EF07  F00D         	goto	l4839
  3629   0019FC                     u4720:
  3630   0019FC                     
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3633   0019FC  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3634   001A00                     
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3637   001A00  077A               	decf	efgtoa@w& (0+255),f,b
  3638   001A02  A0D8               	btfss	status,0,c
  3639   001A04  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3640   001A06                     
  3641                           ; BSR set to: 0
  3642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3643   001A06  0E00               	movlw	0
  3644   001A08  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3645   001A0A  0E01               	movlw	1
  3646   001A0C  6F8B               	movwf	efgtoa@n& (0+255),b
  3647   001A0E                     l4839:
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3651   001A0E  0EA0               	movlw	low _dbuf
  3652   001A10  258B               	addwf	efgtoa@n& (0+255),w,b
  3653   001A12  6E01               	movwf	strcpy@dest^0,c
  3654   001A14  0E02               	movlw	high _dbuf
  3655   001A16  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3656   001A18  6E02               	movwf	(strcpy@dest+1)^0,c
  3657   001A1A  0E49               	movlw	low STR_3
  3658   001A1C  6E03               	movwf	strcpy@src^0,c
  3659   001A1E  0E0E               	movlw	high STR_3
  3660   001A20  6E04               	movwf	(strcpy@src+1)^0,c
  3661   001A22  EC13  F02F         	call	_strcpy	;wreg free
  3662   001A26                     l4841:
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3665   001A26  0100               	movlb	0	; () banked
  3666   001A28  0EFD               	movlw	253
  3667   001A2A  277A               	addwf	efgtoa@w& (0+255),f,b
  3668   001A2C  0EFF               	movlw	255
  3669   001A2E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3670   001A30                     
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3673   001A30  C060  F011         	movff	efgtoa@fp,pad@fp
  3674   001A34  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3675   001A38  0EA0               	movlw	low _dbuf
  3676   001A3A  6E13               	movwf	pad@buf^0,c
  3677   001A3C  0E02               	movlw	high _dbuf
  3678   001A3E  6E14               	movwf	(pad@buf+1)^0,c
  3679   001A40  C07A  F015         	movff	efgtoa@w,pad@p
  3680   001A44  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3681   001A48  ECD3  F02A         	call	_pad	;wreg free
  3682   001A4C  EF93  F011         	goto	l1438
  3683   001A50                     l4847:
  3684                           
  3685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3686   001A50  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3687   001A54  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3688   001A58  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3689   001A5C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3690   001A60  EC8F  F026         	call	___fpclassifyf	;wreg free
  3691   001A64  5001               	movf	?___fpclassifyf^0,w,c
  3692   001A66  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3693   001A68  A4D8               	btfss	status,2,c
  3694   001A6A  EF39  F00D         	goto	u4731
  3695   001A6E  EF3B  F00D         	goto	u4730
  3696   001A72                     u4731:
  3697   001A72  EF5B  F00D         	goto	l4865
  3698   001A76                     u4730:
  3699   001A76                     
  3700                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3701   001A76  0100               	movlb	0	; () banked
  3702   001A78  518A               	movf	efgtoa@sign& (0+255),w,b
  3703   001A7A  B4D8               	btfsc	status,2,c
  3704   001A7C  EF42  F00D         	goto	u4741
  3705   001A80  EF44  F00D         	goto	u4740
  3706   001A84                     u4741:
  3707   001A84  EF4D  F00D         	goto	l4857
  3708   001A88                     u4740:
  3709   001A88                     
  3710                           ; BSR set to: 0
  3711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3712   001A88  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3713   001A8C                     
  3714                           ; BSR set to: 0
  3715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3716   001A8C  077A               	decf	efgtoa@w& (0+255),f,b
  3717   001A8E  A0D8               	btfss	status,0,c
  3718   001A90  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3719   001A92                     
  3720                           ; BSR set to: 0
  3721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3722   001A92  0E00               	movlw	0
  3723   001A94  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3724   001A96  0E01               	movlw	1
  3725   001A98  6F8B               	movwf	efgtoa@n& (0+255),b
  3726   001A9A                     l4857:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3730   001A9A  0EA0               	movlw	low _dbuf
  3731   001A9C  258B               	addwf	efgtoa@n& (0+255),w,b
  3732   001A9E  6E01               	movwf	strcpy@dest^0,c
  3733   001AA0  0E02               	movlw	high _dbuf
  3734   001AA2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3735   001AA4  6E02               	movwf	(strcpy@dest+1)^0,c
  3736   001AA6  0E4D               	movlw	low STR_6
  3737   001AA8  6E03               	movwf	strcpy@src^0,c
  3738   001AAA  0E0E               	movlw	high STR_6
  3739   001AAC  6E04               	movwf	(strcpy@src+1)^0,c
  3740   001AAE  EC13  F02F         	call	_strcpy	;wreg free
  3741   001AB2  EF13  F00D         	goto	l4841
  3742   001AB6                     l4865:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3745   001AB6  0E00               	movlw	0
  3746   001AB8  0100               	movlb	0	; () banked
  3747   001ABA  6F91               	movwf	efgtoa@u& (0+255),b
  3748   001ABC  0E00               	movlw	0
  3749   001ABE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3750   001AC0  0E80               	movlw	128
  3751   001AC2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3752   001AC4  0E3F               	movlw	63
  3753   001AC6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3754                           
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3756   001AC8  0E00               	movlw	0
  3757   001ACA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3758   001ACC  0E00               	movlw	0
  3759   001ACE  6F78               	movwf	efgtoa@e& (0+255),b
  3760   001AD0                     
  3761                           ; BSR set to: 0
  3762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3763   001AD0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3764   001AD4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3765   001AD8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3766   001ADC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3767   001AE0  0E00               	movlw	0
  3768   001AE2  6E36               	movwf	___fleq@ff2^0,c
  3769   001AE4  0E00               	movlw	0
  3770   001AE6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3771   001AE8  0E00               	movlw	0
  3772   001AEA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3773   001AEC  0E00               	movlw	0
  3774   001AEE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3775   001AF0  EC7E  F028         	call	___fleq	;wreg free
  3776   001AF4  B0D8               	btfsc	status,0,c
  3777   001AF6  EF7F  F00D         	goto	u4751
  3778   001AFA  EF81  F00D         	goto	u4750
  3779   001AFE                     u4751:
  3780   001AFE  EF60  F00E         	goto	l1441
  3781   001B02                     u4750:
  3782   001B02  EF8E  F00D         	goto	l4873
  3783   001B06                     l1443:
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3786   001B06  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3787   001B0A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3788   001B0E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3789   001B12  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3790   001B16                     
  3791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3792   001B16  0100               	movlb	0	; () banked
  3793   001B18  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3794   001B1A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3795   001B1C                     l4873:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3798   001B1C  C091  F011         	movff	efgtoa@u,___flmul@b
  3799   001B20  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3800   001B24  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3801   001B28  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3802   001B2C  0E00               	movlw	0
  3803   001B2E  6E15               	movwf	___flmul@a^0,c
  3804   001B30  0E00               	movlw	0
  3805   001B32  6E16               	movwf	(___flmul@a+1)^0,c
  3806   001B34  0E20               	movlw	32
  3807   001B36  6E17               	movwf	(___flmul@a+2)^0,c
  3808   001B38  0E41               	movlw	65
  3809   001B3A  6E18               	movwf	(___flmul@a+3)^0,c
  3810   001B3C  ECFA  F016         	call	___flmul	;wreg free
  3811   001B40  C011  F07C         	movff	?___flmul,efgtoa@ou
  3812   001B44  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3813   001B48  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3814   001B4C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3815   001B50  0100               	movlb	0	; () banked
  3816   001B52  517C               	movf	efgtoa@ou& (0+255),w,b
  3817   001B54  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3818   001B56  6E01               	movwf	labs@a^0,c
  3819   001B58  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3820   001B5A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3821   001B5C  6E02               	movwf	(labs@a+1)^0,c
  3822   001B5E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3823   001B60  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3824   001B62  6E03               	movwf	(labs@a+2)^0,c
  3825   001B64  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3826   001B66  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3827   001B68  6E04               	movwf	(labs@a+3)^0,c
  3828   001B6A  EC4A  F02B         	call	_labs	;wreg free
  3829   001B6E  BE04               	btfsc	(?_labs+3)^0,7,c
  3830   001B70  EFC5  F00D         	goto	u4761
  3831   001B74  5004               	movf	(?_labs+3)^0,w,c
  3832   001B76  1003               	iorwf	(?_labs+2)^0,w,c
  3833   001B78  1002               	iorwf	(?_labs+1)^0,w,c
  3834   001B7A  E109               	bnz	u4760
  3835   001B7C  0E02               	movlw	2
  3836   001B7E  5C01               	subwf	?_labs^0,w,c
  3837   001B80  A0D8               	btfss	status,0,c
  3838   001B82  EFC5  F00D         	goto	u4761
  3839   001B86  EFC7  F00D         	goto	u4760
  3840   001B8A                     u4761:
  3841   001B8A  EF83  F00D         	goto	l1443
  3842   001B8E                     u4760:
  3843   001B8E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3844   001B92  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3845   001B96  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3846   001B9A  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3847   001B9E  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3848   001BA2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3849   001BA6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3850   001BAA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3851   001BAE  EC0D  F026         	call	___flge	;wreg free
  3852   001BB2  A0D8               	btfss	status,0,c
  3853   001BB4  EFDE  F00D         	goto	u4771
  3854   001BB8  EFE0  F00D         	goto	u4770
  3855   001BBC                     u4771:
  3856   001BBC  EF83  F00D         	goto	l1443
  3857   001BC0                     u4770:
  3858   001BC0                     
  3859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3860   001BC0  0100               	movlb	0	; () banked
  3861   001BC2  5191               	movf	efgtoa@u& (0+255),w,b
  3862   001BC4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3863   001BC6  6E01               	movwf	labs@a^0,c
  3864   001BC8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3865   001BCA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3866   001BCC  6E02               	movwf	(labs@a+1)^0,c
  3867   001BCE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3868   001BD0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3869   001BD2  6E03               	movwf	(labs@a+2)^0,c
  3870   001BD4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3871   001BD6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3872   001BD8  6E04               	movwf	(labs@a+3)^0,c
  3873   001BDA  EC4A  F02B         	call	_labs	;wreg free
  3874   001BDE  BE04               	btfsc	(?_labs+3)^0,7,c
  3875   001BE0  EFFF  F00D         	goto	u4780
  3876   001BE4  5004               	movf	(?_labs+3)^0,w,c
  3877   001BE6  1003               	iorwf	(?_labs+2)^0,w,c
  3878   001BE8  1002               	iorwf	(?_labs+1)^0,w,c
  3879   001BEA  E107               	bnz	u4781
  3880   001BEC  0E02               	movlw	2
  3881   001BEE  5C01               	subwf	?_labs^0,w,c
  3882   001BF0  B0D8               	btfsc	status,0,c
  3883   001BF2  EFFD  F00D         	goto	u4781
  3884   001BF6  EFFF  F00D         	goto	u4780
  3885   001BFA                     u4781:
  3886   001BFA  EF47  F00E         	goto	l4891
  3887   001BFE                     u4780:
  3888   001BFE                     l4881:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3891   001BFE  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3892   001C02  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3893   001C06  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3894   001C0A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3895                           
  3896                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3897   001C0E  EF60  F00E         	goto	l1441
  3898   001C12                     l4883:
  3899                           
  3900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3901   001C12  C091  F032         	movff	efgtoa@u,___fldiv@b
  3902   001C16  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3903   001C1A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3904   001C1E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3905   001C22  0E00               	movlw	0
  3906   001C24  6E36               	movwf	___fldiv@a^0,c
  3907   001C26  0E00               	movlw	0
  3908   001C28  6E37               	movwf	(___fldiv@a+1)^0,c
  3909   001C2A  0E20               	movlw	32
  3910   001C2C  6E38               	movwf	(___fldiv@a+2)^0,c
  3911   001C2E  0E41               	movlw	65
  3912   001C30  6E39               	movwf	(___fldiv@a+3)^0,c
  3913   001C32  EC0F  F019         	call	___fldiv	;wreg free
  3914   001C36  C032  F091         	movff	?___fldiv,efgtoa@u
  3915   001C3A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3916   001C3E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3917   001C42  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3918   001C46                     
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3920   001C46  0100               	movlb	0	; () banked
  3921   001C48  0778               	decf	efgtoa@e& (0+255),f,b
  3922   001C4A  A0D8               	btfss	status,0,c
  3923   001C4C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3924   001C4E                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3927   001C4E  5191               	movf	efgtoa@u& (0+255),w,b
  3928   001C50  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3929   001C52  6E01               	movwf	labs@a^0,c
  3930   001C54  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3931   001C56  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3932   001C58  6E02               	movwf	(labs@a+1)^0,c
  3933   001C5A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3934   001C5C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3935   001C5E  6E03               	movwf	(labs@a+2)^0,c
  3936   001C60  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3937   001C62  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3938   001C64  6E04               	movwf	(labs@a+3)^0,c
  3939   001C66  EC4A  F02B         	call	_labs	;wreg free
  3940   001C6A  BE04               	btfsc	(?_labs+3)^0,7,c
  3941   001C6C  EF45  F00E         	goto	u4790
  3942   001C70  5004               	movf	(?_labs+3)^0,w,c
  3943   001C72  1003               	iorwf	(?_labs+2)^0,w,c
  3944   001C74  1002               	iorwf	(?_labs+1)^0,w,c
  3945   001C76  E107               	bnz	u4791
  3946   001C78  0E02               	movlw	2
  3947   001C7A  5C01               	subwf	?_labs^0,w,c
  3948   001C7C  B0D8               	btfsc	status,0,c
  3949   001C7E  EF43  F00E         	goto	u4791
  3950   001C82  EF45  F00E         	goto	u4790
  3951   001C86                     u4791:
  3952   001C86  EF47  F00E         	goto	l4891
  3953   001C8A                     u4790:
  3954   001C8A  EFFF  F00D         	goto	l4881
  3955   001C8E                     l4891:
  3956                           
  3957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3958   001C8E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3959   001C92  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3960   001C96  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3961   001C9A  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3962   001C9E  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3963   001CA2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3964   001CA6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3965   001CAA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3966   001CAE  EC0D  F026         	call	___flge	;wreg free
  3967   001CB2  A0D8               	btfss	status,0,c
  3968   001CB4  EF5E  F00E         	goto	u4801
  3969   001CB8  EF60  F00E         	goto	u4800
  3970   001CBC                     u4801:
  3971   001CBC  EF09  F00E         	goto	l4883
  3972   001CC0                     u4800:
  3973   001CC0                     l1441:
  3974                           
  3975                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3976   001CC0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3977                           
  3978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3979   001CC4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3980   001CC8                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3982   001CC8  0100               	movlb	0	; () banked
  3983   001CCA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  3984   001CCC  EF6A  F00E         	goto	u4811
  3985   001CD0  EF6C  F00E         	goto	u4810
  3986   001CD4                     u4811:
  3987   001CD4  EF72  F00E         	goto	l4897
  3988   001CD8                     u4810:
  3989   001CD8                     
  3990                           ; BSR set to: 0
  3991   001CD8  C0EF  F06B         	movff	_prec,efgtoa@p
  3992   001CDC  C0F0  F06C         	movff	_prec+1,efgtoa@p+1
  3993   001CE0  EF76  F00E         	goto	l4899
  3994   001CE4                     l4897:
  3995                           
  3996                           ; BSR set to: 0
  3997   001CE4  0E00               	movlw	0
  3998   001CE6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3999   001CE8  0E06               	movlw	6
  4000   001CEA  6F6B               	movwf	efgtoa@p& (0+255),b
  4001   001CEC                     l4899:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  4005   001CEC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  4006   001CF0  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  4007   001CF4                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  4010   001CF4  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4011   001CF6  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4012   001CF8                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  4015   001CF8  0E66               	movlw	102
  4016   001CFA  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4017   001CFC  A4D8               	btfss	status,2,c
  4018   001CFE  EF83  F00E         	goto	u4821
  4019   001D02  EF85  F00E         	goto	u4820
  4020   001D06                     u4821:
  4021   001D06  EFA5  F00E         	goto	l4913
  4022   001D0A                     u4820:
  4023   001D0A                     
  4024                           ; BSR set to: 0
  4025                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4026   001D0A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4027   001D0C  EF8C  F00E         	goto	u4830
  4028   001D10  EF8A  F00E         	goto	u4831
  4029   001D14                     u4831:
  4030   001D14  EF98  F00E         	goto	l4909
  4031   001D18                     u4830:
  4032   001D18                     
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4035   001D18  0E00               	movlw	0
  4036   001D1A  6F91               	movwf	efgtoa@u& (0+255),b
  4037   001D1C  0E00               	movlw	0
  4038   001D1E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  4039   001D20  0E80               	movlw	128
  4040   001D22  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  4041   001D24  0E3F               	movlw	63
  4042   001D26  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4045   001D28  0E00               	movlw	0
  4046   001D2A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  4047   001D2C  0E00               	movlw	0
  4048   001D2E  6F78               	movwf	efgtoa@e& (0+255),b
  4049   001D30                     l4909:
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4053   001D30  0E67               	movlw	103
  4054   001D32  1972               	xorwf	efgtoa@mode& (0+255),w,b
  4055   001D34  B4D8               	btfsc	status,2,c
  4056   001D36  EF9F  F00E         	goto	u4841
  4057   001D3A  EFA1  F00E         	goto	u4840
  4058   001D3E                     u4841:
  4059   001D3E  EFA5  F00E         	goto	l4913
  4060   001D42                     u4840:
  4061   001D42                     
  4062                           ; BSR set to: 0
  4063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4064   001D42  5178               	movf	efgtoa@e& (0+255),w,b
  4065   001D44  2776               	addwf	efgtoa@m& (0+255),f,b
  4066   001D46  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  4067   001D48  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4068   001D4A                     l4913:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4072   001D4A  0E00               	movlw	0
  4073   001D4C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4074   001D4E  0E00               	movlw	0
  4075   001D50  6F80               	movwf	efgtoa@i& (0+255),b
  4076   001D52                     
  4077                           ; BSR set to: 0
  4078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4079   001D52  C08D  F082         	movff	efgtoa@g,efgtoa@h
  4080   001D56  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4081   001D5A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4082   001D5E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4083   001D62                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4086   001D62  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  4087   001D66  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  4088   001D6A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  4089   001D6E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4092   001D72  EF36  F00F         	goto	l4927
  4093   001D76                     l4919:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4097   001D76  C082  F032         	movff	efgtoa@h,___fldiv@b
  4098   001D7A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4099   001D7E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4100   001D82  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4101   001D86  C091  F036         	movff	efgtoa@u,___fldiv@a
  4102   001D8A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4103   001D8E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4104   001D92  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4105   001D96  EC0F  F019         	call	___fldiv	;wreg free
  4106   001D9A  C032  F04B         	movff	?___fldiv,floorf@x
  4107   001D9E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4108   001DA2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4109   001DA6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4110   001DAA  EC8B  F020         	call	_floorf	;wreg free
  4111   001DAE  C04B  F086         	movff	?_floorf,efgtoa@l
  4112   001DB2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4113   001DB6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4114   001DBA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4117   001DBE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4118   001DC2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4119   001DC6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4120   001DCA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4121   001DCE  EC8A  F025         	call	___fltol	;wreg free
  4122   001DD2  C001  F074         	movff	?___fltol,efgtoa@d
  4123   001DD6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4124   001DDA                     
  4125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4126   001DDA  C082  F02A         	movff	efgtoa@h,___flsub@b
  4127   001DDE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4128   001DE2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4129   001DE6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4130   001DEA  C086  F015         	movff	efgtoa@l,___flmul@a
  4131   001DEE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4132   001DF2  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4133   001DF6  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4134   001DFA  C091  F011         	movff	efgtoa@u,___flmul@b
  4135   001DFE  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4136   001E02  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4137   001E06  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4138   001E0A  ECFA  F016         	call	___flmul	;wreg free
  4139   001E0E  C011  F02E         	movff	?___flmul,___flsub@a
  4140   001E12  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4141   001E16  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4142   001E1A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4143   001E1E  ECF0  F02E         	call	___flsub	;wreg free
  4144   001E22  C02A  F082         	movff	?___flsub,efgtoa@h
  4145   001E26  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4146   001E2A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4147   001E2E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4148   001E32                     
  4149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4150   001E32  C091  F032         	movff	efgtoa@u,___fldiv@b
  4151   001E36  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4152   001E3A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4153   001E3E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4154   001E42  0E00               	movlw	0
  4155   001E44  6E36               	movwf	___fldiv@a^0,c
  4156   001E46  0E00               	movlw	0
  4157   001E48  6E37               	movwf	(___fldiv@a+1)^0,c
  4158   001E4A  0E20               	movlw	32
  4159   001E4C  6E38               	movwf	(___fldiv@a+2)^0,c
  4160   001E4E  0E41               	movlw	65
  4161   001E50  6E39               	movwf	(___fldiv@a+3)^0,c
  4162   001E52  EC0F  F019         	call	___fldiv	;wreg free
  4163   001E56  C032  F091         	movff	?___fldiv,efgtoa@u
  4164   001E5A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4165   001E5E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4166   001E62  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4167   001E66                     
  4168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4169   001E66  0100               	movlb	0	; () banked
  4170   001E68  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4171   001E6A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4172   001E6C                     l4927:
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4176   001E6C  5176               	movf	efgtoa@m& (0+255),w,b
  4177   001E6E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4178   001E70  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4179   001E72  0A80               	xorlw	128
  4180   001E74  6F67               	movwf	??_efgtoa& (0+255),b
  4181   001E76  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4182   001E78  0A80               	xorlw	128
  4183   001E7A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4184   001E7C  A0D8               	btfss	status,0,c
  4185   001E7E  EF43  F00F         	goto	u4851
  4186   001E82  EF45  F00F         	goto	u4850
  4187   001E86                     u4851:
  4188   001E86  EFBB  F00E         	goto	l4919
  4189   001E8A                     u4850:
  4190   001E8A                     
  4191                           ; BSR set to: 0
  4192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4193   001E8A  C091  F011         	movff	efgtoa@u,___flmul@b
  4194   001E8E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4195   001E92  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4196   001E96  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4197   001E9A  0E00               	movlw	0
  4198   001E9C  6E15               	movwf	___flmul@a^0,c
  4199   001E9E  0E00               	movlw	0
  4200   001EA0  6E16               	movwf	(___flmul@a+1)^0,c
  4201   001EA2  0EA0               	movlw	160
  4202   001EA4  6E17               	movwf	(___flmul@a+2)^0,c
  4203   001EA6  0E40               	movlw	64
  4204   001EA8  6E18               	movwf	(___flmul@a+3)^0,c
  4205   001EAA  ECFA  F016         	call	___flmul	;wreg free
  4206   001EAE  C011  F086         	movff	?___flmul,efgtoa@l
  4207   001EB2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4208   001EB6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4209   001EBA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4210   001EBE                     
  4211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4212   001EBE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4213   001EC2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4214   001EC6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4215   001ECA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4216   001ECE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4217   001ED2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4218   001ED6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4219   001EDA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4220   001EDE  EC0D  F026         	call	___flge	;wreg free
  4221   001EE2  B0D8               	btfsc	status,0,c
  4222   001EE4  EF76  F00F         	goto	u4861
  4223   001EE8  EF78  F00F         	goto	u4860
  4224   001EEC                     u4861:
  4225   001EEC  EF83  F00F         	goto	l4935
  4226   001EF0                     u4860:
  4227   001EF0                     
  4228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4229   001EF0  0E00               	movlw	0
  4230   001EF2  0100               	movlb	0	; () banked
  4231   001EF4  6F86               	movwf	efgtoa@l& (0+255),b
  4232   001EF6  0E00               	movlw	0
  4233   001EF8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4234   001EFA  0E00               	movlw	0
  4235   001EFC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4236   001EFE  0E00               	movlw	0
  4237   001F00  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4238                           
  4239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4240   001F02  EFAC  F00F         	goto	l4941
  4241   001F06                     l4935:
  4242                           
  4243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4244   001F06  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4245   001F0A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4246   001F0E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4247   001F12  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4248   001F16  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4249   001F1A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4250   001F1E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4251   001F22  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4252   001F26  EC7E  F028         	call	___fleq	;wreg free
  4253   001F2A  A0D8               	btfss	status,0,c
  4254   001F2C  EF9A  F00F         	goto	u4871
  4255   001F30  EF9C  F00F         	goto	u4870
  4256   001F34                     u4871:
  4257   001F34  EFAC  F00F         	goto	l4941
  4258   001F38                     u4870:
  4259   001F38  0100               	movlb	0	; () banked
  4260   001F3A  B174               	btfsc	efgtoa@d& (0+255),0,b
  4261   001F3C  EFA2  F00F         	goto	u4881
  4262   001F40  EFA4  F00F         	goto	u4880
  4263   001F44                     u4881:
  4264   001F44  EFAC  F00F         	goto	l4941
  4265   001F48                     u4880:
  4266   001F48                     
  4267                           ; BSR set to: 0
  4268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4269   001F48  0E00               	movlw	0
  4270   001F4A  6F86               	movwf	efgtoa@l& (0+255),b
  4271   001F4C  0E00               	movlw	0
  4272   001F4E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4273   001F50  0E00               	movlw	0
  4274   001F52  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4275   001F54  0E00               	movlw	0
  4276   001F56  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4277   001F58                     l4941:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4280   001F58  C08D  F001         	movff	efgtoa@g,___fladd@b
  4281   001F5C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4282   001F60  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4283   001F64  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4284   001F68  C086  F005         	movff	efgtoa@l,___fladd@a
  4285   001F6C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4286   001F70  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4287   001F74  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4288   001F78  EC9A  F014         	call	___fladd	;wreg free
  4289   001F7C  C001  F082         	movff	?___fladd,efgtoa@h
  4290   001F80  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4291   001F84  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4292   001F88  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4293   001F8C                     
  4294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4295   001F8C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4296   001F90  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4297   001F94  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4298   001F98  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4299   001F9C  0E00               	movlw	0
  4300   001F9E  6E15               	movwf	___flmul@a^0,c
  4301   001FA0  0E00               	movlw	0
  4302   001FA2  6E16               	movwf	(___flmul@a+1)^0,c
  4303   001FA4  0E20               	movlw	32
  4304   001FA6  6E17               	movwf	(___flmul@a+2)^0,c
  4305   001FA8  0E41               	movlw	65
  4306   001FAA  6E18               	movwf	(___flmul@a+3)^0,c
  4307   001FAC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4308   001FB0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4309   001FB4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4310   001FB8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4311   001FBC  ECFA  F016         	call	___flmul	;wreg free
  4312   001FC0  C011  F02E         	movff	?___flmul,___flge@ff2
  4313   001FC4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4314   001FC8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4315   001FCC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4316   001FD0  EC0D  F026         	call	___flge	;wreg free
  4317   001FD4  A0D8               	btfss	status,0,c
  4318   001FD6  EFEF  F00F         	goto	u4891
  4319   001FDA  EFF1  F00F         	goto	u4890
  4320   001FDE                     u4891:
  4321   001FDE  EF1A  F010         	goto	l4953
  4322   001FE2                     u4890:
  4323   001FE2                     
  4324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4325   001FE2  0100               	movlb	0	; () banked
  4326   001FE4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4327   001FE6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4328   001FE8                     
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4331   001FE8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4332   001FEC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4333   001FF0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4334   001FF4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4335   001FF8  0E00               	movlw	0
  4336   001FFA  6E15               	movwf	___flmul@a^0,c
  4337   001FFC  0E00               	movlw	0
  4338   001FFE  6E16               	movwf	(___flmul@a+1)^0,c
  4339   002000  0E20               	movlw	32
  4340   002002  6E17               	movwf	(___flmul@a+2)^0,c
  4341   002004  0E41               	movlw	65
  4342   002006  6E18               	movwf	(___flmul@a+3)^0,c
  4343   002008  ECFA  F016         	call	___flmul	;wreg free
  4344   00200C  C011  F07C         	movff	?___flmul,efgtoa@ou
  4345   002010  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4346   002014  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4347   002018  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4348   00201C                     
  4349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4350   00201C  0E66               	movlw	102
  4351   00201E  0100               	movlb	0	; () banked
  4352   002020  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4353   002022  A4D8               	btfss	status,2,c
  4354   002024  EF16  F010         	goto	u4901
  4355   002028  EF18  F010         	goto	u4900
  4356   00202C                     u4901:
  4357   00202C  EF1A  F010         	goto	l4953
  4358   002030                     u4900:
  4359   002030                     
  4360                           ; BSR set to: 0
  4361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4362   002030  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4363   002032  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4364   002034                     l4953:
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4367   002034  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4368   002038  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4369   00203C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4370   002040  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4371   002044                     
  4372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4373   002044  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4374   002048  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4375   00204C                     
  4376                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4377   00204C  0E00               	movlw	0
  4378   00204E  0100               	movlb	0	; () banked
  4379   002050  6F71               	movwf	efgtoa@pp& (0+255),b
  4380   002052                     
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4383   002052  0E00               	movlw	0
  4384   002054  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4385   002056  0E00               	movlw	0
  4386   002058  6F6D               	movwf	efgtoa@t& (0+255),b
  4387   00205A                     
  4388                           ; BSR set to: 0
  4389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4390   00205A  0E00               	movlw	0
  4391   00205C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4392   00205E  0E00               	movlw	0
  4393   002060  6F80               	movwf	efgtoa@i& (0+255),b
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4396   002062  EF18  F011         	goto	l5003
  4397   002066                     l4963:
  4398                           
  4399                           ; BSR set to: 0
  4400                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4401   002066  C082  F032         	movff	efgtoa@h,___fldiv@b
  4402   00206A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4403   00206E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4404   002072  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4405   002076  C091  F036         	movff	efgtoa@u,___fldiv@a
  4406   00207A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4407   00207E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4408   002082  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4409   002086  EC0F  F019         	call	___fldiv	;wreg free
  4410   00208A  C032  F04B         	movff	?___fldiv,floorf@x
  4411   00208E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4412   002092  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4413   002096  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4414   00209A  EC8B  F020         	call	_floorf	;wreg free
  4415   00209E  C04B  F086         	movff	?_floorf,efgtoa@l
  4416   0020A2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4417   0020A6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4418   0020AA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4419                           
  4420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4421   0020AE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4422   0020B2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4423   0020B6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4424   0020BA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4425   0020BE  EC8A  F025         	call	___fltol	;wreg free
  4426   0020C2  BE02               	btfsc	(?___fltol+1)^0,7,c
  4427   0020C4  EF6F  F010         	goto	u4910
  4428   0020C8  5002               	movf	(?___fltol+1)^0,w,c
  4429   0020CA  E107               	bnz	u4911
  4430   0020CC  0E0A               	movlw	10
  4431   0020CE  5C01               	subwf	?___fltol^0,w,c
  4432   0020D0  B0D8               	btfsc	status,0,c
  4433   0020D2  EF6D  F010         	goto	u4911
  4434   0020D6  EF6F  F010         	goto	u4910
  4435   0020DA                     u4911:
  4436   0020DA  EF7F  F010         	goto	l4967
  4437   0020DE                     u4910:
  4438   0020DE  C086  F001         	movff	efgtoa@l,___fltol@f1
  4439   0020E2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4440   0020E6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4441   0020EA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4442   0020EE  EC8A  F025         	call	___fltol	;wreg free
  4443   0020F2  C001  F074         	movff	?___fltol,efgtoa@d
  4444   0020F6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4445   0020FA  EF84  F010         	goto	l1471
  4446   0020FE                     l4967:
  4447   0020FE  0E00               	movlw	0
  4448   002100  0100               	movlb	0	; () banked
  4449   002102  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4450   002104  0E09               	movlw	9
  4451   002106  6F74               	movwf	efgtoa@d& (0+255),b
  4452   002108                     l1471:
  4453                           
  4454                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4455   002108  0100               	movlb	0	; () banked
  4456   00210A  5171               	movf	efgtoa@pp& (0+255),w,b
  4457   00210C  A4D8               	btfss	status,2,c
  4458   00210E  EF8B  F010         	goto	u4921
  4459   002112  EF8D  F010         	goto	u4920
  4460   002116                     u4921:
  4461   002116  EFB5  F010         	goto	l4987
  4462   00211A                     u4920:
  4463   00211A                     
  4464                           ; BSR set to: 0
  4465   00211A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4466   00211C  EF94  F010         	goto	u4930
  4467   002120  EF92  F010         	goto	u4931
  4468   002124                     u4931:
  4469   002124  EFB5  F010         	goto	l4987
  4470   002128                     u4930:
  4471   002128                     
  4472                           ; BSR set to: 0
  4473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4474   002128  0EA0               	movlw	low _dbuf
  4475   00212A  258B               	addwf	efgtoa@n& (0+255),w,b
  4476   00212C  6ED9               	movwf	fsr2l,c
  4477   00212E  0E02               	movlw	high _dbuf
  4478   002130  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4479   002132  6EDA               	movwf	fsr2h,c
  4480   002134  0E2E               	movlw	46
  4481   002136  6EDF               	movwf	indf2,c
  4482   002138                     
  4483                           ; BSR set to: 0
  4484   002138  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4485   00213A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4486   00213C                     
  4487                           ; BSR set to: 0
  4488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4489   00213C  077A               	decf	efgtoa@w& (0+255),f,b
  4490   00213E  A0D8               	btfss	status,0,c
  4491   002140  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4492   002142                     
  4493                           ; BSR set to: 0
  4494                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4495   002142  0E01               	movlw	1
  4496   002144  6F71               	movwf	efgtoa@pp& (0+255),b
  4497   002146  EFB5  F010         	goto	l4987
  4498   00214A                     l4979:
  4499                           
  4500                           ; BSR set to: 0
  4501                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4502   00214A  0EA0               	movlw	low _dbuf
  4503   00214C  258B               	addwf	efgtoa@n& (0+255),w,b
  4504   00214E  6ED9               	movwf	fsr2l,c
  4505   002150  0E02               	movlw	high _dbuf
  4506   002152  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4507   002154  6EDA               	movwf	fsr2h,c
  4508   002156  0E30               	movlw	48
  4509   002158  6EDF               	movwf	indf2,c
  4510   00215A                     
  4511                           ; BSR set to: 0
  4512   00215A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4513   00215C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4514   00215E                     
  4515                           ; BSR set to: 0
  4516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4517   00215E  077A               	decf	efgtoa@w& (0+255),f,b
  4518   002160  A0D8               	btfss	status,0,c
  4519   002162  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4520   002164                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4523   002164  076D               	decf	efgtoa@t& (0+255),f,b
  4524   002166  A0D8               	btfss	status,0,c
  4525   002168  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4526   00216A                     l4987:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4530   00216A  516D               	movf	efgtoa@t& (0+255),w,b
  4531   00216C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4532   00216E  A4D8               	btfss	status,2,c
  4533   002170  EFBC  F010         	goto	u4941
  4534   002174  EFBE  F010         	goto	u4940
  4535   002178                     u4941:
  4536   002178  EFA5  F010         	goto	l4979
  4537   00217C                     u4940:
  4538   00217C                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4541   00217C  0EA0               	movlw	low _dbuf
  4542   00217E  258B               	addwf	efgtoa@n& (0+255),w,b
  4543   002180  6ED9               	movwf	fsr2l,c
  4544   002182  0E02               	movlw	high _dbuf
  4545   002184  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4546   002186  6EDA               	movwf	fsr2h,c
  4547   002188  5174               	movf	efgtoa@d& (0+255),w,b
  4548   00218A  0F30               	addlw	48
  4549   00218C  6EDF               	movwf	indf2,c
  4550   00218E                     
  4551                           ; BSR set to: 0
  4552   00218E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4553   002190  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4554   002192                     
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4557   002192  077A               	decf	efgtoa@w& (0+255),f,b
  4558   002194  A0D8               	btfss	status,0,c
  4559   002196  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4560   002198                     
  4561                           ; BSR set to: 0
  4562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4563   002198  C082  F02A         	movff	efgtoa@h,___flsub@b
  4564   00219C  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4565   0021A0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4566   0021A4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4567   0021A8  C086  F015         	movff	efgtoa@l,___flmul@a
  4568   0021AC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4569   0021B0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4570   0021B4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4571   0021B8  C091  F011         	movff	efgtoa@u,___flmul@b
  4572   0021BC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4573   0021C0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4574   0021C4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4575   0021C8  ECFA  F016         	call	___flmul	;wreg free
  4576   0021CC  C011  F02E         	movff	?___flmul,___flsub@a
  4577   0021D0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4578   0021D4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4579   0021D8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4580   0021DC  ECF0  F02E         	call	___flsub	;wreg free
  4581   0021E0  C02A  F082         	movff	?___flsub,efgtoa@h
  4582   0021E4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4583   0021E8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4584   0021EC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4585   0021F0                     
  4586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4587   0021F0  C091  F032         	movff	efgtoa@u,___fldiv@b
  4588   0021F4  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4589   0021F8  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4590   0021FC  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4591   002200  0E00               	movlw	0
  4592   002202  6E36               	movwf	___fldiv@a^0,c
  4593   002204  0E00               	movlw	0
  4594   002206  6E37               	movwf	(___fldiv@a+1)^0,c
  4595   002208  0E20               	movlw	32
  4596   00220A  6E38               	movwf	(___fldiv@a+2)^0,c
  4597   00220C  0E41               	movlw	65
  4598   00220E  6E39               	movwf	(___fldiv@a+3)^0,c
  4599   002210  EC0F  F019         	call	___fldiv	;wreg free
  4600   002214  C032  F091         	movff	?___fldiv,efgtoa@u
  4601   002218  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4602   00221C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4603   002220  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4604   002224                     
  4605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4606   002224  0100               	movlb	0	; () banked
  4607   002226  0769               	decf	efgtoa@ne& (0+255),f,b
  4608   002228  A0D8               	btfss	status,0,c
  4609   00222A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4610   00222C                     
  4611                           ; BSR set to: 0
  4612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4613   00222C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4614   00222E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4615   002230                     l5003:
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4619   002230  5176               	movf	efgtoa@m& (0+255),w,b
  4620   002232  5D80               	subwf	efgtoa@i& (0+255),w,b
  4621   002234  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4622   002236  0A80               	xorlw	128
  4623   002238  6F67               	movwf	??_efgtoa& (0+255),b
  4624   00223A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4625   00223C  0A80               	xorlw	128
  4626   00223E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4627   002240  B0D8               	btfsc	status,0,c
  4628   002242  EF25  F011         	goto	u4951
  4629   002246  EF27  F011         	goto	u4950
  4630   00224A                     u4951:
  4631   00224A  EF35  F011         	goto	l5007
  4632   00224E                     u4950:
  4633   00224E                     
  4634                           ; BSR set to: 0
  4635   00224E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4636   002250  EF33  F011         	goto	u4961
  4637   002254  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4638   002256  E109               	bnz	u4960
  4639   002258  0E4B               	movlw	75
  4640   00225A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4641   00225C  A0D8               	btfss	status,0,c
  4642   00225E  EF33  F011         	goto	u4961
  4643   002262  EF35  F011         	goto	u4960
  4644   002266                     u4961:
  4645   002266  EF33  F010         	goto	l4963
  4646   00226A                     u4960:
  4647   00226A                     l5007:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4651   00226A  0E00               	movlw	0
  4652   00226C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4653   00226E  0E4F               	movlw	79
  4654   002270  6F80               	movwf	efgtoa@i& (0+255),b
  4655   002272                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4658   002272  0EA0               	movlw	low _dbuf
  4659   002274  2580               	addwf	efgtoa@i& (0+255),w,b
  4660   002276  6ED9               	movwf	fsr2l,c
  4661   002278  0E02               	movlw	high _dbuf
  4662   00227A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4663   00227C  6EDA               	movwf	fsr2h,c
  4664   00227E  0E00               	movlw	0
  4665   002280  6EDF               	movwf	indf2,c
  4666   002282                     
  4667                           ; BSR set to: 0
  4668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4669   002282  0EA0               	movlw	low _dbuf
  4670   002284  6F67               	movwf	??_efgtoa& (0+255),b
  4671   002286  0E02               	movlw	high _dbuf
  4672   002288  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4673   00228A  518B               	movf	efgtoa@n& (0+255),w,b
  4674   00228C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4675   00228E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4676   002290  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4677   002292  5180               	movf	efgtoa@i& (0+255),w,b
  4678   002294  2567               	addwf	??_efgtoa& (0+255),w,b
  4679   002296  6E01               	movwf	memcpy@d1^0,c
  4680   002298  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4681   00229A  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4682   00229C  6E02               	movwf	(memcpy@d1+1)^0,c
  4683   00229E  0EA0               	movlw	low _dbuf
  4684   0022A0  6E03               	movwf	memcpy@s1^0,c
  4685   0022A2  0E02               	movlw	high _dbuf
  4686   0022A4  6E04               	movwf	(memcpy@s1+1)^0,c
  4687   0022A6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4688   0022AA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4689   0022AE  ECB4  F02D         	call	_memcpy	;wreg free
  4690   0022B2                     
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4692   0022B2  0100               	movlb	0	; () banked
  4693   0022B4  518B               	movf	efgtoa@n& (0+255),w,b
  4694   0022B6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4695   0022B8  6F8B               	movwf	efgtoa@n& (0+255),b
  4696   0022BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4697   0022BC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4698   0022BE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4699   0022C0                     
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4702   0022C0  518A               	movf	efgtoa@sign& (0+255),w,b
  4703   0022C2  A4D8               	btfss	status,2,c
  4704   0022C4  EF66  F011         	goto	u4971
  4705   0022C8  EF69  F011         	goto	u4970
  4706   0022CC                     u4971:
  4707   0022CC  0E01               	movlw	1
  4708   0022CE  EF6A  F011         	goto	u4980
  4709   0022D2                     u4970:
  4710   0022D2  0E00               	movlw	0
  4711   0022D4                     u4980:
  4712   0022D4  6F80               	movwf	efgtoa@i& (0+255),b
  4713   0022D6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4714   0022D8                     
  4715                           ; BSR set to: 0
  4716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4717   0022D8  518A               	movf	efgtoa@sign& (0+255),w,b
  4718   0022DA  B4D8               	btfsc	status,2,c
  4719   0022DC  EF72  F011         	goto	u4991
  4720   0022E0  EF74  F011         	goto	u4990
  4721   0022E4                     u4991:
  4722   0022E4  EF7F  F011         	goto	l5021
  4723   0022E8                     u4990:
  4724   0022E8                     
  4725                           ; BSR set to: 0
  4726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4727   0022E8  078B               	decf	efgtoa@n& (0+255),f,b
  4728   0022EA  A0D8               	btfss	status,0,c
  4729   0022EC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4730   0022EE  0EA0               	movlw	low _dbuf
  4731   0022F0  258B               	addwf	efgtoa@n& (0+255),w,b
  4732   0022F2  6ED9               	movwf	fsr2l,c
  4733   0022F4  0E02               	movlw	high _dbuf
  4734   0022F6  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4735   0022F8  6EDA               	movwf	fsr2h,c
  4736   0022FA  C08A  FFDF         	movff	efgtoa@sign,indf2
  4737   0022FE                     l5021:
  4738                           
  4739                           ; BSR set to: 0
  4740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4741   0022FE  5180               	movf	efgtoa@i& (0+255),w,b
  4742   002300  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4743   002302  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4744   002304  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4745   002306                     
  4746                           ; BSR set to: 0
  4747                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4748   002306  C060  F011         	movff	efgtoa@fp,pad@fp
  4749   00230A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4750   00230E  0EA0               	movlw	low _dbuf
  4751   002310  258B               	addwf	efgtoa@n& (0+255),w,b
  4752   002312  6E13               	movwf	pad@buf^0,c
  4753   002314  0E02               	movlw	high _dbuf
  4754   002316  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4755   002318  6E14               	movwf	(pad@buf+1)^0,c
  4756   00231A  C07A  F015         	movff	efgtoa@w,pad@p
  4757   00231E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4758   002322  ECD3  F02A         	call	_pad	;wreg free
  4759   002326                     l1438:
  4760   002326  0012               	return		;funcret
  4761   002328                     __end_of_efgtoa:
  4762                           	callstack 0
  4763                           
  4764 ;; *************** function _strcpy *****************
  4765 ;; Defined at:
  4766 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4769 ;;		 -> dbuf(80), 
  4770 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4771 ;;		 -> STR_6(4), STR_3(4), 
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;  d               2    6[COMRAM] PTR unsigned char 
  4774 ;;		 -> dbuf(80), 
  4775 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4776 ;;		 -> STR_6(4), STR_3(4), 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2    0[COMRAM] PTR unsigned char 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;Total ram usage:        8 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		_efgtoa
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text6
  4800   005E26                     __ptext6:
  4801                           	callstack 0
  4802   005E26                     _strcpy:
  4803                           	callstack 26
  4804   005E26  C003  F005         	movff	strcpy@src,strcpy@s
  4805   005E2A  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4806   005E2E  C001  F007         	movff	strcpy@dest,strcpy@d
  4807   005E32  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4808   005E36                     l4627:
  4809   005E36  C005  FFF6         	movff	strcpy@s,tblptrl
  4810   005E3A  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4811   005E3E  4A05               	infsnz	strcpy@s^0,f,c
  4812   005E40  2A06               	incf	(strcpy@s+1)^0,f,c
  4813   005E42                     	if	0	;tblptru may be non-zero
  4814   005E42                     	endif
  4815   005E42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4816   005E42  0E00               	movlw	low (__mediumconst shr (0+16))
  4817   005E44  6EF8               	movwf	tblptru,c
  4818   005E46                     	endif
  4819   005E46  C007  FFD9         	movff	strcpy@d,fsr2l
  4820   005E4A  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4821   005E4E  4A07               	infsnz	strcpy@d^0,f,c
  4822   005E50  2A08               	incf	(strcpy@d+1)^0,f,c
  4823   005E52  0008               	tblrd		*
  4824   005E54  CFF5 FFDF          	movff	tablat,indf2
  4825   005E58  50DF               	movf	indf2,w,c
  4826   005E5A  A4D8               	btfss	status,2,c
  4827   005E5C  EF32  F02F         	goto	u4321
  4828   005E60  EF34  F02F         	goto	u4320
  4829   005E64                     u4321:
  4830   005E64  EF1B  F02F         	goto	l4627
  4831   005E68                     u4320:
  4832   005E68  0012               	return		;funcret
  4833   005E6A                     __end_of_strcpy:
  4834                           	callstack 0
  4835                           
  4836 ;; *************** function _memcpy *****************
  4837 ;; Defined at:
  4838 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  d1              2    0[COMRAM] PTR void 
  4841 ;;		 -> dbuf(80), 
  4842 ;;  s1              2    2[COMRAM] PTR const void 
  4843 ;;		 -> dbuf(80), 
  4844 ;;  n               2    4[COMRAM] unsigned int 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4847 ;;		 -> dbuf(80), 
  4848 ;;  d               2    6[COMRAM] PTR unsigned char 
  4849 ;;		 -> dbuf(80), 
  4850 ;;  tmp             1   10[COMRAM] unsigned char 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  2    0[COMRAM] PTR void 
  4853 ;; Registers used:
  4854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4863 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;Total ram usage:       11 bytes
  4865 ;; Hardware stack levels used: 1
  4866 ;; This function calls:
  4867 ;;		Nothing
  4868 ;; This function is called by:
  4869 ;;		_efgtoa
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           
  4873                           	psect	text7
  4874   005B68                     __ptext7:
  4875                           	callstack 0
  4876   005B68                     _memcpy:
  4877                           	callstack 26
  4878   005B68  C003  F009         	movff	memcpy@s1,memcpy@s
  4879   005B6C  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4880   005B70  C001  F007         	movff	memcpy@d1,memcpy@d
  4881   005B74  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4882   005B78  EFCE  F02D         	goto	l4671
  4883   005B7C                     l4663:
  4884   005B7C  C009  FFD9         	movff	memcpy@s,fsr2l
  4885   005B80  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4886   005B84  50DF               	movf	indf2,w,c
  4887   005B86  6E0B               	movwf	memcpy@tmp^0,c
  4888   005B88  4A09               	infsnz	memcpy@s^0,f,c
  4889   005B8A  2A0A               	incf	(memcpy@s+1)^0,f,c
  4890   005B8C  C007  FFD9         	movff	memcpy@d,fsr2l
  4891   005B90  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4892   005B94  C00B  FFDF         	movff	memcpy@tmp,indf2
  4893   005B98  4A07               	infsnz	memcpy@d^0,f,c
  4894   005B9A  2A08               	incf	(memcpy@d+1)^0,f,c
  4895   005B9C                     l4671:
  4896   005B9C  0605               	decf	memcpy@n^0,f,c
  4897   005B9E  A0D8               	btfss	status,0,c
  4898   005BA0  0606               	decf	(memcpy@n+1)^0,f,c
  4899   005BA2  2805               	incf	memcpy@n^0,w,c
  4900   005BA4  E106               	bnz	u4441
  4901   005BA6  2806               	incf	(memcpy@n+1)^0,w,c
  4902   005BA8  A4D8               	btfss	status,2,c
  4903   005BAA  EFD9  F02D         	goto	u4441
  4904   005BAE  EFDB  F02D         	goto	u4440
  4905   005BB2                     u4441:
  4906   005BB2  EFBE  F02D         	goto	l4663
  4907   005BB6                     u4440:
  4908   005BB6  0012               	return		;funcret
  4909   005BB8                     __end_of_memcpy:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _labs *****************
  4913 ;; Defined at:
  4914 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  a               4    0[COMRAM] long 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  4    0[COMRAM] long 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4930 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_efgtoa
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text8
  4942   005694                     __ptext8:
  4943                           	callstack 0
  4944   005694                     _labs:
  4945                           	callstack 26
  4946   005694  BE04               	btfsc	(labs@a+3)^0,7,c
  4947   005696  EF59  F02B         	goto	u4330
  4948   00569A  5004               	movf	(labs@a+3)^0,w,c
  4949   00569C  1003               	iorwf	(labs@a+2)^0,w,c
  4950   00569E  1002               	iorwf	(labs@a+1)^0,w,c
  4951   0056A0  E106               	bnz	u4331
  4952   0056A2  0401               	decf	labs@a^0,w,c
  4953   0056A4  B0D8               	btfsc	status,0,c
  4954   0056A6  EF57  F02B         	goto	u4331
  4955   0056AA  EF59  F02B         	goto	u4330
  4956   0056AE                     u4331:
  4957   0056AE  EF74  F02B         	goto	l1543
  4958   0056B2                     u4330:
  4959   0056B2  C001  F005         	movff	labs@a,??_labs
  4960   0056B6  C002  F006         	movff	labs@a+1,??_labs+1
  4961   0056BA  C003  F007         	movff	labs@a+2,??_labs+2
  4962   0056BE  C004  F008         	movff	labs@a+3,??_labs+3
  4963   0056C2  1E05               	comf	??_labs^0,f,c
  4964   0056C4  1E06               	comf	(??_labs+1)^0,f,c
  4965   0056C6  1E07               	comf	(??_labs+2)^0,f,c
  4966   0056C8  1E08               	comf	(??_labs+3)^0,f,c
  4967   0056CA  2A05               	incf	??_labs^0,f,c
  4968   0056CC  0E00               	movlw	0
  4969   0056CE  2206               	addwfc	(??_labs+1)^0,f,c
  4970   0056D0  2207               	addwfc	(??_labs+2)^0,f,c
  4971   0056D2  2208               	addwfc	(??_labs+3)^0,f,c
  4972   0056D4  C005  F001         	movff	??_labs,?_labs
  4973   0056D8  C006  F002         	movff	??_labs+1,?_labs+1
  4974   0056DC  C007  F003         	movff	??_labs+2,?_labs+2
  4975   0056E0  C008  F004         	movff	??_labs+3,?_labs+3
  4976   0056E4  EF7C  F02B         	goto	l1546
  4977   0056E8                     l1543:
  4978   0056E8  C001  F001         	movff	labs@a,?_labs
  4979   0056EC  C002  F002         	movff	labs@a+1,?_labs+1
  4980   0056F0  C003  F003         	movff	labs@a+2,?_labs+2
  4981   0056F4  C004  F004         	movff	labs@a+3,?_labs+3
  4982   0056F8                     l1546:
  4983   0056F8  0012               	return		;funcret
  4984   0056FA                     __end_of_labs:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _floorf *****************
  4988 ;; Defined at:
  4989 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  x               4   74[COMRAM] float 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  u               4   90[COMRAM] struct .
  4994 ;;  m               4   84[COMRAM] unsigned long 
  4995 ;;  e               2   88[COMRAM] int 
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  4   74[COMRAM] float 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5006 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5007 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5008 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5009 ;;Total ram usage:       20 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_efgtoa
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017                           
  5018                           	psect	text9
  5019   004116                     __ptext9:
  5020                           	callstack 0
  5021   004116                     _floorf:
  5022                           	callstack 26
  5023   004116  C0E5  F05B         	movff	floorf@F526,floorf@u
  5024   00411A  C0E6  F05C         	movff	floorf@F526+1,floorf@u+1
  5025   00411E  C0E7  F05D         	movff	floorf@F526+2,floorf@u+2
  5026   004122  C0E8  F05E         	movff	floorf@F526+3,floorf@u+3
  5027   004126  C04B  F05B         	movff	floorf@x,floorf@u
  5028   00412A  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5029   00412E  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5030   004132  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5031   004136  0E81               	movlw	129
  5032   004138  6E4F               	movwf	??_floorf^0,c
  5033   00413A  0EFF               	movlw	255
  5034   00413C  6E50               	movwf	(??_floorf+1)^0,c
  5035   00413E  C05B  F051         	movff	floorf@u,??_floorf+2
  5036   004142  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5037   004146  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5038   00414A  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5039   00414E  0E18               	movlw	24
  5040   004150  EFAF  F020         	goto	u4340
  5041   004154                     u4345:
  5042   004154  90D8               	bcf	status,0,c
  5043   004156  3254               	rrcf	(??_floorf+5)^0,f,c
  5044   004158  3253               	rrcf	(??_floorf+4)^0,f,c
  5045   00415A  3252               	rrcf	(??_floorf+3)^0,f,c
  5046   00415C  3251               	rrcf	(??_floorf+2)^0,f,c
  5047   00415E                     u4340:
  5048   00415E  2EE8               	decfsz	wreg,f,c
  5049   004160  EFAA  F020         	goto	u4345
  5050   004164  5051               	movf	(??_floorf+2)^0,w,c
  5051   004166  244F               	addwf	??_floorf^0,w,c
  5052   004168  6E59               	movwf	floorf@e^0,c
  5053   00416A  0E00               	movlw	0
  5054   00416C  2050               	addwfc	(??_floorf+1)^0,w,c
  5055   00416E  6E5A               	movwf	(floorf@e+1)^0,c
  5056   004170  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5057   004172  EFC4  F020         	goto	u4351
  5058   004176  505A               	movf	(floorf@e+1)^0,w,c
  5059   004178  E109               	bnz	u4350
  5060   00417A  0E17               	movlw	23
  5061   00417C  5C59               	subwf	floorf@e^0,w,c
  5062   00417E  A0D8               	btfss	status,0,c
  5063   004180  EFC4  F020         	goto	u4351
  5064   004184  EFC6  F020         	goto	u4350
  5065   004188                     u4351:
  5066   004188  EFD0  F020         	goto	l4639
  5067   00418C                     u4350:
  5068   00418C                     l4637:
  5069   00418C  C04B  F04B         	movff	floorf@x,?_floorf
  5070   004190  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5071   004194  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5072   004198  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5073   00419C  EF93  F021         	goto	l1532
  5074   0041A0                     l4639:
  5075   0041A0  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5076   0041A2  EFD5  F020         	goto	u4361
  5077   0041A6  EFD7  F020         	goto	u4360
  5078   0041AA                     u4361:
  5079   0041AA  EF47  F021         	goto	l4649
  5080   0041AE                     u4360:
  5081   0041AE  C059  F04F         	movff	floorf@e,??_floorf
  5082   0041B2  0EFF               	movlw	255
  5083   0041B4  6E50               	movwf	(??_floorf+1)^0,c
  5084   0041B6  0EFF               	movlw	255
  5085   0041B8  6E51               	movwf	(??_floorf+2)^0,c
  5086   0041BA  0E7F               	movlw	127
  5087   0041BC  6E52               	movwf	(??_floorf+3)^0,c
  5088   0041BE  0E00               	movlw	0
  5089   0041C0  6E53               	movwf	(??_floorf+4)^0,c
  5090   0041C2                     u4375:
  5091   0041C2  664F               	tstfsz	??_floorf^0,c
  5092   0041C4  EFE6  F020         	goto	u4376
  5093   0041C8  EFEE  F020         	goto	u4377
  5094   0041CC                     u4376:
  5095   0041CC  3453               	rlcf	(??_floorf+4)^0,w,c
  5096   0041CE  3253               	rrcf	(??_floorf+4)^0,f,c
  5097   0041D0  3252               	rrcf	(??_floorf+3)^0,f,c
  5098   0041D2  3251               	rrcf	(??_floorf+2)^0,f,c
  5099   0041D4  3250               	rrcf	(??_floorf+1)^0,f,c
  5100   0041D6  2E4F               	decfsz	??_floorf^0,f,c
  5101   0041D8  EFE1  F020         	goto	u4375
  5102   0041DC                     u4377:
  5103   0041DC  C050  F055         	movff	??_floorf+1,floorf@m
  5104   0041E0  C051  F056         	movff	??_floorf+2,floorf@m+1
  5105   0041E4  C052  F057         	movff	??_floorf+3,floorf@m+2
  5106   0041E8  C053  F058         	movff	??_floorf+4,floorf@m+3
  5107   0041EC  5055               	movf	floorf@m^0,w,c
  5108   0041EE  145B               	andwf	floorf@u^0,w,c
  5109   0041F0  6E4F               	movwf	??_floorf^0,c
  5110   0041F2  5056               	movf	(floorf@m+1)^0,w,c
  5111   0041F4  145C               	andwf	(floorf@u+1)^0,w,c
  5112   0041F6  6E50               	movwf	(??_floorf+1)^0,c
  5113   0041F8  5057               	movf	(floorf@m+2)^0,w,c
  5114   0041FA  145D               	andwf	(floorf@u+2)^0,w,c
  5115   0041FC  6E51               	movwf	(??_floorf+2)^0,c
  5116   0041FE  5058               	movf	(floorf@m+3)^0,w,c
  5117   004200  145E               	andwf	(floorf@u+3)^0,w,c
  5118   004202  6E52               	movwf	(??_floorf+3)^0,c
  5119   004204  504F               	movf	??_floorf^0,w,c
  5120   004206  1050               	iorwf	(??_floorf+1)^0,w,c
  5121   004208  1051               	iorwf	(??_floorf+2)^0,w,c
  5122   00420A  1052               	iorwf	(??_floorf+3)^0,w,c
  5123   00420C  A4D8               	btfss	status,2,c
  5124   00420E  EF0B  F021         	goto	u4381
  5125   004212  EF0D  F021         	goto	u4380
  5126   004216                     u4381:
  5127   004216  EF0F  F021         	goto	l4645
  5128   00421A                     u4380:
  5129   00421A  EFC6  F020         	goto	l4637
  5130   00421E                     l4645:
  5131   00421E  C05B  F04F         	movff	floorf@u,??_floorf
  5132   004222  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5133   004226  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5134   00422A  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5135   00422E  0E20               	movlw	32
  5136   004230  EF1F  F021         	goto	u4390
  5137   004234                     u4395:
  5138   004234  90D8               	bcf	status,0,c
  5139   004236  3252               	rrcf	(??_floorf+3)^0,f,c
  5140   004238  3251               	rrcf	(??_floorf+2)^0,f,c
  5141   00423A  3250               	rrcf	(??_floorf+1)^0,f,c
  5142   00423C  324F               	rrcf	??_floorf^0,f,c
  5143   00423E                     u4390:
  5144   00423E  2EE8               	decfsz	wreg,f,c
  5145   004240  EF1A  F021         	goto	u4395
  5146   004244  504F               	movf	??_floorf^0,w,c
  5147   004246  1050               	iorwf	(??_floorf+1)^0,w,c
  5148   004248  1051               	iorwf	(??_floorf+2)^0,w,c
  5149   00424A  1052               	iorwf	(??_floorf+3)^0,w,c
  5150   00424C  B4D8               	btfsc	status,2,c
  5151   00424E  EF2B  F021         	goto	u4401
  5152   004252  EF2D  F021         	goto	u4400
  5153   004256                     u4401:
  5154   004256  EF35  F021         	goto	l1535
  5155   00425A                     u4400:
  5156   00425A  5055               	movf	floorf@m^0,w,c
  5157   00425C  265B               	addwf	floorf@u^0,f,c
  5158   00425E  5056               	movf	(floorf@m+1)^0,w,c
  5159   004260  225C               	addwfc	(floorf@u+1)^0,f,c
  5160   004262  5057               	movf	(floorf@m+2)^0,w,c
  5161   004264  225D               	addwfc	(floorf@u+2)^0,f,c
  5162   004266  5058               	movf	(floorf@m+3)^0,w,c
  5163   004268  225E               	addwfc	(floorf@u+3)^0,f,c
  5164   00426A                     l1535:
  5165   00426A  1C55               	comf	floorf@m^0,w,c
  5166   00426C  6E4F               	movwf	??_floorf^0,c
  5167   00426E  1C56               	comf	(floorf@m+1)^0,w,c
  5168   004270  6E50               	movwf	(??_floorf+1)^0,c
  5169   004272  1C57               	comf	(floorf@m+2)^0,w,c
  5170   004274  6E51               	movwf	(??_floorf+2)^0,c
  5171   004276  1C58               	comf	(floorf@m+3)^0,w,c
  5172   004278  6E52               	movwf	(??_floorf+3)^0,c
  5173   00427A  504F               	movf	??_floorf^0,w,c
  5174   00427C  165B               	andwf	floorf@u^0,f,c
  5175   00427E  5050               	movf	(??_floorf+1)^0,w,c
  5176   004280  165C               	andwf	(floorf@u+1)^0,f,c
  5177   004282  5051               	movf	(??_floorf+2)^0,w,c
  5178   004284  165D               	andwf	(floorf@u+2)^0,f,c
  5179   004286  5052               	movf	(??_floorf+3)^0,w,c
  5180   004288  165E               	andwf	(floorf@u+3)^0,f,c
  5181   00428A  EF8B  F021         	goto	l4657
  5182   00428E                     l4649:
  5183   00428E  C05B  F04F         	movff	floorf@u,??_floorf
  5184   004292  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5185   004296  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5186   00429A  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5187   00429E  0E20               	movlw	32
  5188   0042A0  EF57  F021         	goto	u4410
  5189   0042A4                     u4415:
  5190   0042A4  90D8               	bcf	status,0,c
  5191   0042A6  3252               	rrcf	(??_floorf+3)^0,f,c
  5192   0042A8  3251               	rrcf	(??_floorf+2)^0,f,c
  5193   0042AA  3250               	rrcf	(??_floorf+1)^0,f,c
  5194   0042AC  324F               	rrcf	??_floorf^0,f,c
  5195   0042AE                     u4410:
  5196   0042AE  2EE8               	decfsz	wreg,f,c
  5197   0042B0  EF52  F021         	goto	u4415
  5198   0042B4  504F               	movf	??_floorf^0,w,c
  5199   0042B6  1050               	iorwf	(??_floorf+1)^0,w,c
  5200   0042B8  1051               	iorwf	(??_floorf+2)^0,w,c
  5201   0042BA  1052               	iorwf	(??_floorf+3)^0,w,c
  5202   0042BC  A4D8               	btfss	status,2,c
  5203   0042BE  EF63  F021         	goto	u4421
  5204   0042C2  EF65  F021         	goto	u4420
  5205   0042C6                     u4421:
  5206   0042C6  EF6F  F021         	goto	l4653
  5207   0042CA                     u4420:
  5208   0042CA  0E00               	movlw	0
  5209   0042CC  6E5B               	movwf	floorf@u^0,c
  5210   0042CE  0E00               	movlw	0
  5211   0042D0  6E5C               	movwf	(floorf@u+1)^0,c
  5212   0042D2  0E00               	movlw	0
  5213   0042D4  6E5D               	movwf	(floorf@u+2)^0,c
  5214   0042D6  0E00               	movlw	0
  5215   0042D8  6E5E               	movwf	(floorf@u+3)^0,c
  5216   0042DA  EF8B  F021         	goto	l4657
  5217   0042DE                     l4653:
  5218   0042DE  90D8               	bcf	status,0,c
  5219   0042E0  345B               	rlcf	floorf@u^0,w,c
  5220   0042E2  6E4F               	movwf	??_floorf^0,c
  5221   0042E4  345C               	rlcf	(floorf@u+1)^0,w,c
  5222   0042E6  6E50               	movwf	(??_floorf+1)^0,c
  5223   0042E8  345D               	rlcf	(floorf@u+2)^0,w,c
  5224   0042EA  6E51               	movwf	(??_floorf+2)^0,c
  5225   0042EC  345E               	rlcf	(floorf@u+3)^0,w,c
  5226   0042EE  6E52               	movwf	(??_floorf+3)^0,c
  5227   0042F0  504F               	movf	??_floorf^0,w,c
  5228   0042F2  1050               	iorwf	(??_floorf+1)^0,w,c
  5229   0042F4  1051               	iorwf	(??_floorf+2)^0,w,c
  5230   0042F6  1052               	iorwf	(??_floorf+3)^0,w,c
  5231   0042F8  B4D8               	btfsc	status,2,c
  5232   0042FA  EF81  F021         	goto	u4431
  5233   0042FE  EF83  F021         	goto	u4430
  5234   004302                     u4431:
  5235   004302  EF8B  F021         	goto	l4657
  5236   004306                     u4430:
  5237   004306  0E00               	movlw	0
  5238   004308  6E5B               	movwf	floorf@u^0,c
  5239   00430A  0E00               	movlw	0
  5240   00430C  6E5C               	movwf	(floorf@u+1)^0,c
  5241   00430E  0E80               	movlw	128
  5242   004310  6E5D               	movwf	(floorf@u+2)^0,c
  5243   004312  0EBF               	movlw	191
  5244   004314  6E5E               	movwf	(floorf@u+3)^0,c
  5245   004316                     l4657:
  5246   004316  C05B  F04B         	movff	floorf@u,?_floorf
  5247   00431A  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5248   00431E  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5249   004322  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5250   004326                     l1532:
  5251   004326  0012               	return		;funcret
  5252   004328                     __end_of_floorf:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function ___fpclassifyf *****************
  5256 ;; Defined at:
  5257 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  x               4    0[COMRAM] float 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  u               4   10[COMRAM] struct .
  5262 ;;  e               2    8[COMRAM] int 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  2    0[COMRAM] int 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;Total ram usage:       14 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_efgtoa
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text10
  5286   004D1E                     __ptext10:
  5287                           	callstack 0
  5288   004D1E                     ___fpclassifyf:
  5289                           	callstack 26
  5290   004D1E  C0E9  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5291   004D22  C0EA  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5292   004D26  C0EB  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5293   004D2A  C0EC  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5294   004D2E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5295   004D32  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5296   004D36  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5297   004D3A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5298   004D3E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5299   004D42  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5300   004D46  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5301   004D4A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5302   004D4E  0E18               	movlw	24
  5303   004D50  EFAF  F026         	goto	u4250
  5304   004D54                     u4255:
  5305   004D54  90D8               	bcf	status,0,c
  5306   004D56  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5307   004D58  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5308   004D5A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5309   004D5C  3205               	rrcf	??___fpclassifyf^0,f,c
  5310   004D5E                     u4250:
  5311   004D5E  2EE8               	decfsz	wreg,f,c
  5312   004D60  EFAA  F026         	goto	u4255
  5313   004D64  5005               	movf	??___fpclassifyf^0,w,c
  5314   004D66  6E09               	movwf	___fpclassifyf@e^0,c
  5315   004D68  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5316   004D6A  5009               	movf	___fpclassifyf@e^0,w,c
  5317   004D6C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5318   004D6E  A4D8               	btfss	status,2,c
  5319   004D70  EFBC  F026         	goto	u4261
  5320   004D74  EFBE  F026         	goto	u4260
  5321   004D78                     u4261:
  5322   004D78  EFDE  F026         	goto	l4615
  5323   004D7C                     u4260:
  5324   004D7C  90D8               	bcf	status,0,c
  5325   004D7E  340B               	rlcf	___fpclassifyf@u^0,w,c
  5326   004D80  6E05               	movwf	??___fpclassifyf^0,c
  5327   004D82  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5328   004D84  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5329   004D86  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5330   004D88  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5331   004D8A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5332   004D8C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5333   004D8E  5005               	movf	??___fpclassifyf^0,w,c
  5334   004D90  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5335   004D92  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5336   004D94  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5337   004D96  A4D8               	btfss	status,2,c
  5338   004D98  EFD0  F026         	goto	u4271
  5339   004D9C  EFD2  F026         	goto	u4270
  5340   004DA0                     u4271:
  5341   004DA0  EFD8  F026         	goto	l4611
  5342   004DA4                     u4270:
  5343   004DA4  0E00               	movlw	0
  5344   004DA6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5345   004DA8  0E02               	movlw	2
  5346   004DAA  6E01               	movwf	?___fpclassifyf^0,c
  5347   004DAC  EF0D  F027         	goto	l1518
  5348   004DB0                     l4611:
  5349   004DB0  0E00               	movlw	0
  5350   004DB2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5351   004DB4  0E03               	movlw	3
  5352   004DB6  6E01               	movwf	?___fpclassifyf^0,c
  5353   004DB8  EF0D  F027         	goto	l1518
  5354   004DBC                     l4615:
  5355   004DBC  2809               	incf	___fpclassifyf@e^0,w,c
  5356   004DBE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5357   004DC0  A4D8               	btfss	status,2,c
  5358   004DC2  EFE5  F026         	goto	u4281
  5359   004DC6  EFE7  F026         	goto	u4280
  5360   004DCA                     u4281:
  5361   004DCA  EF09  F027         	goto	l4621
  5362   004DCE                     u4280:
  5363   004DCE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5364   004DD2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5365   004DD6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5366   004DDA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5367   004DDE  0E09               	movlw	9
  5368   004DE0                     u4295:
  5369   004DE0  90D8               	bcf	status,0,c
  5370   004DE2  3605               	rlcf	??___fpclassifyf^0,f,c
  5371   004DE4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5372   004DE6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5373   004DE8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5374   004DEA  2EE8               	decfsz	wreg,f,c
  5375   004DEC  EFF0  F026         	goto	u4295
  5376   004DF0  5005               	movf	??___fpclassifyf^0,w,c
  5377   004DF2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5378   004DF4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5379   004DF6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5380   004DF8  B4D8               	btfsc	status,2,c
  5381   004DFA  EF01  F027         	goto	u4301
  5382   004DFE  EF04  F027         	goto	u4300
  5383   004E02                     u4301:
  5384   004E02  0E01               	movlw	1
  5385   004E04  EF05  F027         	goto	u4310
  5386   004E08                     u4300:
  5387   004E08  0E00               	movlw	0
  5388   004E0A                     u4310:
  5389   004E0A  6E01               	movwf	?___fpclassifyf^0,c
  5390   004E0C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5391   004E0E  EF0D  F027         	goto	l1518
  5392   004E12                     l4621:
  5393   004E12  0E00               	movlw	0
  5394   004E14  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5395   004E16  0E04               	movlw	4
  5396   004E18  6E01               	movwf	?___fpclassifyf^0,c
  5397   004E1A                     l1518:
  5398   004E1A  0012               	return		;funcret
  5399   004E1C                     __end_of___fpclassifyf:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function ___fltol *****************
  5403 ;; Defined at:
  5404 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  f1              4    0[COMRAM] int 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  exp1            1    9[COMRAM] unsigned char 
  5409 ;;  sign1           1    8[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  4    0[COMRAM] long 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5422 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;Total ram usage:       10 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_reverseOneBlock
  5429 ;;		_ForwardOneBlock
  5430 ;;		_Forwardhalfblock
  5431 ;;		_efgtoa
  5432 ;;		_Backhalfblock
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text11
  5437   004B14                     __ptext11:
  5438                           	callstack 0
  5439   004B14                     ___fltol:
  5440                           	callstack 26
  5441   004B14  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5442   004B16  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5443   004B18  6E0A               	movwf	___fltol@exp1^0,c
  5444   004B1A  500A               	movf	___fltol@exp1^0,w,c
  5445   004B1C  A4D8               	btfss	status,2,c
  5446   004B1E  EF93  F025         	goto	u4151
  5447   004B22  EF95  F025         	goto	u4150
  5448   004B26                     u4151:
  5449   004B26  EF9F  F025         	goto	l4547
  5450   004B2A                     u4150:
  5451   004B2A                     l4543:
  5452   004B2A  0E00               	movlw	0
  5453   004B2C  6E01               	movwf	?___fltol^0,c
  5454   004B2E  0E00               	movlw	0
  5455   004B30  6E02               	movwf	(?___fltol+1)^0,c
  5456   004B32  0E00               	movlw	0
  5457   004B34  6E03               	movwf	(?___fltol+2)^0,c
  5458   004B36  0E00               	movlw	0
  5459   004B38  6E04               	movwf	(?___fltol+3)^0,c
  5460   004B3A  EF0C  F026         	goto	l991
  5461   004B3E                     l4547:
  5462   004B3E  C001  F005         	movff	___fltol@f1,??___fltol
  5463   004B42  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5464   004B46  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5465   004B4A  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5466   004B4E  0E20               	movlw	32
  5467   004B50  EFAF  F025         	goto	u4160
  5468   004B54                     u4165:
  5469   004B54  90D8               	bcf	status,0,c
  5470   004B56  3208               	rrcf	(??___fltol+3)^0,f,c
  5471   004B58  3207               	rrcf	(??___fltol+2)^0,f,c
  5472   004B5A  3206               	rrcf	(??___fltol+1)^0,f,c
  5473   004B5C  3205               	rrcf	??___fltol^0,f,c
  5474   004B5E                     u4160:
  5475   004B5E  2EE8               	decfsz	wreg,f,c
  5476   004B60  EFAA  F025         	goto	u4165
  5477   004B64  5005               	movf	??___fltol^0,w,c
  5478   004B66  6E09               	movwf	___fltol@sign1^0,c
  5479   004B68  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5480   004B6A  0EFF               	movlw	255
  5481   004B6C  1601               	andwf	___fltol@f1^0,f,c
  5482   004B6E  0EFF               	movlw	255
  5483   004B70  1602               	andwf	(___fltol@f1+1)^0,f,c
  5484   004B72  0EFF               	movlw	255
  5485   004B74  1603               	andwf	(___fltol@f1+2)^0,f,c
  5486   004B76  0E00               	movlw	0
  5487   004B78  1604               	andwf	(___fltol@f1+3)^0,f,c
  5488   004B7A  0E96               	movlw	150
  5489   004B7C  5E0A               	subwf	___fltol@exp1^0,f,c
  5490   004B7E  BE0A               	btfsc	___fltol@exp1^0,7,c
  5491   004B80  EFC6  F025         	goto	u4170
  5492   004B84  EFC4  F025         	goto	u4171
  5493   004B88                     u4171:
  5494   004B88  EFDC  F025         	goto	l4567
  5495   004B8C                     u4170:
  5496   004B8C  500A               	movf	___fltol@exp1^0,w,c
  5497   004B8E  0A80               	xorlw	128
  5498   004B90  0F97               	addlw	151
  5499   004B92  B0D8               	btfsc	status,0,c
  5500   004B94  EFCE  F025         	goto	u4181
  5501   004B98  EFD0  F025         	goto	u4180
  5502   004B9C                     u4181:
  5503   004B9C  EFD2  F025         	goto	l4563
  5504   004BA0                     u4180:
  5505   004BA0  EF95  F025         	goto	l4543
  5506   004BA4                     l4563:
  5507   004BA4  90D8               	bcf	status,0,c
  5508   004BA6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5509   004BA8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5510   004BAA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5511   004BAC  3201               	rrcf	___fltol@f1^0,f,c
  5512   004BAE  3E0A               	incfsz	___fltol@exp1^0,f,c
  5513   004BB0  EFD2  F025         	goto	l4563
  5514   004BB4  EFF4  F025         	goto	l4577
  5515   004BB8                     l4567:
  5516   004BB8  0E1F               	movlw	31
  5517   004BBA  640A               	cpfsgt	___fltol@exp1^0,c
  5518   004BBC  EFE2  F025         	goto	u4191
  5519   004BC0  EFE4  F025         	goto	u4190
  5520   004BC4                     u4191:
  5521   004BC4  EFEC  F025         	goto	l4575
  5522   004BC8                     u4190:
  5523   004BC8  EF95  F025         	goto	l4543
  5524   004BCC                     l4573:
  5525   004BCC  90D8               	bcf	status,0,c
  5526   004BCE  3601               	rlcf	___fltol@f1^0,f,c
  5527   004BD0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5528   004BD2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5529   004BD4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5530   004BD6  060A               	decf	___fltol@exp1^0,f,c
  5531   004BD8                     l4575:
  5532   004BD8  500A               	movf	___fltol@exp1^0,w,c
  5533   004BDA  A4D8               	btfss	status,2,c
  5534   004BDC  EFF2  F025         	goto	u4201
  5535   004BE0  EFF4  F025         	goto	u4200
  5536   004BE4                     u4201:
  5537   004BE4  EFE6  F025         	goto	l4573
  5538   004BE8                     u4200:
  5539   004BE8                     l4577:
  5540   004BE8  5009               	movf	___fltol@sign1^0,w,c
  5541   004BEA  B4D8               	btfsc	status,2,c
  5542   004BEC  EFFA  F025         	goto	u4211
  5543   004BF0  EFFC  F025         	goto	u4210
  5544   004BF4                     u4211:
  5545   004BF4  EF04  F026         	goto	l4581
  5546   004BF8                     u4210:
  5547   004BF8  1E04               	comf	(___fltol@f1+3)^0,f,c
  5548   004BFA  1E03               	comf	(___fltol@f1+2)^0,f,c
  5549   004BFC  1E02               	comf	(___fltol@f1+1)^0,f,c
  5550   004BFE  6C01               	negf	___fltol@f1^0,c
  5551   004C00  0E00               	movlw	0
  5552   004C02  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5553   004C04  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5554   004C06  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5555   004C08                     l4581:
  5556   004C08  C001  F001         	movff	___fltol@f1,?___fltol
  5557   004C0C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5558   004C10  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5559   004C14  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5560   004C18                     l991:
  5561   004C18  0012               	return		;funcret
  5562   004C1A                     __end_of___fltol:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function ___flneg *****************
  5566 ;; Defined at:
  5567 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  f1              4    0[COMRAM] long 
  5570 ;; Auto vars:     Size  Location     Type
  5571 ;;		None
  5572 ;; Return value:  Size  Location     Type
  5573 ;;                  4    0[COMRAM] long 
  5574 ;; Registers used:
  5575 ;;		wreg, status,2, status,0
  5576 ;; Tracked objects:
  5577 ;;		On entry : 0/0
  5578 ;;		On exit  : 0/0
  5579 ;;		Unchanged: 0/0
  5580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5581 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5585 ;;Total ram usage:        4 bytes
  5586 ;; Hardware stack levels used: 1
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_efgtoa
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text12
  5595   005FAC                     __ptext12:
  5596                           	callstack 0
  5597   005FAC                     ___flneg:
  5598                           	callstack 26
  5599   005FAC  5001               	movf	___flneg@f1^0,w,c
  5600   005FAE  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5601   005FB0  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5602   005FB2  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5603   005FB4  B4D8               	btfsc	status,2,c
  5604   005FB6  EFDF  F02F         	goto	u4141
  5605   005FBA  EFE1  F02F         	goto	u4140
  5606   005FBE                     u4141:
  5607   005FBE  EFE9  F02F         	goto	l4537
  5608   005FC2                     u4140:
  5609   005FC2  0E00               	movlw	0
  5610   005FC4  1A01               	xorwf	___flneg@f1^0,f,c
  5611   005FC6  0E00               	movlw	0
  5612   005FC8  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5613   005FCA  0E00               	movlw	0
  5614   005FCC  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5615   005FCE  0E80               	movlw	128
  5616   005FD0  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5617   005FD2                     l4537:
  5618   005FD2  C001  F001         	movff	___flneg@f1,?___flneg
  5619   005FD6  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5620   005FDA  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5621   005FDE  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5622   005FE2  0012               	return		;funcret
  5623   005FE4                     __end_of___flneg:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _dtoa *****************
  5627 ;; Defined at:
  5628 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5631 ;;		 -> sprintf@f(11), 
  5632 ;;  d               8   29[COMRAM] long long 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  n               8   51[COMRAM] long long 
  5635 ;;  i               2   59[COMRAM] int 
  5636 ;;  w               2   49[COMRAM] int 
  5637 ;;  p               2   47[COMRAM] int 
  5638 ;;  s               1   61[COMRAM] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      void 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5648 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5652 ;;Total ram usage:       35 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 4
  5655 ;; This function calls:
  5656 ;;		___aodiv
  5657 ;;		___aomod
  5658 ;;		_abs
  5659 ;;		_pad
  5660 ;; This function is called by:
  5661 ;;		_vfpfcnvrt
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           	psect	text13
  5666   003E98                     __ptext13:
  5667                           	callstack 0
  5668   003E98                     _dtoa:
  5669                           	callstack 23
  5670   003E98                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5672   003E98  C01E  F034         	movff	dtoa@d,dtoa@n
  5673   003E9C  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5674   003EA0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5675   003EA4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5676   003EA8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5677   003EAC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5678   003EB0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5679   003EB4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5680   003EB8                     
  5681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5682   003EB8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5683   003EBA  EF61  F01F         	goto	u4581
  5684   003EBE  EF64  F01F         	goto	u4580
  5685   003EC2                     u4581:
  5686   003EC2  0E01               	movlw	1
  5687   003EC4  EF65  F01F         	goto	u4590
  5688   003EC8                     u4580:
  5689   003EC8  0E00               	movlw	0
  5690   003ECA                     u4590:
  5691   003ECA  6E3E               	movwf	dtoa@s^0,c
  5692   003ECC                     
  5693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5694   003ECC  503E               	movf	dtoa@s^0,w,c
  5695   003ECE  B4D8               	btfsc	status,2,c
  5696   003ED0  EF6C  F01F         	goto	u4601
  5697   003ED4  EF6E  F01F         	goto	u4600
  5698   003ED8                     u4601:
  5699   003ED8  EF7E  F01F         	goto	l4761
  5700   003EDC                     u4600:
  5701   003EDC                     
  5702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5703   003EDC  1E3B               	comf	(dtoa@n+7)^0,f,c
  5704   003EDE  1E3A               	comf	(dtoa@n+6)^0,f,c
  5705   003EE0  1E39               	comf	(dtoa@n+5)^0,f,c
  5706   003EE2  1E38               	comf	(dtoa@n+4)^0,f,c
  5707   003EE4  1E37               	comf	(dtoa@n+3)^0,f,c
  5708   003EE6  1E36               	comf	(dtoa@n+2)^0,f,c
  5709   003EE8  1E35               	comf	(dtoa@n+1)^0,f,c
  5710   003EEA  6C34               	negf	dtoa@n^0,c
  5711   003EEC  0E00               	movlw	0
  5712   003EEE  2235               	addwfc	(dtoa@n+1)^0,f,c
  5713   003EF0  2236               	addwfc	(dtoa@n+2)^0,f,c
  5714   003EF2  2237               	addwfc	(dtoa@n+3)^0,f,c
  5715   003EF4  2238               	addwfc	(dtoa@n+4)^0,f,c
  5716   003EF6  2239               	addwfc	(dtoa@n+5)^0,f,c
  5717   003EF8  223A               	addwfc	(dtoa@n+6)^0,f,c
  5718   003EFA  223B               	addwfc	(dtoa@n+7)^0,f,c
  5719   003EFC                     l4761:
  5720                           
  5721                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5722   003EFC  0100               	movlb	0	; () banked
  5723   003EFE  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5724   003F00  EF8C  F01F         	goto	u4610
  5725   003F04  51F0               	movf	(_prec+1)& (0+255),w,b
  5726   003F06  E106               	bnz	u4611
  5727   003F08  05EF               	decf	_prec& (0+255),w,b
  5728   003F0A  B0D8               	btfsc	status,0,c
  5729   003F0C  EF8A  F01F         	goto	u4611
  5730   003F10  EF8C  F01F         	goto	u4610
  5731   003F14                     u4611:
  5732   003F14  EF92  F01F         	goto	l1413
  5733   003F18                     u4610:
  5734   003F18                     
  5735                           ; BSR set to: 0
  5736   003F18  0E00               	movlw	0
  5737   003F1A  6E31               	movwf	(dtoa@p+1)^0,c
  5738   003F1C  0E01               	movlw	1
  5739   003F1E  6E30               	movwf	dtoa@p^0,c
  5740   003F20  EF96  F01F         	goto	l1415
  5741   003F24                     l1413:
  5742                           
  5743                           ; BSR set to: 0
  5744   003F24  C0EF  F030         	movff	_prec,dtoa@p
  5745   003F28  C0F0  F031         	movff	_prec+1,dtoa@p+1
  5746   003F2C                     l1415:
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5750   003F2C  C0ED  F032         	movff	_width,dtoa@w
  5751   003F30  C0EE  F033         	movff	_width+1,dtoa@w+1
  5752   003F34                     
  5753                           ; BSR set to: 0
  5754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5755   003F34  503E               	movf	dtoa@s^0,w,c
  5756   003F36  B4D8               	btfsc	status,2,c
  5757   003F38  EFA0  F01F         	goto	u4621
  5758   003F3C  EFA2  F01F         	goto	u4620
  5759   003F40                     u4621:
  5760   003F40  EFB9  F01F         	goto	l1416
  5761   003F44                     u4620:
  5762   003F44                     
  5763                           ; BSR set to: 0
  5764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5765   003F44  0632               	decf	dtoa@w^0,f,c
  5766   003F46  A0D8               	btfss	status,0,c
  5767   003F48  0633               	decf	(dtoa@w+1)^0,f,c
  5768   003F4A                     
  5769                           ; BSR set to: 0
  5770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5771   003F4A  503E               	movf	dtoa@s^0,w,c
  5772   003F4C  A4D8               	btfss	status,2,c
  5773   003F4E  EFAB  F01F         	goto	u4631
  5774   003F52  EFAD  F01F         	goto	u4630
  5775   003F56                     u4631:
  5776   003F56  EFB3  F01F         	goto	l4773
  5777   003F5A                     u4630:
  5778   003F5A                     
  5779                           ; BSR set to: 0
  5780   003F5A  0E00               	movlw	0
  5781   003F5C  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5782   003F5E  0E2B               	movlw	43
  5783   003F60  6E2E               	movwf	_dtoa$2741^0,c
  5784   003F62  EFB7  F01F         	goto	l4775
  5785   003F66                     l4773:
  5786                           
  5787                           ; BSR set to: 0
  5788   003F66  0E00               	movlw	0
  5789   003F68  6E2F               	movwf	(_dtoa$2741+1)^0,c
  5790   003F6A  0E2D               	movlw	45
  5791   003F6C  6E2E               	movwf	_dtoa$2741^0,c
  5792   003F6E                     l4775:
  5793                           
  5794                           ; BSR set to: 0
  5795   003F6E  C02E  F03E         	movff	_dtoa$2741,dtoa@s
  5796   003F72                     l1416:
  5797                           
  5798                           ; BSR set to: 0
  5799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5800   003F72  0E00               	movlw	0
  5801   003F74  6E3D               	movwf	(dtoa@i+1)^0,c
  5802   003F76  0E4F               	movlw	79
  5803   003F78  6E3C               	movwf	dtoa@i^0,c
  5804   003F7A                     
  5805                           ; BSR set to: 0
  5806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5807   003F7A  0E00               	movlw	0
  5808   003F7C  0102               	movlb	2	; () banked
  5809   003F7E  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5812   003F80  EF3E  F020         	goto	l4789
  5813   003F84                     l4779:
  5814                           
  5815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5816   003F84  063C               	decf	dtoa@i^0,f,c
  5817   003F86  A0D8               	btfss	status,0,c
  5818   003F88  063D               	decf	(dtoa@i+1)^0,f,c
  5819   003F8A                     
  5820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5821   003F8A  0EA0               	movlw	low _dbuf
  5822   003F8C  243C               	addwf	dtoa@i^0,w,c
  5823   003F8E  6ED9               	movwf	fsr2l,c
  5824   003F90  0E02               	movlw	high _dbuf
  5825   003F92  203D               	addwfc	(dtoa@i+1)^0,w,c
  5826   003F94  6EDA               	movwf	fsr2h,c
  5827   003F96  C034  F001         	movff	dtoa@n,___aomod@dividend
  5828   003F9A  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5829   003F9E  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5830   003FA2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5831   003FA6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5832   003FAA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5833   003FAE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5834   003FB2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5835   003FB6  0E0A               	movlw	10
  5836   003FB8  6E09               	movwf	___aomod@divisor^0,c
  5837   003FBA  0E00               	movlw	0
  5838   003FBC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5839   003FBE  0E00               	movlw	0
  5840   003FC0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5841   003FC2  0E00               	movlw	0
  5842   003FC4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5843   003FC6  0E00               	movlw	0
  5844   003FC8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5845   003FCA  0E00               	movlw	0
  5846   003FCC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5847   003FCE  0E00               	movlw	0
  5848   003FD0  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5849   003FD2  0E00               	movlw	0
  5850   003FD4  6E10               	movwf	(___aomod@divisor+7)^0,c
  5851   003FD6  ECD8  F024         	call	___aomod	;wreg free
  5852   003FDA  C001  F026         	movff	?___aomod,??_dtoa
  5853   003FDE  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5854   003FE2  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5855   003FE6  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5856   003FEA  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5857   003FEE  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5858   003FF2  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5859   003FF6  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5860   003FFA  C026  F013         	movff	??_dtoa,abs@a
  5861   003FFE  C027  F014         	movff	??_dtoa+1,abs@a+1
  5862   004002  EC78  F02F         	call	_abs	;wreg free
  5863   004006  5013               	movf	?_abs^0,w,c
  5864   004008  0F30               	addlw	48
  5865   00400A  6EDF               	movwf	indf2,c
  5866   00400C                     
  5867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5868   00400C  0630               	decf	dtoa@p^0,f,c
  5869   00400E  A0D8               	btfss	status,0,c
  5870   004010  0631               	decf	(dtoa@p+1)^0,f,c
  5871   004012                     
  5872                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5873   004012  0632               	decf	dtoa@w^0,f,c
  5874   004014  A0D8               	btfss	status,0,c
  5875   004016  0633               	decf	(dtoa@w+1)^0,f,c
  5876   004018                     
  5877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5878   004018  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5879   00401C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5880   004020  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5881   004024  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5882   004028  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5883   00402C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5884   004030  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5885   004034  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5886   004038  0E0A               	movlw	10
  5887   00403A  6E09               	movwf	___aodiv@divisor^0,c
  5888   00403C  0E00               	movlw	0
  5889   00403E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5890   004040  0E00               	movlw	0
  5891   004042  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5892   004044  0E00               	movlw	0
  5893   004046  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5894   004048  0E00               	movlw	0
  5895   00404A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5896   00404C  0E00               	movlw	0
  5897   00404E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5898   004050  0E00               	movlw	0
  5899   004052  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5900   004054  0E00               	movlw	0
  5901   004056  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5902   004058  EC5E  F023         	call	___aodiv	;wreg free
  5903   00405C  C001  F034         	movff	?___aodiv,dtoa@n
  5904   004060  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5905   004064  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5906   004068  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5907   00406C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5908   004070  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5909   004074  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5910   004078  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5911   00407C                     l4789:
  5912                           
  5913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5914   00407C  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5915   00407E  EF49  F020         	goto	u4641
  5916   004082  503D               	movf	(dtoa@i+1)^0,w,c
  5917   004084  E108               	bnz	u4640
  5918   004086  043C               	decf	dtoa@i^0,w,c
  5919   004088  A0D8               	btfss	status,0,c
  5920   00408A  EF49  F020         	goto	u4641
  5921   00408E  EF4B  F020         	goto	u4640
  5922   004092                     u4641:
  5923   004092  EF67  F020         	goto	l4795
  5924   004096                     u4640:
  5925   004096  5034               	movf	dtoa@n^0,w,c
  5926   004098  1035               	iorwf	(dtoa@n+1)^0,w,c
  5927   00409A  1036               	iorwf	(dtoa@n+2)^0,w,c
  5928   00409C  1037               	iorwf	(dtoa@n+3)^0,w,c
  5929   00409E  1038               	iorwf	(dtoa@n+4)^0,w,c
  5930   0040A0  1039               	iorwf	(dtoa@n+5)^0,w,c
  5931   0040A2  103A               	iorwf	(dtoa@n+6)^0,w,c
  5932   0040A4  103B               	iorwf	(dtoa@n+7)^0,w,c
  5933   0040A6  A4D8               	btfss	status,2,c
  5934   0040A8  EF58  F020         	goto	u4651
  5935   0040AC  EF5A  F020         	goto	u4650
  5936   0040B0                     u4651:
  5937   0040B0  EFC2  F01F         	goto	l4779
  5938   0040B4                     u4650:
  5939   0040B4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5940   0040B6  EF67  F020         	goto	u4660
  5941   0040BA  5031               	movf	(dtoa@p+1)^0,w,c
  5942   0040BC  E106               	bnz	u4661
  5943   0040BE  0430               	decf	dtoa@p^0,w,c
  5944   0040C0  B0D8               	btfsc	status,0,c
  5945   0040C2  EF65  F020         	goto	u4661
  5946   0040C6  EF67  F020         	goto	u4660
  5947   0040CA                     u4661:
  5948   0040CA  EFC2  F01F         	goto	l4779
  5949   0040CE                     u4660:
  5950   0040CE                     l4795:
  5951                           
  5952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5953   0040CE  503E               	movf	dtoa@s^0,w,c
  5954   0040D0  B4D8               	btfsc	status,2,c
  5955   0040D2  EF6D  F020         	goto	u4671
  5956   0040D6  EF6F  F020         	goto	u4670
  5957   0040DA                     u4671:
  5958   0040DA  EF7A  F020         	goto	l4801
  5959   0040DE                     u4670:
  5960   0040DE                     
  5961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5962   0040DE  063C               	decf	dtoa@i^0,f,c
  5963   0040E0  A0D8               	btfss	status,0,c
  5964   0040E2  063D               	decf	(dtoa@i+1)^0,f,c
  5965   0040E4                     
  5966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5967   0040E4  0EA0               	movlw	low _dbuf
  5968   0040E6  243C               	addwf	dtoa@i^0,w,c
  5969   0040E8  6ED9               	movwf	fsr2l,c
  5970   0040EA  0E02               	movlw	high _dbuf
  5971   0040EC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5972   0040EE  6EDA               	movwf	fsr2h,c
  5973   0040F0  C03E  FFDF         	movff	dtoa@s,indf2
  5974   0040F4                     l4801:
  5975                           
  5976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5977   0040F4  C01C  F011         	movff	dtoa@fp,pad@fp
  5978   0040F8  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5979   0040FC  0EA0               	movlw	low _dbuf
  5980   0040FE  243C               	addwf	dtoa@i^0,w,c
  5981   004100  6E13               	movwf	pad@buf^0,c
  5982   004102  0E02               	movlw	high _dbuf
  5983   004104  203D               	addwfc	(dtoa@i+1)^0,w,c
  5984   004106  6E14               	movwf	(pad@buf+1)^0,c
  5985   004108  C032  F015         	movff	dtoa@w,pad@p
  5986   00410C  C033  F016         	movff	dtoa@w+1,pad@p+1
  5987   004110  ECD3  F02A         	call	_pad	;wreg free
  5988   004114  0012               	return		;funcret
  5989   004116                     __end_of_dtoa:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _pad *****************
  5993 ;; Defined at:
  5994 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5997 ;;		 -> sprintf@f(11), 
  5998 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5999 ;;		 -> dbuf(80), 
  6000 ;;  p               2   20[COMRAM] int 
  6001 ;; Auto vars:     Size  Location     Type
  6002 ;;  w               2   25[COMRAM] int 
  6003 ;;  i               2   23[COMRAM] int 
  6004 ;; Return value:  Size  Location     Type
  6005 ;;                  1    wreg      void 
  6006 ;; Registers used:
  6007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6008 ;; Tracked objects:
  6009 ;;		On entry : 0/0
  6010 ;;		On exit  : 0/0
  6011 ;;		Unchanged: 0/0
  6012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6013 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;Total ram usage:       11 bytes
  6018 ;; Hardware stack levels used: 1
  6019 ;; Hardware stack levels required when called: 3
  6020 ;; This function calls:
  6021 ;;		_fputc
  6022 ;;		_fputs
  6023 ;; This function is called by:
  6024 ;;		_dtoa
  6025 ;;		_efgtoa
  6026 ;; This function uses a non-reentrant model
  6027 ;;
  6028                           
  6029                           	psect	text14
  6030   0055A6                     __ptext14:
  6031                           	callstack 0
  6032   0055A6                     _pad:
  6033                           	callstack 23
  6034   0055A6                     
  6035                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  6036   0055A6  BE16               	btfsc	(pad@p+1)^0,7,c
  6037   0055A8  EFD8  F02A         	goto	u4221
  6038   0055AC  EFDA  F02A         	goto	u4220
  6039   0055B0                     u4221:
  6040   0055B0  EFE0  F02A         	goto	l4589
  6041   0055B4                     u4220:
  6042   0055B4  C015  F01A         	movff	pad@p,pad@w
  6043   0055B8  C016  F01B         	movff	pad@p+1,pad@w+1
  6044   0055BC  EFE4  F02A         	goto	l1404
  6045   0055C0                     l4589:
  6046   0055C0  0E00               	movlw	0
  6047   0055C2  6E1B               	movwf	(pad@w+1)^0,c
  6048   0055C4  0E00               	movlw	0
  6049   0055C6  6E1A               	movwf	pad@w^0,c
  6050   0055C8                     l1404:
  6051                           
  6052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  6053   0055C8  0E00               	movlw	0
  6054   0055CA  6E19               	movwf	(pad@i+1)^0,c
  6055   0055CC  0E00               	movlw	0
  6056   0055CE  6E18               	movwf	pad@i^0,c
  6057                           
  6058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6059   0055D0  EFF6  F02A         	goto	l4595
  6060   0055D4                     l4591:
  6061                           
  6062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  6063   0055D4  0E00               	movlw	0
  6064   0055D6  6E02               	movwf	(fputc@c+1)^0,c
  6065   0055D8  0E20               	movlw	32
  6066   0055DA  6E01               	movwf	fputc@c^0,c
  6067   0055DC  C011  F003         	movff	pad@fp,fputc@fp
  6068   0055E0  C012  F004         	movff	pad@fp+1,fputc@fp+1
  6069   0055E4  EC0E  F027         	call	_fputc	;wreg free
  6070   0055E8                     
  6071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  6072   0055E8  4A18               	infsnz	pad@i^0,f,c
  6073   0055EA  2A19               	incf	(pad@i+1)^0,f,c
  6074   0055EC                     l4595:
  6075                           
  6076                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  6077   0055EC  501A               	movf	pad@w^0,w,c
  6078   0055EE  5C18               	subwf	pad@i^0,w,c
  6079   0055F0  5019               	movf	(pad@i+1)^0,w,c
  6080   0055F2  0A80               	xorlw	128
  6081   0055F4  6E17               	movwf	??_pad^0,c
  6082   0055F6  501B               	movf	(pad@w+1)^0,w,c
  6083   0055F8  0A80               	xorlw	128
  6084   0055FA  5817               	subwfb	??_pad^0,w,c
  6085   0055FC  A0D8               	btfss	status,0,c
  6086   0055FE  EF03  F02B         	goto	u4231
  6087   005602  EF05  F02B         	goto	u4230
  6088   005606                     u4231:
  6089   005606  EFEA  F02A         	goto	l4591
  6090   00560A                     u4230:
  6091   00560A                     
  6092                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  6093   00560A  C013  F00A         	movff	pad@buf,fputs@s
  6094   00560E  C014  F00B         	movff	pad@buf+1,fputs@s+1
  6095   005612  C011  F00C         	movff	pad@fp,fputs@fp
  6096   005616  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  6097   00561A  EC35  F02F         	call	_fputs	;wreg free
  6098   00561E  0012               	return		;funcret
  6099   005620                     __end_of_pad:
  6100                           	callstack 0
  6101                           
  6102 ;; *************** function _fputs *****************
  6103 ;; Defined at:
  6104 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  s               2    9[COMRAM] PTR const unsigned char 
  6107 ;;		 -> dbuf(80), 
  6108 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  6109 ;;		 -> sprintf@f(11), 
  6110 ;; Auto vars:     Size  Location     Type
  6111 ;;  i               2   14[COMRAM] int 
  6112 ;;  c               1   13[COMRAM] unsigned char 
  6113 ;; Return value:  Size  Location     Type
  6114 ;;                  2    9[COMRAM] int 
  6115 ;; Registers used:
  6116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6117 ;; Tracked objects:
  6118 ;;		On entry : 0/0
  6119 ;;		On exit  : 0/0
  6120 ;;		Unchanged: 0/0
  6121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6123 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6126 ;;Total ram usage:        7 bytes
  6127 ;; Hardware stack levels used: 1
  6128 ;; Hardware stack levels required when called: 2
  6129 ;; This function calls:
  6130 ;;		_fputc
  6131 ;; This function is called by:
  6132 ;;		_pad
  6133 ;; This function uses a non-reentrant model
  6134 ;;
  6135                           
  6136                           	psect	text15
  6137   005E6A                     __ptext15:
  6138                           	callstack 0
  6139   005E6A                     _fputs:
  6140                           	callstack 23
  6141   005E6A  0E00               	movlw	0
  6142   005E6C  6E10               	movwf	(fputs@i+1)^0,c
  6143   005E6E  0E00               	movlw	0
  6144   005E70  6E0F               	movwf	fputs@i^0,c
  6145   005E72  EF46  F02F         	goto	l4123
  6146   005E76                     l4119:
  6147   005E76  C00E  F001         	movff	fputs@c,fputc@c
  6148   005E7A  6A02               	clrf	(fputc@c+1)^0,c
  6149   005E7C  C00C  F003         	movff	fputs@fp,fputc@fp
  6150   005E80  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  6151   005E84  EC0E  F027         	call	_fputc	;wreg free
  6152   005E88  4A0F               	infsnz	fputs@i^0,f,c
  6153   005E8A  2A10               	incf	(fputs@i+1)^0,f,c
  6154   005E8C                     l4123:
  6155   005E8C  500F               	movf	fputs@i^0,w,c
  6156   005E8E  240A               	addwf	fputs@s^0,w,c
  6157   005E90  6ED9               	movwf	fsr2l,c
  6158   005E92  5010               	movf	(fputs@i+1)^0,w,c
  6159   005E94  200B               	addwfc	(fputs@s+1)^0,w,c
  6160   005E96  6EDA               	movwf	fsr2h,c
  6161   005E98  50DF               	movf	indf2,w,c
  6162   005E9A  6E0E               	movwf	fputs@c^0,c
  6163   005E9C  500E               	movf	fputs@c^0,w,c
  6164   005E9E  A4D8               	btfss	status,2,c
  6165   005EA0  EF54  F02F         	goto	u3481
  6166   005EA4  EF56  F02F         	goto	u3480
  6167   005EA8                     u3481:
  6168   005EA8  EF3B  F02F         	goto	l4119
  6169   005EAC                     u3480:
  6170   005EAC  0012               	return		;funcret
  6171   005EAE                     __end_of_fputs:
  6172                           	callstack 0
  6173                           
  6174 ;; *************** function _fputc *****************
  6175 ;; Defined at:
  6176 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;  c               2    0[COMRAM] int 
  6179 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  6180 ;;		 -> sprintf@f(11), 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2    0[COMRAM] int 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6194 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;Total ram usage:        9 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; Hardware stack levels required when called: 1
  6199 ;; This function calls:
  6200 ;;		_putch
  6201 ;; This function is called by:
  6202 ;;		_pad
  6203 ;;		_vfpfcnvrt
  6204 ;;		_fputs
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text16
  6209   004E1C                     __ptext16:
  6210                           	callstack 0
  6211   004E1C                     _fputc:
  6212                           	callstack 26
  6213   004E1C  5003               	movf	fputc@fp^0,w,c
  6214   004E1E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6215   004E20  B4D8               	btfsc	status,2,c
  6216   004E22  EF15  F027         	goto	u3021
  6217   004E26  EF17  F027         	goto	u3020
  6218   004E2A                     u3021:
  6219   004E2A  EF20  F027         	goto	l3877
  6220   004E2E                     u3020:
  6221   004E2E  5003               	movf	fputc@fp^0,w,c
  6222   004E30  1004               	iorwf	(fputc@fp+1)^0,w,c
  6223   004E32  A4D8               	btfss	status,2,c
  6224   004E34  EF1E  F027         	goto	u3031
  6225   004E38  EF20  F027         	goto	u3030
  6226   004E3C                     u3031:
  6227   004E3C  EF25  F027         	goto	l3879
  6228   004E40                     u3030:
  6229   004E40                     l3877:
  6230   004E40  5001               	movf	fputc@c^0,w,c
  6231   004E42  ECE4  F030         	call	_putch
  6232   004E46  EF72  F027         	goto	l1564
  6233   004E4A                     l3879:
  6234   004E4A  EE20 F009          	lfsr	2,9
  6235   004E4E  5003               	movf	fputc@fp^0,w,c
  6236   004E50  26D9               	addwf	fsr2l,f,c
  6237   004E52  5004               	movf	(fputc@fp+1)^0,w,c
  6238   004E54  22DA               	addwfc	fsr2h,f,c
  6239   004E56  50DE               	movf	postinc2,w,c
  6240   004E58  10DE               	iorwf	postinc2,w,c
  6241   004E5A  B4D8               	btfsc	status,2,c
  6242   004E5C  EF32  F027         	goto	u3041
  6243   004E60  EF34  F027         	goto	u3040
  6244   004E64                     u3041:
  6245   004E64  EF4F  F027         	goto	l3883
  6246   004E68                     u3040:
  6247   004E68  EE20 F009          	lfsr	2,9
  6248   004E6C  5003               	movf	fputc@fp^0,w,c
  6249   004E6E  26D9               	addwf	fsr2l,f,c
  6250   004E70  5004               	movf	(fputc@fp+1)^0,w,c
  6251   004E72  22DA               	addwfc	fsr2h,f,c
  6252   004E74  EE10 F003          	lfsr	1,3
  6253   004E78  5003               	movf	fputc@fp^0,w,c
  6254   004E7A  26E1               	addwf	fsr1l,f,c
  6255   004E7C  5004               	movf	(fputc@fp+1)^0,w,c
  6256   004E7E  22E2               	addwfc	fsr1h,f,c
  6257   004E80  50DE               	movf	postinc2,w,c
  6258   004E82  5CE6               	subwf	postinc1,w,c
  6259   004E84  50E6               	movf	postinc1,w,c
  6260   004E86  0A80               	xorlw	128
  6261   004E88  6E09               	movwf	(??_fputc+4)^0,c
  6262   004E8A  50DE               	movf	postinc2,w,c
  6263   004E8C  0A80               	xorlw	128
  6264   004E8E  5809               	subwfb	(??_fputc+4)^0,w,c
  6265   004E90  B0D8               	btfsc	status,0,c
  6266   004E92  EF4D  F027         	goto	u3051
  6267   004E96  EF4F  F027         	goto	u3050
  6268   004E9A                     u3051:
  6269   004E9A  EF72  F027         	goto	l1564
  6270   004E9E                     u3050:
  6271   004E9E                     l3883:
  6272   004E9E  EE20 F003          	lfsr	2,3
  6273   004EA2  5003               	movf	fputc@fp^0,w,c
  6274   004EA4  26D9               	addwf	fsr2l,f,c
  6275   004EA6  5004               	movf	(fputc@fp+1)^0,w,c
  6276   004EA8  22DA               	addwfc	fsr2h,f,c
  6277   004EAA  CFDE F005          	movff	postinc2,??_fputc
  6278   004EAE  CFDD F006          	movff	postdec2,??_fputc+1
  6279   004EB2  C003  FFD9         	movff	fputc@fp,fsr2l
  6280   004EB6  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6281   004EBA  CFDE F007          	movff	postinc2,??_fputc+2
  6282   004EBE  CFDD F008          	movff	postdec2,??_fputc+3
  6283   004EC2  5005               	movf	??_fputc^0,w,c
  6284   004EC4  2407               	addwf	(??_fputc+2)^0,w,c
  6285   004EC6  6ED9               	movwf	fsr2l,c
  6286   004EC8  5006               	movf	(??_fputc+1)^0,w,c
  6287   004ECA  2008               	addwfc	(??_fputc+3)^0,w,c
  6288   004ECC  6EDA               	movwf	fsr2h,c
  6289   004ECE  C001  FFDF         	movff	fputc@c,indf2
  6290   004ED2  EE20 F003          	lfsr	2,3
  6291   004ED6  5003               	movf	fputc@fp^0,w,c
  6292   004ED8  26D9               	addwf	fsr2l,f,c
  6293   004EDA  5004               	movf	(fputc@fp+1)^0,w,c
  6294   004EDC  22DA               	addwfc	fsr2h,f,c
  6295   004EDE  2ADE               	incf	postinc2,f,c
  6296   004EE0  0E00               	movlw	0
  6297   004EE2  22DD               	addwfc	postdec2,f,c
  6298   004EE4                     l1564:
  6299   004EE4  0012               	return		;funcret
  6300   004EE6                     __end_of_fputc:
  6301                           	callstack 0
  6302                           
  6303 ;; *************** function _putch *****************
  6304 ;; Defined at:
  6305 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  c               1    wreg     unsigned char 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  c               1    0[COMRAM] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  1    wreg      void 
  6312 ;; Registers used:
  6313 ;;		wreg
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;Total ram usage:        0 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_fputc
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332                           	psect	text17
  6333   0061C8                     __ptext17:
  6334                           	callstack 0
  6335   0061C8                     _putch:
  6336                           	callstack 26
  6337   0061C8  0012               	return		;funcret
  6338   0061CA                     __end_of_putch:
  6339                           	callstack 0
  6340                           
  6341 ;; *************** function _abs *****************
  6342 ;; Defined at:
  6343 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6344 ;; Parameters:    Size  Location     Type
  6345 ;;  a               2   18[COMRAM] int 
  6346 ;; Auto vars:     Size  Location     Type
  6347 ;;		None
  6348 ;; Return value:  Size  Location     Type
  6349 ;;                  2   18[COMRAM] int 
  6350 ;; Registers used:
  6351 ;;		wreg, status,2, status,0
  6352 ;; Tracked objects:
  6353 ;;		On entry : 0/0
  6354 ;;		On exit  : 0/0
  6355 ;;		Unchanged: 0/0
  6356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;Total ram usage:        4 bytes
  6362 ;; Hardware stack levels used: 1
  6363 ;; This function calls:
  6364 ;;		Nothing
  6365 ;; This function is called by:
  6366 ;;		_dtoa
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           	psect	text18
  6371   005EF0                     __ptext18:
  6372                           	callstack 0
  6373   005EF0                     _abs:
  6374                           	callstack 26
  6375   005EF0  BE14               	btfsc	(abs@a+1)^0,7,c
  6376   005EF2  EF85  F02F         	goto	u4240
  6377   005EF6  5014               	movf	(abs@a+1)^0,w,c
  6378   005EF8  E106               	bnz	u4241
  6379   005EFA  0413               	decf	abs@a^0,w,c
  6380   005EFC  B0D8               	btfsc	status,0,c
  6381   005EFE  EF83  F02F         	goto	u4241
  6382   005F02  EF85  F02F         	goto	u4240
  6383   005F06                     u4241:
  6384   005F06  EF93  F02F         	goto	l1523
  6385   005F0A                     u4240:
  6386   005F0A  C013  F015         	movff	abs@a,??_abs
  6387   005F0E  C014  F016         	movff	abs@a+1,??_abs+1
  6388   005F12  1E15               	comf	??_abs^0,f,c
  6389   005F14  1E16               	comf	(??_abs+1)^0,f,c
  6390   005F16  4A15               	infsnz	??_abs^0,f,c
  6391   005F18  2A16               	incf	(??_abs+1)^0,f,c
  6392   005F1A  C015  F013         	movff	??_abs,?_abs
  6393   005F1E  C016  F014         	movff	??_abs+1,?_abs+1
  6394   005F22  EF97  F02F         	goto	l1526
  6395   005F26                     l1523:
  6396   005F26  C013  F013         	movff	abs@a,?_abs
  6397   005F2A  C014  F014         	movff	abs@a+1,?_abs+1
  6398   005F2E                     l1526:
  6399   005F2E  0012               	return		;funcret
  6400   005F30                     __end_of_abs:
  6401                           	callstack 0
  6402                           
  6403 ;; *************** function ___aomod *****************
  6404 ;; Defined at:
  6405 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  dividend        8    0[COMRAM] long long 
  6408 ;;  divisor         8    8[COMRAM] long long 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  sign            1   17[COMRAM] unsigned char 
  6411 ;;  counter         1   16[COMRAM] unsigned char 
  6412 ;; Return value:  Size  Location     Type
  6413 ;;                  8    0[COMRAM] long long 
  6414 ;; Registers used:
  6415 ;;		wreg, status,2, status,0
  6416 ;; Tracked objects:
  6417 ;;		On entry : 0/0
  6418 ;;		On exit  : 0/0
  6419 ;;		Unchanged: 0/0
  6420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6421 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6424 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6425 ;;Total ram usage:       18 bytes
  6426 ;; Hardware stack levels used: 1
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_dtoa
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text19
  6435   0049B0                     __ptext19:
  6436                           	callstack 0
  6437   0049B0                     ___aomod:
  6438                           	callstack 26
  6439   0049B0  0E00               	movlw	0
  6440   0049B2  6E12               	movwf	___aomod@sign^0,c
  6441   0049B4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6442   0049B6  EFE1  F024         	goto	u3580
  6443   0049BA  EFDF  F024         	goto	u3581
  6444   0049BE                     u3581:
  6445   0049BE  EFF3  F024         	goto	l4193
  6446   0049C2                     u3580:
  6447   0049C2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6448   0049C4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6449   0049C6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6450   0049C8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6451   0049CA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6452   0049CC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6453   0049CE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6454   0049D0  6C01               	negf	___aomod@dividend^0,c
  6455   0049D2  0E00               	movlw	0
  6456   0049D4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6457   0049D6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6458   0049D8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6459   0049DA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6460   0049DC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6461   0049DE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6462   0049E0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6463   0049E2  0E01               	movlw	1
  6464   0049E4  6E12               	movwf	___aomod@sign^0,c
  6465   0049E6                     l4193:
  6466   0049E6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6467   0049E8  EFFA  F024         	goto	u3590
  6468   0049EC  EFF8  F024         	goto	u3591
  6469   0049F0                     u3591:
  6470   0049F0  EF0A  F025         	goto	l4197
  6471   0049F4                     u3590:
  6472   0049F4  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6473   0049F6  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6474   0049F8  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6475   0049FA  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6476   0049FC  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6477   0049FE  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6478   004A00  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6479   004A02  6C09               	negf	___aomod@divisor^0,c
  6480   004A04  0E00               	movlw	0
  6481   004A06  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6482   004A08  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6483   004A0A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6484   004A0C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6485   004A0E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6486   004A10  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6487   004A12  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6488   004A14                     l4197:
  6489   004A14  5009               	movf	___aomod@divisor^0,w,c
  6490   004A16  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6491   004A18  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6492   004A1A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6493   004A1C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6494   004A1E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6495   004A20  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6496   004A22  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6497   004A24  B4D8               	btfsc	status,2,c
  6498   004A26  EF17  F025         	goto	u3601
  6499   004A2A  EF19  F025         	goto	u3600
  6500   004A2E                     u3601:
  6501   004A2E  EF61  F025         	goto	l4213
  6502   004A32                     u3600:
  6503   004A32  0E01               	movlw	1
  6504   004A34  6E11               	movwf	___aomod@counter^0,c
  6505   004A36  EF27  F025         	goto	l4203
  6506   004A3A                     l4201:
  6507   004A3A  90D8               	bcf	status,0,c
  6508   004A3C  3609               	rlcf	___aomod@divisor^0,f,c
  6509   004A3E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6510   004A40  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6511   004A42  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6512   004A44  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6513   004A46  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6514   004A48  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6515   004A4A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6516   004A4C  2A11               	incf	___aomod@counter^0,f,c
  6517   004A4E                     l4203:
  6518   004A4E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6519   004A50  EF2C  F025         	goto	u3611
  6520   004A54  EF2E  F025         	goto	u3610
  6521   004A58                     u3611:
  6522   004A58  EF1D  F025         	goto	l4201
  6523   004A5C                     u3610:
  6524   004A5C                     l4205:
  6525   004A5C  5009               	movf	___aomod@divisor^0,w,c
  6526   004A5E  5C01               	subwf	___aomod@dividend^0,w,c
  6527   004A60  500A               	movf	(___aomod@divisor+1)^0,w,c
  6528   004A62  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6529   004A64  500B               	movf	(___aomod@divisor+2)^0,w,c
  6530   004A66  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6531   004A68  500C               	movf	(___aomod@divisor+3)^0,w,c
  6532   004A6A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6533   004A6C  500D               	movf	(___aomod@divisor+4)^0,w,c
  6534   004A6E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6535   004A70  500E               	movf	(___aomod@divisor+5)^0,w,c
  6536   004A72  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6537   004A74  500F               	movf	(___aomod@divisor+6)^0,w,c
  6538   004A76  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6539   004A78  5010               	movf	(___aomod@divisor+7)^0,w,c
  6540   004A7A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6541   004A7C  A0D8               	btfss	status,0,c
  6542   004A7E  EF43  F025         	goto	u3621
  6543   004A82  EF45  F025         	goto	u3620
  6544   004A86                     u3621:
  6545   004A86  EF55  F025         	goto	l4209
  6546   004A8A                     u3620:
  6547   004A8A  5009               	movf	___aomod@divisor^0,w,c
  6548   004A8C  5E01               	subwf	___aomod@dividend^0,f,c
  6549   004A8E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6550   004A90  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6551   004A92  500B               	movf	(___aomod@divisor+2)^0,w,c
  6552   004A94  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6553   004A96  500C               	movf	(___aomod@divisor+3)^0,w,c
  6554   004A98  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6555   004A9A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6556   004A9C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6557   004A9E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6558   004AA0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6559   004AA2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6560   004AA4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6561   004AA6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6562   004AA8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6563   004AAA                     l4209:
  6564   004AAA  90D8               	bcf	status,0,c
  6565   004AAC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6566   004AAE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6567   004AB0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6568   004AB2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6569   004AB4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6570   004AB6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6571   004AB8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6572   004ABA  3209               	rrcf	___aomod@divisor^0,f,c
  6573   004ABC  2E11               	decfsz	___aomod@counter^0,f,c
  6574   004ABE  EF2E  F025         	goto	l4205
  6575   004AC2                     l4213:
  6576   004AC2  5012               	movf	___aomod@sign^0,w,c
  6577   004AC4  B4D8               	btfsc	status,2,c
  6578   004AC6  EF67  F025         	goto	u3631
  6579   004ACA  EF69  F025         	goto	u3630
  6580   004ACE                     u3631:
  6581   004ACE  EF79  F025         	goto	l4217
  6582   004AD2                     u3630:
  6583   004AD2  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6584   004AD4  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6585   004AD6  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6586   004AD8  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6587   004ADA  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6588   004ADC  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6589   004ADE  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6590   004AE0  6C01               	negf	___aomod@dividend^0,c
  6591   004AE2  0E00               	movlw	0
  6592   004AE4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6593   004AE6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6594   004AE8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6595   004AEA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6596   004AEC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6597   004AEE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6598   004AF0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6599   004AF2                     l4217:
  6600   004AF2  C001  F001         	movff	___aomod@dividend,?___aomod
  6601   004AF6  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6602   004AFA  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6603   004AFE  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6604   004B02  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6605   004B06  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6606   004B0A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6607   004B0E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6608   004B12  0012               	return		;funcret
  6609   004B14                     __end_of___aomod:
  6610                           	callstack 0
  6611                           
  6612 ;; *************** function ___aodiv *****************
  6613 ;; Defined at:
  6614 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6615 ;; Parameters:    Size  Location     Type
  6616 ;;  dividend        8    0[COMRAM] long long 
  6617 ;;  divisor         8    8[COMRAM] long long 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  quotient        8   18[COMRAM] long long 
  6620 ;;  sign            1   17[COMRAM] unsigned char 
  6621 ;;  counter         1   16[COMRAM] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  8    0[COMRAM] long long 
  6624 ;; Registers used:
  6625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6631 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;Total ram usage:       26 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_dtoa
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text20
  6645   0046BC                     __ptext20:
  6646                           	callstack 0
  6647   0046BC                     ___aodiv:
  6648                           	callstack 26
  6649   0046BC  0E00               	movlw	0
  6650   0046BE  6E12               	movwf	___aodiv@sign^0,c
  6651   0046C0  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6652   0046C2  EF67  F023         	goto	u3510
  6653   0046C6  EF65  F023         	goto	u3511
  6654   0046CA                     u3511:
  6655   0046CA  EF79  F023         	goto	l4149
  6656   0046CE                     u3510:
  6657   0046CE  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6658   0046D0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6659   0046D2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6660   0046D4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6661   0046D6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6662   0046D8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6663   0046DA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6664   0046DC  6C09               	negf	___aodiv@divisor^0,c
  6665   0046DE  0E00               	movlw	0
  6666   0046E0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6667   0046E2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6668   0046E4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6669   0046E6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6670   0046E8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6671   0046EA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6672   0046EC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6673   0046EE  0E01               	movlw	1
  6674   0046F0  6E12               	movwf	___aodiv@sign^0,c
  6675   0046F2                     l4149:
  6676   0046F2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6677   0046F4  EF80  F023         	goto	u3520
  6678   0046F8  EF7E  F023         	goto	u3521
  6679   0046FC                     u3521:
  6680   0046FC  EF92  F023         	goto	l4155
  6681   004700                     u3520:
  6682   004700  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6683   004702  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6684   004704  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6685   004706  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6686   004708  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6687   00470A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6688   00470C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6689   00470E  6C01               	negf	___aodiv@dividend^0,c
  6690   004710  0E00               	movlw	0
  6691   004712  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6692   004714  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6693   004716  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6694   004718  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6695   00471A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6696   00471C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6697   00471E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6698   004720  0E01               	movlw	1
  6699   004722  1A12               	xorwf	___aodiv@sign^0,f,c
  6700   004724                     l4155:
  6701   004724  EE20  F013         	lfsr	2,___aodiv@quotient
  6702   004728  0E07               	movlw	7
  6703   00472A                     u3531:
  6704   00472A  6ADE               	clrf	postinc2,c
  6705   00472C  06E8               	decf	wreg,f,c
  6706   00472E  E2FD               	bc	u3531
  6707   004730  5009               	movf	___aodiv@divisor^0,w,c
  6708   004732  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6709   004734  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6710   004736  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6711   004738  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6712   00473A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6713   00473C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6714   00473E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6715   004740  B4D8               	btfsc	status,2,c
  6716   004742  EFA5  F023         	goto	u3541
  6717   004746  EFA7  F023         	goto	u3540
  6718   00474A                     u3541:
  6719   00474A  EFF9  F023         	goto	l4177
  6720   00474E                     u3540:
  6721   00474E  0E01               	movlw	1
  6722   004750  6E11               	movwf	___aodiv@counter^0,c
  6723   004752  EFB5  F023         	goto	l4163
  6724   004756                     l4161:
  6725   004756  90D8               	bcf	status,0,c
  6726   004758  3609               	rlcf	___aodiv@divisor^0,f,c
  6727   00475A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6728   00475C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6729   00475E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6730   004760  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6731   004762  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6732   004764  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6733   004766  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6734   004768  2A11               	incf	___aodiv@counter^0,f,c
  6735   00476A                     l4163:
  6736   00476A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6737   00476C  EFBA  F023         	goto	u3551
  6738   004770  EFBC  F023         	goto	u3550
  6739   004774                     u3551:
  6740   004774  EFAB  F023         	goto	l4161
  6741   004778                     u3550:
  6742   004778                     l4165:
  6743   004778  90D8               	bcf	status,0,c
  6744   00477A  3613               	rlcf	___aodiv@quotient^0,f,c
  6745   00477C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6746   00477E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6747   004780  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6748   004782  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6749   004784  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6750   004786  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6751   004788  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6752   00478A  5009               	movf	___aodiv@divisor^0,w,c
  6753   00478C  5C01               	subwf	___aodiv@dividend^0,w,c
  6754   00478E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6755   004790  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6756   004792  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6757   004794  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6758   004796  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6759   004798  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6760   00479A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6761   00479C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6762   00479E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6763   0047A0  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6764   0047A2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6765   0047A4  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6766   0047A6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6767   0047A8  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6768   0047AA  A0D8               	btfss	status,0,c
  6769   0047AC  EFDA  F023         	goto	u3561
  6770   0047B0  EFDC  F023         	goto	u3560
  6771   0047B4                     u3561:
  6772   0047B4  EFED  F023         	goto	l4173
  6773   0047B8                     u3560:
  6774   0047B8  5009               	movf	___aodiv@divisor^0,w,c
  6775   0047BA  5E01               	subwf	___aodiv@dividend^0,f,c
  6776   0047BC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6777   0047BE  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6778   0047C0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6779   0047C2  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6780   0047C4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6781   0047C6  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6782   0047C8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6783   0047CA  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6784   0047CC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6785   0047CE  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6786   0047D0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6787   0047D2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6788   0047D4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6789   0047D6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6790   0047D8  8013               	bsf	___aodiv@quotient^0,0,c
  6791   0047DA                     l4173:
  6792   0047DA  90D8               	bcf	status,0,c
  6793   0047DC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6794   0047DE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6795   0047E0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6796   0047E2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6797   0047E4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6798   0047E6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6799   0047E8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6800   0047EA  3209               	rrcf	___aodiv@divisor^0,f,c
  6801   0047EC  2E11               	decfsz	___aodiv@counter^0,f,c
  6802   0047EE  EFBC  F023         	goto	l4165
  6803   0047F2                     l4177:
  6804   0047F2  5012               	movf	___aodiv@sign^0,w,c
  6805   0047F4  B4D8               	btfsc	status,2,c
  6806   0047F6  EFFF  F023         	goto	u3571
  6807   0047FA  EF01  F024         	goto	u3570
  6808   0047FE                     u3571:
  6809   0047FE  EF11  F024         	goto	l4181
  6810   004802                     u3570:
  6811   004802  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6812   004804  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6813   004806  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6814   004808  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6815   00480A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6816   00480C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6817   00480E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6818   004810  6C13               	negf	___aodiv@quotient^0,c
  6819   004812  0E00               	movlw	0
  6820   004814  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6821   004816  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6822   004818  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6823   00481A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6824   00481C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6825   00481E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6826   004820  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6827   004822                     l4181:
  6828   004822  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6829   004826  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6830   00482A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6831   00482E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6832   004832  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6833   004836  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6834   00483A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6835   00483E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6836   004842  0012               	return		;funcret
  6837   004844                     __end_of___aodiv:
  6838                           	callstack 0
  6839                           
  6840 ;; *************** function _sendStringSerial4 *****************
  6841 ;; Defined at:
  6842 ;;		line 33 in file "serial.c"
  6843 ;; Parameters:    Size  Location     Type
  6844 ;;  string          2    1[COMRAM] PTR unsigned char 
  6845 ;;		 -> main@buf(100), 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6857 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;Total ram usage:        2 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 1
  6864 ;; This function calls:
  6865 ;;		_sendCharSerial4
  6866 ;; This function is called by:
  6867 ;;		_main
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           	psect	text21
  6872   006052                     __ptext21:
  6873                           	callstack 0
  6874   006052                     _sendStringSerial4:
  6875                           	callstack 29
  6876   006052                     
  6877                           ;serial.c: 34:     while (*string!=0){
  6878   006052  EF34  F030         	goto	l5557
  6879   006056                     l5553:
  6880                           
  6881                           ;serial.c: 35:         sendCharSerial4(*string++);
  6882   006056  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6883   00605A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6884   00605E  50DF               	movf	indf2,w,c
  6885   006060  ECBF  F030         	call	_sendCharSerial4
  6886   006064  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6887   006066  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6888   006068                     l5557:
  6889                           
  6890                           ;serial.c: 34:     while (*string!=0){
  6891   006068  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6892   00606C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6893   006070  50DF               	movf	indf2,w,c
  6894   006072  A4D8               	btfss	status,2,c
  6895   006074  EF3E  F030         	goto	u5541
  6896   006078  EF40  F030         	goto	u5540
  6897   00607C                     u5541:
  6898   00607C  EF2B  F030         	goto	l5553
  6899   006080                     u5540:
  6900   006080  0012               	return		;funcret
  6901   006082                     __end_of_sendStringSerial4:
  6902                           	callstack 0
  6903                           
  6904 ;; *************** function _sendCharSerial4 *****************
  6905 ;; Defined at:
  6906 ;;		line 26 in file "serial.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  charToSend      1    wreg     unsigned char 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  charToSend      1    0[COMRAM] unsigned char 
  6911 ;; Return value:  Size  Location     Type
  6912 ;;                  1    wreg      void 
  6913 ;; Registers used:
  6914 ;;		wreg
  6915 ;; Tracked objects:
  6916 ;;		On entry : 0/0
  6917 ;;		On exit  : 0/0
  6918 ;;		Unchanged: 0/0
  6919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6921 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;Total ram usage:        1 bytes
  6925 ;; Hardware stack levels used: 1
  6926 ;; This function calls:
  6927 ;;		Nothing
  6928 ;; This function is called by:
  6929 ;;		_sendStringSerial4
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text22
  6934   00617E                     __ptext22:
  6935                           	callstack 0
  6936   00617E                     _sendCharSerial4:
  6937                           	callstack 29
  6938                           
  6939                           ;incstack = 0
  6940                           ;sendCharSerial4@charToSend stored from wreg
  6941   00617E  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6942   006180                     l209:
  6943   006180  010E               	movlb	14	; () banked
  6944   006182  A537               	btfss	55,2,b	;volatile
  6945   006184  EFC6  F030         	goto	u5071
  6946   006188  EFC8  F030         	goto	u5070
  6947   00618C                     u5071:
  6948   00618C  EFC0  F030         	goto	l209
  6949   006190                     u5070:
  6950   006190                     
  6951                           ; BSR set to: 14
  6952                           ;serial.c: 28:     TX4REG = charToSend;
  6953   006190  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6954   006194                     
  6955                           ; BSR set to: 14
  6956   006194  0012               	return		;funcret
  6957   006196                     __end_of_sendCharSerial4:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function _readColours *****************
  6961 ;; Defined at:
  6962 ;;		line 105 in file "color.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  vals            2   11[COMRAM] PTR struct RGB
  6965 ;;		 -> vals(8), 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6981 ;;Total ram usage:        2 bytes
  6982 ;; Hardware stack levels used: 1
  6983 ;; Hardware stack levels required when called: 3
  6984 ;; This function calls:
  6985 ;;		_color_read_Blue
  6986 ;;		_color_read_Green
  6987 ;;		_color_read_Red
  6988 ;;		_color_read_lum
  6989 ;; This function is called by:
  6990 ;;		_main
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text23
  6995   005760                     __ptext23:
  6996                           	callstack 0
  6997   005760                     _readColours:
  6998                           	callstack 27
  6999   005760                     
  7000                           ;color.c: 107:     vals ->R = color_read_Red();
  7001   005760  EC04  F02E         	call	_color_read_Red	;wreg free
  7002   005764  C00C  FFD9         	movff	readColours@vals,fsr2l
  7003   005768  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  7004   00576C  C005  FFDE         	movff	?_color_read_Red,postinc2
  7005   005770  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  7006                           
  7007                           ;color.c: 108:     vals ->B = color_read_Blue();
  7008   005774  EC54  F02E         	call	_color_read_Blue	;wreg free
  7009   005778  EE20 F004          	lfsr	2,4
  7010   00577C  500C               	movf	readColours@vals^0,w,c
  7011   00577E  26D9               	addwf	fsr2l,f,c
  7012   005780  500D               	movf	(readColours@vals+1)^0,w,c
  7013   005782  22DA               	addwfc	fsr2h,f,c
  7014   005784  C005  FFDE         	movff	?_color_read_Blue,postinc2
  7015   005788  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  7016                           
  7017                           ;color.c: 109:     vals ->G = color_read_Green();
  7018   00578C  EC2C  F02E         	call	_color_read_Green	;wreg free
  7019   005790  EE20 F002          	lfsr	2,2
  7020   005794  500C               	movf	readColours@vals^0,w,c
  7021   005796  26D9               	addwf	fsr2l,f,c
  7022   005798  500D               	movf	(readColours@vals+1)^0,w,c
  7023   00579A  22DA               	addwfc	fsr2h,f,c
  7024   00579C  C005  FFDE         	movff	?_color_read_Green,postinc2
  7025   0057A0  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  7026                           
  7027                           ;color.c: 110:     vals ->L = color_read_lum();
  7028   0057A4  ECDC  F02D         	call	_color_read_lum	;wreg free
  7029   0057A8  EE20 F006          	lfsr	2,6
  7030   0057AC  500C               	movf	readColours@vals^0,w,c
  7031   0057AE  26D9               	addwf	fsr2l,f,c
  7032   0057B0  500D               	movf	(readColours@vals+1)^0,w,c
  7033   0057B2  22DA               	addwfc	fsr2h,f,c
  7034   0057B4  C005  FFDE         	movff	?_color_read_lum,postinc2
  7035   0057B8  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  7036   0057BC  0012               	return		;funcret
  7037   0057BE                     __end_of_readColours:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _color_read_lum *****************
  7041 ;; Defined at:
  7042 ;;		line 49 in file "color.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;		None
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  tmp             2    9[COMRAM] unsigned int 
  7047 ;; Return value:  Size  Location     Type
  7048 ;;                  2    4[COMRAM] unsigned int 
  7049 ;; Registers used:
  7050 ;;		wreg, status,2, status,0, cstack
  7051 ;; Tracked objects:
  7052 ;;		On entry : 0/0
  7053 ;;		On exit  : 0/0
  7054 ;;		Unchanged: 0/0
  7055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7056 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;Total ram usage:        7 bytes
  7061 ;; Hardware stack levels used: 1
  7062 ;; Hardware stack levels required when called: 2
  7063 ;; This function calls:
  7064 ;;		_I2C_2_Master_Read
  7065 ;;		_I2C_2_Master_RepStart
  7066 ;;		_I2C_2_Master_Start
  7067 ;;		_I2C_2_Master_Stop
  7068 ;;		_I2C_2_Master_Write
  7069 ;; This function is called by:
  7070 ;;		_readColours
  7071 ;; This function uses a non-reentrant model
  7072 ;;
  7073                           
  7074                           	psect	text24
  7075   005BB8                     __ptext24:
  7076                           	callstack 0
  7077   005BB8                     _color_read_lum:
  7078                           	callstack 27
  7079   005BB8                     
  7080                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  7081   005BB8  ECDB  F030         	call	_I2C_2_Master_Start	;wreg free
  7082                           
  7083                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  7084   005BBC  0E52               	movlw	82
  7085   005BBE  ECCB  F030         	call	_I2C_2_Master_Write
  7086                           
  7087                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  7088   005BC2  0EB4               	movlw	180
  7089   005BC4  ECCB  F030         	call	_I2C_2_Master_Write
  7090                           
  7091                           ;color.c: 55:  I2C_2_Master_RepStart();
  7092   005BC8  ECD1  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7093                           
  7094                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  7095   005BCC  0E53               	movlw	83
  7096   005BCE  ECCB  F030         	call	_I2C_2_Master_Write
  7097                           
  7098                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  7099   005BD2  0E01               	movlw	1
  7100   005BD4  EC57  F02F         	call	_I2C_2_Master_Read
  7101   005BD8  6E07               	movwf	??_color_read_lum^0,c
  7102   005BDA  5007               	movf	??_color_read_lum^0,w,c
  7103   005BDC  6E0A               	movwf	color_read_lum@tmp^0,c
  7104   005BDE  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  7105                           
  7106                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7107   005BE0  0E00               	movlw	0
  7108   005BE2  EC57  F02F         	call	_I2C_2_Master_Read
  7109   005BE6  6E07               	movwf	??_color_read_lum^0,c
  7110   005BE8  5007               	movf	??_color_read_lum^0,w,c
  7111   005BEA  6E09               	movwf	(??_color_read_lum+2)^0,c
  7112   005BEC  6A08               	clrf	(??_color_read_lum+1)^0,c
  7113   005BEE  500A               	movf	color_read_lum@tmp^0,w,c
  7114   005BF0  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  7115   005BF2  6E0A               	movwf	color_read_lum@tmp^0,c
  7116   005BF4  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  7117   005BF6  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  7118   005BF8  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  7119                           
  7120                           ;color.c: 59:  I2C_2_Master_Stop();
  7121   005BFA  ECD6  F030         	call	_I2C_2_Master_Stop	;wreg free
  7122   005BFE                     
  7123                           ;color.c: 60:  return tmp;
  7124   005BFE  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  7125   005C02  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  7126   005C06  0012               	return		;funcret
  7127   005C08                     __end_of_color_read_lum:
  7128                           	callstack 0
  7129                           
  7130 ;; *************** function _color_read_Red *****************
  7131 ;; Defined at:
  7132 ;;		line 63 in file "color.c"
  7133 ;; Parameters:    Size  Location     Type
  7134 ;;		None
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  tmp             2    9[COMRAM] unsigned int 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  2    4[COMRAM] unsigned int 
  7139 ;; Registers used:
  7140 ;;		wreg, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7146 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7148 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;Total ram usage:        7 bytes
  7151 ;; Hardware stack levels used: 1
  7152 ;; Hardware stack levels required when called: 2
  7153 ;; This function calls:
  7154 ;;		_I2C_2_Master_Read
  7155 ;;		_I2C_2_Master_RepStart
  7156 ;;		_I2C_2_Master_Start
  7157 ;;		_I2C_2_Master_Stop
  7158 ;;		_I2C_2_Master_Write
  7159 ;; This function is called by:
  7160 ;;		_readColours
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text25
  7165   005C08                     __ptext25:
  7166                           	callstack 0
  7167   005C08                     _color_read_Red:
  7168                           	callstack 27
  7169   005C08                     
  7170                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  7171   005C08  ECDB  F030         	call	_I2C_2_Master_Start	;wreg free
  7172                           
  7173                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  7174   005C0C  0E52               	movlw	82
  7175   005C0E  ECCB  F030         	call	_I2C_2_Master_Write
  7176                           
  7177                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  7178   005C12  0EB6               	movlw	182
  7179   005C14  ECCB  F030         	call	_I2C_2_Master_Write
  7180                           
  7181                           ;color.c: 69:  I2C_2_Master_RepStart();
  7182   005C18  ECD1  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7183                           
  7184                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  7185   005C1C  0E53               	movlw	83
  7186   005C1E  ECCB  F030         	call	_I2C_2_Master_Write
  7187                           
  7188                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7189   005C22  0E01               	movlw	1
  7190   005C24  EC57  F02F         	call	_I2C_2_Master_Read
  7191   005C28  6E07               	movwf	??_color_read_Red^0,c
  7192   005C2A  5007               	movf	??_color_read_Red^0,w,c
  7193   005C2C  6E0A               	movwf	color_read_Red@tmp^0,c
  7194   005C2E  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7195                           
  7196                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7197   005C30  0E00               	movlw	0
  7198   005C32  EC57  F02F         	call	_I2C_2_Master_Read
  7199   005C36  6E07               	movwf	??_color_read_Red^0,c
  7200   005C38  5007               	movf	??_color_read_Red^0,w,c
  7201   005C3A  6E09               	movwf	(??_color_read_Red+2)^0,c
  7202   005C3C  6A08               	clrf	(??_color_read_Red+1)^0,c
  7203   005C3E  500A               	movf	color_read_Red@tmp^0,w,c
  7204   005C40  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7205   005C42  6E0A               	movwf	color_read_Red@tmp^0,c
  7206   005C44  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7207   005C46  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7208   005C48  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7209                           
  7210                           ;color.c: 73:  I2C_2_Master_Stop();
  7211   005C4A  ECD6  F030         	call	_I2C_2_Master_Stop	;wreg free
  7212   005C4E                     
  7213                           ;color.c: 74:  return tmp;
  7214   005C4E  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7215   005C52  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7216   005C56  0012               	return		;funcret
  7217   005C58                     __end_of_color_read_Red:
  7218                           	callstack 0
  7219                           
  7220 ;; *************** function _color_read_Green *****************
  7221 ;; Defined at:
  7222 ;;		line 76 in file "color.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;		None
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  tmp             2    9[COMRAM] unsigned int 
  7227 ;; Return value:  Size  Location     Type
  7228 ;;                  2    4[COMRAM] unsigned int 
  7229 ;; Registers used:
  7230 ;;		wreg, status,2, status,0, cstack
  7231 ;; Tracked objects:
  7232 ;;		On entry : 0/0
  7233 ;;		On exit  : 0/0
  7234 ;;		Unchanged: 0/0
  7235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7236 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;Total ram usage:        7 bytes
  7241 ;; Hardware stack levels used: 1
  7242 ;; Hardware stack levels required when called: 2
  7243 ;; This function calls:
  7244 ;;		_I2C_2_Master_Read
  7245 ;;		_I2C_2_Master_RepStart
  7246 ;;		_I2C_2_Master_Start
  7247 ;;		_I2C_2_Master_Stop
  7248 ;;		_I2C_2_Master_Write
  7249 ;; This function is called by:
  7250 ;;		_readColours
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           	psect	text26
  7255   005C58                     __ptext26:
  7256                           	callstack 0
  7257   005C58                     _color_read_Green:
  7258                           	callstack 27
  7259   005C58                     
  7260                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7261   005C58  ECDB  F030         	call	_I2C_2_Master_Start	;wreg free
  7262                           
  7263                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7264   005C5C  0E52               	movlw	82
  7265   005C5E  ECCB  F030         	call	_I2C_2_Master_Write
  7266                           
  7267                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7268   005C62  0EB8               	movlw	184
  7269   005C64  ECCB  F030         	call	_I2C_2_Master_Write
  7270                           
  7271                           ;color.c: 82:  I2C_2_Master_RepStart();
  7272   005C68  ECD1  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7273                           
  7274                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7275   005C6C  0E53               	movlw	83
  7276   005C6E  ECCB  F030         	call	_I2C_2_Master_Write
  7277                           
  7278                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7279   005C72  0E01               	movlw	1
  7280   005C74  EC57  F02F         	call	_I2C_2_Master_Read
  7281   005C78  6E07               	movwf	??_color_read_Green^0,c
  7282   005C7A  5007               	movf	??_color_read_Green^0,w,c
  7283   005C7C  6E0A               	movwf	color_read_Green@tmp^0,c
  7284   005C7E  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7285                           
  7286                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7287   005C80  0E00               	movlw	0
  7288   005C82  EC57  F02F         	call	_I2C_2_Master_Read
  7289   005C86  6E07               	movwf	??_color_read_Green^0,c
  7290   005C88  5007               	movf	??_color_read_Green^0,w,c
  7291   005C8A  6E09               	movwf	(??_color_read_Green+2)^0,c
  7292   005C8C  6A08               	clrf	(??_color_read_Green+1)^0,c
  7293   005C8E  500A               	movf	color_read_Green@tmp^0,w,c
  7294   005C90  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7295   005C92  6E0A               	movwf	color_read_Green@tmp^0,c
  7296   005C94  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7297   005C96  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7298   005C98  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7299                           
  7300                           ;color.c: 86:  I2C_2_Master_Stop();
  7301   005C9A  ECD6  F030         	call	_I2C_2_Master_Stop	;wreg free
  7302   005C9E                     
  7303                           ;color.c: 87:  return tmp;
  7304   005C9E  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7305   005CA2  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7306   005CA6  0012               	return		;funcret
  7307   005CA8                     __end_of_color_read_Green:
  7308                           	callstack 0
  7309                           
  7310 ;; *************** function _color_read_Blue *****************
  7311 ;; Defined at:
  7312 ;;		line 90 in file "color.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;		None
  7315 ;; Auto vars:     Size  Location     Type
  7316 ;;  tmp             2    9[COMRAM] unsigned int 
  7317 ;; Return value:  Size  Location     Type
  7318 ;;                  2    4[COMRAM] unsigned int 
  7319 ;; Registers used:
  7320 ;;		wreg, status,2, status,0, cstack
  7321 ;; Tracked objects:
  7322 ;;		On entry : 0/0
  7323 ;;		On exit  : 0/0
  7324 ;;		Unchanged: 0/0
  7325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7327 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7328 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;Total ram usage:        7 bytes
  7331 ;; Hardware stack levels used: 1
  7332 ;; Hardware stack levels required when called: 2
  7333 ;; This function calls:
  7334 ;;		_I2C_2_Master_Read
  7335 ;;		_I2C_2_Master_RepStart
  7336 ;;		_I2C_2_Master_Start
  7337 ;;		_I2C_2_Master_Stop
  7338 ;;		_I2C_2_Master_Write
  7339 ;; This function is called by:
  7340 ;;		_readColours
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           	psect	text27
  7345   005CA8                     __ptext27:
  7346                           	callstack 0
  7347   005CA8                     _color_read_Blue:
  7348                           	callstack 27
  7349   005CA8                     
  7350                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7351   005CA8  ECDB  F030         	call	_I2C_2_Master_Start	;wreg free
  7352                           
  7353                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7354   005CAC  0E52               	movlw	82
  7355   005CAE  ECCB  F030         	call	_I2C_2_Master_Write
  7356                           
  7357                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7358   005CB2  0EBA               	movlw	186
  7359   005CB4  ECCB  F030         	call	_I2C_2_Master_Write
  7360                           
  7361                           ;color.c: 96:  I2C_2_Master_RepStart();
  7362   005CB8  ECD1  F030         	call	_I2C_2_Master_RepStart	;wreg free
  7363                           
  7364                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7365   005CBC  0E53               	movlw	83
  7366   005CBE  ECCB  F030         	call	_I2C_2_Master_Write
  7367                           
  7368                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7369   005CC2  0E01               	movlw	1
  7370   005CC4  EC57  F02F         	call	_I2C_2_Master_Read
  7371   005CC8  6E07               	movwf	??_color_read_Blue^0,c
  7372   005CCA  5007               	movf	??_color_read_Blue^0,w,c
  7373   005CCC  6E0A               	movwf	color_read_Blue@tmp^0,c
  7374   005CCE  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7375                           
  7376                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7377   005CD0  0E00               	movlw	0
  7378   005CD2  EC57  F02F         	call	_I2C_2_Master_Read
  7379   005CD6  6E07               	movwf	??_color_read_Blue^0,c
  7380   005CD8  5007               	movf	??_color_read_Blue^0,w,c
  7381   005CDA  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7382   005CDC  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7383   005CDE  500A               	movf	color_read_Blue@tmp^0,w,c
  7384   005CE0  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7385   005CE2  6E0A               	movwf	color_read_Blue@tmp^0,c
  7386   005CE4  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7387   005CE6  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7388   005CE8  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7389                           
  7390                           ;color.c: 100:  I2C_2_Master_Stop();
  7391   005CEA  ECD6  F030         	call	_I2C_2_Master_Stop	;wreg free
  7392   005CEE                     
  7393                           ;color.c: 101:  return tmp;
  7394   005CEE  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7395   005CF2  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7396   005CF6  0012               	return		;funcret
  7397   005CF8                     __end_of_color_read_Blue:
  7398                           	callstack 0
  7399                           
  7400 ;; *************** function _I2C_2_Master_RepStart *****************
  7401 ;; Defined at:
  7402 ;;		line 33 in file "i2c.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;		None
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;		None
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  1    wreg      void 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0, cstack
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;Total ram usage:        0 bytes
  7421 ;; Hardware stack levels used: 1
  7422 ;; Hardware stack levels required when called: 1
  7423 ;; This function calls:
  7424 ;;		_I2C_2_Master_Idle
  7425 ;; This function is called by:
  7426 ;;		_color_read_lum
  7427 ;;		_color_read_Red
  7428 ;;		_color_read_Green
  7429 ;;		_color_read_Blue
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text28
  7434   0061A2                     __ptext28:
  7435                           	callstack 0
  7436   0061A2                     _I2C_2_Master_RepStart:
  7437                           	callstack 27
  7438   0061A2                     
  7439                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7440   0061A2  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  7441   0061A6                     
  7442                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7443   0061A6  010E               	movlb	14	; () banked
  7444   0061A8  83DA               	bsf	218,1,b	;volatile
  7445   0061AA                     
  7446                           ; BSR set to: 14
  7447   0061AA  0012               	return		;funcret
  7448   0061AC                     __end_of_I2C_2_Master_RepStart:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _I2C_2_Master_Read *****************
  7452 ;; Defined at:
  7453 ;;		line 51 in file "i2c.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  ack             1    wreg     unsigned char 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  ack             1    2[COMRAM] unsigned char 
  7458 ;;  tmp             1    3[COMRAM] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      unsigned char 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;Total ram usage:        3 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; Hardware stack levels required when called: 1
  7475 ;; This function calls:
  7476 ;;		_I2C_2_Master_Idle
  7477 ;; This function is called by:
  7478 ;;		_color_read_lum
  7479 ;;		_color_read_Red
  7480 ;;		_color_read_Green
  7481 ;;		_color_read_Blue
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text29
  7486   005EAE                     __ptext29:
  7487                           	callstack 0
  7488   005EAE                     _I2C_2_Master_Read:
  7489                           	callstack 27
  7490                           
  7491                           ; BSR set to: 14
  7492                           ;incstack = 0
  7493                           ;I2C_2_Master_Read@ack stored from wreg
  7494   005EAE  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7495   005EB0                     
  7496                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7497   005EB0  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  7498   005EB4                     
  7499                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7500   005EB4  010E               	movlb	14	; () banked
  7501   005EB6  87DA               	bsf	218,3,b	;volatile
  7502                           
  7503                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7504   005EB8  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  7505   005EBC                     
  7506                           ;i2c.c: 57:   tmp = SSP2BUF;
  7507   005EBC  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7508                           
  7509                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7510   005EC0  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  7511   005EC4                     
  7512                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7513   005EC4  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7514   005EC6  B4D8               	btfsc	status,2,c
  7515   005EC8  EF68  F02F         	goto	u5001
  7516   005ECC  EF6C  F02F         	goto	u5000
  7517   005ED0                     u5001:
  7518   005ED0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7519   005ED2  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7520   005ED4  EF6D  F02F         	goto	u5018
  7521   005ED8                     u5000:
  7522   005ED8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7523   005EDA                     u5018:
  7524   005EDA  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7525   005EDC  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7526   005EDE  010E               	movlb	14	; () banked
  7527   005EE0  51DA               	movf	218,w,b	;volatile
  7528   005EE2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7529   005EE4  0BDF               	andlw	-33
  7530   005EE6  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7531   005EE8  6FDA               	movwf	218,b	;volatile
  7532   005EEA                     
  7533                           ; BSR set to: 14
  7534                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7535   005EEA  89DA               	bsf	218,4,b	;volatile
  7536   005EEC                     
  7537                           ; BSR set to: 14
  7538                           ;i2c.c: 61:   return tmp;
  7539   005EEC  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7540   005EEE                     
  7541                           ; BSR set to: 14
  7542   005EEE  0012               	return		;funcret
  7543   005EF0                     __end_of_I2C_2_Master_Read:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _initUSART4 *****************
  7547 ;; Defined at:
  7548 ;;		line 4 in file "serial.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;		None
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  1    wreg      void 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        0 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_main
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text30
  7576   006160                     __ptext30:
  7577                           	callstack 0
  7578   006160                     _initUSART4:
  7579                           	callstack 30
  7580   006160                     
  7581                           ;serial.c: 5:     RC0PPS = 0x12;
  7582   006160  0E12               	movlw	18
  7583   006162  010E               	movlb	14	; () banked
  7584   006164  6F62               	movwf	98,b	;volatile
  7585                           
  7586                           ;serial.c: 6:     RX4PPS = 0x11;
  7587   006166  0E11               	movlw	17
  7588   006168  6F15               	movwf	21,b	;volatile
  7589   00616A                     
  7590                           ; BSR set to: 14
  7591                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7592   00616A  97E9               	bcf	233,3,b	;volatile
  7593   00616C                     
  7594                           ; BSR set to: 14
  7595                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7596   00616C  95E8               	bcf	232,2,b	;volatile
  7597                           
  7598                           ;serial.c: 9:     SP4BRGL = 51;
  7599   00616E  0E33               	movlw	51
  7600   006170  6FE5               	movwf	229,b	;volatile
  7601                           
  7602                           ;serial.c: 10:     SP4BRGH = 0;
  7603   006172  0E00               	movlw	0
  7604   006174  6FE6               	movwf	230,b	;volatile
  7605   006176                     
  7606                           ; BSR set to: 14
  7607                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7608   006176  89E7               	bsf	231,4,b	;volatile
  7609   006178                     
  7610                           ; BSR set to: 14
  7611                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7612   006178  8BE8               	bsf	232,5,b	;volatile
  7613   00617A                     
  7614                           ; BSR set to: 14
  7615                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7616   00617A  8FE7               	bsf	231,7,b	;volatile
  7617   00617C                     
  7618                           ; BSR set to: 14
  7619   00617C  0012               	return		;funcret
  7620   00617E                     __end_of_initUSART4:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function _initDCmotorsPWM *****************
  7624 ;; Defined at:
  7625 ;;		line 6 in file "dc_motor.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;Total ram usage:        2 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_main
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text31
  7653   00541E                     __ptext31:
  7654                           	callstack 0
  7655   00541E                     _initDCmotorsPWM:
  7656                           	callstack 30
  7657   00541E                     
  7658                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7659   00541E  0E05               	movlw	5
  7660   005420  010E               	movlb	14	; () banked
  7661   005422  6F74               	movwf	116,b	;volatile
  7662                           
  7663                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7664   005424  0E06               	movlw	6
  7665   005426  6F76               	movwf	118,b	;volatile
  7666                           
  7667                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7668   005428  0E07               	movlw	7
  7669   00542A  6F69               	movwf	105,b	;volatile
  7670                           
  7671                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7672   00542C  0E08               	movlw	8
  7673   00542E  6F88               	movwf	136,b	;volatile
  7674   005430                     
  7675                           ; BSR set to: 14
  7676                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7677   005430  9485               	bcf	133,2,c	;volatile
  7678   005432                     
  7679                           ; BSR set to: 14
  7680                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7681   005432  9885               	bcf	133,4,c	;volatile
  7682   005434                     
  7683                           ; BSR set to: 14
  7684                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7685   005434  9E83               	bcf	131,7,c	;volatile
  7686   005436                     
  7687                           ; BSR set to: 14
  7688                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7689   005436  9C87               	bcf	135,6,c	;volatile
  7690                           
  7691                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7692   005438  50BD               	movf	189,w,c	;volatile
  7693   00543A  0B8F               	andlw	-113
  7694   00543C  0930               	iorlw	48
  7695   00543E  6EBD               	movwf	189,c	;volatile
  7696                           
  7697                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7698   005440  0EE0               	movlw	-32
  7699   005442  16BE               	andwf	190,f,c	;volatile
  7700                           
  7701                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7702   005444  50BF               	movf	191,w,c	;volatile
  7703   005446  0BF0               	andlw	-16
  7704   005448  0901               	iorlw	1
  7705   00544A  6EBF               	movwf	191,c	;volatile
  7706   00544C                     
  7707                           ; BSR set to: 14
  7708                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7709   00544C  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7710   005450                     
  7711                           ; BSR set to: 14
  7712                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7713   005450  8EBD               	bsf	189,7,c	;volatile
  7714                           
  7715                           ;dc_motor.c: 34:     CCPR1H=0;
  7716   005452  0E00               	movlw	0
  7717   005454  6EAA               	movwf	170,c	;volatile
  7718                           
  7719                           ;dc_motor.c: 35:     CCPR2H=0;
  7720   005456  0E00               	movlw	0
  7721   005458  6EA6               	movwf	166,c	;volatile
  7722                           
  7723                           ;dc_motor.c: 36:     CCPR3H=0;
  7724   00545A  0E00               	movlw	0
  7725   00545C  010F               	movlb	15	; () banked
  7726   00545E  6F25               	movwf	37,b	;volatile
  7727                           
  7728                           ;dc_motor.c: 37:     CCPR4H=0;
  7729   005460  0E00               	movlw	0
  7730   005462  6F21               	movwf	33,b	;volatile
  7731                           
  7732                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7733   005464  0EFC               	movlw	-4
  7734   005466  16AD               	andwf	173,f,c	;volatile
  7735                           
  7736                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7737   005468  0EF3               	movlw	-13
  7738   00546A  16AD               	andwf	173,f,c	;volatile
  7739                           
  7740                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7741   00546C  0ECF               	movlw	-49
  7742   00546E  16AD               	andwf	173,f,c	;volatile
  7743                           
  7744                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7745   005470  0E3F               	movlw	-193
  7746   005472  16AD               	andwf	173,f,c	;volatile
  7747   005474                     
  7748                           ; BSR set to: 15
  7749                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7750   005474  88AB               	bsf	171,4,c	;volatile
  7751                           
  7752                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7753   005476  50AB               	movf	171,w,c	;volatile
  7754   005478  0BF0               	andlw	-16
  7755   00547A  090C               	iorlw	12
  7756   00547C  6EAB               	movwf	171,c	;volatile
  7757   00547E                     
  7758                           ; BSR set to: 15
  7759                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7760   00547E  8EAB               	bsf	171,7,c	;volatile
  7761   005480                     
  7762                           ; BSR set to: 15
  7763                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7764   005480  88A7               	bsf	167,4,c	;volatile
  7765                           
  7766                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7767   005482  50A7               	movf	167,w,c	;volatile
  7768   005484  0BF0               	andlw	-16
  7769   005486  090C               	iorlw	12
  7770   005488  6EA7               	movwf	167,c	;volatile
  7771   00548A                     
  7772                           ; BSR set to: 15
  7773                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7774   00548A  8EA7               	bsf	167,7,c	;volatile
  7775   00548C                     
  7776                           ; BSR set to: 15
  7777                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7778   00548C  8926               	bsf	38,4,b	;volatile
  7779                           
  7780                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7781   00548E  5126               	movf	38,w,b	;volatile
  7782   005490  0BF0               	andlw	-16
  7783   005492  090C               	iorlw	12
  7784   005494  6F26               	movwf	38,b	;volatile
  7785   005496                     
  7786                           ; BSR set to: 15
  7787                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7788   005496  8F26               	bsf	38,7,b	;volatile
  7789   005498                     
  7790                           ; BSR set to: 15
  7791                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7792   005498  8922               	bsf	34,4,b	;volatile
  7793                           
  7794                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7795   00549A  5122               	movf	34,w,b	;volatile
  7796   00549C  0BF0               	andlw	-16
  7797   00549E  090C               	iorlw	12
  7798   0054A0  6F22               	movwf	34,b	;volatile
  7799   0054A2                     
  7800                           ; BSR set to: 15
  7801                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7802   0054A2  8F22               	bsf	34,7,b	;volatile
  7803   0054A4                     
  7804                           ; BSR set to: 15
  7805   0054A4  0012               	return		;funcret
  7806   0054A6                     __end_of_initDCmotorsPWM:
  7807                           	callstack 0
  7808                           
  7809 ;; *************** function _go_Home *****************
  7810 ;; Defined at:
  7811 ;;		line 4 in file "Memory.c"
  7812 ;; Parameters:    Size  Location     Type
  7813 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  7814 ;;		 -> WayBack(50), 
  7815 ;;  Time_forward    2   37[COMRAM] PTR int 
  7816 ;;		 -> Time_forward(100), 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  i               2   42[COMRAM] int 
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;Total ram usage:        9 bytes
  7833 ;; Hardware stack levels used: 1
  7834 ;; Hardware stack levels required when called: 5
  7835 ;; This function calls:
  7836 ;;		_BlueMove
  7837 ;;		_GreenMove
  7838 ;;		_LightBlueMove
  7839 ;;		_OrangeMove
  7840 ;;		_RedMove
  7841 ;;		_ReversePink
  7842 ;;		_ReverseYellow
  7843 ;;		_reverseDetect
  7844 ;;		_timed_forward
  7845 ;; This function is called by:
  7846 ;;		_main
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text32
  7851   003BEC                     __ptext32:
  7852                           	callstack 0
  7853   003BEC                     _go_Home:
  7854                           	callstack 25
  7855   003BEC                     
  7856                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  7857   003BEC  C17E  F02B         	movff	_move_count,go_Home@i	;volatile
  7858   003BF0  C17F  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  7859   003BF4                     l5689:
  7860   003BF4  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  7861   003BF6  EF01  F01E         	goto	u5680
  7862   003BFA  EFFF  F01D         	goto	u5681
  7863   003BFE                     u5681:
  7864   003BFE  EF03  F01E         	goto	l5693
  7865   003C02                     u5680:
  7866   003C02  EF4B  F01F         	goto	l661
  7867   003C06                     l5693:
  7868                           
  7869                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  7870   003C06  0EC7               	movlw	low _motorL
  7871   003C08  6E14               	movwf	timed_forward@mL^0,c
  7872   003C0A  0E01               	movlw	high _motorL
  7873   003C0C  6E15               	movwf	(timed_forward@mL+1)^0,c
  7874   003C0E  0EBE               	movlw	low _motorR
  7875   003C10  6E16               	movwf	timed_forward@mR^0,c
  7876   003C12  0E01               	movlw	high _motorR
  7877   003C14  6E17               	movwf	(timed_forward@mR+1)^0,c
  7878   003C16  90D8               	bcf	status,0,c
  7879   003C18  342B               	rlcf	go_Home@i^0,w,c
  7880   003C1A  6ED9               	movwf	fsr2l,c
  7881   003C1C  342C               	rlcf	(go_Home@i+1)^0,w,c
  7882   003C1E  6EDA               	movwf	fsr2h,c
  7883   003C20  5026               	movf	go_Home@Time_forward^0,w,c
  7884   003C22  26D9               	addwf	fsr2l,f,c
  7885   003C24  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  7886   003C26  22DA               	addwfc	fsr2h,f,c
  7887   003C28  CFDE F018          	movff	postinc2,timed_forward@time
  7888   003C2C  CFDD F019          	movff	postdec2,timed_forward@time+1
  7889   003C30  EC29  F028         	call	_timed_forward	;wreg free
  7890   003C34                     
  7891                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  7892   003C34  502B               	movf	go_Home@i^0,w,c
  7893   003C36  2424               	addwf	go_Home@WayBack^0,w,c
  7894   003C38  6E28               	movwf	??_go_Home^0,c
  7895   003C3A  502C               	movf	(go_Home@i+1)^0,w,c
  7896   003C3C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7897   003C3E  6E29               	movwf	(??_go_Home+1)^0,c
  7898   003C40  0EFF               	movlw	255
  7899   003C42  2428               	addwf	??_go_Home^0,w,c
  7900   003C44  6ED9               	movwf	fsr2l,c
  7901   003C46  0EFF               	movlw	255
  7902   003C48  2029               	addwfc	(??_go_Home+1)^0,w,c
  7903   003C4A  6EDA               	movwf	fsr2h,c
  7904   003C4C  04DE               	decf	postinc2,w,c
  7905   003C4E  A4D8               	btfss	status,2,c
  7906   003C50  EF2C  F01E         	goto	u5691
  7907   003C54  EF2E  F01E         	goto	u5690
  7908   003C58                     u5691:
  7909   003C58  EF44  F01E         	goto	l5699
  7910   003C5C                     u5690:
  7911   003C5C                     
  7912                           ;Memory.c: 22:             reverseDetect(&motorL, &motorR);
  7913   003C5C  0EC7               	movlw	low _motorL
  7914   003C5E  6E1A               	movwf	reverseDetect@mL^0,c
  7915   003C60  0E01               	movlw	high _motorL
  7916   003C62  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7917   003C64  0EBE               	movlw	low _motorR
  7918   003C66  6E1C               	movwf	reverseDetect@mR^0,c
  7919   003C68  0E01               	movlw	high _motorR
  7920   003C6A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7921   003C6C  EC39  F02C         	call	_reverseDetect	;wreg free
  7922                           
  7923                           ;Memory.c: 23:             GreenMove(&motorL, &motorR);
  7924   003C70  0EC7               	movlw	low _motorL
  7925   003C72  6E20               	movwf	GreenMove@mL^0,c
  7926   003C74  0E01               	movlw	high _motorL
  7927   003C76  6E21               	movwf	(GreenMove@mL+1)^0,c
  7928   003C78  0EBE               	movlw	low _motorR
  7929   003C7A  6E22               	movwf	GreenMove@mR^0,c
  7930   003C7C  0E01               	movlw	high _motorR
  7931   003C7E  6E23               	movwf	(GreenMove@mR+1)^0,c
  7932   003C80  ECB7  F02F         	call	_GreenMove	;wreg free
  7933                           
  7934                           ;Memory.c: 24:         }
  7935   003C84  EF46  F01F         	goto	l5723
  7936   003C88                     l5699:
  7937   003C88  502B               	movf	go_Home@i^0,w,c
  7938   003C8A  2424               	addwf	go_Home@WayBack^0,w,c
  7939   003C8C  6E28               	movwf	??_go_Home^0,c
  7940   003C8E  502C               	movf	(go_Home@i+1)^0,w,c
  7941   003C90  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7942   003C92  6E29               	movwf	(??_go_Home+1)^0,c
  7943   003C94  0EFF               	movlw	255
  7944   003C96  2428               	addwf	??_go_Home^0,w,c
  7945   003C98  6ED9               	movwf	fsr2l,c
  7946   003C9A  0EFF               	movlw	255
  7947   003C9C  2029               	addwfc	(??_go_Home+1)^0,w,c
  7948   003C9E  6EDA               	movwf	fsr2h,c
  7949   003CA0  0E02               	movlw	2
  7950   003CA2  18DE               	xorwf	postinc2,w,c
  7951   003CA4  A4D8               	btfss	status,2,c
  7952   003CA6  EF57  F01E         	goto	u5701
  7953   003CAA  EF59  F01E         	goto	u5700
  7954   003CAE                     u5701:
  7955   003CAE  EF6F  F01E         	goto	l5703
  7956   003CB2                     u5700:
  7957   003CB2                     
  7958                           ;Memory.c: 26:             reverseDetect(&motorL, &motorR);
  7959   003CB2  0EC7               	movlw	low _motorL
  7960   003CB4  6E1A               	movwf	reverseDetect@mL^0,c
  7961   003CB6  0E01               	movlw	high _motorL
  7962   003CB8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7963   003CBA  0EBE               	movlw	low _motorR
  7964   003CBC  6E1C               	movwf	reverseDetect@mR^0,c
  7965   003CBE  0E01               	movlw	high _motorR
  7966   003CC0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7967   003CC2  EC39  F02C         	call	_reverseDetect	;wreg free
  7968                           
  7969                           ;Memory.c: 27:             LightBlueMove(&motorL, &motorR);
  7970   003CC6  0EC7               	movlw	low _motorL
  7971   003CC8  6E20               	movwf	LightBlueMove@mL^0,c
  7972   003CCA  0E01               	movlw	high _motorL
  7973   003CCC  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7974   003CCE  0EBE               	movlw	low _motorR
  7975   003CD0  6E22               	movwf	LightBlueMove@mR^0,c
  7976   003CD2  0E01               	movlw	high _motorR
  7977   003CD4  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7978   003CD6  EC10  F02D         	call	_LightBlueMove	;wreg free
  7979                           
  7980                           ;Memory.c: 28:         }
  7981   003CDA  EF46  F01F         	goto	l5723
  7982   003CDE                     l5703:
  7983   003CDE  502B               	movf	go_Home@i^0,w,c
  7984   003CE0  2424               	addwf	go_Home@WayBack^0,w,c
  7985   003CE2  6E28               	movwf	??_go_Home^0,c
  7986   003CE4  502C               	movf	(go_Home@i+1)^0,w,c
  7987   003CE6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  7988   003CE8  6E29               	movwf	(??_go_Home+1)^0,c
  7989   003CEA  0EFF               	movlw	255
  7990   003CEC  2428               	addwf	??_go_Home^0,w,c
  7991   003CEE  6ED9               	movwf	fsr2l,c
  7992   003CF0  0EFF               	movlw	255
  7993   003CF2  2029               	addwfc	(??_go_Home+1)^0,w,c
  7994   003CF4  6EDA               	movwf	fsr2h,c
  7995   003CF6  0E03               	movlw	3
  7996   003CF8  18DE               	xorwf	postinc2,w,c
  7997   003CFA  A4D8               	btfss	status,2,c
  7998   003CFC  EF82  F01E         	goto	u5711
  7999   003D00  EF84  F01E         	goto	u5710
  8000   003D04                     u5711:
  8001   003D04  EF9A  F01E         	goto	l5707
  8002   003D08                     u5710:
  8003   003D08                     
  8004                           ;Memory.c: 30:             reverseDetect(&motorL, &motorR);
  8005   003D08  0EC7               	movlw	low _motorL
  8006   003D0A  6E1A               	movwf	reverseDetect@mL^0,c
  8007   003D0C  0E01               	movlw	high _motorL
  8008   003D0E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8009   003D10  0EBE               	movlw	low _motorR
  8010   003D12  6E1C               	movwf	reverseDetect@mR^0,c
  8011   003D14  0E01               	movlw	high _motorR
  8012   003D16  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8013   003D18  EC39  F02C         	call	_reverseDetect	;wreg free
  8014                           
  8015                           ;Memory.c: 31:             ReverseYellow(&motorL, &motorR);
  8016   003D1C  0EC7               	movlw	low _motorL
  8017   003D1E  6E20               	movwf	ReverseYellow@mL^0,c
  8018   003D20  0E01               	movlw	high _motorL
  8019   003D22  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8020   003D24  0EBE               	movlw	low _motorR
  8021   003D26  6E22               	movwf	ReverseYellow@mR^0,c
  8022   003D28  0E01               	movlw	high _motorR
  8023   003D2A  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8024   003D2C  EC73  F027         	call	_ReverseYellow	;wreg free
  8025                           
  8026                           ;Memory.c: 32:         }
  8027   003D30  EF46  F01F         	goto	l5723
  8028   003D34                     l5707:
  8029   003D34  502B               	movf	go_Home@i^0,w,c
  8030   003D36  2424               	addwf	go_Home@WayBack^0,w,c
  8031   003D38  6E28               	movwf	??_go_Home^0,c
  8032   003D3A  502C               	movf	(go_Home@i+1)^0,w,c
  8033   003D3C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8034   003D3E  6E29               	movwf	(??_go_Home+1)^0,c
  8035   003D40  0EFF               	movlw	255
  8036   003D42  2428               	addwf	??_go_Home^0,w,c
  8037   003D44  6ED9               	movwf	fsr2l,c
  8038   003D46  0EFF               	movlw	255
  8039   003D48  2029               	addwfc	(??_go_Home+1)^0,w,c
  8040   003D4A  6EDA               	movwf	fsr2h,c
  8041   003D4C  0E04               	movlw	4
  8042   003D4E  18DE               	xorwf	postinc2,w,c
  8043   003D50  A4D8               	btfss	status,2,c
  8044   003D52  EFAD  F01E         	goto	u5721
  8045   003D56  EFAF  F01E         	goto	u5720
  8046   003D5A                     u5721:
  8047   003D5A  EFC5  F01E         	goto	l5711
  8048   003D5E                     u5720:
  8049   003D5E                     
  8050                           ;Memory.c: 34:             reverseDetect(&motorL, &motorR);
  8051   003D5E  0EC7               	movlw	low _motorL
  8052   003D60  6E1A               	movwf	reverseDetect@mL^0,c
  8053   003D62  0E01               	movlw	high _motorL
  8054   003D64  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8055   003D66  0EBE               	movlw	low _motorR
  8056   003D68  6E1C               	movwf	reverseDetect@mR^0,c
  8057   003D6A  0E01               	movlw	high _motorR
  8058   003D6C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8059   003D6E  EC39  F02C         	call	_reverseDetect	;wreg free
  8060                           
  8061                           ;Memory.c: 35:             BlueMove(&motorL, &motorR);
  8062   003D72  0EC7               	movlw	low _motorL
  8063   003D74  6E20               	movwf	BlueMove@mL^0,c
  8064   003D76  0E01               	movlw	high _motorL
  8065   003D78  6E21               	movwf	(BlueMove@mL+1)^0,c
  8066   003D7A  0EBE               	movlw	low _motorR
  8067   003D7C  6E22               	movwf	BlueMove@mR^0,c
  8068   003D7E  0E01               	movlw	high _motorR
  8069   003D80  6E23               	movwf	(BlueMove@mR+1)^0,c
  8070   003D82  EC7D  F02B         	call	_BlueMove	;wreg free
  8071                           
  8072                           ;Memory.c: 36:         }
  8073   003D86  EF46  F01F         	goto	l5723
  8074   003D8A                     l5711:
  8075   003D8A  502B               	movf	go_Home@i^0,w,c
  8076   003D8C  2424               	addwf	go_Home@WayBack^0,w,c
  8077   003D8E  6E28               	movwf	??_go_Home^0,c
  8078   003D90  502C               	movf	(go_Home@i+1)^0,w,c
  8079   003D92  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8080   003D94  6E29               	movwf	(??_go_Home+1)^0,c
  8081   003D96  0EFF               	movlw	255
  8082   003D98  2428               	addwf	??_go_Home^0,w,c
  8083   003D9A  6ED9               	movwf	fsr2l,c
  8084   003D9C  0EFF               	movlw	255
  8085   003D9E  2029               	addwfc	(??_go_Home+1)^0,w,c
  8086   003DA0  6EDA               	movwf	fsr2h,c
  8087   003DA2  0E05               	movlw	5
  8088   003DA4  18DE               	xorwf	postinc2,w,c
  8089   003DA6  A4D8               	btfss	status,2,c
  8090   003DA8  EFD8  F01E         	goto	u5731
  8091   003DAC  EFDA  F01E         	goto	u5730
  8092   003DB0                     u5731:
  8093   003DB0  EFF0  F01E         	goto	l5715
  8094   003DB4                     u5730:
  8095   003DB4                     
  8096                           ;Memory.c: 38:             reverseDetect(&motorL, &motorR);
  8097   003DB4  0EC7               	movlw	low _motorL
  8098   003DB6  6E1A               	movwf	reverseDetect@mL^0,c
  8099   003DB8  0E01               	movlw	high _motorL
  8100   003DBA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8101   003DBC  0EBE               	movlw	low _motorR
  8102   003DBE  6E1C               	movwf	reverseDetect@mR^0,c
  8103   003DC0  0E01               	movlw	high _motorR
  8104   003DC2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8105   003DC4  EC39  F02C         	call	_reverseDetect	;wreg free
  8106                           
  8107                           ;Memory.c: 39:             RedMove(&motorL, &motorR);
  8108   003DC8  0EC7               	movlw	low _motorL
  8109   003DCA  6E20               	movwf	RedMove@mL^0,c
  8110   003DCC  0E01               	movlw	high _motorL
  8111   003DCE  6E21               	movwf	(RedMove@mL+1)^0,c
  8112   003DD0  0EBE               	movlw	low _motorR
  8113   003DD2  6E22               	movwf	RedMove@mR^0,c
  8114   003DD4  0E01               	movlw	high _motorR
  8115   003DD6  6E23               	movwf	(RedMove@mR+1)^0,c
  8116   003DD8  EC98  F02F         	call	_RedMove	;wreg free
  8117                           
  8118                           ;Memory.c: 40:         }
  8119   003DDC  EF46  F01F         	goto	l5723
  8120   003DE0                     l5715:
  8121   003DE0  502B               	movf	go_Home@i^0,w,c
  8122   003DE2  2424               	addwf	go_Home@WayBack^0,w,c
  8123   003DE4  6E28               	movwf	??_go_Home^0,c
  8124   003DE6  502C               	movf	(go_Home@i+1)^0,w,c
  8125   003DE8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8126   003DEA  6E29               	movwf	(??_go_Home+1)^0,c
  8127   003DEC  0EFF               	movlw	255
  8128   003DEE  2428               	addwf	??_go_Home^0,w,c
  8129   003DF0  6ED9               	movwf	fsr2l,c
  8130   003DF2  0EFF               	movlw	255
  8131   003DF4  2029               	addwfc	(??_go_Home+1)^0,w,c
  8132   003DF6  6EDA               	movwf	fsr2h,c
  8133   003DF8  0E06               	movlw	6
  8134   003DFA  18DE               	xorwf	postinc2,w,c
  8135   003DFC  A4D8               	btfss	status,2,c
  8136   003DFE  EF03  F01F         	goto	u5741
  8137   003E02  EF05  F01F         	goto	u5740
  8138   003E06                     u5741:
  8139   003E06  EF1B  F01F         	goto	l5719
  8140   003E0A                     u5740:
  8141   003E0A                     
  8142                           ;Memory.c: 42:             reverseDetect(&motorL, &motorR);
  8143   003E0A  0EC7               	movlw	low _motorL
  8144   003E0C  6E1A               	movwf	reverseDetect@mL^0,c
  8145   003E0E  0E01               	movlw	high _motorL
  8146   003E10  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8147   003E12  0EBE               	movlw	low _motorR
  8148   003E14  6E1C               	movwf	reverseDetect@mR^0,c
  8149   003E16  0E01               	movlw	high _motorR
  8150   003E18  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8151   003E1A  EC39  F02C         	call	_reverseDetect	;wreg free
  8152                           
  8153                           ;Memory.c: 43:             OrangeMove(&motorL, &motorR);
  8154   003E1E  0EC7               	movlw	low _motorL
  8155   003E20  6E20               	movwf	OrangeMove@mL^0,c
  8156   003E22  0E01               	movlw	high _motorL
  8157   003E24  6E21               	movwf	(OrangeMove@mL+1)^0,c
  8158   003E26  0EBE               	movlw	low _motorR
  8159   003E28  6E22               	movwf	OrangeMove@mR^0,c
  8160   003E2A  0E01               	movlw	high _motorR
  8161   003E2C  6E23               	movwf	(OrangeMove@mR+1)^0,c
  8162   003E2E  ECE7  F02C         	call	_OrangeMove	;wreg free
  8163                           
  8164                           ;Memory.c: 44:         }
  8165   003E32  EF46  F01F         	goto	l5723
  8166   003E36                     l5719:
  8167   003E36  502B               	movf	go_Home@i^0,w,c
  8168   003E38  2424               	addwf	go_Home@WayBack^0,w,c
  8169   003E3A  6E28               	movwf	??_go_Home^0,c
  8170   003E3C  502C               	movf	(go_Home@i+1)^0,w,c
  8171   003E3E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8172   003E40  6E29               	movwf	(??_go_Home+1)^0,c
  8173   003E42  0EFF               	movlw	255
  8174   003E44  2428               	addwf	??_go_Home^0,w,c
  8175   003E46  6ED9               	movwf	fsr2l,c
  8176   003E48  0EFF               	movlw	255
  8177   003E4A  2029               	addwfc	(??_go_Home+1)^0,w,c
  8178   003E4C  6EDA               	movwf	fsr2h,c
  8179   003E4E  0E07               	movlw	7
  8180   003E50  18DE               	xorwf	postinc2,w,c
  8181   003E52  A4D8               	btfss	status,2,c
  8182   003E54  EF2E  F01F         	goto	u5751
  8183   003E58  EF30  F01F         	goto	u5750
  8184   003E5C                     u5751:
  8185   003E5C  EF46  F01F         	goto	l655
  8186   003E60                     u5750:
  8187   003E60                     
  8188                           ;Memory.c: 46:             reverseDetect(&motorL, &motorR);
  8189   003E60  0EC7               	movlw	low _motorL
  8190   003E62  6E1A               	movwf	reverseDetect@mL^0,c
  8191   003E64  0E01               	movlw	high _motorL
  8192   003E66  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8193   003E68  0EBE               	movlw	low _motorR
  8194   003E6A  6E1C               	movwf	reverseDetect@mR^0,c
  8195   003E6C  0E01               	movlw	high _motorR
  8196   003E6E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8197   003E70  EC39  F02C         	call	_reverseDetect	;wreg free
  8198                           
  8199                           ;Memory.c: 47:             ReversePink(&motorL, &motorR);
  8200   003E74  0EC7               	movlw	low _motorL
  8201   003E76  6E20               	movwf	ReversePink@mL^0,c
  8202   003E78  0E01               	movlw	high _motorL
  8203   003E7A  6E21               	movwf	(ReversePink@mL+1)^0,c
  8204   003E7C  0EBE               	movlw	low _motorR
  8205   003E7E  6E22               	movwf	ReversePink@mR^0,c
  8206   003E80  0E01               	movlw	high _motorR
  8207   003E82  6E23               	movwf	(ReversePink@mR+1)^0,c
  8208   003E84  ECCE  F027         	call	_ReversePink	;wreg free
  8209   003E88  EF46  F01F         	goto	l5723
  8210   003E8C                     l655:
  8211   003E8C                     l5723:
  8212                           
  8213                           ;Memory.c: 51:   }
  8214   003E8C  062B               	decf	go_Home@i^0,f,c
  8215   003E8E  A0D8               	btfss	status,0,c
  8216   003E90  062C               	decf	(go_Home@i+1)^0,f,c
  8217   003E92  EFFA  F01D         	goto	l5689
  8218   003E96                     l661:
  8219   003E96  0012               	return		;funcret
  8220   003E98                     __end_of_go_Home:
  8221                           	callstack 0
  8222                           
  8223 ;; *************** function _timed_forward *****************
  8224 ;; Defined at:
  8225 ;;		line 165 in file "dc_motor.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8228 ;;		 -> motorL(9), 
  8229 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8230 ;;		 -> motorR(9), 
  8231 ;;  time            2   23[COMRAM] int 
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;                  1    wreg      void 
  8236 ;; Registers used:
  8237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8243 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;Total ram usage:        8 bytes
  8248 ;; Hardware stack levels used: 1
  8249 ;; Hardware stack levels required when called: 2
  8250 ;; This function calls:
  8251 ;;		_delayed_ms
  8252 ;;		_setMotorPWM
  8253 ;; This function is called by:
  8254 ;;		_go_Home
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	text33
  8259   005052                     __ptext33:
  8260                           	callstack 0
  8261   005052                     _timed_forward:
  8262                           	callstack 27
  8263   005052                     
  8264                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  8265   005052  EE20 F001          	lfsr	2,1
  8266   005056  5014               	movf	timed_forward@mL^0,w,c
  8267   005058  26D9               	addwf	fsr2l,f,c
  8268   00505A  5015               	movf	(timed_forward@mL+1)^0,w,c
  8269   00505C  22DA               	addwfc	fsr2h,f,c
  8270   00505E  0E01               	movlw	1
  8271   005060  6EDF               	movwf	indf2,c
  8272                           
  8273                           ;dc_motor.c: 169:     mR->direction =1;
  8274   005062  EE20 F001          	lfsr	2,1
  8275   005066  5016               	movf	timed_forward@mR^0,w,c
  8276   005068  26D9               	addwf	fsr2l,f,c
  8277   00506A  5017               	movf	(timed_forward@mR+1)^0,w,c
  8278   00506C  22DA               	addwfc	fsr2h,f,c
  8279   00506E  0E01               	movlw	1
  8280   005070  6EDF               	movwf	indf2,c
  8281                           
  8282                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  8283   005072  EF5F  F028         	goto	l5235
  8284   005076                     l5227:
  8285                           
  8286                           ;dc_motor.c: 172:         mL->power+=10;
  8287   005076  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8288   00507A  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8289   00507E  0E0A               	movlw	10
  8290   005080  26DF               	addwf	indf2,f,c
  8291                           
  8292                           ;dc_motor.c: 173:         mR->power+=10;
  8293   005082  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8294   005086  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8295   00508A  0E0A               	movlw	10
  8296   00508C  26DF               	addwf	indf2,f,c
  8297   00508E                     
  8298                           ;dc_motor.c: 175:         setMotorPWM(mL);
  8299   00508E  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8300   005092  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8301   005096  EC22  F024         	call	_setMotorPWM	;wreg free
  8302   00509A                     
  8303                           ;dc_motor.c: 176:         setMotorPWM(mR);
  8304   00509A  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8305   00509E  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8306   0050A2  EC22  F024         	call	_setMotorPWM	;wreg free
  8307   0050A6                     
  8308                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8309   0050A6  0E02               	movlw	2
  8310   0050A8  6E1B               	movwf	(??_timed_forward+1)^0,c
  8311   0050AA  0EA0               	movlw	160
  8312   0050AC  6E1A               	movwf	??_timed_forward^0,c
  8313   0050AE  0E92               	movlw	146
  8314   0050B0                     u6137:
  8315   0050B0  2EE8               	decfsz	wreg,f,c
  8316   0050B2  D7FE               	bra	u6137
  8317   0050B4  2E1A               	decfsz	??_timed_forward^0,f,c
  8318   0050B6  D7FC               	bra	u6137
  8319   0050B8  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8320   0050BA  D7FA               	bra	u6137
  8321   0050BC  D000               	nop2	
  8322   0050BE                     l5235:
  8323   0050BE  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8324   0050C2  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8325   0050C6  0E1E               	movlw	30
  8326   0050C8  60DF               	cpfslt	indf2,c
  8327   0050CA  EF69  F028         	goto	u5081
  8328   0050CE  EF6B  F028         	goto	u5080
  8329   0050D2                     u5081:
  8330   0050D2  EF77  F028         	goto	l5239
  8331   0050D6                     u5080:
  8332   0050D6  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8333   0050DA  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8334   0050DE  0E1D               	movlw	29
  8335   0050E0  64DF               	cpfsgt	indf2,c
  8336   0050E2  EF75  F028         	goto	u5091
  8337   0050E6  EF77  F028         	goto	u5090
  8338   0050EA                     u5091:
  8339   0050EA  EF3B  F028         	goto	l5227
  8340   0050EE                     u5090:
  8341   0050EE                     l5239:
  8342                           
  8343                           ;dc_motor.c: 181:     delayed_ms(time);
  8344   0050EE  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8345   0050F2  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8346   0050F6  ECF2  F02F         	call	_delayed_ms	;wreg free
  8347   0050FA  0012               	return		;funcret
  8348   0050FC                     __end_of_timed_forward:
  8349                           	callstack 0
  8350                           
  8351 ;; *************** function _delayed_ms *****************
  8352 ;; Defined at:
  8353 ;;		line 39 in file "timers.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  time            2    0[COMRAM] int 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;  i               2    3[COMRAM] unsigned int 
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg, status,2, status,0
  8362 ;; Tracked objects:
  8363 ;;		On entry : 0/0
  8364 ;;		On exit  : 0/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;Total ram usage:        5 bytes
  8372 ;; Hardware stack levels used: 1
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_timed_forward
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text34
  8381   005FE4                     __ptext34:
  8382                           	callstack 0
  8383   005FE4                     _delayed_ms:
  8384                           	callstack 28
  8385   005FE4                     
  8386                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  8387   005FE4  0E00               	movlw	0
  8388   005FE6  6E05               	movwf	(delayed_ms@i+1)^0,c
  8389   005FE8  0E00               	movlw	0
  8390   005FEA  6E04               	movwf	delayed_ms@i^0,c
  8391   005FEC  EF02  F030         	goto	l688
  8392   005FF0                     l5059:
  8393                           
  8394                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8395   005FF0  0E15               	movlw	21
  8396   005FF2  6E03               	movwf	??_delayed_ms^0,c
  8397   005FF4  0EC6               	movlw	198
  8398   005FF6                     u6147:
  8399   005FF6  2EE8               	decfsz	wreg,f,c
  8400   005FF8  D7FE               	bra	u6147
  8401   005FFA  2E03               	decfsz	??_delayed_ms^0,f,c
  8402   005FFC  D7FC               	bra	u6147
  8403   005FFE  D000               	nop2	
  8404   006000                     
  8405                           ;timers.c: 42:     }
  8406   006000  4A04               	infsnz	delayed_ms@i^0,f,c
  8407   006002  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8408   006004                     l688:
  8409   006004  5001               	movf	delayed_ms@time^0,w,c
  8410   006006  5C04               	subwf	delayed_ms@i^0,w,c
  8411   006008  5002               	movf	(delayed_ms@time+1)^0,w,c
  8412   00600A  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8413   00600C  A0D8               	btfss	status,0,c
  8414   00600E  EF0B  F030         	goto	u5021
  8415   006012  EF0D  F030         	goto	u5020
  8416   006016                     u5021:
  8417   006016  EFF8  F02F         	goto	l5059
  8418   00601A                     u5020:
  8419   00601A  0012               	return		;funcret
  8420   00601C                     __end_of_delayed_ms:
  8421                           	callstack 0
  8422                           
  8423 ;; *************** function _ReverseYellow *****************
  8424 ;; Defined at:
  8425 ;;		line 334 in file "dc_motor.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8428 ;;		 -> motorL(9), 
  8429 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8430 ;;		 -> motorR(9), 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;Total ram usage:        4 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 4
  8449 ;; This function calls:
  8450 ;;		_ForwardOneBlock
  8451 ;;		_reverseDetect
  8452 ;;		_turnRight45
  8453 ;; This function is called by:
  8454 ;;		_go_Home
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text35
  8459   004EE6                     __ptext35:
  8460                           	callstack 0
  8461   004EE6                     _ReverseYellow:
  8462                           	callstack 25
  8463   004EE6                     
  8464                           ;dc_motor.c: 335:     reverseDetect(&motorL, &motorR);
  8465   004EE6  0EC7               	movlw	low _motorL
  8466   004EE8  6E1A               	movwf	reverseDetect@mL^0,c
  8467   004EEA  0E01               	movlw	high _motorL
  8468   004EEC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8469   004EEE  0EBE               	movlw	low _motorR
  8470   004EF0  6E1C               	movwf	reverseDetect@mR^0,c
  8471   004EF2  0E01               	movlw	high _motorR
  8472   004EF4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8473   004EF6  EC39  F02C         	call	_reverseDetect	;wreg free
  8474                           
  8475                           ;dc_motor.c: 336:     turnRight45(&motorL, &motorR);
  8476   004EFA  0EC7               	movlw	low _motorL
  8477   004EFC  6E1A               	movwf	turnRight45@mL^0,c
  8478   004EFE  0E01               	movlw	high _motorL
  8479   004F00  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8480   004F02  0EBE               	movlw	low _motorR
  8481   004F04  6E1C               	movwf	turnRight45@mR^0,c
  8482   004F06  0E01               	movlw	high _motorR
  8483   004F08  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8484   004F0A  EC7C  F02E         	call	_turnRight45	;wreg free
  8485                           
  8486                           ;dc_motor.c: 337:     turnRight45(&motorL, &motorR);
  8487   004F0E  0EC7               	movlw	low _motorL
  8488   004F10  6E1A               	movwf	turnRight45@mL^0,c
  8489   004F12  0E01               	movlw	high _motorL
  8490   004F14  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8491   004F16  0EBE               	movlw	low _motorR
  8492   004F18  6E1C               	movwf	turnRight45@mR^0,c
  8493   004F1A  0E01               	movlw	high _motorR
  8494   004F1C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8495   004F1E  EC7C  F02E         	call	_turnRight45	;wreg free
  8496                           
  8497                           ;dc_motor.c: 338:     ForwardOneBlock(&motorL, &motorR);
  8498   004F22  0EC7               	movlw	low _motorL
  8499   004F24  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8500   004F26  0E01               	movlw	high _motorL
  8501   004F28  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8502   004F2A  0EBE               	movlw	low _motorR
  8503   004F2C  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8504   004F2E  0E01               	movlw	high _motorR
  8505   004F30  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8506   004F32  ECDF  F02B         	call	_ForwardOneBlock	;wreg free
  8507                           
  8508                           ;dc_motor.c: 339:     reverseDetect(&motorL, &motorR);
  8509   004F36  0EC7               	movlw	low _motorL
  8510   004F38  6E1A               	movwf	reverseDetect@mL^0,c
  8511   004F3A  0E01               	movlw	high _motorL
  8512   004F3C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8513   004F3E  0EBE               	movlw	low _motorR
  8514   004F40  6E1C               	movwf	reverseDetect@mR^0,c
  8515   004F42  0E01               	movlw	high _motorR
  8516   004F44  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8517   004F46  EC39  F02C         	call	_reverseDetect	;wreg free
  8518                           
  8519                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  8520   004F4A  0EC7               	movlw	low _motorL
  8521   004F4C  6E1A               	movwf	turnRight45@mL^0,c
  8522   004F4E  0E01               	movlw	high _motorL
  8523   004F50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8524   004F52  0EBE               	movlw	low _motorR
  8525   004F54  6E1C               	movwf	turnRight45@mR^0,c
  8526   004F56  0E01               	movlw	high _motorR
  8527   004F58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8528   004F5A  EC7C  F02E         	call	_turnRight45	;wreg free
  8529                           
  8530                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  8531   004F5E  0EC7               	movlw	low _motorL
  8532   004F60  6E1A               	movwf	turnRight45@mL^0,c
  8533   004F62  0E01               	movlw	high _motorL
  8534   004F64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8535   004F66  0EBE               	movlw	low _motorR
  8536   004F68  6E1C               	movwf	turnRight45@mR^0,c
  8537   004F6A  0E01               	movlw	high _motorR
  8538   004F6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8539   004F6E  EC7C  F02E         	call	_turnRight45	;wreg free
  8540                           
  8541                           ;dc_motor.c: 342:     turnRight45(&motorL, &motorR);
  8542   004F72  0EC7               	movlw	low _motorL
  8543   004F74  6E1A               	movwf	turnRight45@mL^0,c
  8544   004F76  0E01               	movlw	high _motorL
  8545   004F78  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8546   004F7A  0EBE               	movlw	low _motorR
  8547   004F7C  6E1C               	movwf	turnRight45@mR^0,c
  8548   004F7E  0E01               	movlw	high _motorR
  8549   004F80  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8550   004F82  EC7C  F02E         	call	_turnRight45	;wreg free
  8551                           
  8552                           ;dc_motor.c: 343:     turnRight45(&motorL, &motorR);
  8553   004F86  0EC7               	movlw	low _motorL
  8554   004F88  6E1A               	movwf	turnRight45@mL^0,c
  8555   004F8A  0E01               	movlw	high _motorL
  8556   004F8C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8557   004F8E  0EBE               	movlw	low _motorR
  8558   004F90  6E1C               	movwf	turnRight45@mR^0,c
  8559   004F92  0E01               	movlw	high _motorR
  8560   004F94  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8561   004F96  EC7C  F02E         	call	_turnRight45	;wreg free
  8562   004F9A  0012               	return		;funcret
  8563   004F9C                     __end_of_ReverseYellow:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _ReversePink *****************
  8567 ;; Defined at:
  8568 ;;		line 345 in file "dc_motor.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8571 ;;		 -> motorL(9), 
  8572 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8573 ;;		 -> motorR(9), 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;		None
  8576 ;; Return value:  Size  Location     Type
  8577 ;;                  1    wreg      void 
  8578 ;; Registers used:
  8579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8580 ;; Tracked objects:
  8581 ;;		On entry : 0/0
  8582 ;;		On exit  : 0/0
  8583 ;;		Unchanged: 0/0
  8584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8589 ;;Total ram usage:        4 bytes
  8590 ;; Hardware stack levels used: 1
  8591 ;; Hardware stack levels required when called: 4
  8592 ;; This function calls:
  8593 ;;		_ForwardOneBlock
  8594 ;;		_reverseDetect
  8595 ;;		_turnLeft45
  8596 ;; This function is called by:
  8597 ;;		_go_Home
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           	psect	text36
  8602   004F9C                     __ptext36:
  8603                           	callstack 0
  8604   004F9C                     _ReversePink:
  8605                           	callstack 25
  8606   004F9C                     
  8607                           ;dc_motor.c: 346:     reverseDetect(&motorL, &motorR);
  8608   004F9C  0EC7               	movlw	low _motorL
  8609   004F9E  6E1A               	movwf	reverseDetect@mL^0,c
  8610   004FA0  0E01               	movlw	high _motorL
  8611   004FA2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8612   004FA4  0EBE               	movlw	low _motorR
  8613   004FA6  6E1C               	movwf	reverseDetect@mR^0,c
  8614   004FA8  0E01               	movlw	high _motorR
  8615   004FAA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8616   004FAC  EC39  F02C         	call	_reverseDetect	;wreg free
  8617                           
  8618                           ;dc_motor.c: 347:     turnLeft45(&motorL, &motorR);
  8619   004FB0  0EC7               	movlw	low _motorL
  8620   004FB2  6E1A               	movwf	turnLeft45@mL^0,c
  8621   004FB4  0E01               	movlw	high _motorL
  8622   004FB6  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8623   004FB8  0EBE               	movlw	low _motorR
  8624   004FBA  6E1C               	movwf	turnLeft45@mR^0,c
  8625   004FBC  0E01               	movlw	high _motorR
  8626   004FBE  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8627   004FC0  ECA3  F02E         	call	_turnLeft45	;wreg free
  8628                           
  8629                           ;dc_motor.c: 348:     turnLeft45(&motorL, &motorR);
  8630   004FC4  0EC7               	movlw	low _motorL
  8631   004FC6  6E1A               	movwf	turnLeft45@mL^0,c
  8632   004FC8  0E01               	movlw	high _motorL
  8633   004FCA  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8634   004FCC  0EBE               	movlw	low _motorR
  8635   004FCE  6E1C               	movwf	turnLeft45@mR^0,c
  8636   004FD0  0E01               	movlw	high _motorR
  8637   004FD2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8638   004FD4  ECA3  F02E         	call	_turnLeft45	;wreg free
  8639                           
  8640                           ;dc_motor.c: 349:     ForwardOneBlock(&motorL, &motorR);
  8641   004FD8  0EC7               	movlw	low _motorL
  8642   004FDA  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8643   004FDC  0E01               	movlw	high _motorL
  8644   004FDE  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8645   004FE0  0EBE               	movlw	low _motorR
  8646   004FE2  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8647   004FE4  0E01               	movlw	high _motorR
  8648   004FE6  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8649   004FE8  ECDF  F02B         	call	_ForwardOneBlock	;wreg free
  8650                           
  8651                           ;dc_motor.c: 350:     reverseDetect(&motorL, &motorR);
  8652   004FEC  0EC7               	movlw	low _motorL
  8653   004FEE  6E1A               	movwf	reverseDetect@mL^0,c
  8654   004FF0  0E01               	movlw	high _motorL
  8655   004FF2  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8656   004FF4  0EBE               	movlw	low _motorR
  8657   004FF6  6E1C               	movwf	reverseDetect@mR^0,c
  8658   004FF8  0E01               	movlw	high _motorR
  8659   004FFA  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8660   004FFC  EC39  F02C         	call	_reverseDetect	;wreg free
  8661                           
  8662                           ;dc_motor.c: 351:     turnLeft45(&motorL, &motorR);
  8663   005000  0EC7               	movlw	low _motorL
  8664   005002  6E1A               	movwf	turnLeft45@mL^0,c
  8665   005004  0E01               	movlw	high _motorL
  8666   005006  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8667   005008  0EBE               	movlw	low _motorR
  8668   00500A  6E1C               	movwf	turnLeft45@mR^0,c
  8669   00500C  0E01               	movlw	high _motorR
  8670   00500E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8671   005010  ECA3  F02E         	call	_turnLeft45	;wreg free
  8672                           
  8673                           ;dc_motor.c: 352:     turnLeft45(&motorL, &motorR);
  8674   005014  0EC7               	movlw	low _motorL
  8675   005016  6E1A               	movwf	turnLeft45@mL^0,c
  8676   005018  0E01               	movlw	high _motorL
  8677   00501A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8678   00501C  0EBE               	movlw	low _motorR
  8679   00501E  6E1C               	movwf	turnLeft45@mR^0,c
  8680   005020  0E01               	movlw	high _motorR
  8681   005022  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8682   005024  ECA3  F02E         	call	_turnLeft45	;wreg free
  8683                           
  8684                           ;dc_motor.c: 353:     turnLeft45(&motorL, &motorR);
  8685   005028  0EC7               	movlw	low _motorL
  8686   00502A  6E1A               	movwf	turnLeft45@mL^0,c
  8687   00502C  0E01               	movlw	high _motorL
  8688   00502E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8689   005030  0EBE               	movlw	low _motorR
  8690   005032  6E1C               	movwf	turnLeft45@mR^0,c
  8691   005034  0E01               	movlw	high _motorR
  8692   005036  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8693   005038  ECA3  F02E         	call	_turnLeft45	;wreg free
  8694                           
  8695                           ;dc_motor.c: 354:     turnLeft45(&motorL, &motorR);
  8696   00503C  0EC7               	movlw	low _motorL
  8697   00503E  6E1A               	movwf	turnLeft45@mL^0,c
  8698   005040  0E01               	movlw	high _motorL
  8699   005042  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8700   005044  0EBE               	movlw	low _motorR
  8701   005046  6E1C               	movwf	turnLeft45@mR^0,c
  8702   005048  0E01               	movlw	high _motorR
  8703   00504A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8704   00504C  ECA3  F02E         	call	_turnLeft45	;wreg free
  8705   005050  0012               	return		;funcret
  8706   005052                     __end_of_ReversePink:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function _ForwardOneBlock *****************
  8710 ;; Defined at:
  8711 ;;		line 238 in file "dc_motor.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8714 ;;		 -> motorL(9), 
  8715 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8716 ;;		 -> motorR(9), 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;                  1    wreg      void 
  8721 ;; Registers used:
  8722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;Total ram usage:        6 bytes
  8733 ;; Hardware stack levels used: 1
  8734 ;; Hardware stack levels required when called: 3
  8735 ;; This function calls:
  8736 ;;		_fullSpeedAhead
  8737 ;;		_stop
  8738 ;; This function is called by:
  8739 ;;		_ReverseYellow
  8740 ;;		_ReversePink
  8741 ;; This function uses a non-reentrant model
  8742 ;;
  8743                           
  8744                           	psect	text37
  8745   0057BE                     __ptext37:
  8746                           	callstack 0
  8747   0057BE                     _ForwardOneBlock:
  8748                           	callstack 25
  8749   0057BE                     
  8750                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  8751   0057BE  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  8752   0057C2  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  8753   0057C6  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  8754   0057CA  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  8755   0057CE  ECC0  F029         	call	_fullSpeedAhead	;wreg free
  8756   0057D2                     
  8757                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  8758   0057D2  0EA3               	movlw	163
  8759   0057D4  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8760   0057D6  0E57               	movlw	87
  8761   0057D8  6E1E               	movwf	??_ForwardOneBlock^0,c
  8762   0057DA  0E02               	movlw	2
  8763   0057DC                     u6157:
  8764   0057DC  2EE8               	decfsz	wreg,f,c
  8765   0057DE  D7FE               	bra	u6157
  8766   0057E0  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8767   0057E2  D7FC               	bra	u6157
  8768   0057E4  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8769   0057E6  D7FA               	bra	u6157
  8770   0057E8  D000               	nop2	
  8771   0057EA                     
  8772                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  8773   0057EA  0EC7               	movlw	low _motorL
  8774   0057EC  6E14               	movwf	stop@mL^0,c
  8775   0057EE  0E01               	movlw	high _motorL
  8776   0057F0  6E15               	movwf	(stop@mL+1)^0,c
  8777   0057F2  0EBE               	movlw	low _motorR
  8778   0057F4  6E16               	movwf	stop@mR^0,c
  8779   0057F6  0E01               	movlw	high _motorR
  8780   0057F8  6E17               	movwf	(stop@mR+1)^0,c
  8781   0057FA  EC94  F02A         	call	_stop	;wreg free
  8782                           
  8783                           ;dc_motor.c: 242:     _delay((unsigned long)((50)*(64000000/4000.0)));
  8784   0057FE  0E05               	movlw	5
  8785   005800  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  8786   005802  0E0F               	movlw	15
  8787   005804  6E1E               	movwf	??_ForwardOneBlock^0,c
  8788   005806  0EF1               	movlw	241
  8789   005808                     u6167:
  8790   005808  2EE8               	decfsz	wreg,f,c
  8791   00580A  D7FE               	bra	u6167
  8792   00580C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  8793   00580E  D7FC               	bra	u6167
  8794   005810  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  8795   005812  D7FA               	bra	u6167
  8796   005814  F000               	nop	
  8797   005816  0012               	return		;funcret
  8798   005818                     __end_of_ForwardOneBlock:
  8799                           	callstack 0
  8800                           
  8801 ;; *************** function _RedMove *****************
  8802 ;; Defined at:
  8803 ;;		line 262 in file "dc_motor.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8806 ;;		 -> motorL(9), 
  8807 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8808 ;;		 -> motorR(9), 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  1    wreg      void 
  8813 ;; Registers used:
  8814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8824 ;;Total ram usage:        4 bytes
  8825 ;; Hardware stack levels used: 1
  8826 ;; Hardware stack levels required when called: 4
  8827 ;; This function calls:
  8828 ;;		_reverseDetect
  8829 ;;		_turnRight45
  8830 ;; This function is called by:
  8831 ;;		_main
  8832 ;;		_go_Home
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text38
  8837   005F30                     __ptext38:
  8838                           	callstack 0
  8839   005F30                     _RedMove:
  8840                           	callstack 25
  8841   005F30                     
  8842                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8843   005F30  0EC7               	movlw	low _motorL
  8844   005F32  6E1A               	movwf	reverseDetect@mL^0,c
  8845   005F34  0E01               	movlw	high _motorL
  8846   005F36  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8847   005F38  0EBE               	movlw	low _motorR
  8848   005F3A  6E1C               	movwf	reverseDetect@mR^0,c
  8849   005F3C  0E01               	movlw	high _motorR
  8850   005F3E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8851   005F40  EC39  F02C         	call	_reverseDetect	;wreg free
  8852                           
  8853                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  8854   005F44  0EC7               	movlw	low _motorL
  8855   005F46  6E1A               	movwf	turnRight45@mL^0,c
  8856   005F48  0E01               	movlw	high _motorL
  8857   005F4A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8858   005F4C  0EBE               	movlw	low _motorR
  8859   005F4E  6E1C               	movwf	turnRight45@mR^0,c
  8860   005F50  0E01               	movlw	high _motorR
  8861   005F52  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8862   005F54  EC7C  F02E         	call	_turnRight45	;wreg free
  8863                           
  8864                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  8865   005F58  0EC7               	movlw	low _motorL
  8866   005F5A  6E1A               	movwf	turnRight45@mL^0,c
  8867   005F5C  0E01               	movlw	high _motorL
  8868   005F5E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8869   005F60  0EBE               	movlw	low _motorR
  8870   005F62  6E1C               	movwf	turnRight45@mR^0,c
  8871   005F64  0E01               	movlw	high _motorR
  8872   005F66  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8873   005F68  EC7C  F02E         	call	_turnRight45	;wreg free
  8874   005F6C  0012               	return		;funcret
  8875   005F6E                     __end_of_RedMove:
  8876                           	callstack 0
  8877                           
  8878 ;; *************** function _OrangeMove *****************
  8879 ;; Defined at:
  8880 ;;		line 308 in file "dc_motor.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8883 ;;		 -> motorL(9), 
  8884 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8885 ;;		 -> motorR(9), 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;		None
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      void 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8892 ;; Tracked objects:
  8893 ;;		On entry : 0/0
  8894 ;;		On exit  : 0/0
  8895 ;;		Unchanged: 0/0
  8896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;Total ram usage:        4 bytes
  8902 ;; Hardware stack levels used: 1
  8903 ;; Hardware stack levels required when called: 4
  8904 ;; This function calls:
  8905 ;;		_reverseDetect
  8906 ;;		_turnRight45
  8907 ;; This function is called by:
  8908 ;;		_main
  8909 ;;		_go_Home
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text39
  8914   0059CE                     __ptext39:
  8915                           	callstack 0
  8916   0059CE                     _OrangeMove:
  8917                           	callstack 25
  8918   0059CE                     
  8919                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  8920   0059CE  0EC7               	movlw	low _motorL
  8921   0059D0  6E1A               	movwf	reverseDetect@mL^0,c
  8922   0059D2  0E01               	movlw	high _motorL
  8923   0059D4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8924   0059D6  0EBE               	movlw	low _motorR
  8925   0059D8  6E1C               	movwf	reverseDetect@mR^0,c
  8926   0059DA  0E01               	movlw	high _motorR
  8927   0059DC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8928   0059DE  EC39  F02C         	call	_reverseDetect	;wreg free
  8929                           
  8930                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  8931   0059E2  0EC7               	movlw	low _motorL
  8932   0059E4  6E1A               	movwf	turnRight45@mL^0,c
  8933   0059E6  0E01               	movlw	high _motorL
  8934   0059E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8935   0059EA  0EBE               	movlw	low _motorR
  8936   0059EC  6E1C               	movwf	turnRight45@mR^0,c
  8937   0059EE  0E01               	movlw	high _motorR
  8938   0059F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8939   0059F2  EC7C  F02E         	call	_turnRight45	;wreg free
  8940                           
  8941                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  8942   0059F6  0EC7               	movlw	low _motorL
  8943   0059F8  6E1A               	movwf	turnRight45@mL^0,c
  8944   0059FA  0E01               	movlw	high _motorL
  8945   0059FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8946   0059FE  0EBE               	movlw	low _motorR
  8947   005A00  6E1C               	movwf	turnRight45@mR^0,c
  8948   005A02  0E01               	movlw	high _motorR
  8949   005A04  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8950   005A06  EC7C  F02E         	call	_turnRight45	;wreg free
  8951                           
  8952                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  8953   005A0A  0EC7               	movlw	low _motorL
  8954   005A0C  6E1A               	movwf	turnRight45@mL^0,c
  8955   005A0E  0E01               	movlw	high _motorL
  8956   005A10  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8957   005A12  0EBE               	movlw	low _motorR
  8958   005A14  6E1C               	movwf	turnRight45@mR^0,c
  8959   005A16  0E01               	movlw	high _motorR
  8960   005A18  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8961   005A1A  EC7C  F02E         	call	_turnRight45	;wreg free
  8962   005A1E  0012               	return		;funcret
  8963   005A20                     __end_of_OrangeMove:
  8964                           	callstack 0
  8965                           
  8966 ;; *************** function _LightBlueMove *****************
  8967 ;; Defined at:
  8968 ;;		line 317 in file "dc_motor.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8971 ;;		 -> motorL(9), 
  8972 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8973 ;;		 -> motorR(9), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8985 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;Total ram usage:        4 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 4
  8992 ;; This function calls:
  8993 ;;		_reverseDetect
  8994 ;;		_turnLeft45
  8995 ;; This function is called by:
  8996 ;;		_main
  8997 ;;		_go_Home
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text40
  9002   005A20                     __ptext40:
  9003                           	callstack 0
  9004   005A20                     _LightBlueMove:
  9005                           	callstack 25
  9006   005A20                     
  9007                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  9008   005A20  0EC7               	movlw	low _motorL
  9009   005A22  6E1A               	movwf	reverseDetect@mL^0,c
  9010   005A24  0E01               	movlw	high _motorL
  9011   005A26  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9012   005A28  0EBE               	movlw	low _motorR
  9013   005A2A  6E1C               	movwf	reverseDetect@mR^0,c
  9014   005A2C  0E01               	movlw	high _motorR
  9015   005A2E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9016   005A30  EC39  F02C         	call	_reverseDetect	;wreg free
  9017                           
  9018                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9019   005A34  0EC7               	movlw	low _motorL
  9020   005A36  6E1A               	movwf	turnLeft45@mL^0,c
  9021   005A38  0E01               	movlw	high _motorL
  9022   005A3A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9023   005A3C  0EBE               	movlw	low _motorR
  9024   005A3E  6E1C               	movwf	turnLeft45@mR^0,c
  9025   005A40  0E01               	movlw	high _motorR
  9026   005A42  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9027   005A44  ECA3  F02E         	call	_turnLeft45	;wreg free
  9028                           
  9029                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9030   005A48  0EC7               	movlw	low _motorL
  9031   005A4A  6E1A               	movwf	turnLeft45@mL^0,c
  9032   005A4C  0E01               	movlw	high _motorL
  9033   005A4E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9034   005A50  0EBE               	movlw	low _motorR
  9035   005A52  6E1C               	movwf	turnLeft45@mR^0,c
  9036   005A54  0E01               	movlw	high _motorR
  9037   005A56  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9038   005A58  ECA3  F02E         	call	_turnLeft45	;wreg free
  9039                           
  9040                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  9041   005A5C  0EC7               	movlw	low _motorL
  9042   005A5E  6E1A               	movwf	turnLeft45@mL^0,c
  9043   005A60  0E01               	movlw	high _motorL
  9044   005A62  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9045   005A64  0EBE               	movlw	low _motorR
  9046   005A66  6E1C               	movwf	turnLeft45@mR^0,c
  9047   005A68  0E01               	movlw	high _motorR
  9048   005A6A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9049   005A6C  ECA3  F02E         	call	_turnLeft45	;wreg free
  9050   005A70  0012               	return		;funcret
  9051   005A72                     __end_of_LightBlueMove:
  9052                           	callstack 0
  9053                           
  9054 ;; *************** function _GreenMove *****************
  9055 ;; Defined at:
  9056 ;;		line 270 in file "dc_motor.c"
  9057 ;; Parameters:    Size  Location     Type
  9058 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9059 ;;		 -> motorL(9), 
  9060 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9061 ;;		 -> motorR(9), 
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;Total ram usage:        4 bytes
  9078 ;; Hardware stack levels used: 1
  9079 ;; Hardware stack levels required when called: 4
  9080 ;; This function calls:
  9081 ;;		_reverseDetect
  9082 ;;		_turnLeft45
  9083 ;; This function is called by:
  9084 ;;		_main
  9085 ;;		_go_Home
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           
  9089                           	psect	text41
  9090   005F6E                     __ptext41:
  9091                           	callstack 0
  9092   005F6E                     _GreenMove:
  9093                           	callstack 25
  9094   005F6E                     
  9095                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  9096   005F6E  0EC7               	movlw	low _motorL
  9097   005F70  6E1A               	movwf	reverseDetect@mL^0,c
  9098   005F72  0E01               	movlw	high _motorL
  9099   005F74  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9100   005F76  0EBE               	movlw	low _motorR
  9101   005F78  6E1C               	movwf	reverseDetect@mR^0,c
  9102   005F7A  0E01               	movlw	high _motorR
  9103   005F7C  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9104   005F7E  EC39  F02C         	call	_reverseDetect	;wreg free
  9105                           
  9106                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9107   005F82  0EC7               	movlw	low _motorL
  9108   005F84  6E1A               	movwf	turnLeft45@mL^0,c
  9109   005F86  0E01               	movlw	high _motorL
  9110   005F88  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9111   005F8A  0EBE               	movlw	low _motorR
  9112   005F8C  6E1C               	movwf	turnLeft45@mR^0,c
  9113   005F8E  0E01               	movlw	high _motorR
  9114   005F90  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9115   005F92  ECA3  F02E         	call	_turnLeft45	;wreg free
  9116                           
  9117                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9118   005F96  0EC7               	movlw	low _motorL
  9119   005F98  6E1A               	movwf	turnLeft45@mL^0,c
  9120   005F9A  0E01               	movlw	high _motorL
  9121   005F9C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9122   005F9E  0EBE               	movlw	low _motorR
  9123   005FA0  6E1C               	movwf	turnLeft45@mR^0,c
  9124   005FA2  0E01               	movlw	high _motorR
  9125   005FA4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9126   005FA6  ECA3  F02E         	call	_turnLeft45	;wreg free
  9127   005FAA  0012               	return		;funcret
  9128   005FAC                     __end_of_GreenMove:
  9129                           	callstack 0
  9130                           
  9131 ;; *************** function _BlueMove *****************
  9132 ;; Defined at:
  9133 ;;		line 278 in file "dc_motor.c"
  9134 ;; Parameters:    Size  Location     Type
  9135 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9136 ;;		 -> motorL(9), 
  9137 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9138 ;;		 -> motorR(9), 
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;Total ram usage:        4 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 4
  9157 ;; This function calls:
  9158 ;;		_reverseDetect
  9159 ;;		_turnRight45
  9160 ;; This function is called by:
  9161 ;;		_main
  9162 ;;		_go_Home
  9163 ;; This function uses a non-reentrant model
  9164 ;;
  9165                           
  9166                           	psect	text42
  9167   0056FA                     __ptext42:
  9168                           	callstack 0
  9169   0056FA                     _BlueMove:
  9170                           	callstack 25
  9171   0056FA                     
  9172                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  9173   0056FA  0EC7               	movlw	low _motorL
  9174   0056FC  6E1A               	movwf	reverseDetect@mL^0,c
  9175   0056FE  0E01               	movlw	high _motorL
  9176   005700  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9177   005702  0EBE               	movlw	low _motorR
  9178   005704  6E1C               	movwf	reverseDetect@mR^0,c
  9179   005706  0E01               	movlw	high _motorR
  9180   005708  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9181   00570A  EC39  F02C         	call	_reverseDetect	;wreg free
  9182                           
  9183                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  9184   00570E  0EC7               	movlw	low _motorL
  9185   005710  6E1A               	movwf	turnRight45@mL^0,c
  9186   005712  0E01               	movlw	high _motorL
  9187   005714  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9188   005716  0EBE               	movlw	low _motorR
  9189   005718  6E1C               	movwf	turnRight45@mR^0,c
  9190   00571A  0E01               	movlw	high _motorR
  9191   00571C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9192   00571E  EC7C  F02E         	call	_turnRight45	;wreg free
  9193                           
  9194                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  9195   005722  0EC7               	movlw	low _motorL
  9196   005724  6E1A               	movwf	turnRight45@mL^0,c
  9197   005726  0E01               	movlw	high _motorL
  9198   005728  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9199   00572A  0EBE               	movlw	low _motorR
  9200   00572C  6E1C               	movwf	turnRight45@mR^0,c
  9201   00572E  0E01               	movlw	high _motorR
  9202   005730  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9203   005732  EC7C  F02E         	call	_turnRight45	;wreg free
  9204                           
  9205                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  9206   005736  0EC7               	movlw	low _motorL
  9207   005738  6E1A               	movwf	turnRight45@mL^0,c
  9208   00573A  0E01               	movlw	high _motorL
  9209   00573C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9210   00573E  0EBE               	movlw	low _motorR
  9211   005740  6E1C               	movwf	turnRight45@mR^0,c
  9212   005742  0E01               	movlw	high _motorR
  9213   005744  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9214   005746  EC7C  F02E         	call	_turnRight45	;wreg free
  9215                           
  9216                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  9217   00574A  0EC7               	movlw	low _motorL
  9218   00574C  6E1A               	movwf	turnRight45@mL^0,c
  9219   00574E  0E01               	movlw	high _motorL
  9220   005750  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9221   005752  0EBE               	movlw	low _motorR
  9222   005754  6E1C               	movwf	turnRight45@mR^0,c
  9223   005756  0E01               	movlw	high _motorR
  9224   005758  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9225   00575A  EC7C  F02E         	call	_turnRight45	;wreg free
  9226   00575E  0012               	return		;funcret
  9227   005760                     __end_of_BlueMove:
  9228                           	callstack 0
  9229                           
  9230 ;; *************** function _getTMR0val *****************
  9231 ;; Defined at:
  9232 ;;		line 28 in file "timers.c"
  9233 ;; Parameters:    Size  Location     Type
  9234 ;;		None
  9235 ;; Auto vars:     Size  Location     Type
  9236 ;;  moving          2    0[COMRAM] int 
  9237 ;;  temp            2    0        unsigned int 
  9238 ;; Return value:  Size  Location     Type
  9239 ;;                  1    wreg      void 
  9240 ;; Registers used:
  9241 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9242 ;; Tracked objects:
  9243 ;;		On entry : 0/0
  9244 ;;		On exit  : 0/0
  9245 ;;		Unchanged: 0/0
  9246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;Total ram usage:        2 bytes
  9252 ;; Hardware stack levels used: 1
  9253 ;; This function calls:
  9254 ;;		Nothing
  9255 ;; This function is called by:
  9256 ;;		_main
  9257 ;; This function uses a non-reentrant model
  9258 ;;
  9259                           
  9260                           	psect	text43
  9261   0060D4                     __ptext43:
  9262                           	callstack 0
  9263   0060D4                     _getTMR0val:
  9264                           	callstack 30
  9265   0060D4  50D3               	movf	211,w,c	;volatile
  9266   0060D6                     
  9267                           ;timers.c: 32:     int moving=TMR0H<<8;
  9268   0060D6  50D4               	movf	212,w,c	;volatile
  9269   0060D8  6E02               	movwf	(getTMR0val@moving+1)^0,c
  9270   0060DA  6A01               	clrf	getTMR0val@moving^0,c
  9271   0060DC                     
  9272                           ;timers.c: 33:     Time_forward[move_count]=moving;
  9273   0060DC  90D8               	bcf	status,0,c
  9274   0060DE  0101               	movlb	1	; () banked
  9275   0060E0  357E               	rlcf	_move_count& (0+255),w,b	;volatile
  9276   0060E2  6ED9               	movwf	fsr2l,c
  9277   0060E4  357F               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  9278   0060E6  6EDA               	movwf	fsr2h,c
  9279   0060E8  0E3C               	movlw	low _Time_forward
  9280   0060EA  26D9               	addwf	fsr2l,f,c
  9281   0060EC  0E02               	movlw	high _Time_forward
  9282   0060EE  22DA               	addwfc	fsr2h,f,c
  9283   0060F0  C001  FFDE         	movff	getTMR0val@moving,postinc2
  9284   0060F4  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  9285   0060F8                     
  9286                           ; BSR set to: 1
  9287   0060F8  0012               	return		;funcret
  9288   0060FA                     __end_of_getTMR0val:
  9289                           	callstack 0
  9290                           
  9291 ;; *************** function _colour_rel *****************
  9292 ;; Defined at:
  9293 ;;		line 114 in file "color.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  vals            2   74[COMRAM] PTR struct RGB
  9296 ;;		 -> vals(8), 
  9297 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  9298 ;;		 -> rel(12), 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  B               4   20[BANK0 ] float 
  9301 ;;  G               4   16[BANK0 ] float 
  9302 ;;  R               4   12[BANK0 ] float 
  9303 ;;  L               4    0[BANK0 ] float 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      void 
  9306 ;; Registers used:
  9307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9314 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9316 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;Total ram usage:       28 bytes
  9318 ;; Hardware stack levels used: 1
  9319 ;; Hardware stack levels required when called: 1
  9320 ;; This function calls:
  9321 ;;		___fladd
  9322 ;;		___fldiv
  9323 ;;		___xxtofl
  9324 ;; This function is called by:
  9325 ;;		_main
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text44
  9330   0035B8                     __ptext44:
  9331                           	callstack 0
  9332   0035B8                     _colour_rel:
  9333                           	callstack 29
  9334   0035B8                     
  9335                           ;color.c: 115:     float R = vals->R;
  9336   0035B8  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  9337   0035BC  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  9338   0035C0  CFDE F001          	movff	postinc2,___xxtofl@val
  9339   0035C4  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9340   0035C8  0E00               	movlw	0
  9341   0035CA  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9342   0035CC  0EFF               	movlw	-1
  9343   0035CE  6E03               	movwf	(___xxtofl@val+2)^0,c
  9344   0035D0  6E04               	movwf	(___xxtofl@val+3)^0,c
  9345   0035D2  0E01               	movlw	1
  9346   0035D4  EC84  F022         	call	___xxtofl
  9347   0035D8  C001  F06C         	movff	?___xxtofl,colour_rel@R
  9348   0035DC  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  9349   0035E0  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  9350   0035E4  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  9351                           
  9352                           ;color.c: 116:     float G = vals->G;
  9353   0035E8  EE20 F002          	lfsr	2,2
  9354   0035EC  504B               	movf	colour_rel@vals^0,w,c
  9355   0035EE  26D9               	addwf	fsr2l,f,c
  9356   0035F0  504C               	movf	(colour_rel@vals+1)^0,w,c
  9357   0035F2  22DA               	addwfc	fsr2h,f,c
  9358   0035F4  CFDE F001          	movff	postinc2,___xxtofl@val
  9359   0035F8  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9360   0035FC  0E00               	movlw	0
  9361   0035FE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9362   003600  0EFF               	movlw	-1
  9363   003602  6E03               	movwf	(___xxtofl@val+2)^0,c
  9364   003604  6E04               	movwf	(___xxtofl@val+3)^0,c
  9365   003606  0E01               	movlw	1
  9366   003608  EC84  F022         	call	___xxtofl
  9367   00360C  C001  F070         	movff	?___xxtofl,colour_rel@G
  9368   003610  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  9369   003614  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  9370   003618  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  9371                           
  9372                           ;color.c: 117:     float B = vals->B;
  9373   00361C  EE20 F004          	lfsr	2,4
  9374   003620  504B               	movf	colour_rel@vals^0,w,c
  9375   003622  26D9               	addwf	fsr2l,f,c
  9376   003624  504C               	movf	(colour_rel@vals+1)^0,w,c
  9377   003626  22DA               	addwfc	fsr2h,f,c
  9378   003628  CFDE F001          	movff	postinc2,___xxtofl@val
  9379   00362C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9380   003630  0E00               	movlw	0
  9381   003632  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9382   003634  0EFF               	movlw	-1
  9383   003636  6E03               	movwf	(___xxtofl@val+2)^0,c
  9384   003638  6E04               	movwf	(___xxtofl@val+3)^0,c
  9385   00363A  0E01               	movlw	1
  9386   00363C  EC84  F022         	call	___xxtofl
  9387   003640  C001  F074         	movff	?___xxtofl,colour_rel@B
  9388   003644  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  9389   003648  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  9390   00364C  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  9391                           
  9392                           ;color.c: 118:     float L = vals->L;
  9393   003650  EE20 F006          	lfsr	2,6
  9394   003654  504B               	movf	colour_rel@vals^0,w,c
  9395   003656  26D9               	addwf	fsr2l,f,c
  9396   003658  504C               	movf	(colour_rel@vals+1)^0,w,c
  9397   00365A  22DA               	addwfc	fsr2h,f,c
  9398   00365C  CFDE F001          	movff	postinc2,___xxtofl@val
  9399   003660  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9400   003664  0E00               	movlw	0
  9401   003666  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9402   003668  0EFF               	movlw	-1
  9403   00366A  6E03               	movwf	(___xxtofl@val+2)^0,c
  9404   00366C  6E04               	movwf	(___xxtofl@val+3)^0,c
  9405   00366E  0E01               	movlw	1
  9406   003670  EC84  F022         	call	___xxtofl
  9407   003674  C001  F060         	movff	?___xxtofl,colour_rel@L
  9408   003678  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  9409   00367C  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  9410   003680  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  9411   003684                     
  9412                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9413   003684  C070  F005         	movff	colour_rel@G,___fladd@a
  9414   003688  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9415   00368C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9416   003690  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9417   003694  C06C  F001         	movff	colour_rel@R,___fladd@b
  9418   003698  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9419   00369C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9420   0036A0  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9421   0036A4  EC9A  F014         	call	___fladd	;wreg free
  9422   0036A8  C001  F064         	movff	?___fladd,_colour_rel$3142
  9423   0036AC  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9424   0036B0  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9425   0036B4  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9426   0036B8                     
  9427                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9428   0036B8  C074  F005         	movff	colour_rel@B,___fladd@a
  9429   0036BC  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9430   0036C0  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9431   0036C4  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9432   0036C8  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9433   0036CC  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9434   0036D0  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9435   0036D4  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9436   0036D8  EC9A  F014         	call	___fladd	;wreg free
  9437   0036DC  C001  F068         	movff	?___fladd,_colour_rel$3143
  9438   0036E0  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9439   0036E4  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9440   0036E8  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9441                           
  9442                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  9443   0036EC  C06C  F032         	movff	colour_rel@R,___fldiv@b
  9444   0036F0  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  9445   0036F4  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  9446   0036F8  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  9447   0036FC  C060  F005         	movff	colour_rel@L,___fladd@a
  9448   003700  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9449   003704  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9450   003708  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9451   00370C  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9452   003710  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9453   003714  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9454   003718  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9455   00371C  EC9A  F014         	call	___fladd	;wreg free
  9456   003720  C001  F036         	movff	?___fladd,___fldiv@a
  9457   003724  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9458   003728  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9459   00372C  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9460   003730  EC0F  F019         	call	___fldiv	;wreg free
  9461   003734  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  9462   003738  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  9463   00373C  C032  FFDE         	movff	?___fldiv,postinc2
  9464   003740  C033  FFDE         	movff	?___fldiv+1,postinc2
  9465   003744  C034  FFDE         	movff	?___fldiv+2,postinc2
  9466   003748  C035  FFDE         	movff	?___fldiv+3,postinc2
  9467   00374C                     
  9468                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9469   00374C  C070  F005         	movff	colour_rel@G,___fladd@a
  9470   003750  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9471   003754  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9472   003758  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9473   00375C  C06C  F001         	movff	colour_rel@R,___fladd@b
  9474   003760  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9475   003764  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9476   003768  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9477   00376C  EC9A  F014         	call	___fladd	;wreg free
  9478   003770  C001  F064         	movff	?___fladd,_colour_rel$3142
  9479   003774  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9480   003778  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9481   00377C  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9482   003780                     
  9483                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9484   003780  C074  F005         	movff	colour_rel@B,___fladd@a
  9485   003784  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9486   003788  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9487   00378C  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9488   003790  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9489   003794  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9490   003798  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9491   00379C  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9492   0037A0  EC9A  F014         	call	___fladd	;wreg free
  9493   0037A4  C001  F068         	movff	?___fladd,_colour_rel$3143
  9494   0037A8  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9495   0037AC  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9496   0037B0  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9497                           
  9498                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  9499   0037B4  C074  F032         	movff	colour_rel@B,___fldiv@b
  9500   0037B8  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  9501   0037BC  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  9502   0037C0  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  9503   0037C4  C060  F005         	movff	colour_rel@L,___fladd@a
  9504   0037C8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9505   0037CC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9506   0037D0  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9507   0037D4  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9508   0037D8  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9509   0037DC  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9510   0037E0  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9511   0037E4  EC9A  F014         	call	___fladd	;wreg free
  9512   0037E8  C001  F036         	movff	?___fladd,___fldiv@a
  9513   0037EC  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9514   0037F0  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9515   0037F4  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9516   0037F8  EC0F  F019         	call	___fldiv	;wreg free
  9517   0037FC  EE20 F008          	lfsr	2,8
  9518   003800  504D               	movf	colour_rel@rel^0,w,c
  9519   003802  26D9               	addwf	fsr2l,f,c
  9520   003804  504E               	movf	(colour_rel@rel+1)^0,w,c
  9521   003806  22DA               	addwfc	fsr2h,f,c
  9522   003808  C032  FFDE         	movff	?___fldiv,postinc2
  9523   00380C  C033  FFDE         	movff	?___fldiv+1,postinc2
  9524   003810  C034  FFDE         	movff	?___fldiv+2,postinc2
  9525   003814  C035  FFDE         	movff	?___fldiv+3,postinc2
  9526   003818                     
  9527                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9528   003818  C070  F005         	movff	colour_rel@G,___fladd@a
  9529   00381C  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  9530   003820  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  9531   003824  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  9532   003828  C06C  F001         	movff	colour_rel@R,___fladd@b
  9533   00382C  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  9534   003830  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  9535   003834  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  9536   003838  EC9A  F014         	call	___fladd	;wreg free
  9537   00383C  C001  F064         	movff	?___fladd,_colour_rel$3142
  9538   003840  C002  F065         	movff	?___fladd+1,_colour_rel$3142+1
  9539   003844  C003  F066         	movff	?___fladd+2,_colour_rel$3142+2
  9540   003848  C004  F067         	movff	?___fladd+3,_colour_rel$3142+3
  9541   00384C                     
  9542                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9543   00384C  C074  F005         	movff	colour_rel@B,___fladd@a
  9544   003850  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  9545   003854  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  9546   003858  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  9547   00385C  C064  F001         	movff	_colour_rel$3142,___fladd@b
  9548   003860  C065  F002         	movff	_colour_rel$3142+1,___fladd@b+1
  9549   003864  C066  F003         	movff	_colour_rel$3142+2,___fladd@b+2
  9550   003868  C067  F004         	movff	_colour_rel$3142+3,___fladd@b+3
  9551   00386C  EC9A  F014         	call	___fladd	;wreg free
  9552   003870  C001  F068         	movff	?___fladd,_colour_rel$3143
  9553   003874  C002  F069         	movff	?___fladd+1,_colour_rel$3143+1
  9554   003878  C003  F06A         	movff	?___fladd+2,_colour_rel$3143+2
  9555   00387C  C004  F06B         	movff	?___fladd+3,_colour_rel$3143+3
  9556                           
  9557                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  9558   003880  C070  F032         	movff	colour_rel@G,___fldiv@b
  9559   003884  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  9560   003888  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  9561   00388C  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  9562   003890  C060  F005         	movff	colour_rel@L,___fladd@a
  9563   003894  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  9564   003898  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  9565   00389C  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  9566   0038A0  C068  F001         	movff	_colour_rel$3143,___fladd@b
  9567   0038A4  C069  F002         	movff	_colour_rel$3143+1,___fladd@b+1
  9568   0038A8  C06A  F003         	movff	_colour_rel$3143+2,___fladd@b+2
  9569   0038AC  C06B  F004         	movff	_colour_rel$3143+3,___fladd@b+3
  9570   0038B0  EC9A  F014         	call	___fladd	;wreg free
  9571   0038B4  C001  F036         	movff	?___fladd,___fldiv@a
  9572   0038B8  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  9573   0038BC  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  9574   0038C0  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  9575   0038C4  EC0F  F019         	call	___fldiv	;wreg free
  9576   0038C8  EE20 F004          	lfsr	2,4
  9577   0038CC  504D               	movf	colour_rel@rel^0,w,c
  9578   0038CE  26D9               	addwf	fsr2l,f,c
  9579   0038D0  504E               	movf	(colour_rel@rel+1)^0,w,c
  9580   0038D2  22DA               	addwfc	fsr2h,f,c
  9581   0038D4  C032  FFDE         	movff	?___fldiv,postinc2
  9582   0038D8  C033  FFDE         	movff	?___fldiv+1,postinc2
  9583   0038DC  C034  FFDE         	movff	?___fldiv+2,postinc2
  9584   0038E0  C035  FFDE         	movff	?___fldiv+3,postinc2
  9585   0038E4  0012               	return		;funcret
  9586   0038E6                     __end_of_colour_rel:
  9587                           	callstack 0
  9588                           
  9589 ;; *************** function _color_click_init *****************
  9590 ;; Defined at:
  9591 ;;		line 7 in file "color.c"
  9592 ;; Parameters:    Size  Location     Type
  9593 ;;		None
  9594 ;; Auto vars:     Size  Location     Type
  9595 ;;		None
  9596 ;; Return value:  Size  Location     Type
  9597 ;;                  1    wreg      void 
  9598 ;; Registers used:
  9599 ;;		wreg, status,2, status,0, cstack
  9600 ;; Tracked objects:
  9601 ;;		On entry : 0/0
  9602 ;;		On exit  : 0/0
  9603 ;;		Unchanged: 0/0
  9604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9609 ;;Total ram usage:        1 bytes
  9610 ;; Hardware stack levels used: 1
  9611 ;; Hardware stack levels required when called: 3
  9612 ;; This function calls:
  9613 ;;		_I2C_2_Master_Init
  9614 ;;		_color_writetoaddr
  9615 ;; This function is called by:
  9616 ;;		_main
  9617 ;; This function uses a non-reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text45
  9621   005A72                     __ptext45:
  9622                           	callstack 0
  9623   005A72                     _color_click_init:
  9624                           	callstack 27
  9625   005A72                     
  9626                           ;color.c: 10:     I2C_2_Master_Init();
  9627   005A72  EC41  F030         	call	_I2C_2_Master_Init	;wreg free
  9628   005A76                     
  9629                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  9630   005A76  0E01               	movlw	1
  9631   005A78  6E03               	movwf	color_writetoaddr@value^0,c
  9632   005A7A  0E00               	movlw	0
  9633   005A7C  EC90  F030         	call	_color_writetoaddr
  9634   005A80                     
  9635                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9636   005A80  0E3F               	movlw	63
  9637   005A82  6E05               	movwf	??_color_click_init^0,c
  9638   005A84  0E55               	movlw	85
  9639   005A86                     u6177:
  9640   005A86  2EE8               	decfsz	wreg,f,c
  9641   005A88  D7FE               	bra	u6177
  9642   005A8A  2E05               	decfsz	??_color_click_init^0,f,c
  9643   005A8C  D7FC               	bra	u6177
  9644   005A8E  F000               	nop	
  9645   005A90                     
  9646                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  9647   005A90  0E03               	movlw	3
  9648   005A92  6E03               	movwf	color_writetoaddr@value^0,c
  9649   005A94  0E00               	movlw	0
  9650   005A96  EC90  F030         	call	_color_writetoaddr
  9651   005A9A                     
  9652                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  9653   005A9A  0ED5               	movlw	213
  9654   005A9C  6E03               	movwf	color_writetoaddr@value^0,c
  9655   005A9E  0E01               	movlw	1
  9656   005AA0  EC90  F030         	call	_color_writetoaddr
  9657   005AA4                     
  9658                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  9659   005AA4  0E00               	movlw	0
  9660   005AA6  6E03               	movwf	color_writetoaddr@value^0,c
  9661   005AA8  0E0F               	movlw	15
  9662   005AAA  EC90  F030         	call	_color_writetoaddr
  9663   005AAE                     
  9664                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  9665   005AAE  9287               	bcf	135,1,c	;volatile
  9666   005AB0                     
  9667                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  9668   005AB0  9881               	bcf	129,4,c	;volatile
  9669   005AB2                     
  9670                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  9671   005AB2  9E86               	bcf	134,7,c	;volatile
  9672   005AB4                     
  9673                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  9674   005AB4  9684               	bcf	132,3,c	;volatile
  9675   005AB6                     
  9676                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  9677   005AB6  9884               	bcf	132,4,c	;volatile
  9678   005AB8                     
  9679                           ;color.c: 28:     LATGbits.LATG1=0;
  9680   005AB8  927F               	bcf	127,1,c	;volatile
  9681   005ABA                     
  9682                           ;color.c: 29:     LATFbits.LATF7=0;
  9683   005ABA  9E7E               	bcf	126,7,c	;volatile
  9684   005ABC                     
  9685                           ;color.c: 30:     LATAbits.LATA4=0;
  9686   005ABC  9879               	bcf	121,4,c	;volatile
  9687   005ABE                     
  9688                           ;color.c: 32:     LATDbits.LATD3=0;
  9689   005ABE  967C               	bcf	124,3,c	;volatile
  9690   005AC0                     
  9691                           ;color.c: 33:     LATDbits.LATD4=0;
  9692   005AC0  987C               	bcf	124,4,c	;volatile
  9693   005AC2  0012               	return		;funcret
  9694   005AC4                     __end_of_color_click_init:
  9695                           	callstack 0
  9696                           
  9697 ;; *************** function _color_writetoaddr *****************
  9698 ;; Defined at:
  9699 ;;		line 41 in file "color.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  address         1    wreg     unsigned char 
  9702 ;;  value           1    2[COMRAM] unsigned char 
  9703 ;; Auto vars:     Size  Location     Type
  9704 ;;  address         1    3[COMRAM] unsigned char 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  1    wreg      void 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0, cstack
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9714 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9718 ;;Total ram usage:        2 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; Hardware stack levels required when called: 2
  9721 ;; This function calls:
  9722 ;;		_I2C_2_Master_Start
  9723 ;;		_I2C_2_Master_Stop
  9724 ;;		_I2C_2_Master_Write
  9725 ;; This function is called by:
  9726 ;;		_color_click_init
  9727 ;; This function uses a non-reentrant model
  9728 ;;
  9729                           
  9730                           	psect	text46
  9731   006120                     __ptext46:
  9732                           	callstack 0
  9733   006120                     _color_writetoaddr:
  9734                           	callstack 27
  9735                           
  9736                           ;incstack = 0
  9737                           ;color_writetoaddr@address stored from wreg
  9738   006120  6E04               	movwf	color_writetoaddr@address^0,c
  9739   006122                     
  9740                           ;color.c: 42:     I2C_2_Master_Start();
  9741   006122  ECDB  F030         	call	_I2C_2_Master_Start	;wreg free
  9742                           
  9743                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  9744   006126  0E52               	movlw	82
  9745   006128  ECCB  F030         	call	_I2C_2_Master_Write
  9746                           
  9747                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  9748   00612C  5004               	movf	color_writetoaddr@address^0,w,c
  9749   00612E  0980               	iorlw	128
  9750   006130  ECCB  F030         	call	_I2C_2_Master_Write
  9751                           
  9752                           ;color.c: 45:     I2C_2_Master_Write(value);
  9753   006134  5003               	movf	color_writetoaddr@value^0,w,c
  9754   006136  ECCB  F030         	call	_I2C_2_Master_Write
  9755                           
  9756                           ;color.c: 46:     I2C_2_Master_Stop();
  9757   00613A  ECD6  F030         	call	_I2C_2_Master_Stop	;wreg free
  9758   00613E  0012               	return		;funcret
  9759   006140                     __end_of_color_writetoaddr:
  9760                           	callstack 0
  9761                           
  9762 ;; *************** function _I2C_2_Master_Write *****************
  9763 ;; Defined at:
  9764 ;;		line 45 in file "i2c.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  data_byte       1    wreg     unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  data_byte       1    1[COMRAM] unsigned char 
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg, status,2, status,0, cstack
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9782 ;;Total ram usage:        1 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; Hardware stack levels required when called: 1
  9785 ;; This function calls:
  9786 ;;		_I2C_2_Master_Idle
  9787 ;; This function is called by:
  9788 ;;		_color_writetoaddr
  9789 ;;		_color_read_lum
  9790 ;;		_color_read_Red
  9791 ;;		_color_read_Green
  9792 ;;		_color_read_Blue
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           
  9796                           	psect	text47
  9797   006196                     __ptext47:
  9798                           	callstack 0
  9799   006196                     _I2C_2_Master_Write:
  9800                           	callstack 27
  9801                           
  9802                           ;incstack = 0
  9803                           ;I2C_2_Master_Write@data_byte stored from wreg
  9804   006196  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  9805   006198                     
  9806                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9807   006198  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  9808   00619C                     
  9809                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9810   00619C  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  9811   0061A0  0012               	return		;funcret
  9812   0061A2                     __end_of_I2C_2_Master_Write:
  9813                           	callstack 0
  9814                           
  9815 ;; *************** function _I2C_2_Master_Stop *****************
  9816 ;; Defined at:
  9817 ;;		line 39 in file "i2c.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, status,0, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used: 1
  9837 ;; Hardware stack levels required when called: 1
  9838 ;; This function calls:
  9839 ;;		_I2C_2_Master_Idle
  9840 ;; This function is called by:
  9841 ;;		_color_writetoaddr
  9842 ;;		_color_read_lum
  9843 ;;		_color_read_Red
  9844 ;;		_color_read_Green
  9845 ;;		_color_read_Blue
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           
  9849                           	psect	text48
  9850   0061AC                     __ptext48:
  9851                           	callstack 0
  9852   0061AC                     _I2C_2_Master_Stop:
  9853                           	callstack 27
  9854   0061AC                     
  9855                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9856   0061AC  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  9857   0061B0                     
  9858                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9859   0061B0  010E               	movlb	14	; () banked
  9860   0061B2  85DA               	bsf	218,2,b	;volatile
  9861   0061B4                     
  9862                           ; BSR set to: 14
  9863   0061B4  0012               	return		;funcret
  9864   0061B6                     __end_of_I2C_2_Master_Stop:
  9865                           	callstack 0
  9866                           
  9867 ;; *************** function _I2C_2_Master_Start *****************
  9868 ;; Defined at:
  9869 ;;		line 27 in file "i2c.c"
  9870 ;; Parameters:    Size  Location     Type
  9871 ;;		None
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;		None
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  1    wreg      void 
  9876 ;; Registers used:
  9877 ;;		wreg, status,2, status,0, cstack
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/0
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used: 1
  9889 ;; Hardware stack levels required when called: 1
  9890 ;; This function calls:
  9891 ;;		_I2C_2_Master_Idle
  9892 ;; This function is called by:
  9893 ;;		_color_writetoaddr
  9894 ;;		_color_read_lum
  9895 ;;		_color_read_Red
  9896 ;;		_color_read_Green
  9897 ;;		_color_read_Blue
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text49
  9902   0061B6                     __ptext49:
  9903                           	callstack 0
  9904   0061B6                     _I2C_2_Master_Start:
  9905                           	callstack 27
  9906   0061B6                     
  9907                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9908   0061B6  EC56  F030         	call	_I2C_2_Master_Idle	;wreg free
  9909   0061BA                     
  9910                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9911   0061BA  010E               	movlb	14	; () banked
  9912   0061BC  81DA               	bsf	218,0,b	;volatile
  9913   0061BE                     
  9914                           ; BSR set to: 14
  9915   0061BE  0012               	return		;funcret
  9916   0061C0                     __end_of_I2C_2_Master_Start:
  9917                           	callstack 0
  9918                           
  9919 ;; *************** function _I2C_2_Master_Idle *****************
  9920 ;; Defined at:
  9921 ;;		line 22 in file "i2c.c"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;		None
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;		None
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  1    wreg      void 
  9928 ;; Registers used:
  9929 ;;		wreg, status,2, status,0
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9939 ;;Total ram usage:        1 bytes
  9940 ;; Hardware stack levels used: 1
  9941 ;; This function calls:
  9942 ;;		Nothing
  9943 ;; This function is called by:
  9944 ;;		_I2C_2_Master_Start
  9945 ;;		_I2C_2_Master_RepStart
  9946 ;;		_I2C_2_Master_Stop
  9947 ;;		_I2C_2_Master_Write
  9948 ;;		_I2C_2_Master_Read
  9949 ;; This function uses a non-reentrant model
  9950 ;;
  9951                           
  9952                           	psect	text50
  9953   0060AC                     __ptext50:
  9954                           	callstack 0
  9955   0060AC                     _I2C_2_Master_Idle:
  9956                           	callstack 27
  9957   0060AC                     l143:
  9958   0060AC  010E               	movlb	14	; () banked
  9959   0060AE  B5D8               	btfsc	216,2,b	;volatile
  9960   0060B0  EF5C  F030         	goto	u4451
  9961   0060B4  EF5E  F030         	goto	u4450
  9962   0060B8                     u4451:
  9963   0060B8  EF56  F030         	goto	l143
  9964   0060BC                     u4450:
  9965   0060BC                     
  9966                           ; BSR set to: 14
  9967   0060BC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  9968   0060C0  0E1F               	movlw	31
  9969   0060C2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  9970   0060C4  A4D8               	btfss	status,2,c
  9971   0060C6  EF67  F030         	goto	u4461
  9972   0060CA  EF69  F030         	goto	u4460
  9973   0060CE                     u4461:
  9974   0060CE  EF56  F030         	goto	l143
  9975   0060D2                     u4460:
  9976   0060D2                     
  9977                           ; BSR set to: 14
  9978   0060D2  0012               	return		;funcret
  9979   0060D4                     __end_of_I2C_2_Master_Idle:
  9980                           	callstack 0
  9981                           
  9982 ;; *************** function _I2C_2_Master_Init *****************
  9983 ;; Defined at:
  9984 ;;		line 4 in file "i2c.c"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;		None
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;		None
  9989 ;; Return value:  Size  Location     Type
  9990 ;;                  1    wreg      void 
  9991 ;; Registers used:
  9992 ;;		wreg, status,2
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10002 ;;Total ram usage:        0 bytes
 10003 ;; Hardware stack levels used: 1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_color_click_init
 10008 ;;		_main
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           	psect	text51
 10013   006082                     __ptext51:
 10014                           	callstack 0
 10015   006082                     _I2C_2_Master_Init:
 10016                           	callstack 29
 10017   006082                     
 10018                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 10019   006082  010E               	movlb	14	; () banked
 10020   006084  51D9               	movf	217,w,b	;volatile
 10021   006086  0BF0               	andlw	-16
 10022   006088  0908               	iorlw	8
 10023   00608A  6FD9               	movwf	217,b	;volatile
 10024   00608C                     
 10025                           ; BSR set to: 14
 10026                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 10027   00608C  8BD9               	bsf	217,5,b	;volatile
 10028                           
 10029                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 10030   00608E  0E9F               	movlw	159
 10031   006090  6FD6               	movwf	214,b	;volatile
 10032   006092                     
 10033                           ; BSR set to: 14
 10034                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 10035   006092  8A84               	bsf	132,5,c	;volatile
 10036   006094                     
 10037                           ; BSR set to: 14
 10038                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 10039   006094  8C84               	bsf	132,6,c	;volatile
 10040   006096                     
 10041                           ; BSR set to: 14
 10042                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 10043   006096  9BA7               	bcf	167,5,b	;volatile
 10044   006098                     
 10045                           ; BSR set to: 14
 10046                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 10047   006098  9DA7               	bcf	167,6,b	;volatile
 10048                           
 10049                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 10050   00609A  0E1D               	movlw	29
 10051   00609C  6F1D               	movwf	29,b	;volatile
 10052                           
 10053                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 10054   00609E  0E1E               	movlw	30
 10055   0060A0  6F1C               	movwf	28,b	;volatile
 10056                           
 10057                           ;i2c.c: 18:   RD5PPS=0x1C;
 10058   0060A2  0E1C               	movlw	28
 10059   0060A4  6F6F               	movwf	111,b	;volatile
 10060                           
 10061                           ;i2c.c: 19:   RD6PPS=0x1B;
 10062   0060A6  0E1B               	movlw	27
 10063   0060A8  6F70               	movwf	112,b	;volatile
 10064   0060AA                     
 10065                           ; BSR set to: 14
 10066   0060AA  0012               	return		;funcret
 10067   0060AC                     __end_of_I2C_2_Master_Init:
 10068                           	callstack 0
 10069                           
 10070 ;; *************** function _YellowMove *****************
 10071 ;; Defined at:
 10072 ;;		line 288 in file "dc_motor.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10075 ;;		 -> motorL(9), 
 10076 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10077 ;;		 -> motorR(9), 
 10078 ;; Auto vars:     Size  Location     Type
 10079 ;;		None
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  1    wreg      void 
 10082 ;; Registers used:
 10083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10093 ;;Total ram usage:        4 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; Hardware stack levels required when called: 4
 10096 ;; This function calls:
 10097 ;;		_reverseDetect
 10098 ;;		_reverseOneBlock
 10099 ;;		_turnRight45
 10100 ;; This function is called by:
 10101 ;;		_main
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text52
 10106   005AC4                     __ptext52:
 10107                           	callstack 0
 10108   005AC4                     _YellowMove:
 10109                           	callstack 26
 10110   005AC4                     
 10111                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
 10112   005AC4  0EC7               	movlw	low _motorL
 10113   005AC6  6E1A               	movwf	reverseDetect@mL^0,c
 10114   005AC8  0E01               	movlw	high _motorL
 10115   005ACA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10116   005ACC  0EBE               	movlw	low _motorR
 10117   005ACE  6E1C               	movwf	reverseDetect@mR^0,c
 10118   005AD0  0E01               	movlw	high _motorR
 10119   005AD2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10120   005AD4  EC39  F02C         	call	_reverseDetect	;wreg free
 10121                           
 10122                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
 10123   005AD8  0EC7               	movlw	low _motorL
 10124   005ADA  6E1A               	movwf	reverseOneBlock@mL^0,c
 10125   005ADC  0E01               	movlw	high _motorL
 10126   005ADE  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10127   005AE0  0EBE               	movlw	low _motorR
 10128   005AE2  6E1C               	movwf	reverseOneBlock@mR^0,c
 10129   005AE4  0E01               	movlw	high _motorR
 10130   005AE6  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10131   005AE8  EC0C  F02C         	call	_reverseOneBlock	;wreg free
 10132                           
 10133                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
 10134   005AEC  0EC7               	movlw	low _motorL
 10135   005AEE  6E1A               	movwf	turnRight45@mL^0,c
 10136   005AF0  0E01               	movlw	high _motorL
 10137   005AF2  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10138   005AF4  0EBE               	movlw	low _motorR
 10139   005AF6  6E1C               	movwf	turnRight45@mR^0,c
 10140   005AF8  0E01               	movlw	high _motorR
 10141   005AFA  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10142   005AFC  EC7C  F02E         	call	_turnRight45	;wreg free
 10143                           
 10144                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
 10145   005B00  0EC7               	movlw	low _motorL
 10146   005B02  6E1A               	movwf	turnRight45@mL^0,c
 10147   005B04  0E01               	movlw	high _motorL
 10148   005B06  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10149   005B08  0EBE               	movlw	low _motorR
 10150   005B0A  6E1C               	movwf	turnRight45@mR^0,c
 10151   005B0C  0E01               	movlw	high _motorR
 10152   005B0E  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10153   005B10  EC7C  F02E         	call	_turnRight45	;wreg free
 10154   005B14  0012               	return		;funcret
 10155   005B16                     __end_of_YellowMove:
 10156                           	callstack 0
 10157                           
 10158 ;; *************** function _turnRight45 *****************
 10159 ;; Defined at:
 10160 ;;		line 211 in file "dc_motor.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10163 ;;		 -> motorL(9), 
 10164 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10165 ;;		 -> motorR(9), 
 10166 ;; Auto vars:     Size  Location     Type
 10167 ;;		None
 10168 ;; Return value:  Size  Location     Type
 10169 ;;                  1    wreg      void 
 10170 ;; Registers used:
 10171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10172 ;; Tracked objects:
 10173 ;;		On entry : 0/0
 10174 ;;		On exit  : 0/0
 10175 ;;		Unchanged: 0/0
 10176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10180 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10181 ;;Total ram usage:        6 bytes
 10182 ;; Hardware stack levels used: 1
 10183 ;; Hardware stack levels required when called: 3
 10184 ;; This function calls:
 10185 ;;		_TurnDelay
 10186 ;;		_stop
 10187 ;;		_turnRight
 10188 ;; This function is called by:
 10189 ;;		_RedMove
 10190 ;;		_BlueMove
 10191 ;;		_YellowMove
 10192 ;;		_OrangeMove
 10193 ;;		_ReverseYellow
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           	psect	text53
 10198   005CF8                     __ptext53:
 10199                           	callstack 0
 10200   005CF8                     _turnRight45:
 10201                           	callstack 25
 10202   005CF8                     
 10203                           ;dc_motor.c: 212:     turnRight(mL,mR);
 10204   005CF8  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10205   005CFC  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10206   005D00  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10207   005D04  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10208   005D08  ECD3  F028         	call	_turnRight	;wreg free
 10209   005D0C                     
 10210                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
 10211   005D0C  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10212   005D10  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10213   005D14  EC0E  F030         	call	_TurnDelay	;wreg free
 10214   005D18                     
 10215                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
 10216   005D18  0EC7               	movlw	low _motorL
 10217   005D1A  6E14               	movwf	stop@mL^0,c
 10218   005D1C  0E01               	movlw	high _motorL
 10219   005D1E  6E15               	movwf	(stop@mL+1)^0,c
 10220   005D20  0EBE               	movlw	low _motorR
 10221   005D22  6E16               	movwf	stop@mR^0,c
 10222   005D24  0E01               	movlw	high _motorR
 10223   005D26  6E17               	movwf	(stop@mR+1)^0,c
 10224   005D28  EC94  F02A         	call	_stop	;wreg free
 10225   005D2C                     
 10226                           ;dc_motor.c: 215:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10227   005D2C  0E05               	movlw	5
 10228   005D2E  6E1F               	movwf	(??_turnRight45+1)^0,c
 10229   005D30  0E0F               	movlw	15
 10230   005D32  6E1E               	movwf	??_turnRight45^0,c
 10231   005D34  0EF1               	movlw	241
 10232   005D36                     u6187:
 10233   005D36  2EE8               	decfsz	wreg,f,c
 10234   005D38  D7FE               	bra	u6187
 10235   005D3A  2E1E               	decfsz	??_turnRight45^0,f,c
 10236   005D3C  D7FC               	bra	u6187
 10237   005D3E  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10238   005D40  D7FA               	bra	u6187
 10239   005D42  F000               	nop	
 10240   005D44  0012               	return		;funcret
 10241   005D46                     __end_of_turnRight45:
 10242                           	callstack 0
 10243                           
 10244 ;; *************** function _turnRight *****************
 10245 ;; Defined at:
 10246 ;;		line 129 in file "dc_motor.c"
 10247 ;; Parameters:    Size  Location     Type
 10248 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10249 ;;		 -> motorL(9), 
 10250 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10251 ;;		 -> motorR(9), 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10266 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10267 ;;Total ram usage:        6 bytes
 10268 ;; Hardware stack levels used: 1
 10269 ;; Hardware stack levels required when called: 2
 10270 ;; This function calls:
 10271 ;;		_setMotorPWM
 10272 ;; This function is called by:
 10273 ;;		_turnRight45
 10274 ;; This function uses a non-reentrant model
 10275 ;;
 10276                           
 10277                           	psect	text54
 10278   0051A6                     __ptext54:
 10279                           	callstack 0
 10280   0051A6                     _turnRight:
 10281                           	callstack 25
 10282   0051A6                     
 10283                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
 10284   0051A6  EE20 F001          	lfsr	2,1
 10285   0051AA  5014               	movf	turnRight@mL^0,w,c
 10286   0051AC  26D9               	addwf	fsr2l,f,c
 10287   0051AE  5015               	movf	(turnRight@mL+1)^0,w,c
 10288   0051B0  22DA               	addwfc	fsr2h,f,c
 10289   0051B2  0E01               	movlw	1
 10290   0051B4  6EDF               	movwf	indf2,c
 10291                           
 10292                           ;dc_motor.c: 132:     mR->direction =0;
 10293   0051B6  EE20 F001          	lfsr	2,1
 10294   0051BA  5016               	movf	turnRight@mR^0,w,c
 10295   0051BC  26D9               	addwf	fsr2l,f,c
 10296   0051BE  5017               	movf	(turnRight@mR+1)^0,w,c
 10297   0051C0  22DA               	addwfc	fsr2h,f,c
 10298   0051C2  0E00               	movlw	0
 10299   0051C4  6EDF               	movwf	indf2,c
 10300                           
 10301                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
 10302   0051C6  EF09  F029         	goto	l4729
 10303   0051CA                     l4721:
 10304                           
 10305                           ;dc_motor.c: 136:         mL->power+=10;
 10306   0051CA  C014  FFD9         	movff	turnRight@mL,fsr2l
 10307   0051CE  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10308   0051D2  0E0A               	movlw	10
 10309   0051D4  26DF               	addwf	indf2,f,c
 10310                           
 10311                           ;dc_motor.c: 137:         mR->power+=10;
 10312   0051D6  C016  FFD9         	movff	turnRight@mR,fsr2l
 10313   0051DA  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10314   0051DE  0E0A               	movlw	10
 10315   0051E0  26DF               	addwf	indf2,f,c
 10316   0051E2                     
 10317                           ;dc_motor.c: 139:         setMotorPWM(mL);
 10318   0051E2  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10319   0051E6  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10320   0051EA  EC22  F024         	call	_setMotorPWM	;wreg free
 10321   0051EE                     
 10322                           ;dc_motor.c: 140:         setMotorPWM(mR);
 10323   0051EE  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10324   0051F2  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10325   0051F6  EC22  F024         	call	_setMotorPWM	;wreg free
 10326   0051FA                     
 10327                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10328   0051FA  0E02               	movlw	2
 10329   0051FC  6E19               	movwf	(??_turnRight+1)^0,c
 10330   0051FE  0EA0               	movlw	160
 10331   005200  6E18               	movwf	??_turnRight^0,c
 10332   005202  0E92               	movlw	146
 10333   005204                     u6197:
 10334   005204  2EE8               	decfsz	wreg,f,c
 10335   005206  D7FE               	bra	u6197
 10336   005208  2E18               	decfsz	??_turnRight^0,f,c
 10337   00520A  D7FC               	bra	u6197
 10338   00520C  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10339   00520E  D7FA               	bra	u6197
 10340   005210  D000               	nop2	
 10341   005212                     l4729:
 10342   005212  C014  FFD9         	movff	turnRight@mL,fsr2l
 10343   005216  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10344   00521A  0E1E               	movlw	30
 10345   00521C  60DF               	cpfslt	indf2,c
 10346   00521E  EF13  F029         	goto	u4531
 10347   005222  EF15  F029         	goto	u4530
 10348   005226                     u4531:
 10349   005226  EF21  F029         	goto	l512
 10350   00522A                     u4530:
 10351   00522A  C016  FFD9         	movff	turnRight@mR,fsr2l
 10352   00522E  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10353   005232  0E1D               	movlw	29
 10354   005234  64DF               	cpfsgt	indf2,c
 10355   005236  EF1F  F029         	goto	u4541
 10356   00523A  EF21  F029         	goto	u4540
 10357   00523E                     u4541:
 10358   00523E  EFE5  F028         	goto	l4721
 10359   005242                     u4540:
 10360   005242                     l512:
 10361   005242  0012               	return		;funcret
 10362   005244                     __end_of_turnRight:
 10363                           	callstack 0
 10364                           
 10365 ;; *************** function _Timer0_init *****************
 10366 ;; Defined at:
 10367 ;;		line 8 in file "timers.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;		None
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used: 1
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_main
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           	psect	text55
 10395   006140                     __ptext55:
 10396                           	callstack 0
 10397   006140                     _Timer0_init:
 10398                           	callstack 30
 10399   006140                     
 10400                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 10401   006140  50D6               	movf	214,w,c	;volatile
 10402   006142  0B1F               	andlw	-225
 10403   006144  0940               	iorlw	64
 10404   006146  6ED6               	movwf	214,c	;volatile
 10405   006148                     
 10406                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 10407   006148  88D6               	bsf	214,4,c	;volatile
 10408                           
 10409                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
 10410   00614A  50D6               	movf	214,w,c	;volatile
 10411   00614C  0BF0               	andlw	-16
 10412   00614E  090E               	iorlw	14
 10413   006150  6ED6               	movwf	214,c	;volatile
 10414   006152                     
 10415                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 10416   006152  88D5               	bsf	213,4,c	;volatile
 10417                           
 10418                           ;timers.c: 16:     TMR0H=0;
 10419   006154  0E00               	movlw	0
 10420   006156  6ED4               	movwf	212,c	;volatile
 10421                           
 10422                           ;timers.c: 17:     TMR0L=0;
 10423   006158  0E00               	movlw	0
 10424   00615A  6ED3               	movwf	211,c	;volatile
 10425   00615C                     
 10426                           ;timers.c: 18:     T0CON0bits.T0EN=1;
 10427   00615C  8ED5               	bsf	213,7,c	;volatile
 10428   00615E  0012               	return		;funcret
 10429   006160                     __end_of_Timer0_init:
 10430                           	callstack 0
 10431                           
 10432 ;; *************** function _RetryMove *****************
 10433 ;; Defined at:
 10434 ;;		line 325 in file "dc_motor.c"
 10435 ;; Parameters:    Size  Location     Type
 10436 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10437 ;;		 -> motorL(9), 
 10438 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10439 ;;		 -> motorR(9), 
 10440 ;; Auto vars:     Size  Location     Type
 10441 ;;		None
 10442 ;; Return value:  Size  Location     Type
 10443 ;;                  1    wreg      void 
 10444 ;; Registers used:
 10445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10446 ;; Tracked objects:
 10447 ;;		On entry : 0/0
 10448 ;;		On exit  : 0/0
 10449 ;;		Unchanged: 0/0
 10450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10451 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10454 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10455 ;;Total ram usage:        6 bytes
 10456 ;; Hardware stack levels used: 1
 10457 ;; Hardware stack levels required when called: 3
 10458 ;; This function calls:
 10459 ;;		_fullSpeedAhead
 10460 ;;		_fullSpeedBack
 10461 ;;		_stop
 10462 ;; This function is called by:
 10463 ;;		_main
 10464 ;; This function uses a non-reentrant model
 10465 ;;
 10466                           
 10467                           	psect	text56
 10468   0054A6                     __ptext56:
 10469                           	callstack 0
 10470   0054A6                     _RetryMove:
 10471                           	callstack 27
 10472   0054A6                     
 10473                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
 10474   0054A6  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
 10475   0054AA  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
 10476   0054AE  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
 10477   0054B2  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
 10478   0054B6  EC71  F029         	call	_fullSpeedBack	;wreg free
 10479   0054BA                     
 10480                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10481   0054BA  0E29               	movlw	41
 10482   0054BC  6E1F               	movwf	(??_RetryMove+1)^0,c
 10483   0054BE  0E96               	movlw	150
 10484   0054C0  6E1E               	movwf	??_RetryMove^0,c
 10485   0054C2  0E7F               	movlw	127
 10486   0054C4                     u6207:
 10487   0054C4  2EE8               	decfsz	wreg,f,c
 10488   0054C6  D7FE               	bra	u6207
 10489   0054C8  2E1E               	decfsz	??_RetryMove^0,f,c
 10490   0054CA  D7FC               	bra	u6207
 10491   0054CC  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10492   0054CE  D7FA               	bra	u6207
 10493   0054D0  F000               	nop	
 10494   0054D2                     
 10495                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
 10496   0054D2  0EC7               	movlw	low _motorL
 10497   0054D4  6E14               	movwf	stop@mL^0,c
 10498   0054D6  0E01               	movlw	high _motorL
 10499   0054D8  6E15               	movwf	(stop@mL+1)^0,c
 10500   0054DA  0EBE               	movlw	low _motorR
 10501   0054DC  6E16               	movwf	stop@mR^0,c
 10502   0054DE  0E01               	movlw	high _motorR
 10503   0054E0  6E17               	movwf	(stop@mR+1)^0,c
 10504   0054E2  EC94  F02A         	call	_stop	;wreg free
 10505   0054E6                     
 10506                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
 10507   0054E6  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
 10508   0054EA  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
 10509   0054EE  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
 10510   0054F2  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
 10511   0054F6  ECC0  F029         	call	_fullSpeedAhead	;wreg free
 10512   0054FA                     
 10513                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
 10514   0054FA  0E29               	movlw	41
 10515   0054FC  6E1F               	movwf	(??_RetryMove+1)^0,c
 10516   0054FE  0E96               	movlw	150
 10517   005500  6E1E               	movwf	??_RetryMove^0,c
 10518   005502  0E7F               	movlw	127
 10519   005504                     u6217:
 10520   005504  2EE8               	decfsz	wreg,f,c
 10521   005506  D7FE               	bra	u6217
 10522   005508  2E1E               	decfsz	??_RetryMove^0,f,c
 10523   00550A  D7FC               	bra	u6217
 10524   00550C  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
 10525   00550E  D7FA               	bra	u6217
 10526   005510  F000               	nop	
 10527                           
 10528                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
 10529   005512  0EC7               	movlw	low _motorL
 10530   005514  6E14               	movwf	stop@mL^0,c
 10531   005516  0E01               	movlw	high _motorL
 10532   005518  6E15               	movwf	(stop@mL+1)^0,c
 10533   00551A  0EBE               	movlw	low _motorR
 10534   00551C  6E16               	movwf	stop@mR^0,c
 10535   00551E  0E01               	movlw	high _motorR
 10536   005520  6E17               	movwf	(stop@mR+1)^0,c
 10537   005522  EC94  F02A         	call	_stop	;wreg free
 10538   005526  0012               	return		;funcret
 10539   005528                     __end_of_RetryMove:
 10540                           	callstack 0
 10541                           
 10542 ;; *************** function _PinkMove *****************
 10543 ;; Defined at:
 10544 ;;		line 298 in file "dc_motor.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10547 ;;		 -> motorL(9), 
 10548 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10549 ;;		 -> motorR(9), 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;Total ram usage:        4 bytes
 10566 ;; Hardware stack levels used: 1
 10567 ;; Hardware stack levels required when called: 4
 10568 ;; This function calls:
 10569 ;;		_reverseDetect
 10570 ;;		_reverseOneBlock
 10571 ;;		_turnLeft45
 10572 ;; This function is called by:
 10573 ;;		_main
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text57
 10578   005B16                     __ptext57:
 10579                           	callstack 0
 10580   005B16                     _PinkMove:
 10581                           	callstack 26
 10582   005B16                     
 10583                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
 10584   005B16  0EC7               	movlw	low _motorL
 10585   005B18  6E1A               	movwf	reverseDetect@mL^0,c
 10586   005B1A  0E01               	movlw	high _motorL
 10587   005B1C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10588   005B1E  0EBE               	movlw	low _motorR
 10589   005B20  6E1C               	movwf	reverseDetect@mR^0,c
 10590   005B22  0E01               	movlw	high _motorR
 10591   005B24  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10592   005B26  EC39  F02C         	call	_reverseDetect	;wreg free
 10593                           
 10594                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
 10595   005B2A  0EC7               	movlw	low _motorL
 10596   005B2C  6E1A               	movwf	reverseOneBlock@mL^0,c
 10597   005B2E  0E01               	movlw	high _motorL
 10598   005B30  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
 10599   005B32  0EBE               	movlw	low _motorR
 10600   005B34  6E1C               	movwf	reverseOneBlock@mR^0,c
 10601   005B36  0E01               	movlw	high _motorR
 10602   005B38  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
 10603   005B3A  EC0C  F02C         	call	_reverseOneBlock	;wreg free
 10604                           
 10605                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
 10606   005B3E  0EC7               	movlw	low _motorL
 10607   005B40  6E1A               	movwf	turnLeft45@mL^0,c
 10608   005B42  0E01               	movlw	high _motorL
 10609   005B44  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10610   005B46  0EBE               	movlw	low _motorR
 10611   005B48  6E1C               	movwf	turnLeft45@mR^0,c
 10612   005B4A  0E01               	movlw	high _motorR
 10613   005B4C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10614   005B4E  ECA3  F02E         	call	_turnLeft45	;wreg free
 10615                           
 10616                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
 10617   005B52  0EC7               	movlw	low _motorL
 10618   005B54  6E1A               	movwf	turnLeft45@mL^0,c
 10619   005B56  0E01               	movlw	high _motorL
 10620   005B58  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10621   005B5A  0EBE               	movlw	low _motorR
 10622   005B5C  6E1C               	movwf	turnLeft45@mR^0,c
 10623   005B5E  0E01               	movlw	high _motorR
 10624   005B60  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10625   005B62  ECA3  F02E         	call	_turnLeft45	;wreg free
 10626   005B66  0012               	return		;funcret
 10627   005B68                     __end_of_PinkMove:
 10628                           	callstack 0
 10629                           
 10630 ;; *************** function _turnLeft45 *****************
 10631 ;; Defined at:
 10632 ;;		line 218 in file "dc_motor.c"
 10633 ;; Parameters:    Size  Location     Type
 10634 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10635 ;;		 -> motorL(9), 
 10636 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10637 ;;		 -> motorR(9), 
 10638 ;; Auto vars:     Size  Location     Type
 10639 ;;		None
 10640 ;; Return value:  Size  Location     Type
 10641 ;;                  1    wreg      void 
 10642 ;; Registers used:
 10643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10653 ;;Total ram usage:        6 bytes
 10654 ;; Hardware stack levels used: 1
 10655 ;; Hardware stack levels required when called: 3
 10656 ;; This function calls:
 10657 ;;		_TurnDelay
 10658 ;;		_stop
 10659 ;;		_turnLeft
 10660 ;; This function is called by:
 10661 ;;		_GreenMove
 10662 ;;		_PinkMove
 10663 ;;		_LightBlueMove
 10664 ;;		_ReversePink
 10665 ;;		_turnCalibration
 10666 ;; This function uses a non-reentrant model
 10667 ;;
 10668                           
 10669                           	psect	text58
 10670   005D46                     __ptext58:
 10671                           	callstack 0
 10672   005D46                     _turnLeft45:
 10673                           	callstack 26
 10674   005D46                     
 10675                           ;dc_motor.c: 219:     turnLeft(mL,mR);
 10676   005D46  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10677   005D4A  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10678   005D4E  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10679   005D52  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10680   005D56  EC22  F029         	call	_turnLeft	;wreg free
 10681   005D5A                     
 10682                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
 10683   005D5A  C0F9  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10684   005D5E  C0FA  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10685   005D62  EC0E  F030         	call	_TurnDelay	;wreg free
 10686   005D66                     
 10687                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
 10688   005D66  0EC7               	movlw	low _motorL
 10689   005D68  6E14               	movwf	stop@mL^0,c
 10690   005D6A  0E01               	movlw	high _motorL
 10691   005D6C  6E15               	movwf	(stop@mL+1)^0,c
 10692   005D6E  0EBE               	movlw	low _motorR
 10693   005D70  6E16               	movwf	stop@mR^0,c
 10694   005D72  0E01               	movlw	high _motorR
 10695   005D74  6E17               	movwf	(stop@mR+1)^0,c
 10696   005D76  EC94  F02A         	call	_stop	;wreg free
 10697   005D7A                     
 10698                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10699   005D7A  0E05               	movlw	5
 10700   005D7C  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10701   005D7E  0E0F               	movlw	15
 10702   005D80  6E1E               	movwf	??_turnLeft45^0,c
 10703   005D82  0EF1               	movlw	241
 10704   005D84                     u6227:
 10705   005D84  2EE8               	decfsz	wreg,f,c
 10706   005D86  D7FE               	bra	u6227
 10707   005D88  2E1E               	decfsz	??_turnLeft45^0,f,c
 10708   005D8A  D7FC               	bra	u6227
 10709   005D8C  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10710   005D8E  D7FA               	bra	u6227
 10711   005D90  F000               	nop	
 10712   005D92  0012               	return		;funcret
 10713   005D94                     __end_of_turnLeft45:
 10714                           	callstack 0
 10715                           
 10716 ;; *************** function _turnLeft *****************
 10717 ;; Defined at:
 10718 ;;		line 111 in file "dc_motor.c"
 10719 ;; Parameters:    Size  Location     Type
 10720 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10721 ;;		 -> motorL(9), 
 10722 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10723 ;;		 -> motorR(9), 
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;		None
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      void 
 10728 ;; Registers used:
 10729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10737 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10738 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;Total ram usage:        6 bytes
 10740 ;; Hardware stack levels used: 1
 10741 ;; Hardware stack levels required when called: 2
 10742 ;; This function calls:
 10743 ;;		_setMotorPWM
 10744 ;; This function is called by:
 10745 ;;		_turnLeft45
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text59
 10750   005244                     __ptext59:
 10751                           	callstack 0
 10752   005244                     _turnLeft:
 10753                           	callstack 26
 10754   005244                     
 10755                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
 10756   005244  EE20 F001          	lfsr	2,1
 10757   005248  5014               	movf	turnLeft@mL^0,w,c
 10758   00524A  26D9               	addwf	fsr2l,f,c
 10759   00524C  5015               	movf	(turnLeft@mL+1)^0,w,c
 10760   00524E  22DA               	addwfc	fsr2h,f,c
 10761   005250  0E00               	movlw	0
 10762   005252  6EDF               	movwf	indf2,c
 10763                           
 10764                           ;dc_motor.c: 114:     mR->direction =1;
 10765   005254  EE20 F001          	lfsr	2,1
 10766   005258  5016               	movf	turnLeft@mR^0,w,c
 10767   00525A  26D9               	addwf	fsr2l,f,c
 10768   00525C  5017               	movf	(turnLeft@mR+1)^0,w,c
 10769   00525E  22DA               	addwfc	fsr2h,f,c
 10770   005260  0E01               	movlw	1
 10771   005262  6EDF               	movwf	indf2,c
 10772                           
 10773                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
 10774   005264  EF58  F029         	goto	l4715
 10775   005268                     l4707:
 10776                           
 10777                           ;dc_motor.c: 118:         mL->power+=10;
 10778   005268  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10779   00526C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10780   005270  0E0A               	movlw	10
 10781   005272  26DF               	addwf	indf2,f,c
 10782                           
 10783                           ;dc_motor.c: 119:         mR->power+=10;
 10784   005274  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10785   005278  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10786   00527C  0E0A               	movlw	10
 10787   00527E  26DF               	addwf	indf2,f,c
 10788   005280                     
 10789                           ;dc_motor.c: 121:         setMotorPWM(mL);
 10790   005280  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10791   005284  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10792   005288  EC22  F024         	call	_setMotorPWM	;wreg free
 10793   00528C                     
 10794                           ;dc_motor.c: 122:         setMotorPWM(mR);
 10795   00528C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10796   005290  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10797   005294  EC22  F024         	call	_setMotorPWM	;wreg free
 10798   005298                     
 10799                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10800   005298  0E02               	movlw	2
 10801   00529A  6E19               	movwf	(??_turnLeft+1)^0,c
 10802   00529C  0EA0               	movlw	160
 10803   00529E  6E18               	movwf	??_turnLeft^0,c
 10804   0052A0  0E92               	movlw	146
 10805   0052A2                     u6237:
 10806   0052A2  2EE8               	decfsz	wreg,f,c
 10807   0052A4  D7FE               	bra	u6237
 10808   0052A6  2E18               	decfsz	??_turnLeft^0,f,c
 10809   0052A8  D7FC               	bra	u6237
 10810   0052AA  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10811   0052AC  D7FA               	bra	u6237
 10812   0052AE  D000               	nop2	
 10813   0052B0                     l4715:
 10814   0052B0  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10815   0052B4  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10816   0052B8  0E1E               	movlw	30
 10817   0052BA  60DF               	cpfslt	indf2,c
 10818   0052BC  EF62  F029         	goto	u4511
 10819   0052C0  EF64  F029         	goto	u4510
 10820   0052C4                     u4511:
 10821   0052C4  EF70  F029         	goto	l504
 10822   0052C8                     u4510:
 10823   0052C8  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10824   0052CC  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10825   0052D0  0E1D               	movlw	29
 10826   0052D2  64DF               	cpfsgt	indf2,c
 10827   0052D4  EF6E  F029         	goto	u4521
 10828   0052D8  EF70  F029         	goto	u4520
 10829   0052DC                     u4521:
 10830   0052DC  EF34  F029         	goto	l4707
 10831   0052E0                     u4520:
 10832   0052E0                     l504:
 10833   0052E0  0012               	return		;funcret
 10834   0052E2                     __end_of_turnLeft:
 10835                           	callstack 0
 10836                           
 10837 ;; *************** function _TurnDelay *****************
 10838 ;; Defined at:
 10839 ;;		line 204 in file "dc_motor.c"
 10840 ;; Parameters:    Size  Location     Type
 10841 ;;  Turn45Delay     2    0[COMRAM] int 
 10842 ;; Auto vars:     Size  Location     Type
 10843 ;;		None
 10844 ;; Return value:  Size  Location     Type
 10845 ;;                  1    wreg      void 
 10846 ;; Registers used:
 10847 ;;		wreg, status,2, status,0
 10848 ;; Tracked objects:
 10849 ;;		On entry : 0/0
 10850 ;;		On exit  : 0/0
 10851 ;;		Unchanged: 0/0
 10852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10857 ;;Total ram usage:        3 bytes
 10858 ;; Hardware stack levels used: 1
 10859 ;; This function calls:
 10860 ;;		Nothing
 10861 ;; This function is called by:
 10862 ;;		_turnRight45
 10863 ;;		_turnLeft45
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           	psect	text60
 10868   00601C                     __ptext60:
 10869                           	callstack 0
 10870   00601C                     _TurnDelay:
 10871                           	callstack 28
 10872   00601C                     
 10873                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10874   00601C  EF1B  F030         	goto	l539
 10875   006020                     l4749:
 10876                           
 10877                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10878   006020  0E15               	movlw	21
 10879   006022  6E03               	movwf	??_TurnDelay^0,c
 10880   006024  0EC6               	movlw	198
 10881   006026                     u6247:
 10882   006026  2EE8               	decfsz	wreg,f,c
 10883   006028  D7FE               	bra	u6247
 10884   00602A  2E03               	decfsz	??_TurnDelay^0,f,c
 10885   00602C  D7FC               	bra	u6247
 10886   00602E  D000               	nop2	
 10887   006030                     
 10888                           ;dc_motor.c: 207:         Turn45Delay--;
 10889   006030  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10890   006032  A0D8               	btfss	status,0,c
 10891   006034  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10892   006036                     l539:
 10893                           
 10894                           ;dc_motor.c: 205:     while (Turn45Delay>0){
 10895   006036  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10896   006038  EF28  F030         	goto	u4570
 10897   00603C  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10898   00603E  E106               	bnz	u4571
 10899   006040  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10900   006042  B0D8               	btfsc	status,0,c
 10901   006044  EF26  F030         	goto	u4571
 10902   006048  EF28  F030         	goto	u4570
 10903   00604C                     u4571:
 10904   00604C  EF10  F030         	goto	l4749
 10905   006050                     u4570:
 10906   006050  0012               	return		;funcret
 10907   006052                     __end_of_TurnDelay:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _reverseOneBlock *****************
 10911 ;; Defined at:
 10912 ;;		line 232 in file "dc_motor.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10915 ;;		 -> motorL(9), 
 10916 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10917 ;;		 -> motorR(9), 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;		None
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  1    wreg      void 
 10922 ;; Registers used:
 10923 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10929 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10931 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10932 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10933 ;;Total ram usage:        6 bytes
 10934 ;; Hardware stack levels used: 1
 10935 ;; Hardware stack levels required when called: 3
 10936 ;; This function calls:
 10937 ;;		_fullSpeedBack
 10938 ;;		_stop
 10939 ;; This function is called by:
 10940 ;;		_YellowMove
 10941 ;;		_PinkMove
 10942 ;; This function uses a non-reentrant model
 10943 ;;
 10944                           
 10945                           	psect	text61
 10946   005818                     __ptext61:
 10947                           	callstack 0
 10948   005818                     _reverseOneBlock:
 10949                           	callstack 26
 10950   005818                     
 10951                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
 10952   005818  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
 10953   00581C  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
 10954   005820  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
 10955   005824  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
 10956   005828  EC71  F029         	call	_fullSpeedBack	;wreg free
 10957   00582C                     
 10958                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
 10959   00582C  0EA3               	movlw	163
 10960   00582E  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10961   005830  0E57               	movlw	87
 10962   005832  6E1E               	movwf	??_reverseOneBlock^0,c
 10963   005834  0E02               	movlw	2
 10964   005836                     u6257:
 10965   005836  2EE8               	decfsz	wreg,f,c
 10966   005838  D7FE               	bra	u6257
 10967   00583A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10968   00583C  D7FC               	bra	u6257
 10969   00583E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10970   005840  D7FA               	bra	u6257
 10971   005842  D000               	nop2	
 10972   005844                     
 10973                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
 10974   005844  0EC7               	movlw	low _motorL
 10975   005846  6E14               	movwf	stop@mL^0,c
 10976   005848  0E01               	movlw	high _motorL
 10977   00584A  6E15               	movwf	(stop@mL+1)^0,c
 10978   00584C  0EBE               	movlw	low _motorR
 10979   00584E  6E16               	movwf	stop@mR^0,c
 10980   005850  0E01               	movlw	high _motorR
 10981   005852  6E17               	movwf	(stop@mR+1)^0,c
 10982   005854  EC94  F02A         	call	_stop	;wreg free
 10983                           
 10984                           ;dc_motor.c: 236:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10985   005858  0E05               	movlw	5
 10986   00585A  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
 10987   00585C  0E0F               	movlw	15
 10988   00585E  6E1E               	movwf	??_reverseOneBlock^0,c
 10989   005860  0EF1               	movlw	241
 10990   005862                     u6267:
 10991   005862  2EE8               	decfsz	wreg,f,c
 10992   005864  D7FE               	bra	u6267
 10993   005866  2E1E               	decfsz	??_reverseOneBlock^0,f,c
 10994   005868  D7FC               	bra	u6267
 10995   00586A  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
 10996   00586C  D7FA               	bra	u6267
 10997   00586E  F000               	nop	
 10998   005870  0012               	return		;funcret
 10999   005872                     __end_of_reverseOneBlock:
 11000                           	callstack 0
 11001                           
 11002 ;; *************** function _reverseDetect *****************
 11003 ;; Defined at:
 11004 ;;		line 225 in file "dc_motor.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11007 ;;		 -> motorL(9), 
 11008 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11009 ;;		 -> motorR(9), 
 11010 ;; Auto vars:     Size  Location     Type
 11011 ;;		None
 11012 ;; Return value:  Size  Location     Type
 11013 ;;                  1    wreg      void 
 11014 ;; Registers used:
 11015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11016 ;; Tracked objects:
 11017 ;;		On entry : 0/0
 11018 ;;		On exit  : 0/0
 11019 ;;		Unchanged: 0/0
 11020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11024 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11025 ;;Total ram usage:        6 bytes
 11026 ;; Hardware stack levels used: 1
 11027 ;; Hardware stack levels required when called: 3
 11028 ;; This function calls:
 11029 ;;		_fullSpeedBack
 11030 ;;		_stop
 11031 ;; This function is called by:
 11032 ;;		_RedMove
 11033 ;;		_GreenMove
 11034 ;;		_BlueMove
 11035 ;;		_YellowMove
 11036 ;;		_PinkMove
 11037 ;;		_OrangeMove
 11038 ;;		_LightBlueMove
 11039 ;;		_ReverseYellow
 11040 ;;		_ReversePink
 11041 ;;		_go_Home
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           	psect	text62
 11046   005872                     __ptext62:
 11047                           	callstack 0
 11048   005872                     _reverseDetect:
 11049                           	callstack 26
 11050   005872                     
 11051                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
 11052   005872  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 11053   005876  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 11054   00587A  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 11055   00587E  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 11056   005882  EC71  F029         	call	_fullSpeedBack	;wreg free
 11057   005886                     
 11058                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
 11059   005886  0E11               	movlw	17
 11060   005888  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11061   00588A  0E3C               	movlw	60
 11062   00588C  6E1E               	movwf	??_reverseDetect^0,c
 11063   00588E  0ECB               	movlw	203
 11064   005890                     u6277:
 11065   005890  2EE8               	decfsz	wreg,f,c
 11066   005892  D7FE               	bra	u6277
 11067   005894  2E1E               	decfsz	??_reverseDetect^0,f,c
 11068   005896  D7FC               	bra	u6277
 11069   005898  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11070   00589A  D7FA               	bra	u6277
 11071   00589C  F000               	nop	
 11072   00589E                     
 11073                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
 11074   00589E  0EC7               	movlw	low _motorL
 11075   0058A0  6E14               	movwf	stop@mL^0,c
 11076   0058A2  0E01               	movlw	high _motorL
 11077   0058A4  6E15               	movwf	(stop@mL+1)^0,c
 11078   0058A6  0EBE               	movlw	low _motorR
 11079   0058A8  6E16               	movwf	stop@mR^0,c
 11080   0058AA  0E01               	movlw	high _motorR
 11081   0058AC  6E17               	movwf	(stop@mR+1)^0,c
 11082   0058AE  EC94  F02A         	call	_stop	;wreg free
 11083                           
 11084                           ;dc_motor.c: 229:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11085   0058B2  0E05               	movlw	5
 11086   0058B4  6E1F               	movwf	(??_reverseDetect+1)^0,c
 11087   0058B6  0E0F               	movlw	15
 11088   0058B8  6E1E               	movwf	??_reverseDetect^0,c
 11089   0058BA  0EF1               	movlw	241
 11090   0058BC                     u6287:
 11091   0058BC  2EE8               	decfsz	wreg,f,c
 11092   0058BE  D7FE               	bra	u6287
 11093   0058C0  2E1E               	decfsz	??_reverseDetect^0,f,c
 11094   0058C2  D7FC               	bra	u6287
 11095   0058C4  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 11096   0058C6  D7FA               	bra	u6287
 11097   0058C8  F000               	nop	
 11098   0058CA  0012               	return		;funcret
 11099   0058CC                     __end_of_reverseDetect:
 11100                           	callstack 0
 11101                           
 11102 ;; *************** function _fullSpeedBack *****************
 11103 ;; Defined at:
 11104 ;;		line 185 in file "dc_motor.c"
 11105 ;; Parameters:    Size  Location     Type
 11106 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11107 ;;		 -> motorL(9), 
 11108 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11109 ;;		 -> motorR(9), 
 11110 ;; Auto vars:     Size  Location     Type
 11111 ;;		None
 11112 ;; Return value:  Size  Location     Type
 11113 ;;                  1    wreg      void 
 11114 ;; Registers used:
 11115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11116 ;; Tracked objects:
 11117 ;;		On entry : 0/0
 11118 ;;		On exit  : 0/0
 11119 ;;		Unchanged: 0/0
 11120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11124 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11125 ;;Total ram usage:        6 bytes
 11126 ;; Hardware stack levels used: 1
 11127 ;; Hardware stack levels required when called: 2
 11128 ;; This function calls:
 11129 ;;		_setMotorPWM
 11130 ;; This function is called by:
 11131 ;;		_reverseDetect
 11132 ;;		_reverseOneBlock
 11133 ;;		_RetryMove
 11134 ;;		_Backhalfblock
 11135 ;; This function uses a non-reentrant model
 11136 ;;
 11137                           
 11138                           	psect	text63
 11139   0052E2                     __ptext63:
 11140                           	callstack 0
 11141   0052E2                     _fullSpeedBack:
 11142                           	callstack 26
 11143   0052E2                     
 11144                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
 11145   0052E2  EE20 F001          	lfsr	2,1
 11146   0052E6  5014               	movf	fullSpeedBack@mL^0,w,c
 11147   0052E8  26D9               	addwf	fsr2l,f,c
 11148   0052EA  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 11149   0052EC  22DA               	addwfc	fsr2h,f,c
 11150   0052EE  0E00               	movlw	0
 11151   0052F0  6EDF               	movwf	indf2,c
 11152                           
 11153                           ;dc_motor.c: 189:     mR->direction =0;
 11154   0052F2  EE20 F001          	lfsr	2,1
 11155   0052F6  5016               	movf	fullSpeedBack@mR^0,w,c
 11156   0052F8  26D9               	addwf	fsr2l,f,c
 11157   0052FA  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 11158   0052FC  22DA               	addwfc	fsr2h,f,c
 11159   0052FE  0E00               	movlw	0
 11160   005300  6EDF               	movwf	indf2,c
 11161                           
 11162                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
 11163   005302  EFA7  F029         	goto	l4743
 11164   005306                     l4735:
 11165                           
 11166                           ;dc_motor.c: 192:         mL->power+=10;
 11167   005306  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11168   00530A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11169   00530E  0E0A               	movlw	10
 11170   005310  26DF               	addwf	indf2,f,c
 11171                           
 11172                           ;dc_motor.c: 193:         mR->power+=10;
 11173   005312  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11174   005316  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11175   00531A  0E0A               	movlw	10
 11176   00531C  26DF               	addwf	indf2,f,c
 11177   00531E                     
 11178                           ;dc_motor.c: 195:         setMotorPWM(mL);
 11179   00531E  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 11180   005322  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 11181   005326  EC22  F024         	call	_setMotorPWM	;wreg free
 11182   00532A                     
 11183                           ;dc_motor.c: 196:         setMotorPWM(mR);
 11184   00532A  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 11185   00532E  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 11186   005332  EC22  F024         	call	_setMotorPWM	;wreg free
 11187   005336                     
 11188                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11189   005336  0E02               	movlw	2
 11190   005338  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 11191   00533A  0EA0               	movlw	160
 11192   00533C  6E18               	movwf	??_fullSpeedBack^0,c
 11193   00533E  0E92               	movlw	146
 11194   005340                     u6297:
 11195   005340  2EE8               	decfsz	wreg,f,c
 11196   005342  D7FE               	bra	u6297
 11197   005344  2E18               	decfsz	??_fullSpeedBack^0,f,c
 11198   005346  D7FC               	bra	u6297
 11199   005348  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 11200   00534A  D7FA               	bra	u6297
 11201   00534C  D000               	nop2	
 11202   00534E                     l4743:
 11203   00534E  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 11204   005352  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 11205   005356  0E1E               	movlw	30
 11206   005358  60DF               	cpfslt	indf2,c
 11207   00535A  EFB1  F029         	goto	u4551
 11208   00535E  EFB3  F029         	goto	u4550
 11209   005362                     u4551:
 11210   005362  EFBF  F029         	goto	l536
 11211   005366                     u4550:
 11212   005366  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 11213   00536A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 11214   00536E  0E1D               	movlw	29
 11215   005370  64DF               	cpfsgt	indf2,c
 11216   005372  EFBD  F029         	goto	u4561
 11217   005376  EFBF  F029         	goto	u4560
 11218   00537A                     u4561:
 11219   00537A  EF83  F029         	goto	l4735
 11220   00537E                     u4560:
 11221   00537E                     l536:
 11222   00537E  0012               	return		;funcret
 11223   005380                     __end_of_fullSpeedBack:
 11224                           	callstack 0
 11225                           
 11226 ;; *************** function _Interrupts_init *****************
 11227 ;; Defined at:
 11228 ;;		line 9 in file "interrupts.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;		None
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  1    wreg      void 
 11235 ;; Registers used:
 11236 ;;		None
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11246 ;;Total ram usage:        0 bytes
 11247 ;; Hardware stack levels used: 1
 11248 ;; This function calls:
 11249 ;;		Nothing
 11250 ;; This function is called by:
 11251 ;;		_main
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text64
 11256   0061CA                     __ptext64:
 11257                           	callstack 0
 11258   0061CA                     _Interrupts_init:
 11259                           	callstack 30
 11260   0061CA  0012               	return		;funcret
 11261   0061CC                     __end_of_Interrupts_init:
 11262                           	callstack 0
 11263                           
 11264 ;; *************** function _Forwardhalfblock *****************
 11265 ;; Defined at:
 11266 ;;		line 245 in file "dc_motor.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11269 ;;		 -> motorL(9), 
 11270 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11271 ;;		 -> motorR(9), 
 11272 ;; Auto vars:     Size  Location     Type
 11273 ;;		None
 11274 ;; Return value:  Size  Location     Type
 11275 ;;                  1    wreg      void 
 11276 ;; Registers used:
 11277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11278 ;; Tracked objects:
 11279 ;;		On entry : 0/0
 11280 ;;		On exit  : 0/0
 11281 ;;		Unchanged: 0/0
 11282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11285 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11286 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11287 ;;Total ram usage:        6 bytes
 11288 ;; Hardware stack levels used: 1
 11289 ;; Hardware stack levels required when called: 3
 11290 ;; This function calls:
 11291 ;;		_fullSpeedAhead
 11292 ;;		_stop
 11293 ;; This function is called by:
 11294 ;;		_main
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text65
 11299   0058CC                     __ptext65:
 11300                           	callstack 0
 11301   0058CC                     _Forwardhalfblock:
 11302                           	callstack 27
 11303   0058CC                     
 11304                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
 11305   0058CC  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11306   0058D0  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11307   0058D4  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11308   0058D8  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11309   0058DC  ECC0  F029         	call	_fullSpeedAhead	;wreg free
 11310   0058E0                     
 11311                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11312   0058E0  0E52               	movlw	82
 11313   0058E2  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11314   0058E4  0E2B               	movlw	43
 11315   0058E6  6E1E               	movwf	??_Forwardhalfblock^0,c
 11316   0058E8  0E00               	movlw	0
 11317   0058EA                     u6307:
 11318   0058EA  2EE8               	decfsz	wreg,f,c
 11319   0058EC  D7FE               	bra	u6307
 11320   0058EE  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11321   0058F0  D7FC               	bra	u6307
 11322   0058F2  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11323   0058F4  D7FA               	bra	u6307
 11324   0058F6  D000               	nop2	
 11325   0058F8                     
 11326                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
 11327   0058F8  0EC7               	movlw	low _motorL
 11328   0058FA  6E14               	movwf	stop@mL^0,c
 11329   0058FC  0E01               	movlw	high _motorL
 11330   0058FE  6E15               	movwf	(stop@mL+1)^0,c
 11331   005900  0EBE               	movlw	low _motorR
 11332   005902  6E16               	movwf	stop@mR^0,c
 11333   005904  0E01               	movlw	high _motorR
 11334   005906  6E17               	movwf	(stop@mR+1)^0,c
 11335   005908  EC94  F02A         	call	_stop	;wreg free
 11336                           
 11337                           ;dc_motor.c: 249:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11338   00590C  0E05               	movlw	5
 11339   00590E  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11340   005910  0E0F               	movlw	15
 11341   005912  6E1E               	movwf	??_Forwardhalfblock^0,c
 11342   005914  0EF1               	movlw	241
 11343   005916                     u6317:
 11344   005916  2EE8               	decfsz	wreg,f,c
 11345   005918  D7FE               	bra	u6317
 11346   00591A  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11347   00591C  D7FC               	bra	u6317
 11348   00591E  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11349   005920  D7FA               	bra	u6317
 11350   005922  F000               	nop	
 11351   005924  0012               	return		;funcret
 11352   005926                     __end_of_Forwardhalfblock:
 11353                           	callstack 0
 11354                           
 11355 ;; *************** function _stop *****************
 11356 ;; Defined at:
 11357 ;;		line 93 in file "dc_motor.c"
 11358 ;; Parameters:    Size  Location     Type
 11359 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11360 ;;		 -> motorL(9), 
 11361 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11362 ;;		 -> motorR(9), 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;		None
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  1    wreg      void 
 11367 ;; Registers used:
 11368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11377 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11378 ;;Total ram usage:        6 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 2
 11381 ;; This function calls:
 11382 ;;		_setMotorPWM
 11383 ;; This function is called by:
 11384 ;;		_main
 11385 ;;		_turnRight45
 11386 ;;		_turnLeft45
 11387 ;;		_reverseDetect
 11388 ;;		_reverseOneBlock
 11389 ;;		_ForwardOneBlock
 11390 ;;		_Forwardhalfblock
 11391 ;;		_RetryMove
 11392 ;;		_Backhalfblock
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           	psect	text66
 11397   005528                     __ptext66:
 11398                           	callstack 0
 11399   005528                     _stop:
 11400                           	callstack 26
 11401   005528                     
 11402                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
 11403   005528  EFBA  F02A         	goto	l4701
 11404   00552C                     l4693:
 11405                           
 11406                           ;dc_motor.c: 97:         mL->power-=10;
 11407   00552C  C014  FFD9         	movff	stop@mL,fsr2l
 11408   005530  C015  FFDA         	movff	stop@mL+1,fsr2h
 11409   005534  0E0A               	movlw	10
 11410   005536  5EDF               	subwf	indf2,f,c
 11411                           
 11412                           ;dc_motor.c: 98:         mR->power-=10;
 11413   005538  C016  FFD9         	movff	stop@mR,fsr2l
 11414   00553C  C017  FFDA         	movff	stop@mR+1,fsr2h
 11415   005540  0E0A               	movlw	10
 11416   005542  5EDF               	subwf	indf2,f,c
 11417   005544                     
 11418                           ;dc_motor.c: 103:         setMotorPWM(mL);
 11419   005544  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11420   005548  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11421   00554C  EC22  F024         	call	_setMotorPWM	;wreg free
 11422   005550                     
 11423                           ;dc_motor.c: 104:         setMotorPWM(mR);
 11424   005550  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11425   005554  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11426   005558  EC22  F024         	call	_setMotorPWM	;wreg free
 11427   00555C                     
 11428                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11429   00555C  0E02               	movlw	2
 11430   00555E  6E19               	movwf	(??_stop+1)^0,c
 11431   005560  0EA0               	movlw	160
 11432   005562  6E18               	movwf	??_stop^0,c
 11433   005564  0E92               	movlw	146
 11434   005566                     u6327:
 11435   005566  2EE8               	decfsz	wreg,f,c
 11436   005568  D7FE               	bra	u6327
 11437   00556A  2E18               	decfsz	??_stop^0,f,c
 11438   00556C  D7FC               	bra	u6327
 11439   00556E  2E19               	decfsz	(??_stop+1)^0,f,c
 11440   005570  D7FA               	bra	u6327
 11441   005572  D000               	nop2	
 11442   005574                     l4701:
 11443                           
 11444                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
 11445   005574  C014  FFD9         	movff	stop@mL,fsr2l
 11446   005578  C015  FFDA         	movff	stop@mL+1,fsr2h
 11447   00557C  50DF               	movf	indf2,w,c
 11448   00557E  A4D8               	btfss	status,2,c
 11449   005580  EFC4  F02A         	goto	u4491
 11450   005584  EFC6  F02A         	goto	u4490
 11451   005588                     u4491:
 11452   005588  EF96  F02A         	goto	l4693
 11453   00558C                     u4490:
 11454   00558C  C016  FFD9         	movff	stop@mR,fsr2l
 11455   005590  C017  FFDA         	movff	stop@mR+1,fsr2h
 11456   005594  50DF               	movf	indf2,w,c
 11457   005596  A4D8               	btfss	status,2,c
 11458   005598  EFD0  F02A         	goto	u4501
 11459   00559C  EFD2  F02A         	goto	u4500
 11460   0055A0                     u4501:
 11461   0055A0  EF96  F02A         	goto	l4693
 11462   0055A4                     u4500:
 11463   0055A4  0012               	return		;funcret
 11464   0055A6                     __end_of_stop:
 11465                           	callstack 0
 11466                           
 11467 ;; *************** function _fullSpeedAhead *****************
 11468 ;; Defined at:
 11469 ;;		line 147 in file "dc_motor.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11472 ;;		 -> motorL(9), 
 11473 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11474 ;;		 -> motorR(9), 
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;		None
 11477 ;; Return value:  Size  Location     Type
 11478 ;;                  1    wreg      void 
 11479 ;; Registers used:
 11480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11481 ;; Tracked objects:
 11482 ;;		On entry : 0/0
 11483 ;;		On exit  : 0/0
 11484 ;;		Unchanged: 0/0
 11485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11488 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11490 ;;Total ram usage:        6 bytes
 11491 ;; Hardware stack levels used: 1
 11492 ;; Hardware stack levels required when called: 2
 11493 ;; This function calls:
 11494 ;;		_setMotorPWM
 11495 ;; This function is called by:
 11496 ;;		_main
 11497 ;;		_ForwardOneBlock
 11498 ;;		_Forwardhalfblock
 11499 ;;		_RetryMove
 11500 ;; This function uses a non-reentrant model
 11501 ;;
 11502                           
 11503                           	psect	text67
 11504   005380                     __ptext67:
 11505                           	callstack 0
 11506   005380                     _fullSpeedAhead:
 11507                           	callstack 25
 11508   005380                     
 11509                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
 11510   005380  EE20 F001          	lfsr	2,1
 11511   005384  5014               	movf	fullSpeedAhead@mL^0,w,c
 11512   005386  26D9               	addwf	fsr2l,f,c
 11513   005388  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11514   00538A  22DA               	addwfc	fsr2h,f,c
 11515   00538C  0E01               	movlw	1
 11516   00538E  6EDF               	movwf	indf2,c
 11517                           
 11518                           ;dc_motor.c: 151:     mR->direction =1;
 11519   005390  EE20 F001          	lfsr	2,1
 11520   005394  5016               	movf	fullSpeedAhead@mR^0,w,c
 11521   005396  26D9               	addwf	fsr2l,f,c
 11522   005398  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11523   00539A  22DA               	addwfc	fsr2h,f,c
 11524   00539C  0E01               	movlw	1
 11525   00539E  6EDF               	movwf	indf2,c
 11526                           
 11527                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
 11528   0053A0  EFF6  F029         	goto	l4687
 11529   0053A4                     l4679:
 11530                           
 11531                           ;dc_motor.c: 154:         mL->power+=10;
 11532   0053A4  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11533   0053A8  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11534   0053AC  0E0A               	movlw	10
 11535   0053AE  26DF               	addwf	indf2,f,c
 11536                           
 11537                           ;dc_motor.c: 155:         mR->power+=10;
 11538   0053B0  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11539   0053B4  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11540   0053B8  0E0A               	movlw	10
 11541   0053BA  26DF               	addwf	indf2,f,c
 11542   0053BC                     
 11543                           ;dc_motor.c: 157:         setMotorPWM(mL);
 11544   0053BC  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11545   0053C0  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11546   0053C4  EC22  F024         	call	_setMotorPWM	;wreg free
 11547   0053C8                     
 11548                           ;dc_motor.c: 158:         setMotorPWM(mR);
 11549   0053C8  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11550   0053CC  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11551   0053D0  EC22  F024         	call	_setMotorPWM	;wreg free
 11552   0053D4                     
 11553                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11554   0053D4  0E02               	movlw	2
 11555   0053D6  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11556   0053D8  0EA0               	movlw	160
 11557   0053DA  6E18               	movwf	??_fullSpeedAhead^0,c
 11558   0053DC  0E92               	movlw	146
 11559   0053DE                     u6337:
 11560   0053DE  2EE8               	decfsz	wreg,f,c
 11561   0053E0  D7FE               	bra	u6337
 11562   0053E2  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11563   0053E4  D7FC               	bra	u6337
 11564   0053E6  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11565   0053E8  D7FA               	bra	u6337
 11566   0053EA  D000               	nop2	
 11567   0053EC                     l4687:
 11568   0053EC  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11569   0053F0  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11570   0053F4  0E1E               	movlw	30
 11571   0053F6  60DF               	cpfslt	indf2,c
 11572   0053F8  EF00  F02A         	goto	u4471
 11573   0053FC  EF02  F02A         	goto	u4470
 11574   005400                     u4471:
 11575   005400  EF0E  F02A         	goto	l520
 11576   005404                     u4470:
 11577   005404  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11578   005408  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11579   00540C  0E1D               	movlw	29
 11580   00540E  64DF               	cpfsgt	indf2,c
 11581   005410  EF0C  F02A         	goto	u4481
 11582   005414  EF0E  F02A         	goto	u4480
 11583   005418                     u4481:
 11584   005418  EFD2  F029         	goto	l4679
 11585   00541C                     u4480:
 11586   00541C                     l520:
 11587   00541C  0012               	return		;funcret
 11588   00541E                     __end_of_fullSpeedAhead:
 11589                           	callstack 0
 11590                           
 11591 ;; *************** function _setMotorPWM *****************
 11592 ;; Defined at:
 11593 ;;		line 68 in file "dc_motor.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11596 ;;		 -> motorR(9), motorL(9), 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  negDuty         1   18[COMRAM] unsigned char 
 11599 ;;  posDuty         1   17[COMRAM] unsigned char 
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 0/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11613 ;;Total ram usage:        6 bytes
 11614 ;; Hardware stack levels used: 1
 11615 ;; Hardware stack levels required when called: 1
 11616 ;; This function calls:
 11617 ;;		___lwdiv
 11618 ;;		___wmul
 11619 ;; This function is called by:
 11620 ;;		_stop
 11621 ;;		_turnLeft
 11622 ;;		_turnRight
 11623 ;;		_fullSpeedAhead
 11624 ;;		_timed_forward
 11625 ;;		_fullSpeedBack
 11626 ;; This function uses a non-reentrant model
 11627 ;;
 11628                           
 11629                           	psect	text68
 11630   004844                     __ptext68:
 11631                           	callstack 0
 11632   004844                     _setMotorPWM:
 11633                           	callstack 26
 11634   004844                     
 11635                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
 11636   004844  EE20 F002          	lfsr	2,2
 11637   004848  500E               	movf	setMotorPWM@m^0,w,c
 11638   00484A  26D9               	addwf	fsr2l,f,c
 11639   00484C  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11640   00484E  22DA               	addwfc	fsr2h,f,c
 11641   004850  50DF               	movf	indf2,w,c
 11642   004852  B4D8               	btfsc	status,2,c
 11643   004854  EF2E  F024         	goto	u3491
 11644   004858  EF30  F024         	goto	u3490
 11645   00485C                     u3491:
 11646   00485C  EF64  F024         	goto	l4131
 11647   004860                     u3490:
 11648   004860                     
 11649                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 11650   004860  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11651   004864  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11652   004868  50DF               	movf	indf2,w,c
 11653   00486A  6E10               	movwf	??_setMotorPWM^0,c
 11654   00486C  5010               	movf	??_setMotorPWM^0,w,c
 11655   00486E  6E01               	movwf	___wmul@multiplier^0,c
 11656   004870  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11657   004872  EE20 F003          	lfsr	2,3
 11658   004876  500E               	movf	setMotorPWM@m^0,w,c
 11659   004878  26D9               	addwf	fsr2l,f,c
 11660   00487A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11661   00487C  22DA               	addwfc	fsr2h,f,c
 11662   00487E  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11663   004882  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11664   004886  EC7D  F030         	call	___wmul	;wreg free
 11665   00488A  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11666   00488E  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11667   004892  0E00               	movlw	0
 11668   004894  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11669   004896  0E64               	movlw	100
 11670   004898  6E09               	movwf	___lwdiv@divisor^0,c
 11671   00489A  EC10  F02B         	call	___lwdiv	;wreg free
 11672   00489E  EE20 F003          	lfsr	2,3
 11673   0048A2  500E               	movf	setMotorPWM@m^0,w,c
 11674   0048A4  26D9               	addwf	fsr2l,f,c
 11675   0048A6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11676   0048A8  22DA               	addwfc	fsr2h,f,c
 11677   0048AA  50DF               	movf	indf2,w,c
 11678   0048AC  6E11               	movwf	(??_setMotorPWM+1)^0,c
 11679   0048AE  5007               	movf	?___lwdiv^0,w,c
 11680   0048B0  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 11681   0048B2  6E12               	movwf	setMotorPWM@posDuty^0,c
 11682   0048B4                     
 11683                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
 11684   0048B4  EE20 F003          	lfsr	2,3
 11685   0048B8  500E               	movf	setMotorPWM@m^0,w,c
 11686   0048BA  26D9               	addwf	fsr2l,f,c
 11687   0048BC  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11688   0048BE  22DA               	addwfc	fsr2h,f,c
 11689   0048C0  50DF               	movf	indf2,w,c
 11690   0048C2  6E13               	movwf	setMotorPWM@negDuty^0,c
 11691                           
 11692                           ;dc_motor.c: 75:     }
 11693   0048C4  EF87  F024         	goto	l4135
 11694   0048C8                     l4131:
 11695                           
 11696                           ;dc_motor.c: 77:         posDuty=0;
 11697   0048C8  0E00               	movlw	0
 11698   0048CA  6E12               	movwf	setMotorPWM@posDuty^0,c
 11699   0048CC                     
 11700                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 11701   0048CC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 11702   0048D0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 11703   0048D4  50DF               	movf	indf2,w,c
 11704   0048D6  6E10               	movwf	??_setMotorPWM^0,c
 11705   0048D8  5010               	movf	??_setMotorPWM^0,w,c
 11706   0048DA  6E01               	movwf	___wmul@multiplier^0,c
 11707   0048DC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 11708   0048DE  EE20 F003          	lfsr	2,3
 11709   0048E2  500E               	movf	setMotorPWM@m^0,w,c
 11710   0048E4  26D9               	addwf	fsr2l,f,c
 11711   0048E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11712   0048E8  22DA               	addwfc	fsr2h,f,c
 11713   0048EA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 11714   0048EE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 11715   0048F2  EC7D  F030         	call	___wmul	;wreg free
 11716   0048F6  C001  F007         	movff	?___wmul,___lwdiv@dividend
 11717   0048FA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 11718   0048FE  0E00               	movlw	0
 11719   004900  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 11720   004902  0E64               	movlw	100
 11721   004904  6E09               	movwf	___lwdiv@divisor^0,c
 11722   004906  EC10  F02B         	call	___lwdiv	;wreg free
 11723   00490A  5007               	movf	?___lwdiv^0,w,c
 11724   00490C  6E13               	movwf	setMotorPWM@negDuty^0,c
 11725   00490E                     l4135:
 11726                           
 11727                           ;dc_motor.c: 81:     if (m->direction) {
 11728   00490E  EE20 F001          	lfsr	2,1
 11729   004912  500E               	movf	setMotorPWM@m^0,w,c
 11730   004914  26D9               	addwf	fsr2l,f,c
 11731   004916  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11732   004918  22DA               	addwfc	fsr2h,f,c
 11733   00491A  50DF               	movf	indf2,w,c
 11734   00491C  B4D8               	btfsc	status,2,c
 11735   00491E  EF93  F024         	goto	u3501
 11736   004922  EF95  F024         	goto	u3500
 11737   004926                     u3501:
 11738   004926  EFB7  F024         	goto	l4139
 11739   00492A                     u3500:
 11740   00492A                     
 11741                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
 11742   00492A  EE20 F005          	lfsr	2,5
 11743   00492E  500E               	movf	setMotorPWM@m^0,w,c
 11744   004930  26D9               	addwf	fsr2l,f,c
 11745   004932  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11746   004934  22DA               	addwfc	fsr2h,f,c
 11747   004936  CFDE F010          	movff	postinc2,??_setMotorPWM
 11748   00493A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11749   00493E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11750   004942  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11751   004946  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11752                           
 11753                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
 11754   00494A  EE20 F007          	lfsr	2,7
 11755   00494E  500E               	movf	setMotorPWM@m^0,w,c
 11756   004950  26D9               	addwf	fsr2l,f,c
 11757   004952  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11758   004954  22DA               	addwfc	fsr2h,f,c
 11759   004956  CFDE F010          	movff	postinc2,??_setMotorPWM
 11760   00495A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11761   00495E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11762   004962  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11763   004966  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11764                           
 11765                           ;dc_motor.c: 86:     } else {
 11766   00496A  EFD7  F024         	goto	l490
 11767   00496E                     l4139:
 11768                           
 11769                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
 11770   00496E  EE20 F005          	lfsr	2,5
 11771   004972  500E               	movf	setMotorPWM@m^0,w,c
 11772   004974  26D9               	addwf	fsr2l,f,c
 11773   004976  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11774   004978  22DA               	addwfc	fsr2h,f,c
 11775   00497A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11776   00497E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11777   004982  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11778   004986  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11779   00498A  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 11780                           
 11781                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
 11782   00498E  EE20 F007          	lfsr	2,7
 11783   004992  500E               	movf	setMotorPWM@m^0,w,c
 11784   004994  26D9               	addwf	fsr2l,f,c
 11785   004996  500F               	movf	(setMotorPWM@m+1)^0,w,c
 11786   004998  22DA               	addwfc	fsr2h,f,c
 11787   00499A  CFDE F010          	movff	postinc2,??_setMotorPWM
 11788   00499E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 11789   0049A2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 11790   0049A6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 11791   0049AA  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 11792   0049AE                     l490:
 11793   0049AE  0012               	return		;funcret
 11794   0049B0                     __end_of_setMotorPWM:
 11795                           	callstack 0
 11796                           
 11797 ;; *************** function ___wmul *****************
 11798 ;; Defined at:
 11799 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 11800 ;; Parameters:    Size  Location     Type
 11801 ;;  multiplier      2    0[COMRAM] unsigned int 
 11802 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11803 ;; Auto vars:     Size  Location     Type
 11804 ;;  product         2    4[COMRAM] unsigned int 
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  2    0[COMRAM] unsigned int 
 11807 ;; Registers used:
 11808 ;;		wreg, status,2, status,0, prodl, prodh
 11809 ;; Tracked objects:
 11810 ;;		On entry : 0/0
 11811 ;;		On exit  : 0/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11814 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11818 ;;Total ram usage:        6 bytes
 11819 ;; Hardware stack levels used: 1
 11820 ;; This function calls:
 11821 ;;		Nothing
 11822 ;; This function is called by:
 11823 ;;		_setMotorPWM
 11824 ;; This function uses a non-reentrant model
 11825 ;;
 11826                           
 11827                           	psect	text69
 11828   0060FA                     __ptext69:
 11829                           	callstack 0
 11830   0060FA                     ___wmul:
 11831                           	callstack 26
 11832   0060FA  5001               	movf	___wmul@multiplier^0,w,c
 11833   0060FC  0203               	mulwf	___wmul@multiplicand^0,c
 11834   0060FE  CFF3 F005          	movff	prodl,___wmul@product
 11835   006102  CFF4 F006          	movff	prodh,___wmul@product+1
 11836   006106  5001               	movf	___wmul@multiplier^0,w,c
 11837   006108  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11838   00610A  50F3               	movf	243,w,c
 11839   00610C  2606               	addwf	(___wmul@product+1)^0,f,c
 11840   00610E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11841   006110  0203               	mulwf	___wmul@multiplicand^0,c
 11842   006112  50F3               	movf	243,w,c
 11843   006114  2606               	addwf	(___wmul@product+1)^0,f,c
 11844   006116  C005  F001         	movff	___wmul@product,?___wmul
 11845   00611A  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11846   00611E  0012               	return		;funcret
 11847   006120                     __end_of___wmul:
 11848                           	callstack 0
 11849                           
 11850 ;; *************** function ___lwdiv *****************
 11851 ;; Defined at:
 11852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  dividend        2    6[COMRAM] unsigned int 
 11855 ;;  divisor         2    8[COMRAM] unsigned int 
 11856 ;; Auto vars:     Size  Location     Type
 11857 ;;  quotient        2   10[COMRAM] unsigned int 
 11858 ;;  counter         1   12[COMRAM] unsigned char 
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  2    6[COMRAM] unsigned int 
 11861 ;; Registers used:
 11862 ;;		wreg, status,2, status,0
 11863 ;; Tracked objects:
 11864 ;;		On entry : 0/0
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11872 ;;Total ram usage:        7 bytes
 11873 ;; Hardware stack levels used: 1
 11874 ;; This function calls:
 11875 ;;		Nothing
 11876 ;; This function is called by:
 11877 ;;		_setMotorPWM
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           	psect	text70
 11882   005620                     __ptext70:
 11883                           	callstack 0
 11884   005620                     ___lwdiv:
 11885                           	callstack 26
 11886   005620  0E00               	movlw	0
 11887   005622  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 11888   005624  0E00               	movlw	0
 11889   005626  6E0B               	movwf	___lwdiv@quotient^0,c
 11890   005628  5009               	movf	___lwdiv@divisor^0,w,c
 11891   00562A  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 11892   00562C  B4D8               	btfsc	status,2,c
 11893   00562E  EF1B  F02B         	goto	u3451
 11894   005632  EF1D  F02B         	goto	u3450
 11895   005636                     u3451:
 11896   005636  EF45  F02B         	goto	l1185
 11897   00563A                     u3450:
 11898   00563A  0E01               	movlw	1
 11899   00563C  6E0D               	movwf	___lwdiv@counter^0,c
 11900   00563E  EF25  F02B         	goto	l4103
 11901   005642                     l4101:
 11902   005642  90D8               	bcf	status,0,c
 11903   005644  3609               	rlcf	___lwdiv@divisor^0,f,c
 11904   005646  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 11905   005648  2A0D               	incf	___lwdiv@counter^0,f,c
 11906   00564A                     l4103:
 11907   00564A  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 11908   00564C  EF2A  F02B         	goto	u3461
 11909   005650  EF2C  F02B         	goto	u3460
 11910   005654                     u3461:
 11911   005654  EF21  F02B         	goto	l4101
 11912   005658                     u3460:
 11913   005658                     l4105:
 11914   005658  90D8               	bcf	status,0,c
 11915   00565A  360B               	rlcf	___lwdiv@quotient^0,f,c
 11916   00565C  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 11917   00565E  5009               	movf	___lwdiv@divisor^0,w,c
 11918   005660  5C07               	subwf	___lwdiv@dividend^0,w,c
 11919   005662  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11920   005664  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 11921   005666  A0D8               	btfss	status,0,c
 11922   005668  EF38  F02B         	goto	u3471
 11923   00566C  EF3A  F02B         	goto	u3470
 11924   005670                     u3471:
 11925   005670  EF3F  F02B         	goto	l4113
 11926   005674                     u3470:
 11927   005674  5009               	movf	___lwdiv@divisor^0,w,c
 11928   005676  5E07               	subwf	___lwdiv@dividend^0,f,c
 11929   005678  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 11930   00567A  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 11931   00567C  800B               	bsf	___lwdiv@quotient^0,0,c
 11932   00567E                     l4113:
 11933   00567E  90D8               	bcf	status,0,c
 11934   005680  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 11935   005682  3209               	rrcf	___lwdiv@divisor^0,f,c
 11936   005684  2E0D               	decfsz	___lwdiv@counter^0,f,c
 11937   005686  EF2C  F02B         	goto	l4105
 11938   00568A                     l1185:
 11939   00568A  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 11940   00568E  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11941   005692  0012               	return		;funcret
 11942   005694                     __end_of___lwdiv:
 11943                           	callstack 0
 11944                           
 11945 ;; *************** function _Colour_decider *****************
 11946 ;; Defined at:
 11947 ;;		line 125 in file "color.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;  vals            2   74[COMRAM] PTR struct RGB
 11950 ;;		 -> vals(8), 
 11951 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 11952 ;;		 -> rel(12), 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  RGB_col        12    6[BANK0 ] float [3]
 11955 ;;  Hue             4   28[BANK0 ] float 
 11956 ;;  Cmin            4   22[BANK0 ] float 
 11957 ;;  Cmax            4   18[BANK0 ] float 
 11958 ;;  i               2   26[BANK0 ] int 
 11959 ;;  Cmax_i          2    4[BANK0 ] int 
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  2   74[COMRAM] int 
 11962 ;; Registers used:
 11963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11969 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11970 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11972 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11973 ;;Total ram usage:       38 bytes
 11974 ;; Hardware stack levels used: 1
 11975 ;; Hardware stack levels required when called: 2
 11976 ;; This function calls:
 11977 ;;		___fladd
 11978 ;;		___fldiv
 11979 ;;		___fleq
 11980 ;;		___flge
 11981 ;;		___flmul
 11982 ;;		___flsub
 11983 ;;		___xxtofl
 11984 ;; This function is called by:
 11985 ;;		_main
 11986 ;; This function uses a non-reentrant model
 11987 ;;
 11988                           
 11989                           	psect	text71
 11990   000E52                     __ptext71:
 11991                           	callstack 0
 11992   000E52                     _Colour_decider:
 11993                           	callstack 28
 11994   000E52                     
 11995                           ;color.c: 126:     float Cmax = 0;
 11996   000E52  0E00               	movlw	0
 11997   000E54  0100               	movlb	0	; () banked
 11998   000E56  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 11999   000E58  0E00               	movlw	0
 12000   000E5A  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12001   000E5C  0E00               	movlw	0
 12002   000E5E  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12003   000E60  0E00               	movlw	0
 12004   000E62  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12005                           
 12006                           ;color.c: 127:     float Cmin= 100000;
 12007   000E64  0E00               	movlw	0
 12008   000E66  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12009   000E68  0E50               	movlw	80
 12010   000E6A  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12011   000E6C  0EC3               	movlw	195
 12012   000E6E  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12013   000E70  0E47               	movlw	71
 12014   000E72  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12015                           
 12016                           ;color.c: 128:     int Cmax_i =4;
 12017   000E74  0E00               	movlw	0
 12018   000E76  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12019   000E78  0E04               	movlw	4
 12020   000E7A  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12021   000E7C                     
 12022                           ; BSR set to: 0
 12023                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12024   000E7C  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12025   000E80  0E0B               	movlw	11
 12026   000E82                     u5211:
 12027   000E82  6ADE               	clrf	postinc2,c
 12028   000E84  06E8               	decf	wreg,f,c
 12029   000E86  E2FD               	bc	u5211
 12030   000E88                     
 12031                           ; BSR set to: 0
 12032   000E88  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12033   000E8C  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12034   000E90  CFDE F001          	movff	postinc2,___xxtofl@val
 12035   000E94  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12036   000E98  0E00               	movlw	0
 12037   000E9A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12038   000E9C  0EFF               	movlw	-1
 12039   000E9E  6E03               	movwf	(___xxtofl@val+2)^0,c
 12040   000EA0  6E04               	movwf	(___xxtofl@val+3)^0,c
 12041   000EA2  0E01               	movlw	1
 12042   000EA4  EC84  F022         	call	___xxtofl
 12043   000EA8  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12044   000EAC  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12045   000EB0  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12046   000EB4  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12047   000EB8  EE20 F002          	lfsr	2,2
 12048   000EBC  504B               	movf	Colour_decider@vals^0,w,c
 12049   000EBE  26D9               	addwf	fsr2l,f,c
 12050   000EC0  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12051   000EC2  22DA               	addwfc	fsr2h,f,c
 12052   000EC4  CFDE F001          	movff	postinc2,___xxtofl@val
 12053   000EC8  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12054   000ECC  0E00               	movlw	0
 12055   000ECE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12056   000ED0  0EFF               	movlw	-1
 12057   000ED2  6E03               	movwf	(___xxtofl@val+2)^0,c
 12058   000ED4  6E04               	movwf	(___xxtofl@val+3)^0,c
 12059   000ED6  0E01               	movlw	1
 12060   000ED8  EC84  F022         	call	___xxtofl
 12061   000EDC  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12062   000EE0  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12063   000EE4  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12064   000EE8  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12065   000EEC  EE20 F004          	lfsr	2,4
 12066   000EF0  504B               	movf	Colour_decider@vals^0,w,c
 12067   000EF2  26D9               	addwf	fsr2l,f,c
 12068   000EF4  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12069   000EF6  22DA               	addwfc	fsr2h,f,c
 12070   000EF8  CFDE F001          	movff	postinc2,___xxtofl@val
 12071   000EFC  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12072   000F00  0E00               	movlw	0
 12073   000F02  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12074   000F04  0EFF               	movlw	-1
 12075   000F06  6E03               	movwf	(___xxtofl@val+2)^0,c
 12076   000F08  6E04               	movwf	(___xxtofl@val+3)^0,c
 12077   000F0A  0E01               	movlw	1
 12078   000F0C  EC84  F022         	call	___xxtofl
 12079   000F10  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12080   000F14  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12081   000F18  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12082   000F1C  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12083   000F20                     
 12084                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 12085   000F20  0E00               	movlw	0
 12086   000F22  0100               	movlb	0	; () banked
 12087   000F24  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12088   000F26  0E00               	movlw	0
 12089   000F28  6F7A               	movwf	Colour_decider@i& (0+255),b
 12090   000F2A                     l5371:
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 12094   000F2A  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12095   000F2E  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12096   000F32  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12097   000F36  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12098   000F3A  0E66               	movlw	low Colour_decider@RGB_col
 12099   000F3C  6E4F               	movwf	??_Colour_decider^0,c
 12100   000F3E  0E00               	movlw	high Colour_decider@RGB_col
 12101   000F40  6E50               	movwf	(??_Colour_decider+1)^0,c
 12102   000F42  90D8               	bcf	status,0,c
 12103   000F44  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12104   000F46  6ED9               	movwf	fsr2l,c
 12105   000F48  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12106   000F4A  6EDA               	movwf	fsr2h,c
 12107   000F4C  90D8               	bcf	status,0,c
 12108   000F4E  36D9               	rlcf	fsr2l,f,c
 12109   000F50  36DA               	rlcf	fsr2h,f,c
 12110   000F52  504F               	movf	??_Colour_decider^0,w,c
 12111   000F54  26D9               	addwf	fsr2l,f,c
 12112   000F56  5050               	movf	(??_Colour_decider+1)^0,w,c
 12113   000F58  22DA               	addwfc	fsr2h,f,c
 12114   000F5A  CFDE F02E          	movff	postinc2,___flge@ff2
 12115   000F5E  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12116   000F62  CFDE F030          	movff	postinc2,___flge@ff2+2
 12117   000F66  CFDE F031          	movff	postinc2,___flge@ff2+3
 12118   000F6A  EC0D  F026         	call	___flge	;wreg free
 12119   000F6E  B0D8               	btfsc	status,0,c
 12120   000F70  EFBC  F007         	goto	u5221
 12121   000F74  EFBE  F007         	goto	u5220
 12122   000F78                     u5221:
 12123   000F78  EFDB  F007         	goto	l5377
 12124   000F7C                     u5220:
 12125   000F7C                     
 12126                           ;color.c: 137:             Cmax=RGB_col[i];
 12127   000F7C  0E66               	movlw	low Colour_decider@RGB_col
 12128   000F7E  6E4F               	movwf	??_Colour_decider^0,c
 12129   000F80  0E00               	movlw	high Colour_decider@RGB_col
 12130   000F82  6E50               	movwf	(??_Colour_decider+1)^0,c
 12131   000F84  90D8               	bcf	status,0,c
 12132   000F86  0100               	movlb	0	; () banked
 12133   000F88  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12134   000F8A  6ED9               	movwf	fsr2l,c
 12135   000F8C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12136   000F8E  6EDA               	movwf	fsr2h,c
 12137   000F90  90D8               	bcf	status,0,c
 12138   000F92  36D9               	rlcf	fsr2l,f,c
 12139   000F94  36DA               	rlcf	fsr2h,f,c
 12140   000F96  504F               	movf	??_Colour_decider^0,w,c
 12141   000F98  26D9               	addwf	fsr2l,f,c
 12142   000F9A  5050               	movf	(??_Colour_decider+1)^0,w,c
 12143   000F9C  22DA               	addwfc	fsr2h,f,c
 12144   000F9E  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12145   000FA2  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12146   000FA6  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12147   000FAA  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12148   000FAE                     
 12149                           ; BSR set to: 0
 12150                           ;color.c: 138:             Cmax_i=i;
 12151   000FAE  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12152   000FB2  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12153   000FB6                     l5377:
 12154                           
 12155                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12156   000FB6  0E66               	movlw	low Colour_decider@RGB_col
 12157   000FB8  6E4F               	movwf	??_Colour_decider^0,c
 12158   000FBA  0E00               	movlw	high Colour_decider@RGB_col
 12159   000FBC  6E50               	movwf	(??_Colour_decider+1)^0,c
 12160   000FBE  90D8               	bcf	status,0,c
 12161   000FC0  0100               	movlb	0	; () banked
 12162   000FC2  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12163   000FC4  6ED9               	movwf	fsr2l,c
 12164   000FC6  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12165   000FC8  6EDA               	movwf	fsr2h,c
 12166   000FCA  90D8               	bcf	status,0,c
 12167   000FCC  36D9               	rlcf	fsr2l,f,c
 12168   000FCE  36DA               	rlcf	fsr2h,f,c
 12169   000FD0  504F               	movf	??_Colour_decider^0,w,c
 12170   000FD2  26D9               	addwf	fsr2l,f,c
 12171   000FD4  5050               	movf	(??_Colour_decider+1)^0,w,c
 12172   000FD6  22DA               	addwfc	fsr2h,f,c
 12173   000FD8  CFDE F02A          	movff	postinc2,___flge@ff1
 12174   000FDC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12175   000FE0  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12176   000FE4  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12177   000FE8  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12178   000FEC  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12179   000FF0  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12180   000FF4  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12181   000FF8  EC0D  F026         	call	___flge	;wreg free
 12182   000FFC  B0D8               	btfsc	status,0,c
 12183   000FFE  EF03  F008         	goto	u5231
 12184   001002  EF05  F008         	goto	u5230
 12185   001006                     u5231:
 12186   001006  EF1E  F008         	goto	l5381
 12187   00100A                     u5230:
 12188   00100A  0E66               	movlw	low Colour_decider@RGB_col
 12189   00100C  6E4F               	movwf	??_Colour_decider^0,c
 12190   00100E  0E00               	movlw	high Colour_decider@RGB_col
 12191   001010  6E50               	movwf	(??_Colour_decider+1)^0,c
 12192   001012  90D8               	bcf	status,0,c
 12193   001014  0100               	movlb	0	; () banked
 12194   001016  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12195   001018  6ED9               	movwf	fsr2l,c
 12196   00101A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12197   00101C  6EDA               	movwf	fsr2h,c
 12198   00101E  90D8               	bcf	status,0,c
 12199   001020  36D9               	rlcf	fsr2l,f,c
 12200   001022  36DA               	rlcf	fsr2h,f,c
 12201   001024  504F               	movf	??_Colour_decider^0,w,c
 12202   001026  26D9               	addwf	fsr2l,f,c
 12203   001028  5050               	movf	(??_Colour_decider+1)^0,w,c
 12204   00102A  22DA               	addwfc	fsr2h,f,c
 12205   00102C  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12206   001030  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12207   001034  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12208   001038  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12209   00103C                     l5381:
 12210                           
 12211                           ;color.c: 141:     }
 12212   00103C  0100               	movlb	0	; () banked
 12213   00103E  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12214   001040  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12215   001042                     
 12216                           ; BSR set to: 0
 12217   001042  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12218   001044  EF2D  F008         	goto	u5241
 12219   001048  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12220   00104A  E109               	bnz	u5240
 12221   00104C  0E03               	movlw	3
 12222   00104E  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12223   001050  A0D8               	btfss	status,0,c
 12224   001052  EF2D  F008         	goto	u5241
 12225   001056  EF2F  F008         	goto	u5240
 12226   00105A                     u5241:
 12227   00105A  EF95  F007         	goto	l5371
 12228   00105E                     u5240:
 12229   00105E                     
 12230                           ; BSR set to: 0
 12231                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 12232   00105E  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12233   001062  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12234   001066  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12235   00106A  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12236   00106E  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12237   001072  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12238   001076  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12239   00107A  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12240   00107E  ECF0  F02E         	call	___flsub	;wreg free
 12241   001082  C02A  F032         	movff	?___flsub,___fleq@ff1
 12242   001086  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12243   00108A  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12244   00108E  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12245   001092  0E00               	movlw	0
 12246   001094  6E36               	movwf	___fleq@ff2^0,c
 12247   001096  0E00               	movlw	0
 12248   001098  6E37               	movwf	(___fleq@ff2+1)^0,c
 12249   00109A  0E00               	movlw	0
 12250   00109C  6E38               	movwf	(___fleq@ff2+2)^0,c
 12251   00109E  0E00               	movlw	0
 12252   0010A0  6E39               	movwf	(___fleq@ff2+3)^0,c
 12253   0010A2  EC7E  F028         	call	___fleq	;wreg free
 12254   0010A6  A0D8               	btfss	status,0,c
 12255   0010A8  EF58  F008         	goto	u5251
 12256   0010AC  EF5A  F008         	goto	u5250
 12257   0010B0                     u5251:
 12258   0010B0  EF60  F008         	goto	l5391
 12259   0010B4                     u5250:
 12260   0010B4                     l5387:
 12261   0010B4  0E00               	movlw	0
 12262   0010B6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12263   0010B8  0E00               	movlw	0
 12264   0010BA  6E4B               	movwf	?_Colour_decider^0,c
 12265   0010BC  EF96  F00C         	goto	l76
 12266   0010C0                     l5391:
 12267                           
 12268                           ;color.c: 146:     if (Cmax_i==0){
 12269   0010C0  0100               	movlb	0	; () banked
 12270   0010C2  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12271   0010C4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12272   0010C6  A4D8               	btfss	status,2,c
 12273   0010C8  EF68  F008         	goto	u5261
 12274   0010CC  EF6A  F008         	goto	u5260
 12275   0010D0                     u5261:
 12276   0010D0  EFDE  F008         	goto	l5399
 12277   0010D4                     u5260:
 12278   0010D4                     
 12279                           ; BSR set to: 0
 12280                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12281   0010D4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12282   0010D8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12283   0010DC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12284   0010E0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12285   0010E4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12286   0010E8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12287   0010EC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12288   0010F0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12289   0010F4  ECF0  F02E         	call	___flsub	;wreg free
 12290   0010F8  C02A  F036         	movff	?___flsub,___fldiv@a
 12291   0010FC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12292   001100  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12293   001104  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12294   001108  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12295   00110C  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12296   001110  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12297   001114  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12298   001118  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12299   00111C  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12300   001120  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12301   001124  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12302   001128  ECF0  F02E         	call	___flsub	;wreg free
 12303   00112C  C02A  F032         	movff	?___flsub,___fldiv@b
 12304   001130  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12305   001134  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12306   001138  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12307   00113C  EC0F  F019         	call	___fldiv	;wreg free
 12308   001140  C032  F011         	movff	?___fldiv,___flmul@b
 12309   001144  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12310   001148  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12311   00114C  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12312   001150  0E00               	movlw	0
 12313   001152  6E15               	movwf	___flmul@a^0,c
 12314   001154  0E00               	movlw	0
 12315   001156  6E16               	movwf	(___flmul@a+1)^0,c
 12316   001158  0E70               	movlw	112
 12317   00115A  6E17               	movwf	(___flmul@a+2)^0,c
 12318   00115C  0E42               	movlw	66
 12319   00115E  6E18               	movwf	(___flmul@a+3)^0,c
 12320   001160  ECFA  F016         	call	___flmul	;wreg free
 12321   001164  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12322   001168  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12323   00116C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12324   001170  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12325   001174                     
 12326                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 12327   001174  0100               	movlb	0	; () banked
 12328   001176  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12329   001178  EFC2  F008         	goto	u5270
 12330   00117C  EFC0  F008         	goto	u5271
 12331   001180                     u5271:
 12332   001180  EFBD  F009         	goto	l5409
 12333   001184                     u5270:
 12334   001184                     
 12335                           ; BSR set to: 0
 12336   001184  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12337   001188  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12338   00118C  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12339   001190  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12340   001194  0E00               	movlw	0
 12341   001196  6E05               	movwf	___fladd@a^0,c
 12342   001198  0E00               	movlw	0
 12343   00119A  6E06               	movwf	(___fladd@a+1)^0,c
 12344   00119C  0EB4               	movlw	180
 12345   00119E  6E07               	movwf	(___fladd@a+2)^0,c
 12346   0011A0  0E43               	movlw	67
 12347   0011A2  6E08               	movwf	(___fladd@a+3)^0,c
 12348   0011A4  EC9A  F014         	call	___fladd	;wreg free
 12349   0011A8  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12350   0011AC  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12351   0011B0  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12352   0011B4  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12353   0011B8  EFBD  F009         	goto	l5409
 12354   0011BC                     l5399:
 12355                           
 12356                           ; BSR set to: 0
 12357   0011BC  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12358   0011BE  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12359   0011C0  A4D8               	btfss	status,2,c
 12360   0011C2  EFE5  F008         	goto	u5281
 12361   0011C6  EFE7  F008         	goto	u5280
 12362   0011CA                     u5281:
 12363   0011CA  EF53  F009         	goto	l5405
 12364   0011CE                     u5280:
 12365   0011CE                     
 12366                           ; BSR set to: 0
 12367                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12368   0011CE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12369   0011D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12370   0011D6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12371   0011DA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12372   0011DE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12373   0011E2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12374   0011E6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12375   0011EA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12376   0011EE  ECF0  F02E         	call	___flsub	;wreg free
 12377   0011F2  C02A  F036         	movff	?___flsub,___fldiv@a
 12378   0011F6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12379   0011FA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12380   0011FE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12381   001202  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12382   001206  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12383   00120A  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12384   00120E  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12385   001212  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12386   001216  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12387   00121A  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12388   00121E  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12389   001222  ECF0  F02E         	call	___flsub	;wreg free
 12390   001226  C02A  F032         	movff	?___flsub,___fldiv@b
 12391   00122A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12392   00122E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12393   001232  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12394   001236  EC0F  F019         	call	___fldiv	;wreg free
 12395   00123A  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12396   00123E  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12397   001242  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12398   001246  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12399   00124A                     
 12400                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12401   00124A  0E00               	movlw	0
 12402   00124C  6E05               	movwf	___fladd@a^0,c
 12403   00124E  0E00               	movlw	0
 12404   001250  6E06               	movwf	(___fladd@a+1)^0,c
 12405   001252  0E00               	movlw	0
 12406   001254  6E07               	movwf	(___fladd@a+2)^0,c
 12407   001256  0E40               	movlw	64
 12408   001258  6E08               	movwf	(___fladd@a+3)^0,c
 12409   00125A  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12410   00125E  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12411   001262  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12412   001266  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12413   00126A  EC9A  F014         	call	___fladd	;wreg free
 12414   00126E  C001  F011         	movff	?___fladd,___flmul@b
 12415   001272  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12416   001276  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12417   00127A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12418   00127E  0E00               	movlw	0
 12419   001280  6E15               	movwf	___flmul@a^0,c
 12420   001282  0E00               	movlw	0
 12421   001284  6E16               	movwf	(___flmul@a+1)^0,c
 12422   001286  0E70               	movlw	112
 12423   001288  6E17               	movwf	(___flmul@a+2)^0,c
 12424   00128A  0E42               	movlw	66
 12425   00128C  6E18               	movwf	(___flmul@a+3)^0,c
 12426   00128E  ECFA  F016         	call	___flmul	;wreg free
 12427   001292  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12428   001296  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12429   00129A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12430   00129E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12431                           
 12432                           ;color.c: 155:     }
 12433   0012A2  EFBD  F009         	goto	l5409
 12434   0012A6                     l5405:
 12435                           
 12436                           ; BSR set to: 0
 12437                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12438   0012A6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12439   0012AA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12440   0012AE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12441   0012B2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12442   0012B6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12443   0012BA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12444   0012BE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12445   0012C2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12446   0012C6  ECF0  F02E         	call	___flsub	;wreg free
 12447   0012CA  C02A  F036         	movff	?___flsub,___fldiv@a
 12448   0012CE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12449   0012D2  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12450   0012D6  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12451   0012DA  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12452   0012DE  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12453   0012E2  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12454   0012E6  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12455   0012EA  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12456   0012EE  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12457   0012F2  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12458   0012F6  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12459   0012FA  ECF0  F02E         	call	___flsub	;wreg free
 12460   0012FE  C02A  F032         	movff	?___flsub,___fldiv@b
 12461   001302  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12462   001306  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12463   00130A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12464   00130E  EC0F  F019         	call	___fldiv	;wreg free
 12465   001312  C032  F060         	movff	?___fldiv,_Colour_decider$3144
 12466   001316  C033  F061         	movff	?___fldiv+1,_Colour_decider$3144+1
 12467   00131A  C034  F062         	movff	?___fldiv+2,_Colour_decider$3144+2
 12468   00131E  C035  F063         	movff	?___fldiv+3,_Colour_decider$3144+3
 12469   001322                     
 12470                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12471   001322  0E00               	movlw	0
 12472   001324  6E05               	movwf	___fladd@a^0,c
 12473   001326  0E00               	movlw	0
 12474   001328  6E06               	movwf	(___fladd@a+1)^0,c
 12475   00132A  0E80               	movlw	128
 12476   00132C  6E07               	movwf	(___fladd@a+2)^0,c
 12477   00132E  0E40               	movlw	64
 12478   001330  6E08               	movwf	(___fladd@a+3)^0,c
 12479   001332  C060  F001         	movff	_Colour_decider$3144,___fladd@b
 12480   001336  C061  F002         	movff	_Colour_decider$3144+1,___fladd@b+1
 12481   00133A  C062  F003         	movff	_Colour_decider$3144+2,___fladd@b+2
 12482   00133E  C063  F004         	movff	_Colour_decider$3144+3,___fladd@b+3
 12483   001342  EC9A  F014         	call	___fladd	;wreg free
 12484   001346  C001  F011         	movff	?___fladd,___flmul@b
 12485   00134A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12486   00134E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12487   001352  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12488   001356  0E00               	movlw	0
 12489   001358  6E15               	movwf	___flmul@a^0,c
 12490   00135A  0E00               	movlw	0
 12491   00135C  6E16               	movwf	(___flmul@a+1)^0,c
 12492   00135E  0E70               	movlw	112
 12493   001360  6E17               	movwf	(___flmul@a+2)^0,c
 12494   001362  0E42               	movlw	66
 12495   001364  6E18               	movwf	(___flmul@a+3)^0,c
 12496   001366  ECFA  F016         	call	___flmul	;wreg free
 12497   00136A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12498   00136E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12499   001372  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12500   001376  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12501   00137A                     l5409:
 12502                           
 12503                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12504   00137A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12505   00137E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12506   001382  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12507   001386  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12508   00138A  0E00               	movlw	0
 12509   00138C  6E2E               	movwf	___flge@ff2^0,c
 12510   00138E  0E00               	movlw	0
 12511   001390  6E2F               	movwf	(___flge@ff2+1)^0,c
 12512   001392  0EA5               	movlw	165
 12513   001394  6E30               	movwf	(___flge@ff2+2)^0,c
 12514   001396  0E43               	movlw	67
 12515   001398  6E31               	movwf	(___flge@ff2+3)^0,c
 12516   00139A  EC0D  F026         	call	___flge	;wreg free
 12517   00139E  A0D8               	btfss	status,0,c
 12518   0013A0  EFD4  F009         	goto	u5291
 12519   0013A4  EFD6  F009         	goto	u5290
 12520   0013A8                     u5291:
 12521   0013A8  EFF5  F009         	goto	l5419
 12522   0013AC                     u5290:
 12523   0013AC  0E00               	movlw	0
 12524   0013AE  6E2A               	movwf	___flge@ff1^0,c
 12525   0013B0  0E00               	movlw	0
 12526   0013B2  6E2B               	movwf	(___flge@ff1+1)^0,c
 12527   0013B4  0EB4               	movlw	180
 12528   0013B6  6E2C               	movwf	(___flge@ff1+2)^0,c
 12529   0013B8  0E43               	movlw	67
 12530   0013BA  6E2D               	movwf	(___flge@ff1+3)^0,c
 12531   0013BC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12532   0013C0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12533   0013C4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12534   0013C8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12535   0013CC  EC0D  F026         	call	___flge	;wreg free
 12536   0013D0  A0D8               	btfss	status,0,c
 12537   0013D2  EFED  F009         	goto	u5301
 12538   0013D6  EFEF  F009         	goto	u5300
 12539   0013DA                     u5301:
 12540   0013DA  EFF5  F009         	goto	l5419
 12541   0013DE                     u5300:
 12542   0013DE                     
 12543                           ;color.c: 164:         return 1;
 12544   0013DE  0E00               	movlw	0
 12545   0013E0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12546   0013E2  0E01               	movlw	1
 12547   0013E4  6E4B               	movwf	?_Colour_decider^0,c
 12548   0013E6  EF96  F00C         	goto	l76
 12549   0013EA                     l5419:
 12550   0013EA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12551   0013EE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12552   0013F2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12553   0013F6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12554   0013FA  0E00               	movlw	0
 12555   0013FC  6E2E               	movwf	___flge@ff2^0,c
 12556   0013FE  0E00               	movlw	0
 12557   001400  6E2F               	movwf	(___flge@ff2+1)^0,c
 12558   001402  0EA0               	movlw	160
 12559   001404  6E30               	movwf	(___flge@ff2+2)^0,c
 12560   001406  0E40               	movlw	64
 12561   001408  6E31               	movwf	(___flge@ff2+3)^0,c
 12562   00140A  EC0D  F026         	call	___flge	;wreg free
 12563   00140E  A0D8               	btfss	status,0,c
 12564   001410  EF0C  F00A         	goto	u5311
 12565   001414  EF0E  F00A         	goto	u5310
 12566   001418                     u5311:
 12567   001418  EF2D  F00A         	goto	l5429
 12568   00141C                     u5310:
 12569   00141C  0E00               	movlw	0
 12570   00141E  6E2A               	movwf	___flge@ff1^0,c
 12571   001420  0E00               	movlw	0
 12572   001422  6E2B               	movwf	(___flge@ff1+1)^0,c
 12573   001424  0E40               	movlw	64
 12574   001426  6E2C               	movwf	(___flge@ff1+2)^0,c
 12575   001428  0E41               	movlw	65
 12576   00142A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12577   00142C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12578   001430  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12579   001434  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12580   001438  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12581   00143C  EC0D  F026         	call	___flge	;wreg free
 12582   001440  A0D8               	btfss	status,0,c
 12583   001442  EF25  F00A         	goto	u5321
 12584   001446  EF27  F00A         	goto	u5320
 12585   00144A                     u5321:
 12586   00144A  EF2D  F00A         	goto	l5429
 12587   00144E                     u5320:
 12588   00144E                     
 12589                           ;color.c: 168:         return 2;
 12590   00144E  0E00               	movlw	0
 12591   001450  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12592   001452  0E02               	movlw	2
 12593   001454  6E4B               	movwf	?_Colour_decider^0,c
 12594   001456  EF96  F00C         	goto	l76
 12595   00145A                     l5429:
 12596   00145A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12597   00145E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12598   001462  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12599   001466  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12600   00146A  0E00               	movlw	0
 12601   00146C  6E2E               	movwf	___flge@ff2^0,c
 12602   00146E  0E00               	movlw	0
 12603   001470  6E2F               	movwf	(___flge@ff2+1)^0,c
 12604   001472  0EA0               	movlw	160
 12605   001474  6E30               	movwf	(___flge@ff2+2)^0,c
 12606   001476  0E41               	movlw	65
 12607   001478  6E31               	movwf	(___flge@ff2+3)^0,c
 12608   00147A  EC0D  F026         	call	___flge	;wreg free
 12609   00147E  A0D8               	btfss	status,0,c
 12610   001480  EF44  F00A         	goto	u5331
 12611   001484  EF46  F00A         	goto	u5330
 12612   001488                     u5331:
 12613   001488  EFC6  F00A         	goto	l5455
 12614   00148C                     u5330:
 12615   00148C  0E00               	movlw	0
 12616   00148E  6E2A               	movwf	___flge@ff1^0,c
 12617   001490  0E00               	movlw	0
 12618   001492  6E2B               	movwf	(___flge@ff1+1)^0,c
 12619   001494  0EE8               	movlw	232
 12620   001496  6E2C               	movwf	(___flge@ff1+2)^0,c
 12621   001498  0E41               	movlw	65
 12622   00149A  6E2D               	movwf	(___flge@ff1+3)^0,c
 12623   00149C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12624   0014A0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12625   0014A4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12626   0014A8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12627   0014AC  EC0D  F026         	call	___flge	;wreg free
 12628   0014B0  A0D8               	btfss	status,0,c
 12629   0014B2  EF5D  F00A         	goto	u5341
 12630   0014B6  EF5F  F00A         	goto	u5340
 12631   0014BA                     u5341:
 12632   0014BA  EFC6  F00A         	goto	l5455
 12633   0014BE                     u5340:
 12634   0014BE                     
 12635                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
 12636   0014BE  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12637   0014C2  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12638   0014C6  CFDE F02A          	movff	postinc2,___flge@ff1
 12639   0014CA  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12640   0014CE  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12641   0014D2  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12642   0014D6  0ECD               	movlw	205
 12643   0014D8  6E2E               	movwf	___flge@ff2^0,c
 12644   0014DA  0ECC               	movlw	204
 12645   0014DC  6E2F               	movwf	(___flge@ff2+1)^0,c
 12646   0014DE  0E4C               	movlw	76
 12647   0014E0  6E30               	movwf	(___flge@ff2+2)^0,c
 12648   0014E2  0E3E               	movlw	62
 12649   0014E4  6E31               	movwf	(___flge@ff2+3)^0,c
 12650   0014E6  EC0D  F026         	call	___flge	;wreg free
 12651   0014EA  A0D8               	btfss	status,0,c
 12652   0014EC  EF7A  F00A         	goto	u5351
 12653   0014F0  EF7C  F00A         	goto	u5350
 12654   0014F4                     u5351:
 12655   0014F4  EF9B  F00A         	goto	l5443
 12656   0014F8                     u5350:
 12657   0014F8  0E00               	movlw	0
 12658   0014FA  6E2A               	movwf	___flge@ff1^0,c
 12659   0014FC  0E00               	movlw	0
 12660   0014FE  6E2B               	movwf	(___flge@ff1+1)^0,c
 12661   001500  0E80               	movlw	128
 12662   001502  6E2C               	movwf	(___flge@ff1+2)^0,c
 12663   001504  0E3E               	movlw	62
 12664   001506  6E2D               	movwf	(___flge@ff1+3)^0,c
 12665   001508  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 12666   00150C  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 12667   001510  CFDE F02E          	movff	postinc2,___flge@ff2
 12668   001514  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12669   001518  CFDE F030          	movff	postinc2,___flge@ff2+2
 12670   00151C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12671   001520  EC0D  F026         	call	___flge	;wreg free
 12672   001524  A0D8               	btfss	status,0,c
 12673   001526  EF97  F00A         	goto	u5361
 12674   00152A  EF99  F00A         	goto	u5360
 12675   00152E                     u5361:
 12676   00152E  EF9B  F00A         	goto	l5443
 12677   001532                     u5360:
 12678   001532  EF5A  F008         	goto	l5387
 12679   001536                     l5443:
 12680   001536  EE20 F008          	lfsr	2,8
 12681   00153A  504D               	movf	Colour_decider@rel^0,w,c
 12682   00153C  26D9               	addwf	fsr2l,f,c
 12683   00153E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12684   001540  22DA               	addwfc	fsr2h,f,c
 12685   001542  CFDE F02A          	movff	postinc2,___flge@ff1
 12686   001546  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12687   00154A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12688   00154E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12689   001552  0E29               	movlw	41
 12690   001554  6E2E               	movwf	___flge@ff2^0,c
 12691   001556  0E5C               	movlw	92
 12692   001558  6E2F               	movwf	(___flge@ff2+1)^0,c
 12693   00155A  0E0F               	movlw	15
 12694   00155C  6E30               	movwf	(___flge@ff2+2)^0,c
 12695   00155E  0E3E               	movlw	62
 12696   001560  6E31               	movwf	(___flge@ff2+3)^0,c
 12697   001562  EC0D  F026         	call	___flge	;wreg free
 12698   001566  A0D8               	btfss	status,0,c
 12699   001568  EFB8  F00A         	goto	u5371
 12700   00156C  EFBA  F00A         	goto	u5370
 12701   001570                     u5371:
 12702   001570  EFC0  F00A         	goto	l5451
 12703   001574                     u5370:
 12704   001574                     l5445:
 12705                           
 12706                           ;color.c: 179:             return 4;
 12707   001574  0E00               	movlw	0
 12708   001576  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12709   001578  0E04               	movlw	4
 12710   00157A  6E4B               	movwf	?_Colour_decider^0,c
 12711   00157C  EF96  F00C         	goto	l76
 12712   001580                     l5451:
 12713                           
 12714                           ;color.c: 182:             return 3;
 12715   001580  0E00               	movlw	0
 12716   001582  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12717   001584  0E03               	movlw	3
 12718   001586  6E4B               	movwf	?_Colour_decider^0,c
 12719   001588  EF96  F00C         	goto	l76
 12720   00158C                     l5455:
 12721   00158C  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12722   001590  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12723   001594  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12724   001598  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12725   00159C  0E00               	movlw	0
 12726   00159E  6E2E               	movwf	___flge@ff2^0,c
 12727   0015A0  0E00               	movlw	0
 12728   0015A2  6E2F               	movwf	(___flge@ff2+1)^0,c
 12729   0015A4  0E34               	movlw	52
 12730   0015A6  6E30               	movwf	(___flge@ff2+2)^0,c
 12731   0015A8  0E42               	movlw	66
 12732   0015AA  6E31               	movwf	(___flge@ff2+3)^0,c
 12733   0015AC  EC0D  F026         	call	___flge	;wreg free
 12734   0015B0  A0D8               	btfss	status,0,c
 12735   0015B2  EFDD  F00A         	goto	u5381
 12736   0015B6  EFDF  F00A         	goto	u5380
 12737   0015BA                     u5381:
 12738   0015BA  EF44  F00B         	goto	l5479
 12739   0015BE                     u5380:
 12740   0015BE  0E00               	movlw	0
 12741   0015C0  6E2A               	movwf	___flge@ff1^0,c
 12742   0015C2  0E00               	movlw	0
 12743   0015C4  6E2B               	movwf	(___flge@ff1+1)^0,c
 12744   0015C6  0EA0               	movlw	160
 12745   0015C8  6E2C               	movwf	(___flge@ff1+2)^0,c
 12746   0015CA  0E42               	movlw	66
 12747   0015CC  6E2D               	movwf	(___flge@ff1+3)^0,c
 12748   0015CE  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12749   0015D2  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12750   0015D6  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12751   0015DA  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12752   0015DE  EC0D  F026         	call	___flge	;wreg free
 12753   0015E2  A0D8               	btfss	status,0,c
 12754   0015E4  EFF6  F00A         	goto	u5391
 12755   0015E8  EFF8  F00A         	goto	u5390
 12756   0015EC                     u5391:
 12757   0015EC  EF44  F00B         	goto	l5479
 12758   0015F0                     u5390:
 12759   0015F0                     
 12760                           ;color.c: 188:         if(0.15<=rel->B){
 12761   0015F0  EE20 F008          	lfsr	2,8
 12762   0015F4  504D               	movf	Colour_decider@rel^0,w,c
 12763   0015F6  26D9               	addwf	fsr2l,f,c
 12764   0015F8  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12765   0015FA  22DA               	addwfc	fsr2h,f,c
 12766   0015FC  CFDE F02A          	movff	postinc2,___flge@ff1
 12767   001600  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12768   001604  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12769   001608  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12770   00160C  0E9A               	movlw	154
 12771   00160E  6E2E               	movwf	___flge@ff2^0,c
 12772   001610  0E99               	movlw	153
 12773   001612  6E2F               	movwf	(___flge@ff2+1)^0,c
 12774   001614  0E19               	movlw	25
 12775   001616  6E30               	movwf	(___flge@ff2+2)^0,c
 12776   001618  0E3E               	movlw	62
 12777   00161A  6E31               	movwf	(___flge@ff2+3)^0,c
 12778   00161C  EC0D  F026         	call	___flge	;wreg free
 12779   001620  A0D8               	btfss	status,0,c
 12780   001622  EF15  F00B         	goto	u5401
 12781   001626  EF17  F00B         	goto	u5400
 12782   00162A                     u5401:
 12783   00162A  EF19  F00B         	goto	l5467
 12784   00162E                     u5400:
 12785   00162E  EFBA  F00A         	goto	l5445
 12786   001632                     l5467:
 12787   001632  EE20 F008          	lfsr	2,8
 12788   001636  504D               	movf	Colour_decider@rel^0,w,c
 12789   001638  26D9               	addwf	fsr2l,f,c
 12790   00163A  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12791   00163C  22DA               	addwfc	fsr2h,f,c
 12792   00163E  CFDE F02A          	movff	postinc2,___flge@ff1
 12793   001642  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12794   001646  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12795   00164A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12796   00164E  0E8F               	movlw	143
 12797   001650  6E2E               	movwf	___flge@ff2^0,c
 12798   001652  0EC2               	movlw	194
 12799   001654  6E2F               	movwf	(___flge@ff2+1)^0,c
 12800   001656  0EF5               	movlw	245
 12801   001658  6E30               	movwf	(___flge@ff2+2)^0,c
 12802   00165A  0E3D               	movlw	61
 12803   00165C  6E31               	movwf	(___flge@ff2+3)^0,c
 12804   00165E  EC0D  F026         	call	___flge	;wreg free
 12805   001662  A0D8               	btfss	status,0,c
 12806   001664  EF36  F00B         	goto	u5411
 12807   001668  EF38  F00B         	goto	u5410
 12808   00166C                     u5411:
 12809   00166C  EF3E  F00B         	goto	l5475
 12810   001670                     u5410:
 12811   001670                     l5469:
 12812                           
 12813                           ;color.c: 192:             return 6;
 12814   001670  0E00               	movlw	0
 12815   001672  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12816   001674  0E06               	movlw	6
 12817   001676  6E4B               	movwf	?_Colour_decider^0,c
 12818   001678  EF96  F00C         	goto	l76
 12819   00167C                     l5475:
 12820                           
 12821                           ;color.c: 195:             return 5;
 12822   00167C  0E00               	movlw	0
 12823   00167E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12824   001680  0E05               	movlw	5
 12825   001682  6E4B               	movwf	?_Colour_decider^0,c
 12826   001684  EF96  F00C         	goto	l76
 12827   001688                     l5479:
 12828   001688  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12829   00168C  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12830   001690  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12831   001694  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12832   001698  0E00               	movlw	0
 12833   00169A  6E2E               	movwf	___flge@ff2^0,c
 12834   00169C  0E00               	movlw	0
 12835   00169E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12836   0016A0  0EA2               	movlw	162
 12837   0016A2  6E30               	movwf	(___flge@ff2+2)^0,c
 12838   0016A4  0E42               	movlw	66
 12839   0016A6  6E31               	movwf	(___flge@ff2+3)^0,c
 12840   0016A8  EC0D  F026         	call	___flge	;wreg free
 12841   0016AC  A0D8               	btfss	status,0,c
 12842   0016AE  EF5B  F00B         	goto	u5421
 12843   0016B2  EF5D  F00B         	goto	u5420
 12844   0016B6                     u5421:
 12845   0016B6  EF97  F00B         	goto	l5495
 12846   0016BA                     u5420:
 12847   0016BA  0E00               	movlw	0
 12848   0016BC  6E2A               	movwf	___flge@ff1^0,c
 12849   0016BE  0E00               	movlw	0
 12850   0016C0  6E2B               	movwf	(___flge@ff1+1)^0,c
 12851   0016C2  0EE6               	movlw	230
 12852   0016C4  6E2C               	movwf	(___flge@ff1+2)^0,c
 12853   0016C6  0E42               	movlw	66
 12854   0016C8  6E2D               	movwf	(___flge@ff1+3)^0,c
 12855   0016CA  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12856   0016CE  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12857   0016D2  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12858   0016D6  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12859   0016DA  EC0D  F026         	call	___flge	;wreg free
 12860   0016DE  A0D8               	btfss	status,0,c
 12861   0016E0  EF74  F00B         	goto	u5431
 12862   0016E4  EF76  F00B         	goto	u5430
 12863   0016E8                     u5431:
 12864   0016E8  EF97  F00B         	goto	l5495
 12865   0016EC                     u5430:
 12866   0016EC                     
 12867                           ;color.c: 201:         if(0.15<=rel->B){
 12868   0016EC  EE20 F008          	lfsr	2,8
 12869   0016F0  504D               	movf	Colour_decider@rel^0,w,c
 12870   0016F2  26D9               	addwf	fsr2l,f,c
 12871   0016F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 12872   0016F6  22DA               	addwfc	fsr2h,f,c
 12873   0016F8  CFDE F02A          	movff	postinc2,___flge@ff1
 12874   0016FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12875   001700  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12876   001704  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12877   001708  0E9A               	movlw	154
 12878   00170A  6E2E               	movwf	___flge@ff2^0,c
 12879   00170C  0E99               	movlw	153
 12880   00170E  6E2F               	movwf	(___flge@ff2+1)^0,c
 12881   001710  0E19               	movlw	25
 12882   001712  6E30               	movwf	(___flge@ff2+2)^0,c
 12883   001714  0E3E               	movlw	62
 12884   001716  6E31               	movwf	(___flge@ff2+3)^0,c
 12885   001718  EC0D  F026         	call	___flge	;wreg free
 12886   00171C  A0D8               	btfss	status,0,c
 12887   00171E  EF93  F00B         	goto	u5441
 12888   001722  EF95  F00B         	goto	u5440
 12889   001726                     u5441:
 12890   001726  EF38  F00B         	goto	l5469
 12891   00172A                     u5440:
 12892   00172A  EFBA  F00A         	goto	l5445
 12893   00172E                     l5495:
 12894   00172E  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12895   001732  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12896   001736  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12897   00173A  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12898   00173E  0E00               	movlw	0
 12899   001740  6E2E               	movwf	___flge@ff2^0,c
 12900   001742  0E00               	movlw	0
 12901   001744  6E2F               	movwf	(___flge@ff2+1)^0,c
 12902   001746  0EF0               	movlw	240
 12903   001748  6E30               	movwf	(___flge@ff2+2)^0,c
 12904   00174A  0E41               	movlw	65
 12905   00174C  6E31               	movwf	(___flge@ff2+3)^0,c
 12906   00174E  EC0D  F026         	call	___flge	;wreg free
 12907   001752  A0D8               	btfss	status,0,c
 12908   001754  EFAE  F00B         	goto	u5451
 12909   001758  EFB0  F00B         	goto	u5450
 12910   00175C                     u5451:
 12911   00175C  EFC9  F00B         	goto	l5499
 12912   001760                     u5450:
 12913   001760  0E00               	movlw	0
 12914   001762  6E2A               	movwf	___flge@ff1^0,c
 12915   001764  0E00               	movlw	0
 12916   001766  6E2B               	movwf	(___flge@ff1+1)^0,c
 12917   001768  0E68               	movlw	104
 12918   00176A  6E2C               	movwf	(___flge@ff1+2)^0,c
 12919   00176C  0E42               	movlw	66
 12920   00176E  6E2D               	movwf	(___flge@ff1+3)^0,c
 12921   001770  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12922   001774  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12923   001778  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12924   00177C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12925   001780  EC0D  F026         	call	___flge	;wreg free
 12926   001784  B0D8               	btfsc	status,0,c
 12927   001786  EFC7  F00B         	goto	u5461
 12928   00178A  EFC9  F00B         	goto	u5460
 12929   00178E                     u5461:
 12930   00178E  EFBA  F00A         	goto	l5445
 12931   001792                     u5460:
 12932   001792                     l5499:
 12933   001792  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12934   001796  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12935   00179A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12936   00179E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12937   0017A2  0E00               	movlw	0
 12938   0017A4  6E2E               	movwf	___flge@ff2^0,c
 12939   0017A6  0E00               	movlw	0
 12940   0017A8  6E2F               	movwf	(___flge@ff2+1)^0,c
 12941   0017AA  0EF0               	movlw	240
 12942   0017AC  6E30               	movwf	(___flge@ff2+2)^0,c
 12943   0017AE  0E42               	movlw	66
 12944   0017B0  6E31               	movwf	(___flge@ff2+3)^0,c
 12945   0017B2  EC0D  F026         	call	___flge	;wreg free
 12946   0017B6  A0D8               	btfss	status,0,c
 12947   0017B8  EFE0  F00B         	goto	u5471
 12948   0017BC  EFE2  F00B         	goto	u5470
 12949   0017C0                     u5471:
 12950   0017C0  EFFD  F00B         	goto	l5509
 12951   0017C4                     u5470:
 12952   0017C4  0E00               	movlw	0
 12953   0017C6  6E2A               	movwf	___flge@ff1^0,c
 12954   0017C8  0E00               	movlw	0
 12955   0017CA  6E2B               	movwf	(___flge@ff1+1)^0,c
 12956   0017CC  0E5C               	movlw	92
 12957   0017CE  6E2C               	movwf	(___flge@ff1+2)^0,c
 12958   0017D0  0E43               	movlw	67
 12959   0017D2  6E2D               	movwf	(___flge@ff1+3)^0,c
 12960   0017D4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12961   0017D8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12962   0017DC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12963   0017E0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12964   0017E4  EC0D  F026         	call	___flge	;wreg free
 12965   0017E8  A0D8               	btfss	status,0,c
 12966   0017EA  EFF9  F00B         	goto	u5481
 12967   0017EE  EFFB  F00B         	goto	u5480
 12968   0017F2                     u5481:
 12969   0017F2  EFFD  F00B         	goto	l5509
 12970   0017F6                     u5480:
 12971   0017F6  EFBA  F00A         	goto	l5445
 12972   0017FA                     l5509:
 12973   0017FA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12974   0017FE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12975   001802  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12976   001806  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12977   00180A  0E00               	movlw	0
 12978   00180C  6E2E               	movwf	___flge@ff2^0,c
 12979   00180E  0E00               	movlw	0
 12980   001810  6E2F               	movwf	(___flge@ff2+1)^0,c
 12981   001812  0E60               	movlw	96
 12982   001814  6E30               	movwf	(___flge@ff2+2)^0,c
 12983   001816  0E41               	movlw	65
 12984   001818  6E31               	movwf	(___flge@ff2+3)^0,c
 12985   00181A  EC0D  F026         	call	___flge	;wreg free
 12986   00181E  A0D8               	btfss	status,0,c
 12987   001820  EF14  F00C         	goto	u5491
 12988   001824  EF16  F00C         	goto	u5490
 12989   001828                     u5491:
 12990   001828  EF92  F00C         	goto	l5535
 12991   00182C                     u5490:
 12992   00182C  0E00               	movlw	0
 12993   00182E  6E2A               	movwf	___flge@ff1^0,c
 12994   001830  0E00               	movlw	0
 12995   001832  6E2B               	movwf	(___flge@ff1+1)^0,c
 12996   001834  0E98               	movlw	152
 12997   001836  6E2C               	movwf	(___flge@ff1+2)^0,c
 12998   001838  0E41               	movlw	65
 12999   00183A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13000   00183C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13001   001840  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13002   001844  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13003   001848  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13004   00184C  EC0D  F026         	call	___flge	;wreg free
 13005   001850  A0D8               	btfss	status,0,c
 13006   001852  EF2D  F00C         	goto	u5501
 13007   001856  EF2F  F00C         	goto	u5500
 13008   00185A                     u5501:
 13009   00185A  EF92  F00C         	goto	l5535
 13010   00185E                     u5500:
 13011   00185E                     
 13012                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 13013   00185E  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13014   001862  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13015   001866  CFDE F02A          	movff	postinc2,___flge@ff1
 13016   00186A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13017   00186E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13018   001872  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13019   001876  0ECD               	movlw	205
 13020   001878  6E2E               	movwf	___flge@ff2^0,c
 13021   00187A  0ECC               	movlw	204
 13022   00187C  6E2F               	movwf	(___flge@ff2+1)^0,c
 13023   00187E  0E4C               	movlw	76
 13024   001880  6E30               	movwf	(___flge@ff2+2)^0,c
 13025   001882  0E3E               	movlw	62
 13026   001884  6E31               	movwf	(___flge@ff2+3)^0,c
 13027   001886  EC0D  F026         	call	___flge	;wreg free
 13028   00188A  A0D8               	btfss	status,0,c
 13029   00188C  EF4A  F00C         	goto	u5511
 13030   001890  EF4C  F00C         	goto	u5510
 13031   001894                     u5511:
 13032   001894  EF6B  F00C         	goto	l5523
 13033   001898                     u5510:
 13034   001898  0E1F               	movlw	31
 13035   00189A  6E2A               	movwf	___flge@ff1^0,c
 13036   00189C  0E85               	movlw	133
 13037   00189E  6E2B               	movwf	(___flge@ff1+1)^0,c
 13038   0018A0  0E6B               	movlw	107
 13039   0018A2  6E2C               	movwf	(___flge@ff1+2)^0,c
 13040   0018A4  0E3E               	movlw	62
 13041   0018A6  6E2D               	movwf	(___flge@ff1+3)^0,c
 13042   0018A8  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13043   0018AC  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13044   0018B0  CFDE F02E          	movff	postinc2,___flge@ff2
 13045   0018B4  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13046   0018B8  CFDE F030          	movff	postinc2,___flge@ff2+2
 13047   0018BC  CFDE F031          	movff	postinc2,___flge@ff2+3
 13048   0018C0  EC0D  F026         	call	___flge	;wreg free
 13049   0018C4  A0D8               	btfss	status,0,c
 13050   0018C6  EF67  F00C         	goto	u5521
 13051   0018CA  EF69  F00C         	goto	u5520
 13052   0018CE                     u5521:
 13053   0018CE  EF6B  F00C         	goto	l5523
 13054   0018D2                     u5520:
 13055   0018D2  EF5A  F008         	goto	l5387
 13056   0018D6                     l5523:
 13057   0018D6  EE20 F008          	lfsr	2,8
 13058   0018DA  504D               	movf	Colour_decider@rel^0,w,c
 13059   0018DC  26D9               	addwf	fsr2l,f,c
 13060   0018DE  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13061   0018E0  22DA               	addwfc	fsr2h,f,c
 13062   0018E2  CFDE F02A          	movff	postinc2,___flge@ff1
 13063   0018E6  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13064   0018EA  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13065   0018EE  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13066   0018F2  0E9A               	movlw	154
 13067   0018F4  6E2E               	movwf	___flge@ff2^0,c
 13068   0018F6  0E99               	movlw	153
 13069   0018F8  6E2F               	movwf	(___flge@ff2+1)^0,c
 13070   0018FA  0E19               	movlw	25
 13071   0018FC  6E30               	movwf	(___flge@ff2+2)^0,c
 13072   0018FE  0E3E               	movlw	62
 13073   001900  6E31               	movwf	(___flge@ff2+3)^0,c
 13074   001902  EC0D  F026         	call	___flge	;wreg free
 13075   001906  A0D8               	btfss	status,0,c
 13076   001908  EF88  F00C         	goto	u5531
 13077   00190C  EF8A  F00C         	goto	u5530
 13078   001910                     u5531:
 13079   001910  EF8C  F00C         	goto	l5531
 13080   001914                     u5530:
 13081   001914  EFBA  F00A         	goto	l5445
 13082   001918                     l5531:
 13083                           
 13084                           ;color.c: 223:             return 7;
 13085   001918  0E00               	movlw	0
 13086   00191A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13087   00191C  0E07               	movlw	7
 13088   00191E  6E4B               	movwf	?_Colour_decider^0,c
 13089   001920  EF96  F00C         	goto	l76
 13090   001924                     l5535:
 13091                           
 13092                           ;color.c: 227:         return 10;
 13093   001924  0E00               	movlw	0
 13094   001926  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13095   001928  0E0A               	movlw	10
 13096   00192A  6E4B               	movwf	?_Colour_decider^0,c
 13097   00192C                     l76:
 13098   00192C  0012               	return		;funcret
 13099   00192E                     __end_of_Colour_decider:
 13100                           	callstack 0
 13101                           
 13102 ;; *************** function ___xxtofl *****************
 13103 ;; Defined at:
 13104 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  sign            1    wreg     unsigned char 
 13107 ;;  val             4    0[COMRAM] long 
 13108 ;; Auto vars:     Size  Location     Type
 13109 ;;  sign            1    8[COMRAM] unsigned char 
 13110 ;;  arg             4   10[COMRAM] unsigned long 
 13111 ;;  exp             1    9[COMRAM] unsigned char 
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  4    0[COMRAM] unsigned char 
 13114 ;; Registers used:
 13115 ;;		wreg, status,2, status,0
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13122 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13123 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13124 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13125 ;;Total ram usage:       14 bytes
 13126 ;; Hardware stack levels used: 1
 13127 ;; This function calls:
 13128 ;;		Nothing
 13129 ;; This function is called by:
 13130 ;;		_colour_rel
 13131 ;;		_Colour_decider
 13132 ;;		_reverseOneBlock
 13133 ;;		_ForwardOneBlock
 13134 ;;		_Forwardhalfblock
 13135 ;;		_Backhalfblock
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text72
 13140   004508                     __ptext72:
 13141                           	callstack 0
 13142   004508                     ___xxtofl:
 13143                           	callstack 29
 13144                           
 13145                           ;incstack = 0
 13146                           ;___xxtofl@sign stored from wreg
 13147   004508  6E09               	movwf	___xxtofl@sign^0,c
 13148   00450A  5009               	movf	___xxtofl@sign^0,w,c
 13149   00450C  B4D8               	btfsc	status,2,c
 13150   00450E  EF8B  F022         	goto	u5101
 13151   004512  EF8D  F022         	goto	u5100
 13152   004516                     u5101:
 13153   004516  EFAF  F022         	goto	l1349
 13154   00451A                     u5100:
 13155   00451A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13156   00451C  EF94  F022         	goto	u5110
 13157   004520  EF92  F022         	goto	u5111
 13158   004524                     u5111:
 13159   004524  EFAF  F022         	goto	l1349
 13160   004528                     u5110:
 13161   004528  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13162   00452C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13163   004530  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13164   004534  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13165   004538  1E05               	comf	??___xxtofl^0,f,c
 13166   00453A  1E06               	comf	(??___xxtofl+1)^0,f,c
 13167   00453C  1E07               	comf	(??___xxtofl+2)^0,f,c
 13168   00453E  1E08               	comf	(??___xxtofl+3)^0,f,c
 13169   004540  2A05               	incf	??___xxtofl^0,f,c
 13170   004542  0E00               	movlw	0
 13171   004544  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13172   004546  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13173   004548  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13174   00454A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13175   00454E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13176   004552  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13177   004556  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13178   00455A  EFB7  F022         	goto	l5257
 13179   00455E                     l1349:
 13180   00455E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13181   004562  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13182   004566  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13183   00456A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13184   00456E                     l5257:
 13185   00456E  5001               	movf	___xxtofl@val^0,w,c
 13186   004570  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13187   004572  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13188   004574  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13189   004576  A4D8               	btfss	status,2,c
 13190   004578  EFC0  F022         	goto	u5121
 13191   00457C  EFC2  F022         	goto	u5120
 13192   004580                     u5121:
 13193   004580  EFCC  F022         	goto	l5263
 13194   004584                     u5120:
 13195   004584  0E00               	movlw	0
 13196   004586  6E01               	movwf	?___xxtofl^0,c
 13197   004588  0E00               	movlw	0
 13198   00458A  6E02               	movwf	(?___xxtofl+1)^0,c
 13199   00458C  0E00               	movlw	0
 13200   00458E  6E03               	movwf	(?___xxtofl+2)^0,c
 13201   004590  0E00               	movlw	0
 13202   004592  6E04               	movwf	(?___xxtofl+3)^0,c
 13203   004594  EF5D  F023         	goto	l1352
 13204   004598                     l5263:
 13205   004598  0E96               	movlw	150
 13206   00459A  6E0A               	movwf	___xxtofl@exp^0,c
 13207   00459C  EFD6  F022         	goto	l5267
 13208   0045A0                     l5265:
 13209   0045A0  2A0A               	incf	___xxtofl@exp^0,f,c
 13210   0045A2  90D8               	bcf	status,0,c
 13211   0045A4  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13212   0045A6  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13213   0045A8  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13214   0045AA  320B               	rrcf	___xxtofl@arg^0,f,c
 13215   0045AC                     l5267:
 13216   0045AC  0E00               	movlw	0
 13217   0045AE  140B               	andwf	___xxtofl@arg^0,w,c
 13218   0045B0  6E05               	movwf	??___xxtofl^0,c
 13219   0045B2  0E00               	movlw	0
 13220   0045B4  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13221   0045B6  6E06               	movwf	(??___xxtofl+1)^0,c
 13222   0045B8  0E00               	movlw	0
 13223   0045BA  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13224   0045BC  6E07               	movwf	(??___xxtofl+2)^0,c
 13225   0045BE  0EFE               	movlw	254
 13226   0045C0  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13227   0045C2  6E08               	movwf	(??___xxtofl+3)^0,c
 13228   0045C4  5005               	movf	??___xxtofl^0,w,c
 13229   0045C6  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13230   0045C8  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13231   0045CA  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13232   0045CC  A4D8               	btfss	status,2,c
 13233   0045CE  EFEB  F022         	goto	u5131
 13234   0045D2  EFED  F022         	goto	u5130
 13235   0045D6                     u5131:
 13236   0045D6  EFD0  F022         	goto	l5265
 13237   0045DA                     u5130:
 13238   0045DA  EFFB  F022         	goto	l1356
 13239   0045DE                     l5269:
 13240   0045DE  2A0A               	incf	___xxtofl@exp^0,f,c
 13241   0045E0  0E01               	movlw	1
 13242   0045E2  260B               	addwf	___xxtofl@arg^0,f,c
 13243   0045E4  0E00               	movlw	0
 13244   0045E6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13245   0045E8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13246   0045EA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13247   0045EC  90D8               	bcf	status,0,c
 13248   0045EE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13249   0045F0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13250   0045F2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13251   0045F4  320B               	rrcf	___xxtofl@arg^0,f,c
 13252   0045F6                     l1356:
 13253   0045F6  0E00               	movlw	0
 13254   0045F8  140B               	andwf	___xxtofl@arg^0,w,c
 13255   0045FA  6E05               	movwf	??___xxtofl^0,c
 13256   0045FC  0E00               	movlw	0
 13257   0045FE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13258   004600  6E06               	movwf	(??___xxtofl+1)^0,c
 13259   004602  0E00               	movlw	0
 13260   004604  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13261   004606  6E07               	movwf	(??___xxtofl+2)^0,c
 13262   004608  0EFF               	movlw	255
 13263   00460A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13264   00460C  6E08               	movwf	(??___xxtofl+3)^0,c
 13265   00460E  5005               	movf	??___xxtofl^0,w,c
 13266   004610  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13267   004612  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13268   004614  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13269   004616  A4D8               	btfss	status,2,c
 13270   004618  EF10  F023         	goto	u5141
 13271   00461C  EF12  F023         	goto	u5140
 13272   004620                     u5141:
 13273   004620  EFEF  F022         	goto	l5269
 13274   004624                     u5140:
 13275   004624  EF1A  F023         	goto	l5277
 13276   004628                     l5275:
 13277   004628  060A               	decf	___xxtofl@exp^0,f,c
 13278   00462A  90D8               	bcf	status,0,c
 13279   00462C  360B               	rlcf	___xxtofl@arg^0,f,c
 13280   00462E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13281   004630  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13282   004632  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13283   004634                     l5277:
 13284   004634  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13285   004636  EF1F  F023         	goto	u5151
 13286   00463A  EF21  F023         	goto	u5150
 13287   00463E                     u5151:
 13288   00463E  EF29  F023         	goto	l1363
 13289   004642                     u5150:
 13290   004642  0E02               	movlw	2
 13291   004644  600A               	cpfslt	___xxtofl@exp^0,c
 13292   004646  EF27  F023         	goto	u5161
 13293   00464A  EF29  F023         	goto	u5160
 13294   00464E                     u5161:
 13295   00464E  EF14  F023         	goto	l5275
 13296   004652                     u5160:
 13297   004652                     l1363:
 13298   004652  B00A               	btfsc	___xxtofl@exp^0,0,c
 13299   004654  EF2E  F023         	goto	u5171
 13300   004658  EF30  F023         	goto	u5170
 13301   00465C                     u5171:
 13302   00465C  EF31  F023         	goto	l5283
 13303   004660                     u5170:
 13304   004660  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13305   004662                     l5283:
 13306   004662  90D8               	bcf	status,0,c
 13307   004664  320A               	rrcf	___xxtofl@exp^0,f,c
 13308   004666  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13309   00466A  6A06               	clrf	(??___xxtofl+1)^0,c
 13310   00466C  6A07               	clrf	(??___xxtofl+2)^0,c
 13311   00466E  6A08               	clrf	(??___xxtofl+3)^0,c
 13312   004670  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13313   004674  6A07               	clrf	(??___xxtofl+2)^0,c
 13314   004676  6A06               	clrf	(??___xxtofl+1)^0,c
 13315   004678  6A05               	clrf	??___xxtofl^0,c
 13316   00467A  5005               	movf	??___xxtofl^0,w,c
 13317   00467C  120B               	iorwf	___xxtofl@arg^0,f,c
 13318   00467E  5006               	movf	(??___xxtofl+1)^0,w,c
 13319   004680  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13320   004682  5007               	movf	(??___xxtofl+2)^0,w,c
 13321   004684  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13322   004686  5008               	movf	(??___xxtofl+3)^0,w,c
 13323   004688  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13324   00468A  5009               	movf	___xxtofl@sign^0,w,c
 13325   00468C  B4D8               	btfsc	status,2,c
 13326   00468E  EF4B  F023         	goto	u5181
 13327   004692  EF4D  F023         	goto	u5180
 13328   004696                     u5181:
 13329   004696  EF55  F023         	goto	l5293
 13330   00469A                     u5180:
 13331   00469A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13332   00469C  EF54  F023         	goto	u5190
 13333   0046A0  EF52  F023         	goto	u5191
 13334   0046A4                     u5191:
 13335   0046A4  EF55  F023         	goto	l5293
 13336   0046A8                     u5190:
 13337   0046A8  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13338   0046AA                     l5293:
 13339   0046AA  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13340   0046AE  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13341   0046B2  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13342   0046B6  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13343   0046BA                     l1352:
 13344   0046BA  0012               	return		;funcret
 13345   0046BC                     __end_of___xxtofl:
 13346                           	callstack 0
 13347                           
 13348 ;; *************** function ___flsub *****************
 13349 ;; Defined at:
 13350 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13351 ;; Parameters:    Size  Location     Type
 13352 ;;  b               4   41[COMRAM] unsigned char 
 13353 ;;  a               4   45[COMRAM] unsigned char 
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  4   41[COMRAM] unsigned char 
 13358 ;; Registers used:
 13359 ;;		wreg, status,2, status,0, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13365 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13369 ;;Total ram usage:        8 bytes
 13370 ;; Hardware stack levels used: 1
 13371 ;; Hardware stack levels required when called: 1
 13372 ;; This function calls:
 13373 ;;		___fladd
 13374 ;; This function is called by:
 13375 ;;		_Colour_decider
 13376 ;;		_efgtoa
 13377 ;; This function uses a non-reentrant model
 13378 ;;
 13379                           
 13380                           	psect	text73
 13381   005DE0                     __ptext73:
 13382                           	callstack 0
 13383   005DE0                     ___flsub:
 13384                           	callstack 25
 13385   005DE0  0E00               	movlw	0
 13386   005DE2  1A2E               	xorwf	___flsub@a^0,f,c
 13387   005DE4  0E00               	movlw	0
 13388   005DE6  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13389   005DE8  0E00               	movlw	0
 13390   005DEA  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13391   005DEC  0E80               	movlw	128
 13392   005DEE  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13393   005DF0  C02A  F001         	movff	___flsub@b,___fladd@b
 13394   005DF4  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13395   005DF8  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13396   005DFC  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13397   005E00  C02E  F005         	movff	___flsub@a,___fladd@a
 13398   005E04  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13399   005E08  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13400   005E0C  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13401   005E10  EC9A  F014         	call	___fladd	;wreg free
 13402   005E14  C001  F02A         	movff	?___fladd,?___flsub
 13403   005E18  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13404   005E1C  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13405   005E20  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13406   005E24  0012               	return		;funcret
 13407   005E26                     __end_of___flsub:
 13408                           	callstack 0
 13409                           
 13410 ;; *************** function ___fladd *****************
 13411 ;; Defined at:
 13412 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  b               4    0[COMRAM] unsigned char 
 13415 ;;  a               4    4[COMRAM] unsigned char 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  grs             1   15[COMRAM] unsigned char 
 13418 ;;  bexp            1   14[COMRAM] unsigned char 
 13419 ;;  aexp            1   13[COMRAM] unsigned char 
 13420 ;;  signs           1   12[COMRAM] unsigned char 
 13421 ;; Return value:  Size  Location     Type
 13422 ;;                  4    0[COMRAM] unsigned char 
 13423 ;; Registers used:
 13424 ;;		wreg, status,2, status,0
 13425 ;; Tracked objects:
 13426 ;;		On entry : 0/0
 13427 ;;		On exit  : 0/0
 13428 ;;		Unchanged: 0/0
 13429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13430 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13431 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13432 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13433 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13434 ;;Total ram usage:       16 bytes
 13435 ;; Hardware stack levels used: 1
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_colour_rel
 13440 ;;		_Colour_decider
 13441 ;;		___flsub
 13442 ;;		_efgtoa
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           	psect	text74
 13447   002934                     __ptext74:
 13448                           	callstack 0
 13449   002934                     ___fladd:
 13450                           	callstack 25
 13451   002934  5004               	movf	(___fladd@b+3)^0,w,c
 13452   002936  0B80               	andlw	128
 13453   002938  6E0D               	movwf	___fladd@signs^0,c
 13454   00293A  5004               	movf	(___fladd@b+3)^0,w,c
 13455   00293C  2404               	addwf	(___fladd@b+3)^0,w,c
 13456   00293E  6E0F               	movwf	___fladd@bexp^0,c
 13457   002940  AE03               	btfss	(___fladd@b+2)^0,7,c
 13458   002942  EFA5  F014         	goto	u3061
 13459   002946  EFA7  F014         	goto	u3060
 13460   00294A                     u3061:
 13461   00294A  EFA8  F014         	goto	l3899
 13462   00294E                     u3060:
 13463   00294E  800F               	bsf	___fladd@bexp^0,0,c
 13464   002950                     l3899:
 13465   002950  500F               	movf	___fladd@bexp^0,w,c
 13466   002952  B4D8               	btfsc	status,2,c
 13467   002954  EFAE  F014         	goto	u3071
 13468   002958  EFB0  F014         	goto	u3070
 13469   00295C                     u3071:
 13470   00295C  EFC5  F014         	goto	l3909
 13471   002960                     u3070:
 13472   002960  280F               	incf	___fladd@bexp^0,w,c
 13473   002962  A4D8               	btfss	status,2,c
 13474   002964  EFB6  F014         	goto	u3081
 13475   002968  EFB8  F014         	goto	u3080
 13476   00296C                     u3081:
 13477   00296C  EFC0  F014         	goto	l3905
 13478   002970                     u3080:
 13479   002970  0E00               	movlw	0
 13480   002972  6E01               	movwf	___fladd@b^0,c
 13481   002974  0E00               	movlw	0
 13482   002976  6E02               	movwf	(___fladd@b+1)^0,c
 13483   002978  0E00               	movlw	0
 13484   00297A  6E03               	movwf	(___fladd@b+2)^0,c
 13485   00297C  0E00               	movlw	0
 13486   00297E  6E04               	movwf	(___fladd@b+3)^0,c
 13487   002980                     l3905:
 13488   002980  8E03               	bsf	(___fladd@b+2)^0,7,c
 13489   002982  0E00               	movlw	0
 13490   002984  6E04               	movwf	(___fladd@b+3)^0,c
 13491   002986  EFCD  F014         	goto	l3911
 13492   00298A                     l3909:
 13493   00298A  0E00               	movlw	0
 13494   00298C  6E01               	movwf	___fladd@b^0,c
 13495   00298E  0E00               	movlw	0
 13496   002990  6E02               	movwf	(___fladd@b+1)^0,c
 13497   002992  0E00               	movlw	0
 13498   002994  6E03               	movwf	(___fladd@b+2)^0,c
 13499   002996  0E00               	movlw	0
 13500   002998  6E04               	movwf	(___fladd@b+3)^0,c
 13501   00299A                     l3911:
 13502   00299A  5008               	movf	(___fladd@a+3)^0,w,c
 13503   00299C  0B80               	andlw	128
 13504   00299E  6E0E               	movwf	___fladd@aexp^0,c
 13505   0029A0  500D               	movf	___fladd@signs^0,w,c
 13506   0029A2  180E               	xorwf	___fladd@aexp^0,w,c
 13507   0029A4  B4D8               	btfsc	status,2,c
 13508   0029A6  EFD7  F014         	goto	u3091
 13509   0029AA  EFD9  F014         	goto	u3090
 13510   0029AE                     u3091:
 13511   0029AE  EFDA  F014         	goto	l3917
 13512   0029B2                     u3090:
 13513   0029B2  8C0D               	bsf	___fladd@signs^0,6,c
 13514   0029B4                     l3917:
 13515   0029B4  5008               	movf	(___fladd@a+3)^0,w,c
 13516   0029B6  2408               	addwf	(___fladd@a+3)^0,w,c
 13517   0029B8  6E0E               	movwf	___fladd@aexp^0,c
 13518   0029BA  AE07               	btfss	(___fladd@a+2)^0,7,c
 13519   0029BC  EFE2  F014         	goto	u3101
 13520   0029C0  EFE4  F014         	goto	u3100
 13521   0029C4                     u3101:
 13522   0029C4  EFE5  F014         	goto	l3923
 13523   0029C8                     u3100:
 13524   0029C8  800E               	bsf	___fladd@aexp^0,0,c
 13525   0029CA                     l3923:
 13526   0029CA  500E               	movf	___fladd@aexp^0,w,c
 13527   0029CC  B4D8               	btfsc	status,2,c
 13528   0029CE  EFEB  F014         	goto	u3111
 13529   0029D2  EFED  F014         	goto	u3110
 13530   0029D6                     u3111:
 13531   0029D6  EF02  F015         	goto	l3933
 13532   0029DA                     u3110:
 13533   0029DA  280E               	incf	___fladd@aexp^0,w,c
 13534   0029DC  A4D8               	btfss	status,2,c
 13535   0029DE  EFF3  F014         	goto	u3121
 13536   0029E2  EFF5  F014         	goto	u3120
 13537   0029E6                     u3121:
 13538   0029E6  EFFD  F014         	goto	l3929
 13539   0029EA                     u3120:
 13540   0029EA  0E00               	movlw	0
 13541   0029EC  6E05               	movwf	___fladd@a^0,c
 13542   0029EE  0E00               	movlw	0
 13543   0029F0  6E06               	movwf	(___fladd@a+1)^0,c
 13544   0029F2  0E00               	movlw	0
 13545   0029F4  6E07               	movwf	(___fladd@a+2)^0,c
 13546   0029F6  0E00               	movlw	0
 13547   0029F8  6E08               	movwf	(___fladd@a+3)^0,c
 13548   0029FA                     l3929:
 13549   0029FA  8E07               	bsf	(___fladd@a+2)^0,7,c
 13550   0029FC  0E00               	movlw	0
 13551   0029FE  6E08               	movwf	(___fladd@a+3)^0,c
 13552   002A00  EF0A  F015         	goto	l3935
 13553   002A04                     l3933:
 13554   002A04  0E00               	movlw	0
 13555   002A06  6E05               	movwf	___fladd@a^0,c
 13556   002A08  0E00               	movlw	0
 13557   002A0A  6E06               	movwf	(___fladd@a+1)^0,c
 13558   002A0C  0E00               	movlw	0
 13559   002A0E  6E07               	movwf	(___fladd@a+2)^0,c
 13560   002A10  0E00               	movlw	0
 13561   002A12  6E08               	movwf	(___fladd@a+3)^0,c
 13562   002A14                     l3935:
 13563   002A14  500F               	movf	___fladd@bexp^0,w,c
 13564   002A16  5C0E               	subwf	___fladd@aexp^0,w,c
 13565   002A18  B0D8               	btfsc	status,0,c
 13566   002A1A  EF11  F015         	goto	u3131
 13567   002A1E  EF13  F015         	goto	u3130
 13568   002A22                     u3131:
 13569   002A22  EF3A  F015         	goto	l3971
 13570   002A26                     u3130:
 13571   002A26  AC0D               	btfss	___fladd@signs^0,6,c
 13572   002A28  EF18  F015         	goto	u3141
 13573   002A2C  EF1A  F015         	goto	u3140
 13574   002A30                     u3141:
 13575   002A30  EF1C  F015         	goto	l3941
 13576   002A34                     u3140:
 13577   002A34  0E80               	movlw	128
 13578   002A36  1A0D               	xorwf	___fladd@signs^0,f,c
 13579   002A38                     l3941:
 13580   002A38  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13581   002A3C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13582   002A40  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13583   002A44  C001  F010         	movff	___fladd@b,___fladd@grs
 13584   002A48  C005  F001         	movff	___fladd@a,___fladd@b
 13585   002A4C  C010  F005         	movff	___fladd@grs,___fladd@a
 13586   002A50  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13587   002A54  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13588   002A58  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13589   002A5C  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13590   002A60  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13591   002A64  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13592   002A68  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13593   002A6C  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13594   002A70  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13595   002A74                     l3971:
 13596   002A74  0E00               	movlw	0
 13597   002A76  6E10               	movwf	___fladd@grs^0,c
 13598   002A78  500F               	movf	___fladd@bexp^0,w,c
 13599   002A7A  C00E  F009         	movff	___fladd@aexp,??___fladd
 13600   002A7E  6A0A               	clrf	(??___fladd+1)^0,c
 13601   002A80  5E09               	subwf	??___fladd^0,f,c
 13602   002A82  0E00               	movlw	0
 13603   002A84  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13604   002A86  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13605   002A88  EF4F  F015         	goto	u3151
 13606   002A8C  500A               	movf	(??___fladd+1)^0,w,c
 13607   002A8E  E109               	bnz	u3150
 13608   002A90  0E1A               	movlw	26
 13609   002A92  5C09               	subwf	??___fladd^0,w,c
 13610   002A94  A0D8               	btfss	status,0,c
 13611   002A96  EF4F  F015         	goto	u3151
 13612   002A9A  EF51  F015         	goto	u3150
 13613   002A9E                     u3151:
 13614   002A9E  EF88  F015         	goto	l1223
 13615   002AA2                     u3150:
 13616   002AA2  5001               	movf	___fladd@b^0,w,c
 13617   002AA4  1002               	iorwf	(___fladd@b+1)^0,w,c
 13618   002AA6  1003               	iorwf	(___fladd@b+2)^0,w,c
 13619   002AA8  1004               	iorwf	(___fladd@b+3)^0,w,c
 13620   002AAA  A4D8               	btfss	status,2,c
 13621   002AAC  EF5A  F015         	goto	u3161
 13622   002AB0  EF5D  F015         	goto	u3160
 13623   002AB4                     u3161:
 13624   002AB4  0E01               	movlw	1
 13625   002AB6  EF5E  F015         	goto	u3170
 13626   002ABA                     u3160:
 13627   002ABA  0E00               	movlw	0
 13628   002ABC                     u3170:
 13629   002ABC  6E10               	movwf	___fladd@grs^0,c
 13630   002ABE  0E00               	movlw	0
 13631   002AC0  6E01               	movwf	___fladd@b^0,c
 13632   002AC2  0E00               	movlw	0
 13633   002AC4  6E02               	movwf	(___fladd@b+1)^0,c
 13634   002AC6  0E00               	movlw	0
 13635   002AC8  6E03               	movwf	(___fladd@b+2)^0,c
 13636   002ACA  0E00               	movlw	0
 13637   002ACC  6E04               	movwf	(___fladd@b+3)^0,c
 13638   002ACE  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13639   002AD2  EF91  F015         	goto	l1222
 13640   002AD6                     l1224:
 13641   002AD6  A010               	btfss	___fladd@grs^0,0,c
 13642   002AD8  EF70  F015         	goto	u3181
 13643   002ADC  EF72  F015         	goto	u3180
 13644   002AE0                     u3181:
 13645   002AE0  EF78  F015         	goto	l3983
 13646   002AE4                     u3180:
 13647   002AE4  90D8               	bcf	status,0,c
 13648   002AE6  3010               	rrcf	___fladd@grs^0,w,c
 13649   002AE8  0901               	iorlw	1
 13650   002AEA  6E10               	movwf	___fladd@grs^0,c
 13651   002AEC  EF7A  F015         	goto	l3985
 13652   002AF0                     l3983:
 13653   002AF0  90D8               	bcf	status,0,c
 13654   002AF2  3210               	rrcf	___fladd@grs^0,f,c
 13655   002AF4                     l3985:
 13656   002AF4  A001               	btfss	___fladd@b^0,0,c
 13657   002AF6  EF7F  F015         	goto	u3191
 13658   002AFA  EF81  F015         	goto	u3190
 13659   002AFE                     u3191:
 13660   002AFE  EF82  F015         	goto	l3989
 13661   002B02                     u3190:
 13662   002B02  8E10               	bsf	___fladd@grs^0,7,c
 13663   002B04                     l3989:
 13664   002B04  3404               	rlcf	(___fladd@b+3)^0,w,c
 13665   002B06  3204               	rrcf	(___fladd@b+3)^0,f,c
 13666   002B08  3203               	rrcf	(___fladd@b+2)^0,f,c
 13667   002B0A  3202               	rrcf	(___fladd@b+1)^0,f,c
 13668   002B0C  3201               	rrcf	___fladd@b^0,f,c
 13669   002B0E  2A0F               	incf	___fladd@bexp^0,f,c
 13670   002B10                     l1223:
 13671   002B10  500E               	movf	___fladd@aexp^0,w,c
 13672   002B12  5C0F               	subwf	___fladd@bexp^0,w,c
 13673   002B14  A0D8               	btfss	status,0,c
 13674   002B16  EF8F  F015         	goto	u3201
 13675   002B1A  EF91  F015         	goto	u3200
 13676   002B1E                     u3201:
 13677   002B1E  EF6B  F015         	goto	l1224
 13678   002B22                     u3200:
 13679   002B22                     l1222:
 13680   002B22  BC0D               	btfsc	___fladd@signs^0,6,c
 13681   002B24  EF96  F015         	goto	u3211
 13682   002B28  EF98  F015         	goto	u3210
 13683   002B2C                     u3211:
 13684   002B2C  EFD8  F015         	goto	l4017
 13685   002B30                     u3210:
 13686   002B30  500F               	movf	___fladd@bexp^0,w,c
 13687   002B32  A4D8               	btfss	status,2,c
 13688   002B34  EF9E  F015         	goto	u3221
 13689   002B38  EFA0  F015         	goto	u3220
 13690   002B3C                     u3221:
 13691   002B3C  EFAA  F015         	goto	l3999
 13692   002B40                     u3220:
 13693   002B40  0E00               	movlw	0
 13694   002B42  6E01               	movwf	?___fladd^0,c
 13695   002B44  0E00               	movlw	0
 13696   002B46  6E02               	movwf	(?___fladd+1)^0,c
 13697   002B48  0E00               	movlw	0
 13698   002B4A  6E03               	movwf	(?___fladd+2)^0,c
 13699   002B4C  0E00               	movlw	0
 13700   002B4E  6E04               	movwf	(?___fladd+3)^0,c
 13701   002B50  EFF9  F016         	goto	l1231
 13702   002B54                     l3999:
 13703   002B54  5005               	movf	___fladd@a^0,w,c
 13704   002B56  2601               	addwf	___fladd@b^0,f,c
 13705   002B58  5006               	movf	(___fladd@a+1)^0,w,c
 13706   002B5A  2202               	addwfc	(___fladd@b+1)^0,f,c
 13707   002B5C  5007               	movf	(___fladd@a+2)^0,w,c
 13708   002B5E  2203               	addwfc	(___fladd@b+2)^0,f,c
 13709   002B60  5008               	movf	(___fladd@a+3)^0,w,c
 13710   002B62  2204               	addwfc	(___fladd@b+3)^0,f,c
 13711   002B64  A004               	btfss	(___fladd@b+3)^0,0,c
 13712   002B66  EFB7  F015         	goto	u3231
 13713   002B6A  EFB9  F015         	goto	u3230
 13714   002B6E                     u3231:
 13715   002B6E  EF65  F016         	goto	l4053
 13716   002B72                     u3230:
 13717   002B72  A010               	btfss	___fladd@grs^0,0,c
 13718   002B74  EFBE  F015         	goto	u3241
 13719   002B78  EFC0  F015         	goto	u3240
 13720   002B7C                     u3241:
 13721   002B7C  EFC6  F015         	goto	l4007
 13722   002B80                     u3240:
 13723   002B80  90D8               	bcf	status,0,c
 13724   002B82  3010               	rrcf	___fladd@grs^0,w,c
 13725   002B84  0901               	iorlw	1
 13726   002B86  6E10               	movwf	___fladd@grs^0,c
 13727   002B88  EFC8  F015         	goto	l4009
 13728   002B8C                     l4007:
 13729   002B8C  90D8               	bcf	status,0,c
 13730   002B8E  3210               	rrcf	___fladd@grs^0,f,c
 13731   002B90                     l4009:
 13732   002B90  A001               	btfss	___fladd@b^0,0,c
 13733   002B92  EFCD  F015         	goto	u3251
 13734   002B96  EFCF  F015         	goto	u3250
 13735   002B9A                     u3251:
 13736   002B9A  EFD0  F015         	goto	l4013
 13737   002B9E                     u3250:
 13738   002B9E  8E10               	bsf	___fladd@grs^0,7,c
 13739   002BA0                     l4013:
 13740   002BA0  3404               	rlcf	(___fladd@b+3)^0,w,c
 13741   002BA2  3204               	rrcf	(___fladd@b+3)^0,f,c
 13742   002BA4  3203               	rrcf	(___fladd@b+2)^0,f,c
 13743   002BA6  3202               	rrcf	(___fladd@b+1)^0,f,c
 13744   002BA8  3201               	rrcf	___fladd@b^0,f,c
 13745   002BAA  2A0F               	incf	___fladd@bexp^0,f,c
 13746   002BAC  EF65  F016         	goto	l4053
 13747   002BB0                     l4017:
 13748   002BB0  5005               	movf	___fladd@a^0,w,c
 13749   002BB2  5C01               	subwf	___fladd@b^0,w,c
 13750   002BB4  5006               	movf	(___fladd@a+1)^0,w,c
 13751   002BB6  5802               	subwfb	(___fladd@b+1)^0,w,c
 13752   002BB8  5007               	movf	(___fladd@a+2)^0,w,c
 13753   002BBA  5803               	subwfb	(___fladd@b+2)^0,w,c
 13754   002BBC  5004               	movf	(___fladd@b+3)^0,w,c
 13755   002BBE  0A80               	xorlw	128
 13756   002BC0  6E09               	movwf	??___fladd^0,c
 13757   002BC2  5008               	movf	(___fladd@a+3)^0,w,c
 13758   002BC4  0A80               	xorlw	128
 13759   002BC6  5809               	subwfb	??___fladd^0,w,c
 13760   002BC8  B0D8               	btfsc	status,0,c
 13761   002BCA  EFE9  F015         	goto	u3261
 13762   002BCE  EFEB  F015         	goto	u3260
 13763   002BD2                     u3261:
 13764   002BD2  EF16  F016         	goto	l4027
 13765   002BD6                     u3260:
 13766   002BD6  5001               	movf	___fladd@b^0,w,c
 13767   002BD8  5C05               	subwf	___fladd@a^0,w,c
 13768   002BDA  6E09               	movwf	??___fladd^0,c
 13769   002BDC  5002               	movf	(___fladd@b+1)^0,w,c
 13770   002BDE  5806               	subwfb	(___fladd@a+1)^0,w,c
 13771   002BE0  6E0A               	movwf	(??___fladd+1)^0,c
 13772   002BE2  5003               	movf	(___fladd@b+2)^0,w,c
 13773   002BE4  5807               	subwfb	(___fladd@a+2)^0,w,c
 13774   002BE6  6E0B               	movwf	(??___fladd+2)^0,c
 13775   002BE8  5004               	movf	(___fladd@b+3)^0,w,c
 13776   002BEA  5808               	subwfb	(___fladd@a+3)^0,w,c
 13777   002BEC  6E0C               	movwf	(??___fladd+3)^0,c
 13778   002BEE  0EFF               	movlw	255
 13779   002BF0  2409               	addwf	??___fladd^0,w,c
 13780   002BF2  6E01               	movwf	___fladd@b^0,c
 13781   002BF4  0EFF               	movlw	255
 13782   002BF6  200A               	addwfc	(??___fladd+1)^0,w,c
 13783   002BF8  6E02               	movwf	(___fladd@b+1)^0,c
 13784   002BFA  0EFF               	movlw	255
 13785   002BFC  200B               	addwfc	(??___fladd+2)^0,w,c
 13786   002BFE  6E03               	movwf	(___fladd@b+2)^0,c
 13787   002C00  0EFF               	movlw	255
 13788   002C02  200C               	addwfc	(??___fladd+3)^0,w,c
 13789   002C04  6E04               	movwf	(___fladd@b+3)^0,c
 13790   002C06  0E80               	movlw	128
 13791   002C08  1A0D               	xorwf	___fladd@signs^0,f,c
 13792   002C0A  6C10               	negf	___fladd@grs^0,c
 13793   002C0C  5010               	movf	___fladd@grs^0,w,c
 13794   002C0E  A4D8               	btfss	status,2,c
 13795   002C10  EF0C  F016         	goto	u3271
 13796   002C14  EF0E  F016         	goto	u3270
 13797   002C18                     u3271:
 13798   002C18  EF1E  F016         	goto	l1239
 13799   002C1C                     u3270:
 13800   002C1C  0E01               	movlw	1
 13801   002C1E  2601               	addwf	___fladd@b^0,f,c
 13802   002C20  0E00               	movlw	0
 13803   002C22  2202               	addwfc	(___fladd@b+1)^0,f,c
 13804   002C24  2203               	addwfc	(___fladd@b+2)^0,f,c
 13805   002C26  2204               	addwfc	(___fladd@b+3)^0,f,c
 13806   002C28  EF1E  F016         	goto	l1239
 13807   002C2C                     l4027:
 13808   002C2C  5005               	movf	___fladd@a^0,w,c
 13809   002C2E  5E01               	subwf	___fladd@b^0,f,c
 13810   002C30  5006               	movf	(___fladd@a+1)^0,w,c
 13811   002C32  5A02               	subwfb	(___fladd@b+1)^0,f,c
 13812   002C34  5007               	movf	(___fladd@a+2)^0,w,c
 13813   002C36  5A03               	subwfb	(___fladd@b+2)^0,f,c
 13814   002C38  5008               	movf	(___fladd@a+3)^0,w,c
 13815   002C3A  5A04               	subwfb	(___fladd@b+3)^0,f,c
 13816   002C3C                     l1239:
 13817   002C3C  5001               	movf	___fladd@b^0,w,c
 13818   002C3E  1002               	iorwf	(___fladd@b+1)^0,w,c
 13819   002C40  1003               	iorwf	(___fladd@b+2)^0,w,c
 13820   002C42  1004               	iorwf	(___fladd@b+3)^0,w,c
 13821   002C44  A4D8               	btfss	status,2,c
 13822   002C46  EF27  F016         	goto	u3281
 13823   002C4A  EF29  F016         	goto	u3280
 13824   002C4E                     u3281:
 13825   002C4E  EF5E  F016         	goto	l4051
 13826   002C52                     u3280:
 13827   002C52  5010               	movf	___fladd@grs^0,w,c
 13828   002C54  A4D8               	btfss	status,2,c
 13829   002C56  EF2F  F016         	goto	u3291
 13830   002C5A  EF31  F016         	goto	u3290
 13831   002C5E                     u3291:
 13832   002C5E  EF5E  F016         	goto	l4051
 13833   002C62                     u3290:
 13834   002C62  0E00               	movlw	0
 13835   002C64  6E01               	movwf	?___fladd^0,c
 13836   002C66  0E00               	movlw	0
 13837   002C68  6E02               	movwf	(?___fladd+1)^0,c
 13838   002C6A  0E00               	movlw	0
 13839   002C6C  6E03               	movwf	(?___fladd+2)^0,c
 13840   002C6E  0E00               	movlw	0
 13841   002C70  6E04               	movwf	(?___fladd+3)^0,c
 13842   002C72  EFF9  F016         	goto	l1231
 13843   002C76                     l4035:
 13844   002C76  90D8               	bcf	status,0,c
 13845   002C78  3601               	rlcf	___fladd@b^0,f,c
 13846   002C7A  3602               	rlcf	(___fladd@b+1)^0,f,c
 13847   002C7C  3603               	rlcf	(___fladd@b+2)^0,f,c
 13848   002C7E  3604               	rlcf	(___fladd@b+3)^0,f,c
 13849   002C80  AE10               	btfss	___fladd@grs^0,7,c
 13850   002C82  EF45  F016         	goto	u3301
 13851   002C86  EF47  F016         	goto	u3300
 13852   002C8A                     u3301:
 13853   002C8A  EF48  F016         	goto	l4041
 13854   002C8E                     u3300:
 13855   002C8E  8001               	bsf	___fladd@b^0,0,c
 13856   002C90                     l4041:
 13857   002C90  A010               	btfss	___fladd@grs^0,0,c
 13858   002C92  EF4D  F016         	goto	u3311
 13859   002C96  EF4F  F016         	goto	u3310
 13860   002C9A                     u3311:
 13861   002C9A  EF53  F016         	goto	l4045
 13862   002C9E                     u3310:
 13863   002C9E  80D8               	bsf	status,0,c
 13864   002CA0  3610               	rlcf	___fladd@grs^0,f,c
 13865   002CA2  EF55  F016         	goto	l4047
 13866   002CA6                     l4045:
 13867   002CA6  90D8               	bcf	status,0,c
 13868   002CA8  3610               	rlcf	___fladd@grs^0,f,c
 13869   002CAA                     l4047:
 13870   002CAA  500F               	movf	___fladd@bexp^0,w,c
 13871   002CAC  B4D8               	btfsc	status,2,c
 13872   002CAE  EF5B  F016         	goto	u3321
 13873   002CB2  EF5D  F016         	goto	u3320
 13874   002CB6                     u3321:
 13875   002CB6  EF5E  F016         	goto	l4051
 13876   002CBA                     u3320:
 13877   002CBA  060F               	decf	___fladd@bexp^0,f,c
 13878   002CBC                     l4051:
 13879   002CBC  AE03               	btfss	(___fladd@b+2)^0,7,c
 13880   002CBE  EF63  F016         	goto	u3331
 13881   002CC2  EF65  F016         	goto	u3330
 13882   002CC6                     u3331:
 13883   002CC6  EF3B  F016         	goto	l4035
 13884   002CCA                     u3330:
 13885   002CCA                     l4053:
 13886   002CCA  0E00               	movlw	0
 13887   002CCC  6E0E               	movwf	___fladd@aexp^0,c
 13888   002CCE  AE10               	btfss	___fladd@grs^0,7,c
 13889   002CD0  EF6C  F016         	goto	u3341
 13890   002CD4  EF6E  F016         	goto	u3340
 13891   002CD8                     u3341:
 13892   002CD8  EF86  F016         	goto	l1248
 13893   002CDC                     u3340:
 13894   002CDC  C010  F009         	movff	___fladd@grs,??___fladd
 13895   002CE0  0E7F               	movlw	127
 13896   002CE2  1609               	andwf	??___fladd^0,f,c
 13897   002CE4  B4D8               	btfsc	status,2,c
 13898   002CE6  EF77  F016         	goto	u3351
 13899   002CEA  EF79  F016         	goto	u3350
 13900   002CEE                     u3351:
 13901   002CEE  EF7D  F016         	goto	l1249
 13902   002CF2                     u3350:
 13903   002CF2                     l4059:
 13904   002CF2  0E01               	movlw	1
 13905   002CF4  6E0E               	movwf	___fladd@aexp^0,c
 13906   002CF6  EF86  F016         	goto	l1248
 13907   002CFA                     l1249:
 13908   002CFA  A001               	btfss	___fladd@b^0,0,c
 13909   002CFC  EF82  F016         	goto	u3361
 13910   002D00  EF84  F016         	goto	u3360
 13911   002D04                     u3361:
 13912   002D04  EF86  F016         	goto	l1248
 13913   002D08                     u3360:
 13914   002D08  EF79  F016         	goto	l4059
 13915   002D0C                     l1248:
 13916   002D0C  500E               	movf	___fladd@aexp^0,w,c
 13917   002D0E  B4D8               	btfsc	status,2,c
 13918   002D10  EF8C  F016         	goto	u3371
 13919   002D14  EF8E  F016         	goto	u3370
 13920   002D18                     u3371:
 13921   002D18  EFB9  F016         	goto	l4071
 13922   002D1C                     u3370:
 13923   002D1C  0E01               	movlw	1
 13924   002D1E  2601               	addwf	___fladd@b^0,f,c
 13925   002D20  0E00               	movlw	0
 13926   002D22  2202               	addwfc	(___fladd@b+1)^0,f,c
 13927   002D24  2203               	addwfc	(___fladd@b+2)^0,f,c
 13928   002D26  2204               	addwfc	(___fladd@b+3)^0,f,c
 13929   002D28  A004               	btfss	(___fladd@b+3)^0,0,c
 13930   002D2A  EF99  F016         	goto	u3381
 13931   002D2E  EF9B  F016         	goto	u3380
 13932   002D32                     u3381:
 13933   002D32  EFB9  F016         	goto	l4071
 13934   002D36                     u3380:
 13935   002D36  C001  F009         	movff	___fladd@b,??___fladd
 13936   002D3A  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 13937   002D3E  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 13938   002D42  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 13939   002D46  340C               	rlcf	(??___fladd+3)^0,w,c
 13940   002D48  320C               	rrcf	(??___fladd+3)^0,f,c
 13941   002D4A  320B               	rrcf	(??___fladd+2)^0,f,c
 13942   002D4C  320A               	rrcf	(??___fladd+1)^0,f,c
 13943   002D4E  3209               	rrcf	??___fladd^0,f,c
 13944   002D50  C009  F001         	movff	??___fladd,___fladd@b
 13945   002D54  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 13946   002D58  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 13947   002D5C  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 13948   002D60  280F               	incf	___fladd@bexp^0,w,c
 13949   002D62  B4D8               	btfsc	status,2,c
 13950   002D64  EFB6  F016         	goto	u3391
 13951   002D68  EFB8  F016         	goto	u3390
 13952   002D6C                     u3391:
 13953   002D6C  EFB9  F016         	goto	l4071
 13954   002D70                     u3390:
 13955   002D70  2A0F               	incf	___fladd@bexp^0,f,c
 13956   002D72                     l4071:
 13957   002D72  280F               	incf	___fladd@bexp^0,w,c
 13958   002D74  B4D8               	btfsc	status,2,c
 13959   002D76  EFBF  F016         	goto	u3401
 13960   002D7A  EFC1  F016         	goto	u3400
 13961   002D7E                     u3401:
 13962   002D7E  EFC9  F016         	goto	l4075
 13963   002D82                     u3400:
 13964   002D82  500F               	movf	___fladd@bexp^0,w,c
 13965   002D84  A4D8               	btfss	status,2,c
 13966   002D86  EFC7  F016         	goto	u3411
 13967   002D8A  EFC9  F016         	goto	u3410
 13968   002D8E                     u3411:
 13969   002D8E  EFDB  F016         	goto	l4079
 13970   002D92                     u3410:
 13971   002D92                     l4075:
 13972   002D92  0E00               	movlw	0
 13973   002D94  6E01               	movwf	___fladd@b^0,c
 13974   002D96  0E00               	movlw	0
 13975   002D98  6E02               	movwf	(___fladd@b+1)^0,c
 13976   002D9A  0E00               	movlw	0
 13977   002D9C  6E03               	movwf	(___fladd@b+2)^0,c
 13978   002D9E  0E00               	movlw	0
 13979   002DA0  6E04               	movwf	(___fladd@b+3)^0,c
 13980   002DA2  500F               	movf	___fladd@bexp^0,w,c
 13981   002DA4  A4D8               	btfss	status,2,c
 13982   002DA6  EFD7  F016         	goto	u3421
 13983   002DAA  EFD9  F016         	goto	u3420
 13984   002DAE                     u3421:
 13985   002DAE  EFDB  F016         	goto	l4079
 13986   002DB2                     u3420:
 13987   002DB2  0E00               	movlw	0
 13988   002DB4  6E0D               	movwf	___fladd@signs^0,c
 13989   002DB6                     l4079:
 13990   002DB6  A00F               	btfss	___fladd@bexp^0,0,c
 13991   002DB8  EFE0  F016         	goto	u3431
 13992   002DBC  EFE2  F016         	goto	u3430
 13993   002DC0                     u3431:
 13994   002DC0  EFE5  F016         	goto	l4083
 13995   002DC4                     u3430:
 13996   002DC4  8E03               	bsf	(___fladd@b+2)^0,7,c
 13997   002DC6  EFE6  F016         	goto	l4085
 13998   002DCA                     l4083:
 13999   002DCA  9E03               	bcf	(___fladd@b+2)^0,7,c
 14000   002DCC                     l4085:
 14001   002DCC  90D8               	bcf	status,0,c
 14002   002DCE  300F               	rrcf	___fladd@bexp^0,w,c
 14003   002DD0  6E04               	movwf	(___fladd@b+3)^0,c
 14004   002DD2  AE0D               	btfss	___fladd@signs^0,7,c
 14005   002DD4  EFEE  F016         	goto	u3441
 14006   002DD8  EFF0  F016         	goto	u3440
 14007   002DDC                     u3441:
 14008   002DDC  EFF1  F016         	goto	l4091
 14009   002DE0                     u3440:
 14010   002DE0  8E04               	bsf	(___fladd@b+3)^0,7,c
 14011   002DE2                     l4091:
 14012   002DE2  C001  F001         	movff	___fladd@b,?___fladd
 14013   002DE6  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14014   002DEA  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14015   002DEE  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14016   002DF2                     l1231:
 14017   002DF2  0012               	return		;funcret
 14018   002DF4                     __end_of___fladd:
 14019                           	callstack 0
 14020                           
 14021 ;; *************** function ___flmul *****************
 14022 ;; Defined at:
 14023 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;  b               4   16[COMRAM] unsigned char 
 14026 ;;  a               4   20[COMRAM] unsigned char 
 14027 ;; Auto vars:     Size  Location     Type
 14028 ;;  prod            4   35[COMRAM] struct .
 14029 ;;  grs             4   29[COMRAM] unsigned long 
 14030 ;;  temp            2   39[COMRAM] struct .
 14031 ;;  bexp            1   34[COMRAM] unsigned char 
 14032 ;;  aexp            1   33[COMRAM] unsigned char 
 14033 ;;  sign            1   28[COMRAM] unsigned char 
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  4   16[COMRAM] unsigned char 
 14036 ;; Registers used:
 14037 ;;		wreg, status,2, status,0, prodl, prodh
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14043 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;Total ram usage:       25 bytes
 14048 ;; Hardware stack levels used: 1
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_Colour_decider
 14053 ;;		_reverseOneBlock
 14054 ;;		_ForwardOneBlock
 14055 ;;		_Forwardhalfblock
 14056 ;;		_efgtoa
 14057 ;;		_Backhalfblock
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           	psect	text75
 14062   002DF4                     __ptext75:
 14063                           	callstack 0
 14064   002DF4                     ___flmul:
 14065                           	callstack 26
 14066   002DF4  5014               	movf	(___flmul@b+3)^0,w,c
 14067   002DF6  0B80               	andlw	128
 14068   002DF8  6E1D               	movwf	___flmul@sign^0,c
 14069   002DFA  5014               	movf	(___flmul@b+3)^0,w,c
 14070   002DFC  2414               	addwf	(___flmul@b+3)^0,w,c
 14071   002DFE  6E23               	movwf	___flmul@bexp^0,c
 14072   002E00  AE13               	btfss	(___flmul@b+2)^0,7,c
 14073   002E02  EF05  F017         	goto	u3871
 14074   002E06  EF07  F017         	goto	u3870
 14075   002E0A                     u3871:
 14076   002E0A  EF08  F017         	goto	l4365
 14077   002E0E                     u3870:
 14078   002E0E  8023               	bsf	___flmul@bexp^0,0,c
 14079   002E10                     l4365:
 14080   002E10  5023               	movf	___flmul@bexp^0,w,c
 14081   002E12  B4D8               	btfsc	status,2,c
 14082   002E14  EF0E  F017         	goto	u3881
 14083   002E18  EF10  F017         	goto	u3880
 14084   002E1C                     u3881:
 14085   002E1C  EF23  F017         	goto	l4373
 14086   002E20                     u3880:
 14087   002E20  2823               	incf	___flmul@bexp^0,w,c
 14088   002E22  A4D8               	btfss	status,2,c
 14089   002E24  EF16  F017         	goto	u3891
 14090   002E28  EF18  F017         	goto	u3890
 14091   002E2C                     u3891:
 14092   002E2C  EF20  F017         	goto	l4371
 14093   002E30                     u3890:
 14094   002E30  0E00               	movlw	0
 14095   002E32  6E11               	movwf	___flmul@b^0,c
 14096   002E34  0E00               	movlw	0
 14097   002E36  6E12               	movwf	(___flmul@b+1)^0,c
 14098   002E38  0E00               	movlw	0
 14099   002E3A  6E13               	movwf	(___flmul@b+2)^0,c
 14100   002E3C  0E00               	movlw	0
 14101   002E3E  6E14               	movwf	(___flmul@b+3)^0,c
 14102   002E40                     l4371:
 14103   002E40  8E13               	bsf	(___flmul@b+2)^0,7,c
 14104   002E42  EF2B  F017         	goto	l4375
 14105   002E46                     l4373:
 14106   002E46  0E00               	movlw	0
 14107   002E48  6E11               	movwf	___flmul@b^0,c
 14108   002E4A  0E00               	movlw	0
 14109   002E4C  6E12               	movwf	(___flmul@b+1)^0,c
 14110   002E4E  0E00               	movlw	0
 14111   002E50  6E13               	movwf	(___flmul@b+2)^0,c
 14112   002E52  0E00               	movlw	0
 14113   002E54  6E14               	movwf	(___flmul@b+3)^0,c
 14114   002E56                     l4375:
 14115   002E56  5018               	movf	(___flmul@a+3)^0,w,c
 14116   002E58  0B80               	andlw	128
 14117   002E5A  1A1D               	xorwf	___flmul@sign^0,f,c
 14118   002E5C  5018               	movf	(___flmul@a+3)^0,w,c
 14119   002E5E  2418               	addwf	(___flmul@a+3)^0,w,c
 14120   002E60  6E22               	movwf	___flmul@aexp^0,c
 14121   002E62  AE17               	btfss	(___flmul@a+2)^0,7,c
 14122   002E64  EF36  F017         	goto	u3901
 14123   002E68  EF38  F017         	goto	u3900
 14124   002E6C                     u3901:
 14125   002E6C  EF39  F017         	goto	l4383
 14126   002E70                     u3900:
 14127   002E70  8022               	bsf	___flmul@aexp^0,0,c
 14128   002E72                     l4383:
 14129   002E72  5022               	movf	___flmul@aexp^0,w,c
 14130   002E74  B4D8               	btfsc	status,2,c
 14131   002E76  EF3F  F017         	goto	u3911
 14132   002E7A  EF41  F017         	goto	u3910
 14133   002E7E                     u3911:
 14134   002E7E  EF54  F017         	goto	l4391
 14135   002E82                     u3910:
 14136   002E82  2822               	incf	___flmul@aexp^0,w,c
 14137   002E84  A4D8               	btfss	status,2,c
 14138   002E86  EF47  F017         	goto	u3921
 14139   002E8A  EF49  F017         	goto	u3920
 14140   002E8E                     u3921:
 14141   002E8E  EF51  F017         	goto	l4389
 14142   002E92                     u3920:
 14143   002E92  0E00               	movlw	0
 14144   002E94  6E15               	movwf	___flmul@a^0,c
 14145   002E96  0E00               	movlw	0
 14146   002E98  6E16               	movwf	(___flmul@a+1)^0,c
 14147   002E9A  0E00               	movlw	0
 14148   002E9C  6E17               	movwf	(___flmul@a+2)^0,c
 14149   002E9E  0E00               	movlw	0
 14150   002EA0  6E18               	movwf	(___flmul@a+3)^0,c
 14151   002EA2                     l4389:
 14152   002EA2  8E17               	bsf	(___flmul@a+2)^0,7,c
 14153   002EA4  EF5C  F017         	goto	l1308
 14154   002EA8                     l4391:
 14155   002EA8  0E00               	movlw	0
 14156   002EAA  6E15               	movwf	___flmul@a^0,c
 14157   002EAC  0E00               	movlw	0
 14158   002EAE  6E16               	movwf	(___flmul@a+1)^0,c
 14159   002EB0  0E00               	movlw	0
 14160   002EB2  6E17               	movwf	(___flmul@a+2)^0,c
 14161   002EB4  0E00               	movlw	0
 14162   002EB6  6E18               	movwf	(___flmul@a+3)^0,c
 14163   002EB8                     l1308:
 14164   002EB8  5022               	movf	___flmul@aexp^0,w,c
 14165   002EBA  B4D8               	btfsc	status,2,c
 14166   002EBC  EF62  F017         	goto	u3931
 14167   002EC0  EF64  F017         	goto	u3930
 14168   002EC4                     u3931:
 14169   002EC4  EF6C  F017         	goto	l4395
 14170   002EC8                     u3930:
 14171   002EC8  5023               	movf	___flmul@bexp^0,w,c
 14172   002ECA  A4D8               	btfss	status,2,c
 14173   002ECC  EF6A  F017         	goto	u3941
 14174   002ED0  EF6C  F017         	goto	u3940
 14175   002ED4                     u3941:
 14176   002ED4  EF76  F017         	goto	l4399
 14177   002ED8                     u3940:
 14178   002ED8                     l4395:
 14179   002ED8  0E00               	movlw	0
 14180   002EDA  6E11               	movwf	?___flmul^0,c
 14181   002EDC  0E00               	movlw	0
 14182   002EDE  6E12               	movwf	(?___flmul+1)^0,c
 14183   002EE0  0E00               	movlw	0
 14184   002EE2  6E13               	movwf	(?___flmul+2)^0,c
 14185   002EE4  0E00               	movlw	0
 14186   002EE6  6E14               	movwf	(?___flmul+3)^0,c
 14187   002EE8  EF0E  F019         	goto	l1312
 14188   002EEC                     l4399:
 14189   002EEC  5017               	movf	(___flmul@a+2)^0,w,c
 14190   002EEE  0211               	mulwf	___flmul@b^0,c
 14191   002EF0  CFF3 F028          	movff	prodl,___flmul@temp
 14192   002EF4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14193   002EF8  5028               	movf	___flmul@temp^0,w,c
 14194   002EFA  6E1E               	movwf	___flmul@grs^0,c
 14195   002EFC  6A1F               	clrf	(___flmul@grs+1)^0,c
 14196   002EFE  6A20               	clrf	(___flmul@grs+2)^0,c
 14197   002F00  6A21               	clrf	(___flmul@grs+3)^0,c
 14198   002F02  5029               	movf	(___flmul@temp+1)^0,w,c
 14199   002F04  6E24               	movwf	___flmul@prod^0,c
 14200   002F06  6A25               	clrf	(___flmul@prod+1)^0,c
 14201   002F08  6A26               	clrf	(___flmul@prod+2)^0,c
 14202   002F0A  6A27               	clrf	(___flmul@prod+3)^0,c
 14203   002F0C  5016               	movf	(___flmul@a+1)^0,w,c
 14204   002F0E  0212               	mulwf	(___flmul@b+1)^0,c
 14205   002F10  CFF3 F028          	movff	prodl,___flmul@temp
 14206   002F14  CFF4 F029          	movff	prodh,___flmul@temp+1
 14207   002F18  5028               	movf	___flmul@temp^0,w,c
 14208   002F1A  261E               	addwf	___flmul@grs^0,f,c
 14209   002F1C  0E00               	movlw	0
 14210   002F1E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14211   002F20  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14212   002F22  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14213   002F24  5029               	movf	(___flmul@temp+1)^0,w,c
 14214   002F26  2624               	addwf	___flmul@prod^0,f,c
 14215   002F28  0E00               	movlw	0
 14216   002F2A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14217   002F2C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14218   002F2E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14219   002F30  5015               	movf	___flmul@a^0,w,c
 14220   002F32  0213               	mulwf	(___flmul@b+2)^0,c
 14221   002F34  CFF3 F028          	movff	prodl,___flmul@temp
 14222   002F38  CFF4 F029          	movff	prodh,___flmul@temp+1
 14223   002F3C  5028               	movf	___flmul@temp^0,w,c
 14224   002F3E  261E               	addwf	___flmul@grs^0,f,c
 14225   002F40  0E00               	movlw	0
 14226   002F42  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14227   002F44  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14228   002F46  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14229   002F48  5029               	movf	(___flmul@temp+1)^0,w,c
 14230   002F4A  2624               	addwf	___flmul@prod^0,f,c
 14231   002F4C  0E00               	movlw	0
 14232   002F4E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14233   002F50  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14234   002F52  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14235   002F54  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14236   002F58  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14237   002F5C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14238   002F60  6A1E               	clrf	___flmul@grs^0,c
 14239   002F62  5015               	movf	___flmul@a^0,w,c
 14240   002F64  0212               	mulwf	(___flmul@b+1)^0,c
 14241   002F66  CFF3 F028          	movff	prodl,___flmul@temp
 14242   002F6A  CFF4 F029          	movff	prodh,___flmul@temp+1
 14243   002F6E  5028               	movf	___flmul@temp^0,w,c
 14244   002F70  261E               	addwf	___flmul@grs^0,f,c
 14245   002F72  5029               	movf	(___flmul@temp+1)^0,w,c
 14246   002F74  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14247   002F76  0E00               	movlw	0
 14248   002F78  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14249   002F7A  0E00               	movlw	0
 14250   002F7C  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14251   002F7E  5016               	movf	(___flmul@a+1)^0,w,c
 14252   002F80  0211               	mulwf	___flmul@b^0,c
 14253   002F82  CFF3 F028          	movff	prodl,___flmul@temp
 14254   002F86  CFF4 F029          	movff	prodh,___flmul@temp+1
 14255   002F8A  5028               	movf	___flmul@temp^0,w,c
 14256   002F8C  261E               	addwf	___flmul@grs^0,f,c
 14257   002F8E  5029               	movf	(___flmul@temp+1)^0,w,c
 14258   002F90  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14259   002F92  0E00               	movlw	0
 14260   002F94  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14261   002F96  0E00               	movlw	0
 14262   002F98  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14263   002F9A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14264   002F9E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14265   002FA2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14266   002FA6  6A1E               	clrf	___flmul@grs^0,c
 14267   002FA8  5015               	movf	___flmul@a^0,w,c
 14268   002FAA  0211               	mulwf	___flmul@b^0,c
 14269   002FAC  CFF3 F028          	movff	prodl,___flmul@temp
 14270   002FB0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14271   002FB4  5028               	movf	___flmul@temp^0,w,c
 14272   002FB6  261E               	addwf	___flmul@grs^0,f,c
 14273   002FB8  5029               	movf	(___flmul@temp+1)^0,w,c
 14274   002FBA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14275   002FBC  0E00               	movlw	0
 14276   002FBE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14277   002FC0  0E00               	movlw	0
 14278   002FC2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14279   002FC4  5017               	movf	(___flmul@a+2)^0,w,c
 14280   002FC6  0212               	mulwf	(___flmul@b+1)^0,c
 14281   002FC8  CFF3 F028          	movff	prodl,___flmul@temp
 14282   002FCC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14283   002FD0  5028               	movf	___flmul@temp^0,w,c
 14284   002FD2  2624               	addwf	___flmul@prod^0,f,c
 14285   002FD4  5029               	movf	(___flmul@temp+1)^0,w,c
 14286   002FD6  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14287   002FD8  0E00               	movlw	0
 14288   002FDA  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14289   002FDC  0E00               	movlw	0
 14290   002FDE  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14291   002FE0  5016               	movf	(___flmul@a+1)^0,w,c
 14292   002FE2  0213               	mulwf	(___flmul@b+2)^0,c
 14293   002FE4  CFF3 F028          	movff	prodl,___flmul@temp
 14294   002FE8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14295   002FEC  5028               	movf	___flmul@temp^0,w,c
 14296   002FEE  2624               	addwf	___flmul@prod^0,f,c
 14297   002FF0  5029               	movf	(___flmul@temp+1)^0,w,c
 14298   002FF2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14299   002FF4  0E00               	movlw	0
 14300   002FF6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14301   002FF8  0E00               	movlw	0
 14302   002FFA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14303   002FFC  5017               	movf	(___flmul@a+2)^0,w,c
 14304   002FFE  0213               	mulwf	(___flmul@b+2)^0,c
 14305   003000  CFF3 F028          	movff	prodl,___flmul@temp
 14306   003004  CFF4 F029          	movff	prodh,___flmul@temp+1
 14307   003008  5028               	movf	___flmul@temp^0,w,c
 14308   00300A  6E19               	movwf	??___flmul^0,c
 14309   00300C  5029               	movf	(___flmul@temp+1)^0,w,c
 14310   00300E  6E1A               	movwf	(??___flmul+1)^0,c
 14311   003010  6A1B               	clrf	(??___flmul+2)^0,c
 14312   003012  6A1C               	clrf	(??___flmul+3)^0,c
 14313   003014  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14314   003018  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14315   00301C  C019  F01A         	movff	??___flmul,??___flmul+1
 14316   003020  6A19               	clrf	??___flmul^0,c
 14317   003022  5019               	movf	??___flmul^0,w,c
 14318   003024  2624               	addwf	___flmul@prod^0,f,c
 14319   003026  501A               	movf	(??___flmul+1)^0,w,c
 14320   003028  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14321   00302A  501B               	movf	(??___flmul+2)^0,w,c
 14322   00302C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14323   00302E  501C               	movf	(??___flmul+3)^0,w,c
 14324   003030  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14325   003032  C01E  F019         	movff	___flmul@grs,??___flmul
 14326   003036  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14327   00303A  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14328   00303E  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14329   003042  0E19               	movlw	25
 14330   003044  EF29  F018         	goto	u3950
 14331   003048                     u3955:
 14332   003048  90D8               	bcf	status,0,c
 14333   00304A  321C               	rrcf	(??___flmul+3)^0,f,c
 14334   00304C  321B               	rrcf	(??___flmul+2)^0,f,c
 14335   00304E  321A               	rrcf	(??___flmul+1)^0,f,c
 14336   003050  3219               	rrcf	??___flmul^0,f,c
 14337   003052                     u3950:
 14338   003052  2EE8               	decfsz	wreg,f,c
 14339   003054  EF24  F018         	goto	u3955
 14340   003058  5019               	movf	??___flmul^0,w,c
 14341   00305A  2624               	addwf	___flmul@prod^0,f,c
 14342   00305C  501A               	movf	(??___flmul+1)^0,w,c
 14343   00305E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14344   003060  501B               	movf	(??___flmul+2)^0,w,c
 14345   003062  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14346   003064  501C               	movf	(??___flmul+3)^0,w,c
 14347   003066  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14348   003068  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14349   00306C  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14350   003070  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14351   003074  6A1E               	clrf	___flmul@grs^0,c
 14352   003076  5022               	movf	___flmul@aexp^0,w,c
 14353   003078  C023  F019         	movff	___flmul@bexp,??___flmul
 14354   00307C  6A1A               	clrf	(??___flmul+1)^0,c
 14355   00307E  2619               	addwf	??___flmul^0,f,c
 14356   003080  0E00               	movlw	0
 14357   003082  221A               	addwfc	(??___flmul+1)^0,f,c
 14358   003084  0E82               	movlw	130
 14359   003086  2419               	addwf	??___flmul^0,w,c
 14360   003088  6E28               	movwf	___flmul@temp^0,c
 14361   00308A  0EFF               	movlw	255
 14362   00308C  201A               	addwfc	(??___flmul+1)^0,w,c
 14363   00308E  6E29               	movwf	(___flmul@temp+1)^0,c
 14364   003090  EF5F  F018         	goto	l4447
 14365   003094                     l4441:
 14366   003094  90D8               	bcf	status,0,c
 14367   003096  3624               	rlcf	___flmul@prod^0,f,c
 14368   003098  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14369   00309A  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14370   00309C  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14371   00309E  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14372   0030A0  EF54  F018         	goto	u3961
 14373   0030A4  EF56  F018         	goto	u3960
 14374   0030A8                     u3961:
 14375   0030A8  EF57  F018         	goto	l1315
 14376   0030AC                     u3960:
 14377   0030AC  8024               	bsf	___flmul@prod^0,0,c
 14378   0030AE                     l1315:
 14379   0030AE  90D8               	bcf	status,0,c
 14380   0030B0  361E               	rlcf	___flmul@grs^0,f,c
 14381   0030B2  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14382   0030B4  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14383   0030B6  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14384   0030B8  0628               	decf	___flmul@temp^0,f,c
 14385   0030BA  A0D8               	btfss	status,0,c
 14386   0030BC  0629               	decf	(___flmul@temp+1)^0,f,c
 14387   0030BE                     l4447:
 14388   0030BE  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14389   0030C0  EF64  F018         	goto	u3971
 14390   0030C4  EF66  F018         	goto	u3970
 14391   0030C8                     u3971:
 14392   0030C8  EF4A  F018         	goto	l4441
 14393   0030CC                     u3970:
 14394   0030CC  0E00               	movlw	0
 14395   0030CE  6E22               	movwf	___flmul@aexp^0,c
 14396   0030D0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14397   0030D2  EF6D  F018         	goto	u3981
 14398   0030D6  EF6F  F018         	goto	u3980
 14399   0030DA                     u3981:
 14400   0030DA  EF93  F018         	goto	l1317
 14401   0030DE                     u3980:
 14402   0030DE  0EFF               	movlw	255
 14403   0030E0  141E               	andwf	___flmul@grs^0,w,c
 14404   0030E2  6E19               	movwf	??___flmul^0,c
 14405   0030E4  0EFF               	movlw	255
 14406   0030E6  141F               	andwf	(___flmul@grs+1)^0,w,c
 14407   0030E8  6E1A               	movwf	(??___flmul+1)^0,c
 14408   0030EA  0EFF               	movlw	255
 14409   0030EC  1420               	andwf	(___flmul@grs+2)^0,w,c
 14410   0030EE  6E1B               	movwf	(??___flmul+2)^0,c
 14411   0030F0  0E7F               	movlw	127
 14412   0030F2  1421               	andwf	(___flmul@grs+3)^0,w,c
 14413   0030F4  6E1C               	movwf	(??___flmul+3)^0,c
 14414   0030F6  5019               	movf	??___flmul^0,w,c
 14415   0030F8  101A               	iorwf	(??___flmul+1)^0,w,c
 14416   0030FA  101B               	iorwf	(??___flmul+2)^0,w,c
 14417   0030FC  101C               	iorwf	(??___flmul+3)^0,w,c
 14418   0030FE  B4D8               	btfsc	status,2,c
 14419   003100  EF84  F018         	goto	u3991
 14420   003104  EF86  F018         	goto	u3990
 14421   003108                     u3991:
 14422   003108  EF8A  F018         	goto	l1318
 14423   00310C                     u3990:
 14424   00310C                     l4455:
 14425   00310C  0E01               	movlw	1
 14426   00310E  6E22               	movwf	___flmul@aexp^0,c
 14427   003110  EF93  F018         	goto	l1317
 14428   003114                     l1318:
 14429   003114  A024               	btfss	___flmul@prod^0,0,c
 14430   003116  EF8F  F018         	goto	u4001
 14431   00311A  EF91  F018         	goto	u4000
 14432   00311E                     u4001:
 14433   00311E  EF93  F018         	goto	l1317
 14434   003122                     u4000:
 14435   003122  EF86  F018         	goto	l4455
 14436   003126                     l1317:
 14437   003126  5022               	movf	___flmul@aexp^0,w,c
 14438   003128  B4D8               	btfsc	status,2,c
 14439   00312A  EF99  F018         	goto	u4011
 14440   00312E  EF9B  F018         	goto	u4010
 14441   003132                     u4011:
 14442   003132  EFBF  F018         	goto	l4467
 14443   003136                     u4010:
 14444   003136  0E01               	movlw	1
 14445   003138  2624               	addwf	___flmul@prod^0,f,c
 14446   00313A  0E00               	movlw	0
 14447   00313C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14448   00313E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14449   003140  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14450   003142  A027               	btfss	(___flmul@prod+3)^0,0,c
 14451   003144  EFA6  F018         	goto	u4021
 14452   003148  EFA8  F018         	goto	u4020
 14453   00314C                     u4021:
 14454   00314C  EFBF  F018         	goto	l4467
 14455   003150                     u4020:
 14456   003150  C024  F019         	movff	___flmul@prod,??___flmul
 14457   003154  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14458   003158  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14459   00315C  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14460   003160  341C               	rlcf	(??___flmul+3)^0,w,c
 14461   003162  321C               	rrcf	(??___flmul+3)^0,f,c
 14462   003164  321B               	rrcf	(??___flmul+2)^0,f,c
 14463   003166  321A               	rrcf	(??___flmul+1)^0,f,c
 14464   003168  3219               	rrcf	??___flmul^0,f,c
 14465   00316A  C019  F024         	movff	??___flmul,___flmul@prod
 14466   00316E  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14467   003172  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14468   003176  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14469   00317A  4A28               	infsnz	___flmul@temp^0,f,c
 14470   00317C  2A29               	incf	(___flmul@temp+1)^0,f,c
 14471   00317E                     l4467:
 14472   00317E  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14473   003180  EFCA  F018         	goto	u4031
 14474   003184  5029               	movf	(___flmul@temp+1)^0,w,c
 14475   003186  E108               	bnz	u4030
 14476   003188  2828               	incf	___flmul@temp^0,w,c
 14477   00318A  A0D8               	btfss	status,0,c
 14478   00318C  EFCA  F018         	goto	u4031
 14479   003190  EFCC  F018         	goto	u4030
 14480   003194                     u4031:
 14481   003194  EFD6  F018         	goto	l4471
 14482   003198                     u4030:
 14483   003198  0E00               	movlw	0
 14484   00319A  6E24               	movwf	___flmul@prod^0,c
 14485   00319C  0E00               	movlw	0
 14486   00319E  6E25               	movwf	(___flmul@prod+1)^0,c
 14487   0031A0  0E80               	movlw	128
 14488   0031A2  6E26               	movwf	(___flmul@prod+2)^0,c
 14489   0031A4  0E7F               	movlw	127
 14490   0031A6  6E27               	movwf	(___flmul@prod+3)^0,c
 14491   0031A8  EF04  F019         	goto	l4483
 14492   0031AC                     l4471:
 14493   0031AC  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14494   0031AE  EFE3  F018         	goto	u4040
 14495   0031B2  5029               	movf	(___flmul@temp+1)^0,w,c
 14496   0031B4  E106               	bnz	u4041
 14497   0031B6  0428               	decf	___flmul@temp^0,w,c
 14498   0031B8  B0D8               	btfsc	status,0,c
 14499   0031BA  EFE1  F018         	goto	u4041
 14500   0031BE  EFE3  F018         	goto	u4040
 14501   0031C2                     u4041:
 14502   0031C2  EFEF  F018         	goto	l1325
 14503   0031C6                     u4040:
 14504   0031C6  0E00               	movlw	0
 14505   0031C8  6E24               	movwf	___flmul@prod^0,c
 14506   0031CA  0E00               	movlw	0
 14507   0031CC  6E25               	movwf	(___flmul@prod+1)^0,c
 14508   0031CE  0E00               	movlw	0
 14509   0031D0  6E26               	movwf	(___flmul@prod+2)^0,c
 14510   0031D2  0E00               	movlw	0
 14511   0031D4  6E27               	movwf	(___flmul@prod+3)^0,c
 14512   0031D6  0E00               	movlw	0
 14513   0031D8  6E1D               	movwf	___flmul@sign^0,c
 14514   0031DA  EF04  F019         	goto	l4483
 14515   0031DE                     l1325:
 14516   0031DE  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14517   0031E2  0EFF               	movlw	255
 14518   0031E4  1624               	andwf	___flmul@prod^0,f,c
 14519   0031E6  0EFF               	movlw	255
 14520   0031E8  1625               	andwf	(___flmul@prod+1)^0,f,c
 14521   0031EA  0E7F               	movlw	127
 14522   0031EC  1626               	andwf	(___flmul@prod+2)^0,f,c
 14523   0031EE  0E00               	movlw	0
 14524   0031F0  1627               	andwf	(___flmul@prod+3)^0,f,c
 14525   0031F2  A023               	btfss	___flmul@bexp^0,0,c
 14526   0031F4  EFFE  F018         	goto	u4051
 14527   0031F8  EF00  F019         	goto	u4050
 14528   0031FC                     u4051:
 14529   0031FC  EF01  F019         	goto	l4481
 14530   003200                     u4050:
 14531   003200  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14532   003202                     l4481:
 14533   003202  90D8               	bcf	status,0,c
 14534   003204  3023               	rrcf	___flmul@bexp^0,w,c
 14535   003206  6E27               	movwf	(___flmul@prod+3)^0,c
 14536   003208                     l4483:
 14537   003208  501D               	movf	___flmul@sign^0,w,c
 14538   00320A  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14539   00320C  C024  F011         	movff	___flmul@prod,?___flmul
 14540   003210  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14541   003214  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14542   003218  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14543   00321C                     l1312:
 14544   00321C  0012               	return		;funcret
 14545   00321E                     __end_of___flmul:
 14546                           	callstack 0
 14547                           
 14548 ;; *************** function ___flge *****************
 14549 ;; Defined at:
 14550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14551 ;; Parameters:    Size  Location     Type
 14552 ;;  ff1             4   41[COMRAM] unsigned char 
 14553 ;;  ff2             4   45[COMRAM] unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;		None               void
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14568 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14569 ;;Total ram usage:       12 bytes
 14570 ;; Hardware stack levels used: 1
 14571 ;; This function calls:
 14572 ;;		Nothing
 14573 ;; This function is called by:
 14574 ;;		_Colour_decider
 14575 ;;		_efgtoa
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text76
 14580   004C1A                     __ptext76:
 14581                           	callstack 0
 14582   004C1A                     ___flge:
 14583                           	callstack 26
 14584   004C1A  0E00               	movlw	0
 14585   004C1C  142A               	andwf	___flge@ff1^0,w,c
 14586   004C1E  6E32               	movwf	??___flge^0,c
 14587   004C20  0E00               	movlw	0
 14588   004C22  142B               	andwf	(___flge@ff1+1)^0,w,c
 14589   004C24  6E33               	movwf	(??___flge+1)^0,c
 14590   004C26  0E80               	movlw	128
 14591   004C28  142C               	andwf	(___flge@ff1+2)^0,w,c
 14592   004C2A  6E34               	movwf	(??___flge+2)^0,c
 14593   004C2C  0E7F               	movlw	127
 14594   004C2E  142D               	andwf	(___flge@ff1+3)^0,w,c
 14595   004C30  6E35               	movwf	(??___flge+3)^0,c
 14596   004C32  5032               	movf	??___flge^0,w,c
 14597   004C34  1033               	iorwf	(??___flge+1)^0,w,c
 14598   004C36  1034               	iorwf	(??___flge+2)^0,w,c
 14599   004C38  1035               	iorwf	(??___flge+3)^0,w,c
 14600   004C3A  A4D8               	btfss	status,2,c
 14601   004C3C  EF22  F026         	goto	u4091
 14602   004C40  EF24  F026         	goto	u4090
 14603   004C44                     u4091:
 14604   004C44  EF2C  F026         	goto	l4515
 14605   004C48                     u4090:
 14606   004C48  0E00               	movlw	0
 14607   004C4A  6E2A               	movwf	___flge@ff1^0,c
 14608   004C4C  0E00               	movlw	0
 14609   004C4E  6E2B               	movwf	(___flge@ff1+1)^0,c
 14610   004C50  0E00               	movlw	0
 14611   004C52  6E2C               	movwf	(___flge@ff1+2)^0,c
 14612   004C54  0E00               	movlw	0
 14613   004C56  6E2D               	movwf	(___flge@ff1+3)^0,c
 14614   004C58                     l4515:
 14615   004C58  0E00               	movlw	0
 14616   004C5A  142E               	andwf	___flge@ff2^0,w,c
 14617   004C5C  6E32               	movwf	??___flge^0,c
 14618   004C5E  0E00               	movlw	0
 14619   004C60  142F               	andwf	(___flge@ff2+1)^0,w,c
 14620   004C62  6E33               	movwf	(??___flge+1)^0,c
 14621   004C64  0E80               	movlw	128
 14622   004C66  1430               	andwf	(___flge@ff2+2)^0,w,c
 14623   004C68  6E34               	movwf	(??___flge+2)^0,c
 14624   004C6A  0E7F               	movlw	127
 14625   004C6C  1431               	andwf	(___flge@ff2+3)^0,w,c
 14626   004C6E  6E35               	movwf	(??___flge+3)^0,c
 14627   004C70  5032               	movf	??___flge^0,w,c
 14628   004C72  1033               	iorwf	(??___flge+1)^0,w,c
 14629   004C74  1034               	iorwf	(??___flge+2)^0,w,c
 14630   004C76  1035               	iorwf	(??___flge+3)^0,w,c
 14631   004C78  A4D8               	btfss	status,2,c
 14632   004C7A  EF41  F026         	goto	u4101
 14633   004C7E  EF43  F026         	goto	u4100
 14634   004C82                     u4101:
 14635   004C82  EF4B  F026         	goto	l4519
 14636   004C86                     u4100:
 14637   004C86  0E00               	movlw	0
 14638   004C88  6E2E               	movwf	___flge@ff2^0,c
 14639   004C8A  0E00               	movlw	0
 14640   004C8C  6E2F               	movwf	(___flge@ff2+1)^0,c
 14641   004C8E  0E00               	movlw	0
 14642   004C90  6E30               	movwf	(___flge@ff2+2)^0,c
 14643   004C92  0E00               	movlw	0
 14644   004C94  6E31               	movwf	(___flge@ff2+3)^0,c
 14645   004C96                     l4519:
 14646   004C96  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14647   004C98  EF50  F026         	goto	u4111
 14648   004C9C  EF52  F026         	goto	u4110
 14649   004CA0                     u4111:
 14650   004CA0  EF5B  F026         	goto	l4523
 14651   004CA4                     u4110:
 14652   004CA4  6C2A               	negf	___flge@ff1^0,c
 14653   004CA6  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14654   004CA8  B0D8               	btfsc	status,0,c
 14655   004CAA  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14656   004CAC  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14657   004CAE  B0D8               	btfsc	status,0,c
 14658   004CB0  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14659   004CB2  0E80               	movlw	128
 14660   004CB4  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14661   004CB6                     l4523:
 14662   004CB6  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14663   004CB8  EF60  F026         	goto	u4121
 14664   004CBC  EF62  F026         	goto	u4120
 14665   004CC0                     u4121:
 14666   004CC0  EF6B  F026         	goto	l959
 14667   004CC4                     u4120:
 14668   004CC4  6C2E               	negf	___flge@ff2^0,c
 14669   004CC6  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14670   004CC8  B0D8               	btfsc	status,0,c
 14671   004CCA  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14672   004CCC  1E30               	comf	(___flge@ff2+2)^0,f,c
 14673   004CCE  B0D8               	btfsc	status,0,c
 14674   004CD0  2A30               	incf	(___flge@ff2+2)^0,f,c
 14675   004CD2  0E80               	movlw	128
 14676   004CD4  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14677   004CD6                     l959:
 14678   004CD6  0E00               	movlw	0
 14679   004CD8  1A2A               	xorwf	___flge@ff1^0,f,c
 14680   004CDA  0E00               	movlw	0
 14681   004CDC  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14682   004CDE  0E00               	movlw	0
 14683   004CE0  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14684   004CE2  0E80               	movlw	128
 14685   004CE4  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14686   004CE6  0E00               	movlw	0
 14687   004CE8  1A2E               	xorwf	___flge@ff2^0,f,c
 14688   004CEA  0E00               	movlw	0
 14689   004CEC  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 14690   004CEE  0E00               	movlw	0
 14691   004CF0  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 14692   004CF2  0E80               	movlw	128
 14693   004CF4  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 14694   004CF6  502E               	movf	___flge@ff2^0,w,c
 14695   004CF8  5C2A               	subwf	___flge@ff1^0,w,c
 14696   004CFA  502F               	movf	(___flge@ff2+1)^0,w,c
 14697   004CFC  582B               	subwfb	(___flge@ff1+1)^0,w,c
 14698   004CFE  5030               	movf	(___flge@ff2+2)^0,w,c
 14699   004D00  582C               	subwfb	(___flge@ff1+2)^0,w,c
 14700   004D02  5031               	movf	(___flge@ff2+3)^0,w,c
 14701   004D04  582D               	subwfb	(___flge@ff1+3)^0,w,c
 14702   004D06  B0D8               	btfsc	status,0,c
 14703   004D08  EF88  F026         	goto	u4131
 14704   004D0C  EF8A  F026         	goto	u4130
 14705   004D10                     u4131:
 14706   004D10  EF8D  F026         	goto	l4529
 14707   004D14                     u4130:
 14708   004D14  90D8               	bcf	status,0,c
 14709   004D16  EF8E  F026         	goto	l964
 14710   004D1A                     l4529:
 14711   004D1A  80D8               	bsf	status,0,c
 14712   004D1C                     l964:
 14713   004D1C  0012               	return		;funcret
 14714   004D1E                     __end_of___flge:
 14715                           	callstack 0
 14716                           
 14717 ;; *************** function ___fleq *****************
 14718 ;; Defined at:
 14719 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 14720 ;; Parameters:    Size  Location     Type
 14721 ;;  ff1             4   49[COMRAM] unsigned char 
 14722 ;;  ff2             4   53[COMRAM] unsigned char 
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;		None               void
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0
 14729 ;; Tracked objects:
 14730 ;;		On entry : 0/0
 14731 ;;		On exit  : 0/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14734 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14736 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14737 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14738 ;;Total ram usage:       12 bytes
 14739 ;; Hardware stack levels used: 1
 14740 ;; This function calls:
 14741 ;;		Nothing
 14742 ;; This function is called by:
 14743 ;;		_Colour_decider
 14744 ;;		_efgtoa
 14745 ;; This function uses a non-reentrant model
 14746 ;;
 14747                           
 14748                           	psect	text77
 14749   0050FC                     __ptext77:
 14750                           	callstack 0
 14751   0050FC                     ___fleq:
 14752                           	callstack 26
 14753   0050FC  0E00               	movlw	0
 14754   0050FE  1432               	andwf	___fleq@ff1^0,w,c
 14755   005100  6E3A               	movwf	??___fleq^0,c
 14756   005102  0E00               	movlw	0
 14757   005104  1433               	andwf	(___fleq@ff1+1)^0,w,c
 14758   005106  6E3B               	movwf	(??___fleq+1)^0,c
 14759   005108  0E80               	movlw	128
 14760   00510A  1434               	andwf	(___fleq@ff1+2)^0,w,c
 14761   00510C  6E3C               	movwf	(??___fleq+2)^0,c
 14762   00510E  0E7F               	movlw	127
 14763   005110  1435               	andwf	(___fleq@ff1+3)^0,w,c
 14764   005112  6E3D               	movwf	(??___fleq+3)^0,c
 14765   005114  503A               	movf	??___fleq^0,w,c
 14766   005116  103B               	iorwf	(??___fleq+1)^0,w,c
 14767   005118  103C               	iorwf	(??___fleq+2)^0,w,c
 14768   00511A  103D               	iorwf	(??___fleq+3)^0,w,c
 14769   00511C  A4D8               	btfss	status,2,c
 14770   00511E  EF93  F028         	goto	u4061
 14771   005122  EF95  F028         	goto	u4060
 14772   005126                     u4061:
 14773   005126  EF9D  F028         	goto	l4499
 14774   00512A                     u4060:
 14775   00512A  0E00               	movlw	0
 14776   00512C  6E32               	movwf	___fleq@ff1^0,c
 14777   00512E  0E00               	movlw	0
 14778   005130  6E33               	movwf	(___fleq@ff1+1)^0,c
 14779   005132  0E00               	movlw	0
 14780   005134  6E34               	movwf	(___fleq@ff1+2)^0,c
 14781   005136  0E00               	movlw	0
 14782   005138  6E35               	movwf	(___fleq@ff1+3)^0,c
 14783   00513A                     l4499:
 14784   00513A  0E00               	movlw	0
 14785   00513C  1436               	andwf	___fleq@ff2^0,w,c
 14786   00513E  6E3A               	movwf	??___fleq^0,c
 14787   005140  0E00               	movlw	0
 14788   005142  1437               	andwf	(___fleq@ff2+1)^0,w,c
 14789   005144  6E3B               	movwf	(??___fleq+1)^0,c
 14790   005146  0E80               	movlw	128
 14791   005148  1438               	andwf	(___fleq@ff2+2)^0,w,c
 14792   00514A  6E3C               	movwf	(??___fleq+2)^0,c
 14793   00514C  0E7F               	movlw	127
 14794   00514E  1439               	andwf	(___fleq@ff2+3)^0,w,c
 14795   005150  6E3D               	movwf	(??___fleq+3)^0,c
 14796   005152  503A               	movf	??___fleq^0,w,c
 14797   005154  103B               	iorwf	(??___fleq+1)^0,w,c
 14798   005156  103C               	iorwf	(??___fleq+2)^0,w,c
 14799   005158  103D               	iorwf	(??___fleq+3)^0,w,c
 14800   00515A  A4D8               	btfss	status,2,c
 14801   00515C  EFB2  F028         	goto	u4071
 14802   005160  EFB4  F028         	goto	u4070
 14803   005164                     u4071:
 14804   005164  EFBC  F028         	goto	l4503
 14805   005168                     u4070:
 14806   005168  0E00               	movlw	0
 14807   00516A  6E36               	movwf	___fleq@ff2^0,c
 14808   00516C  0E00               	movlw	0
 14809   00516E  6E37               	movwf	(___fleq@ff2+1)^0,c
 14810   005170  0E00               	movlw	0
 14811   005172  6E38               	movwf	(___fleq@ff2+2)^0,c
 14812   005174  0E00               	movlw	0
 14813   005176  6E39               	movwf	(___fleq@ff2+3)^0,c
 14814   005178                     l4503:
 14815   005178  5036               	movf	___fleq@ff2^0,w,c
 14816   00517A  1832               	xorwf	___fleq@ff1^0,w,c
 14817   00517C  E10F               	bnz	u4080
 14818   00517E  5037               	movf	(___fleq@ff2+1)^0,w,c
 14819   005180  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 14820   005182  E10C               	bnz	u4080
 14821   005184  5038               	movf	(___fleq@ff2+2)^0,w,c
 14822   005186  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 14823   005188  E109               	bnz	u4080
 14824   00518A  5039               	movf	(___fleq@ff2+3)^0,w,c
 14825   00518C  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 14826   00518E  B4D8               	btfsc	status,2,c
 14827   005190  EFCC  F028         	goto	u4081
 14828   005194  EFCE  F028         	goto	u4080
 14829   005198                     u4081:
 14830   005198  EFD1  F028         	goto	l4507
 14831   00519C                     u4080:
 14832   00519C  90D8               	bcf	status,0,c
 14833   00519E  EFD2  F028         	goto	l953
 14834   0051A2                     l4507:
 14835   0051A2  80D8               	bsf	status,0,c
 14836   0051A4                     l953:
 14837   0051A4  0012               	return		;funcret
 14838   0051A6                     __end_of___fleq:
 14839                           	callstack 0
 14840                           
 14841 ;; *************** function ___fldiv *****************
 14842 ;; Defined at:
 14843 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 14844 ;; Parameters:    Size  Location     Type
 14845 ;;  b               4   49[COMRAM] unsigned char 
 14846 ;;  a               4   53[COMRAM] unsigned char 
 14847 ;; Auto vars:     Size  Location     Type
 14848 ;;  grs             4   68[COMRAM] unsigned long 
 14849 ;;  rem             4   61[COMRAM] unsigned long 
 14850 ;;  new_exp         2   66[COMRAM] short 
 14851 ;;  aexp            1   73[COMRAM] unsigned char 
 14852 ;;  bexp            1   72[COMRAM] unsigned char 
 14853 ;;  sign            1   65[COMRAM] unsigned char 
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  4   49[COMRAM] unsigned char 
 14856 ;; Registers used:
 14857 ;;		wreg, status,2, status,0
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14864 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14866 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14867 ;;Total ram usage:       25 bytes
 14868 ;; Hardware stack levels used: 1
 14869 ;; This function calls:
 14870 ;;		Nothing
 14871 ;; This function is called by:
 14872 ;;		_colour_rel
 14873 ;;		_Colour_decider
 14874 ;;		_efgtoa
 14875 ;; This function uses a non-reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text78
 14879   00321E                     __ptext78:
 14880                           	callstack 0
 14881   00321E                     ___fldiv:
 14882                           	callstack 26
 14883   00321E  5035               	movf	(___fldiv@b+3)^0,w,c
 14884   003220  0B80               	andlw	128
 14885   003222  6E42               	movwf	___fldiv@sign^0,c
 14886   003224  5035               	movf	(___fldiv@b+3)^0,w,c
 14887   003226  2435               	addwf	(___fldiv@b+3)^0,w,c
 14888   003228  6E49               	movwf	___fldiv@bexp^0,c
 14889   00322A  AE34               	btfss	(___fldiv@b+2)^0,7,c
 14890   00322C  EF1A  F019         	goto	u3641
 14891   003230  EF1C  F019         	goto	u3640
 14892   003234                     u3641:
 14893   003234  EF1D  F019         	goto	l4227
 14894   003238                     u3640:
 14895   003238  8049               	bsf	___fldiv@bexp^0,0,c
 14896   00323A                     l4227:
 14897   00323A  5049               	movf	___fldiv@bexp^0,w,c
 14898   00323C  B4D8               	btfsc	status,2,c
 14899   00323E  EF23  F019         	goto	u3651
 14900   003242  EF25  F019         	goto	u3650
 14901   003246                     u3651:
 14902   003246  EF3A  F019         	goto	l4237
 14903   00324A                     u3650:
 14904   00324A  2849               	incf	___fldiv@bexp^0,w,c
 14905   00324C  A4D8               	btfss	status,2,c
 14906   00324E  EF2B  F019         	goto	u3661
 14907   003252  EF2D  F019         	goto	u3660
 14908   003256                     u3661:
 14909   003256  EF35  F019         	goto	l4233
 14910   00325A                     u3660:
 14911   00325A  0E00               	movlw	0
 14912   00325C  6E32               	movwf	___fldiv@b^0,c
 14913   00325E  0E00               	movlw	0
 14914   003260  6E33               	movwf	(___fldiv@b+1)^0,c
 14915   003262  0E00               	movlw	0
 14916   003264  6E34               	movwf	(___fldiv@b+2)^0,c
 14917   003266  0E00               	movlw	0
 14918   003268  6E35               	movwf	(___fldiv@b+3)^0,c
 14919   00326A                     l4233:
 14920   00326A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14921   00326C  0E00               	movlw	0
 14922   00326E  6E35               	movwf	(___fldiv@b+3)^0,c
 14923   003270  EF42  F019         	goto	l4239
 14924   003274                     l4237:
 14925   003274  0E00               	movlw	0
 14926   003276  6E32               	movwf	___fldiv@b^0,c
 14927   003278  0E00               	movlw	0
 14928   00327A  6E33               	movwf	(___fldiv@b+1)^0,c
 14929   00327C  0E00               	movlw	0
 14930   00327E  6E34               	movwf	(___fldiv@b+2)^0,c
 14931   003280  0E00               	movlw	0
 14932   003282  6E35               	movwf	(___fldiv@b+3)^0,c
 14933   003284                     l4239:
 14934   003284  5039               	movf	(___fldiv@a+3)^0,w,c
 14935   003286  0B80               	andlw	128
 14936   003288  1A42               	xorwf	___fldiv@sign^0,f,c
 14937   00328A  5039               	movf	(___fldiv@a+3)^0,w,c
 14938   00328C  2439               	addwf	(___fldiv@a+3)^0,w,c
 14939   00328E  6E4A               	movwf	___fldiv@aexp^0,c
 14940   003290  AE38               	btfss	(___fldiv@a+2)^0,7,c
 14941   003292  EF4D  F019         	goto	u3671
 14942   003296  EF4F  F019         	goto	u3670
 14943   00329A                     u3671:
 14944   00329A  EF50  F019         	goto	l4247
 14945   00329E                     u3670:
 14946   00329E  804A               	bsf	___fldiv@aexp^0,0,c
 14947   0032A0                     l4247:
 14948   0032A0  504A               	movf	___fldiv@aexp^0,w,c
 14949   0032A2  B4D8               	btfsc	status,2,c
 14950   0032A4  EF56  F019         	goto	u3681
 14951   0032A8  EF58  F019         	goto	u3680
 14952   0032AC                     u3681:
 14953   0032AC  EF6D  F019         	goto	l4257
 14954   0032B0                     u3680:
 14955   0032B0  284A               	incf	___fldiv@aexp^0,w,c
 14956   0032B2  A4D8               	btfss	status,2,c
 14957   0032B4  EF5E  F019         	goto	u3691
 14958   0032B8  EF60  F019         	goto	u3690
 14959   0032BC                     u3691:
 14960   0032BC  EF68  F019         	goto	l4253
 14961   0032C0                     u3690:
 14962   0032C0  0E00               	movlw	0
 14963   0032C2  6E36               	movwf	___fldiv@a^0,c
 14964   0032C4  0E00               	movlw	0
 14965   0032C6  6E37               	movwf	(___fldiv@a+1)^0,c
 14966   0032C8  0E00               	movlw	0
 14967   0032CA  6E38               	movwf	(___fldiv@a+2)^0,c
 14968   0032CC  0E00               	movlw	0
 14969   0032CE  6E39               	movwf	(___fldiv@a+3)^0,c
 14970   0032D0                     l4253:
 14971   0032D0  8E38               	bsf	(___fldiv@a+2)^0,7,c
 14972   0032D2  0E00               	movlw	0
 14973   0032D4  6E39               	movwf	(___fldiv@a+3)^0,c
 14974   0032D6  EF75  F019         	goto	l4259
 14975   0032DA                     l4257:
 14976   0032DA  0E00               	movlw	0
 14977   0032DC  6E36               	movwf	___fldiv@a^0,c
 14978   0032DE  0E00               	movlw	0
 14979   0032E0  6E37               	movwf	(___fldiv@a+1)^0,c
 14980   0032E2  0E00               	movlw	0
 14981   0032E4  6E38               	movwf	(___fldiv@a+2)^0,c
 14982   0032E6  0E00               	movlw	0
 14983   0032E8  6E39               	movwf	(___fldiv@a+3)^0,c
 14984   0032EA                     l4259:
 14985   0032EA  5036               	movf	___fldiv@a^0,w,c
 14986   0032EC  1037               	iorwf	(___fldiv@a+1)^0,w,c
 14987   0032EE  1038               	iorwf	(___fldiv@a+2)^0,w,c
 14988   0032F0  1039               	iorwf	(___fldiv@a+3)^0,w,c
 14989   0032F2  A4D8               	btfss	status,2,c
 14990   0032F4  EF7E  F019         	goto	u3701
 14991   0032F8  EF80  F019         	goto	u3700
 14992   0032FC                     u3701:
 14993   0032FC  EF98  F019         	goto	l4271
 14994   003300                     u3700:
 14995   003300  0E00               	movlw	0
 14996   003302  6E32               	movwf	___fldiv@b^0,c
 14997   003304  0E00               	movlw	0
 14998   003306  6E33               	movwf	(___fldiv@b+1)^0,c
 14999   003308  0E00               	movlw	0
 15000   00330A  6E34               	movwf	(___fldiv@b+2)^0,c
 15001   00330C  0E00               	movlw	0
 15002   00330E  6E35               	movwf	(___fldiv@b+3)^0,c
 15003   003310  0E80               	movlw	128
 15004   003312  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15005   003314  0E7F               	movlw	127
 15006   003316  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15007   003318                     l4265:
 15008   003318  5042               	movf	___fldiv@sign^0,w,c
 15009   00331A  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15010   00331C  C032  F032         	movff	___fldiv@b,?___fldiv
 15011   003320  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15012   003324  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15013   003328  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15014   00332C  EFDB  F01A         	goto	l1276
 15015   003330                     l4271:
 15016   003330  5049               	movf	___fldiv@bexp^0,w,c
 15017   003332  A4D8               	btfss	status,2,c
 15018   003334  EF9E  F019         	goto	u3711
 15019   003338  EFA0  F019         	goto	u3710
 15020   00333C                     u3711:
 15021   00333C  EFAA  F019         	goto	l4279
 15022   003340                     u3710:
 15023   003340  0E00               	movlw	0
 15024   003342  6E32               	movwf	?___fldiv^0,c
 15025   003344  0E00               	movlw	0
 15026   003346  6E33               	movwf	(?___fldiv+1)^0,c
 15027   003348  0E00               	movlw	0
 15028   00334A  6E34               	movwf	(?___fldiv+2)^0,c
 15029   00334C  0E00               	movlw	0
 15030   00334E  6E35               	movwf	(?___fldiv+3)^0,c
 15031   003350  EFDB  F01A         	goto	l1276
 15032   003354                     l4279:
 15033   003354  504A               	movf	___fldiv@aexp^0,w,c
 15034   003356  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15035   00335A  6A3B               	clrf	(??___fldiv+1)^0,c
 15036   00335C  5E3A               	subwf	??___fldiv^0,f,c
 15037   00335E  0E00               	movlw	0
 15038   003360  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15039   003362  0E7F               	movlw	127
 15040   003364  243A               	addwf	??___fldiv^0,w,c
 15041   003366  6E43               	movwf	___fldiv@new_exp^0,c
 15042   003368  0E00               	movlw	0
 15043   00336A  203B               	addwfc	(??___fldiv+1)^0,w,c
 15044   00336C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15045   00336E  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15046   003372  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15047   003376  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15048   00337A  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15049   00337E  0E00               	movlw	0
 15050   003380  6E32               	movwf	___fldiv@b^0,c
 15051   003382  0E00               	movlw	0
 15052   003384  6E33               	movwf	(___fldiv@b+1)^0,c
 15053   003386  0E00               	movlw	0
 15054   003388  6E34               	movwf	(___fldiv@b+2)^0,c
 15055   00338A  0E00               	movlw	0
 15056   00338C  6E35               	movwf	(___fldiv@b+3)^0,c
 15057   00338E  0E00               	movlw	0
 15058   003390  6E45               	movwf	___fldiv@grs^0,c
 15059   003392  0E00               	movlw	0
 15060   003394  6E46               	movwf	(___fldiv@grs+1)^0,c
 15061   003396  0E00               	movlw	0
 15062   003398  6E47               	movwf	(___fldiv@grs+2)^0,c
 15063   00339A  0E00               	movlw	0
 15064   00339C  6E48               	movwf	(___fldiv@grs+3)^0,c
 15065   00339E  0E00               	movlw	0
 15066   0033A0  6E4A               	movwf	___fldiv@aexp^0,c
 15067   0033A2  EF0B  F01A         	goto	l1278
 15068   0033A6                     l4289:
 15069   0033A6  504A               	movf	___fldiv@aexp^0,w,c
 15070   0033A8  B4D8               	btfsc	status,2,c
 15071   0033AA  EFD9  F019         	goto	u3721
 15072   0033AE  EFDB  F019         	goto	u3720
 15073   0033B2                     u3721:
 15074   0033B2  EFF2  F019         	goto	l4297
 15075   0033B6                     u3720:
 15076   0033B6  90D8               	bcf	status,0,c
 15077   0033B8  363E               	rlcf	___fldiv@rem^0,f,c
 15078   0033BA  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15079   0033BC  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15080   0033BE  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15081   0033C0  90D8               	bcf	status,0,c
 15082   0033C2  3632               	rlcf	___fldiv@b^0,f,c
 15083   0033C4  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15084   0033C6  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15085   0033C8  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15086   0033CA  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15087   0033CC  EFEA  F019         	goto	u3731
 15088   0033D0  EFEC  F019         	goto	u3730
 15089   0033D4                     u3731:
 15090   0033D4  EFED  F019         	goto	l1281
 15091   0033D8                     u3730:
 15092   0033D8  8032               	bsf	___fldiv@b^0,0,c
 15093   0033DA                     l1281:
 15094   0033DA  90D8               	bcf	status,0,c
 15095   0033DC  3645               	rlcf	___fldiv@grs^0,f,c
 15096   0033DE  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15097   0033E0  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15098   0033E2  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15099   0033E4                     l4297:
 15100   0033E4  5036               	movf	___fldiv@a^0,w,c
 15101   0033E6  5C3E               	subwf	___fldiv@rem^0,w,c
 15102   0033E8  5037               	movf	(___fldiv@a+1)^0,w,c
 15103   0033EA  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15104   0033EC  5038               	movf	(___fldiv@a+2)^0,w,c
 15105   0033EE  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15106   0033F0  5039               	movf	(___fldiv@a+3)^0,w,c
 15107   0033F2  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15108   0033F4  A0D8               	btfss	status,0,c
 15109   0033F6  EFFF  F019         	goto	u3741
 15110   0033FA  EF01  F01A         	goto	u3740
 15111   0033FE                     u3741:
 15112   0033FE  EF0A  F01A         	goto	l4303
 15113   003402                     u3740:
 15114   003402  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15115   003404  5036               	movf	___fldiv@a^0,w,c
 15116   003406  5E3E               	subwf	___fldiv@rem^0,f,c
 15117   003408  5037               	movf	(___fldiv@a+1)^0,w,c
 15118   00340A  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15119   00340C  5038               	movf	(___fldiv@a+2)^0,w,c
 15120   00340E  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15121   003410  5039               	movf	(___fldiv@a+3)^0,w,c
 15122   003412  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15123   003414                     l4303:
 15124   003414  2A4A               	incf	___fldiv@aexp^0,f,c
 15125   003416                     l1278:
 15126   003416  0E19               	movlw	25
 15127   003418  644A               	cpfsgt	___fldiv@aexp^0,c
 15128   00341A  EF11  F01A         	goto	u3751
 15129   00341E  EF13  F01A         	goto	u3750
 15130   003422                     u3751:
 15131   003422  EFD3  F019         	goto	l4289
 15132   003426                     u3750:
 15133   003426  503E               	movf	___fldiv@rem^0,w,c
 15134   003428  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15135   00342A  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15136   00342C  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15137   00342E  B4D8               	btfsc	status,2,c
 15138   003430  EF1C  F01A         	goto	u3761
 15139   003434  EF1E  F01A         	goto	u3760
 15140   003438                     u3761:
 15141   003438  EF36  F01A         	goto	l4315
 15142   00343C                     u3760:
 15143   00343C  8045               	bsf	___fldiv@grs^0,0,c
 15144   00343E  EF36  F01A         	goto	l4315
 15145   003442                     l4309:
 15146   003442  90D8               	bcf	status,0,c
 15147   003444  3632               	rlcf	___fldiv@b^0,f,c
 15148   003446  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15149   003448  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15150   00344A  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15151   00344C  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15152   00344E  EF2B  F01A         	goto	u3771
 15153   003452  EF2D  F01A         	goto	u3770
 15154   003456                     u3771:
 15155   003456  EF2E  F01A         	goto	l1287
 15156   00345A                     u3770:
 15157   00345A  8032               	bsf	___fldiv@b^0,0,c
 15158   00345C                     l1287:
 15159   00345C  90D8               	bcf	status,0,c
 15160   00345E  3645               	rlcf	___fldiv@grs^0,f,c
 15161   003460  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15162   003462  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15163   003464  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15164   003466  0643               	decf	___fldiv@new_exp^0,f,c
 15165   003468  A0D8               	btfss	status,0,c
 15166   00346A  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15167   00346C                     l4315:
 15168   00346C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15169   00346E  EF3B  F01A         	goto	u3781
 15170   003472  EF3D  F01A         	goto	u3780
 15171   003476                     u3781:
 15172   003476  EF21  F01A         	goto	l4309
 15173   00347A                     u3780:
 15174   00347A  0E00               	movlw	0
 15175   00347C  6E4A               	movwf	___fldiv@aexp^0,c
 15176   00347E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15177   003480  EF44  F01A         	goto	u3791
 15178   003484  EF46  F01A         	goto	u3790
 15179   003488                     u3791:
 15180   003488  EF6A  F01A         	goto	l1289
 15181   00348C                     u3790:
 15182   00348C  0EFF               	movlw	255
 15183   00348E  1445               	andwf	___fldiv@grs^0,w,c
 15184   003490  6E3A               	movwf	??___fldiv^0,c
 15185   003492  0EFF               	movlw	255
 15186   003494  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15187   003496  6E3B               	movwf	(??___fldiv+1)^0,c
 15188   003498  0EFF               	movlw	255
 15189   00349A  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15190   00349C  6E3C               	movwf	(??___fldiv+2)^0,c
 15191   00349E  0E7F               	movlw	127
 15192   0034A0  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15193   0034A2  6E3D               	movwf	(??___fldiv+3)^0,c
 15194   0034A4  503A               	movf	??___fldiv^0,w,c
 15195   0034A6  103B               	iorwf	(??___fldiv+1)^0,w,c
 15196   0034A8  103C               	iorwf	(??___fldiv+2)^0,w,c
 15197   0034AA  103D               	iorwf	(??___fldiv+3)^0,w,c
 15198   0034AC  B4D8               	btfsc	status,2,c
 15199   0034AE  EF5B  F01A         	goto	u3801
 15200   0034B2  EF5D  F01A         	goto	u3800
 15201   0034B6                     u3801:
 15202   0034B6  EF61  F01A         	goto	l1290
 15203   0034BA                     u3800:
 15204   0034BA                     l4323:
 15205   0034BA  0E01               	movlw	1
 15206   0034BC  6E4A               	movwf	___fldiv@aexp^0,c
 15207   0034BE  EF6A  F01A         	goto	l1289
 15208   0034C2                     l1290:
 15209   0034C2  A032               	btfss	___fldiv@b^0,0,c
 15210   0034C4  EF66  F01A         	goto	u3811
 15211   0034C8  EF68  F01A         	goto	u3810
 15212   0034CC                     u3811:
 15213   0034CC  EF6A  F01A         	goto	l1289
 15214   0034D0                     u3810:
 15215   0034D0  EF5D  F01A         	goto	l4323
 15216   0034D4                     l1289:
 15217   0034D4  504A               	movf	___fldiv@aexp^0,w,c
 15218   0034D6  B4D8               	btfsc	status,2,c
 15219   0034D8  EF70  F01A         	goto	u3821
 15220   0034DC  EF72  F01A         	goto	u3820
 15221   0034E0                     u3821:
 15222   0034E0  EF96  F01A         	goto	l4335
 15223   0034E4                     u3820:
 15224   0034E4  0E01               	movlw	1
 15225   0034E6  2632               	addwf	___fldiv@b^0,f,c
 15226   0034E8  0E00               	movlw	0
 15227   0034EA  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15228   0034EC  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15229   0034EE  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15230   0034F0  A035               	btfss	(___fldiv@b+3)^0,0,c
 15231   0034F2  EF7D  F01A         	goto	u3831
 15232   0034F6  EF7F  F01A         	goto	u3830
 15233   0034FA                     u3831:
 15234   0034FA  EF96  F01A         	goto	l4335
 15235   0034FE                     u3830:
 15236   0034FE  C032  F03A         	movff	___fldiv@b,??___fldiv
 15237   003502  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15238   003506  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15239   00350A  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15240   00350E  343D               	rlcf	(??___fldiv+3)^0,w,c
 15241   003510  323D               	rrcf	(??___fldiv+3)^0,f,c
 15242   003512  323C               	rrcf	(??___fldiv+2)^0,f,c
 15243   003514  323B               	rrcf	(??___fldiv+1)^0,f,c
 15244   003516  323A               	rrcf	??___fldiv^0,f,c
 15245   003518  C03A  F032         	movff	??___fldiv,___fldiv@b
 15246   00351C  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15247   003520  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15248   003524  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15249   003528  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15250   00352A  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15251   00352C                     l4335:
 15252   00352C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15253   00352E  EFA1  F01A         	goto	u3841
 15254   003532  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15255   003534  E108               	bnz	u3840
 15256   003536  2843               	incf	___fldiv@new_exp^0,w,c
 15257   003538  A0D8               	btfss	status,0,c
 15258   00353A  EFA1  F01A         	goto	u3841
 15259   00353E  EFA3  F01A         	goto	u3840
 15260   003542                     u3841:
 15261   003542  EFAE  F01A         	goto	l4339
 15262   003546                     u3840:
 15263   003546  0E00               	movlw	0
 15264   003548  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15265   00354A  6843               	setf	___fldiv@new_exp^0,c
 15266   00354C  0E00               	movlw	0
 15267   00354E  6E32               	movwf	___fldiv@b^0,c
 15268   003550  0E00               	movlw	0
 15269   003552  6E33               	movwf	(___fldiv@b+1)^0,c
 15270   003554  0E00               	movlw	0
 15271   003556  6E34               	movwf	(___fldiv@b+2)^0,c
 15272   003558  0E00               	movlw	0
 15273   00355A  6E35               	movwf	(___fldiv@b+3)^0,c
 15274   00355C                     l4339:
 15275   00355C  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15276   00355E  EFBB  F01A         	goto	u3850
 15277   003562  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15278   003564  E106               	bnz	u3851
 15279   003566  0443               	decf	___fldiv@new_exp^0,w,c
 15280   003568  B0D8               	btfsc	status,0,c
 15281   00356A  EFB9  F01A         	goto	u3851
 15282   00356E  EFBB  F01A         	goto	u3850
 15283   003572                     u3851:
 15284   003572  EFC9  F01A         	goto	l4343
 15285   003576                     u3850:
 15286   003576  0E00               	movlw	0
 15287   003578  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15288   00357A  0E00               	movlw	0
 15289   00357C  6E43               	movwf	___fldiv@new_exp^0,c
 15290   00357E  0E00               	movlw	0
 15291   003580  6E32               	movwf	___fldiv@b^0,c
 15292   003582  0E00               	movlw	0
 15293   003584  6E33               	movwf	(___fldiv@b+1)^0,c
 15294   003586  0E00               	movlw	0
 15295   003588  6E34               	movwf	(___fldiv@b+2)^0,c
 15296   00358A  0E00               	movlw	0
 15297   00358C  6E35               	movwf	(___fldiv@b+3)^0,c
 15298   00358E  0E00               	movlw	0
 15299   003590  6E42               	movwf	___fldiv@sign^0,c
 15300   003592                     l4343:
 15301   003592  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15302   003596  A049               	btfss	___fldiv@bexp^0,0,c
 15303   003598  EFD0  F01A         	goto	u3861
 15304   00359C  EFD2  F01A         	goto	u3860
 15305   0035A0                     u3861:
 15306   0035A0  EFD5  F01A         	goto	l4349
 15307   0035A4                     u3860:
 15308   0035A4  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15309   0035A6  EFD6  F01A         	goto	l4351
 15310   0035AA                     l4349:
 15311   0035AA  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15312   0035AC                     l4351:
 15313   0035AC  90D8               	bcf	status,0,c
 15314   0035AE  3049               	rrcf	___fldiv@bexp^0,w,c
 15315   0035B0  6E35               	movwf	(___fldiv@b+3)^0,c
 15316   0035B2  EF8C  F019         	goto	l4265
 15317   0035B6                     l1276:
 15318   0035B6  0012               	return		;funcret
 15319   0035B8                     __end_of___fldiv:
 15320                           	callstack 0
 15321                           
 15322                           	psect	rparam
 15323   000000                     
 15324                           	psect	idloc
 15325                           
 15326                           ;Config register IDLOC0 @ 0x200000
 15327                           ;	unspecified, using default values
 15328   200000                     	org	2097152
 15329   200000  0FFF               	dw	4095
 15330                           
 15331                           ;Config register IDLOC1 @ 0x200002
 15332                           ;	unspecified, using default values
 15333   200002                     	org	2097154
 15334   200002  0FFF               	dw	4095
 15335                           
 15336                           ;Config register IDLOC2 @ 0x200004
 15337                           ;	unspecified, using default values
 15338   200004                     	org	2097156
 15339   200004  0FFF               	dw	4095
 15340                           
 15341                           ;Config register IDLOC3 @ 0x200006
 15342                           ;	unspecified, using default values
 15343   200006                     	org	2097158
 15344   200006  0FFF               	dw	4095
 15345                           
 15346                           ;Config register IDLOC4 @ 0x200008
 15347                           ;	unspecified, using default values
 15348   200008                     	org	2097160
 15349   200008  0FFF               	dw	4095
 15350                           
 15351                           ;Config register IDLOC5 @ 0x20000A
 15352                           ;	unspecified, using default values
 15353   20000A                     	org	2097162
 15354   20000A  0FFF               	dw	4095
 15355                           
 15356                           ;Config register IDLOC6 @ 0x20000C
 15357                           ;	unspecified, using default values
 15358   20000C                     	org	2097164
 15359   20000C  0FFF               	dw	4095
 15360                           
 15361                           ;Config register IDLOC7 @ 0x20000E
 15362                           ;	unspecified, using default values
 15363   20000E                     	org	2097166
 15364   20000E  0FFF               	dw	4095
 15365                           
 15366                           	psect	config
 15367                           
 15368                           ;Config register CONFIG1L @ 0x300000
 15369                           ;	External Oscillator mode Selection bits
 15370                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15371                           ;	Power-up default value for COSC bits
 15372                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15373   300000                     	org	3145728
 15374   300000  AA                 	db	170
 15375                           
 15376                           ;Config register CONFIG1H @ 0x300001
 15377                           ;	unspecified, using default values
 15378                           ;	Clock Out Enable bit
 15379                           ;	CLKOUTEN = 0x1, unprogrammed default
 15380                           ;	Clock Switch Enable bit
 15381                           ;	CSWEN = 0x1, unprogrammed default
 15382                           ;	Fail-Safe Clock Monitor Enable bit
 15383                           ;	FCMEN = 0x1, unprogrammed default
 15384   300001                     	org	3145729
 15385   300001  FF                 	db	255
 15386                           
 15387                           ;Config register CONFIG2L @ 0x300002
 15388                           ;	unspecified, using default values
 15389                           ;	Master Clear Enable bit
 15390                           ;	MCLRE = 0x1, unprogrammed default
 15391                           ;	Power-up Timer Enable bit
 15392                           ;	PWRTE = 0x1, unprogrammed default
 15393                           ;	Low-power BOR enable bit
 15394                           ;	LPBOREN = 0x1, unprogrammed default
 15395                           ;	Brown-out Reset Enable bits
 15396                           ;	BOREN = 0x3, unprogrammed default
 15397   300002                     	org	3145730
 15398   300002  FF                 	db	255
 15399                           
 15400                           ;Config register CONFIG2H @ 0x300003
 15401                           ;	unspecified, using default values
 15402                           ;	Brown Out Reset Voltage selection bits
 15403                           ;	BORV = 0x3, unprogrammed default
 15404                           ;	ZCD Disable bit
 15405                           ;	ZCD = 0x1, unprogrammed default
 15406                           ;	PPSLOCK bit One-Way Set Enable bit
 15407                           ;	PPS1WAY = 0x1, unprogrammed default
 15408                           ;	Stack Full/Underflow Reset Enable bit
 15409                           ;	STVREN = 0x1, unprogrammed default
 15410                           ;	Debugger Enable bit
 15411                           ;	DEBUG = 0x1, unprogrammed default
 15412                           ;	Extended Instruction Set Enable bit
 15413                           ;	XINST = 0x1, unprogrammed default
 15414   300003                     	org	3145731
 15415   300003  FF                 	db	255
 15416                           
 15417                           ;Config register CONFIG3L @ 0x300004
 15418                           ;	WDT Period Select bits
 15419                           ;	WDTCPS = 0x1F, unprogrammed default
 15420                           ;	WDT operating mode
 15421                           ;	WDTE = OFF, WDT Disabled
 15422   300004                     	org	3145732
 15423   300004  9F                 	db	159
 15424                           
 15425                           ;Config register CONFIG3H @ 0x300005
 15426                           ;	unspecified, using default values
 15427                           ;	WDT Window Select bits
 15428                           ;	WDTCWS = 0x7, unprogrammed default
 15429                           ;	WDT input clock selector
 15430                           ;	WDTCCS = 0x7, unprogrammed default
 15431   300005                     	org	3145733
 15432   300005  FF                 	db	255
 15433                           
 15434                           ;Config register CONFIG4L @ 0x300006
 15435                           ;	unspecified, using default values
 15436                           ;	Write Protection Block 0
 15437                           ;	WRT0 = 0x1, unprogrammed default
 15438                           ;	Write Protection Block 1
 15439                           ;	WRT1 = 0x1, unprogrammed default
 15440                           ;	Write Protection Block 2
 15441                           ;	WRT2 = 0x1, unprogrammed default
 15442                           ;	Write Protection Block 3
 15443                           ;	WRT3 = 0x1, unprogrammed default
 15444                           ;	Write Protection Block 3
 15445                           ;	WRT4 = 0x1, unprogrammed default
 15446                           ;	Write Protection Block 3
 15447                           ;	WRT5 = 0x1, unprogrammed default
 15448                           ;	Write Protection Block 3
 15449                           ;	WRT6 = 0x1, unprogrammed default
 15450                           ;	Write Protection Block 3
 15451                           ;	WRT7 = 0x1, unprogrammed default
 15452   300006                     	org	3145734
 15453   300006  FF                 	db	255
 15454                           
 15455                           ;Config register CONFIG4H @ 0x300007
 15456                           ;	unspecified, using default values
 15457                           ;	Configuration Register Write Protection bit
 15458                           ;	WRTC = 0x1, unprogrammed default
 15459                           ;	Boot Block Write Protection bit
 15460                           ;	WRTB = 0x1, unprogrammed default
 15461                           ;	Data EEPROM Write Protection bit
 15462                           ;	WRTD = 0x1, unprogrammed default
 15463                           ;	Scanner Enable bit
 15464                           ;	SCANE = 0x1, unprogrammed default
 15465                           ;	Low Voltage Programming Enable bit
 15466                           ;	LVP = 0x1, unprogrammed default
 15467   300007                     	org	3145735
 15468   300007  FF                 	db	255
 15469                           
 15470                           ;Config register CONFIG5L @ 0x300008
 15471                           ;	unspecified, using default values
 15472                           ;	UserNVM Program Memory Code Protection bit
 15473                           ;	CP = 0x1, unprogrammed default
 15474                           ;	DataNVM Memory Code Protection bit
 15475                           ;	CPD = 0x1, unprogrammed default
 15476   300008                     	org	3145736
 15477   300008  FF                 	db	255
 15478                           
 15479                           ;Config register CONFIG5H @ 0x300009
 15480                           ;	unspecified, using default values
 15481   300009                     	org	3145737
 15482   300009  FF                 	db	255
 15483                           
 15484                           ;Config register CONFIG6L @ 0x30000A
 15485                           ;	unspecified, using default values
 15486                           ;	Table Read Protection Block 0
 15487                           ;	EBTR0 = 0x1, unprogrammed default
 15488                           ;	Table Read Protection Block 1
 15489                           ;	EBTR1 = 0x1, unprogrammed default
 15490                           ;	Table Read Protection Block 2
 15491                           ;	EBTR2 = 0x1, unprogrammed default
 15492                           ;	Table Read Protection Block 3
 15493                           ;	EBTR3 = 0x1, unprogrammed default
 15494                           ;	Table Read Protection Block 4
 15495                           ;	EBTR4 = 0x1, unprogrammed default
 15496                           ;	Table Read Protection Block 5
 15497                           ;	EBTR5 = 0x1, unprogrammed default
 15498                           ;	Table Read Protection Block 6
 15499                           ;	EBTR6 = 0x1, unprogrammed default
 15500                           ;	Table Read Protection Block 7
 15501                           ;	EBTR7 = 0x1, unprogrammed default
 15502   30000A                     	org	3145738
 15503   30000A  FF                 	db	255
 15504                           
 15505                           ;Config register CONFIG6H @ 0x30000B
 15506                           ;	unspecified, using default values
 15507                           ;	Boot Block Table Read Protection bit
 15508                           ;	EBTRB = 0x1, unprogrammed default
 15509   30000B                     	org	3145739
 15510   30000B  FF                 	db	255
 15511                           tosu	equ	0xFFF
 15512                           tosh	equ	0xFFE
 15513                           tosl	equ	0xFFD
 15514                           stkptr	equ	0xFFC
 15515                           pclatu	equ	0xFFB
 15516                           pclath	equ	0xFFA
 15517                           pcl	equ	0xFF9
 15518                           tblptru	equ	0xFF8
 15519                           tblptrh	equ	0xFF7
 15520                           tblptrl	equ	0xFF6
 15521                           tablat	equ	0xFF5
 15522                           prodh	equ	0xFF4
 15523                           prodl	equ	0xFF3
 15524                           indf0	equ	0xFEF
 15525                           postinc0	equ	0xFEE
 15526                           postdec0	equ	0xFED
 15527                           preinc0	equ	0xFEC
 15528                           plusw0	equ	0xFEB
 15529                           fsr0h	equ	0xFEA
 15530                           fsr0l	equ	0xFE9
 15531                           wreg	equ	0xFE8
 15532                           indf1	equ	0xFE7
 15533                           postinc1	equ	0xFE6
 15534                           postdec1	equ	0xFE5
 15535                           preinc1	equ	0xFE4
 15536                           plusw1	equ	0xFE3
 15537                           fsr1h	equ	0xFE2
 15538                           fsr1l	equ	0xFE1
 15539                           bsr	equ	0xFE0
 15540                           indf2	equ	0xFDF
 15541                           postinc2	equ	0xFDE
 15542                           postdec2	equ	0xFDD
 15543                           preinc2	equ	0xFDC
 15544                           plusw2	equ	0xFDB
 15545                           fsr2h	equ	0xFDA
 15546                           fsr2l	equ	0xFD9
 15547                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    0
    Data        7
    BSS         381
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    113     158
    BANK1           256    114     216
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2713$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 37
		 -> STR_2(CODE[35]), STR_1(CODE[37]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2629$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2629$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               116   116      0  408381
                                            111 BANK0      2     2      0
                                              0 BANK1    114   114      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9201
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   36181
                                             80 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35674
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35321
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29475
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  158658
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _reverseDetect
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18835
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   19139
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9859
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   25733
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9049
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    9482
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   24299
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _ReverseYellow
       _ForwardOneBlock
       _reverseDetect
       _turnRight45
     _reverseDetect
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     72      D8       7       84.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      9E       5       98.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C5      60        0.0%
DATA                 0      0     2C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 21:39:05 2023

               _color_read_Red 5C08                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5BB8                   ___fldiv@sign 0042                _color_read_Blue 5CA8  
                           l51 5C06                             l60 5CF6                             l45 5AC2  
                           l54 5C56                             l63 57BC                             l48 613E  
                           l57 5CA6                             l66 38E4                             l76 192C  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 4328  
             _color_read_Green 5C58                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 617C                            l140 60AA                            l212 6194  
                          l143 60AC                            l152 61AA                            l161 5EEE  
                          l209 6180                            l146 60D2                            l218 6080  
                          l155 61B4                            l149 61BE                            l158 61A0  
                          l520 541C                            l256 61CA                            l504 52E0  
                          l512 5242                            l600 4410                            l601 4480  
                          l409 28A0                            l602 4448                            l418 2930  
                          l542 6050                            l551 58CA                            l607 449C  
                          l560 5924                            l536 537E                            l528 50FA  
                          l608 44EC                            l545 5D44                            l609 4506  
                          l490 49AE                            l554 5870                            l539 6036  
                          l483 54A4                            l387 2408                            l548 5D92  
                          l572 575E                            l581 5A1E                            l557 5816  
                          l661 3E96                            l821 4B12                            l566 5F6C  
                          l590 4F9A                            l575 5B14                            l655 3E8C  
                          l496 55A4                            l584 5A70                            l808 4842  
                          l569 5FAA                            l593 5050                            l578 5B66  
                          l682 615E                            l587 5526                            l691 601A  
                          l596 44B6                            l685 60F8                            l597 4346  
                          l694 611E                            l599 439C                            l688 6004  
                          l953 51A4                            l964 4D1C                            l959 4CD6  
                          l991 4C18                            l968 5FE2                            _abs 5EF0  
                          _pad 55A6                            _rel 01B2                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           ?_abs 0013                           l1222 2B22  
                         l1231 2DF2                           l1223 2B10                           l1312 321C  
                         l1224 2AD6                           l1315 30AE                           l1308 2EB8  
                         l1404 55C8                           l1325 31DE                           l1317 3126  
                         l1413 3F24                           l1318 3114                           l1239 2C3C  
                         l1415 3F2C                           l1248 2D0C                           l1264 5E24  
                         l1352 46BA                           l1192 5692                           l1408 561E  
                         l1416 3F72                           l1281 33DA                           l1249 2CFA  
                         l4001 2B64                           l1185 568A                           l1441 1CC0  
                         l1290 34C2                           l4011 2B9E                           l4003 2B72  
                         l1363 4652                           l1523 5F26                           l1427 4114  
                         l1443 1B06                           l1276 35B6                           l1356 45F6  
                         l1532 4326                           l1508 597A                           l1372 59CC  
                         l4021 2C0A                           l4013 2BA0                           l4005 2B80  
                         l1349 455E                           l4101 5642                           l1278 3416  
                         l1526 5F2E                           l1518 4E1A                           l1438 2326  
                         l1287 345C                           l4031 2C62                           l4023 2C0C  
                         l4015 2BAA                           l4007 2B8C                           l4111 567C  
                         l4103 564A                           l1535 426A                           l1543 56E8  
                         l1471 2108                           l1552 5BB6                           l1289 34D4  
                         l4041 2C90                           l4025 2C1C                           l4009 2B90  
                         l4017 2BB0                           l4113 567E                           l4105 5658  
                         l4201 4A3A                           l4121 5E88                           l5001 222C  
                         l1546 56F8                           l4043 2C9E                           l4035 2C76  
                         l4051 2CBC                           l4019 2BD6                           l4027 2C2C  
                         l4115 5684                           l4107 565E                           l4131 48C8  
                         l4211 4ABC                           l4203 4A4E                           l4123 5E8C  
                         l5011 2282                           l5003 2230                           l1564 4EE4  
                         l1572 5EAC                           l4301 3404                           l4221 321E  
                         l4045 2CA6                           l4037 2C80                           l4029 2C52  
                         l4053 2CCA                           l4109 5674                           l4133 48CC  
                         l4125 4844                           l4141 46BC                           l4205 4A5C  
                         l4213 4AC2                           l4117 5E6A                           l1581 5E68  
                         l5021 22FE                           l5013 22B2                           l5005 224E  
                         l5101 393E                           l1486 3BEA                           l4311 344C  
                         l4303 3414                           l4231 325A                           l4223 322A  
                         l4063 2D1C                           l4071 2D72                           l4055 2CCE  
                         l4047 2CAA                           l4039 2C8E                           l4135 490E  
                         l4127 4860                           l5031 6198                           l4151 4700  
                         l4143 46C0                           l4215 4AD2                           l4207 4A8A  
                         l1575 61C8                           l4119 5E76                           l5023 2306  
                         l5015 22C0                           l5007 226A                           l5111 3A04  
                         l5103 395E                           l4321 348C                           l4313 345A  
                         l4305 3426                           l4241 328A                           l4233 326A  
                         l4225 3238                           l4401 2EF8                           l4081 2DC4  
                         l4073 2D82                           l4065 2D28                           l4057 2CDC  
                         l4049 2CBA                           l4137 492A                           l4129 48B4  
                         l5033 619C                           l5041 61A6                           l5201 5C9E  
                         l4161 4756                           l4153 4720                           l4145 46CE  
                         l4217 4AF2                           l4209 4AAA                           l5017 22D8  
                         l5009 2272                           l5113 3A14                           l5105 397E  
                         l6001 2868                           l4331 34FE                           l4323 34BA  
                         l4307 343C                           l4315 346C                           l4251 32C0  
                         l4243 3290                           l4235 326C                           l4227 323A  
                         l4411 2F48                           l4403 2F02                           l4091 2DE2  
                         l4083 2DCA                           l4075 2D92                           l4067 2D36  
                         l4059 2CF2                           l4139 496E                           l5027 61B6  
                         l5035 61AC                           l5051 5EEA                           l5043 5EB0  
                         l5211 6180                           l4171 47D8                           l4163 476A  
                         l4155 4724                           l4147 46EE                           l5019 22E8  
                         l5115 3A2A                           l5123 3A42                           l5107 39D4  
                         l6011 291A                           l6003 2892                           l4341 3576  
                         l4333 3528                           l4317 347A                           l4309 3442  
                         l4261 3300                           l4253 32D0                           l4245 329E  
                         l4229 324A                           l4237 3274                           l4501 5168  
                         l4421 2F8A                           l4413 2F54                           l4405 2F18  
                         l4085 2DCC                           l4077 2DB2                           l4069 2D70  
                         l5029 61BA                           l5037 61B0                           l5221 5F6E  
                         l5061 6000                           l5053 5EEC                           l5045 5EB4  
                         l5205 5CA8                           l5213 6190                           l4181 4822  
                         l4173 47DA                           l4165 4778                           l4157 4730  
                         l4149 46F2                           l5133 3B00                           l5117 3A32  
                         l5125 3A74                           l5301 5950                           l6005 28A4  
                         l6013 291C                           l4351 35AC                           l4343 3592  
                         l4327 34E4                           l4335 352C                           l4319 347E  
                         l4263 3310                           l4271 3330                           l4255 32D2  
                         l4247 32A0                           l4239 3284                           l4503 5178  
                         l4511 4C1A                           l4431 2FEC                           l4423 2F9A  
                         l4415 2F62                           l4407 2F24                           l4087 2DD2  
                         l4079 2DB6                           l4095 5620                           l5071 5D46  
                         l5063 5CF8                           l5311 5A80                           l5223 5A20  
                         l5215 5F30                           l5231 509A                           l5047 5EBC  
                         l5039 61A2                           l5207 5CEE                           l4175 47EC  
                         l4167 478A                           l4159 474E                           l4191 49E2  
                         l5143 3B7C                           l5135 3B2A                           l5127 3A98  
                         l5119 3A3A                           l5303 5970                           l6007 28C0  
                         l4345 3596                           l4337 3546                           l4329 34F0  
                         l4281 336E                           l4273 3340                           l4265 3318  
                         l4249 32B0                           l4257 32DA                           l4505 519C  
                         l4521 4CA4                           l4513 4C48                           l4441 3094  
                         l4433 3008                           l4425 2FB4                           l4417 2F6E  
                         l4409 2F3C                           l4361 2E00                           l4089 2DE0  
                         l5401 11CE                           l4097 5628                           l5081 5886  
                         l5241 5818                           l5073 5D5A                           l5065 5D0C  
                         l5321 5AB0                           l5313 5A90                           l5217 59CE  
                         l5057 5FE4                           l5233 50A6                           l5225 5052  
                         l5049 5EC4                           l4169 47B8                           l4177 47F2  
                         l4193 49E6                           l4185 49B0                           l4601 5F0A  
                         l5137 3B4A                           l5129 3ACC                           l5145 3BAC  
                         l6009 290E                           l4347 35A4                           l4339 355C  
                         l4291 33B6                           l4283 337E                           l4275 3340  
                         l4267 331C                           l4259 32EA                           l4507 51A2  
                         l4523 4CB6                           l4515 4C58                           l4451 30D0  
                         l4443 309E                           l4435 3032                           l4427 2FC4  
                         l4419 2F7E                           l4371 2E40                           l4363 2E0E  
                         l5251 450A                           l5411 13AC                           l5403 124A  
                         l4099 563A                           l5083 589E                           l5243 582C  
                         l5075 5D66                           l5067 5D18                           l5331 5ABA  
                         l5323 5AB2                           l5315 5A9A                           l5307 5A72  
                         l5219 56FA                           l5059 5FF0                           l5227 5076  
                         l5235 50BE                           l4179 4802                           l4195 49F4  
                         l4187 49B4                           l4611 4DB0                           l4603 4D1E  
                         l5091 38E6                           l4349 35AA                           l4293 33CA  
                         l4285 338E                           l4525 4CC4                           l4517 4C86  
                         l4461 3142                           l4453 30DE                           l4445 30AC  
                         l4437 3068                           l4429 2FE0                           l4381 2E70  
                         l4373 2E46                           l4365 2E10                           l3901 2960  
                         l5253 451A                           l5501 17C4                           l5421 141C  
                         l5413 13DE                           l5405 12A6                           l4701 5574  
                         l5245 5844                           l5077 5D7A                           l5069 5D2C  
                         l5181 6096                           l5173 6082                           l5333 5ABC  
                         l5325 5AB4                           l5317 5AA4                           l5309 5A76  
                         l5341 35B8                           l5085 57BE                           l5237 50D6  
                         l5229 508E                           l4197 4A14                           l4189 49C2  
                         l4533 5FAC                           l4541 4B14                           l4621 4E12  
                         l4605 4D3E                           l5093 390E                           l5149 3BBE  
                         ?_pad 0011                           l4295 33D8                           l4287 339E  
                         l4279 3354                           l4527 4D14                           l4519 4C96  
                         l4471 31AC                           l4463 3150                           l4455 310C  
                         l4447 30BE                           l4439 3076                           l4391 2EA8  
                         l4383 2E72                           l4375 2E56                           l4367 2E20  
                         l4359 2DF4                           l3911 299A                           l3903 2970  
                         l5271 45E0                           l5263 4598                           l5255 4528  
                         l5511 182C                           l5431 148C                           l5423 144E  
                         l5407 1322                           l4703 558C                           l5079 5872  
                         l4711 528C                           l5183 6098                           l5175 608C  
                         l5335 5ABE                           l5327 5AB6                           l5319 5AAE  
                         l5351 3818                           l5343 3684                           l5087 57D2  
                         l5247 4EE6                           l5239 50EE                           l4199 4A32  
                         l4535 5FC2                           l4551 4B6A                           l4543 4B2A  
                         l4607 4D7C                           l4615 4DBC                           l4631 56B2  
                         l5095 391C                           l4297 33E4                           l4289 33A6  
                         l4529 4D1A                           l4481 3202                           l4473 31C6  
                         l4465 317A                           l4449 30CC                           l4393 2EC8  
                         l4385 2E82                           l4377 2E5C                           l4369 2E30  
                         l3921 29C8                           l3913 29A0                           l3905 2980  
                         l5281 4660                           l5273 45EC                           l5265 45A0  
                         l5257 456E                           l5513 185E                           l5433 14BE  
                         l5409 137A                           l5361 0EB8                           l4713 5298  
                         l4705 5244                           l4721 51CA                           l5177 6092  
                         l5185 6122                           l5337 5AC0                           l5329 5AB8  
                         l5353 384C                           l5345 36B8                           l5089 57EA  
                         l5249 4F9C                           l5193 5C08                           l4801 40F4  
                         l4537 5FD2                           l4553 4B7A                           l4617 4DCE  
                         l4609 4DA4                           l4641 41AE                           l4633 4116  
                         l4625 5E26                           l5097 392A                           l5601 4328  
                         l4299 3402                           l4475 31E2                           l4483 3208  
                         l4459 3136                           l4467 317E                           l4395 2ED8  
                         l4387 2E92                           l4379 2E62                           l3931 29FC  
                         l3923 29CA                           l3915 29B2                           l3907 2982  
                         l4491 5DF0                           l5291 46A8                           l5283 4662  
                         l5275 4628                           l5267 45AC                           l5259 4584  
                         l5531 1918                           l5515 1898                           l5523 18D6  
                         l5451 1580                           l5435 14F8                           l5443 1536  
                         l5419 13EA                           l5371 0F2A                           l5363 0EEC  
                         l5355 0E52                           l4707 5268                           l4715 52B0  
                         l4731 522A                           l4723 51E2                           l5179 6094  
                         l5347 374C                           l5195 5C4E                           l5187 5BB8  
                         l5339 5760                           l4563 4BA4                           l4555 4B7E  
                         l4547 4B3E                           l4651 42CA                           l4635 4136  
                         l4627 5E36                           l4811 1952                           l6155 3A56  
                         l5099 392E                           l5611 43F0                           l5603 432A  
                         l4485 320C                           l4477 31F2                           l4469 3198  
                         l4389 2EA2                           l3941 2A38                           l3925 29DA  
                         l3933 2A04                           l3917 29B4                           l3909 298A  
                         l5293 46AA                           l5285 4666                           l5277 4634  
                         l5269 45DE                           l5509 17FA                           l5445 1574  
                         l5429 145A                           l5381 103C                           l5373 0F7C  
                         l5365 0F20                           l5357 0E7C                           l4741 5336  
                         l4733 52E2                           l4717 52C8                           l4709 5280  
                         l4725 51EE                           l5349 3780                           l5701 3CB2  
                         l5541 616A                           l5189 5BFE                           l4581 4C08  
                         l4573 4BCC                           l4565 4BAE                           l4557 4B8C  
                         l4549 4B68                           l4653 42DE                           l4645 421E  
                         l4637 418C                           l4629 5694                           l4661 5B68  
                         l4901 1CF4                           l4821 199C                           l4813 1956  
                         l4805 192E                           l6157 3B14                           l5621 442A  
                         l5613 4408                           l5605 4348                           l4495 50FC  
                         l4479 3200                           l4399 2EEC                           l3951 2A4C  
                         l3943 2A3C                           l3935 2A14                           l3927 29EA  
                         l3919 29BA                           l5287 468A                           l5279 4642  
                         l5535 1924                           l5455 158C                           l5391 10C0  
                         l5383 1042                           l5375 0FAE                           l5359 0E88  
                         l4735 5306                           l4743 534E                           l4751 6030  
                         l4727 51FA                           l4719 51A6                           l5711 3D8A  
                         l5703 3CDE                           l5543 616C                           l5199 5C58  
                         l5551 6052                           l4591 55D4                           l4575 4BD8  
                         l4567 4BB8                           l4655 4306                           l4647 425A  
                         l4639 41A0                           l4663 5B7C                           l4671 5B9C  
                         l4911 1D42                           l4903 1CF8                           l4831 19EA  
                         l4823 19AC                           l4815 197A                           l4807 1934  
                         l6159 3B9E                           l5631 447A                           l5623 4442  
                         l5615 440A                           l5607 439E                           l4497 512A  
                         l3961 2A60                           l3953 2A50                           l3945 2A40  
                         l3937 2A26                           l3929 29FA                           l4489 5DE0  
                         l5289 469A                           l5481 16BA                           l5457 15BE  
                         l5393 10D4                           l5385 105E                           l5377 0FB6  
                         l4681 53BC                           l4745 5366                           l4737 531E  
                         l5641 6140                           l4729 5212                           l4673 60AC  
                         l5721 3E60                           l5713 3DB4                           l5705 3D08  
                         l5545 6176                           l5553 6056                           l3881 4E68  
                         l3873 4E1C                           l4593 55E8                           l4585 55A6  
                         l4761 3EFC                           l4753 3E98                           l4577 4BE8  
                         l4657 4316                           l4649 428E                           l4665 5B88  
                         l4921 1DDA                           l4905 1D0A                           l4913 1D4A  
                         l4841 1A26                           l4833 19FC                           l4825 19B8  
                         l4817 1984                           l4809 1944                           l5297 5926  
                         l5625 4456                           l5617 441E                           l5609 43EC  
                         l5633 4480                           l5801 235A                           l4499 513A  
                         l3963 2A64                           l3955 2A54                           l3947 2A44  
                         l3939 2A34                           l3971 2A74                           l5483 16EC  
                         l5475 167C                           l5467 1632                           l5459 15F0  
                         l5395 1174                           l5387 10B4                           l5379 100A  
                         l4683 53C8                           l4691 5528                           l4739 532A  
                         l4747 601C                           l5643 6148                           l4675 60BC  
                         l5651 60D6                           l5715 3DE0                           l5707 3D34  
                         l5723 3E8C                           l5571 541E                           l5547 6178  
                         l5539 6160                           l5555 6064                           l3883 4E9E  
                         l3875 4E2E                           l4595 55EC                           l4587 55B4  
                         l4771 3F5A                           l4763 3F18                           l4755 3EB8  
                         l4579 4BF8                           l4667 5B8C                           l4931 1EBE  
                         l4923 1E32                           l4915 1D52                           l4907 1D18  
                         l4851 1A88                           l4843 1A30                           l4835 1A00  
                         l4827 19C0                           l4819 198C                           l5299 5932  
                         l5635 448E                           l5627 4460                           l5619 4428  
                         l5811 2364                           l5803 235C                           l3981 2AE4  
                         l3973 2A78                           l3965 2A68                           l3957 2A58  
                         l3949 2A48                           l3893 2934                           l5469 1670  
                         l5397 1184                           l4685 53D4                           l4677 5380  
                         l4693 552C                           l4749 6020                           l5661 54A6  
                         l5645 6152                           l5653 60DC                           l5717 3E0A  
                         l5709 3D5E                           l5581 544C                           l5573 5430  
                         l5549 617A                           l5557 6068                           l3877 4E40  
                         l4597 560A                           l4589 55C0                           l4781 3F8A  
                         l4773 3F66                           l4765 3F34                           l4757 3ECC  
                         l4669 5B98                           l4941 1F58                           l4933 1EF0  
                         l4925 1E66                           l4917 1D62                           l4909 1D30  
                         l4853 1A8C                           l4837 1A06                           l4829 19C4  
                         l5637 449E                           l5629 4462                           l5901 254C  
                         l5821 236E                           l5813 2366                           l5805 235E  
                         l3991 2B0E                           l3983 2AF0                           l3975 2AA2  
                         l3967 2A6C                           l3959 2A5C                           l3895 2940  
                         l5495 172E                           l5479 1688                           l5399 11BC  
                         l3887 60FA                           l4679 53A4                           l4687 53EC  
                         l4695 5544                           l5655 58CC                           l5663 54BA  
                         l5647 615C                           l5719 3E36                           l5591 548A  
                         l5583 5450                           l5575 5432                           l4599 5EF0  
                         l3879 4E4A                           l4791 4096                           l4783 400C  
                         l4775 3F6E                           l4767 3F44                           l4759 3EDC  
                         l4951 2030                           l4943 1F8C                           l4935 1F06  
                         l4919 1D76                           l4927 1E6C                           l4871 1B16  
                         l4855 1A92                           l4839 1A0E                           l4847 1A50  
                         l5671 597C                           l5639 44EE                           l5911 25C0  
                         l5903 2560                           l5831 2380                           l5823 2370  
                         l5815 2368                           l5807 2360                           l3993 2B30  
                         l3985 2AF4                           l3977 2ABE                           l3969 2A70  
                         l3897 294E                           l5497 1760                           l3889 6116  
                         l4689 5404                           l4697 5550                           l5657 58E0  
                         l5665 54D2                           l5649 60D4                           l5593 548C  
                         l5585 5474                           l5577 5434                           l4793 40B4  
                         l4785 4012                           l4777 3F7A                           l4769 3F4A  
                         l4961 205A                           l4945 1FE2                           l4953 2034  
                         l4937 1F38                           l4929 1E8A                           l4881 1BFE  
                         l4873 1B1C                           l4857 1A9A                           l4849 1A76  
                         l4865 1AB6                           l5673 598E                           l5921 25FC  
                         l5913 25CC                           l5905 257E                           l5841 23A0  
                         l5833 2388                           l5825 2372                           l5817 236A  
                         l5809 2362                           l3995 2B40                           l3987 2B02  
                         l3979 2ACE                           l3899 2950                           l5499 1792  
                         l4699 555C                           l5659 58F8                           l5667 54E6  
                         l5683 5AC4                           l5595 5496                           l5587 547E  
                         l5579 5436                           l4795 40CE                           l4787 4018  
                         l4779 3F84                           l4971 2128                           l4963 2066  
                         l4955 2044                           l4947 1FE8                           l4939 1F48  
                         l4883 1C12                           l4891 1C8E                           l4875 1B50  
                         l4867 1AD0                           l5675 5996                           l5931 2642  
                         l5915 25E0                           l5923 2612                           l5907 2586  
                         l5851 23C4                           l5843 23A4                           l5835 2390  
                         l5827 2378                           l5819 236C                           l5771 2328  
                         l3989 2B04                           l5685 5B16                           l5669 54FA  
                         l5693 3C06                           l5597 5498                           l5589 5480  
                         l4797 40DE                           l4789 407C                           l4981 215A  
                         l4973 2138                           l4965 20DE                           l4957 204C  
                         l4949 201C                           l4893 1CC8                           l4885 1C46  
                         l4877 1B8E                           l5677 599E                           l5941 2688  
                         l5925 2626                           l5933 2658                           l5917 25F4  
                         l5909 258C                           l5861 23EC                           l5853 23CC  
                         l5845 23AC                           l5837 2398                           l5829 237C  
                         l5781 2344                           l5773 232C                           l3999 2B54  
                         l5695 3C34                           l5687 3BEC                           l5599 54A2  
                         l4799 40E4                           l4991 218E                           l4983 215E  
                         l4975 213C                           l4967 20FE                           l4959 2052  
                         l4895 1CD8                           l4887 1C4E                           l4879 1BC0  
                         l5679 59BA                           l5951 26CE                           l5935 266C  
                         l5943 269E                           l5927 263A                           l5919 25F8  
                         l5871 2448                           l5863 23EE                           l5855 23D4  
                         l5847 23B4                           l5839 239C                           l5791 2350  
                         l5783 2346                           l5775 2330                           l5697 3C5C  
                         l5689 3BF4                           l4993 2192                           l4985 2164  
                         l4977 2142                           l4969 211A                           l4897 1CE4  
                         l5961 2714                           l5945 26B2                           l5953 26E4  
                         l5937 2680                           l5929 263E                           l5881 249E  
                         l5873 245C                           l5865 2416                           l5857 23D8  
                         l5849 23BC                           l5793 2352                           l5785 2348  
                         l5777 2334                           l5699 3C88                           l4995 2198  
                         l4979 214A                           l4987 216A                           l4899 1CEC  
                         l5971 275A                           l5955 26F8                           l5963 272A  
                         l5947 26C6                           l5939 2684                           l5891 24FE  
                         l5883 24A2                           l5875 2468                           l5867 2430  
                         l5859 23D8                           l5795 2354                           l5787 234A  
                         l5779 2338                           l4997 21F0                           l4989 217C  
                         l5981 27A0                           l5965 273E                           l5973 2770  
                         l5957 270C                           l5949 26CA                           l5893 251A  
                         l5885 24B6                           l5877 247C                           l5869 2438  
                         l5797 2356                           l5789 234C                           l4999 2224  
                         l5991 27F6                           l5975 2784                           l5983 27B6  
                         l5967 2752                           l5959 2710                           l5895 2534  
                         l5887 24CA                           l5879 249A                           l5799 2358  
                         l5993 2820                           l5985 27CA                           l5977 2798  
                         l5969 2756                           l5897 253C                           l5889 24E6  
                         l5995 282A                           l5987 27CE                           l5979 279C  
                         l5899 2544                           l5989 27E2                           l5997 2842  
                         l5999 2854                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E26                           STR_3 0E49  
                         STR_6 0E4D                           u3100 29C8                           u3020 4E2E  
                         u3101 29C4                           u3021 4E2A                           u3110 29DA  
                         u3030 4E40                           u3111 29D6                           u3031 4E3C  
                         u4000 3122                           u3200 2B22                           u3120 29EA  
                         u3040 4E68                   _BAUD4CONbits 000EE9                           u4001 311E  
                         u3201 2B1E                           u3121 29E6                           u3041 4E64  
                         u4010 3136                           u3210 2B30                           u3130 2A26  
                         u3050 4E9E                           u4011 3132                           u3211 2B2C  
                         u3131 2A22                           u3051 4E9A                           u4100 4C86  
                         u4020 3150                           u3300 2C8E                           u3220 2B40  
                         u3140 2A34                           u3060 294E                           u4101 4C82  
                         u4021 314C                           u3301 2C8A                           u3221 2B3C  
                         u3141 2A30                           u3061 294A                           u4110 4CA4  
                         u4030 3198                           u3310 2C9E                           u3230 2B72  
                         u3150 2AA2                           u3070 2960                           u4111 4CA0  
                         u4031 3194                           u3311 2C9A                           u3231 2B6E  
                         u3151 2A9E                           u3071 295C                           u4120 4CC4  
                         u4040 31C6                           u3400 2D82                           u3320 2CBA  
                         u3240 2B80                           u3160 2ABA                           u3080 2970  
                         u5000 5ED8                           u4200 4BE8                           u4121 4CC0  
                         u4041 31C2                           u3401 2D7E                           u3321 2CB6  
                         u3241 2B7C                           u3161 2AB4                           u3081 296C  
                         u5001 5ED0                           u4201 4BE4                           u4130 4D14  
                         u4050 3200                           u3410 2D92                           u3330 2CCA  
                         u3250 2B9E                           u3170 2ABC                           u3090 29B2  
                         u4210 4BF8                           _T2PR 000FBC                           u4131 4D10  
                         u4051 31FC                           u3411 2D8E                           u3331 2CC6  
                         u3251 2B9A                           u3091 29AE                           u4211 4BF4  
                         u4060 512A                           u3420 2DB2                           u3340 2CDC  
                         u3260 2BD6                           u3180 2AE4                           u5100 451A  
                         u3500 492A                           u5020 601A                           u4220 55B4  
                         u4140 5FC2                           u4300 4E08                           u4061 5126  
                         u3421 2DAE                           u3341 2CD8                           u3261 2BD2  
                         u3181 2AE0                           u5101 4516                           u3501 4926  
                         u5021 6016                           u4221 55B0                           u4141 5FBE  
                         u4301 4E02                           u4070 5168                           u3430 2DC4  
                         u3350 2CF2                           u3270 2C1C                           u3190 2B02  
                         u5110 4528                           u3510 46CE                           u4230 560A  
                         u4150 4B2A                           u4310 4E0A                           u5030 390E  
                         u4071 5164                           u3431 2DC0                           u3351 2CEE  
                         u3271 2C18                           u3191 2AFE                           u5111 4524  
                         u3511 46CA                           u4231 5606                           u4151 4B26  
                         u5031 390A                           u4080 519C                           u3440 2DE0  
                         u3360 2D08                           u3280 2C52                           u5120 4584  
                         u3520 4700                           u3600 4A32                           u4240 5F0A  
                         u4160 4B5E                           u4400 425A                           u4320 5E68  
                         u5040 395E                           u5200 5970                           u4081 5198  
                         u3441 2DDC                           u3361 2D04                           u3281 2C4E  
                         u5121 4580                           u3521 46FC                           u3601 4A2E  
                         u4241 5F06                           u4401 4256                           u4321 5E64  
                         u5041 395A                           u5201 596C                           u4090 4C48  
                         u3370 2D1C                           u3290 2C62                           u5130 45DA  
                         u3450 563A                           u5018 5EDA                           u3610 4A5C  
                         u4170 4B8C                           u4250 4D5E                           u4410 42AE  
                         u4330 56B2                           u5050 397E                           u4091 4C44  
                         u3371 2D18                           u3291 2C5E                           u5131 45D6  
                         u5211 0E82                           u3451 5636                           u3531 472A  
                         u3611 4A58                           u4171 4B88                           u4331 56AE  
                         u5051 397A                           u3700 3300                           u3380 2D36  
                         u5140 4624                           u5300 13DE                           u5220 0F7C  
                         u3460 5658                           u4500 55A4                           u3540 474E  
                         u3620 4A8A                           u4180 4BA0                           u4260 4D7C  
                         u4420 42CA                           u4340 415E                           u5060 3A94  
                         u3701 32FC                           u3381 2D32                           u5141 4620  
                         u5301 13DA                           u5221 0F78                           u3461 5654  
                         u4501 55A0                           u3541 474A                           u3621 4A86  
                         u4181 4B9C                           u4165 4B54                           u4261 4D78  
                         u4421 42C6                           u5061 3A90                           u3710 3340  
                         u3390 2D70                           u5150 4642                           u5310 141C  
                         u5230 100A                           u3470 5674                           u4510 52C8  
                         u5070 6190                           u3550 4778                           u3630 4AD2  
                         u4190 4BC8                           u4270 4DA4                           u4430 4306  
                         u4350 418C                           u3711 333C                           u3391 2D6C  
                         u5151 463E                           u5311 1418                           u5231 1006  
                         u3471 5670                           u4511 52C4                           u5071 618C  
                         u3551 4774                           u3631 4ACE                           u4191 4BC4  
                         u4271 4DA0                           u4255 4D54                           u4431 4302  
                         u4415 42A4                           u4351 4188                           u3800 34BA  
                         u3720 33B6                           u3640 3238                           u5160 4652  
                         u5400 162E                           u5320 144E                           u5240 105E  
                         u4520 52E0                           u5080 50D6                           u3560 47B8  
                         u3480 5EAC                           u4600 3EDC                           u4280 4DCE  
                         u4360 41AE                           u4440 5BB6                           u3801 34B6  
                         u3721 33B2                           u3641 3234                           u5161 464E  
                         u5401 162A                           u5321 144A                           u5241 105A  
                         u4521 52DC                           u5081 50D2                           u3561 47B4  
                         u3481 5EA8                           u4601 3ED8                           u4281 4DCA  
                         u4361 41AA                           u4345 4154                           u4441 5BB2  
                         u3810 34D0                           u3730 33D8                           u3650 324A  
                         u5170 4660                           u5410 1670                           u5330 148C  
                         u5250 10B4                           u3490 4860                           u4530 522A  
                         u4450 60BC                           u5090 50EE                           u3570 4802  
                         u4610 3F18                           u3811 34CC                           u3731 33D4  
                         u3651 3246                           u5171 465C                           u5411 166C  
                         u5331 1488                           u5251 10B0                           u3491 485C  
                         u4531 5226                           u4451 60B8                           u5091 50EA  
                         u3571 47FE                           u4611 3F14                           u6107 446C  
                         u6027 23FA                           u3820 34E4                           u3740 3402  
                         u3660 325A                           u3900 2E70                           u5180 469A  
                         u5500 185E                           u5420 16BA                           u5340 14BE  
                         u5260 10D4                           u4540 5242                           u4460 60D2  
                         u3580 49C2                           u4620 3F44                           u4380 421A  
                         u4700 19AC                           u3821 34E0                           u3741 33FE  
                         u3661 3256                           u3901 2E6C                           u5181 4696  
                         u5501 185A                           u5421 16B6                           u5341 14BA  
                         u5261 10D0                           u4541 523E                           u4461 60CE  
                         u3581 49BE                           u4621 3F40                           u4381 4216  
                         u4701 19A8                           u6117 44A8                           u6037 2422  
                         u3830 34FE                           u3750 3426                           u3670 329E  
                         u3910 2E82                           u5190 46A8                           u5510 1898  
                         u5430 16EC                           u5350 14F8                           u5270 1184  
                         u4470 5404                           u4550 5366                           u3590 49F4  
                         u4630 3F5A                           u4390 423E                           u4710 19EA  
                         u3831 34FA                           u3751 3422                           u3671 329A  
                         u3911 2E7E                           u5191 46A4                           u5511 1894  
                         u5431 16E8                           u5351 14F4                           u5271 1180  
                         u4471 5400                           u4551 5362                           u6207 54C4  
                         u3591 49F0                           u4631 3F56                           u4295 4DE0  
                         u4375 41C2                           u4711 19E6                           u6127 44F8  
                         u6047 24D6                           u3840 3546                           u3760 343C  
                         u3680 32B0                           u3920 2E92                           u5520 18D2  
                         u5440 172A                           u5360 1532                           u5280 11CE  
                         u4480 541C                           u4560 537E                           u4640 4096  
                         u4376 41CC                           u4800 1CC0                           u4720 19FC  
                         u5600 43EC                           u3841 3542                           u3761 3438  
                         u3681 32AC                           u3921 2E8E                           u5521 18CE  
                         u5441 1726                           u5361 152E                           u5281 11CA  
                         u4481 5418                           u4561 537A                           u6217 5504  
                         u6137 50B0                           u4641 4092                           u4377 41DC  
                         u4801 1CBC                           u4721 19F8                           u5601 43E8  
                         u6057 24F2                           u3850 3576                           u3770 345A  
                         u3690 32C0                           u3930 2EC8                           u5530 1914  
                         u5450 1760                           u5370 1574                           u5290 13AC  
                         u4490 558C                           u4570 6050                           u4650 40B4  
                         u4810 1CD8                           u4730 1A76                           u5610 441E  
                         u3851 3572                           u3771 3456                           u3691 32BC  
                         u3931 2EC4                           u5531 1910                           u5451 175C  
                         u5371 1570                           u5291 13A8                           u4491 5588  
                         u6307 58EA                           u4571 604C                           u6227 5D84  
                         u6147 5FF6                           u4651 40B0                           u4395 4234  
                         u4811 1CD4                           u4731 1A72                           u5611 441A  
                         u6067 4334                           u3860 35A4                           u3780 347A  
                         u3940 2ED8                           u5460 1792                           u5380 15BE  
                         u5700 3CB2                           u5540 6080                           u4660 40CE  
                         u4580 3EC8                           u4900 2030                           u4820 1D0A  
                         u4740 1A88                           u5620 4456                           u3861 35A0  
                         u3781 3476                           u3941 2ED4                           u5461 178E  
                         u5381 15BA                           u6317 5916                           u6237 52A2  
                         u6157 57DC                           u5701 3CAE                           u5541 607C  
                         u4661 40CA                           u4581 3EC2                           u4901 202C  
                         u4821 1D06                           u4741 1A84                           u5621 4452  
                         u6077 43A8                           u3790 348C                           u3950 3052  
                         u3870 2E0E                           u5470 17C4                           u5390 15F0  
                         u5710 3D08                           u4670 40DE                           u4590 3ECA  
                         u4910 20DE                           u4830 1D18                           u4750 1B02  
                         u5630 448E                           u3791 3488                           u3871 2E0A  
                         u5471 17C0                           u5391 15EC                           u6327 5566  
                         u6247 6026                           u6167 5808                           u5711 3D04  
                         u4671 40DA                           u4911 20DA                           u4831 1D14  
                         u4751 1AFE                           u5631 448A                           u6087 43FA  
                         u3960 30AC                           u3880 2E20                           u5480 17F6  
                         u5720 3D5E                           u4920 211A                           u4840 1D42  
                         u4760 1B8E                           u4680 1952                           u5640 449C  
                         u3961 30A8                           u3881 2E1C                           u5481 17F2  
                         u6337 53DE                           u6257 5836                           u6177 5A86  
                         u5721 3D5A                           u4921 2116                           u4841 1D3E  
                         u4761 1B8A                           u4681 194E                           u5641 4498  
                         u6097 4434                           u3970 30CC                           u3890 2E30  
                         u5490 182C                           u5730 3DB4                           u4930 2128  
                         u4850 1E8A                           u4770 1BC0                           u4690 199C  
                         u5650 44C6                           u5810 2416                           u3971 30C8  
                         u3955 3048                           u3891 2E2C                           u5491 1828  
                         u6267 5862                           u6187 5D36                           u5731 3DB0  
                         u4931 2124                           u4851 1E86                           u4771 1BBC  
                         u4691 1998                           u5651 44C0                           u5811 2412  
                         u3980 30DE                           u5740 3E0A                           u4940 217C  
                         u4860 1EF0                           u4780 1BFE                           u5660 44DA  
                         u5652 44C8                           u5580 43C6                           u5900 273E  
                         u5820 249A                           u3981 30DA                           u6277 5890  
                         u6197 5204                           u5741 3E06                           u4941 2178  
                         u4861 1EEC                           u4781 1BFA                           u5661 44D4  
                         u5581 43C0                           u5901 273A                           u5821 2496  
                         u3990 310C                           u5750 3E60                           u4950 224E  
                         u4870 1F38                           u4790 1C8A                           u5670 44EC  
                         u5662 44DC                           u5590 43DA                           u5582 43C8  
                         u5910 2784                           u5830 2534                           u3991 3108  
                         u6287 58BC                           u5751 3E5C                           u4951 224A  
                         u4871 1F34                           u4791 1C86                           u5671 44E8  
                         u5591 43D4                           u5911 2780                           u5831 2530  
                         u5680 3C02                           u4960 226A                           u4880 1F48  
                         u5592 43DC                           u5920 27CA                           u5840 257E  
                         u6297 5340                           u5681 3BFE                           u4961 2266  
                         u4881 1F44                           u5921 27C6                           u5841 257A  
                         u5690 3C5C                           u4970 22D2                           u4890 1FE2  
                         u5930 27E2                           u5850 25E0                           u5691 3C58  
                         u4971 22CC                           u4891 1FDE                           u5931 27DE  
                         u5851 25DC                           u4980 22D4                           u5940 2854  
                         u5860 2626                           u5941 2850                           u5861 2622  
                         u4990 22E8                           u5950 2930                           u5870 266C  
                         u4991 22E4                           u5951 292C                           u5871 2668  
                         u5880 26B2                           u5881 26AE                           u5890 26F8  
                         u5891 26F4                  _LightBlueMove 5A20                           abs@a 0013  
                         _dbuf 02A0                           _labs 5694                           _main 2328  
                         _dtoa 3E98                           _prec 00EF                           _vals 01D0  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           _stop 5528  
                ___fpclassifyf 4D1E                           prodh 000FF4                           prodl 000FF3  
                         start 0002                ___fldiv@new_exp 0043         __end_of_color_read_Red 5C58  
       __end_of_color_read_lum 5C08                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 5F6E                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 5CF8  
              _RunOneBlockTime 00F7                  ___fltol@sign1 0009                __end_of___aodiv 4844  
                        ?_labs 0001                __end_of___fladd 2DF4                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 4B14                __end_of___fldiv 35B8  
              __end_of___flneg 5FE4                __end_of___flmul 321E                __end_of___flsub 5E26  
              __end_of___fltol 4C1A                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 5694                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3E98        __end_of_sendCharSerial4 6196  
   __end_of_I2C_2_Master_Start 61C0     __end_of_I2C_2_Master_Write 61A2                   YellowMove@mL 0020  
                        _flags 00F3                   YellowMove@mR 0022                          _fputc 4E1C  
                        _fputs 5E6A                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00FB                          _width 00ED  
                        _putch 61C8                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                   main@run_flag 0168                          status 000FD8  
              __end_of_sprintf 59CE                 ?___fpclassifyf 0001        __end_of_color_read_Blue 5CF8  
        _I2C_2_Master_RepStart 61A2               __end_of_BlueMove 5760                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 5D94        __end_of_turnCalibration 4508                _reverseOneBlock 5818  
                 __end_of_labs 56FA                   __end_of_main 2934                   __end_of_dtoa 4116  
                 __end_of_stop 55A6                _colour_rel$3142 0064                _colour_rel$3143 0068  
                       ??_labs 0005                         ??_main 00CF                         ??_dtoa 0026  
        __end_of_ReverseYellow 4F9C               __end_of_PinkMove 5B68                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88       __end_of_color_click_init 5AC4                         _RX4PPS 000E15  
                       _TX4REG 000EE4                     _OrangeMove 59CE               __end_of___xxtofl 46BC  
                    ??_RedMove 0024                  ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0024                         ___flge 4C1A  
                       ___fleq 50FC                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 60FA              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 192E                      ??___lwdiv 000B                         _floorf 4116  
                       _memcpy 5B68                         clear_0 5DBA                         clear_1 5DC6  
                       clear_2 5DD2                         _motorL 01C7                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 5E26                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 597C                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 52E2  
                   ___flge@ff1 002A                     _YellowMove 5AC4                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 5DDA        __end_of_reverseOneBlock 5872                     ___flneg@f1 0001  
     __end_of_color_read_Green 5CA8         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 61CA  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 52E2  
                 __pidataBANK0 61C0                  __end_of_fputc 4EE6                  __end_of_fputs 5EAE  
                __end_of_putch 61CA              __end_of_GreenMove 5FAC            __end_of_Timer0_init 6160  
          __end_of_ReversePink 5052                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0172          __end_of_reverseDetect 58CC  
                      ??_putch 0001                     __pbssBANK0 00D1                     __pbssBANK1 0172  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 58CC                     _getTMR0val 60D4  
            __end_of_RetryMove 5528                      ?_PinkMove 0020              _color_writetoaddr 6120  
                   _delayed_ms 5FE4                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 002A                        ?___fleq 0032             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                        ?_efgtoa 0060  
                      ?_floorf 004B                   ?_turnRight45 001A                        ?_memcpy 0001  
            __end_of_TurnDelay 6052          __end_of_timed_forward 50FC            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 35B8  
      __end_of_Interrupts_init 61CC         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 016C               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 6140                        _RedMove 5F30             _I2C_2_Master_Start 61B6  
                   ??_PinkMove 0024                     _initUSART4 6160             _I2C_2_Master_Write 6196  
                      __Hparam 0000                        _WayBack 0180                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 6140                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4F9C                        ___aodiv 46BC  
                      ___fladd 2934                        ___aomod 49B0                        ___fldiv 321E  
                      ___flneg 5FAC                        ___flmul 2DF4                        ___flsub 5DE0  
                      ___fltol 4B14            ?_I2C_2_Master_Start 0001                        ___lwdiv 5620  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 5D94  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3BEC  
                      __ptext0 2328                        __ptext1 4328                        __ptext2 597C  
                      __ptext3 5926                        __ptext4 38E6                        __ptext5 192E  
                      __ptext6 5E26                        __ptext7 5B68                        __ptext8 5694  
                      __ptext9 4116                      _T2CONbits 000FBD                     ??___xxtofl 0005  
               main@lost_count 016A                      _T2HLTbits 000FBE                        efgtoa@c 0066  
                      efgtoa@d 0074                        efgtoa@e 0078                        efgtoa@f 0062  
                      efgtoa@g 008D                        efgtoa@h 0082                        efgtoa@i 0080  
                      efgtoa@l 0086                        efgtoa@m 0076                        efgtoa@n 008B  
                      efgtoa@p 006B                        efgtoa@t 006D                        efgtoa@u 0091  
                      efgtoa@w 007A                  _RxBufWriteCnt 00F6              color_read_lum@tmp 000A  
                      main@buf 0100                        _sprintf 597C           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 5DDA                        floorf@e 0059  
                      floorf@m 0055                        floorf@u 005B                        floorf@x 004B  
                      memcpy@d 0007                        memcpy@n 0005                        memcpy@s 0009  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 017E  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BEC                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F9  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 541E                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013              __end_of_turnRight 5244  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 016E                   _EUSART4RXbuf 00D1  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 5D46                 __end_of___flge 4D1E  
               __end_of___fleq 51A6                 _fullSpeedAhead 5380                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 6120  
               __end_of_efgtoa 2328                 __end_of_floorf 4328                 __end_of_memcpy 5BB8  
                   floorf@F526 00E5       __end_of_Forwardhalfblock 5926                      _GreenMove 5F6E  
               __end_of_strcpy 5E6A            start_initialization 5D94                    __end_of_abs 5F30  
                  __end_of_pad 5620                  _TxBufWriteCnt 005F          __end_of_LightBlueMove 5A72  
                 ??_OrangeMove 0024          __end_of___fpclassifyf 4E1C            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 54A6                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 541E  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 54A6  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F7                _ForwardOneBlock 57BE  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4EE6  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 5A20  
                    ___flmul@a 0015                      ___flmul@b 0011                    __pbssCOMRAM 005F  
                    ___flsub@a 002E                      ___flsub@b 002A                      _TurnDelay 601C  
                __pcstackBANK0 0060                  __pcstackBANK1 0100               ___aodiv@dividend 0001  
                 ??_YellowMove 0024          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
                  _efgtoa$2772 006F               ___lwdiv@dividend 0007                      _dtoa$2741 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                 ?_ReversePink 0020                     ?_RetryMove 001A                timed_forward@mL 0014  
                     ?___aodiv 0001                timed_forward@mR 0016                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3144 0060                       ?___lwdiv 0007  
              main@colour_1291 0166                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5B16           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 57BE  
            _I2C_2_Master_Idle 60AC              _I2C_2_Master_Init 6082              _I2C_2_Master_Read 5EAE  
            _I2C_2_Master_Stop 61AC                     ?_TurnDelay 0001                   _RxBufReadCnt 00F5  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0001  
               colour_rel@vals 004B              _sendStringSerial4 6052            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 5818                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                      _lost_flag 00F1                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E52            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 38E6      __end_of_I2C_2_Master_Idle 60D4      __end_of_I2C_2_Master_Init 60AC  
    __end_of_I2C_2_Master_Read 5EF0              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 61B6  
                 setMotorPWM@m 000E                       _DataFlag 00FD    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 60FA  
                 _TxBufReadCnt 00F4                       _BlueMove 56FA                      _turnRight 51A6  
           __end_of_delayed_ms 601C                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 5DA8      __end_of_sendStringSerial4 6082                   ??_colour_rel 004F  
                _reverseDetect 5872  __end_of_I2C_2_Master_RepStart 61AC             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 49B0                   ??_initUSART4 0001                       _PinkMove 5B16  
                     __Hrparam 0000         __end_of_Colour_decider 192E                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 5380                    ??_RetryMove 001E           TurnDelay@Turn45Delay 0001  
                  _readColours 5760                ??_ReverseYellow 0024                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 38E6  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9                     _ANSELFbits 000EB4  
                _timed_forward 5052                     sprintf@fmt 00B2              ?_Forwardhalfblock 001A  
                     ___xxtofl 4508                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 023C                ___lwdiv@divisor 0009  
           __end_of_initUSART4 617E                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4D1E                       __ptext11 4B14  
                     __ptext20 46BC                       __ptext12 5FAC                       __ptext21 6052  
                     __ptext13 3E98                       __ptext30 6160                       __ptext22 617E  
                     __ptext14 55A6                       __ptext31 541E                       __ptext23 5760  
                     __ptext15 5E6A                       __ptext40 5A20                       __ptext32 3BEC  
                     __ptext24 5BB8                       __ptext16 4E1C                       __ptext41 5F6E  
                     __ptext33 5052                       __ptext25 5C08                       __ptext17 61C8  
                     __ptext50 60AC                       __ptext42 56FA                       __ptext34 5FE4  
                     __ptext26 5C58                       __ptext18 5EF0                       __ptext51 6082  
                     __ptext43 60D4                       __ptext35 4EE6                       __ptext27 5CA8  
                     __ptext19 49B0                       __ptext60 601C                       __ptext52 5AC4  
                     __ptext44 35B8                       __ptext36 4F9C                       __ptext28 61A2  
                     __ptext61 5818                       __ptext53 5CF8                       __ptext45 5A72  
                     __ptext37 57BE                       __ptext29 5EAE                       __ptext70 5620  
                     __ptext62 5872                       __ptext54 51A6                       __ptext46 6120  
                     __ptext38 5F30                       __ptext71 0E52                       __ptext63 52E2  
                     __ptext55 6140                       __ptext47 6196                       __ptext39 59CE  
                     __ptext72 4508                       __ptext64 61CA                       __ptext56 54A6  
                     __ptext48 61AC                       __ptext73 5DE0                       __ptext65 58CC  
                     __ptext57 5B16                       __ptext49 61B6                       __ptext74 2934  
                     __ptext66 5528                       __ptext58 5D46                       __ptext75 2DF4  
                     __ptext67 5380                       __ptext59 5244                       __ptext76 4C1A  
                     __ptext68 4844                       __ptext77 50FC                       __ptext69 60FA  
                     __ptext78 321E                 ?_reverseDetect 001A                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       _vfprintf 5926                  ??_turnRight45 001E  
                     main@temp 0164                       _turnLeft 5244               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 0170                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 4844                  turnRight45@mL 001A                  turnRight45@mR 001C  
                    sprintf@ap 00C2               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001E                     BlueMove@mL 0020                     BlueMove@mR 0022  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5A72                       sprintf@f 00C4  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5D46                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5D94                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 617E                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
