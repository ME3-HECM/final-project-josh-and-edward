

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 17:55:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90   000000                     
    91                           ; Generated 06/04/2022 GMT
    92                           ; 
    93                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F67K40 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126                           	psect	idataBANK0
   127   004B78                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _DataFlag
   131   004B78  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134   004B6E                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _high_threshold
   138   004B6E  03E8               	dw	1000
   139                           
   140                           ;initializer for _Turn45Delay
   141   004B70  00DC               	dw	220
   142                           
   143                           ;initializer for _power
   144   004B72  001E               	dw	30
   145   000000                     _TRISEbits	set	3973
   146   000000                     _TX4REG	set	3812
   147   000000                     _RC4STAbits	set	3815
   148   000000                     _SP4BRGH	set	3814
   149   000000                     _SSP2CON2bits	set	3802
   150   000000                     _RX4PPS	set	3605
   151   000000                     _SSP2CLKPPS	set	3612
   152   000000                     _SSP2DATPPS	set	3613
   153   000000                     _ANSELDbits	set	3751
   154   000000                     _SSP2ADD	set	3798
   155   000000                     _SSP2CON1bits	set	3801
   156   000000                     _LATAbits	set	3961
   157   000000                     _LATFbits	set	3966
   158   000000                     _LATGbits	set	3967
   159   000000                     _TRISAbits	set	3969
   160   000000                     _TRISGbits	set	3975
   161   000000                     _PORTFbits	set	3982
   162   000000                     _CCPR2H	set	4006
   163   000000                     _CCPR1H	set	4010
   164   000000                     _TRISCbits	set	3971
   165   000000                     _TRISDbits	set	3972
   166   000000                     _TRISFbits	set	3974
   167   000000                     _LATDbits	set	3964
   168   000000                     _RC4REG	set	3811
   169   000000                     _SP4BRGL	set	3813
   170   000000                     _TX4STAbits	set	3816
   171   000000                     _BAUD4CONbits	set	3817
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _SSP2STAT	set	3800
   174   000000                     _ANSELFbits	set	3764
   175   000000                     _SSP2BUF	set	3797
   176   000000                     _PIE4bits	set	3629
   177   000000                     _PIR4bits	set	3639
   178   000000                     _RC0PPS	set	3682
   179   000000                     _RD5PPS	set	3695
   180   000000                     _RE2PPS	set	3700
   181   000000                     _RD6PPS	set	3696
   182   000000                     _RC7PPS	set	3689
   183   000000                     _CCPR4H	set	3873
   184   000000                     _CCPR3H	set	3877
   185   000000                     _CCP1CONbits	set	4011
   186   000000                     _CCPTMRS0bits	set	4013
   187   000000                     _T2PR	set	4028
   188   000000                     _T2CONbits	set	4029
   189   000000                     _TMR0L	set	4051
   190   000000                     _TMR0H	set	4052
   191   000000                     _CCP2CONbits	set	4007
   192   000000                     _CCP3CONbits	set	3878
   193   000000                     _CCP4CONbits	set	3874
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _RE4PPS	set	3702
   197   000000                     _RG6PPS	set	3720
   198   000000                     _T2CLKCONbits	set	4031
   199   000000                     _T2HLTbits	set	4030
   200                           
   201                           	psect	smallconst
   202   000E00                     __psmallconst:
   203                           	callstack 0
   204   000E00  00                 	db	0
   205   000E01                     STR_1:
   206   000E01  72                 	db	114	;'r'
   207   000E02  65                 	db	101	;'e'
   208   000E03  64                 	db	100	;'d'
   209   000E04  3D                 	db	61	;'='
   210   000E05  25                 	db	37
   211   000E06  64                 	db	100	;'d'
   212   000E07  20                 	db	32
   213   000E08  67                 	db	103	;'g'
   214   000E09  72                 	db	114	;'r'
   215   000E0A  65                 	db	101	;'e'
   216   000E0B  65                 	db	101	;'e'
   217   000E0C  6E                 	db	110	;'n'
   218   000E0D  3D                 	db	61	;'='
   219   000E0E  25                 	db	37
   220   000E0F  64                 	db	100	;'d'
   221   000E10  20                 	db	32
   222   000E11  62                 	db	98	;'b'
   223   000E12  6C                 	db	108	;'l'
   224   000E13  75                 	db	117	;'u'
   225   000E14  65                 	db	101	;'e'
   226   000E15  3D                 	db	61	;'='
   227   000E16  25                 	db	37
   228   000E17  64                 	db	100	;'d'
   229   000E18  20                 	db	32
   230   000E19  74                 	db	116	;'t'
   231   000E1A  69                 	db	105	;'i'
   232   000E1B  6D                 	db	109	;'m'
   233   000E1C  65                 	db	101	;'e'
   234   000E1D  72                 	db	114	;'r'
   235   000E1E  3D                 	db	61	;'='
   236   000E1F  25                 	db	37
   237   000E20  64                 	db	100	;'d'
   238   000E21  20                 	db	32
   239   000E22  0D                 	db	13
   240   000E23  0A                 	db	10
   241   000E24  00                 	db	0
   242   000E25  00                 	db	0	; dummy byte at the end
   243   000000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247   004136                     __pcinit:
   248                           	callstack 0
   249   004136                     start_initialization:
   250                           	callstack 0
   251   004136                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK1 (6 bytes)
   255                           ; load TBLPTR registers with __pidataBANK1
   256   004136  0E6E               	movlw	low __pidataBANK1
   257   004138  6EF6               	movwf	tblptrl,c
   258   00413A  0E4B               	movlw	high __pidataBANK1
   259   00413C  6EF7               	movwf	tblptrh,c
   260   00413E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   261   004140  6EF8               	movwf	tblptru,c
   262   004142  EE01  F0CF         	lfsr	0,__pdataBANK1
   263   004146  EE10 F006          	lfsr	1,6
   264   00414A                     copy_data0:
   265   00414A  0009               	tblrd		*+
   266   00414C  CFF5 FFEE          	movff	tablat,postinc0
   267   004150  50E5               	movf	postdec1,w,c
   268   004152  50E1               	movf	fsr1l,w,c
   269   004154  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to BANK0 (1 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273   004156  0E78               	movlw	low __pidataBANK0
   274   004158  6EF6               	movwf	tblptrl,c
   275   00415A  0E4B               	movlw	high __pidataBANK0
   276   00415C  6EF7               	movwf	tblptrh,c
   277   00415E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278   004160  6EF8               	movwf	tblptru,c
   279   004162  0009               	tblrd		*+	;fetch initializer
   280   004164  CFF5 F0FE          	movff	tablat,__pdataBANK0
   281                           
   282                           ; Clear objects allocated to BANK2 (100 bytes)
   283   004168  EE02  F000         	lfsr	0,__pbssBANK2
   284   00416C  0E64               	movlw	100
   285   00416E                     clear_0:
   286   00416E  6AEE               	clrf	postinc0,c
   287   004170  06E8               	decf	wreg,f,c
   288   004172  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to BANK1 (207 bytes)
   291   004174  EE01  F000         	lfsr	0,__pbssBANK1
   292   004178  0ECF               	movlw	207
   293   00417A                     clear_1:
   294   00417A  6AEE               	clrf	postinc0,c
   295   00417C  06E8               	decf	wreg,f,c
   296   00417E  E1FD               	bnz	clear_1
   297                           
   298                           ; Clear objects allocated to BANK0 (14 bytes)
   299   004180  EE00  F0F0         	lfsr	0,__pbssBANK0
   300   004184  0E0E               	movlw	14
   301   004186                     clear_2:
   302   004186  6AEE               	clrf	postinc0,c
   303   004188  06E8               	decf	wreg,f,c
   304   00418A  E1FD               	bnz	clear_2
   305                           
   306                           ; Clear objects allocated to COMRAM (4 bytes)
   307   00418C  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   308   00418E  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   309   004190  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   310   004192  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   311   004194                     end_of_initialization:
   312                           	callstack 0
   313   004194                     __end_of__initialization:
   314                           	callstack 0
   315   004194  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   316   004196  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   317   004198  0E00               	movlw	low (__Lsmallconst shr (0+16))
   318   00419A  6EF8               	movwf	tblptru,c
   319   00419C  0E0E               	movlw	high __Lsmallconst
   320   00419E  6EF7               	movwf	tblptrh,c
   321   0041A0  0100               	movlb	0
   322   0041A2  EF81  F00C         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325   00005B                     __pbssCOMRAM:
   326                           	callstack 0
   327   00005B                     _TxBufReadCnt:
   328                           	callstack 0
   329   00005B                     	ds	1
   330   00005C                     _TxBufWriteCnt:
   331                           	callstack 0
   332   00005C                     	ds	1
   333   00005D                     _RxBufReadCnt:
   334                           	callstack 0
   335   00005D                     	ds	1
   336   00005E                     _RxBufWriteCnt:
   337                           	callstack 0
   338   00005E                     	ds	1
   339                           
   340                           	psect	bssBANK0
   341   0000F0                     __pbssBANK0:
   342                           	callstack 0
   343   0000F0                     _prec:
   344                           	callstack 0
   345   0000F0                     	ds	2
   346   0000F2                     _move_count:
   347                           	callstack 0
   348   0000F2                     	ds	2
   349   0000F4                     _flags:
   350                           	callstack 0
   351   0000F4                     	ds	1
   352   0000F5                     _motorL:
   353                           	callstack 0
   354   0000F5                     	ds	9
   355                           
   356                           	psect	dataBANK0
   357   0000FE                     __pdataBANK0:
   358                           	callstack 0
   359   0000FE                     _DataFlag:
   360                           	callstack 0
   361   0000FE                     	ds	1
   362                           
   363                           	psect	bssBANK1
   364   000100                     __pbssBANK1:
   365                           	callstack 0
   366   000100                     _EUSART4TXbuf:
   367                           	callstack 0
   368   000100                     	ds	60
   369   00013C                     _EUSART4RXbuf:
   370                           	callstack 0
   371   00013C                     	ds	20
   372   000150                     	ds	12
   373   00015C                     _width:
   374                           	callstack 0
   375   00015C                     	ds	2
   376   00015E                     _low_threshold:
   377                           	callstack 0
   378   00015E                     	ds	2
   379   000160                     _WayBack:
   380                           	callstack 0
   381   000160                     	ds	50
   382   000192                     _dbuf:
   383                           	callstack 0
   384   000192                     	ds	32
   385   0001B2                     _rel:
   386                           	callstack 0
   387   0001B2                     	ds	12
   388   0001BE                     _motorR:
   389                           	callstack 0
   390   0001BE                     	ds	9
   391   0001C7                     _vals:
   392                           	callstack 0
   393   0001C7                     	ds	8
   394                           
   395                           	psect	dataBANK1
   396   0001CF                     __pdataBANK1:
   397                           	callstack 0
   398   0001CF                     _high_threshold:
   399                           	callstack 0
   400   0001CF                     	ds	2
   401   0001D1                     _Turn45Delay:
   402                           	callstack 0
   403   0001D1                     	ds	2
   404   0001D3                     _power:
   405                           	callstack 0
   406   0001D3                     	ds	2
   407                           
   408                           	psect	bssBANK2
   409   000200                     __pbssBANK2:
   410                           	callstack 0
   411   000200                     _Time_forward:
   412                           	callstack 0
   413   000200                     	ds	100
   414                           
   415                           	psect	cstackBANK0
   416   000060                     __pcstackBANK0:
   417                           	callstack 0
   418   000060                     ?_sprintf:
   419                           	callstack 0
   420   000060                     sprintf@s:
   421                           	callstack 0
   422   000060                     _Colour_decider$2808:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x0
   426   000060                     	ds	2
   427   000062                     sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431   000062                     	ds	2
   432   000064                     Colour_decider@Cmax_i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x4
   436   000064                     	ds	2
   437   000066                     Colour_decider@RGB_col:
   438                           	callstack 0
   439                           
   440                           ; 12 bytes @ 0x6
   441   000066                     	ds	6
   442   00006C                     sprintf@ap:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   00006C                     	ds	2
   447   00006E                     sprintf@f:
   448                           	callstack 0
   449                           
   450                           ; 11 bytes @ 0xE
   451   00006E                     	ds	4
   452   000072                     Colour_decider@Cmax:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x12
   456   000072                     	ds	4
   457   000076                     Colour_decider@Cmin:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x16
   461   000076                     	ds	4
   462   00007A                     Colour_decider@i:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1A
   466   00007A                     	ds	2
   467   00007C                     Colour_decider@Hue:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x1C
   471   00007C                     	ds	4
   472   000080                     main@buf:
   473                           	callstack 0
   474                           
   475                           ; 100 bytes @ 0x20
   476   000080                     	ds	100
   477   0000E4                     main@temp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x84
   481   0000E4                     	ds	2
   482   0000E6                     main@temp_1189:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x86
   486   0000E6                     	ds	2
   487   0000E8                     main@run_flag:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x88
   491   0000E8                     	ds	2
   492   0000EA                     main@consecuitive:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x8A
   496   0000EA                     	ds	2
   497   0000EC                     main@colour:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x8C
   501   0000EC                     	ds	2
   502   0000EE                     main@prev_colour:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x8E
   506   0000EE                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     ??_I2C_2_Master_Idle:
   512   000001                     ?___wmul:
   513                           	callstack 0
   514   000001                     ?___fladd:
   515                           	callstack 0
   516   000001                     ?___xxtofl:
   517                           	callstack 0
   518   000001                     ?___aodiv:
   519                           	callstack 0
   520   000001                     ?___aomod:
   521                           	callstack 0
   522   000001                     sendCharSerial4@charToSend:
   523                           	callstack 0
   524   000001                     initDCmotorsPWM@PWMperiod:
   525                           	callstack 0
   526   000001                     getTMR0val@moving:
   527                           	callstack 0
   528   000001                     ___wmul@multiplier:
   529                           	callstack 0
   530   000001                     fputc@c:
   531                           	callstack 0
   532   000001                     ___flge@ff1:
   533                           	callstack 0
   534   000001                     ___fladd@b:
   535                           	callstack 0
   536   000001                     ___xxtofl@val:
   537                           	callstack 0
   538   000001                     ___aodiv@dividend:
   539                           	callstack 0
   540   000001                     ___aomod@dividend:
   541                           	callstack 0
   542                           
   543                           ; 8 bytes @ 0x0
   544   000001                     	ds	1
   545   000002                     ??_I2C_2_Master_Read:
   546   000002                     I2C_2_Master_Write@data_byte:
   547                           	callstack 0
   548   000002                     sendStringSerial4@string:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1
   552   000002                     	ds	1
   553   000003                     color_writetoaddr@value:
   554                           	callstack 0
   555   000003                     I2C_2_Master_Read@ack:
   556                           	callstack 0
   557   000003                     ___wmul@multiplicand:
   558                           	callstack 0
   559   000003                     fputc@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2
   563   000003                     	ds	1
   564   000004                     color_writetoaddr@address:
   565                           	callstack 0
   566   000004                     I2C_2_Master_Read@tmp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x3
   570   000004                     	ds	1
   571   000005                     ??_fputc:
   572   000005                     ??_color_click_init:
   573   000005                     ??___xxtofl:
   574   000005                     ?_color_read_lum:
   575                           	callstack 0
   576   000005                     ?_color_read_Red:
   577                           	callstack 0
   578   000005                     ?_color_read_Green:
   579                           	callstack 0
   580   000005                     ?_color_read_Blue:
   581                           	callstack 0
   582   000005                     ___wmul@product:
   583                           	callstack 0
   584   000005                     ___flge@ff2:
   585                           	callstack 0
   586   000005                     ___fladd@a:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x4
   590   000005                     	ds	2
   591   000007                     ??_color_read_lum:
   592   000007                     ??_color_read_Red:
   593   000007                     ??_color_read_Green:
   594   000007                     ??_color_read_Blue:
   595   000007                     ?___lwdiv:
   596                           	callstack 0
   597   000007                     ___lwdiv@dividend:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601   000007                     	ds	2
   602   000009                     ??___fladd:
   603   000009                     ??___flge:
   604   000009                     ___xxtofl@sign:
   605                           	callstack 0
   606   000009                     ___lwdiv@divisor:
   607                           	callstack 0
   608   000009                     ___aodiv@divisor:
   609                           	callstack 0
   610   000009                     ___aomod@divisor:
   611                           	callstack 0
   612                           
   613                           ; 8 bytes @ 0x8
   614   000009                     	ds	1
   615   00000A                     ___xxtofl@exp:
   616                           	callstack 0
   617   00000A                     color_read_lum@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Red@tmp:
   620                           	callstack 0
   621   00000A                     color_read_Green@tmp:
   622                           	callstack 0
   623   00000A                     color_read_Blue@tmp:
   624                           	callstack 0
   625   00000A                     fputs@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629   00000A                     	ds	1
   630   00000B                     ___lwdiv@quotient:
   631                           	callstack 0
   632   00000B                     ___xxtofl@arg:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0xA
   636   00000B                     	ds	1
   637   00000C                     readColours@vals:
   638                           	callstack 0
   639   00000C                     fputs@fp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xB
   643   00000C                     	ds	1
   644   00000D                     ___lwdiv@counter:
   645                           	callstack 0
   646   00000D                     ___fladd@signs:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0xC
   650   00000D                     	ds	1
   651   00000E                     ___fladd@aexp:
   652                           	callstack 0
   653   00000E                     fputs@c:
   654                           	callstack 0
   655   00000E                     setMotorPWM@m:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xD
   659   00000E                     	ds	1
   660   00000F                     ___fladd@bexp:
   661                           	callstack 0
   662   00000F                     fputs@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xE
   666   00000F                     	ds	1
   667   000010                     ??_setMotorPWM:
   668   000010                     ___fladd@grs:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xF
   672   000010                     	ds	1
   673   000011                     ?___flsub:
   674                           	callstack 0
   675   000011                     ___aodiv@counter:
   676                           	callstack 0
   677   000011                     ___aomod@counter:
   678                           	callstack 0
   679   000011                     pad@fp:
   680                           	callstack 0
   681   000011                     ___flsub@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x10
   685   000011                     	ds	1
   686   000012                     setMotorPWM@posDuty:
   687                           	callstack 0
   688   000012                     ___aodiv@sign:
   689                           	callstack 0
   690   000012                     ___aomod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x11
   694   000012                     	ds	1
   695   000013                     ?_abs:
   696                           	callstack 0
   697   000013                     setMotorPWM@negDuty:
   698                           	callstack 0
   699   000013                     pad@buf:
   700                           	callstack 0
   701   000013                     abs@a:
   702                           	callstack 0
   703   000013                     ___aodiv@quotient:
   704                           	callstack 0
   705                           
   706                           ; 8 bytes @ 0x12
   707   000013                     	ds	1
   708   000014                     stop@mL:
   709                           	callstack 0
   710   000014                     turnLeft@mL:
   711                           	callstack 0
   712   000014                     turnRight@mL:
   713                           	callstack 0
   714   000014                     fullSpeedAhead@mL:
   715                           	callstack 0
   716   000014                     fullSpeedBack@mL:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x13
   720   000014                     	ds	1
   721   000015                     ??_abs:
   722   000015                     pad@p:
   723                           	callstack 0
   724   000015                     ___flsub@a:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x14
   728   000015                     	ds	1
   729   000016                     stop@mR:
   730                           	callstack 0
   731   000016                     turnLeft@mR:
   732                           	callstack 0
   733   000016                     turnRight@mR:
   734                           	callstack 0
   735   000016                     fullSpeedAhead@mR:
   736                           	callstack 0
   737   000016                     fullSpeedBack@mR:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x15
   741   000016                     	ds	1
   742   000017                     ??_pad:
   743                           
   744                           ; 1 bytes @ 0x16
   745   000017                     	ds	1
   746   000018                     ??_fullSpeedAhead:
   747   000018                     ??_stop:
   748   000018                     ??_turnLeft:
   749   000018                     ??_turnRight:
   750   000018                     ??_fullSpeedBack:
   751   000018                     pad@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x17
   755   000018                     	ds	1
   756   000019                     ?___fldiv:
   757                           	callstack 0
   758   000019                     ___fleq@ff1:
   759                           	callstack 0
   760   000019                     ___fldiv@b:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x18
   764   000019                     	ds	1
   765   00001A                     turnRight45@mL:
   766                           	callstack 0
   767   00001A                     turnLeft45@mL:
   768                           	callstack 0
   769   00001A                     reverseDetect@mL:
   770                           	callstack 0
   771   00001A                     reverseOneBlock@mL:
   772                           	callstack 0
   773   00001A                     ForwardOneBlock@mL:
   774                           	callstack 0
   775   00001A                     Forwardhalfblock@mL:
   776                           	callstack 0
   777   00001A                     RetryMove@mL:
   778                           	callstack 0
   779   00001A                     pad@w:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x19
   783   00001A                     	ds	2
   784   00001C                     turnRight45@mR:
   785                           	callstack 0
   786   00001C                     turnLeft45@mR:
   787                           	callstack 0
   788   00001C                     reverseDetect@mR:
   789                           	callstack 0
   790   00001C                     reverseOneBlock@mR:
   791                           	callstack 0
   792   00001C                     ForwardOneBlock@mR:
   793                           	callstack 0
   794   00001C                     Forwardhalfblock@mR:
   795                           	callstack 0
   796   00001C                     RetryMove@mR:
   797                           	callstack 0
   798   00001C                     dtoa@fp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x1B
   802   00001C                     	ds	1
   803   00001D                     ___fleq@ff2:
   804                           	callstack 0
   805   00001D                     ___fldiv@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1C
   809   00001D                     	ds	1
   810   00001E                     ??_Forwardhalfblock:
   811   00001E                     ??_RetryMove:
   812   00001E                     ??_turnRight45:
   813   00001E                     ??_turnLeft45:
   814   00001E                     ??_reverseDetect:
   815   00001E                     ??_reverseOneBlock:
   816   00001E                     ??_ForwardOneBlock:
   817   00001E                     dtoa@d:
   818                           	callstack 0
   819                           
   820                           ; 8 bytes @ 0x1D
   821   00001E                     	ds	2
   822   000020                     RedMove@mL:
   823                           	callstack 0
   824   000020                     GreenMove@mL:
   825                           	callstack 0
   826   000020                     BlueMove@mL:
   827                           	callstack 0
   828   000020                     YellowMove@mL:
   829                           	callstack 0
   830   000020                     PinkMove@mL:
   831                           	callstack 0
   832   000020                     OrangeMove@mL:
   833                           	callstack 0
   834   000020                     LightBlueMove@mL:
   835                           	callstack 0
   836   000020                     ReverseYellow@mL:
   837                           	callstack 0
   838   000020                     ReversePink@mL:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1F
   842   000020                     	ds	1
   843   000021                     ??___fldiv:
   844   000021                     ??___fleq:
   845                           
   846                           ; 1 bytes @ 0x20
   847   000021                     	ds	1
   848   000022                     RedMove@mR:
   849                           	callstack 0
   850   000022                     GreenMove@mR:
   851                           	callstack 0
   852   000022                     BlueMove@mR:
   853                           	callstack 0
   854   000022                     YellowMove@mR:
   855                           	callstack 0
   856   000022                     PinkMove@mR:
   857                           	callstack 0
   858   000022                     OrangeMove@mR:
   859                           	callstack 0
   860   000022                     LightBlueMove@mR:
   861                           	callstack 0
   862   000022                     ReverseYellow@mR:
   863                           	callstack 0
   864   000022                     ReversePink@mR:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x21
   868   000022                     	ds	2
   869   000024                     go_Home@WayBack:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x23
   873   000024                     	ds	1
   874   000025                     ___fldiv@rem:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x24
   878   000025                     	ds	1
   879   000026                     ??_dtoa:
   880   000026                     go_Home@Time_forward:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x25
   884   000026                     	ds	2
   885   000028                     ??_go_Home:
   886                           
   887                           ; 1 bytes @ 0x27
   888   000028                     	ds	1
   889   000029                     ___fldiv@sign:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x28
   893   000029                     	ds	1
   894   00002A                     ___fldiv@new_exp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x29
   898   00002A                     	ds	2
   899   00002C                     ___fldiv@grs:
   900                           	callstack 0
   901                           
   902                           ; 4 bytes @ 0x2B
   903   00002C                     	ds	1
   904   00002D                     go_Home@i:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x2C
   908   00002D                     	ds	1
   909   00002E                     _dtoa$2486:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x2D
   913   00002E                     	ds	2
   914   000030                     ___fldiv@bexp:
   915                           	callstack 0
   916   000030                     dtoa@p:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x2F
   920   000030                     	ds	1
   921   000031                     ___fldiv@aexp:
   922                           	callstack 0
   923                           
   924                           ; 1 bytes @ 0x30
   925   000031                     	ds	1
   926   000032                     ?___flmul:
   927                           	callstack 0
   928   000032                     colour_rel@vals:
   929                           	callstack 0
   930   000032                     dtoa@w:
   931                           	callstack 0
   932   000032                     ___flmul@b:
   933                           	callstack 0
   934                           
   935                           ; 4 bytes @ 0x31
   936   000032                     	ds	2
   937   000034                     colour_rel@rel:
   938                           	callstack 0
   939   000034                     dtoa@n:
   940                           	callstack 0
   941                           
   942                           ; 8 bytes @ 0x33
   943   000034                     	ds	2
   944   000036                     colour_rel@L:
   945                           	callstack 0
   946   000036                     ___flmul@a:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x35
   950   000036                     	ds	4
   951   00003A                     ??___flmul:
   952   00003A                     _colour_rel$2806:
   953                           	callstack 0
   954                           
   955                           ; 4 bytes @ 0x39
   956   00003A                     	ds	2
   957   00003C                     dtoa@i:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x3B
   961   00003C                     	ds	2
   962   00003E                     ___flmul@sign:
   963                           	callstack 0
   964   00003E                     dtoa@s:
   965                           	callstack 0
   966   00003E                     _colour_rel$2807:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x3D
   970   00003E                     	ds	1
   971   00003F                     vfpfcnvrt@fp:
   972                           	callstack 0
   973   00003F                     ___flmul@grs:
   974                           	callstack 0
   975                           
   976                           ; 4 bytes @ 0x3E
   977   00003F                     	ds	2
   978   000041                     vfpfcnvrt@fmt:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x40
   982   000041                     	ds	1
   983   000042                     colour_rel@R:
   984                           	callstack 0
   985                           
   986                           ; 4 bytes @ 0x41
   987   000042                     	ds	1
   988   000043                     ___flmul@aexp:
   989                           	callstack 0
   990   000043                     vfpfcnvrt@ap:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0x42
   994   000043                     	ds	1
   995   000044                     ___flmul@bexp:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x43
   999   000044                     	ds	1
  1000   000045                     ??_vfpfcnvrt:
  1001   000045                     ___flmul@prod:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x44
  1005   000045                     	ds	1
  1006   000046                     colour_rel@G:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x45
  1010   000046                     	ds	1
  1011   000047                     vfpfcnvrt@convarg:
  1012                           	callstack 0
  1013                           
  1014                           ; 8 bytes @ 0x46
  1015   000047                     	ds	2
  1016   000049                     ___flmul@temp:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x48
  1020   000049                     	ds	1
  1021   00004A                     colour_rel@B:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x49
  1025   00004A                     	ds	1
  1026   00004B                     ?_Colour_decider:
  1027                           	callstack 0
  1028   00004B                     Colour_decider@vals:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x4A
  1032   00004B                     	ds	2
  1033   00004D                     Colour_decider@rel:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x4C
  1037   00004D                     	ds	2
  1038   00004F                     ??_Colour_decider:
  1039   00004F                     vfpfcnvrt@cp:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x4E
  1043   00004F                     	ds	2
  1044   000051                     ?_vfprintf:
  1045                           	callstack 0
  1046   000051                     vfprintf@fp:
  1047                           	callstack 0
  1048                           
  1049                           ; 2 bytes @ 0x50
  1050   000051                     	ds	2
  1051   000053                     vfprintf@fmt:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x52
  1055   000053                     	ds	2
  1056   000055                     vfprintf@ap:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x54
  1060   000055                     	ds	2
  1061   000057                     vfprintf@cfmt:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x56
  1065   000057                     	ds	2
  1066   000059                     ??_main:
  1067                           
  1068                           ; 1 bytes @ 0x58
  1069   000059                     	ds	2
  1070                           
  1071 ;;
  1072 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1073 ;;
  1074 ;; *************** function _main *****************
  1075 ;; Defined at:
  1076 ;;		line 30 in file "main.c"
  1077 ;; Parameters:    Size  Location     Type
  1078 ;;		None
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  colour          2  140[BANK0 ] int 
  1081 ;;  temp            2  134[BANK0 ] int 
  1082 ;;  temp            2  132[BANK0 ] int 
  1083 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1084 ;;  prev_colour     2  142[BANK0 ] int 
  1085 ;;  consecuitive    2  138[BANK0 ] int 
  1086 ;;  run_flag        2  136[BANK0 ] int 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1100 ;;Total ram usage:      114 bytes
  1101 ;; Hardware stack levels required when called: 9
  1102 ;; This function calls:
  1103 ;;		_BlueMove
  1104 ;;		_Colour_decider
  1105 ;;		_Forwardhalfblock
  1106 ;;		_GreenMove
  1107 ;;		_I2C_2_Master_Init
  1108 ;;		_Interrupts_init
  1109 ;;		_LightBlueMove
  1110 ;;		_OrangeMove
  1111 ;;		_PinkMove
  1112 ;;		_RedMove
  1113 ;;		_RetryMove
  1114 ;;		_Timer0_init
  1115 ;;		_YellowMove
  1116 ;;		_color_click_init
  1117 ;;		_colour_rel
  1118 ;;		_fullSpeedAhead
  1119 ;;		_getTMR0val
  1120 ;;		_go_Home
  1121 ;;		_initDCmotorsPWM
  1122 ;;		_initUSART4
  1123 ;;		_readColours
  1124 ;;		_sendStringSerial4
  1125 ;;		_sprintf
  1126 ;;		_stop
  1127 ;; This function is called by:
  1128 ;;		Startup code after reset
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text0
  1133   001902                     __ptext0:
  1134                           	callstack 0
  1135   001902                     _main:
  1136                           	callstack 22
  1137   001902                     
  1138                           ;main.c: 31:     initUSART4();
  1139   001902  EC87  F025         	call	_initUSART4	;wreg free
  1140   001906                     
  1141                           ;main.c: 32:     Interrupts_init();
  1142   001906  ECBB  F025         	call	_Interrupts_init	;wreg free
  1143   00190A                     
  1144                           ;main.c: 33:     color_click_init();
  1145   00190A  ECBC  F022         	call	_color_click_init	;wreg free
  1146   00190E                     
  1147                           ;main.c: 34:     I2C_2_Master_Init();
  1148   00190E  EC18  F025         	call	_I2C_2_Master_Init	;wreg free
  1149   001912                     
  1150                           ;main.c: 35:     Timer0_init();
  1151   001912  EC77  F025         	call	_Timer0_init	;wreg free
  1152   001916                     
  1153                           ;main.c: 36:     initDCmotorsPWM(200);
  1154   001916  0E00               	movlw	0
  1155   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1156   00191A  0EC8               	movlw	200
  1157   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1158   00191E  EC60  F01F         	call	_initDCmotorsPWM	;wreg free
  1159   001922                     
  1160                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1161   001922  9287               	bcf	135,1,c	;volatile
  1162   001924                     
  1163                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1164   001924  9881               	bcf	129,4,c	;volatile
  1165   001926                     
  1166                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1167   001926  9E86               	bcf	134,7,c	;volatile
  1168   001928                     
  1169                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1170   001928  8486               	bsf	134,2,c	;volatile
  1171   00192A                     
  1172                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1173   00192A  010E               	movlb	14	; () banked
  1174   00192C  95B4               	bcf	180,2,b	;volatile
  1175   00192E                     
  1176                           ; BSR set to: 14
  1177                           ;main.c: 43:     LATGbits.LATG1=1;
  1178   00192E  827F               	bsf	127,1,c	;volatile
  1179   001930                     
  1180                           ; BSR set to: 14
  1181                           ;main.c: 44:     LATAbits.LATA4=1;
  1182   001930  8879               	bsf	121,4,c	;volatile
  1183   001932                     
  1184                           ; BSR set to: 14
  1185                           ;main.c: 45:     LATFbits.LATF7=1;
  1186   001932  8E7E               	bsf	126,7,c	;volatile
  1187   001934                     
  1188                           ; BSR set to: 14
  1189                           ;main.c: 49:     motorL.power=0;
  1190   001934  0E00               	movlw	0
  1191   001936  0100               	movlb	0	; () banked
  1192   001938  6FF5               	movwf	_motorL& (0+255),b
  1193   00193A                     
  1194                           ; BSR set to: 0
  1195                           ;main.c: 50:     motorL.direction=1;
  1196   00193A  0E01               	movlw	1
  1197   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1198   00193E                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 51:     motorL.brakemode=1;
  1201   00193E  0E01               	movlw	1
  1202   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1203   001942                     
  1204                           ; BSR set to: 0
  1205                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1206   001942  0EAA               	movlw	170
  1207   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1208   001946  0E0F               	movlw	15
  1209   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1210   00194A                     
  1211                           ; BSR set to: 0
  1212                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1213   00194A  0EA6               	movlw	166
  1214   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1215   00194E  0E0F               	movlw	15
  1216   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1217   001952                     
  1218                           ; BSR set to: 0
  1219                           ;main.c: 54:     motorL.PWMperiod=200;
  1220   001952  0E00               	movlw	0
  1221   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1222   001956  0EC8               	movlw	200
  1223   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1224   00195A                     
  1225                           ; BSR set to: 0
  1226                           ;main.c: 55:     motorR.power=0;
  1227   00195A  0E00               	movlw	0
  1228   00195C  0101               	movlb	1	; () banked
  1229   00195E  6FBE               	movwf	_motorR& (0+255),b
  1230   001960                     
  1231                           ; BSR set to: 1
  1232                           ;main.c: 56:     motorR.direction=1;
  1233   001960  0E01               	movlw	1
  1234   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1235   001964                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 57:     motorR.brakemode=1;
  1238   001964  0E01               	movlw	1
  1239   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1240   001968                     
  1241                           ; BSR set to: 1
  1242                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1243   001968  0E25               	movlw	37
  1244   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1245   00196C  0E0F               	movlw	15
  1246   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1247   001970                     
  1248                           ; BSR set to: 1
  1249                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1250   001970  0E21               	movlw	33
  1251   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1252   001974  0E0F               	movlw	15
  1253   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1254   001978                     
  1255                           ; BSR set to: 1
  1256                           ;main.c: 60:     motorR.PWMperiod=200;
  1257   001978  0E00               	movlw	0
  1258   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1259   00197C  0EC8               	movlw	200
  1260   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1261   001980                     
  1262                           ; BSR set to: 1
  1263                           ;main.c: 61:     int consecuitive=0;
  1264   001980  0E00               	movlw	0
  1265   001982  0100               	movlb	0	; () banked
  1266   001984  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1267   001986  0E00               	movlw	0
  1268   001988  6FEA               	movwf	main@consecuitive& (0+255),b
  1269   00198A                     
  1270                           ; BSR set to: 0
  1271                           ;main.c: 62:     int prev_colour =0;
  1272   00198A  0E00               	movlw	0
  1273   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1274   00198E  0E00               	movlw	0
  1275   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1276   001992                     
  1277                           ; BSR set to: 0
  1278                           ;main.c: 63:     int run_flag=1;
  1279   001992  0E00               	movlw	0
  1280   001994  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1281   001996  0E01               	movlw	1
  1282   001998  6FE8               	movwf	main@run_flag& (0+255),b
  1283   00199A                     
  1284                           ; BSR set to: 0
  1285                           ;main.c: 64:     move_count=-1;
  1286   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1287   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1288   00199E                     l396:
  1289   00199E  B48E               	btfsc	142,2,c	;volatile
  1290   0019A0  EFD4  F00C         	goto	u4351
  1291   0019A4  EFD6  F00C         	goto	u4350
  1292   0019A8                     u4351:
  1293   0019A8  EFCF  F00C         	goto	l396
  1294   0019AC                     u4350:
  1295   0019AC                     
  1296                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1297   0019AC  0E52               	movlw	82
  1298   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1299   0019B0  0E2B               	movlw	43
  1300   0019B2  6E59               	movwf	??_main^0,c
  1301   0019B4  0E00               	movlw	0
  1302   0019B6                     u4567:
  1303   0019B6  2EE8               	decfsz	wreg,f,c
  1304   0019B8  D7FE               	bra	u4567
  1305   0019BA  2E59               	decfsz	??_main^0,f,c
  1306   0019BC  D7FC               	bra	u4567
  1307   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1308   0019C0  D7FA               	bra	u4567
  1309   0019C2  D000               	nop2	
  1310   0019C4                     
  1311                           ;main.c: 67:     TMR0H=0;
  1312   0019C4  0E00               	movlw	0
  1313   0019C6  6ED4               	movwf	212,c	;volatile
  1314   0019C8                     
  1315                           ;main.c: 68:     TMR0L=0;
  1316   0019C8  0E00               	movlw	0
  1317   0019CA  6ED3               	movwf	211,c	;volatile
  1318                           
  1319                           ;main.c: 69:     while (run_flag)
  1320   0019CC  EFFF  F00E         	goto	l4753
  1321   0019D0                     l4629:
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1325   0019D0  0EF5               	movlw	low _motorL
  1326   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1327   0019D4  0E00               	movlw	high _motorL
  1328   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1329   0019D8  0EBE               	movlw	low _motorR
  1330   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1331   0019DC  0E01               	movlw	high _motorR
  1332   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1333   0019E0  EC73  F01E         	call	_fullSpeedAhead	;wreg free
  1334   0019E4                     
  1335                           ;main.c: 77:         readColours(&vals);
  1336   0019E4  0EC7               	movlw	low _vals
  1337   0019E6  6E0C               	movwf	readColours@vals^0,c
  1338   0019E8  0E01               	movlw	high _vals
  1339   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1340   0019EC  EC06  F021         	call	_readColours	;wreg free
  1341   0019F0                     
  1342                           ;main.c: 80:         colour_rel(&vals, &rel);
  1343   0019F0  0EC7               	movlw	low _vals
  1344   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1345   0019F4  0E01               	movlw	high _vals
  1346   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1347   0019F8  0EB2               	movlw	low _rel
  1348   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1349   0019FC  0E01               	movlw	high _rel
  1350   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1351   001A00  EC4D  F015         	call	_colour_rel	;wreg free
  1352   001A04                     
  1353                           ;main.c: 83:         if (vals.L>=500){
  1354   001A04  0101               	movlb	1	; () banked
  1355   001A06  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1356   001A08  EF0F  F00D         	goto	u4361
  1357   001A0C  0EF4               	movlw	244
  1358   001A0E  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1359   001A10  0E01               	movlw	1
  1360   001A12  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1361   001A14  A0D8               	btfss	status,0,c
  1362   001A16  EF0F  F00D         	goto	u4361
  1363   001A1A  EF11  F00D         	goto	u4360
  1364   001A1E                     u4361:
  1365   001A1E  EFDC  F00E         	goto	l401
  1366   001A22                     u4360:
  1367   001A22                     
  1368                           ; BSR set to: 1
  1369                           ;main.c: 84:             Forwardhalfblock(&motorL,&motorR);
  1370   001A22  0EF5               	movlw	low _motorL
  1371   001A24  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1372   001A26  0E00               	movlw	high _motorL
  1373   001A28  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1374   001A2A  0EBE               	movlw	low _motorR
  1375   001A2C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1376   001A2E  0E01               	movlw	high _motorR
  1377   001A30  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1378   001A32  EC62  F021         	call	_Forwardhalfblock	;wreg free
  1379                           
  1380                           ;main.c: 86:             stop(&motorL, &motorR);
  1381   001A36  0EF5               	movlw	low _motorL
  1382   001A38  6E14               	movwf	stop@mL^0,c
  1383   001A3A  0E00               	movlw	high _motorL
  1384   001A3C  6E15               	movwf	(stop@mL+1)^0,c
  1385   001A3E  0EBE               	movlw	low _motorR
  1386   001A40  6E16               	movwf	stop@mR^0,c
  1387   001A42  0E01               	movlw	high _motorR
  1388   001A44  6E17               	movwf	(stop@mR+1)^0,c
  1389   001A46  ECE5  F01F         	call	_stop	;wreg free
  1390   001A4A                     
  1391                           ;main.c: 87:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1392   001A4A  0E11               	movlw	17
  1393   001A4C  6E5A               	movwf	(??_main+1)^0,c
  1394   001A4E  0E3C               	movlw	60
  1395   001A50  6E59               	movwf	??_main^0,c
  1396   001A52  0ECB               	movlw	203
  1397   001A54                     u4577:
  1398   001A54  2EE8               	decfsz	wreg,f,c
  1399   001A56  D7FE               	bra	u4577
  1400   001A58  2E59               	decfsz	??_main^0,f,c
  1401   001A5A  D7FC               	bra	u4577
  1402   001A5C  2E5A               	decfsz	(??_main+1)^0,f,c
  1403   001A5E  D7FA               	bra	u4577
  1404   001A60  F000               	nop	
  1405   001A62                     
  1406                           ;main.c: 92:             move_count++;
  1407   001A62  0100               	movlb	0	; () banked
  1408   001A64  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1409   001A66  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1410   001A68                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 93:             getTMR0val();
  1413   001A68  EC41  F025         	call	_getTMR0val	;wreg free
  1414                           
  1415                           ;main.c: 95:             while (consecuitive<20){
  1416   001A6C  EF6B  F00D         	goto	l4657
  1417   001A70                     l4645:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;main.c: 96:                 int colour = Colour_decider(&vals, &rel);
  1421   001A70  0EC7               	movlw	low _vals
  1422   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1423   001A74  0E01               	movlw	high _vals
  1424   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1425   001A78  0EB2               	movlw	low _rel
  1426   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1427   001A7C  0E01               	movlw	high _rel
  1428   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1429   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1430   001A84  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1431   001A88  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1432   001A8C                     
  1433                           ;main.c: 97:                 if (colour==prev_colour){
  1434   001A8C  0100               	movlb	0	; () banked
  1435   001A8E  51EE               	movf	main@prev_colour& (0+255),w,b
  1436   001A90  19EC               	xorwf	main@colour& (0+255),w,b
  1437   001A92  E107               	bnz	u4371
  1438   001A94  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1439   001A96  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1440   001A98  A4D8               	btfss	status,2,c
  1441   001A9A  EF51  F00D         	goto	u4371
  1442   001A9E  EF53  F00D         	goto	u4370
  1443   001AA2                     u4371:
  1444   001AA2  EF57  F00D         	goto	l4651
  1445   001AA6                     u4370:
  1446   001AA6                     
  1447                           ; BSR set to: 0
  1448                           ;main.c: 98:                     consecuitive++;
  1449   001AA6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1450   001AA8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1451                           
  1452                           ;main.c: 99:                 }
  1453   001AAA  EF5B  F00D         	goto	l4653
  1454   001AAE                     l4651:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;main.c: 101:                     consecuitive=0;
  1458   001AAE  0E00               	movlw	0
  1459   001AB0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1460   001AB2  0E00               	movlw	0
  1461   001AB4  6FEA               	movwf	main@consecuitive& (0+255),b
  1462   001AB6                     l4653:
  1463                           
  1464                           ; BSR set to: 0
  1465                           ;main.c: 103:                 prev_colour=colour;
  1466   001AB6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1467   001ABA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1468   001ABE                     
  1469                           ; BSR set to: 0
  1470                           ;main.c: 104:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1471   001ABE  0E05               	movlw	5
  1472   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1473   001AC2  0E0F               	movlw	15
  1474   001AC4  6E59               	movwf	??_main^0,c
  1475   001AC6  0EF1               	movlw	241
  1476   001AC8                     u4587:
  1477   001AC8  2EE8               	decfsz	wreg,f,c
  1478   001ACA  D7FE               	bra	u4587
  1479   001ACC  2E59               	decfsz	??_main^0,f,c
  1480   001ACE  D7FC               	bra	u4587
  1481   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1482   001AD2  D7FA               	bra	u4587
  1483   001AD4  F000               	nop	
  1484   001AD6                     l4657:
  1485                           
  1486                           ;main.c: 95:             while (consecuitive<20){
  1487   001AD6  0100               	movlb	0	; () banked
  1488   001AD8  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1489   001ADA  EF78  F00D         	goto	u4381
  1490   001ADE  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1491   001AE0  E109               	bnz	u4380
  1492   001AE2  0E14               	movlw	20
  1493   001AE4  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1494   001AE6  A0D8               	btfss	status,0,c
  1495   001AE8  EF78  F00D         	goto	u4381
  1496   001AEC  EF7A  F00D         	goto	u4380
  1497   001AF0                     u4381:
  1498   001AF0  EF38  F00D         	goto	l4645
  1499   001AF4                     u4380:
  1500   001AF4                     
  1501                           ; BSR set to: 0
  1502                           ;main.c: 106:             consecuitive=0;
  1503   001AF4  0E00               	movlw	0
  1504   001AF6  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1505   001AF8  0E00               	movlw	0
  1506   001AFA  6FEA               	movwf	main@consecuitive& (0+255),b
  1507   001AFC                     
  1508                           ; BSR set to: 0
  1509                           ;main.c: 107:             int temp=TMR0L;
  1510   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1511   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1512   001B02                     
  1513                           ; BSR set to: 0
  1514                           ;main.c: 108:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1515   001B02  0E80               	movlw	low main@buf
  1516   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1517   001B06  0E00               	movlw	high main@buf
  1518   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1519   001B0A  0E01               	movlw	low STR_1
  1520   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1521   001B0E  0E0E               	movlw	high STR_1
  1522   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1523   001B12  C1C7  F064         	movff	_vals,?_sprintf+4
  1524   001B16  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1525   001B1A  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1526   001B1E  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1527   001B22  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1528   001B26  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1529   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1530   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1531   001B30  EC41  F022         	call	_sprintf	;wreg free
  1532   001B34                     
  1533                           ;main.c: 111:             sendStringSerial4(buf);
  1534   001B34  0E80               	movlw	low main@buf
  1535   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1536   001B38  0E00               	movlw	high main@buf
  1537   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1538   001B3C  EC00  F025         	call	_sendStringSerial4	;wreg free
  1539   001B40                     
  1540                           ;main.c: 113:             if (prev_colour==1){
  1541   001B40  0100               	movlb	0	; () banked
  1542   001B42  05EE               	decf	main@prev_colour& (0+255),w,b
  1543   001B44  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1544   001B46  A4D8               	btfss	status,2,c
  1545   001B48  EFA8  F00D         	goto	u4391
  1546   001B4C  EFAA  F00D         	goto	u4390
  1547   001B50                     u4391:
  1548   001B50  EFC3  F00D         	goto	l4677
  1549   001B54                     u4390:
  1550   001B54                     
  1551                           ; BSR set to: 0
  1552                           ;main.c: 114:                 RedMove(&motorL, &motorR);
  1553   001B54  0EF5               	movlw	low _motorL
  1554   001B56  6E20               	movwf	RedMove@mL^0,c
  1555   001B58  0E00               	movlw	high _motorL
  1556   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1557   001B5C  0EBE               	movlw	low _motorR
  1558   001B5E  6E22               	movwf	RedMove@mR^0,c
  1559   001B60  0E01               	movlw	high _motorR
  1560   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1561   001B64  ECC2  F024         	call	_RedMove	;wreg free
  1562   001B68                     
  1563                           ;main.c: 115:                 TMR0H=0;
  1564   001B68  0E00               	movlw	0
  1565   001B6A  6ED4               	movwf	212,c	;volatile
  1566   001B6C                     
  1567                           ;main.c: 116:                 TMR0L=0;
  1568   001B6C  0E00               	movlw	0
  1569   001B6E  6ED3               	movwf	211,c	;volatile
  1570   001B70                     
  1571                           ;main.c: 117:                 WayBack[move_count]=1;
  1572   001B70  0E60               	movlw	low _WayBack
  1573   001B72  0100               	movlb	0	; () banked
  1574   001B74  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1575   001B76  6ED9               	movwf	fsr2l,c
  1576   001B78  0E01               	movlw	high _WayBack
  1577   001B7A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1578   001B7C  6EDA               	movwf	fsr2h,c
  1579   001B7E  0E01               	movlw	1
  1580   001B80  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;main.c: 118:             }
  1583   001B82  EFFF  F00E         	goto	l4753
  1584   001B86                     l4677:
  1585                           
  1586                           ; BSR set to: 0
  1587   001B86  0E02               	movlw	2
  1588   001B88  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1589   001B8A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1590   001B8C  A4D8               	btfss	status,2,c
  1591   001B8E  EFCB  F00D         	goto	u4401
  1592   001B92  EFCD  F00D         	goto	u4400
  1593   001B96                     u4401:
  1594   001B96  EFE6  F00D         	goto	l4687
  1595   001B9A                     u4400:
  1596   001B9A                     
  1597                           ; BSR set to: 0
  1598                           ;main.c: 120:                 OrangeMove(&motorL, &motorR);
  1599   001B9A  0EF5               	movlw	low _motorL
  1600   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1601   001B9E  0E00               	movlw	high _motorL
  1602   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1603   001BA2  0EBE               	movlw	low _motorR
  1604   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1605   001BA6  0E01               	movlw	high _motorR
  1606   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1607   001BAA  EC6A  F022         	call	_OrangeMove	;wreg free
  1608   001BAE                     
  1609                           ;main.c: 121:                 TMR0H=0;
  1610   001BAE  0E00               	movlw	0
  1611   001BB0  6ED4               	movwf	212,c	;volatile
  1612   001BB2                     
  1613                           ;main.c: 122:                 TMR0L=0;
  1614   001BB2  0E00               	movlw	0
  1615   001BB4  6ED3               	movwf	211,c	;volatile
  1616   001BB6                     
  1617                           ;main.c: 123:                 WayBack[move_count]=2;
  1618   001BB6  0E60               	movlw	low _WayBack
  1619   001BB8  0100               	movlb	0	; () banked
  1620   001BBA  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1621   001BBC  6ED9               	movwf	fsr2l,c
  1622   001BBE  0E01               	movlw	high _WayBack
  1623   001BC0  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1624   001BC2  6EDA               	movwf	fsr2h,c
  1625   001BC4  0E02               	movlw	2
  1626   001BC6  6EDF               	movwf	indf2,c
  1627                           
  1628                           ;main.c: 124:             }
  1629   001BC8  EFFF  F00E         	goto	l4753
  1630   001BCC                     l4687:
  1631                           
  1632                           ; BSR set to: 0
  1633   001BCC  0E03               	movlw	3
  1634   001BCE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1635   001BD0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1636   001BD2  A4D8               	btfss	status,2,c
  1637   001BD4  EFEE  F00D         	goto	u4411
  1638   001BD8  EFF0  F00D         	goto	u4410
  1639   001BDC                     u4411:
  1640   001BDC  EF09  F00E         	goto	l4697
  1641   001BE0                     u4410:
  1642   001BE0                     
  1643                           ; BSR set to: 0
  1644                           ;main.c: 126:                 YellowMove(&motorL, &motorR);
  1645   001BE0  0EF5               	movlw	low _motorL
  1646   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1647   001BE4  0E00               	movlw	high _motorL
  1648   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1649   001BE8  0EBE               	movlw	low _motorR
  1650   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1651   001BEC  0E01               	movlw	high _motorR
  1652   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1653   001BF0  ECE5  F022         	call	_YellowMove	;wreg free
  1654   001BF4                     
  1655                           ;main.c: 127:                 TMR0H=0;
  1656   001BF4  0E00               	movlw	0
  1657   001BF6  6ED4               	movwf	212,c	;volatile
  1658   001BF8                     
  1659                           ;main.c: 128:                 TMR0L=0;
  1660   001BF8  0E00               	movlw	0
  1661   001BFA  6ED3               	movwf	211,c	;volatile
  1662   001BFC                     
  1663                           ;main.c: 129:                 WayBack[move_count]=3;
  1664   001BFC  0E60               	movlw	low _WayBack
  1665   001BFE  0100               	movlb	0	; () banked
  1666   001C00  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1667   001C02  6ED9               	movwf	fsr2l,c
  1668   001C04  0E01               	movlw	high _WayBack
  1669   001C06  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1670   001C08  6EDA               	movwf	fsr2h,c
  1671   001C0A  0E03               	movlw	3
  1672   001C0C  6EDF               	movwf	indf2,c
  1673                           
  1674                           ;main.c: 130:             }
  1675   001C0E  EFFF  F00E         	goto	l4753
  1676   001C12                     l4697:
  1677                           
  1678                           ; BSR set to: 0
  1679   001C12  0E04               	movlw	4
  1680   001C14  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1681   001C16  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1682   001C18  A4D8               	btfss	status,2,c
  1683   001C1A  EF11  F00E         	goto	u4421
  1684   001C1E  EF13  F00E         	goto	u4420
  1685   001C22                     u4421:
  1686   001C22  EF2C  F00E         	goto	l4707
  1687   001C26                     u4420:
  1688   001C26                     
  1689                           ; BSR set to: 0
  1690                           ;main.c: 132:                 BlueMove(&motorL, &motorR);
  1691   001C26  0EF5               	movlw	low _motorL
  1692   001C28  6E20               	movwf	BlueMove@mL^0,c
  1693   001C2A  0E00               	movlw	high _motorL
  1694   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1695   001C2E  0EBE               	movlw	low _motorR
  1696   001C30  6E22               	movwf	BlueMove@mR^0,c
  1697   001C32  0E01               	movlw	high _motorR
  1698   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1699   001C36  ECD3  F020         	call	_BlueMove	;wreg free
  1700   001C3A                     
  1701                           ;main.c: 133:                 TMR0H=0;
  1702   001C3A  0E00               	movlw	0
  1703   001C3C  6ED4               	movwf	212,c	;volatile
  1704   001C3E                     
  1705                           ;main.c: 134:                 TMR0L=0;
  1706   001C3E  0E00               	movlw	0
  1707   001C40  6ED3               	movwf	211,c	;volatile
  1708   001C42                     
  1709                           ;main.c: 135:                 WayBack[move_count]=4;
  1710   001C42  0E60               	movlw	low _WayBack
  1711   001C44  0100               	movlb	0	; () banked
  1712   001C46  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1713   001C48  6ED9               	movwf	fsr2l,c
  1714   001C4A  0E01               	movlw	high _WayBack
  1715   001C4C  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1716   001C4E  6EDA               	movwf	fsr2h,c
  1717   001C50  0E04               	movlw	4
  1718   001C52  6EDF               	movwf	indf2,c
  1719                           
  1720                           ;main.c: 136:             }
  1721   001C54  EFFF  F00E         	goto	l4753
  1722   001C58                     l4707:
  1723                           
  1724                           ; BSR set to: 0
  1725   001C58  0E05               	movlw	5
  1726   001C5A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1727   001C5C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1728   001C5E  A4D8               	btfss	status,2,c
  1729   001C60  EF34  F00E         	goto	u4431
  1730   001C64  EF36  F00E         	goto	u4430
  1731   001C68                     u4431:
  1732   001C68  EF4F  F00E         	goto	l4717
  1733   001C6C                     u4430:
  1734   001C6C                     
  1735                           ; BSR set to: 0
  1736                           ;main.c: 138:                 GreenMove(&motorL, &motorR);
  1737   001C6C  0EF5               	movlw	low _motorL
  1738   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1739   001C70  0E00               	movlw	high _motorL
  1740   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1741   001C74  0EBE               	movlw	low _motorR
  1742   001C76  6E22               	movwf	GreenMove@mR^0,c
  1743   001C78  0E01               	movlw	high _motorR
  1744   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1745   001C7C  ECE1  F024         	call	_GreenMove	;wreg free
  1746   001C80                     
  1747                           ;main.c: 139:                 TMR0H=0;
  1748   001C80  0E00               	movlw	0
  1749   001C82  6ED4               	movwf	212,c	;volatile
  1750   001C84                     
  1751                           ;main.c: 140:                 TMR0L=0;
  1752   001C84  0E00               	movlw	0
  1753   001C86  6ED3               	movwf	211,c	;volatile
  1754   001C88                     
  1755                           ;main.c: 141:                 WayBack[move_count]=5;
  1756   001C88  0E60               	movlw	low _WayBack
  1757   001C8A  0100               	movlb	0	; () banked
  1758   001C8C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1759   001C8E  6ED9               	movwf	fsr2l,c
  1760   001C90  0E01               	movlw	high _WayBack
  1761   001C92  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1762   001C94  6EDA               	movwf	fsr2h,c
  1763   001C96  0E05               	movlw	5
  1764   001C98  6EDF               	movwf	indf2,c
  1765                           
  1766                           ;main.c: 142:             }
  1767   001C9A  EFFF  F00E         	goto	l4753
  1768   001C9E                     l4717:
  1769                           
  1770                           ; BSR set to: 0
  1771   001C9E  0E06               	movlw	6
  1772   001CA0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1773   001CA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1774   001CA4  A4D8               	btfss	status,2,c
  1775   001CA6  EF57  F00E         	goto	u4441
  1776   001CAA  EF59  F00E         	goto	u4440
  1777   001CAE                     u4441:
  1778   001CAE  EF72  F00E         	goto	l4727
  1779   001CB2                     u4440:
  1780   001CB2                     
  1781                           ; BSR set to: 0
  1782                           ;main.c: 144:                 LightBlueMove(&motorL, &motorR);
  1783   001CB2  0EF5               	movlw	low _motorL
  1784   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1785   001CB6  0E00               	movlw	high _motorL
  1786   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1787   001CBA  0EBE               	movlw	low _motorR
  1788   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1789   001CBE  0E01               	movlw	high _motorR
  1790   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1791   001CC2  EC93  F022         	call	_LightBlueMove	;wreg free
  1792   001CC6                     
  1793                           ;main.c: 145:                 TMR0H=0;
  1794   001CC6  0E00               	movlw	0
  1795   001CC8  6ED4               	movwf	212,c	;volatile
  1796   001CCA                     
  1797                           ;main.c: 146:                 TMR0L=0;
  1798   001CCA  0E00               	movlw	0
  1799   001CCC  6ED3               	movwf	211,c	;volatile
  1800   001CCE                     
  1801                           ;main.c: 147:                 WayBack[move_count]=6;
  1802   001CCE  0E60               	movlw	low _WayBack
  1803   001CD0  0100               	movlb	0	; () banked
  1804   001CD2  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1805   001CD4  6ED9               	movwf	fsr2l,c
  1806   001CD6  0E01               	movlw	high _WayBack
  1807   001CD8  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1808   001CDA  6EDA               	movwf	fsr2h,c
  1809   001CDC  0E06               	movlw	6
  1810   001CDE  6EDF               	movwf	indf2,c
  1811                           
  1812                           ;main.c: 148:             }
  1813   001CE0  EFFF  F00E         	goto	l4753
  1814   001CE4                     l4727:
  1815                           
  1816                           ; BSR set to: 0
  1817   001CE4  0E07               	movlw	7
  1818   001CE6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1819   001CE8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1820   001CEA  A4D8               	btfss	status,2,c
  1821   001CEC  EF7A  F00E         	goto	u4451
  1822   001CF0  EF7C  F00E         	goto	u4450
  1823   001CF4                     u4451:
  1824   001CF4  EF95  F00E         	goto	l4737
  1825   001CF8                     u4450:
  1826   001CF8                     
  1827                           ; BSR set to: 0
  1828                           ;main.c: 150:                 PinkMove(&motorL, &motorR);
  1829   001CF8  0EF5               	movlw	low _motorL
  1830   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1831   001CFC  0E00               	movlw	high _motorL
  1832   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1833   001D00  0EBE               	movlw	low _motorR
  1834   001D02  6E22               	movwf	PinkMove@mR^0,c
  1835   001D04  0E01               	movlw	high _motorR
  1836   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1837   001D08  EC0E  F023         	call	_PinkMove	;wreg free
  1838   001D0C                     
  1839                           ;main.c: 151:                 TMR0H=0;
  1840   001D0C  0E00               	movlw	0
  1841   001D0E  6ED4               	movwf	212,c	;volatile
  1842   001D10                     
  1843                           ;main.c: 152:                 TMR0L=0;
  1844   001D10  0E00               	movlw	0
  1845   001D12  6ED3               	movwf	211,c	;volatile
  1846   001D14                     
  1847                           ;main.c: 153:                 WayBack[move_count]=7;
  1848   001D14  0E60               	movlw	low _WayBack
  1849   001D16  0100               	movlb	0	; () banked
  1850   001D18  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1851   001D1A  6ED9               	movwf	fsr2l,c
  1852   001D1C  0E01               	movlw	high _WayBack
  1853   001D1E  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1854   001D20  6EDA               	movwf	fsr2h,c
  1855   001D22  0E07               	movlw	7
  1856   001D24  6EDF               	movwf	indf2,c
  1857                           
  1858                           ;main.c: 154:             }
  1859   001D26  EFFF  F00E         	goto	l4753
  1860   001D2A                     l4737:
  1861                           
  1862                           ; BSR set to: 0
  1863   001D2A  0E0A               	movlw	10
  1864   001D2C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1865   001D2E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1866   001D30  A4D8               	btfss	status,2,c
  1867   001D32  EF9D  F00E         	goto	u4461
  1868   001D36  EF9F  F00E         	goto	u4460
  1869   001D3A                     u4461:
  1870   001D3A  EFAB  F00E         	goto	l4741
  1871   001D3E                     u4460:
  1872   001D3E                     
  1873                           ; BSR set to: 0
  1874                           ;main.c: 156:                 RetryMove(&motorL, &motorR);
  1875   001D3E  0EF5               	movlw	low _motorL
  1876   001D40  6E1A               	movwf	RetryMove@mL^0,c
  1877   001D42  0E00               	movlw	high _motorL
  1878   001D44  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1879   001D46  0EBE               	movlw	low _motorR
  1880   001D48  6E1C               	movwf	RetryMove@mR^0,c
  1881   001D4A  0E01               	movlw	high _motorR
  1882   001D4C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1883   001D4E  ECA4  F01F         	call	_RetryMove	;wreg free
  1884                           
  1885                           ;main.c: 157:             }
  1886   001D52  EFFF  F00E         	goto	l4753
  1887   001D56                     l4741:
  1888                           
  1889                           ; BSR set to: 0
  1890   001D56  51EE               	movf	main@prev_colour& (0+255),w,b
  1891   001D58  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1892   001D5A  A4D8               	btfss	status,2,c
  1893   001D5C  EFB2  F00E         	goto	u4471
  1894   001D60  EFB4  F00E         	goto	u4470
  1895   001D64                     u4471:
  1896   001D64  EFDA  F00E         	goto	l418
  1897   001D68                     u4470:
  1898   001D68                     
  1899                           ; BSR set to: 0
  1900                           ;main.c: 159:                 BlueMove(&motorL, &motorR);
  1901   001D68  0EF5               	movlw	low _motorL
  1902   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1903   001D6C  0E00               	movlw	high _motorL
  1904   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1905   001D70  0EBE               	movlw	low _motorR
  1906   001D72  6E22               	movwf	BlueMove@mR^0,c
  1907   001D74  0E01               	movlw	high _motorR
  1908   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1909   001D78  ECD3  F020         	call	_BlueMove	;wreg free
  1910   001D7C                     
  1911                           ;main.c: 160:                 T0CON0bits.T0EN=0;
  1912   001D7C  9ED5               	bcf	213,7,c	;volatile
  1913                           
  1914                           ;main.c: 161:                 go_Home(WayBack, Time_forward);
  1915   001D7E  0E60               	movlw	low _WayBack
  1916   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1917   001D82  0E01               	movlw	high _WayBack
  1918   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1919   001D86  0E00               	movlw	low _Time_forward
  1920   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1921   001D8A  0E02               	movlw	high _Time_forward
  1922   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1923   001D8E  EC23  F018         	call	_go_Home	;wreg free
  1924                           
  1925                           ;main.c: 162:                 stop(&motorL, &motorR);
  1926   001D92  0EF5               	movlw	low _motorL
  1927   001D94  6E14               	movwf	stop@mL^0,c
  1928   001D96  0E00               	movlw	high _motorL
  1929   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1930   001D9A  0EBE               	movlw	low _motorR
  1931   001D9C  6E16               	movwf	stop@mR^0,c
  1932   001D9E  0E01               	movlw	high _motorR
  1933   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1934   001DA2  ECE5  F01F         	call	_stop	;wreg free
  1935   001DA6                     
  1936                           ;main.c: 163:                 run_flag=0;
  1937   001DA6  0E00               	movlw	0
  1938   001DA8  0100               	movlb	0	; () banked
  1939   001DAA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1940   001DAC  0E00               	movlw	0
  1941   001DAE  6FE8               	movwf	main@run_flag& (0+255),b
  1942   001DB0  EFFF  F00E         	goto	l4753
  1943   001DB4                     l418:
  1944                           
  1945                           ; BSR set to: 0
  1946   001DB4  EFFF  F00E         	goto	l4753
  1947   001DB8                     l401:
  1948                           
  1949                           ; BSR set to: 1
  1950                           ;main.c: 169:             int temp=TMR0L;
  1951   001DB8  CFD3 F0E6          	movff	4051,main@temp_1189	;volatile
  1952   001DBC  0100               	movlb	0	; () banked
  1953   001DBE  6BE7               	clrf	(main@temp_1189+1)& (0+255),b
  1954   001DC0                     
  1955                           ; BSR set to: 0
  1956                           ;main.c: 170:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1957   001DC0  0E80               	movlw	low main@buf
  1958   001DC2  6F60               	movwf	sprintf@s& (0+255),b
  1959   001DC4  0E00               	movlw	high main@buf
  1960   001DC6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1961   001DC8  0E01               	movlw	low STR_1
  1962   001DCA  6F62               	movwf	sprintf@fmt& (0+255),b
  1963   001DCC  0E0E               	movlw	high STR_1
  1964   001DCE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1965   001DD0  C1C7  F064         	movff	_vals,?_sprintf+4
  1966   001DD4  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1967   001DD8  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1968   001DDC  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1969   001DE0  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1970   001DE4  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1971   001DE8  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1972   001DEC  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1973   001DEE  EC41  F022         	call	_sprintf	;wreg free
  1974   001DF2                     
  1975                           ;main.c: 171:             sendStringSerial4(buf);
  1976   001DF2  0E80               	movlw	low main@buf
  1977   001DF4  6E02               	movwf	sendStringSerial4@string^0,c
  1978   001DF6  0E00               	movlw	high main@buf
  1979   001DF8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1980   001DFA  EC00  F025         	call	_sendStringSerial4	;wreg free
  1981   001DFE                     l4753:
  1982                           
  1983                           ;main.c: 69:     while (run_flag)
  1984   001DFE  0100               	movlb	0	; () banked
  1985   001E00  51E8               	movf	main@run_flag& (0+255),w,b
  1986   001E02  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  1987   001E04  A4D8               	btfss	status,2,c
  1988   001E06  EF07  F00F         	goto	u4481
  1989   001E0A  EF09  F00F         	goto	u4480
  1990   001E0E                     u4481:
  1991   001E0E  EFE8  F00C         	goto	l4629
  1992   001E12                     u4480:
  1993   001E12                     
  1994                           ; BSR set to: 0
  1995   001E12  EF07  F000         	goto	start
  1996   001E16                     __end_of_main:
  1997                           	callstack 0
  1998                           
  1999 ;; *************** function _sprintf *****************
  2000 ;; Defined at:
  2001 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2004 ;;		 -> main@buf(100), 
  2005 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2006 ;;		 -> STR_2(36), STR_1(36), 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2009 ;;  ap              2   12[BANK0 ] PTR void [1]
  2010 ;;		 -> ?_sprintf(2), 
  2011 ;;  ret             2    0        int 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2    0[BANK0 ] int 
  2014 ;; Registers used:
  2015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2021 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2024 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2025 ;;Total ram usage:       25 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 8
  2028 ;; This function calls:
  2029 ;;		_vfprintf
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text1
  2036   004482                     __ptext1:
  2037                           	callstack 0
  2038   004482                     _sprintf:
  2039                           	callstack 22
  2040   004482  0E64               	movlw	low (?_sprintf+4)
  2041   004484  0100               	movlb	0	; () banked
  2042   004486  6F6C               	movwf	sprintf@ap& (0+255),b
  2043   004488  0E00               	movlw	high (?_sprintf+4)
  2044   00448A  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2045   00448C  C060  F06E         	movff	sprintf@s,sprintf@f
  2046   004490  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2047   004494                     
  2048                           ; BSR set to: 0
  2049   004494  0E00               	movlw	0
  2050   004496  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2051   004498  0E00               	movlw	0
  2052   00449A  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2053   00449C                     
  2054                           ; BSR set to: 0
  2055   00449C  0E00               	movlw	0
  2056   00449E  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2057   0044A0  0E00               	movlw	0
  2058   0044A2  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2059   0044A4                     
  2060                           ; BSR set to: 0
  2061   0044A4  0E6E               	movlw	low sprintf@f
  2062   0044A6  6E51               	movwf	vfprintf@fp^0,c
  2063   0044A8  0E00               	movlw	high sprintf@f
  2064   0044AA  6E52               	movwf	(vfprintf@fp+1)^0,c
  2065   0044AC  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2066   0044B0  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2067   0044B4  0E6C               	movlw	low sprintf@ap
  2068   0044B6  6E55               	movwf	vfprintf@ap^0,c
  2069   0044B8  0E00               	movlw	high sprintf@ap
  2070   0044BA  6E56               	movwf	(vfprintf@ap+1)^0,c
  2071   0044BC  ECD7  F023         	call	_vfprintf	;wreg free
  2072   0044C0  0100               	movlb	0	; () banked
  2073   0044C2  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2074   0044C4  2560               	addwf	sprintf@s& (0+255),w,b
  2075   0044C6  6ED9               	movwf	fsr2l,c
  2076   0044C8  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2077   0044CA  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2078   0044CC  6EDA               	movwf	fsr2h,c
  2079   0044CE  0E00               	movlw	0
  2080   0044D0  6EDF               	movwf	indf2,c
  2081   0044D2                     
  2082                           ; BSR set to: 0
  2083   0044D2  0012               	return		;funcret
  2084   0044D4                     __end_of_sprintf:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _vfprintf *****************
  2088 ;; Defined at:
  2089 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2092 ;;		 -> sprintf@f(11), 
  2093 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2094 ;;		 -> STR_2(36), STR_1(36), 
  2095 ;;  ap              2   84[COMRAM] PTR PTR void 
  2096 ;;		 -> sprintf@ap(2), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2099 ;;		 -> STR_2(36), STR_1(36), 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2   80[COMRAM] int 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;Total ram usage:        8 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 7
  2116 ;; This function calls:
  2117 ;;		_vfpfcnvrt
  2118 ;; This function is called by:
  2119 ;;		_sprintf
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           	psect	text2
  2124   0047AE                     __ptext2:
  2125                           	callstack 0
  2126   0047AE                     _vfprintf:
  2127                           	callstack 22
  2128   0047AE                     
  2129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2130   0047AE  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2131   0047B2  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2134   0047B6  EFEB  F023         	goto	l4127
  2135   0047BA                     l4125:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2138   0047BA  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2139   0047BE  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2140   0047C2  0E57               	movlw	low vfprintf@cfmt
  2141   0047C4  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2142   0047C6  0E00               	movlw	high vfprintf@cfmt
  2143   0047C8  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2144   0047CA  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2145   0047CE  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2146   0047D2  EC40  F01C         	call	_vfpfcnvrt	;wreg free
  2147   0047D6                     l4127:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2150   0047D6  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2151   0047DA  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2152   0047DE                     	if	0	;tblptru may be non-zero
  2153   0047DE                     	endif
  2154   0047DE                     	if	0	;tblptru may be non-zero
  2155   0047DE                     	endif
  2156   0047DE  0008               	tblrd		*
  2157   0047E0  50F5               	movf	tablat,w,c
  2158   0047E2  0900               	iorlw	0
  2159   0047E4  A4D8               	btfss	status,2,c
  2160   0047E6  EFF7  F023         	goto	u3821
  2161   0047EA  EFF9  F023         	goto	u3820
  2162   0047EE                     u3821:
  2163   0047EE  EFDD  F023         	goto	l4125
  2164   0047F2                     u3820:
  2165   0047F2                     
  2166                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2167   0047F2  0E00               	movlw	0
  2168   0047F4  6E52               	movwf	(?_vfprintf+1)^0,c
  2169   0047F6  0E00               	movlw	0
  2170   0047F8  6E51               	movwf	?_vfprintf^0,c
  2171   0047FA  0012               	return		;funcret
  2172   0047FC                     __end_of_vfprintf:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _vfpfcnvrt *****************
  2176 ;; Defined at:
  2177 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2180 ;;		 -> sprintf@f(11), 
  2181 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2182 ;;		 -> vfprintf@cfmt(2), 
  2183 ;;  ap              2   66[COMRAM] PTR PTR void 
  2184 ;;		 -> sprintf@ap(2), 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;  convarg         8   70[COMRAM] struct .
  2187 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2188 ;;		 -> STR_2(36), STR_1(36), 
  2189 ;;  i               2    0        int 
  2190 ;;  done            2    0        int 
  2191 ;;  c               1    0        unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2201 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;Total ram usage:       18 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 6
  2208 ;; This function calls:
  2209 ;;		_dtoa
  2210 ;;		_fputc
  2211 ;; This function is called by:
  2212 ;;		_vfprintf
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text3
  2217   003880                     __ptext3:
  2218                           	callstack 0
  2219   003880                     _vfpfcnvrt:
  2220                           	callstack 22
  2221   003880                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2223   003880  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2224   003884  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2225   003888  CFDE FFF6          	movff	postinc2,tblptrl
  2226   00388C  CFDD FFF7          	movff	postdec2,tblptrh
  2227   003890                     	if	0	;tblptru may be non-zero
  2228   003890                     	endif
  2229   003890                     	if	0	;tblptru may be non-zero
  2230   003890                     	endif
  2231   003890  0008               	tblrd		*
  2232   003892  50F5               	movf	tablat,w,c
  2233   003894  0A25               	xorlw	37
  2234   003896  A4D8               	btfss	status,2,c
  2235   003898  EF50  F01C         	goto	u3181
  2236   00389C  EF52  F01C         	goto	u3180
  2237   0038A0                     u3181:
  2238   0038A0  EFD3  F01C         	goto	l3691
  2239   0038A4                     u3180:
  2240   0038A4                     
  2241                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2242   0038A4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2243   0038A8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2244   0038AC  2ADE               	incf	postinc2,f,c
  2245   0038AE  0E00               	movlw	0
  2246   0038B0  22DD               	addwfc	postdec2,f,c
  2247   0038B2                     
  2248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2249   0038B2  0E00               	movlw	0
  2250   0038B4  0101               	movlb	1	; () banked
  2251   0038B6  6F5D               	movwf	(_width+1)& (0+255),b
  2252   0038B8  0E00               	movlw	0
  2253   0038BA  6F5C               	movwf	_width& (0+255),b
  2254   0038BC  C15C  F0F4         	movff	_width,_flags
  2255   0038C0                     
  2256                           ; BSR set to: 1
  2257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2258   0038C0  0100               	movlb	0	; () banked
  2259   0038C2  69F0               	setf	_prec& (0+255),b
  2260   0038C4  69F1               	setf	(_prec+1)& (0+255),b
  2261   0038C6                     
  2262                           ; BSR set to: 0
  2263                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2264   0038C6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2265   0038CA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2266   0038CE  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2267   0038D2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2268   0038D6                     
  2269                           ; BSR set to: 0
  2270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2271   0038D6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2272   0038DA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2273   0038DE                     	if	0	;tblptru may be non-zero
  2274   0038DE                     	endif
  2275   0038DE                     	if	0	;tblptru may be non-zero
  2276   0038DE                     	endif
  2277   0038DE  0008               	tblrd		*
  2278   0038E0  50F5               	movf	tablat,w,c
  2279   0038E2  0A64               	xorlw	100
  2280   0038E4  B4D8               	btfsc	status,2,c
  2281   0038E6  EF77  F01C         	goto	u3191
  2282   0038EA  EF79  F01C         	goto	u3190
  2283   0038EE                     u3191:
  2284   0038EE  EF87  F01C         	goto	l3681
  2285   0038F2                     u3190:
  2286   0038F2                     
  2287                           ; BSR set to: 0
  2288   0038F2  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2289   0038F6  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2290   0038FA                     	if	0	;tblptru may be non-zero
  2291   0038FA                     	endif
  2292   0038FA                     	if	0	;tblptru may be non-zero
  2293   0038FA                     	endif
  2294   0038FA  0008               	tblrd		*
  2295   0038FC  50F5               	movf	tablat,w,c
  2296   0038FE  0A69               	xorlw	105
  2297   003900  A4D8               	btfss	status,2,c
  2298   003902  EF85  F01C         	goto	u3201
  2299   003906  EF87  F01C         	goto	u3200
  2300   00390A                     u3201:
  2301   00390A  EFCA  F01C         	goto	l3687
  2302   00390E                     u3200:
  2303   00390E                     l3681:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2307   00390E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2308   003912  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2309   003916  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2310   00391A  0E02               	movlw	2
  2311   00391C  26DE               	addwf	postinc2,f,c
  2312   00391E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2313   003922  0E00               	movlw	0
  2314   003924  22DD               	addwfc	postdec2,f,c
  2315   003926  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2316   00392A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2317   00392E  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2318   003932  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2319   003936  0E00               	movlw	0
  2320   003938  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2321   00393A  0EFF               	movlw	-1
  2322   00393C  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2323   00393E  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2324   003940  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2325   003942  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2326   003944  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2327   003946  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2330   003948  0E01               	movlw	1
  2331   00394A  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2332   00394C  6E45               	movwf	??_vfpfcnvrt^0,c
  2333   00394E  0E00               	movlw	0
  2334   003950  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2335   003952  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2336   003954  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337   003958  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338   00395C  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2339   003960  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2340   003964                     
  2341                           ; BSR set to: 0
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2343   003964  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2344   003968  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2345   00396C  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2346   003970  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2347   003974  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2348   003978  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2349   00397C  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2350   003980  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2351   003984  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2352   003988  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2353   00398C  ECE4  F016         	call	_dtoa	;wreg free
  2354   003990  EFE7  F01C         	goto	l1391
  2355   003994                     l3687:
  2356                           
  2357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2358   003994  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2359   003998  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2360   00399C  2ADE               	incf	postinc2,f,c
  2361   00399E  0E00               	movlw	0
  2362   0039A0  22DD               	addwfc	postdec2,f,c
  2363   0039A2  EFE7  F01C         	goto	l1391
  2364   0039A6                     l3691:
  2365                           
  2366                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2367   0039A6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2368   0039AA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2369   0039AE  CFDE FFF6          	movff	postinc2,tblptrl
  2370   0039B2  CFDD FFF7          	movff	postdec2,tblptrh
  2371   0039B6                     	if	0	;tblptru may be non-zero
  2372   0039B6                     	endif
  2373   0039B6                     	if	0	;tblptru may be non-zero
  2374   0039B6                     	endif
  2375   0039B6  0008               	tblrd		*
  2376   0039B8  50F5               	movf	tablat,w,c
  2377   0039BA  6E01               	movwf	fputc@c^0,c
  2378   0039BC  6A02               	clrf	(fputc@c+1)^0,c
  2379   0039BE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2380   0039C2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2381   0039C6  EC6A  F01D         	call	_fputc	;wreg free
  2382   0039CA  EFCA  F01C         	goto	l3687
  2383   0039CE                     l1391:
  2384   0039CE  0012               	return		;funcret
  2385   0039D0                     __end_of_vfpfcnvrt:
  2386                           	callstack 0
  2387                           
  2388 ;; *************** function _dtoa *****************
  2389 ;; Defined at:
  2390 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2393 ;;		 -> sprintf@f(11), 
  2394 ;;  d               8   29[COMRAM] long long 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  n               8   51[COMRAM] long long 
  2397 ;;  i               2   59[COMRAM] int 
  2398 ;;  w               2   49[COMRAM] int 
  2399 ;;  p               2   47[COMRAM] int 
  2400 ;;  s               1   61[COMRAM] unsigned char 
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2410 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2412 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2413 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2414 ;;Total ram usage:       35 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 5
  2417 ;; This function calls:
  2418 ;;		___aodiv
  2419 ;;		___aomod
  2420 ;;		_abs
  2421 ;;		_pad
  2422 ;; This function is called by:
  2423 ;;		_vfpfcnvrt
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text4
  2428   002DC8                     __ptext4:
  2429                           	callstack 0
  2430   002DC8                     _dtoa:
  2431                           	callstack 22
  2432   002DC8                     
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2434   002DC8  C01E  F034         	movff	dtoa@d,dtoa@n
  2435   002DCC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2436   002DD0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2437   002DD4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2438   002DD8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2439   002DDC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2440   002DE0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2441   002DE4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2442   002DE8                     
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2444   002DE8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2445   002DEA  EFF9  F016         	goto	u2671
  2446   002DEE  EFFC  F016         	goto	u2670
  2447   002DF2                     u2671:
  2448   002DF2  0E01               	movlw	1
  2449   002DF4  EFFD  F016         	goto	u2680
  2450   002DF8                     u2670:
  2451   002DF8  0E00               	movlw	0
  2452   002DFA                     u2680:
  2453   002DFA  6E3E               	movwf	dtoa@s^0,c
  2454   002DFC                     
  2455                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2456   002DFC  503E               	movf	dtoa@s^0,w,c
  2457   002DFE  B4D8               	btfsc	status,2,c
  2458   002E00  EF04  F017         	goto	u2691
  2459   002E04  EF06  F017         	goto	u2690
  2460   002E08                     u2691:
  2461   002E08  EF16  F017         	goto	l3367
  2462   002E0C                     u2690:
  2463   002E0C                     
  2464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2465   002E0C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2466   002E0E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2467   002E10  1E39               	comf	(dtoa@n+5)^0,f,c
  2468   002E12  1E38               	comf	(dtoa@n+4)^0,f,c
  2469   002E14  1E37               	comf	(dtoa@n+3)^0,f,c
  2470   002E16  1E36               	comf	(dtoa@n+2)^0,f,c
  2471   002E18  1E35               	comf	(dtoa@n+1)^0,f,c
  2472   002E1A  6C34               	negf	dtoa@n^0,c
  2473   002E1C  0E00               	movlw	0
  2474   002E1E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2475   002E20  2236               	addwfc	(dtoa@n+2)^0,f,c
  2476   002E22  2237               	addwfc	(dtoa@n+3)^0,f,c
  2477   002E24  2238               	addwfc	(dtoa@n+4)^0,f,c
  2478   002E26  2239               	addwfc	(dtoa@n+5)^0,f,c
  2479   002E28  223A               	addwfc	(dtoa@n+6)^0,f,c
  2480   002E2A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2481   002E2C                     l3367:
  2482                           
  2483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2484   002E2C  0100               	movlb	0	; () banked
  2485   002E2E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2486   002E30  EF24  F017         	goto	u2700
  2487   002E34  51F1               	movf	(_prec+1)& (0+255),w,b
  2488   002E36  E106               	bnz	u2701
  2489   002E38  05F0               	decf	_prec& (0+255),w,b
  2490   002E3A  B0D8               	btfsc	status,0,c
  2491   002E3C  EF22  F017         	goto	u2701
  2492   002E40  EF24  F017         	goto	u2700
  2493   002E44                     u2701:
  2494   002E44  EF2A  F017         	goto	l1370
  2495   002E48                     u2700:
  2496   002E48                     
  2497                           ; BSR set to: 0
  2498   002E48  0E00               	movlw	0
  2499   002E4A  6E31               	movwf	(dtoa@p+1)^0,c
  2500   002E4C  0E01               	movlw	1
  2501   002E4E  6E30               	movwf	dtoa@p^0,c
  2502   002E50  EF2E  F017         	goto	l1372
  2503   002E54                     l1370:
  2504                           
  2505                           ; BSR set to: 0
  2506   002E54  C0F0  F030         	movff	_prec,dtoa@p
  2507   002E58  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2508   002E5C                     l1372:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2512   002E5C  C15C  F032         	movff	_width,dtoa@w
  2513   002E60  C15D  F033         	movff	_width+1,dtoa@w+1
  2514   002E64                     
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2517   002E64  503E               	movf	dtoa@s^0,w,c
  2518   002E66  B4D8               	btfsc	status,2,c
  2519   002E68  EF38  F017         	goto	u2711
  2520   002E6C  EF3A  F017         	goto	u2710
  2521   002E70                     u2711:
  2522   002E70  EF51  F017         	goto	l1373
  2523   002E74                     u2710:
  2524   002E74                     
  2525                           ; BSR set to: 0
  2526                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2527   002E74  0632               	decf	dtoa@w^0,f,c
  2528   002E76  A0D8               	btfss	status,0,c
  2529   002E78  0633               	decf	(dtoa@w+1)^0,f,c
  2530   002E7A                     
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2533   002E7A  503E               	movf	dtoa@s^0,w,c
  2534   002E7C  A4D8               	btfss	status,2,c
  2535   002E7E  EF43  F017         	goto	u2721
  2536   002E82  EF45  F017         	goto	u2720
  2537   002E86                     u2721:
  2538   002E86  EF4B  F017         	goto	l3379
  2539   002E8A                     u2720:
  2540   002E8A                     
  2541                           ; BSR set to: 0
  2542   002E8A  0E00               	movlw	0
  2543   002E8C  6E2F               	movwf	(_dtoa$2486+1)^0,c
  2544   002E8E  0E2B               	movlw	43
  2545   002E90  6E2E               	movwf	_dtoa$2486^0,c
  2546   002E92  EF4F  F017         	goto	l3381
  2547   002E96                     l3379:
  2548                           
  2549                           ; BSR set to: 0
  2550   002E96  0E00               	movlw	0
  2551   002E98  6E2F               	movwf	(_dtoa$2486+1)^0,c
  2552   002E9A  0E2D               	movlw	45
  2553   002E9C  6E2E               	movwf	_dtoa$2486^0,c
  2554   002E9E                     l3381:
  2555                           
  2556                           ; BSR set to: 0
  2557   002E9E  C02E  F03E         	movff	_dtoa$2486,dtoa@s
  2558   002EA2                     l1373:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2562   002EA2  0E00               	movlw	0
  2563   002EA4  6E3D               	movwf	(dtoa@i+1)^0,c
  2564   002EA6  0E1F               	movlw	31
  2565   002EA8  6E3C               	movwf	dtoa@i^0,c
  2566   002EAA                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2569   002EAA  0E00               	movlw	0
  2570   002EAC  0101               	movlb	1	; () banked
  2571   002EAE  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2574   002EB0  EFD6  F017         	goto	l3395
  2575   002EB4                     l3385:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2578   002EB4  063C               	decf	dtoa@i^0,f,c
  2579   002EB6  A0D8               	btfss	status,0,c
  2580   002EB8  063D               	decf	(dtoa@i+1)^0,f,c
  2581   002EBA                     
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2583   002EBA  0E92               	movlw	low _dbuf
  2584   002EBC  243C               	addwf	dtoa@i^0,w,c
  2585   002EBE  6ED9               	movwf	fsr2l,c
  2586   002EC0  0E01               	movlw	high _dbuf
  2587   002EC2  203D               	addwfc	(dtoa@i+1)^0,w,c
  2588   002EC4  6EDA               	movwf	fsr2h,c
  2589   002EC6  C034  F001         	movff	dtoa@n,___aomod@dividend
  2590   002ECA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2591   002ECE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2592   002ED2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2593   002ED6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2594   002EDA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2595   002EDE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2596   002EE2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2597   002EE6  0E0A               	movlw	10
  2598   002EE8  6E09               	movwf	___aomod@divisor^0,c
  2599   002EEA  0E00               	movlw	0
  2600   002EEC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2601   002EEE  0E00               	movlw	0
  2602   002EF0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2603   002EF2  0E00               	movlw	0
  2604   002EF4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2605   002EF6  0E00               	movlw	0
  2606   002EF8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2607   002EFA  0E00               	movlw	0
  2608   002EFC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2609   002EFE  0E00               	movlw	0
  2610   002F00  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2611   002F02  0E00               	movlw	0
  2612   002F04  6E10               	movwf	(___aomod@divisor+7)^0,c
  2613   002F06  EC8E  F01B         	call	___aomod	;wreg free
  2614   002F0A  C001  F026         	movff	?___aomod,??_dtoa
  2615   002F0E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2616   002F12  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2617   002F16  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2618   002F1A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2619   002F1E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2620   002F22  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2621   002F26  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2622   002F2A  C026  F013         	movff	??_dtoa,abs@a
  2623   002F2E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2624   002F32  EC64  F024         	call	_abs	;wreg free
  2625   002F36  5013               	movf	?_abs^0,w,c
  2626   002F38  0F30               	addlw	48
  2627   002F3A  6EDF               	movwf	indf2,c
  2628   002F3C                     
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2630   002F3C  0630               	decf	dtoa@p^0,f,c
  2631   002F3E  A0D8               	btfss	status,0,c
  2632   002F40  0631               	decf	(dtoa@p+1)^0,f,c
  2633   002F42                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2635   002F42  0632               	decf	dtoa@w^0,f,c
  2636   002F44  A0D8               	btfss	status,0,c
  2637   002F46  0633               	decf	(dtoa@w+1)^0,f,c
  2638   002F48                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2640   002F48  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2641   002F4C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2642   002F50  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2643   002F54  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2644   002F58  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2645   002F5C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2646   002F60  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2647   002F64  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2648   002F68  0E0A               	movlw	10
  2649   002F6A  6E09               	movwf	___aodiv@divisor^0,c
  2650   002F6C  0E00               	movlw	0
  2651   002F6E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2652   002F70  0E00               	movlw	0
  2653   002F72  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2654   002F74  0E00               	movlw	0
  2655   002F76  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2656   002F78  0E00               	movlw	0
  2657   002F7A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2658   002F7C  0E00               	movlw	0
  2659   002F7E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2660   002F80  0E00               	movlw	0
  2661   002F82  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2662   002F84  0E00               	movlw	0
  2663   002F86  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2664   002F88  EC14  F01A         	call	___aodiv	;wreg free
  2665   002F8C  C001  F034         	movff	?___aodiv,dtoa@n
  2666   002F90  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2667   002F94  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2668   002F98  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2669   002F9C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2670   002FA0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2671   002FA4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2672   002FA8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2673   002FAC                     l3395:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2676   002FAC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2677   002FAE  EFE1  F017         	goto	u2731
  2678   002FB2  503D               	movf	(dtoa@i+1)^0,w,c
  2679   002FB4  E108               	bnz	u2730
  2680   002FB6  043C               	decf	dtoa@i^0,w,c
  2681   002FB8  A0D8               	btfss	status,0,c
  2682   002FBA  EFE1  F017         	goto	u2731
  2683   002FBE  EFE3  F017         	goto	u2730
  2684   002FC2                     u2731:
  2685   002FC2  EFFF  F017         	goto	l3401
  2686   002FC6                     u2730:
  2687   002FC6  5034               	movf	dtoa@n^0,w,c
  2688   002FC8  1035               	iorwf	(dtoa@n+1)^0,w,c
  2689   002FCA  1036               	iorwf	(dtoa@n+2)^0,w,c
  2690   002FCC  1037               	iorwf	(dtoa@n+3)^0,w,c
  2691   002FCE  1038               	iorwf	(dtoa@n+4)^0,w,c
  2692   002FD0  1039               	iorwf	(dtoa@n+5)^0,w,c
  2693   002FD2  103A               	iorwf	(dtoa@n+6)^0,w,c
  2694   002FD4  103B               	iorwf	(dtoa@n+7)^0,w,c
  2695   002FD6  A4D8               	btfss	status,2,c
  2696   002FD8  EFF0  F017         	goto	u2741
  2697   002FDC  EFF2  F017         	goto	u2740
  2698   002FE0                     u2741:
  2699   002FE0  EF5A  F017         	goto	l3385
  2700   002FE4                     u2740:
  2701   002FE4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2702   002FE6  EFFF  F017         	goto	u2750
  2703   002FEA  5031               	movf	(dtoa@p+1)^0,w,c
  2704   002FEC  E106               	bnz	u2751
  2705   002FEE  0430               	decf	dtoa@p^0,w,c
  2706   002FF0  B0D8               	btfsc	status,0,c
  2707   002FF2  EFFD  F017         	goto	u2751
  2708   002FF6  EFFF  F017         	goto	u2750
  2709   002FFA                     u2751:
  2710   002FFA  EF5A  F017         	goto	l3385
  2711   002FFE                     u2750:
  2712   002FFE                     l3401:
  2713                           
  2714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2715   002FFE  503E               	movf	dtoa@s^0,w,c
  2716   003000  B4D8               	btfsc	status,2,c
  2717   003002  EF05  F018         	goto	u2761
  2718   003006  EF07  F018         	goto	u2760
  2719   00300A                     u2761:
  2720   00300A  EF12  F018         	goto	l3407
  2721   00300E                     u2760:
  2722   00300E                     
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2724   00300E  063C               	decf	dtoa@i^0,f,c
  2725   003010  A0D8               	btfss	status,0,c
  2726   003012  063D               	decf	(dtoa@i+1)^0,f,c
  2727   003014                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2729   003014  0E92               	movlw	low _dbuf
  2730   003016  243C               	addwf	dtoa@i^0,w,c
  2731   003018  6ED9               	movwf	fsr2l,c
  2732   00301A  0E01               	movlw	high _dbuf
  2733   00301C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2734   00301E  6EDA               	movwf	fsr2h,c
  2735   003020  C03E  FFDF         	movff	dtoa@s,indf2
  2736   003024                     l3407:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2739   003024  C01C  F011         	movff	dtoa@fp,pad@fp
  2740   003028  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2741   00302C  0E92               	movlw	low _dbuf
  2742   00302E  243C               	addwf	dtoa@i^0,w,c
  2743   003030  6E13               	movwf	pad@buf^0,c
  2744   003032  0E01               	movlw	high _dbuf
  2745   003034  203D               	addwfc	(dtoa@i+1)^0,w,c
  2746   003036  6E14               	movwf	(pad@buf+1)^0,c
  2747   003038  C032  F015         	movff	dtoa@w,pad@p
  2748   00303C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2749   003040  EC24  F020         	call	_pad	;wreg free
  2750   003044  0012               	return		;funcret
  2751   003046                     __end_of_dtoa:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _pad *****************
  2755 ;; Defined at:
  2756 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2759 ;;		 -> sprintf@f(11), 
  2760 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2761 ;;		 -> dbuf(32), 
  2762 ;;  p               2   20[COMRAM] int 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  w               2   25[COMRAM] int 
  2765 ;;  i               2   23[COMRAM] int 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2775 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2776 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2778 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2779 ;;Total ram usage:       11 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 4
  2782 ;; This function calls:
  2783 ;;		_fputc
  2784 ;;		_fputs
  2785 ;; This function is called by:
  2786 ;;		_dtoa
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text5
  2791   004048                     __ptext5:
  2792                           	callstack 0
  2793   004048                     _pad:
  2794                           	callstack 22
  2795   004048                     
  2796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2797   004048  BE16               	btfsc	(pad@p+1)^0,7,c
  2798   00404A  EF29  F020         	goto	u2521
  2799   00404E  EF2B  F020         	goto	u2520
  2800   004052                     u2521:
  2801   004052  EF31  F020         	goto	l3271
  2802   004056                     u2520:
  2803   004056  C015  F01A         	movff	pad@p,pad@w
  2804   00405A  C016  F01B         	movff	pad@p+1,pad@w+1
  2805   00405E  EF35  F020         	goto	l1361
  2806   004062                     l3271:
  2807   004062  0E00               	movlw	0
  2808   004064  6E1B               	movwf	(pad@w+1)^0,c
  2809   004066  0E00               	movlw	0
  2810   004068  6E1A               	movwf	pad@w^0,c
  2811   00406A                     l1361:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2814   00406A  0E00               	movlw	0
  2815   00406C  6E19               	movwf	(pad@i+1)^0,c
  2816   00406E  0E00               	movlw	0
  2817   004070  6E18               	movwf	pad@i^0,c
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2820   004072  EF47  F020         	goto	l3277
  2821   004076                     l3273:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2824   004076  0E00               	movlw	0
  2825   004078  6E02               	movwf	(fputc@c+1)^0,c
  2826   00407A  0E20               	movlw	32
  2827   00407C  6E01               	movwf	fputc@c^0,c
  2828   00407E  C011  F003         	movff	pad@fp,fputc@fp
  2829   004082  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2830   004086  EC6A  F01D         	call	_fputc	;wreg free
  2831   00408A                     
  2832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2833   00408A  4A18               	infsnz	pad@i^0,f,c
  2834   00408C  2A19               	incf	(pad@i+1)^0,f,c
  2835   00408E                     l3277:
  2836                           
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2838   00408E  501A               	movf	pad@w^0,w,c
  2839   004090  5C18               	subwf	pad@i^0,w,c
  2840   004092  5019               	movf	(pad@i+1)^0,w,c
  2841   004094  0A80               	xorlw	128
  2842   004096  6E17               	movwf	??_pad^0,c
  2843   004098  501B               	movf	(pad@w+1)^0,w,c
  2844   00409A  0A80               	xorlw	128
  2845   00409C  5817               	subwfb	??_pad^0,w,c
  2846   00409E  A0D8               	btfss	status,0,c
  2847   0040A0  EF54  F020         	goto	u2531
  2848   0040A4  EF56  F020         	goto	u2530
  2849   0040A8                     u2531:
  2850   0040A8  EF3B  F020         	goto	l3273
  2851   0040AC                     u2530:
  2852   0040AC                     
  2853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2854   0040AC  C013  F00A         	movff	pad@buf,fputs@s
  2855   0040B0  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2856   0040B4  C011  F00C         	movff	pad@fp,fputs@fp
  2857   0040B8  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2858   0040BC  EC21  F024         	call	_fputs	;wreg free
  2859   0040C0  0012               	return		;funcret
  2860   0040C2                     __end_of_pad:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _fputs *****************
  2864 ;; Defined at:
  2865 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2868 ;;		 -> dbuf(32), 
  2869 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2870 ;;		 -> sprintf@f(11), 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  i               2   14[COMRAM] int 
  2873 ;;  c               1   13[COMRAM] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  2    9[COMRAM] int 
  2876 ;; Registers used:
  2877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2883 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;Total ram usage:        7 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; Hardware stack levels required when called: 3
  2890 ;; This function calls:
  2891 ;;		_fputc
  2892 ;; This function is called by:
  2893 ;;		_pad
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text6
  2898   004842                     __ptext6:
  2899                           	callstack 0
  2900   004842                     _fputs:
  2901                           	callstack 22
  2902   004842  0E00               	movlw	0
  2903   004844  6E10               	movwf	(fputs@i+1)^0,c
  2904   004846  0E00               	movlw	0
  2905   004848  6E0F               	movwf	fputs@i^0,c
  2906   00484A  EF32  F024         	goto	l3169
  2907   00484E                     l3165:
  2908   00484E  C00E  F001         	movff	fputs@c,fputc@c
  2909   004852  6A02               	clrf	(fputc@c+1)^0,c
  2910   004854  C00C  F003         	movff	fputs@fp,fputc@fp
  2911   004858  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2912   00485C  EC6A  F01D         	call	_fputc	;wreg free
  2913   004860  4A0F               	infsnz	fputs@i^0,f,c
  2914   004862  2A10               	incf	(fputs@i+1)^0,f,c
  2915   004864                     l3169:
  2916   004864  500F               	movf	fputs@i^0,w,c
  2917   004866  240A               	addwf	fputs@s^0,w,c
  2918   004868  6ED9               	movwf	fsr2l,c
  2919   00486A  5010               	movf	(fputs@i+1)^0,w,c
  2920   00486C  200B               	addwfc	(fputs@s+1)^0,w,c
  2921   00486E  6EDA               	movwf	fsr2h,c
  2922   004870  50DF               	movf	indf2,w,c
  2923   004872  6E0E               	movwf	fputs@c^0,c
  2924   004874  500E               	movf	fputs@c^0,w,c
  2925   004876  A4D8               	btfss	status,2,c
  2926   004878  EF40  F024         	goto	u2361
  2927   00487C  EF42  F024         	goto	u2360
  2928   004880                     u2361:
  2929   004880  EF27  F024         	goto	l3165
  2930   004884                     u2360:
  2931   004884  0012               	return		;funcret
  2932   004886                     __end_of_fputs:
  2933                           	callstack 0
  2934                           
  2935 ;; *************** function _fputc *****************
  2936 ;; Defined at:
  2937 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2938 ;; Parameters:    Size  Location     Type
  2939 ;;  c               2    0[COMRAM] int 
  2940 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2941 ;;		 -> sprintf@f(11), 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  2    0[COMRAM] int 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;Total ram usage:        9 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 2
  2960 ;; This function calls:
  2961 ;;		_putch
  2962 ;; This function is called by:
  2963 ;;		_pad
  2964 ;;		_vfpfcnvrt
  2965 ;;		_fputs
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text7
  2970   003AD4                     __ptext7:
  2971                           	callstack 0
  2972   003AD4                     _fputc:
  2973                           	callstack 25
  2974   003AD4  5003               	movf	fputc@fp^0,w,c
  2975   003AD6  1004               	iorwf	(fputc@fp+1)^0,w,c
  2976   003AD8  B4D8               	btfsc	status,2,c
  2977   003ADA  EF71  F01D         	goto	u2291
  2978   003ADE  EF73  F01D         	goto	u2290
  2979   003AE2                     u2291:
  2980   003AE2  EF7C  F01D         	goto	l3125
  2981   003AE6                     u2290:
  2982   003AE6  5003               	movf	fputc@fp^0,w,c
  2983   003AE8  1004               	iorwf	(fputc@fp+1)^0,w,c
  2984   003AEA  A4D8               	btfss	status,2,c
  2985   003AEC  EF7A  F01D         	goto	u2301
  2986   003AF0  EF7C  F01D         	goto	u2300
  2987   003AF4                     u2301:
  2988   003AF4  EF81  F01D         	goto	l3127
  2989   003AF8                     u2300:
  2990   003AF8                     l3125:
  2991   003AF8  5001               	movf	fputc@c^0,w,c
  2992   003AFA  ECBA  F025         	call	_putch
  2993   003AFE  EFCE  F01D         	goto	l1416
  2994   003B02                     l3127:
  2995   003B02  EE20 F009          	lfsr	2,9
  2996   003B06  5003               	movf	fputc@fp^0,w,c
  2997   003B08  26D9               	addwf	fsr2l,f,c
  2998   003B0A  5004               	movf	(fputc@fp+1)^0,w,c
  2999   003B0C  22DA               	addwfc	fsr2h,f,c
  3000   003B0E  50DE               	movf	postinc2,w,c
  3001   003B10  10DE               	iorwf	postinc2,w,c
  3002   003B12  B4D8               	btfsc	status,2,c
  3003   003B14  EF8E  F01D         	goto	u2311
  3004   003B18  EF90  F01D         	goto	u2310
  3005   003B1C                     u2311:
  3006   003B1C  EFAB  F01D         	goto	l3131
  3007   003B20                     u2310:
  3008   003B20  EE20 F009          	lfsr	2,9
  3009   003B24  5003               	movf	fputc@fp^0,w,c
  3010   003B26  26D9               	addwf	fsr2l,f,c
  3011   003B28  5004               	movf	(fputc@fp+1)^0,w,c
  3012   003B2A  22DA               	addwfc	fsr2h,f,c
  3013   003B2C  EE10 F003          	lfsr	1,3
  3014   003B30  5003               	movf	fputc@fp^0,w,c
  3015   003B32  26E1               	addwf	fsr1l,f,c
  3016   003B34  5004               	movf	(fputc@fp+1)^0,w,c
  3017   003B36  22E2               	addwfc	fsr1h,f,c
  3018   003B38  50DE               	movf	postinc2,w,c
  3019   003B3A  5CE6               	subwf	postinc1,w,c
  3020   003B3C  50E6               	movf	postinc1,w,c
  3021   003B3E  0A80               	xorlw	128
  3022   003B40  6E09               	movwf	(??_fputc+4)^0,c
  3023   003B42  50DE               	movf	postinc2,w,c
  3024   003B44  0A80               	xorlw	128
  3025   003B46  5809               	subwfb	(??_fputc+4)^0,w,c
  3026   003B48  B0D8               	btfsc	status,0,c
  3027   003B4A  EFA9  F01D         	goto	u2321
  3028   003B4E  EFAB  F01D         	goto	u2320
  3029   003B52                     u2321:
  3030   003B52  EFCE  F01D         	goto	l1416
  3031   003B56                     u2320:
  3032   003B56                     l3131:
  3033   003B56  EE20 F003          	lfsr	2,3
  3034   003B5A  5003               	movf	fputc@fp^0,w,c
  3035   003B5C  26D9               	addwf	fsr2l,f,c
  3036   003B5E  5004               	movf	(fputc@fp+1)^0,w,c
  3037   003B60  22DA               	addwfc	fsr2h,f,c
  3038   003B62  CFDE F005          	movff	postinc2,??_fputc
  3039   003B66  CFDD F006          	movff	postdec2,??_fputc+1
  3040   003B6A  C003  FFD9         	movff	fputc@fp,fsr2l
  3041   003B6E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3042   003B72  CFDE F007          	movff	postinc2,??_fputc+2
  3043   003B76  CFDD F008          	movff	postdec2,??_fputc+3
  3044   003B7A  5005               	movf	??_fputc^0,w,c
  3045   003B7C  2407               	addwf	(??_fputc+2)^0,w,c
  3046   003B7E  6ED9               	movwf	fsr2l,c
  3047   003B80  5006               	movf	(??_fputc+1)^0,w,c
  3048   003B82  2008               	addwfc	(??_fputc+3)^0,w,c
  3049   003B84  6EDA               	movwf	fsr2h,c
  3050   003B86  C001  FFDF         	movff	fputc@c,indf2
  3051   003B8A  EE20 F003          	lfsr	2,3
  3052   003B8E  5003               	movf	fputc@fp^0,w,c
  3053   003B90  26D9               	addwf	fsr2l,f,c
  3054   003B92  5004               	movf	(fputc@fp+1)^0,w,c
  3055   003B94  22DA               	addwfc	fsr2h,f,c
  3056   003B96  2ADE               	incf	postinc2,f,c
  3057   003B98  0E00               	movlw	0
  3058   003B9A  22DD               	addwfc	postdec2,f,c
  3059   003B9C                     l1416:
  3060   003B9C  0012               	return		;funcret
  3061   003B9E                     __end_of_fputc:
  3062                           	callstack 0
  3063                           
  3064 ;; *************** function _putch *****************
  3065 ;; Defined at:
  3066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3067 ;; Parameters:    Size  Location     Type
  3068 ;;  c               1    wreg     unsigned char 
  3069 ;; Auto vars:     Size  Location     Type
  3070 ;;  c               1    0[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      void 
  3073 ;; Registers used:
  3074 ;;		wreg
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3084 ;;Total ram usage:        0 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; Hardware stack levels required when called: 1
  3087 ;; This function calls:
  3088 ;;		Nothing
  3089 ;; This function is called by:
  3090 ;;		_fputc
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text8
  3095   004B74                     __ptext8:
  3096                           	callstack 0
  3097   004B74                     _putch:
  3098                           	callstack 25
  3099   004B74  0012               	return		;funcret
  3100   004B76                     __end_of_putch:
  3101                           	callstack 0
  3102                           
  3103 ;; *************** function _abs *****************
  3104 ;; Defined at:
  3105 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  a               2   18[COMRAM] int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  2   18[COMRAM] int 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3123 ;;Total ram usage:        4 bytes
  3124 ;; Hardware stack levels used: 1
  3125 ;; Hardware stack levels required when called: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_dtoa
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text9
  3134   0048C8                     __ptext9:
  3135                           	callstack 0
  3136   0048C8                     _abs:
  3137                           	callstack 25
  3138   0048C8  BE14               	btfsc	(abs@a+1)^0,7,c
  3139   0048CA  EF71  F024         	goto	u2540
  3140   0048CE  5014               	movf	(abs@a+1)^0,w,c
  3141   0048D0  E106               	bnz	u2541
  3142   0048D2  0413               	decf	abs@a^0,w,c
  3143   0048D4  B0D8               	btfsc	status,0,c
  3144   0048D6  EF6F  F024         	goto	u2541
  3145   0048DA  EF71  F024         	goto	u2540
  3146   0048DE                     u2541:
  3147   0048DE  EF7F  F024         	goto	l1401
  3148   0048E2                     u2540:
  3149   0048E2  C013  F015         	movff	abs@a,??_abs
  3150   0048E6  C014  F016         	movff	abs@a+1,??_abs+1
  3151   0048EA  1E15               	comf	??_abs^0,f,c
  3152   0048EC  1E16               	comf	(??_abs+1)^0,f,c
  3153   0048EE  4A15               	infsnz	??_abs^0,f,c
  3154   0048F0  2A16               	incf	(??_abs+1)^0,f,c
  3155   0048F2  C015  F013         	movff	??_abs,?_abs
  3156   0048F6  C016  F014         	movff	??_abs+1,?_abs+1
  3157   0048FA  EF83  F024         	goto	l1404
  3158   0048FE                     l1401:
  3159   0048FE  C013  F013         	movff	abs@a,?_abs
  3160   004902  C014  F014         	movff	abs@a+1,?_abs+1
  3161   004906                     l1404:
  3162   004906  0012               	return		;funcret
  3163   004908                     __end_of_abs:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function ___aomod *****************
  3167 ;; Defined at:
  3168 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  dividend        8    0[COMRAM] long long 
  3171 ;;  divisor         8    8[COMRAM] long long 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  sign            1   17[COMRAM] unsigned char 
  3174 ;;  counter         1   16[COMRAM] unsigned char 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  8    0[COMRAM] long long 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3184 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;Total ram usage:       18 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_dtoa
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text10
  3199   00371C                     __ptext10:
  3200                           	callstack 0
  3201   00371C                     ___aomod:
  3202                           	callstack 25
  3203   00371C  0E00               	movlw	0
  3204   00371E  6E12               	movwf	___aomod@sign^0,c
  3205   003720  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3206   003722  EF97  F01B         	goto	u2460
  3207   003726  EF95  F01B         	goto	u2461
  3208   00372A                     u2461:
  3209   00372A  EFA9  F01B         	goto	l3239
  3210   00372E                     u2460:
  3211   00372E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3212   003730  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3213   003732  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3214   003734  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3215   003736  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3216   003738  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3217   00373A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3218   00373C  6C01               	negf	___aomod@dividend^0,c
  3219   00373E  0E00               	movlw	0
  3220   003740  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3221   003742  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3222   003744  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3223   003746  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3224   003748  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3225   00374A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3226   00374C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3227   00374E  0E01               	movlw	1
  3228   003750  6E12               	movwf	___aomod@sign^0,c
  3229   003752                     l3239:
  3230   003752  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3231   003754  EFB0  F01B         	goto	u2470
  3232   003758  EFAE  F01B         	goto	u2471
  3233   00375C                     u2471:
  3234   00375C  EFC0  F01B         	goto	l3243
  3235   003760                     u2470:
  3236   003760  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3237   003762  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3238   003764  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3239   003766  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3240   003768  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3241   00376A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3242   00376C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3243   00376E  6C09               	negf	___aomod@divisor^0,c
  3244   003770  0E00               	movlw	0
  3245   003772  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3246   003774  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3247   003776  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3248   003778  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3249   00377A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3250   00377C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3251   00377E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3252   003780                     l3243:
  3253   003780  5009               	movf	___aomod@divisor^0,w,c
  3254   003782  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3255   003784  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3256   003786  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3257   003788  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3258   00378A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3259   00378C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3260   00378E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3261   003790  B4D8               	btfsc	status,2,c
  3262   003792  EFCD  F01B         	goto	u2481
  3263   003796  EFCF  F01B         	goto	u2480
  3264   00379A                     u2481:
  3265   00379A  EF17  F01C         	goto	l3259
  3266   00379E                     u2480:
  3267   00379E  0E01               	movlw	1
  3268   0037A0  6E11               	movwf	___aomod@counter^0,c
  3269   0037A2  EFDD  F01B         	goto	l3249
  3270   0037A6                     l3247:
  3271   0037A6  90D8               	bcf	status,0,c
  3272   0037A8  3609               	rlcf	___aomod@divisor^0,f,c
  3273   0037AA  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3274   0037AC  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3275   0037AE  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3276   0037B0  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3277   0037B2  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3278   0037B4  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3279   0037B6  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3280   0037B8  2A11               	incf	___aomod@counter^0,f,c
  3281   0037BA                     l3249:
  3282   0037BA  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3283   0037BC  EFE2  F01B         	goto	u2491
  3284   0037C0  EFE4  F01B         	goto	u2490
  3285   0037C4                     u2491:
  3286   0037C4  EFD3  F01B         	goto	l3247
  3287   0037C8                     u2490:
  3288   0037C8                     l3251:
  3289   0037C8  5009               	movf	___aomod@divisor^0,w,c
  3290   0037CA  5C01               	subwf	___aomod@dividend^0,w,c
  3291   0037CC  500A               	movf	(___aomod@divisor+1)^0,w,c
  3292   0037CE  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3293   0037D0  500B               	movf	(___aomod@divisor+2)^0,w,c
  3294   0037D2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3295   0037D4  500C               	movf	(___aomod@divisor+3)^0,w,c
  3296   0037D6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3297   0037D8  500D               	movf	(___aomod@divisor+4)^0,w,c
  3298   0037DA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3299   0037DC  500E               	movf	(___aomod@divisor+5)^0,w,c
  3300   0037DE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3301   0037E0  500F               	movf	(___aomod@divisor+6)^0,w,c
  3302   0037E2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3303   0037E4  5010               	movf	(___aomod@divisor+7)^0,w,c
  3304   0037E6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3305   0037E8  A0D8               	btfss	status,0,c
  3306   0037EA  EFF9  F01B         	goto	u2501
  3307   0037EE  EFFB  F01B         	goto	u2500
  3308   0037F2                     u2501:
  3309   0037F2  EF0B  F01C         	goto	l3255
  3310   0037F6                     u2500:
  3311   0037F6  5009               	movf	___aomod@divisor^0,w,c
  3312   0037F8  5E01               	subwf	___aomod@dividend^0,f,c
  3313   0037FA  500A               	movf	(___aomod@divisor+1)^0,w,c
  3314   0037FC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3315   0037FE  500B               	movf	(___aomod@divisor+2)^0,w,c
  3316   003800  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3317   003802  500C               	movf	(___aomod@divisor+3)^0,w,c
  3318   003804  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3319   003806  500D               	movf	(___aomod@divisor+4)^0,w,c
  3320   003808  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3321   00380A  500E               	movf	(___aomod@divisor+5)^0,w,c
  3322   00380C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3323   00380E  500F               	movf	(___aomod@divisor+6)^0,w,c
  3324   003810  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3325   003812  5010               	movf	(___aomod@divisor+7)^0,w,c
  3326   003814  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3327   003816                     l3255:
  3328   003816  90D8               	bcf	status,0,c
  3329   003818  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3330   00381A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3331   00381C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3332   00381E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3333   003820  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3334   003822  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3335   003824  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3336   003826  3209               	rrcf	___aomod@divisor^0,f,c
  3337   003828  2E11               	decfsz	___aomod@counter^0,f,c
  3338   00382A  EFE4  F01B         	goto	l3251
  3339   00382E                     l3259:
  3340   00382E  5012               	movf	___aomod@sign^0,w,c
  3341   003830  B4D8               	btfsc	status,2,c
  3342   003832  EF1D  F01C         	goto	u2511
  3343   003836  EF1F  F01C         	goto	u2510
  3344   00383A                     u2511:
  3345   00383A  EF2F  F01C         	goto	l3263
  3346   00383E                     u2510:
  3347   00383E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3348   003840  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3349   003842  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3350   003844  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3351   003846  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3352   003848  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3353   00384A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3354   00384C  6C01               	negf	___aomod@dividend^0,c
  3355   00384E  0E00               	movlw	0
  3356   003850  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3357   003852  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3358   003854  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3359   003856  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3360   003858  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3361   00385A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3362   00385C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3363   00385E                     l3263:
  3364   00385E  C001  F001         	movff	___aomod@dividend,?___aomod
  3365   003862  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3366   003866  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3367   00386A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3368   00386E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3369   003872  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3370   003876  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3371   00387A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3372   00387E  0012               	return		;funcret
  3373   003880                     __end_of___aomod:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function ___aodiv *****************
  3377 ;; Defined at:
  3378 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  dividend        8    0[COMRAM] long long 
  3381 ;;  divisor         8    8[COMRAM] long long 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  quotient        8   18[COMRAM] long long 
  3384 ;;  sign            1   17[COMRAM] unsigned char 
  3385 ;;  counter         1   16[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  8    0[COMRAM] long long 
  3388 ;; Registers used:
  3389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3395 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;Total ram usage:       26 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_dtoa
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text11
  3410   003428                     __ptext11:
  3411                           	callstack 0
  3412   003428                     ___aodiv:
  3413                           	callstack 25
  3414   003428  0E00               	movlw	0
  3415   00342A  6E12               	movwf	___aodiv@sign^0,c
  3416   00342C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3417   00342E  EF1D  F01A         	goto	u2390
  3418   003432  EF1B  F01A         	goto	u2391
  3419   003436                     u2391:
  3420   003436  EF2F  F01A         	goto	l3195
  3421   00343A                     u2390:
  3422   00343A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3423   00343C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3424   00343E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3425   003440  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3426   003442  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3427   003444  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3428   003446  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3429   003448  6C09               	negf	___aodiv@divisor^0,c
  3430   00344A  0E00               	movlw	0
  3431   00344C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3432   00344E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3433   003450  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3434   003452  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3435   003454  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3436   003456  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3437   003458  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3438   00345A  0E01               	movlw	1
  3439   00345C  6E12               	movwf	___aodiv@sign^0,c
  3440   00345E                     l3195:
  3441   00345E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3442   003460  EF36  F01A         	goto	u2400
  3443   003464  EF34  F01A         	goto	u2401
  3444   003468                     u2401:
  3445   003468  EF48  F01A         	goto	l3201
  3446   00346C                     u2400:
  3447   00346C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3448   00346E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3449   003470  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3450   003472  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3451   003474  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3452   003476  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3453   003478  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3454   00347A  6C01               	negf	___aodiv@dividend^0,c
  3455   00347C  0E00               	movlw	0
  3456   00347E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3457   003480  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3458   003482  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3459   003484  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3460   003486  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3461   003488  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3462   00348A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3463   00348C  0E01               	movlw	1
  3464   00348E  1A12               	xorwf	___aodiv@sign^0,f,c
  3465   003490                     l3201:
  3466   003490  EE20  F013         	lfsr	2,___aodiv@quotient
  3467   003494  0E07               	movlw	7
  3468   003496                     u2411:
  3469   003496  6ADE               	clrf	postinc2,c
  3470   003498  06E8               	decf	wreg,f,c
  3471   00349A  E2FD               	bc	u2411
  3472   00349C  5009               	movf	___aodiv@divisor^0,w,c
  3473   00349E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3474   0034A0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3475   0034A2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3476   0034A4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3477   0034A6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3478   0034A8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3479   0034AA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3480   0034AC  B4D8               	btfsc	status,2,c
  3481   0034AE  EF5B  F01A         	goto	u2421
  3482   0034B2  EF5D  F01A         	goto	u2420
  3483   0034B6                     u2421:
  3484   0034B6  EFAF  F01A         	goto	l3223
  3485   0034BA                     u2420:
  3486   0034BA  0E01               	movlw	1
  3487   0034BC  6E11               	movwf	___aodiv@counter^0,c
  3488   0034BE  EF6B  F01A         	goto	l3209
  3489   0034C2                     l3207:
  3490   0034C2  90D8               	bcf	status,0,c
  3491   0034C4  3609               	rlcf	___aodiv@divisor^0,f,c
  3492   0034C6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3493   0034C8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3494   0034CA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3495   0034CC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3496   0034CE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3497   0034D0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3498   0034D2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3499   0034D4  2A11               	incf	___aodiv@counter^0,f,c
  3500   0034D6                     l3209:
  3501   0034D6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3502   0034D8  EF70  F01A         	goto	u2431
  3503   0034DC  EF72  F01A         	goto	u2430
  3504   0034E0                     u2431:
  3505   0034E0  EF61  F01A         	goto	l3207
  3506   0034E4                     u2430:
  3507   0034E4                     l3211:
  3508   0034E4  90D8               	bcf	status,0,c
  3509   0034E6  3613               	rlcf	___aodiv@quotient^0,f,c
  3510   0034E8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3511   0034EA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3512   0034EC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3513   0034EE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3514   0034F0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3515   0034F2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3516   0034F4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3517   0034F6  5009               	movf	___aodiv@divisor^0,w,c
  3518   0034F8  5C01               	subwf	___aodiv@dividend^0,w,c
  3519   0034FA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3520   0034FC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3521   0034FE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3522   003500  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3523   003502  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3524   003504  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3525   003506  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3526   003508  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3527   00350A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3528   00350C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3529   00350E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3530   003510  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3531   003512  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3532   003514  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3533   003516  A0D8               	btfss	status,0,c
  3534   003518  EF90  F01A         	goto	u2441
  3535   00351C  EF92  F01A         	goto	u2440
  3536   003520                     u2441:
  3537   003520  EFA3  F01A         	goto	l3219
  3538   003524                     u2440:
  3539   003524  5009               	movf	___aodiv@divisor^0,w,c
  3540   003526  5E01               	subwf	___aodiv@dividend^0,f,c
  3541   003528  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3542   00352A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3543   00352C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3544   00352E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3545   003530  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3546   003532  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3547   003534  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3548   003536  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3549   003538  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3550   00353A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3551   00353C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3552   00353E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3553   003540  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3554   003542  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3555   003544  8013               	bsf	___aodiv@quotient^0,0,c
  3556   003546                     l3219:
  3557   003546  90D8               	bcf	status,0,c
  3558   003548  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3559   00354A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3560   00354C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3561   00354E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3562   003550  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3563   003552  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3564   003554  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3565   003556  3209               	rrcf	___aodiv@divisor^0,f,c
  3566   003558  2E11               	decfsz	___aodiv@counter^0,f,c
  3567   00355A  EF72  F01A         	goto	l3211
  3568   00355E                     l3223:
  3569   00355E  5012               	movf	___aodiv@sign^0,w,c
  3570   003560  B4D8               	btfsc	status,2,c
  3571   003562  EFB5  F01A         	goto	u2451
  3572   003566  EFB7  F01A         	goto	u2450
  3573   00356A                     u2451:
  3574   00356A  EFC7  F01A         	goto	l3227
  3575   00356E                     u2450:
  3576   00356E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3577   003570  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3578   003572  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3579   003574  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3580   003576  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3581   003578  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3582   00357A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3583   00357C  6C13               	negf	___aodiv@quotient^0,c
  3584   00357E  0E00               	movlw	0
  3585   003580  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3586   003582  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3587   003584  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3588   003586  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3589   003588  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3590   00358A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3591   00358C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3592   00358E                     l3227:
  3593   00358E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3594   003592  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3595   003596  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3596   00359A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3597   00359E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3598   0035A2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3599   0035A6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3600   0035AA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3601   0035AE  0012               	return		;funcret
  3602   0035B0                     __end_of___aodiv:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _sendStringSerial4 *****************
  3606 ;; Defined at:
  3607 ;;		line 33 in file "serial.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  string          2    1[COMRAM] PTR unsigned char 
  3610 ;;		 -> main@buf(100), 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 2
  3629 ;; This function calls:
  3630 ;;		_sendCharSerial4
  3631 ;; This function is called by:
  3632 ;;		_main
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text12
  3637   004A00                     __ptext12:
  3638                           	callstack 0
  3639   004A00                     _sendStringSerial4:
  3640                           	callstack 28
  3641   004A00                     
  3642                           ;serial.c: 34:     while (*string!=0){
  3643   004A00  EF0B  F025         	goto	l4383
  3644   004A04                     l4379:
  3645                           
  3646                           ;serial.c: 35:         sendCharSerial4(*string++);
  3647   004A04  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3648   004A08  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3649   004A0C  50DF               	movf	indf2,w,c
  3650   004A0E  EC96  F025         	call	_sendCharSerial4
  3651   004A12  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3652   004A14  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3653   004A16                     l4383:
  3654                           
  3655                           ;serial.c: 34:     while (*string!=0){
  3656   004A16  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3657   004A1A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3658   004A1E  50DF               	movf	indf2,w,c
  3659   004A20  A4D8               	btfss	status,2,c
  3660   004A22  EF15  F025         	goto	u4161
  3661   004A26  EF17  F025         	goto	u4160
  3662   004A2A                     u4161:
  3663   004A2A  EF02  F025         	goto	l4379
  3664   004A2E                     u4160:
  3665   004A2E  0012               	return		;funcret
  3666   004A30                     __end_of_sendStringSerial4:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function _sendCharSerial4 *****************
  3670 ;; Defined at:
  3671 ;;		line 26 in file "serial.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  charToSend      1    wreg     unsigned char 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  charToSend      1    0[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:        1 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_sendStringSerial4
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text13
  3700   004B2C                     __ptext13:
  3701                           	callstack 0
  3702   004B2C                     _sendCharSerial4:
  3703                           	callstack 28
  3704                           
  3705                           ;incstack = 0
  3706                           ;sendCharSerial4@charToSend stored from wreg
  3707   004B2C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3708   004B2E                     l207:
  3709   004B2E  010E               	movlb	14	; () banked
  3710   004B30  A537               	btfss	55,2,b	;volatile
  3711   004B32  EF9D  F025         	goto	u3211
  3712   004B36  EF9F  F025         	goto	u3210
  3713   004B3A                     u3211:
  3714   004B3A  EF97  F025         	goto	l207
  3715   004B3E                     u3210:
  3716   004B3E                     
  3717                           ; BSR set to: 14
  3718                           ;serial.c: 28:     TX4REG = charToSend;
  3719   004B3E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3720   004B42                     
  3721                           ; BSR set to: 14
  3722   004B42  0012               	return		;funcret
  3723   004B44                     __end_of_sendCharSerial4:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _readColours *****************
  3727 ;; Defined at:
  3728 ;;		line 105 in file "color.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  vals            2   11[COMRAM] PTR struct RGB
  3731 ;;		 -> vals(8), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 4
  3750 ;; This function calls:
  3751 ;;		_color_read_Blue
  3752 ;;		_color_read_Green
  3753 ;;		_color_read_Red
  3754 ;;		_color_read_lum
  3755 ;; This function is called by:
  3756 ;;		_main
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text14
  3761   00420C                     __ptext14:
  3762                           	callstack 0
  3763   00420C                     _readColours:
  3764                           	callstack 26
  3765   00420C                     
  3766                           ;color.c: 107:     vals ->R = color_read_Red();
  3767   00420C  EC5F  F023         	call	_color_read_Red	;wreg free
  3768   004210  C00C  FFD9         	movff	readColours@vals,fsr2l
  3769   004214  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3770   004218  C005  FFDE         	movff	?_color_read_Red,postinc2
  3771   00421C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3772                           
  3773                           ;color.c: 108:     vals ->B = color_read_Blue();
  3774   004220  ECAF  F023         	call	_color_read_Blue	;wreg free
  3775   004224  EE20 F004          	lfsr	2,4
  3776   004228  500C               	movf	readColours@vals^0,w,c
  3777   00422A  26D9               	addwf	fsr2l,f,c
  3778   00422C  500D               	movf	(readColours@vals+1)^0,w,c
  3779   00422E  22DA               	addwfc	fsr2h,f,c
  3780   004230  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3781   004234  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3782                           
  3783                           ;color.c: 109:     vals ->G = color_read_Green();
  3784   004238  EC87  F023         	call	_color_read_Green	;wreg free
  3785   00423C  EE20 F002          	lfsr	2,2
  3786   004240  500C               	movf	readColours@vals^0,w,c
  3787   004242  26D9               	addwf	fsr2l,f,c
  3788   004244  500D               	movf	(readColours@vals+1)^0,w,c
  3789   004246  22DA               	addwfc	fsr2h,f,c
  3790   004248  C005  FFDE         	movff	?_color_read_Green,postinc2
  3791   00424C  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3792                           
  3793                           ;color.c: 110:     vals ->L = color_read_lum();
  3794   004250  EC37  F023         	call	_color_read_lum	;wreg free
  3795   004254  EE20 F006          	lfsr	2,6
  3796   004258  500C               	movf	readColours@vals^0,w,c
  3797   00425A  26D9               	addwf	fsr2l,f,c
  3798   00425C  500D               	movf	(readColours@vals+1)^0,w,c
  3799   00425E  22DA               	addwfc	fsr2h,f,c
  3800   004260  C005  FFDE         	movff	?_color_read_lum,postinc2
  3801   004264  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3802   004268  0012               	return		;funcret
  3803   00426A                     __end_of_readColours:
  3804                           	callstack 0
  3805                           
  3806 ;; *************** function _color_read_lum *****************
  3807 ;; Defined at:
  3808 ;;		line 49 in file "color.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  tmp             2    9[COMRAM] unsigned int 
  3813 ;; Return value:  Size  Location     Type
  3814 ;;                  2    4[COMRAM] unsigned int 
  3815 ;; Registers used:
  3816 ;;		wreg, status,2, status,0, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3826 ;;Total ram usage:        7 bytes
  3827 ;; Hardware stack levels used: 1
  3828 ;; Hardware stack levels required when called: 3
  3829 ;; This function calls:
  3830 ;;		_I2C_2_Master_Read
  3831 ;;		_I2C_2_Master_RepStart
  3832 ;;		_I2C_2_Master_Start
  3833 ;;		_I2C_2_Master_Stop
  3834 ;;		_I2C_2_Master_Write
  3835 ;; This function is called by:
  3836 ;;		_readColours
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text15
  3841   00466E                     __ptext15:
  3842                           	callstack 0
  3843   00466E                     _color_read_lum:
  3844                           	callstack 26
  3845   00466E                     
  3846                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3847   00466E  ECB2  F025         	call	_I2C_2_Master_Start	;wreg free
  3848                           
  3849                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3850   004672  0E52               	movlw	82
  3851   004674  ECA2  F025         	call	_I2C_2_Master_Write
  3852                           
  3853                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3854   004678  0EB4               	movlw	180
  3855   00467A  ECA2  F025         	call	_I2C_2_Master_Write
  3856                           
  3857                           ;color.c: 55:  I2C_2_Master_RepStart();
  3858   00467E  ECA8  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3859                           
  3860                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3861   004682  0E53               	movlw	83
  3862   004684  ECA2  F025         	call	_I2C_2_Master_Write
  3863                           
  3864                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3865   004688  0E01               	movlw	1
  3866   00468A  EC43  F024         	call	_I2C_2_Master_Read
  3867   00468E  6E07               	movwf	??_color_read_lum^0,c
  3868   004690  5007               	movf	??_color_read_lum^0,w,c
  3869   004692  6E0A               	movwf	color_read_lum@tmp^0,c
  3870   004694  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3871                           
  3872                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3873   004696  0E00               	movlw	0
  3874   004698  EC43  F024         	call	_I2C_2_Master_Read
  3875   00469C  6E07               	movwf	??_color_read_lum^0,c
  3876   00469E  5007               	movf	??_color_read_lum^0,w,c
  3877   0046A0  6E09               	movwf	(??_color_read_lum+2)^0,c
  3878   0046A2  6A08               	clrf	(??_color_read_lum+1)^0,c
  3879   0046A4  500A               	movf	color_read_lum@tmp^0,w,c
  3880   0046A6  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3881   0046A8  6E0A               	movwf	color_read_lum@tmp^0,c
  3882   0046AA  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3883   0046AC  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3884   0046AE  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3885                           
  3886                           ;color.c: 59:  I2C_2_Master_Stop();
  3887   0046B0  ECAD  F025         	call	_I2C_2_Master_Stop	;wreg free
  3888   0046B4                     
  3889                           ;color.c: 60:  return tmp;
  3890   0046B4  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3891   0046B8  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3892   0046BC  0012               	return		;funcret
  3893   0046BE                     __end_of_color_read_lum:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function _color_read_Red *****************
  3897 ;; Defined at:
  3898 ;;		line 63 in file "color.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  tmp             2    9[COMRAM] unsigned int 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  2    4[COMRAM] unsigned int 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3914 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3915 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;Total ram usage:        7 bytes
  3917 ;; Hardware stack levels used: 1
  3918 ;; Hardware stack levels required when called: 3
  3919 ;; This function calls:
  3920 ;;		_I2C_2_Master_Read
  3921 ;;		_I2C_2_Master_RepStart
  3922 ;;		_I2C_2_Master_Start
  3923 ;;		_I2C_2_Master_Stop
  3924 ;;		_I2C_2_Master_Write
  3925 ;; This function is called by:
  3926 ;;		_readColours
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text16
  3931   0046BE                     __ptext16:
  3932                           	callstack 0
  3933   0046BE                     _color_read_Red:
  3934                           	callstack 26
  3935   0046BE                     
  3936                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3937   0046BE  ECB2  F025         	call	_I2C_2_Master_Start	;wreg free
  3938                           
  3939                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3940   0046C2  0E52               	movlw	82
  3941   0046C4  ECA2  F025         	call	_I2C_2_Master_Write
  3942                           
  3943                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3944   0046C8  0EB6               	movlw	182
  3945   0046CA  ECA2  F025         	call	_I2C_2_Master_Write
  3946                           
  3947                           ;color.c: 69:  I2C_2_Master_RepStart();
  3948   0046CE  ECA8  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3949                           
  3950                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3951   0046D2  0E53               	movlw	83
  3952   0046D4  ECA2  F025         	call	_I2C_2_Master_Write
  3953                           
  3954                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3955   0046D8  0E01               	movlw	1
  3956   0046DA  EC43  F024         	call	_I2C_2_Master_Read
  3957   0046DE  6E07               	movwf	??_color_read_Red^0,c
  3958   0046E0  5007               	movf	??_color_read_Red^0,w,c
  3959   0046E2  6E0A               	movwf	color_read_Red@tmp^0,c
  3960   0046E4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3961                           
  3962                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3963   0046E6  0E00               	movlw	0
  3964   0046E8  EC43  F024         	call	_I2C_2_Master_Read
  3965   0046EC  6E07               	movwf	??_color_read_Red^0,c
  3966   0046EE  5007               	movf	??_color_read_Red^0,w,c
  3967   0046F0  6E09               	movwf	(??_color_read_Red+2)^0,c
  3968   0046F2  6A08               	clrf	(??_color_read_Red+1)^0,c
  3969   0046F4  500A               	movf	color_read_Red@tmp^0,w,c
  3970   0046F6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3971   0046F8  6E0A               	movwf	color_read_Red@tmp^0,c
  3972   0046FA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3973   0046FC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3974   0046FE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3975                           
  3976                           ;color.c: 73:  I2C_2_Master_Stop();
  3977   004700  ECAD  F025         	call	_I2C_2_Master_Stop	;wreg free
  3978   004704                     
  3979                           ;color.c: 74:  return tmp;
  3980   004704  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3981   004708  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3982   00470C  0012               	return		;funcret
  3983   00470E                     __end_of_color_read_Red:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _color_read_Green *****************
  3987 ;; Defined at:
  3988 ;;		line 76 in file "color.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;		None
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  tmp             2    9[COMRAM] unsigned int 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  2    4[COMRAM] unsigned int 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4005 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4006 ;;Total ram usage:        7 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 3
  4009 ;; This function calls:
  4010 ;;		_I2C_2_Master_Read
  4011 ;;		_I2C_2_Master_RepStart
  4012 ;;		_I2C_2_Master_Start
  4013 ;;		_I2C_2_Master_Stop
  4014 ;;		_I2C_2_Master_Write
  4015 ;; This function is called by:
  4016 ;;		_readColours
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text17
  4021   00470E                     __ptext17:
  4022                           	callstack 0
  4023   00470E                     _color_read_Green:
  4024                           	callstack 26
  4025   00470E                     
  4026                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4027   00470E  ECB2  F025         	call	_I2C_2_Master_Start	;wreg free
  4028                           
  4029                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4030   004712  0E52               	movlw	82
  4031   004714  ECA2  F025         	call	_I2C_2_Master_Write
  4032                           
  4033                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4034   004718  0EB8               	movlw	184
  4035   00471A  ECA2  F025         	call	_I2C_2_Master_Write
  4036                           
  4037                           ;color.c: 82:  I2C_2_Master_RepStart();
  4038   00471E  ECA8  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4039                           
  4040                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4041   004722  0E53               	movlw	83
  4042   004724  ECA2  F025         	call	_I2C_2_Master_Write
  4043                           
  4044                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4045   004728  0E01               	movlw	1
  4046   00472A  EC43  F024         	call	_I2C_2_Master_Read
  4047   00472E  6E07               	movwf	??_color_read_Green^0,c
  4048   004730  5007               	movf	??_color_read_Green^0,w,c
  4049   004732  6E0A               	movwf	color_read_Green@tmp^0,c
  4050   004734  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4051                           
  4052                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4053   004736  0E00               	movlw	0
  4054   004738  EC43  F024         	call	_I2C_2_Master_Read
  4055   00473C  6E07               	movwf	??_color_read_Green^0,c
  4056   00473E  5007               	movf	??_color_read_Green^0,w,c
  4057   004740  6E09               	movwf	(??_color_read_Green+2)^0,c
  4058   004742  6A08               	clrf	(??_color_read_Green+1)^0,c
  4059   004744  500A               	movf	color_read_Green@tmp^0,w,c
  4060   004746  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4061   004748  6E0A               	movwf	color_read_Green@tmp^0,c
  4062   00474A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4063   00474C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4064   00474E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4065                           
  4066                           ;color.c: 86:  I2C_2_Master_Stop();
  4067   004750  ECAD  F025         	call	_I2C_2_Master_Stop	;wreg free
  4068   004754                     
  4069                           ;color.c: 87:  return tmp;
  4070   004754  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4071   004758  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4072   00475C  0012               	return		;funcret
  4073   00475E                     __end_of_color_read_Green:
  4074                           	callstack 0
  4075                           
  4076 ;; *************** function _color_read_Blue *****************
  4077 ;; Defined at:
  4078 ;;		line 90 in file "color.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  tmp             2    9[COMRAM] unsigned int 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  2    4[COMRAM] unsigned int 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        7 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 3
  4099 ;; This function calls:
  4100 ;;		_I2C_2_Master_Read
  4101 ;;		_I2C_2_Master_RepStart
  4102 ;;		_I2C_2_Master_Start
  4103 ;;		_I2C_2_Master_Stop
  4104 ;;		_I2C_2_Master_Write
  4105 ;; This function is called by:
  4106 ;;		_readColours
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text18
  4111   00475E                     __ptext18:
  4112                           	callstack 0
  4113   00475E                     _color_read_Blue:
  4114                           	callstack 26
  4115   00475E                     
  4116                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4117   00475E  ECB2  F025         	call	_I2C_2_Master_Start	;wreg free
  4118                           
  4119                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4120   004762  0E52               	movlw	82
  4121   004764  ECA2  F025         	call	_I2C_2_Master_Write
  4122                           
  4123                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4124   004768  0EBA               	movlw	186
  4125   00476A  ECA2  F025         	call	_I2C_2_Master_Write
  4126                           
  4127                           ;color.c: 96:  I2C_2_Master_RepStart();
  4128   00476E  ECA8  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4129                           
  4130                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4131   004772  0E53               	movlw	83
  4132   004774  ECA2  F025         	call	_I2C_2_Master_Write
  4133                           
  4134                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4135   004778  0E01               	movlw	1
  4136   00477A  EC43  F024         	call	_I2C_2_Master_Read
  4137   00477E  6E07               	movwf	??_color_read_Blue^0,c
  4138   004780  5007               	movf	??_color_read_Blue^0,w,c
  4139   004782  6E0A               	movwf	color_read_Blue@tmp^0,c
  4140   004784  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4141                           
  4142                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4143   004786  0E00               	movlw	0
  4144   004788  EC43  F024         	call	_I2C_2_Master_Read
  4145   00478C  6E07               	movwf	??_color_read_Blue^0,c
  4146   00478E  5007               	movf	??_color_read_Blue^0,w,c
  4147   004790  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4148   004792  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4149   004794  500A               	movf	color_read_Blue@tmp^0,w,c
  4150   004796  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4151   004798  6E0A               	movwf	color_read_Blue@tmp^0,c
  4152   00479A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4153   00479C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4154   00479E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4155                           
  4156                           ;color.c: 100:  I2C_2_Master_Stop();
  4157   0047A0  ECAD  F025         	call	_I2C_2_Master_Stop	;wreg free
  4158   0047A4                     
  4159                           ;color.c: 101:  return tmp;
  4160   0047A4  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4161   0047A8  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4162   0047AC  0012               	return		;funcret
  4163   0047AE                     __end_of_color_read_Blue:
  4164                           	callstack 0
  4165                           
  4166 ;; *************** function _I2C_2_Master_RepStart *****************
  4167 ;; Defined at:
  4168 ;;		line 33 in file "i2c.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2, status,0, cstack
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;Total ram usage:        0 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 2
  4189 ;; This function calls:
  4190 ;;		_I2C_2_Master_Idle
  4191 ;; This function is called by:
  4192 ;;		_color_read_lum
  4193 ;;		_color_read_Red
  4194 ;;		_color_read_Green
  4195 ;;		_color_read_Blue
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text19
  4200   004B50                     __ptext19:
  4201                           	callstack 0
  4202   004B50                     _I2C_2_Master_RepStart:
  4203                           	callstack 26
  4204   004B50                     
  4205                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4206   004B50  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  4207   004B54                     
  4208                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4209   004B54  010E               	movlb	14	; () banked
  4210   004B56  83DA               	bsf	218,1,b	;volatile
  4211   004B58                     
  4212                           ; BSR set to: 14
  4213   004B58  0012               	return		;funcret
  4214   004B5A                     __end_of_I2C_2_Master_RepStart:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _I2C_2_Master_Read *****************
  4218 ;; Defined at:
  4219 ;;		line 51 in file "i2c.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  ack             1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  ack             1    2[COMRAM] unsigned char 
  4224 ;;  tmp             1    3[COMRAM] unsigned char 
  4225 ;; Return value:  Size  Location     Type
  4226 ;;                  1    wreg      unsigned char 
  4227 ;; Registers used:
  4228 ;;		wreg, status,2, status,0, cstack
  4229 ;; Tracked objects:
  4230 ;;		On entry : 0/0
  4231 ;;		On exit  : 0/0
  4232 ;;		Unchanged: 0/0
  4233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4238 ;;Total ram usage:        3 bytes
  4239 ;; Hardware stack levels used: 1
  4240 ;; Hardware stack levels required when called: 2
  4241 ;; This function calls:
  4242 ;;		_I2C_2_Master_Idle
  4243 ;; This function is called by:
  4244 ;;		_color_read_lum
  4245 ;;		_color_read_Red
  4246 ;;		_color_read_Green
  4247 ;;		_color_read_Blue
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text20
  4252   004886                     __ptext20:
  4253                           	callstack 0
  4254   004886                     _I2C_2_Master_Read:
  4255                           	callstack 26
  4256                           
  4257                           ; BSR set to: 14
  4258                           ;incstack = 0
  4259                           ;I2C_2_Master_Read@ack stored from wreg
  4260   004886  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4261   004888                     
  4262                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4263   004888  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  4264   00488C                     
  4265                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4266   00488C  010E               	movlb	14	; () banked
  4267   00488E  87DA               	bsf	218,3,b	;volatile
  4268                           
  4269                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4270   004890  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  4271   004894                     
  4272                           ;i2c.c: 57:   tmp = SSP2BUF;
  4273   004894  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4274                           
  4275                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4276   004898  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  4277   00489C                     
  4278                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4279   00489C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4280   00489E  B4D8               	btfsc	status,2,c
  4281   0048A0  EF54  F024         	goto	u2771
  4282   0048A4  EF58  F024         	goto	u2770
  4283   0048A8                     u2771:
  4284   0048A8  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4285   0048AA  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4286   0048AC  EF59  F024         	goto	u2788
  4287   0048B0                     u2770:
  4288   0048B0  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4289   0048B2                     u2788:
  4290   0048B2  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4291   0048B4  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4292   0048B6  010E               	movlb	14	; () banked
  4293   0048B8  51DA               	movf	218,w,b	;volatile
  4294   0048BA  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4295   0048BC  0BDF               	andlw	-33
  4296   0048BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4297   0048C0  6FDA               	movwf	218,b	;volatile
  4298   0048C2                     
  4299                           ; BSR set to: 14
  4300                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4301   0048C2  89DA               	bsf	218,4,b	;volatile
  4302   0048C4                     
  4303                           ; BSR set to: 14
  4304                           ;i2c.c: 61:   return tmp;
  4305   0048C4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4306   0048C6                     
  4307                           ; BSR set to: 14
  4308   0048C6  0012               	return		;funcret
  4309   0048C8                     __end_of_I2C_2_Master_Read:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _initUSART4 *****************
  4313 ;; Defined at:
  4314 ;;		line 4 in file "serial.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;                  1    wreg      void 
  4321 ;; Registers used:
  4322 ;;		wreg, status,2
  4323 ;; Tracked objects:
  4324 ;;		On entry : 0/0
  4325 ;;		On exit  : 0/0
  4326 ;;		Unchanged: 0/0
  4327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used: 1
  4334 ;; Hardware stack levels required when called: 1
  4335 ;; This function calls:
  4336 ;;		Nothing
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text21
  4343   004B0E                     __ptext21:
  4344                           	callstack 0
  4345   004B0E                     _initUSART4:
  4346                           	callstack 29
  4347   004B0E                     
  4348                           ;serial.c: 5:     RC0PPS = 0x12;
  4349   004B0E  0E12               	movlw	18
  4350   004B10  010E               	movlb	14	; () banked
  4351   004B12  6F62               	movwf	98,b	;volatile
  4352                           
  4353                           ;serial.c: 6:     RX4PPS = 0x11;
  4354   004B14  0E11               	movlw	17
  4355   004B16  6F15               	movwf	21,b	;volatile
  4356   004B18                     
  4357                           ; BSR set to: 14
  4358                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4359   004B18  97E9               	bcf	233,3,b	;volatile
  4360   004B1A                     
  4361                           ; BSR set to: 14
  4362                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4363   004B1A  95E8               	bcf	232,2,b	;volatile
  4364                           
  4365                           ;serial.c: 9:     SP4BRGL = 51;
  4366   004B1C  0E33               	movlw	51
  4367   004B1E  6FE5               	movwf	229,b	;volatile
  4368                           
  4369                           ;serial.c: 10:     SP4BRGH = 0;
  4370   004B20  0E00               	movlw	0
  4371   004B22  6FE6               	movwf	230,b	;volatile
  4372   004B24                     
  4373                           ; BSR set to: 14
  4374                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4375   004B24  89E7               	bsf	231,4,b	;volatile
  4376   004B26                     
  4377                           ; BSR set to: 14
  4378                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4379   004B26  8BE8               	bsf	232,5,b	;volatile
  4380   004B28                     
  4381                           ; BSR set to: 14
  4382                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4383   004B28  8FE7               	bsf	231,7,b	;volatile
  4384   004B2A                     
  4385                           ; BSR set to: 14
  4386   004B2A  0012               	return		;funcret
  4387   004B2C                     __end_of_initUSART4:
  4388                           	callstack 0
  4389                           
  4390 ;; *************** function _initDCmotorsPWM *****************
  4391 ;; Defined at:
  4392 ;;		line 5 in file "dc_motor.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4395 ;; Auto vars:     Size  Location     Type
  4396 ;;		None
  4397 ;; Return value:  Size  Location     Type
  4398 ;;                  1    wreg      void 
  4399 ;; Registers used:
  4400 ;;		wreg, status,2
  4401 ;; Tracked objects:
  4402 ;;		On entry : 0/0
  4403 ;;		On exit  : 0/0
  4404 ;;		Unchanged: 0/0
  4405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;Total ram usage:        2 bytes
  4411 ;; Hardware stack levels used: 1
  4412 ;; Hardware stack levels required when called: 1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_main
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           
  4420                           	psect	text22
  4421   003EC0                     __ptext22:
  4422                           	callstack 0
  4423   003EC0                     _initDCmotorsPWM:
  4424                           	callstack 29
  4425   003EC0                     
  4426                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4427   003EC0  0E05               	movlw	5
  4428   003EC2  010E               	movlb	14	; () banked
  4429   003EC4  6F74               	movwf	116,b	;volatile
  4430                           
  4431                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4432   003EC6  0E06               	movlw	6
  4433   003EC8  6F76               	movwf	118,b	;volatile
  4434                           
  4435                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4436   003ECA  0E07               	movlw	7
  4437   003ECC  6F69               	movwf	105,b	;volatile
  4438                           
  4439                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4440   003ECE  0E08               	movlw	8
  4441   003ED0  6F88               	movwf	136,b	;volatile
  4442   003ED2                     
  4443                           ; BSR set to: 14
  4444                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4445   003ED2  9485               	bcf	133,2,c	;volatile
  4446   003ED4                     
  4447                           ; BSR set to: 14
  4448                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4449   003ED4  9885               	bcf	133,4,c	;volatile
  4450   003ED6                     
  4451                           ; BSR set to: 14
  4452                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4453   003ED6  9E83               	bcf	131,7,c	;volatile
  4454   003ED8                     
  4455                           ; BSR set to: 14
  4456                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4457   003ED8  9C87               	bcf	135,6,c	;volatile
  4458                           
  4459                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4460   003EDA  50BD               	movf	189,w,c	;volatile
  4461   003EDC  0B8F               	andlw	-113
  4462   003EDE  0930               	iorlw	48
  4463   003EE0  6EBD               	movwf	189,c	;volatile
  4464                           
  4465                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4466   003EE2  0EE0               	movlw	-32
  4467   003EE4  16BE               	andwf	190,f,c	;volatile
  4468                           
  4469                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4470   003EE6  50BF               	movf	191,w,c	;volatile
  4471   003EE8  0BF0               	andlw	-16
  4472   003EEA  0901               	iorlw	1
  4473   003EEC  6EBF               	movwf	191,c	;volatile
  4474   003EEE                     
  4475                           ; BSR set to: 14
  4476                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4477   003EEE  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4478   003EF2                     
  4479                           ; BSR set to: 14
  4480                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4481   003EF2  8EBD               	bsf	189,7,c	;volatile
  4482                           
  4483                           ;dc_motor.c: 33:     CCPR1H=0;
  4484   003EF4  0E00               	movlw	0
  4485   003EF6  6EAA               	movwf	170,c	;volatile
  4486                           
  4487                           ;dc_motor.c: 34:     CCPR2H=0;
  4488   003EF8  0E00               	movlw	0
  4489   003EFA  6EA6               	movwf	166,c	;volatile
  4490                           
  4491                           ;dc_motor.c: 35:     CCPR3H=0;
  4492   003EFC  0E00               	movlw	0
  4493   003EFE  010F               	movlb	15	; () banked
  4494   003F00  6F25               	movwf	37,b	;volatile
  4495                           
  4496                           ;dc_motor.c: 36:     CCPR4H=0;
  4497   003F02  0E00               	movlw	0
  4498   003F04  6F21               	movwf	33,b	;volatile
  4499                           
  4500                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4501   003F06  0EFC               	movlw	-4
  4502   003F08  16AD               	andwf	173,f,c	;volatile
  4503                           
  4504                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4505   003F0A  0EF3               	movlw	-13
  4506   003F0C  16AD               	andwf	173,f,c	;volatile
  4507                           
  4508                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4509   003F0E  0ECF               	movlw	-49
  4510   003F10  16AD               	andwf	173,f,c	;volatile
  4511                           
  4512                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4513   003F12  0E3F               	movlw	-193
  4514   003F14  16AD               	andwf	173,f,c	;volatile
  4515   003F16                     
  4516                           ; BSR set to: 15
  4517                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4518   003F16  88AB               	bsf	171,4,c	;volatile
  4519                           
  4520                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4521   003F18  50AB               	movf	171,w,c	;volatile
  4522   003F1A  0BF0               	andlw	-16
  4523   003F1C  090C               	iorlw	12
  4524   003F1E  6EAB               	movwf	171,c	;volatile
  4525   003F20                     
  4526                           ; BSR set to: 15
  4527                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4528   003F20  8EAB               	bsf	171,7,c	;volatile
  4529   003F22                     
  4530                           ; BSR set to: 15
  4531                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4532   003F22  88A7               	bsf	167,4,c	;volatile
  4533                           
  4534                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4535   003F24  50A7               	movf	167,w,c	;volatile
  4536   003F26  0BF0               	andlw	-16
  4537   003F28  090C               	iorlw	12
  4538   003F2A  6EA7               	movwf	167,c	;volatile
  4539   003F2C                     
  4540                           ; BSR set to: 15
  4541                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4542   003F2C  8EA7               	bsf	167,7,c	;volatile
  4543   003F2E                     
  4544                           ; BSR set to: 15
  4545                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4546   003F2E  8926               	bsf	38,4,b	;volatile
  4547                           
  4548                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4549   003F30  5126               	movf	38,w,b	;volatile
  4550   003F32  0BF0               	andlw	-16
  4551   003F34  090C               	iorlw	12
  4552   003F36  6F26               	movwf	38,b	;volatile
  4553   003F38                     
  4554                           ; BSR set to: 15
  4555                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4556   003F38  8F26               	bsf	38,7,b	;volatile
  4557   003F3A                     
  4558                           ; BSR set to: 15
  4559                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4560   003F3A  8922               	bsf	34,4,b	;volatile
  4561                           
  4562                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4563   003F3C  5122               	movf	34,w,b	;volatile
  4564   003F3E  0BF0               	andlw	-16
  4565   003F40  090C               	iorlw	12
  4566   003F42  6F22               	movwf	34,b	;volatile
  4567   003F44                     
  4568                           ; BSR set to: 15
  4569                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4570   003F44  8F22               	bsf	34,7,b	;volatile
  4571   003F46                     
  4572                           ; BSR set to: 15
  4573   003F46  0012               	return		;funcret
  4574   003F48                     __end_of_initDCmotorsPWM:
  4575                           	callstack 0
  4576                           
  4577 ;; *************** function _go_Home *****************
  4578 ;; Defined at:
  4579 ;;		line 4 in file "Memory.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4582 ;;		 -> WayBack(50), 
  4583 ;;  Time_forward    2   37[COMRAM] PTR int 
  4584 ;;		 -> Time_forward(100), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  time_temp       2    0        unsigned int 
  4587 ;;  i               2   44[COMRAM] int 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4601 ;;Total ram usage:       11 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 6
  4604 ;; This function calls:
  4605 ;;		_BlueMove
  4606 ;;		_Forwardhalfblock
  4607 ;;		_GreenMove
  4608 ;;		_LightBlueMove
  4609 ;;		_OrangeMove
  4610 ;;		_RedMove
  4611 ;;		_ReversePink
  4612 ;;		_ReverseYellow
  4613 ;;		_fullSpeedAhead
  4614 ;; This function is called by:
  4615 ;;		_main
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text23
  4620   003046                     __ptext23:
  4621                           	callstack 0
  4622   003046                     _go_Home:
  4623                           	callstack 24
  4624   003046                     
  4625                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4626   003046  C0F2  F02D         	movff	_move_count,go_Home@i	;volatile
  4627   00304A  C0F3  F02E         	movff	_move_count+1,go_Home@i+1	;volatile
  4628   00304E                     l4469:
  4629   00304E  BE2E               	btfsc	(go_Home@i+1)^0,7,c
  4630   003050  EF2E  F018         	goto	u4200
  4631   003054  EF2C  F018         	goto	u4201
  4632   003058                     u4201:
  4633   003058  EF30  F018         	goto	l4473
  4634   00305C                     u4200:
  4635   00305C  EF39  F019         	goto	l634
  4636   003060                     l4473:
  4637                           
  4638                           ;Memory.c: 7:         TMR0H=0;
  4639   003060  0E00               	movlw	0
  4640   003062  6ED4               	movwf	212,c	;volatile
  4641                           
  4642                           ;Memory.c: 8:         TMR0L=0;
  4643   003064  0E00               	movlw	0
  4644   003066  6ED3               	movwf	211,c	;volatile
  4645   003068                     l4475:
  4646   003068  50D3               	movf	211,w,c	;volatile
  4647                           
  4648                           ;Memory.c: 11:         while (TMR0H<<8<Time_forward[i]){
  4649   00306A  EF43  F018         	goto	l4481
  4650   00306E                     l4477:
  4651                           
  4652                           ;Memory.c: 12:             fullSpeedAhead(&motorL,&motorR);
  4653   00306E  0EF5               	movlw	low _motorL
  4654   003070  6E14               	movwf	fullSpeedAhead@mL^0,c
  4655   003072  0E00               	movlw	high _motorL
  4656   003074  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  4657   003076  0EBE               	movlw	low _motorR
  4658   003078  6E16               	movwf	fullSpeedAhead@mR^0,c
  4659   00307A  0E01               	movlw	high _motorR
  4660   00307C  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  4661   00307E  EC73  F01E         	call	_fullSpeedAhead	;wreg free
  4662   003082  EF34  F018         	goto	l4475
  4663   003086                     l4481:
  4664                           
  4665                           ;Memory.c: 11:         while (TMR0H<<8<Time_forward[i]){
  4666   003086  90D8               	bcf	status,0,c
  4667   003088  342D               	rlcf	go_Home@i^0,w,c
  4668   00308A  6ED9               	movwf	fsr2l,c
  4669   00308C  342E               	rlcf	(go_Home@i+1)^0,w,c
  4670   00308E  6EDA               	movwf	fsr2h,c
  4671   003090  5026               	movf	go_Home@Time_forward^0,w,c
  4672   003092  26D9               	addwf	fsr2l,f,c
  4673   003094  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4674   003096  22DA               	addwfc	fsr2h,f,c
  4675   003098  50D4               	movf	212,w,c	;volatile
  4676   00309A  6E2B               	movwf	(??_go_Home+3)^0,c
  4677   00309C  6A2A               	clrf	(??_go_Home+2)^0,c
  4678   00309E  50DE               	movf	postinc2,w,c
  4679   0030A0  5C2A               	subwf	(??_go_Home+2)^0,w,c
  4680   0030A2  502B               	movf	(??_go_Home+3)^0,w,c
  4681   0030A4  0A80               	xorlw	128
  4682   0030A6  6E2C               	movwf	(??_go_Home+4)^0,c
  4683   0030A8  50DE               	movf	postinc2,w,c
  4684   0030AA  0A80               	xorlw	128
  4685   0030AC  582C               	subwfb	(??_go_Home+4)^0,w,c
  4686   0030AE  A0D8               	btfss	status,0,c
  4687   0030B0  EF5C  F018         	goto	u4211
  4688   0030B4  EF5E  F018         	goto	u4210
  4689   0030B8                     u4211:
  4690   0030B8  EF37  F018         	goto	l4477
  4691   0030BC                     u4210:
  4692   0030BC                     
  4693                           ;Memory.c: 17:         if (WayBack[i]==0){
  4694   0030BC  502D               	movf	go_Home@i^0,w,c
  4695   0030BE  2424               	addwf	go_Home@WayBack^0,w,c
  4696   0030C0  6ED9               	movwf	fsr2l,c
  4697   0030C2  502E               	movf	(go_Home@i+1)^0,w,c
  4698   0030C4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4699   0030C6  6EDA               	movwf	fsr2h,c
  4700   0030C8  50DF               	movf	indf2,w,c
  4701   0030CA  A4D8               	btfss	status,2,c
  4702   0030CC  EF6A  F018         	goto	u4221
  4703   0030D0  EF6C  F018         	goto	u4220
  4704   0030D4                     u4221:
  4705   0030D4  EF78  F018         	goto	l4487
  4706   0030D8                     u4220:
  4707   0030D8                     
  4708                           ;Memory.c: 18:             Forwardhalfblock(&motorL,&motorR);
  4709   0030D8  0EF5               	movlw	low _motorL
  4710   0030DA  6E1A               	movwf	Forwardhalfblock@mL^0,c
  4711   0030DC  0E00               	movlw	high _motorL
  4712   0030DE  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  4713   0030E0  0EBE               	movlw	low _motorR
  4714   0030E2  6E1C               	movwf	Forwardhalfblock@mR^0,c
  4715   0030E4  0E01               	movlw	high _motorR
  4716   0030E6  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  4717   0030E8  EC62  F021         	call	_Forwardhalfblock	;wreg free
  4718                           
  4719                           ;Memory.c: 19:         }
  4720   0030EC  EF34  F019         	goto	l4515
  4721   0030F0                     l4487:
  4722   0030F0  502D               	movf	go_Home@i^0,w,c
  4723   0030F2  2424               	addwf	go_Home@WayBack^0,w,c
  4724   0030F4  6ED9               	movwf	fsr2l,c
  4725   0030F6  502E               	movf	(go_Home@i+1)^0,w,c
  4726   0030F8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4727   0030FA  6EDA               	movwf	fsr2h,c
  4728   0030FC  04DE               	decf	postinc2,w,c
  4729   0030FE  A4D8               	btfss	status,2,c
  4730   003100  EF84  F018         	goto	u4231
  4731   003104  EF86  F018         	goto	u4230
  4732   003108                     u4231:
  4733   003108  EF92  F018         	goto	l4491
  4734   00310C                     u4230:
  4735   00310C                     
  4736                           ;Memory.c: 21:             GreenMove(&motorL, &motorR);
  4737   00310C  0EF5               	movlw	low _motorL
  4738   00310E  6E20               	movwf	GreenMove@mL^0,c
  4739   003110  0E00               	movlw	high _motorL
  4740   003112  6E21               	movwf	(GreenMove@mL+1)^0,c
  4741   003114  0EBE               	movlw	low _motorR
  4742   003116  6E22               	movwf	GreenMove@mR^0,c
  4743   003118  0E01               	movlw	high _motorR
  4744   00311A  6E23               	movwf	(GreenMove@mR+1)^0,c
  4745   00311C  ECE1  F024         	call	_GreenMove	;wreg free
  4746                           
  4747                           ;Memory.c: 22:         }
  4748   003120  EF34  F019         	goto	l4515
  4749   003124                     l4491:
  4750   003124  502D               	movf	go_Home@i^0,w,c
  4751   003126  2424               	addwf	go_Home@WayBack^0,w,c
  4752   003128  6ED9               	movwf	fsr2l,c
  4753   00312A  502E               	movf	(go_Home@i+1)^0,w,c
  4754   00312C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4755   00312E  6EDA               	movwf	fsr2h,c
  4756   003130  0E02               	movlw	2
  4757   003132  18DE               	xorwf	postinc2,w,c
  4758   003134  A4D8               	btfss	status,2,c
  4759   003136  EF9F  F018         	goto	u4241
  4760   00313A  EFA1  F018         	goto	u4240
  4761   00313E                     u4241:
  4762   00313E  EFAD  F018         	goto	l4495
  4763   003142                     u4240:
  4764   003142                     
  4765                           ;Memory.c: 24:             LightBlueMove(&motorL, &motorR);
  4766   003142  0EF5               	movlw	low _motorL
  4767   003144  6E20               	movwf	LightBlueMove@mL^0,c
  4768   003146  0E00               	movlw	high _motorL
  4769   003148  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4770   00314A  0EBE               	movlw	low _motorR
  4771   00314C  6E22               	movwf	LightBlueMove@mR^0,c
  4772   00314E  0E01               	movlw	high _motorR
  4773   003150  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4774   003152  EC93  F022         	call	_LightBlueMove	;wreg free
  4775                           
  4776                           ;Memory.c: 25:         }
  4777   003156  EF34  F019         	goto	l4515
  4778   00315A                     l4495:
  4779   00315A  502D               	movf	go_Home@i^0,w,c
  4780   00315C  2424               	addwf	go_Home@WayBack^0,w,c
  4781   00315E  6ED9               	movwf	fsr2l,c
  4782   003160  502E               	movf	(go_Home@i+1)^0,w,c
  4783   003162  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4784   003164  6EDA               	movwf	fsr2h,c
  4785   003166  0E03               	movlw	3
  4786   003168  18DE               	xorwf	postinc2,w,c
  4787   00316A  A4D8               	btfss	status,2,c
  4788   00316C  EFBA  F018         	goto	u4251
  4789   003170  EFBC  F018         	goto	u4250
  4790   003174                     u4251:
  4791   003174  EFC8  F018         	goto	l4499
  4792   003178                     u4250:
  4793   003178                     
  4794                           ;Memory.c: 27:             ReverseYellow(&motorL, &motorR);
  4795   003178  0EF5               	movlw	low _motorL
  4796   00317A  6E20               	movwf	ReverseYellow@mL^0,c
  4797   00317C  0E00               	movlw	high _motorL
  4798   00317E  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4799   003180  0EBE               	movlw	low _motorR
  4800   003182  6E22               	movwf	ReverseYellow@mR^0,c
  4801   003184  0E01               	movlw	high _motorR
  4802   003186  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4803   003188  EC84  F024         	call	_ReverseYellow	;wreg free
  4804                           
  4805                           ;Memory.c: 28:         }
  4806   00318C  EF34  F019         	goto	l4515
  4807   003190                     l4499:
  4808   003190  502D               	movf	go_Home@i^0,w,c
  4809   003192  2424               	addwf	go_Home@WayBack^0,w,c
  4810   003194  6ED9               	movwf	fsr2l,c
  4811   003196  502E               	movf	(go_Home@i+1)^0,w,c
  4812   003198  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4813   00319A  6EDA               	movwf	fsr2h,c
  4814   00319C  0E04               	movlw	4
  4815   00319E  18DE               	xorwf	postinc2,w,c
  4816   0031A0  A4D8               	btfss	status,2,c
  4817   0031A2  EFD5  F018         	goto	u4261
  4818   0031A6  EFD7  F018         	goto	u4260
  4819   0031AA                     u4261:
  4820   0031AA  EFE3  F018         	goto	l4503
  4821   0031AE                     u4260:
  4822   0031AE                     
  4823                           ;Memory.c: 30:             BlueMove(&motorL, &motorR);
  4824   0031AE  0EF5               	movlw	low _motorL
  4825   0031B0  6E20               	movwf	BlueMove@mL^0,c
  4826   0031B2  0E00               	movlw	high _motorL
  4827   0031B4  6E21               	movwf	(BlueMove@mL+1)^0,c
  4828   0031B6  0EBE               	movlw	low _motorR
  4829   0031B8  6E22               	movwf	BlueMove@mR^0,c
  4830   0031BA  0E01               	movlw	high _motorR
  4831   0031BC  6E23               	movwf	(BlueMove@mR+1)^0,c
  4832   0031BE  ECD3  F020         	call	_BlueMove	;wreg free
  4833                           
  4834                           ;Memory.c: 31:         }
  4835   0031C2  EF34  F019         	goto	l4515
  4836   0031C6                     l4503:
  4837   0031C6  502D               	movf	go_Home@i^0,w,c
  4838   0031C8  2424               	addwf	go_Home@WayBack^0,w,c
  4839   0031CA  6ED9               	movwf	fsr2l,c
  4840   0031CC  502E               	movf	(go_Home@i+1)^0,w,c
  4841   0031CE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4842   0031D0  6EDA               	movwf	fsr2h,c
  4843   0031D2  0E05               	movlw	5
  4844   0031D4  18DE               	xorwf	postinc2,w,c
  4845   0031D6  A4D8               	btfss	status,2,c
  4846   0031D8  EFF0  F018         	goto	u4271
  4847   0031DC  EFF2  F018         	goto	u4270
  4848   0031E0                     u4271:
  4849   0031E0  EFFE  F018         	goto	l4507
  4850   0031E4                     u4270:
  4851   0031E4                     
  4852                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  4853   0031E4  0EF5               	movlw	low _motorL
  4854   0031E6  6E20               	movwf	RedMove@mL^0,c
  4855   0031E8  0E00               	movlw	high _motorL
  4856   0031EA  6E21               	movwf	(RedMove@mL+1)^0,c
  4857   0031EC  0EBE               	movlw	low _motorR
  4858   0031EE  6E22               	movwf	RedMove@mR^0,c
  4859   0031F0  0E01               	movlw	high _motorR
  4860   0031F2  6E23               	movwf	(RedMove@mR+1)^0,c
  4861   0031F4  ECC2  F024         	call	_RedMove	;wreg free
  4862                           
  4863                           ;Memory.c: 34:         }
  4864   0031F8  EF34  F019         	goto	l4515
  4865   0031FC                     l4507:
  4866   0031FC  502D               	movf	go_Home@i^0,w,c
  4867   0031FE  2424               	addwf	go_Home@WayBack^0,w,c
  4868   003200  6ED9               	movwf	fsr2l,c
  4869   003202  502E               	movf	(go_Home@i+1)^0,w,c
  4870   003204  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4871   003206  6EDA               	movwf	fsr2h,c
  4872   003208  0E06               	movlw	6
  4873   00320A  18DE               	xorwf	postinc2,w,c
  4874   00320C  A4D8               	btfss	status,2,c
  4875   00320E  EF0B  F019         	goto	u4281
  4876   003212  EF0D  F019         	goto	u4280
  4877   003216                     u4281:
  4878   003216  EF19  F019         	goto	l4511
  4879   00321A                     u4280:
  4880   00321A                     
  4881                           ;Memory.c: 36:             OrangeMove(&motorL, &motorR);
  4882   00321A  0EF5               	movlw	low _motorL
  4883   00321C  6E20               	movwf	OrangeMove@mL^0,c
  4884   00321E  0E00               	movlw	high _motorL
  4885   003220  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4886   003222  0EBE               	movlw	low _motorR
  4887   003224  6E22               	movwf	OrangeMove@mR^0,c
  4888   003226  0E01               	movlw	high _motorR
  4889   003228  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4890   00322A  EC6A  F022         	call	_OrangeMove	;wreg free
  4891                           
  4892                           ;Memory.c: 37:         }
  4893   00322E  EF34  F019         	goto	l4515
  4894   003232                     l4511:
  4895   003232  502D               	movf	go_Home@i^0,w,c
  4896   003234  2424               	addwf	go_Home@WayBack^0,w,c
  4897   003236  6ED9               	movwf	fsr2l,c
  4898   003238  502E               	movf	(go_Home@i+1)^0,w,c
  4899   00323A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4900   00323C  6EDA               	movwf	fsr2h,c
  4901   00323E  0E07               	movlw	7
  4902   003240  18DE               	xorwf	postinc2,w,c
  4903   003242  A4D8               	btfss	status,2,c
  4904   003244  EF26  F019         	goto	u4291
  4905   003248  EF28  F019         	goto	u4290
  4906   00324C                     u4291:
  4907   00324C  EF34  F019         	goto	l628
  4908   003250                     u4290:
  4909   003250                     
  4910                           ;Memory.c: 39:             ReversePink(&motorL, &motorR);
  4911   003250  0EF5               	movlw	low _motorL
  4912   003252  6E20               	movwf	ReversePink@mL^0,c
  4913   003254  0E00               	movlw	high _motorL
  4914   003256  6E21               	movwf	(ReversePink@mL+1)^0,c
  4915   003258  0EBE               	movlw	low _motorR
  4916   00325A  6E22               	movwf	ReversePink@mR^0,c
  4917   00325C  0E01               	movlw	high _motorR
  4918   00325E  6E23               	movwf	(ReversePink@mR+1)^0,c
  4919   003260  ECA3  F024         	call	_ReversePink	;wreg free
  4920   003264  EF34  F019         	goto	l4515
  4921   003268                     l628:
  4922   003268                     l4515:
  4923                           
  4924                           ;Memory.c: 43:   }
  4925   003268  062D               	decf	go_Home@i^0,f,c
  4926   00326A  A0D8               	btfss	status,0,c
  4927   00326C  062E               	decf	(go_Home@i+1)^0,f,c
  4928   00326E  EF27  F018         	goto	l4469
  4929   003272                     l634:
  4930   003272  0012               	return		;funcret
  4931   003274                     __end_of_go_Home:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _ReverseYellow *****************
  4935 ;; Defined at:
  4936 ;;		line 304 in file "dc_motor.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  4939 ;;		 -> motorL(9), 
  4940 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  4941 ;;		 -> motorR(9), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;		None
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        4 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 5
  4960 ;; This function calls:
  4961 ;;		_ForwardOneBlock
  4962 ;;		_turnLeft45
  4963 ;; This function is called by:
  4964 ;;		_go_Home
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text24
  4969   004908                     __ptext24:
  4970                           	callstack 0
  4971   004908                     _ReverseYellow:
  4972                           	callstack 24
  4973   004908                     
  4974                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  4975   004908  0EF5               	movlw	low _motorL
  4976   00490A  6E1A               	movwf	turnLeft45@mL^0,c
  4977   00490C  0E00               	movlw	high _motorL
  4978   00490E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  4979   004910  0EBE               	movlw	low _motorR
  4980   004912  6E1C               	movwf	turnLeft45@mR^0,c
  4981   004914  0E01               	movlw	high _motorR
  4982   004916  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  4983   004918  EC15  F022         	call	_turnLeft45	;wreg free
  4984                           
  4985                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  4986   00491C  0EF5               	movlw	low _motorL
  4987   00491E  6E1A               	movwf	turnLeft45@mL^0,c
  4988   004920  0E00               	movlw	high _motorL
  4989   004922  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  4990   004924  0EBE               	movlw	low _motorR
  4991   004926  6E1C               	movwf	turnLeft45@mR^0,c
  4992   004928  0E01               	movlw	high _motorR
  4993   00492A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  4994   00492C  EC15  F022         	call	_turnLeft45	;wreg free
  4995                           
  4996                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  4997   004930  0EF5               	movlw	low _motorL
  4998   004932  6E1A               	movwf	ForwardOneBlock@mL^0,c
  4999   004934  0E00               	movlw	high _motorL
  5000   004936  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5001   004938  0EBE               	movlw	low _motorR
  5002   00493A  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5003   00493C  0E01               	movlw	high _motorR
  5004   00493E  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5005   004940  EC35  F021         	call	_ForwardOneBlock	;wreg free
  5006   004944  0012               	return		;funcret
  5007   004946                     __end_of_ReverseYellow:
  5008                           	callstack 0
  5009                           
  5010 ;; *************** function _ReversePink *****************
  5011 ;; Defined at:
  5012 ;;		line 309 in file "dc_motor.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5015 ;;		 -> motorL(9), 
  5016 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5017 ;;		 -> motorR(9), 
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;                  1    wreg      void 
  5022 ;; Registers used:
  5023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;Total ram usage:        4 bytes
  5034 ;; Hardware stack levels used: 1
  5035 ;; Hardware stack levels required when called: 5
  5036 ;; This function calls:
  5037 ;;		_ForwardOneBlock
  5038 ;;		_turnRight45
  5039 ;; This function is called by:
  5040 ;;		_go_Home
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text25
  5045   004946                     __ptext25:
  5046                           	callstack 0
  5047   004946                     _ReversePink:
  5048                           	callstack 24
  5049   004946                     
  5050                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  5051   004946  0EF5               	movlw	low _motorL
  5052   004948  6E1A               	movwf	turnRight45@mL^0,c
  5053   00494A  0E00               	movlw	high _motorL
  5054   00494C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5055   00494E  0EBE               	movlw	low _motorR
  5056   004950  6E1C               	movwf	turnRight45@mR^0,c
  5057   004952  0E01               	movlw	high _motorR
  5058   004954  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5059   004956  ECE9  F021         	call	_turnRight45	;wreg free
  5060                           
  5061                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5062   00495A  0EF5               	movlw	low _motorL
  5063   00495C  6E1A               	movwf	turnRight45@mL^0,c
  5064   00495E  0E00               	movlw	high _motorL
  5065   004960  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5066   004962  0EBE               	movlw	low _motorR
  5067   004964  6E1C               	movwf	turnRight45@mR^0,c
  5068   004966  0E01               	movlw	high _motorR
  5069   004968  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5070   00496A  ECE9  F021         	call	_turnRight45	;wreg free
  5071                           
  5072                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  5073   00496E  0EF5               	movlw	low _motorL
  5074   004970  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5075   004972  0E00               	movlw	high _motorL
  5076   004974  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5077   004976  0EBE               	movlw	low _motorR
  5078   004978  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5079   00497A  0E01               	movlw	high _motorR
  5080   00497C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5081   00497E  EC35  F021         	call	_ForwardOneBlock	;wreg free
  5082   004982  0012               	return		;funcret
  5083   004984                     __end_of_ReversePink:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _ForwardOneBlock *****************
  5087 ;; Defined at:
  5088 ;;		line 208 in file "dc_motor.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5091 ;;		 -> motorL(9), 
  5092 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5093 ;;		 -> motorR(9), 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;		None
  5096 ;; Return value:  Size  Location     Type
  5097 ;;                  1    wreg      void 
  5098 ;; Registers used:
  5099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5109 ;;Total ram usage:        6 bytes
  5110 ;; Hardware stack levels used: 1
  5111 ;; Hardware stack levels required when called: 4
  5112 ;; This function calls:
  5113 ;;		_fullSpeedAhead
  5114 ;;		_stop
  5115 ;; This function is called by:
  5116 ;;		_ReverseYellow
  5117 ;;		_ReversePink
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text26
  5122   00426A                     __ptext26:
  5123                           	callstack 0
  5124   00426A                     _ForwardOneBlock:
  5125                           	callstack 24
  5126   00426A                     
  5127                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  5128   00426A  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5129   00426E  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5130   004272  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5131   004276  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5132   00427A  EC73  F01E         	call	_fullSpeedAhead	;wreg free
  5133   00427E                     
  5134                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5135   00427E  0E52               	movlw	82
  5136   004280  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5137   004282  0E2B               	movlw	43
  5138   004284  6E1E               	movwf	??_ForwardOneBlock^0,c
  5139   004286  0E00               	movlw	0
  5140   004288                     u4597:
  5141   004288  2EE8               	decfsz	wreg,f,c
  5142   00428A  D7FE               	bra	u4597
  5143   00428C  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5144   00428E  D7FC               	bra	u4597
  5145   004290  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5146   004292  D7FA               	bra	u4597
  5147   004294  D000               	nop2	
  5148   004296                     
  5149                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  5150   004296  0EF5               	movlw	low _motorL
  5151   004298  6E14               	movwf	stop@mL^0,c
  5152   00429A  0E00               	movlw	high _motorL
  5153   00429C  6E15               	movwf	(stop@mL+1)^0,c
  5154   00429E  0EBE               	movlw	low _motorR
  5155   0042A0  6E16               	movwf	stop@mR^0,c
  5156   0042A2  0E01               	movlw	high _motorR
  5157   0042A4  6E17               	movwf	(stop@mR+1)^0,c
  5158   0042A6  ECE5  F01F         	call	_stop	;wreg free
  5159                           
  5160                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5161   0042AA  0E52               	movlw	82
  5162   0042AC  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5163   0042AE  0E2B               	movlw	43
  5164   0042B0  6E1E               	movwf	??_ForwardOneBlock^0,c
  5165   0042B2  0E00               	movlw	0
  5166   0042B4                     u4607:
  5167   0042B4  2EE8               	decfsz	wreg,f,c
  5168   0042B6  D7FE               	bra	u4607
  5169   0042B8  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5170   0042BA  D7FC               	bra	u4607
  5171   0042BC  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5172   0042BE  D7FA               	bra	u4607
  5173   0042C0  D000               	nop2	
  5174   0042C2  0012               	return		;funcret
  5175   0042C4                     __end_of_ForwardOneBlock:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _RedMove *****************
  5179 ;; Defined at:
  5180 ;;		line 232 in file "dc_motor.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5183 ;;		 -> motorL(9), 
  5184 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5185 ;;		 -> motorR(9), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;Total ram usage:        4 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 5
  5204 ;; This function calls:
  5205 ;;		_reverseDetect
  5206 ;;		_turnRight45
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;;		_go_Home
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text27
  5214   004984                     __ptext27:
  5215                           	callstack 0
  5216   004984                     _RedMove:
  5217                           	callstack 24
  5218   004984                     
  5219                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  5220   004984  0EF5               	movlw	low _motorL
  5221   004986  6E1A               	movwf	reverseDetect@mL^0,c
  5222   004988  0E00               	movlw	high _motorL
  5223   00498A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5224   00498C  0EBE               	movlw	low _motorR
  5225   00498E  6E1C               	movwf	reverseDetect@mR^0,c
  5226   004990  0E01               	movlw	high _motorR
  5227   004992  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5228   004994  ECBC  F021         	call	_reverseDetect	;wreg free
  5229                           
  5230                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  5231   004998  0EF5               	movlw	low _motorL
  5232   00499A  6E1A               	movwf	turnRight45@mL^0,c
  5233   00499C  0E00               	movlw	high _motorL
  5234   00499E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5235   0049A0  0EBE               	movlw	low _motorR
  5236   0049A2  6E1C               	movwf	turnRight45@mR^0,c
  5237   0049A4  0E01               	movlw	high _motorR
  5238   0049A6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5239   0049A8  ECE9  F021         	call	_turnRight45	;wreg free
  5240                           
  5241                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  5242   0049AC  0EF5               	movlw	low _motorL
  5243   0049AE  6E1A               	movwf	turnRight45@mL^0,c
  5244   0049B0  0E00               	movlw	high _motorL
  5245   0049B2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5246   0049B4  0EBE               	movlw	low _motorR
  5247   0049B6  6E1C               	movwf	turnRight45@mR^0,c
  5248   0049B8  0E01               	movlw	high _motorR
  5249   0049BA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5250   0049BC  ECE9  F021         	call	_turnRight45	;wreg free
  5251   0049C0  0012               	return		;funcret
  5252   0049C2                     __end_of_RedMove:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _OrangeMove *****************
  5256 ;; Defined at:
  5257 ;;		line 278 in file "dc_motor.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5260 ;;		 -> motorL(9), 
  5261 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5262 ;;		 -> motorR(9), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;Total ram usage:        4 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 5
  5281 ;; This function calls:
  5282 ;;		_reverseDetect
  5283 ;;		_turnRight45
  5284 ;; This function is called by:
  5285 ;;		_main
  5286 ;;		_go_Home
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text28
  5291   0044D4                     __ptext28:
  5292                           	callstack 0
  5293   0044D4                     _OrangeMove:
  5294                           	callstack 24
  5295   0044D4                     
  5296                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  5297   0044D4  0EF5               	movlw	low _motorL
  5298   0044D6  6E1A               	movwf	reverseDetect@mL^0,c
  5299   0044D8  0E00               	movlw	high _motorL
  5300   0044DA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5301   0044DC  0EBE               	movlw	low _motorR
  5302   0044DE  6E1C               	movwf	reverseDetect@mR^0,c
  5303   0044E0  0E01               	movlw	high _motorR
  5304   0044E2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5305   0044E4  ECBC  F021         	call	_reverseDetect	;wreg free
  5306                           
  5307                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  5308   0044E8  0EF5               	movlw	low _motorL
  5309   0044EA  6E1A               	movwf	turnRight45@mL^0,c
  5310   0044EC  0E00               	movlw	high _motorL
  5311   0044EE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5312   0044F0  0EBE               	movlw	low _motorR
  5313   0044F2  6E1C               	movwf	turnRight45@mR^0,c
  5314   0044F4  0E01               	movlw	high _motorR
  5315   0044F6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5316   0044F8  ECE9  F021         	call	_turnRight45	;wreg free
  5317                           
  5318                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  5319   0044FC  0EF5               	movlw	low _motorL
  5320   0044FE  6E1A               	movwf	turnRight45@mL^0,c
  5321   004500  0E00               	movlw	high _motorL
  5322   004502  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5323   004504  0EBE               	movlw	low _motorR
  5324   004506  6E1C               	movwf	turnRight45@mR^0,c
  5325   004508  0E01               	movlw	high _motorR
  5326   00450A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5327   00450C  ECE9  F021         	call	_turnRight45	;wreg free
  5328                           
  5329                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  5330   004510  0EF5               	movlw	low _motorL
  5331   004512  6E1A               	movwf	turnRight45@mL^0,c
  5332   004514  0E00               	movlw	high _motorL
  5333   004516  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5334   004518  0EBE               	movlw	low _motorR
  5335   00451A  6E1C               	movwf	turnRight45@mR^0,c
  5336   00451C  0E01               	movlw	high _motorR
  5337   00451E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5338   004520  ECE9  F021         	call	_turnRight45	;wreg free
  5339   004524  0012               	return		;funcret
  5340   004526                     __end_of_OrangeMove:
  5341                           	callstack 0
  5342                           
  5343 ;; *************** function _LightBlueMove *****************
  5344 ;; Defined at:
  5345 ;;		line 287 in file "dc_motor.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5348 ;;		 -> motorL(9), 
  5349 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5350 ;;		 -> motorR(9), 
  5351 ;; Auto vars:     Size  Location     Type
  5352 ;;		None
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      void 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5365 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;Total ram usage:        4 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 5
  5369 ;; This function calls:
  5370 ;;		_reverseDetect
  5371 ;;		_turnLeft45
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;;		_go_Home
  5375 ;; This function uses a non-reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text29
  5379   004526                     __ptext29:
  5380                           	callstack 0
  5381   004526                     _LightBlueMove:
  5382                           	callstack 24
  5383   004526                     
  5384                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  5385   004526  0EF5               	movlw	low _motorL
  5386   004528  6E1A               	movwf	reverseDetect@mL^0,c
  5387   00452A  0E00               	movlw	high _motorL
  5388   00452C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5389   00452E  0EBE               	movlw	low _motorR
  5390   004530  6E1C               	movwf	reverseDetect@mR^0,c
  5391   004532  0E01               	movlw	high _motorR
  5392   004534  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5393   004536  ECBC  F021         	call	_reverseDetect	;wreg free
  5394                           
  5395                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  5396   00453A  0EF5               	movlw	low _motorL
  5397   00453C  6E1A               	movwf	turnLeft45@mL^0,c
  5398   00453E  0E00               	movlw	high _motorL
  5399   004540  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5400   004542  0EBE               	movlw	low _motorR
  5401   004544  6E1C               	movwf	turnLeft45@mR^0,c
  5402   004546  0E01               	movlw	high _motorR
  5403   004548  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5404   00454A  EC15  F022         	call	_turnLeft45	;wreg free
  5405                           
  5406                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  5407   00454E  0EF5               	movlw	low _motorL
  5408   004550  6E1A               	movwf	turnLeft45@mL^0,c
  5409   004552  0E00               	movlw	high _motorL
  5410   004554  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5411   004556  0EBE               	movlw	low _motorR
  5412   004558  6E1C               	movwf	turnLeft45@mR^0,c
  5413   00455A  0E01               	movlw	high _motorR
  5414   00455C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5415   00455E  EC15  F022         	call	_turnLeft45	;wreg free
  5416                           
  5417                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  5418   004562  0EF5               	movlw	low _motorL
  5419   004564  6E1A               	movwf	turnLeft45@mL^0,c
  5420   004566  0E00               	movlw	high _motorL
  5421   004568  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5422   00456A  0EBE               	movlw	low _motorR
  5423   00456C  6E1C               	movwf	turnLeft45@mR^0,c
  5424   00456E  0E01               	movlw	high _motorR
  5425   004570  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5426   004572  EC15  F022         	call	_turnLeft45	;wreg free
  5427   004576  0012               	return		;funcret
  5428   004578                     __end_of_LightBlueMove:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _GreenMove *****************
  5432 ;; Defined at:
  5433 ;;		line 240 in file "dc_motor.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5436 ;;		 -> motorL(9), 
  5437 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5438 ;;		 -> motorR(9), 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;		None
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;Total ram usage:        4 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 5
  5457 ;; This function calls:
  5458 ;;		_reverseDetect
  5459 ;;		_turnLeft45
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;;		_go_Home
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text30
  5467   0049C2                     __ptext30:
  5468                           	callstack 0
  5469   0049C2                     _GreenMove:
  5470                           	callstack 24
  5471   0049C2                     
  5472                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  5473   0049C2  0EF5               	movlw	low _motorL
  5474   0049C4  6E1A               	movwf	reverseDetect@mL^0,c
  5475   0049C6  0E00               	movlw	high _motorL
  5476   0049C8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5477   0049CA  0EBE               	movlw	low _motorR
  5478   0049CC  6E1C               	movwf	reverseDetect@mR^0,c
  5479   0049CE  0E01               	movlw	high _motorR
  5480   0049D0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5481   0049D2  ECBC  F021         	call	_reverseDetect	;wreg free
  5482                           
  5483                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  5484   0049D6  0EF5               	movlw	low _motorL
  5485   0049D8  6E1A               	movwf	turnLeft45@mL^0,c
  5486   0049DA  0E00               	movlw	high _motorL
  5487   0049DC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5488   0049DE  0EBE               	movlw	low _motorR
  5489   0049E0  6E1C               	movwf	turnLeft45@mR^0,c
  5490   0049E2  0E01               	movlw	high _motorR
  5491   0049E4  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5492   0049E6  EC15  F022         	call	_turnLeft45	;wreg free
  5493                           
  5494                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  5495   0049EA  0EF5               	movlw	low _motorL
  5496   0049EC  6E1A               	movwf	turnLeft45@mL^0,c
  5497   0049EE  0E00               	movlw	high _motorL
  5498   0049F0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5499   0049F2  0EBE               	movlw	low _motorR
  5500   0049F4  6E1C               	movwf	turnLeft45@mR^0,c
  5501   0049F6  0E01               	movlw	high _motorR
  5502   0049F8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5503   0049FA  EC15  F022         	call	_turnLeft45	;wreg free
  5504   0049FE  0012               	return		;funcret
  5505   004A00                     __end_of_GreenMove:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function _Forwardhalfblock *****************
  5509 ;; Defined at:
  5510 ;;		line 215 in file "dc_motor.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5513 ;;		 -> motorL(9), 
  5514 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5515 ;;		 -> motorR(9), 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5527 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;Total ram usage:        6 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 4
  5534 ;; This function calls:
  5535 ;;		_fullSpeedAhead
  5536 ;;		_stop
  5537 ;; This function is called by:
  5538 ;;		_main
  5539 ;;		_go_Home
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543                           	psect	text31
  5544   0042C4                     __ptext31:
  5545                           	callstack 0
  5546   0042C4                     _Forwardhalfblock:
  5547                           	callstack 25
  5548   0042C4                     
  5549                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  5550   0042C4  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  5551   0042C8  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  5552   0042CC  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  5553   0042D0  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  5554   0042D4  EC73  F01E         	call	_fullSpeedAhead	;wreg free
  5555   0042D8                     
  5556                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5557   0042D8  0E29               	movlw	41
  5558   0042DA  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5559   0042DC  0E96               	movlw	150
  5560   0042DE  6E1E               	movwf	??_Forwardhalfblock^0,c
  5561   0042E0  0E7F               	movlw	127
  5562   0042E2                     u4617:
  5563   0042E2  2EE8               	decfsz	wreg,f,c
  5564   0042E4  D7FE               	bra	u4617
  5565   0042E6  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5566   0042E8  D7FC               	bra	u4617
  5567   0042EA  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5568   0042EC  D7FA               	bra	u4617
  5569   0042EE  F000               	nop	
  5570   0042F0                     
  5571                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  5572   0042F0  0EF5               	movlw	low _motorL
  5573   0042F2  6E14               	movwf	stop@mL^0,c
  5574   0042F4  0E00               	movlw	high _motorL
  5575   0042F6  6E15               	movwf	(stop@mL+1)^0,c
  5576   0042F8  0EBE               	movlw	low _motorR
  5577   0042FA  6E16               	movwf	stop@mR^0,c
  5578   0042FC  0E01               	movlw	high _motorR
  5579   0042FE  6E17               	movwf	(stop@mR+1)^0,c
  5580   004300  ECE5  F01F         	call	_stop	;wreg free
  5581                           
  5582                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5583   004304  0E52               	movlw	82
  5584   004306  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5585   004308  0E2B               	movlw	43
  5586   00430A  6E1E               	movwf	??_Forwardhalfblock^0,c
  5587   00430C  0E00               	movlw	0
  5588   00430E                     u4627:
  5589   00430E  2EE8               	decfsz	wreg,f,c
  5590   004310  D7FE               	bra	u4627
  5591   004312  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5592   004314  D7FC               	bra	u4627
  5593   004316  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5594   004318  D7FA               	bra	u4627
  5595   00431A  D000               	nop2	
  5596   00431C  0012               	return		;funcret
  5597   00431E                     __end_of_Forwardhalfblock:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function _BlueMove *****************
  5601 ;; Defined at:
  5602 ;;		line 248 in file "dc_motor.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5605 ;;		 -> motorL(9), 
  5606 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5607 ;;		 -> motorR(9), 
  5608 ;; Auto vars:     Size  Location     Type
  5609 ;;		None
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  1    wreg      void 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5619 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;Total ram usage:        4 bytes
  5624 ;; Hardware stack levels used: 1
  5625 ;; Hardware stack levels required when called: 5
  5626 ;; This function calls:
  5627 ;;		_reverseDetect
  5628 ;;		_turnRight45
  5629 ;; This function is called by:
  5630 ;;		_main
  5631 ;;		_go_Home
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text32
  5636   0041A6                     __ptext32:
  5637                           	callstack 0
  5638   0041A6                     _BlueMove:
  5639                           	callstack 24
  5640   0041A6                     
  5641                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  5642   0041A6  0EF5               	movlw	low _motorL
  5643   0041A8  6E1A               	movwf	reverseDetect@mL^0,c
  5644   0041AA  0E00               	movlw	high _motorL
  5645   0041AC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5646   0041AE  0EBE               	movlw	low _motorR
  5647   0041B0  6E1C               	movwf	reverseDetect@mR^0,c
  5648   0041B2  0E01               	movlw	high _motorR
  5649   0041B4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5650   0041B6  ECBC  F021         	call	_reverseDetect	;wreg free
  5651                           
  5652                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  5653   0041BA  0EF5               	movlw	low _motorL
  5654   0041BC  6E1A               	movwf	turnRight45@mL^0,c
  5655   0041BE  0E00               	movlw	high _motorL
  5656   0041C0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5657   0041C2  0EBE               	movlw	low _motorR
  5658   0041C4  6E1C               	movwf	turnRight45@mR^0,c
  5659   0041C6  0E01               	movlw	high _motorR
  5660   0041C8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5661   0041CA  ECE9  F021         	call	_turnRight45	;wreg free
  5662                           
  5663                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  5664   0041CE  0EF5               	movlw	low _motorL
  5665   0041D0  6E1A               	movwf	turnRight45@mL^0,c
  5666   0041D2  0E00               	movlw	high _motorL
  5667   0041D4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5668   0041D6  0EBE               	movlw	low _motorR
  5669   0041D8  6E1C               	movwf	turnRight45@mR^0,c
  5670   0041DA  0E01               	movlw	high _motorR
  5671   0041DC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5672   0041DE  ECE9  F021         	call	_turnRight45	;wreg free
  5673                           
  5674                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  5675   0041E2  0EF5               	movlw	low _motorL
  5676   0041E4  6E1A               	movwf	turnRight45@mL^0,c
  5677   0041E6  0E00               	movlw	high _motorL
  5678   0041E8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5679   0041EA  0EBE               	movlw	low _motorR
  5680   0041EC  6E1C               	movwf	turnRight45@mR^0,c
  5681   0041EE  0E01               	movlw	high _motorR
  5682   0041F0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5683   0041F2  ECE9  F021         	call	_turnRight45	;wreg free
  5684                           
  5685                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  5686   0041F6  0EF5               	movlw	low _motorL
  5687   0041F8  6E1A               	movwf	turnRight45@mL^0,c
  5688   0041FA  0E00               	movlw	high _motorL
  5689   0041FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5690   0041FE  0EBE               	movlw	low _motorR
  5691   004200  6E1C               	movwf	turnRight45@mR^0,c
  5692   004202  0E01               	movlw	high _motorR
  5693   004204  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5694   004206  ECE9  F021         	call	_turnRight45	;wreg free
  5695   00420A  0012               	return		;funcret
  5696   00420C                     __end_of_BlueMove:
  5697                           	callstack 0
  5698                           
  5699 ;; *************** function _getTMR0val *****************
  5700 ;; Defined at:
  5701 ;;		line 28 in file "timers.c"
  5702 ;; Parameters:    Size  Location     Type
  5703 ;;		None
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  moving          2    0[COMRAM] int 
  5706 ;;  temp            2    0        unsigned int 
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5717 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5720 ;;Total ram usage:        2 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; Hardware stack levels required when called: 1
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_main
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text33
  5731   004A82                     __ptext33:
  5732                           	callstack 0
  5733   004A82                     _getTMR0val:
  5734                           	callstack 29
  5735   004A82  50D3               	movf	211,w,c	;volatile
  5736   004A84                     
  5737                           ;timers.c: 32:     int moving=TMR0H<<8;
  5738   004A84  50D4               	movf	212,w,c	;volatile
  5739   004A86  6E02               	movwf	(getTMR0val@moving+1)^0,c
  5740   004A88  6A01               	clrf	getTMR0val@moving^0,c
  5741   004A8A                     
  5742                           ;timers.c: 33:     Time_forward[move_count]=moving;
  5743   004A8A  90D8               	bcf	status,0,c
  5744   004A8C  0100               	movlb	0	; () banked
  5745   004A8E  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  5746   004A90  6ED9               	movwf	fsr2l,c
  5747   004A92  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  5748   004A94  6EDA               	movwf	fsr2h,c
  5749   004A96  0E00               	movlw	low _Time_forward
  5750   004A98  26D9               	addwf	fsr2l,f,c
  5751   004A9A  0E02               	movlw	high _Time_forward
  5752   004A9C  22DA               	addwfc	fsr2h,f,c
  5753   004A9E  C001  FFDE         	movff	getTMR0val@moving,postinc2
  5754   004AA2  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  5755   004AA6                     
  5756                           ; BSR set to: 0
  5757   004AA6  0012               	return		;funcret
  5758   004AA8                     __end_of_getTMR0val:
  5759                           	callstack 0
  5760                           
  5761 ;; *************** function _colour_rel *****************
  5762 ;; Defined at:
  5763 ;;		line 114 in file "color.c"
  5764 ;; Parameters:    Size  Location     Type
  5765 ;;  vals            2   49[COMRAM] PTR struct RGB
  5766 ;;		 -> vals(8), 
  5767 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  5768 ;;		 -> rel(12), 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  B               4   73[COMRAM] float 
  5771 ;;  G               4   69[COMRAM] float 
  5772 ;;  R               4   65[COMRAM] float 
  5773 ;;  L               4   53[COMRAM] float 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5783 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;Total ram usage:       28 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 2
  5790 ;; This function calls:
  5791 ;;		___fladd
  5792 ;;		___fldiv
  5793 ;;		___xxtofl
  5794 ;; This function is called by:
  5795 ;;		_main
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text34
  5800   002A9A                     __ptext34:
  5801                           	callstack 0
  5802   002A9A                     _colour_rel:
  5803                           	callstack 28
  5804   002A9A                     
  5805                           ;color.c: 115:     float R = vals->R;
  5806   002A9A  C032  FFD9         	movff	colour_rel@vals,fsr2l
  5807   002A9E  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  5808   002AA2  CFDE F001          	movff	postinc2,___xxtofl@val
  5809   002AA6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5810   002AAA  0E00               	movlw	0
  5811   002AAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5812   002AAE  0EFF               	movlw	-1
  5813   002AB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5814   002AB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5815   002AB4  0E01               	movlw	1
  5816   002AB6  EC3A  F019         	call	___xxtofl
  5817   002ABA  C001  F042         	movff	?___xxtofl,colour_rel@R
  5818   002ABE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  5819   002AC2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  5820   002AC6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  5821                           
  5822                           ;color.c: 116:     float G = vals->G;
  5823   002ACA  EE20 F002          	lfsr	2,2
  5824   002ACE  5032               	movf	colour_rel@vals^0,w,c
  5825   002AD0  26D9               	addwf	fsr2l,f,c
  5826   002AD2  5033               	movf	(colour_rel@vals+1)^0,w,c
  5827   002AD4  22DA               	addwfc	fsr2h,f,c
  5828   002AD6  CFDE F001          	movff	postinc2,___xxtofl@val
  5829   002ADA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5830   002ADE  0E00               	movlw	0
  5831   002AE0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5832   002AE2  0EFF               	movlw	-1
  5833   002AE4  6E03               	movwf	(___xxtofl@val+2)^0,c
  5834   002AE6  6E04               	movwf	(___xxtofl@val+3)^0,c
  5835   002AE8  0E01               	movlw	1
  5836   002AEA  EC3A  F019         	call	___xxtofl
  5837   002AEE  C001  F046         	movff	?___xxtofl,colour_rel@G
  5838   002AF2  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  5839   002AF6  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  5840   002AFA  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  5841                           
  5842                           ;color.c: 117:     float B = vals->B;
  5843   002AFE  EE20 F004          	lfsr	2,4
  5844   002B02  5032               	movf	colour_rel@vals^0,w,c
  5845   002B04  26D9               	addwf	fsr2l,f,c
  5846   002B06  5033               	movf	(colour_rel@vals+1)^0,w,c
  5847   002B08  22DA               	addwfc	fsr2h,f,c
  5848   002B0A  CFDE F001          	movff	postinc2,___xxtofl@val
  5849   002B0E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5850   002B12  0E00               	movlw	0
  5851   002B14  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5852   002B16  0EFF               	movlw	-1
  5853   002B18  6E03               	movwf	(___xxtofl@val+2)^0,c
  5854   002B1A  6E04               	movwf	(___xxtofl@val+3)^0,c
  5855   002B1C  0E01               	movlw	1
  5856   002B1E  EC3A  F019         	call	___xxtofl
  5857   002B22  C001  F04A         	movff	?___xxtofl,colour_rel@B
  5858   002B26  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  5859   002B2A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  5860   002B2E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  5861                           
  5862                           ;color.c: 118:     float L = vals->L;
  5863   002B32  EE20 F006          	lfsr	2,6
  5864   002B36  5032               	movf	colour_rel@vals^0,w,c
  5865   002B38  26D9               	addwf	fsr2l,f,c
  5866   002B3A  5033               	movf	(colour_rel@vals+1)^0,w,c
  5867   002B3C  22DA               	addwfc	fsr2h,f,c
  5868   002B3E  CFDE F001          	movff	postinc2,___xxtofl@val
  5869   002B42  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5870   002B46  0E00               	movlw	0
  5871   002B48  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5872   002B4A  0EFF               	movlw	-1
  5873   002B4C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5874   002B4E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5875   002B50  0E01               	movlw	1
  5876   002B52  EC3A  F019         	call	___xxtofl
  5877   002B56  C001  F036         	movff	?___xxtofl,colour_rel@L
  5878   002B5A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  5879   002B5E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  5880   002B62  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  5881   002B66                     
  5882                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5883   002B66  C046  F005         	movff	colour_rel@G,___fladd@a
  5884   002B6A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5885   002B6E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5886   002B72  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5887   002B76  C042  F001         	movff	colour_rel@R,___fladd@b
  5888   002B7A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5889   002B7E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5890   002B82  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5891   002B86  EC0B  F00F         	call	___fladd	;wreg free
  5892   002B8A  C001  F03A         	movff	?___fladd,_colour_rel$2806
  5893   002B8E  C002  F03B         	movff	?___fladd+1,_colour_rel$2806+1
  5894   002B92  C003  F03C         	movff	?___fladd+2,_colour_rel$2806+2
  5895   002B96  C004  F03D         	movff	?___fladd+3,_colour_rel$2806+3
  5896   002B9A                     
  5897                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5898   002B9A  C04A  F005         	movff	colour_rel@B,___fladd@a
  5899   002B9E  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5900   002BA2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5901   002BA6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5902   002BAA  C03A  F001         	movff	_colour_rel$2806,___fladd@b
  5903   002BAE  C03B  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  5904   002BB2  C03C  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  5905   002BB6  C03D  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  5906   002BBA  EC0B  F00F         	call	___fladd	;wreg free
  5907   002BBE  C001  F03E         	movff	?___fladd,_colour_rel$2807
  5908   002BC2  C002  F03F         	movff	?___fladd+1,_colour_rel$2807+1
  5909   002BC6  C003  F040         	movff	?___fladd+2,_colour_rel$2807+2
  5910   002BCA  C004  F041         	movff	?___fladd+3,_colour_rel$2807+3
  5911                           
  5912                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5913   002BCE  C042  F019         	movff	colour_rel@R,___fldiv@b
  5914   002BD2  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  5915   002BD6  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  5916   002BDA  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  5917   002BDE  C036  F005         	movff	colour_rel@L,___fladd@a
  5918   002BE2  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5919   002BE6  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5920   002BEA  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5921   002BEE  C03E  F001         	movff	_colour_rel$2807,___fladd@b
  5922   002BF2  C03F  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  5923   002BF6  C040  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  5924   002BFA  C041  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  5925   002BFE  EC0B  F00F         	call	___fladd	;wreg free
  5926   002C02  C001  F01D         	movff	?___fladd,___fldiv@a
  5927   002C06  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5928   002C0A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5929   002C0E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5930   002C12  EC80  F013         	call	___fldiv	;wreg free
  5931   002C16  C034  FFD9         	movff	colour_rel@rel,fsr2l
  5932   002C1A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  5933   002C1E  C019  FFDE         	movff	?___fldiv,postinc2
  5934   002C22  C01A  FFDE         	movff	?___fldiv+1,postinc2
  5935   002C26  C01B  FFDE         	movff	?___fldiv+2,postinc2
  5936   002C2A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  5937   002C2E                     
  5938                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5939   002C2E  C046  F005         	movff	colour_rel@G,___fladd@a
  5940   002C32  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5941   002C36  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5942   002C3A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5943   002C3E  C042  F001         	movff	colour_rel@R,___fladd@b
  5944   002C42  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5945   002C46  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5946   002C4A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5947   002C4E  EC0B  F00F         	call	___fladd	;wreg free
  5948   002C52  C001  F03A         	movff	?___fladd,_colour_rel$2806
  5949   002C56  C002  F03B         	movff	?___fladd+1,_colour_rel$2806+1
  5950   002C5A  C003  F03C         	movff	?___fladd+2,_colour_rel$2806+2
  5951   002C5E  C004  F03D         	movff	?___fladd+3,_colour_rel$2806+3
  5952   002C62                     
  5953                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5954   002C62  C04A  F005         	movff	colour_rel@B,___fladd@a
  5955   002C66  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5956   002C6A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5957   002C6E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5958   002C72  C03A  F001         	movff	_colour_rel$2806,___fladd@b
  5959   002C76  C03B  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  5960   002C7A  C03C  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  5961   002C7E  C03D  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  5962   002C82  EC0B  F00F         	call	___fladd	;wreg free
  5963   002C86  C001  F03E         	movff	?___fladd,_colour_rel$2807
  5964   002C8A  C002  F03F         	movff	?___fladd+1,_colour_rel$2807+1
  5965   002C8E  C003  F040         	movff	?___fladd+2,_colour_rel$2807+2
  5966   002C92  C004  F041         	movff	?___fladd+3,_colour_rel$2807+3
  5967                           
  5968                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5969   002C96  C04A  F019         	movff	colour_rel@B,___fldiv@b
  5970   002C9A  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  5971   002C9E  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  5972   002CA2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  5973   002CA6  C036  F005         	movff	colour_rel@L,___fladd@a
  5974   002CAA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5975   002CAE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5976   002CB2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5977   002CB6  C03E  F001         	movff	_colour_rel$2807,___fladd@b
  5978   002CBA  C03F  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  5979   002CBE  C040  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  5980   002CC2  C041  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  5981   002CC6  EC0B  F00F         	call	___fladd	;wreg free
  5982   002CCA  C001  F01D         	movff	?___fladd,___fldiv@a
  5983   002CCE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5984   002CD2  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5985   002CD6  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5986   002CDA  EC80  F013         	call	___fldiv	;wreg free
  5987   002CDE  EE20 F008          	lfsr	2,8
  5988   002CE2  5034               	movf	colour_rel@rel^0,w,c
  5989   002CE4  26D9               	addwf	fsr2l,f,c
  5990   002CE6  5035               	movf	(colour_rel@rel+1)^0,w,c
  5991   002CE8  22DA               	addwfc	fsr2h,f,c
  5992   002CEA  C019  FFDE         	movff	?___fldiv,postinc2
  5993   002CEE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  5994   002CF2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  5995   002CF6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  5996   002CFA                     
  5997                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  5998   002CFA  C046  F005         	movff	colour_rel@G,___fladd@a
  5999   002CFE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6000   002D02  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6001   002D06  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6002   002D0A  C042  F001         	movff	colour_rel@R,___fladd@b
  6003   002D0E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6004   002D12  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6005   002D16  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6006   002D1A  EC0B  F00F         	call	___fladd	;wreg free
  6007   002D1E  C001  F03A         	movff	?___fladd,_colour_rel$2806
  6008   002D22  C002  F03B         	movff	?___fladd+1,_colour_rel$2806+1
  6009   002D26  C003  F03C         	movff	?___fladd+2,_colour_rel$2806+2
  6010   002D2A  C004  F03D         	movff	?___fladd+3,_colour_rel$2806+3
  6011   002D2E                     
  6012                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6013   002D2E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6014   002D32  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6015   002D36  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6016   002D3A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6017   002D3E  C03A  F001         	movff	_colour_rel$2806,___fladd@b
  6018   002D42  C03B  F002         	movff	_colour_rel$2806+1,___fladd@b+1
  6019   002D46  C03C  F003         	movff	_colour_rel$2806+2,___fladd@b+2
  6020   002D4A  C03D  F004         	movff	_colour_rel$2806+3,___fladd@b+3
  6021   002D4E  EC0B  F00F         	call	___fladd	;wreg free
  6022   002D52  C001  F03E         	movff	?___fladd,_colour_rel$2807
  6023   002D56  C002  F03F         	movff	?___fladd+1,_colour_rel$2807+1
  6024   002D5A  C003  F040         	movff	?___fladd+2,_colour_rel$2807+2
  6025   002D5E  C004  F041         	movff	?___fladd+3,_colour_rel$2807+3
  6026                           
  6027                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6028   002D62  C046  F019         	movff	colour_rel@G,___fldiv@b
  6029   002D66  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6030   002D6A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6031   002D6E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6032   002D72  C036  F005         	movff	colour_rel@L,___fladd@a
  6033   002D76  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6034   002D7A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6035   002D7E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6036   002D82  C03E  F001         	movff	_colour_rel$2807,___fladd@b
  6037   002D86  C03F  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  6038   002D8A  C040  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  6039   002D8E  C041  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  6040   002D92  EC0B  F00F         	call	___fladd	;wreg free
  6041   002D96  C001  F01D         	movff	?___fladd,___fldiv@a
  6042   002D9A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6043   002D9E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6044   002DA2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6045   002DA6  EC80  F013         	call	___fldiv	;wreg free
  6046   002DAA  EE20 F004          	lfsr	2,4
  6047   002DAE  5034               	movf	colour_rel@rel^0,w,c
  6048   002DB0  26D9               	addwf	fsr2l,f,c
  6049   002DB2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6050   002DB4  22DA               	addwfc	fsr2h,f,c
  6051   002DB6  C019  FFDE         	movff	?___fldiv,postinc2
  6052   002DBA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6053   002DBE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6054   002DC2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6055   002DC6  0012               	return		;funcret
  6056   002DC8                     __end_of_colour_rel:
  6057                           	callstack 0
  6058                           
  6059 ;; *************** function _color_click_init *****************
  6060 ;; Defined at:
  6061 ;;		line 7 in file "color.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;Total ram usage:        1 bytes
  6080 ;; Hardware stack levels used: 1
  6081 ;; Hardware stack levels required when called: 4
  6082 ;; This function calls:
  6083 ;;		_I2C_2_Master_Init
  6084 ;;		_color_writetoaddr
  6085 ;; This function is called by:
  6086 ;;		_main
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           	psect	text35
  6091   004578                     __ptext35:
  6092                           	callstack 0
  6093   004578                     _color_click_init:
  6094                           	callstack 26
  6095   004578                     
  6096                           ;color.c: 10:     I2C_2_Master_Init();
  6097   004578  EC18  F025         	call	_I2C_2_Master_Init	;wreg free
  6098   00457C                     
  6099                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6100   00457C  0E01               	movlw	1
  6101   00457E  6E03               	movwf	color_writetoaddr@value^0,c
  6102   004580  0E00               	movlw	0
  6103   004582  EC67  F025         	call	_color_writetoaddr
  6104   004586                     
  6105                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6106   004586  0E3F               	movlw	63
  6107   004588  6E05               	movwf	??_color_click_init^0,c
  6108   00458A  0E55               	movlw	85
  6109   00458C                     u4637:
  6110   00458C  2EE8               	decfsz	wreg,f,c
  6111   00458E  D7FE               	bra	u4637
  6112   004590  2E05               	decfsz	??_color_click_init^0,f,c
  6113   004592  D7FC               	bra	u4637
  6114   004594  F000               	nop	
  6115   004596                     
  6116                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6117   004596  0E03               	movlw	3
  6118   004598  6E03               	movwf	color_writetoaddr@value^0,c
  6119   00459A  0E00               	movlw	0
  6120   00459C  EC67  F025         	call	_color_writetoaddr
  6121   0045A0                     
  6122                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6123   0045A0  0ED5               	movlw	213
  6124   0045A2  6E03               	movwf	color_writetoaddr@value^0,c
  6125   0045A4  0E01               	movlw	1
  6126   0045A6  EC67  F025         	call	_color_writetoaddr
  6127   0045AA                     
  6128                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6129   0045AA  0E00               	movlw	0
  6130   0045AC  6E03               	movwf	color_writetoaddr@value^0,c
  6131   0045AE  0E0F               	movlw	15
  6132   0045B0  EC67  F025         	call	_color_writetoaddr
  6133   0045B4                     
  6134                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6135   0045B4  9287               	bcf	135,1,c	;volatile
  6136   0045B6                     
  6137                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6138   0045B6  9881               	bcf	129,4,c	;volatile
  6139   0045B8                     
  6140                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6141   0045B8  9E86               	bcf	134,7,c	;volatile
  6142   0045BA                     
  6143                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6144   0045BA  9684               	bcf	132,3,c	;volatile
  6145   0045BC                     
  6146                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6147   0045BC  9884               	bcf	132,4,c	;volatile
  6148   0045BE                     
  6149                           ;color.c: 28:     LATGbits.LATG1=0;
  6150   0045BE  927F               	bcf	127,1,c	;volatile
  6151   0045C0                     
  6152                           ;color.c: 29:     LATFbits.LATF7=0;
  6153   0045C0  9E7E               	bcf	126,7,c	;volatile
  6154   0045C2                     
  6155                           ;color.c: 30:     LATAbits.LATA4=0;
  6156   0045C2  9879               	bcf	121,4,c	;volatile
  6157   0045C4                     
  6158                           ;color.c: 32:     LATDbits.LATD3=0;
  6159   0045C4  967C               	bcf	124,3,c	;volatile
  6160   0045C6                     
  6161                           ;color.c: 33:     LATDbits.LATD4=0;
  6162   0045C6  987C               	bcf	124,4,c	;volatile
  6163   0045C8  0012               	return		;funcret
  6164   0045CA                     __end_of_color_click_init:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _color_writetoaddr *****************
  6168 ;; Defined at:
  6169 ;;		line 41 in file "color.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  address         1    wreg     unsigned char 
  6172 ;;  value           1    2[COMRAM] unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  address         1    3[COMRAM] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6184 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6187 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6188 ;;Total ram usage:        2 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 3
  6191 ;; This function calls:
  6192 ;;		_I2C_2_Master_Start
  6193 ;;		_I2C_2_Master_Stop
  6194 ;;		_I2C_2_Master_Write
  6195 ;; This function is called by:
  6196 ;;		_color_click_init
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           	psect	text36
  6201   004ACE                     __ptext36:
  6202                           	callstack 0
  6203   004ACE                     _color_writetoaddr:
  6204                           	callstack 26
  6205                           
  6206                           ;incstack = 0
  6207                           ;color_writetoaddr@address stored from wreg
  6208   004ACE  6E04               	movwf	color_writetoaddr@address^0,c
  6209   004AD0                     
  6210                           ;color.c: 42:     I2C_2_Master_Start();
  6211   004AD0  ECB2  F025         	call	_I2C_2_Master_Start	;wreg free
  6212                           
  6213                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6214   004AD4  0E52               	movlw	82
  6215   004AD6  ECA2  F025         	call	_I2C_2_Master_Write
  6216                           
  6217                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6218   004ADA  5004               	movf	color_writetoaddr@address^0,w,c
  6219   004ADC  0980               	iorlw	128
  6220   004ADE  ECA2  F025         	call	_I2C_2_Master_Write
  6221                           
  6222                           ;color.c: 45:     I2C_2_Master_Write(value);
  6223   004AE2  5003               	movf	color_writetoaddr@value^0,w,c
  6224   004AE4  ECA2  F025         	call	_I2C_2_Master_Write
  6225                           
  6226                           ;color.c: 46:     I2C_2_Master_Stop();
  6227   004AE8  ECAD  F025         	call	_I2C_2_Master_Stop	;wreg free
  6228   004AEC  0012               	return		;funcret
  6229   004AEE                     __end_of_color_writetoaddr:
  6230                           	callstack 0
  6231                           
  6232 ;; *************** function _I2C_2_Master_Write *****************
  6233 ;; Defined at:
  6234 ;;		line 45 in file "i2c.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;  data_byte       1    wreg     unsigned char 
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;  data_byte       1    1[COMRAM] unsigned char 
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1    wreg      void 
  6241 ;; Registers used:
  6242 ;;		wreg, status,2, status,0, cstack
  6243 ;; Tracked objects:
  6244 ;;		On entry : 0/0
  6245 ;;		On exit  : 0/0
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;Total ram usage:        1 bytes
  6253 ;; Hardware stack levels used: 1
  6254 ;; Hardware stack levels required when called: 2
  6255 ;; This function calls:
  6256 ;;		_I2C_2_Master_Idle
  6257 ;; This function is called by:
  6258 ;;		_color_writetoaddr
  6259 ;;		_color_read_lum
  6260 ;;		_color_read_Red
  6261 ;;		_color_read_Green
  6262 ;;		_color_read_Blue
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text37
  6267   004B44                     __ptext37:
  6268                           	callstack 0
  6269   004B44                     _I2C_2_Master_Write:
  6270                           	callstack 26
  6271                           
  6272                           ;incstack = 0
  6273                           ;I2C_2_Master_Write@data_byte stored from wreg
  6274   004B44  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6275   004B46                     
  6276                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6277   004B46  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  6278   004B4A                     
  6279                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6280   004B4A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6281   004B4E  0012               	return		;funcret
  6282   004B50                     __end_of_I2C_2_Master_Write:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _I2C_2_Master_Stop *****************
  6286 ;; Defined at:
  6287 ;;		line 39 in file "i2c.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;Total ram usage:        0 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 2
  6308 ;; This function calls:
  6309 ;;		_I2C_2_Master_Idle
  6310 ;; This function is called by:
  6311 ;;		_color_writetoaddr
  6312 ;;		_color_read_lum
  6313 ;;		_color_read_Red
  6314 ;;		_color_read_Green
  6315 ;;		_color_read_Blue
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text38
  6320   004B5A                     __ptext38:
  6321                           	callstack 0
  6322   004B5A                     _I2C_2_Master_Stop:
  6323                           	callstack 26
  6324   004B5A                     
  6325                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6326   004B5A  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  6327   004B5E                     
  6328                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6329   004B5E  010E               	movlb	14	; () banked
  6330   004B60  85DA               	bsf	218,2,b	;volatile
  6331   004B62                     
  6332                           ; BSR set to: 14
  6333   004B62  0012               	return		;funcret
  6334   004B64                     __end_of_I2C_2_Master_Stop:
  6335                           	callstack 0
  6336                           
  6337 ;; *************** function _I2C_2_Master_Start *****************
  6338 ;; Defined at:
  6339 ;;		line 27 in file "i2c.c"
  6340 ;; Parameters:    Size  Location     Type
  6341 ;;		None
  6342 ;; Auto vars:     Size  Location     Type
  6343 ;;		None
  6344 ;; Return value:  Size  Location     Type
  6345 ;;                  1    wreg      void 
  6346 ;; Registers used:
  6347 ;;		wreg, status,2, status,0, cstack
  6348 ;; Tracked objects:
  6349 ;;		On entry : 0/0
  6350 ;;		On exit  : 0/0
  6351 ;;		Unchanged: 0/0
  6352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;Total ram usage:        0 bytes
  6358 ;; Hardware stack levels used: 1
  6359 ;; Hardware stack levels required when called: 2
  6360 ;; This function calls:
  6361 ;;		_I2C_2_Master_Idle
  6362 ;; This function is called by:
  6363 ;;		_color_writetoaddr
  6364 ;;		_color_read_lum
  6365 ;;		_color_read_Red
  6366 ;;		_color_read_Green
  6367 ;;		_color_read_Blue
  6368 ;; This function uses a non-reentrant model
  6369 ;;
  6370                           
  6371                           	psect	text39
  6372   004B64                     __ptext39:
  6373                           	callstack 0
  6374   004B64                     _I2C_2_Master_Start:
  6375                           	callstack 26
  6376   004B64                     
  6377                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6378   004B64  EC2D  F025         	call	_I2C_2_Master_Idle	;wreg free
  6379   004B68                     
  6380                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6381   004B68  010E               	movlb	14	; () banked
  6382   004B6A  81DA               	bsf	218,0,b	;volatile
  6383   004B6C                     
  6384                           ; BSR set to: 14
  6385   004B6C  0012               	return		;funcret
  6386   004B6E                     __end_of_I2C_2_Master_Start:
  6387                           	callstack 0
  6388                           
  6389 ;; *************** function _I2C_2_Master_Idle *****************
  6390 ;; Defined at:
  6391 ;;		line 22 in file "i2c.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;		None
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;                  1    wreg      void 
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6407 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6409 ;;Total ram usage:        1 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; Hardware stack levels required when called: 1
  6412 ;; This function calls:
  6413 ;;		Nothing
  6414 ;; This function is called by:
  6415 ;;		_I2C_2_Master_Start
  6416 ;;		_I2C_2_Master_RepStart
  6417 ;;		_I2C_2_Master_Stop
  6418 ;;		_I2C_2_Master_Write
  6419 ;;		_I2C_2_Master_Read
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text40
  6424   004A5A                     __ptext40:
  6425                           	callstack 0
  6426   004A5A                     _I2C_2_Master_Idle:
  6427                           	callstack 26
  6428   004A5A                     l141:
  6429   004A5A  010E               	movlb	14	; () banked
  6430   004A5C  B5D8               	btfsc	216,2,b	;volatile
  6431   004A5E  EF33  F025         	goto	u2551
  6432   004A62  EF35  F025         	goto	u2550
  6433   004A66                     u2551:
  6434   004A66  EF2D  F025         	goto	l141
  6435   004A6A                     u2550:
  6436   004A6A                     
  6437                           ; BSR set to: 14
  6438   004A6A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6439   004A6E  0E1F               	movlw	31
  6440   004A70  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6441   004A72  A4D8               	btfss	status,2,c
  6442   004A74  EF3E  F025         	goto	u2561
  6443   004A78  EF40  F025         	goto	u2560
  6444   004A7C                     u2561:
  6445   004A7C  EF2D  F025         	goto	l141
  6446   004A80                     u2560:
  6447   004A80                     
  6448                           ; BSR set to: 14
  6449   004A80  0012               	return		;funcret
  6450   004A82                     __end_of_I2C_2_Master_Idle:
  6451                           	callstack 0
  6452                           
  6453 ;; *************** function _I2C_2_Master_Init *****************
  6454 ;; Defined at:
  6455 ;;		line 4 in file "i2c.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;		None
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;		None
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  1    wreg      void 
  6462 ;; Registers used:
  6463 ;;		wreg, status,2
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;Total ram usage:        0 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 1
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_color_click_init
  6480 ;;		_main
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           	psect	text41
  6485   004A30                     __ptext41:
  6486                           	callstack 0
  6487   004A30                     _I2C_2_Master_Init:
  6488                           	callstack 28
  6489   004A30                     
  6490                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6491   004A30  010E               	movlb	14	; () banked
  6492   004A32  51D9               	movf	217,w,b	;volatile
  6493   004A34  0BF0               	andlw	-16
  6494   004A36  0908               	iorlw	8
  6495   004A38  6FD9               	movwf	217,b	;volatile
  6496   004A3A                     
  6497                           ; BSR set to: 14
  6498                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6499   004A3A  8BD9               	bsf	217,5,b	;volatile
  6500                           
  6501                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6502   004A3C  0E9F               	movlw	159
  6503   004A3E  6FD6               	movwf	214,b	;volatile
  6504   004A40                     
  6505                           ; BSR set to: 14
  6506                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6507   004A40  8A84               	bsf	132,5,c	;volatile
  6508   004A42                     
  6509                           ; BSR set to: 14
  6510                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6511   004A42  8C84               	bsf	132,6,c	;volatile
  6512   004A44                     
  6513                           ; BSR set to: 14
  6514                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6515   004A44  9BA7               	bcf	167,5,b	;volatile
  6516   004A46                     
  6517                           ; BSR set to: 14
  6518                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6519   004A46  9DA7               	bcf	167,6,b	;volatile
  6520                           
  6521                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6522   004A48  0E1D               	movlw	29
  6523   004A4A  6F1D               	movwf	29,b	;volatile
  6524                           
  6525                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6526   004A4C  0E1E               	movlw	30
  6527   004A4E  6F1C               	movwf	28,b	;volatile
  6528                           
  6529                           ;i2c.c: 18:   RD5PPS=0x1C;
  6530   004A50  0E1C               	movlw	28
  6531   004A52  6F6F               	movwf	111,b	;volatile
  6532                           
  6533                           ;i2c.c: 19:   RD6PPS=0x1B;
  6534   004A54  0E1B               	movlw	27
  6535   004A56  6F70               	movwf	112,b	;volatile
  6536   004A58                     
  6537                           ; BSR set to: 14
  6538   004A58  0012               	return		;funcret
  6539   004A5A                     __end_of_I2C_2_Master_Init:
  6540                           	callstack 0
  6541                           
  6542 ;; *************** function _YellowMove *****************
  6543 ;; Defined at:
  6544 ;;		line 258 in file "dc_motor.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6547 ;;		 -> motorL(9), 
  6548 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6549 ;;		 -> motorR(9), 
  6550 ;; Auto vars:     Size  Location     Type
  6551 ;;		None
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  1    wreg      void 
  6554 ;; Registers used:
  6555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6565 ;;Total ram usage:        4 bytes
  6566 ;; Hardware stack levels used: 1
  6567 ;; Hardware stack levels required when called: 5
  6568 ;; This function calls:
  6569 ;;		_reverseDetect
  6570 ;;		_reverseOneBlock
  6571 ;;		_turnRight45
  6572 ;; This function is called by:
  6573 ;;		_main
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text42
  6578   0045CA                     __ptext42:
  6579                           	callstack 0
  6580   0045CA                     _YellowMove:
  6581                           	callstack 25
  6582   0045CA                     
  6583                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  6584   0045CA  0EF5               	movlw	low _motorL
  6585   0045CC  6E1A               	movwf	reverseDetect@mL^0,c
  6586   0045CE  0E00               	movlw	high _motorL
  6587   0045D0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6588   0045D2  0EBE               	movlw	low _motorR
  6589   0045D4  6E1C               	movwf	reverseDetect@mR^0,c
  6590   0045D6  0E01               	movlw	high _motorR
  6591   0045D8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6592   0045DA  ECBC  F021         	call	_reverseDetect	;wreg free
  6593                           
  6594                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  6595   0045DE  0EF5               	movlw	low _motorL
  6596   0045E0  6E1A               	movwf	reverseOneBlock@mL^0,c
  6597   0045E2  0E00               	movlw	high _motorL
  6598   0045E4  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6599   0045E6  0EBE               	movlw	low _motorR
  6600   0045E8  6E1C               	movwf	reverseOneBlock@mR^0,c
  6601   0045EA  0E01               	movlw	high _motorR
  6602   0045EC  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6603   0045EE  EC8F  F021         	call	_reverseOneBlock	;wreg free
  6604                           
  6605                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  6606   0045F2  0EF5               	movlw	low _motorL
  6607   0045F4  6E1A               	movwf	turnRight45@mL^0,c
  6608   0045F6  0E00               	movlw	high _motorL
  6609   0045F8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6610   0045FA  0EBE               	movlw	low _motorR
  6611   0045FC  6E1C               	movwf	turnRight45@mR^0,c
  6612   0045FE  0E01               	movlw	high _motorR
  6613   004600  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6614   004602  ECE9  F021         	call	_turnRight45	;wreg free
  6615                           
  6616                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  6617   004606  0EF5               	movlw	low _motorL
  6618   004608  6E1A               	movwf	turnRight45@mL^0,c
  6619   00460A  0E00               	movlw	high _motorL
  6620   00460C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6621   00460E  0EBE               	movlw	low _motorR
  6622   004610  6E1C               	movwf	turnRight45@mR^0,c
  6623   004612  0E01               	movlw	high _motorR
  6624   004614  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6625   004616  ECE9  F021         	call	_turnRight45	;wreg free
  6626   00461A  0012               	return		;funcret
  6627   00461C                     __end_of_YellowMove:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function _turnRight45 *****************
  6631 ;; Defined at:
  6632 ;;		line 181 in file "dc_motor.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6635 ;;		 -> motorL(9), 
  6636 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6637 ;;		 -> motorR(9), 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;		None
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6649 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;Total ram usage:        6 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; Hardware stack levels required when called: 4
  6656 ;; This function calls:
  6657 ;;		_stop
  6658 ;;		_turnRight
  6659 ;; This function is called by:
  6660 ;;		_RedMove
  6661 ;;		_BlueMove
  6662 ;;		_YellowMove
  6663 ;;		_OrangeMove
  6664 ;;		_ReversePink
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text43
  6669   0043D2                     __ptext43:
  6670                           	callstack 0
  6671   0043D2                     _turnRight45:
  6672                           	callstack 24
  6673   0043D2                     
  6674                           ;dc_motor.c: 182:     turnRight(mL,mR);
  6675   0043D2  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6676   0043D6  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6677   0043DA  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6678   0043DE  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6679   0043E2  EC24  F01E         	call	_turnRight	;wreg free
  6680   0043E6                     
  6681                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6682   0043E6  0E12               	movlw	18
  6683   0043E8  6E1F               	movwf	(??_turnRight45+1)^0,c
  6684   0043EA  0EDC               	movlw	220
  6685   0043EC  6E1E               	movwf	??_turnRight45^0,c
  6686   0043EE  0E60               	movlw	96
  6687   0043F0                     u4647:
  6688   0043F0  2EE8               	decfsz	wreg,f,c
  6689   0043F2  D7FE               	bra	u4647
  6690   0043F4  2E1E               	decfsz	??_turnRight45^0,f,c
  6691   0043F6  D7FC               	bra	u4647
  6692   0043F8  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6693   0043FA  D7FA               	bra	u4647
  6694   0043FC                     
  6695                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  6696   0043FC  0EF5               	movlw	low _motorL
  6697   0043FE  6E14               	movwf	stop@mL^0,c
  6698   004400  0E00               	movlw	high _motorL
  6699   004402  6E15               	movwf	(stop@mL+1)^0,c
  6700   004404  0EBE               	movlw	low _motorR
  6701   004406  6E16               	movwf	stop@mR^0,c
  6702   004408  0E01               	movlw	high _motorR
  6703   00440A  6E17               	movwf	(stop@mR+1)^0,c
  6704   00440C  ECE5  F01F         	call	_stop	;wreg free
  6705                           
  6706                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6707   004410  0E52               	movlw	82
  6708   004412  6E1F               	movwf	(??_turnRight45+1)^0,c
  6709   004414  0E2B               	movlw	43
  6710   004416  6E1E               	movwf	??_turnRight45^0,c
  6711   004418  0E00               	movlw	0
  6712   00441A                     u4657:
  6713   00441A  2EE8               	decfsz	wreg,f,c
  6714   00441C  D7FE               	bra	u4657
  6715   00441E  2E1E               	decfsz	??_turnRight45^0,f,c
  6716   004420  D7FC               	bra	u4657
  6717   004422  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6718   004424  D7FA               	bra	u4657
  6719   004426  D000               	nop2	
  6720   004428  0012               	return		;funcret
  6721   00442A                     __end_of_turnRight45:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _turnRight *****************
  6725 ;; Defined at:
  6726 ;;		line 128 in file "dc_motor.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6729 ;;		 -> motorL(9), 
  6730 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6731 ;;		 -> motorR(9), 
  6732 ;; Auto vars:     Size  Location     Type
  6733 ;;		None
  6734 ;; Return value:  Size  Location     Type
  6735 ;;                  1    wreg      void 
  6736 ;; Registers used:
  6737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6738 ;; Tracked objects:
  6739 ;;		On entry : 0/0
  6740 ;;		On exit  : 0/0
  6741 ;;		Unchanged: 0/0
  6742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6743 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6746 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6747 ;;Total ram usage:        6 bytes
  6748 ;; Hardware stack levels used: 1
  6749 ;; Hardware stack levels required when called: 3
  6750 ;; This function calls:
  6751 ;;		_setMotorPWM
  6752 ;; This function is called by:
  6753 ;;		_turnRight45
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text44
  6758   003C48                     __ptext44:
  6759                           	callstack 0
  6760   003C48                     _turnRight:
  6761                           	callstack 24
  6762   003C48                     
  6763                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6764   003C48  EE20 F001          	lfsr	2,1
  6765   003C4C  5014               	movf	turnRight@mL^0,w,c
  6766   003C4E  26D9               	addwf	fsr2l,f,c
  6767   003C50  5015               	movf	(turnRight@mL+1)^0,w,c
  6768   003C52  22DA               	addwfc	fsr2h,f,c
  6769   003C54  0E01               	movlw	1
  6770   003C56  6EDF               	movwf	indf2,c
  6771                           
  6772                           ;dc_motor.c: 131:     mR->direction =0;
  6773   003C58  EE20 F001          	lfsr	2,1
  6774   003C5C  5016               	movf	turnRight@mR^0,w,c
  6775   003C5E  26D9               	addwf	fsr2l,f,c
  6776   003C60  5017               	movf	(turnRight@mR+1)^0,w,c
  6777   003C62  22DA               	addwfc	fsr2h,f,c
  6778   003C64  0E00               	movlw	0
  6779   003C66  6EDF               	movwf	indf2,c
  6780                           
  6781                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  6782   003C68  EF5A  F01E         	goto	l3341
  6783   003C6C                     l3333:
  6784                           
  6785                           ;dc_motor.c: 135:         mL->power+=10;
  6786   003C6C  C014  FFD9         	movff	turnRight@mL,fsr2l
  6787   003C70  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6788   003C74  0E0A               	movlw	10
  6789   003C76  26DF               	addwf	indf2,f,c
  6790                           
  6791                           ;dc_motor.c: 136:         mR->power+=10;
  6792   003C78  C016  FFD9         	movff	turnRight@mR,fsr2l
  6793   003C7C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6794   003C80  0E0A               	movlw	10
  6795   003C82  26DF               	addwf	indf2,f,c
  6796   003C84                     
  6797                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6798   003C84  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6799   003C88  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6800   003C8C  ECD8  F01A         	call	_setMotorPWM	;wreg free
  6801   003C90                     
  6802                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6803   003C90  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6804   003C94  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6805   003C98  ECD8  F01A         	call	_setMotorPWM	;wreg free
  6806   003C9C                     
  6807                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6808   003C9C  0E02               	movlw	2
  6809   003C9E  6E19               	movwf	(??_turnRight+1)^0,c
  6810   003CA0  0EA0               	movlw	160
  6811   003CA2  6E18               	movwf	??_turnRight^0,c
  6812   003CA4  0E92               	movlw	146
  6813   003CA6                     u4667:
  6814   003CA6  2EE8               	decfsz	wreg,f,c
  6815   003CA8  D7FE               	bra	u4667
  6816   003CAA  2E18               	decfsz	??_turnRight^0,f,c
  6817   003CAC  D7FC               	bra	u4667
  6818   003CAE  2E19               	decfsz	(??_turnRight+1)^0,f,c
  6819   003CB0  D7FA               	bra	u4667
  6820   003CB2  D000               	nop2	
  6821   003CB4                     l3341:
  6822   003CB4  C014  FFD9         	movff	turnRight@mL,fsr2l
  6823   003CB8  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6824   003CBC  0E1E               	movlw	30
  6825   003CBE  60DF               	cpfslt	indf2,c
  6826   003CC0  EF64  F01E         	goto	u2631
  6827   003CC4  EF66  F01E         	goto	u2630
  6828   003CC8                     u2631:
  6829   003CC8  EF72  F01E         	goto	l508
  6830   003CCC                     u2630:
  6831   003CCC  C016  FFD9         	movff	turnRight@mR,fsr2l
  6832   003CD0  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6833   003CD4  0E1D               	movlw	29
  6834   003CD6  64DF               	cpfsgt	indf2,c
  6835   003CD8  EF70  F01E         	goto	u2641
  6836   003CDC  EF72  F01E         	goto	u2640
  6837   003CE0                     u2641:
  6838   003CE0  EF36  F01E         	goto	l3333
  6839   003CE4                     u2640:
  6840   003CE4                     l508:
  6841   003CE4  0012               	return		;funcret
  6842   003CE6                     __end_of_turnRight:
  6843                           	callstack 0
  6844                           
  6845 ;; *************** function _Timer0_init *****************
  6846 ;; Defined at:
  6847 ;;		line 8 in file "timers.c"
  6848 ;; Parameters:    Size  Location     Type
  6849 ;;		None
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;		None
  6852 ;; Return value:  Size  Location     Type
  6853 ;;                  1    wreg      void 
  6854 ;; Registers used:
  6855 ;;		wreg, status,2
  6856 ;; Tracked objects:
  6857 ;;		On entry : 0/0
  6858 ;;		On exit  : 0/0
  6859 ;;		Unchanged: 0/0
  6860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6865 ;;Total ram usage:        0 bytes
  6866 ;; Hardware stack levels used: 1
  6867 ;; Hardware stack levels required when called: 1
  6868 ;; This function calls:
  6869 ;;		Nothing
  6870 ;; This function is called by:
  6871 ;;		_main
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text45
  6876   004AEE                     __ptext45:
  6877                           	callstack 0
  6878   004AEE                     _Timer0_init:
  6879                           	callstack 29
  6880   004AEE                     
  6881                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  6882   004AEE  50D6               	movf	214,w,c	;volatile
  6883   004AF0  0B1F               	andlw	-225
  6884   004AF2  0940               	iorlw	64
  6885   004AF4  6ED6               	movwf	214,c	;volatile
  6886   004AF6                     
  6887                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  6888   004AF6  88D6               	bsf	214,4,c	;volatile
  6889                           
  6890                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  6891   004AF8  50D6               	movf	214,w,c	;volatile
  6892   004AFA  0BF0               	andlw	-16
  6893   004AFC  090E               	iorlw	14
  6894   004AFE  6ED6               	movwf	214,c	;volatile
  6895   004B00                     
  6896                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  6897   004B00  88D5               	bsf	213,4,c	;volatile
  6898                           
  6899                           ;timers.c: 16:     TMR0H=0;
  6900   004B02  0E00               	movlw	0
  6901   004B04  6ED4               	movwf	212,c	;volatile
  6902                           
  6903                           ;timers.c: 17:     TMR0L=0;
  6904   004B06  0E00               	movlw	0
  6905   004B08  6ED3               	movwf	211,c	;volatile
  6906   004B0A                     
  6907                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  6908   004B0A  8ED5               	bsf	213,7,c	;volatile
  6909   004B0C  0012               	return		;funcret
  6910   004B0E                     __end_of_Timer0_init:
  6911                           	callstack 0
  6912                           
  6913 ;; *************** function _RetryMove *****************
  6914 ;; Defined at:
  6915 ;;		line 295 in file "dc_motor.c"
  6916 ;; Parameters:    Size  Location     Type
  6917 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6918 ;;		 -> motorL(9), 
  6919 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6920 ;;		 -> motorR(9), 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      void 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;Total ram usage:        6 bytes
  6937 ;; Hardware stack levels used: 1
  6938 ;; Hardware stack levels required when called: 4
  6939 ;; This function calls:
  6940 ;;		_fullSpeedAhead
  6941 ;;		_fullSpeedBack
  6942 ;;		_stop
  6943 ;; This function is called by:
  6944 ;;		_main
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948                           	psect	text46
  6949   003F48                     __ptext46:
  6950                           	callstack 0
  6951   003F48                     _RetryMove:
  6952                           	callstack 26
  6953   003F48                     
  6954                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  6955   003F48  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  6956   003F4C  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  6957   003F50  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  6958   003F54  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  6959   003F58  EC11  F01F         	call	_fullSpeedBack	;wreg free
  6960   003F5C                     
  6961                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6962   003F5C  0E29               	movlw	41
  6963   003F5E  6E1F               	movwf	(??_RetryMove+1)^0,c
  6964   003F60  0E96               	movlw	150
  6965   003F62  6E1E               	movwf	??_RetryMove^0,c
  6966   003F64  0E7F               	movlw	127
  6967   003F66                     u4677:
  6968   003F66  2EE8               	decfsz	wreg,f,c
  6969   003F68  D7FE               	bra	u4677
  6970   003F6A  2E1E               	decfsz	??_RetryMove^0,f,c
  6971   003F6C  D7FC               	bra	u4677
  6972   003F6E  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  6973   003F70  D7FA               	bra	u4677
  6974   003F72  F000               	nop	
  6975   003F74                     
  6976                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  6977   003F74  0EF5               	movlw	low _motorL
  6978   003F76  6E14               	movwf	stop@mL^0,c
  6979   003F78  0E00               	movlw	high _motorL
  6980   003F7A  6E15               	movwf	(stop@mL+1)^0,c
  6981   003F7C  0EBE               	movlw	low _motorR
  6982   003F7E  6E16               	movwf	stop@mR^0,c
  6983   003F80  0E01               	movlw	high _motorR
  6984   003F82  6E17               	movwf	(stop@mR+1)^0,c
  6985   003F84  ECE5  F01F         	call	_stop	;wreg free
  6986   003F88                     
  6987                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  6988   003F88  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  6989   003F8C  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  6990   003F90  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  6991   003F94  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  6992   003F98  EC73  F01E         	call	_fullSpeedAhead	;wreg free
  6993   003F9C                     
  6994                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6995   003F9C  0E29               	movlw	41
  6996   003F9E  6E1F               	movwf	(??_RetryMove+1)^0,c
  6997   003FA0  0E96               	movlw	150
  6998   003FA2  6E1E               	movwf	??_RetryMove^0,c
  6999   003FA4  0E7F               	movlw	127
  7000   003FA6                     u4687:
  7001   003FA6  2EE8               	decfsz	wreg,f,c
  7002   003FA8  D7FE               	bra	u4687
  7003   003FAA  2E1E               	decfsz	??_RetryMove^0,f,c
  7004   003FAC  D7FC               	bra	u4687
  7005   003FAE  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7006   003FB0  D7FA               	bra	u4687
  7007   003FB2  F000               	nop	
  7008                           
  7009                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  7010   003FB4  0EF5               	movlw	low _motorL
  7011   003FB6  6E14               	movwf	stop@mL^0,c
  7012   003FB8  0E00               	movlw	high _motorL
  7013   003FBA  6E15               	movwf	(stop@mL+1)^0,c
  7014   003FBC  0EBE               	movlw	low _motorR
  7015   003FBE  6E16               	movwf	stop@mR^0,c
  7016   003FC0  0E01               	movlw	high _motorR
  7017   003FC2  6E17               	movwf	(stop@mR+1)^0,c
  7018   003FC4  ECE5  F01F         	call	_stop	;wreg free
  7019   003FC8  0012               	return		;funcret
  7020   003FCA                     __end_of_RetryMove:
  7021                           	callstack 0
  7022                           
  7023 ;; *************** function _fullSpeedAhead *****************
  7024 ;; Defined at:
  7025 ;;		line 146 in file "dc_motor.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7028 ;;		 -> motorL(9), 
  7029 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7030 ;;		 -> motorR(9), 
  7031 ;; Auto vars:     Size  Location     Type
  7032 ;;		None
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  1    wreg      void 
  7035 ;; Registers used:
  7036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7045 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7046 ;;Total ram usage:        6 bytes
  7047 ;; Hardware stack levels used: 1
  7048 ;; Hardware stack levels required when called: 3
  7049 ;; This function calls:
  7050 ;;		_setMotorPWM
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;;		_ForwardOneBlock
  7054 ;;		_Forwardhalfblock
  7055 ;;		_RetryMove
  7056 ;;		_go_Home
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text47
  7061   003CE6                     __ptext47:
  7062                           	callstack 0
  7063   003CE6                     _fullSpeedAhead:
  7064                           	callstack 26
  7065   003CE6                     
  7066                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  7067   003CE6  EE20 F001          	lfsr	2,1
  7068   003CEA  5014               	movf	fullSpeedAhead@mL^0,w,c
  7069   003CEC  26D9               	addwf	fsr2l,f,c
  7070   003CEE  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7071   003CF0  22DA               	addwfc	fsr2h,f,c
  7072   003CF2  0E01               	movlw	1
  7073   003CF4  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;dc_motor.c: 150:     mR->direction =1;
  7076   003CF6  EE20 F001          	lfsr	2,1
  7077   003CFA  5016               	movf	fullSpeedAhead@mR^0,w,c
  7078   003CFC  26D9               	addwf	fsr2l,f,c
  7079   003CFE  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7080   003D00  22DA               	addwfc	fsr2h,f,c
  7081   003D02  0E01               	movlw	1
  7082   003D04  6EDF               	movwf	indf2,c
  7083                           
  7084                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  7085   003D06  EFA9  F01E         	goto	l3299
  7086   003D0A                     l3291:
  7087                           
  7088                           ;dc_motor.c: 153:         mL->power+=10;
  7089   003D0A  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7090   003D0E  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7091   003D12  0E0A               	movlw	10
  7092   003D14  26DF               	addwf	indf2,f,c
  7093                           
  7094                           ;dc_motor.c: 154:         mR->power+=10;
  7095   003D16  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7096   003D1A  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7097   003D1E  0E0A               	movlw	10
  7098   003D20  26DF               	addwf	indf2,f,c
  7099   003D22                     
  7100                           ;dc_motor.c: 156:         setMotorPWM(mL);
  7101   003D22  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7102   003D26  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7103   003D2A  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7104   003D2E                     
  7105                           ;dc_motor.c: 157:         setMotorPWM(mR);
  7106   003D2E  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7107   003D32  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7108   003D36  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7109   003D3A                     
  7110                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7111   003D3A  0E02               	movlw	2
  7112   003D3C  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  7113   003D3E  0EA0               	movlw	160
  7114   003D40  6E18               	movwf	??_fullSpeedAhead^0,c
  7115   003D42  0E92               	movlw	146
  7116   003D44                     u4697:
  7117   003D44  2EE8               	decfsz	wreg,f,c
  7118   003D46  D7FE               	bra	u4697
  7119   003D48  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7120   003D4A  D7FC               	bra	u4697
  7121   003D4C  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  7122   003D4E  D7FA               	bra	u4697
  7123   003D50  D000               	nop2	
  7124   003D52                     l3299:
  7125   003D52  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7126   003D56  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7127   003D5A  0E1E               	movlw	30
  7128   003D5C  60DF               	cpfslt	indf2,c
  7129   003D5E  EFB3  F01E         	goto	u2571
  7130   003D62  EFB5  F01E         	goto	u2570
  7131   003D66                     u2571:
  7132   003D66  EFC1  F01E         	goto	l516
  7133   003D6A                     u2570:
  7134   003D6A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7135   003D6E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7136   003D72  0E1D               	movlw	29
  7137   003D74  64DF               	cpfsgt	indf2,c
  7138   003D76  EFBF  F01E         	goto	u2581
  7139   003D7A  EFC1  F01E         	goto	u2580
  7140   003D7E                     u2581:
  7141   003D7E  EF85  F01E         	goto	l3291
  7142   003D82                     u2580:
  7143   003D82                     l516:
  7144   003D82  0012               	return		;funcret
  7145   003D84                     __end_of_fullSpeedAhead:
  7146                           	callstack 0
  7147                           
  7148 ;; *************** function _PinkMove *****************
  7149 ;; Defined at:
  7150 ;;		line 268 in file "dc_motor.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7153 ;;		 -> motorL(9), 
  7154 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7155 ;;		 -> motorR(9), 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;		None
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1    wreg      void 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7162 ;; Tracked objects:
  7163 ;;		On entry : 0/0
  7164 ;;		On exit  : 0/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7170 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7171 ;;Total ram usage:        4 bytes
  7172 ;; Hardware stack levels used: 1
  7173 ;; Hardware stack levels required when called: 5
  7174 ;; This function calls:
  7175 ;;		_reverseDetect
  7176 ;;		_reverseOneBlock
  7177 ;;		_turnLeft45
  7178 ;; This function is called by:
  7179 ;;		_main
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183                           	psect	text48
  7184   00461C                     __ptext48:
  7185                           	callstack 0
  7186   00461C                     _PinkMove:
  7187                           	callstack 25
  7188   00461C                     
  7189                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  7190   00461C  0EF5               	movlw	low _motorL
  7191   00461E  6E1A               	movwf	reverseDetect@mL^0,c
  7192   004620  0E00               	movlw	high _motorL
  7193   004622  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7194   004624  0EBE               	movlw	low _motorR
  7195   004626  6E1C               	movwf	reverseDetect@mR^0,c
  7196   004628  0E01               	movlw	high _motorR
  7197   00462A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7198   00462C  ECBC  F021         	call	_reverseDetect	;wreg free
  7199                           
  7200                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  7201   004630  0EF5               	movlw	low _motorL
  7202   004632  6E1A               	movwf	reverseOneBlock@mL^0,c
  7203   004634  0E00               	movlw	high _motorL
  7204   004636  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7205   004638  0EBE               	movlw	low _motorR
  7206   00463A  6E1C               	movwf	reverseOneBlock@mR^0,c
  7207   00463C  0E01               	movlw	high _motorR
  7208   00463E  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7209   004640  EC8F  F021         	call	_reverseOneBlock	;wreg free
  7210                           
  7211                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  7212   004644  0EF5               	movlw	low _motorL
  7213   004646  6E1A               	movwf	turnLeft45@mL^0,c
  7214   004648  0E00               	movlw	high _motorL
  7215   00464A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7216   00464C  0EBE               	movlw	low _motorR
  7217   00464E  6E1C               	movwf	turnLeft45@mR^0,c
  7218   004650  0E01               	movlw	high _motorR
  7219   004652  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7220   004654  EC15  F022         	call	_turnLeft45	;wreg free
  7221                           
  7222                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  7223   004658  0EF5               	movlw	low _motorL
  7224   00465A  6E1A               	movwf	turnLeft45@mL^0,c
  7225   00465C  0E00               	movlw	high _motorL
  7226   00465E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7227   004660  0EBE               	movlw	low _motorR
  7228   004662  6E1C               	movwf	turnLeft45@mR^0,c
  7229   004664  0E01               	movlw	high _motorR
  7230   004666  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7231   004668  EC15  F022         	call	_turnLeft45	;wreg free
  7232   00466C  0012               	return		;funcret
  7233   00466E                     __end_of_PinkMove:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function _turnLeft45 *****************
  7237 ;; Defined at:
  7238 ;;		line 188 in file "dc_motor.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7241 ;;		 -> motorL(9), 
  7242 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7243 ;;		 -> motorR(9), 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;		None
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7255 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;Total ram usage:        6 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 4
  7262 ;; This function calls:
  7263 ;;		_stop
  7264 ;;		_turnLeft
  7265 ;; This function is called by:
  7266 ;;		_GreenMove
  7267 ;;		_PinkMove
  7268 ;;		_LightBlueMove
  7269 ;;		_ReverseYellow
  7270 ;; This function uses a non-reentrant model
  7271 ;;
  7272                           
  7273                           	psect	text49
  7274   00442A                     __ptext49:
  7275                           	callstack 0
  7276   00442A                     _turnLeft45:
  7277                           	callstack 24
  7278   00442A                     
  7279                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  7280   00442A  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7281   00442E  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7282   004432  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7283   004436  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7284   00443A  ECC2  F01E         	call	_turnLeft	;wreg free
  7285   00443E                     
  7286                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7287   00443E  0E12               	movlw	18
  7288   004440  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7289   004442  0EDC               	movlw	220
  7290   004444  6E1E               	movwf	??_turnLeft45^0,c
  7291   004446  0E60               	movlw	96
  7292   004448                     u4707:
  7293   004448  2EE8               	decfsz	wreg,f,c
  7294   00444A  D7FE               	bra	u4707
  7295   00444C  2E1E               	decfsz	??_turnLeft45^0,f,c
  7296   00444E  D7FC               	bra	u4707
  7297   004450  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7298   004452  D7FA               	bra	u4707
  7299   004454                     
  7300                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  7301   004454  0EF5               	movlw	low _motorL
  7302   004456  6E14               	movwf	stop@mL^0,c
  7303   004458  0E00               	movlw	high _motorL
  7304   00445A  6E15               	movwf	(stop@mL+1)^0,c
  7305   00445C  0EBE               	movlw	low _motorR
  7306   00445E  6E16               	movwf	stop@mR^0,c
  7307   004460  0E01               	movlw	high _motorR
  7308   004462  6E17               	movwf	(stop@mR+1)^0,c
  7309   004464  ECE5  F01F         	call	_stop	;wreg free
  7310                           
  7311                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7312   004468  0E52               	movlw	82
  7313   00446A  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7314   00446C  0E2B               	movlw	43
  7315   00446E  6E1E               	movwf	??_turnLeft45^0,c
  7316   004470  0E00               	movlw	0
  7317   004472                     u4717:
  7318   004472  2EE8               	decfsz	wreg,f,c
  7319   004474  D7FE               	bra	u4717
  7320   004476  2E1E               	decfsz	??_turnLeft45^0,f,c
  7321   004478  D7FC               	bra	u4717
  7322   00447A  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7323   00447C  D7FA               	bra	u4717
  7324   00447E  D000               	nop2	
  7325   004480  0012               	return		;funcret
  7326   004482                     __end_of_turnLeft45:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _turnLeft *****************
  7330 ;; Defined at:
  7331 ;;		line 110 in file "dc_motor.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7334 ;;		 -> motorL(9), 
  7335 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7336 ;;		 -> motorR(9), 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;Total ram usage:        6 bytes
  7353 ;; Hardware stack levels used: 1
  7354 ;; Hardware stack levels required when called: 3
  7355 ;; This function calls:
  7356 ;;		_setMotorPWM
  7357 ;; This function is called by:
  7358 ;;		_turnLeft45
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text50
  7363   003D84                     __ptext50:
  7364                           	callstack 0
  7365   003D84                     _turnLeft:
  7366                           	callstack 24
  7367   003D84                     
  7368                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7369   003D84  EE20 F001          	lfsr	2,1
  7370   003D88  5014               	movf	turnLeft@mL^0,w,c
  7371   003D8A  26D9               	addwf	fsr2l,f,c
  7372   003D8C  5015               	movf	(turnLeft@mL+1)^0,w,c
  7373   003D8E  22DA               	addwfc	fsr2h,f,c
  7374   003D90  0E00               	movlw	0
  7375   003D92  6EDF               	movwf	indf2,c
  7376                           
  7377                           ;dc_motor.c: 113:     mR->direction =1;
  7378   003D94  EE20 F001          	lfsr	2,1
  7379   003D98  5016               	movf	turnLeft@mR^0,w,c
  7380   003D9A  26D9               	addwf	fsr2l,f,c
  7381   003D9C  5017               	movf	(turnLeft@mR+1)^0,w,c
  7382   003D9E  22DA               	addwfc	fsr2h,f,c
  7383   003DA0  0E01               	movlw	1
  7384   003DA2  6EDF               	movwf	indf2,c
  7385                           
  7386                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7387   003DA4  EFF8  F01E         	goto	l3327
  7388   003DA8                     l3319:
  7389                           
  7390                           ;dc_motor.c: 117:         mL->power+=10;
  7391   003DA8  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7392   003DAC  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7393   003DB0  0E0A               	movlw	10
  7394   003DB2  26DF               	addwf	indf2,f,c
  7395                           
  7396                           ;dc_motor.c: 118:         mR->power+=10;
  7397   003DB4  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7398   003DB8  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7399   003DBC  0E0A               	movlw	10
  7400   003DBE  26DF               	addwf	indf2,f,c
  7401   003DC0                     
  7402                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7403   003DC0  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7404   003DC4  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7405   003DC8  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7406   003DCC                     
  7407                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7408   003DCC  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7409   003DD0  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7410   003DD4  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7411   003DD8                     
  7412                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7413   003DD8  0E02               	movlw	2
  7414   003DDA  6E19               	movwf	(??_turnLeft+1)^0,c
  7415   003DDC  0EA0               	movlw	160
  7416   003DDE  6E18               	movwf	??_turnLeft^0,c
  7417   003DE0  0E92               	movlw	146
  7418   003DE2                     u4727:
  7419   003DE2  2EE8               	decfsz	wreg,f,c
  7420   003DE4  D7FE               	bra	u4727
  7421   003DE6  2E18               	decfsz	??_turnLeft^0,f,c
  7422   003DE8  D7FC               	bra	u4727
  7423   003DEA  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7424   003DEC  D7FA               	bra	u4727
  7425   003DEE  D000               	nop2	
  7426   003DF0                     l3327:
  7427   003DF0  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7428   003DF4  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7429   003DF8  0E1E               	movlw	30
  7430   003DFA  60DF               	cpfslt	indf2,c
  7431   003DFC  EF02  F01F         	goto	u2611
  7432   003E00  EF04  F01F         	goto	u2610
  7433   003E04                     u2611:
  7434   003E04  EF10  F01F         	goto	l500
  7435   003E08                     u2610:
  7436   003E08  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7437   003E0C  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7438   003E10  0E1D               	movlw	29
  7439   003E12  64DF               	cpfsgt	indf2,c
  7440   003E14  EF0E  F01F         	goto	u2621
  7441   003E18  EF10  F01F         	goto	u2620
  7442   003E1C                     u2621:
  7443   003E1C  EFD4  F01E         	goto	l3319
  7444   003E20                     u2620:
  7445   003E20                     l500:
  7446   003E20  0012               	return		;funcret
  7447   003E22                     __end_of_turnLeft:
  7448                           	callstack 0
  7449                           
  7450 ;; *************** function _reverseOneBlock *****************
  7451 ;; Defined at:
  7452 ;;		line 202 in file "dc_motor.c"
  7453 ;; Parameters:    Size  Location     Type
  7454 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7455 ;;		 -> motorL(9), 
  7456 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7457 ;;		 -> motorR(9), 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      void 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;Total ram usage:        6 bytes
  7474 ;; Hardware stack levels used: 1
  7475 ;; Hardware stack levels required when called: 4
  7476 ;; This function calls:
  7477 ;;		_fullSpeedBack
  7478 ;;		_stop
  7479 ;; This function is called by:
  7480 ;;		_YellowMove
  7481 ;;		_PinkMove
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           	psect	text51
  7486   00431E                     __ptext51:
  7487                           	callstack 0
  7488   00431E                     _reverseOneBlock:
  7489                           	callstack 25
  7490   00431E                     
  7491                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  7492   00431E  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7493   004322  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7494   004326  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7495   00432A  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7496   00432E  EC11  F01F         	call	_fullSpeedBack	;wreg free
  7497   004332                     
  7498                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7499   004332  0E52               	movlw	82
  7500   004334  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7501   004336  0E2B               	movlw	43
  7502   004338  6E1E               	movwf	??_reverseOneBlock^0,c
  7503   00433A  0E00               	movlw	0
  7504   00433C                     u4737:
  7505   00433C  2EE8               	decfsz	wreg,f,c
  7506   00433E  D7FE               	bra	u4737
  7507   004340  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7508   004342  D7FC               	bra	u4737
  7509   004344  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7510   004346  D7FA               	bra	u4737
  7511   004348  D000               	nop2	
  7512   00434A                     
  7513                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  7514   00434A  0EF5               	movlw	low _motorL
  7515   00434C  6E14               	movwf	stop@mL^0,c
  7516   00434E  0E00               	movlw	high _motorL
  7517   004350  6E15               	movwf	(stop@mL+1)^0,c
  7518   004352  0EBE               	movlw	low _motorR
  7519   004354  6E16               	movwf	stop@mR^0,c
  7520   004356  0E01               	movlw	high _motorR
  7521   004358  6E17               	movwf	(stop@mR+1)^0,c
  7522   00435A  ECE5  F01F         	call	_stop	;wreg free
  7523                           
  7524                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7525   00435E  0E52               	movlw	82
  7526   004360  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7527   004362  0E2B               	movlw	43
  7528   004364  6E1E               	movwf	??_reverseOneBlock^0,c
  7529   004366  0E00               	movlw	0
  7530   004368                     u4747:
  7531   004368  2EE8               	decfsz	wreg,f,c
  7532   00436A  D7FE               	bra	u4747
  7533   00436C  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7534   00436E  D7FC               	bra	u4747
  7535   004370  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7536   004372  D7FA               	bra	u4747
  7537   004374  D000               	nop2	
  7538   004376  0012               	return		;funcret
  7539   004378                     __end_of_reverseOneBlock:
  7540                           	callstack 0
  7541                           
  7542 ;; *************** function _reverseDetect *****************
  7543 ;; Defined at:
  7544 ;;		line 195 in file "dc_motor.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7547 ;;		 -> motorL(9), 
  7548 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7549 ;;		 -> motorR(9), 
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;Total ram usage:        6 bytes
  7566 ;; Hardware stack levels used: 1
  7567 ;; Hardware stack levels required when called: 4
  7568 ;; This function calls:
  7569 ;;		_fullSpeedBack
  7570 ;;		_stop
  7571 ;; This function is called by:
  7572 ;;		_RedMove
  7573 ;;		_GreenMove
  7574 ;;		_BlueMove
  7575 ;;		_YellowMove
  7576 ;;		_PinkMove
  7577 ;;		_OrangeMove
  7578 ;;		_LightBlueMove
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           	psect	text52
  7583   004378                     __ptext52:
  7584                           	callstack 0
  7585   004378                     _reverseDetect:
  7586                           	callstack 24
  7587   004378                     
  7588                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  7589   004378  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7590   00437C  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7591   004380  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7592   004384  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7593   004388  EC11  F01F         	call	_fullSpeedBack	;wreg free
  7594   00438C                     
  7595                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7596   00438C  0E11               	movlw	17
  7597   00438E  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7598   004390  0E3C               	movlw	60
  7599   004392  6E1E               	movwf	??_reverseDetect^0,c
  7600   004394  0ECB               	movlw	203
  7601   004396                     u4757:
  7602   004396  2EE8               	decfsz	wreg,f,c
  7603   004398  D7FE               	bra	u4757
  7604   00439A  2E1E               	decfsz	??_reverseDetect^0,f,c
  7605   00439C  D7FC               	bra	u4757
  7606   00439E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7607   0043A0  D7FA               	bra	u4757
  7608   0043A2  F000               	nop	
  7609   0043A4                     
  7610                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  7611   0043A4  0EF5               	movlw	low _motorL
  7612   0043A6  6E14               	movwf	stop@mL^0,c
  7613   0043A8  0E00               	movlw	high _motorL
  7614   0043AA  6E15               	movwf	(stop@mL+1)^0,c
  7615   0043AC  0EBE               	movlw	low _motorR
  7616   0043AE  6E16               	movwf	stop@mR^0,c
  7617   0043B0  0E01               	movlw	high _motorR
  7618   0043B2  6E17               	movwf	(stop@mR+1)^0,c
  7619   0043B4  ECE5  F01F         	call	_stop	;wreg free
  7620                           
  7621                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7622   0043B8  0E52               	movlw	82
  7623   0043BA  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7624   0043BC  0E2B               	movlw	43
  7625   0043BE  6E1E               	movwf	??_reverseDetect^0,c
  7626   0043C0  0E00               	movlw	0
  7627   0043C2                     u4767:
  7628   0043C2  2EE8               	decfsz	wreg,f,c
  7629   0043C4  D7FE               	bra	u4767
  7630   0043C6  2E1E               	decfsz	??_reverseDetect^0,f,c
  7631   0043C8  D7FC               	bra	u4767
  7632   0043CA  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7633   0043CC  D7FA               	bra	u4767
  7634   0043CE  D000               	nop2	
  7635   0043D0  0012               	return		;funcret
  7636   0043D2                     __end_of_reverseDetect:
  7637                           	callstack 0
  7638                           
  7639 ;; *************** function _stop *****************
  7640 ;; Defined at:
  7641 ;;		line 92 in file "dc_motor.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7644 ;;		 -> motorL(9), 
  7645 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7646 ;;		 -> motorR(9), 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;		None
  7649 ;; Return value:  Size  Location     Type
  7650 ;;                  1    wreg      void 
  7651 ;; Registers used:
  7652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7653 ;; Tracked objects:
  7654 ;;		On entry : 0/0
  7655 ;;		On exit  : 0/0
  7656 ;;		Unchanged: 0/0
  7657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;Total ram usage:        6 bytes
  7663 ;; Hardware stack levels used: 1
  7664 ;; Hardware stack levels required when called: 3
  7665 ;; This function calls:
  7666 ;;		_setMotorPWM
  7667 ;; This function is called by:
  7668 ;;		_main
  7669 ;;		_turnRight45
  7670 ;;		_turnLeft45
  7671 ;;		_reverseDetect
  7672 ;;		_reverseOneBlock
  7673 ;;		_ForwardOneBlock
  7674 ;;		_Forwardhalfblock
  7675 ;;		_RetryMove
  7676 ;;		_Backhalfblock
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text53
  7681   003FCA                     __ptext53:
  7682                           	callstack 0
  7683   003FCA                     _stop:
  7684                           	callstack 27
  7685   003FCA                     
  7686                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  7687   003FCA  EF0B  F020         	goto	l3313
  7688   003FCE                     l3305:
  7689                           
  7690                           ;dc_motor.c: 96:         mL->power-=10;
  7691   003FCE  C014  FFD9         	movff	stop@mL,fsr2l
  7692   003FD2  C015  FFDA         	movff	stop@mL+1,fsr2h
  7693   003FD6  0E0A               	movlw	10
  7694   003FD8  5EDF               	subwf	indf2,f,c
  7695                           
  7696                           ;dc_motor.c: 97:         mR->power-=10;
  7697   003FDA  C016  FFD9         	movff	stop@mR,fsr2l
  7698   003FDE  C017  FFDA         	movff	stop@mR+1,fsr2h
  7699   003FE2  0E0A               	movlw	10
  7700   003FE4  5EDF               	subwf	indf2,f,c
  7701   003FE6                     
  7702                           ;dc_motor.c: 102:         setMotorPWM(mL);
  7703   003FE6  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7704   003FEA  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7705   003FEE  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7706   003FF2                     
  7707                           ;dc_motor.c: 103:         setMotorPWM(mR);
  7708   003FF2  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7709   003FF6  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7710   003FFA  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7711   003FFE                     
  7712                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7713   003FFE  0E02               	movlw	2
  7714   004000  6E19               	movwf	(??_stop+1)^0,c
  7715   004002  0EA0               	movlw	160
  7716   004004  6E18               	movwf	??_stop^0,c
  7717   004006  0E92               	movlw	146
  7718   004008                     u4777:
  7719   004008  2EE8               	decfsz	wreg,f,c
  7720   00400A  D7FE               	bra	u4777
  7721   00400C  2E18               	decfsz	??_stop^0,f,c
  7722   00400E  D7FC               	bra	u4777
  7723   004010  2E19               	decfsz	(??_stop+1)^0,f,c
  7724   004012  D7FA               	bra	u4777
  7725   004014  D000               	nop2	
  7726   004016                     l3313:
  7727                           
  7728                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  7729   004016  C014  FFD9         	movff	stop@mL,fsr2l
  7730   00401A  C015  FFDA         	movff	stop@mL+1,fsr2h
  7731   00401E  50DF               	movf	indf2,w,c
  7732   004020  A4D8               	btfss	status,2,c
  7733   004022  EF15  F020         	goto	u2591
  7734   004026  EF17  F020         	goto	u2590
  7735   00402A                     u2591:
  7736   00402A  EFE7  F01F         	goto	l3305
  7737   00402E                     u2590:
  7738   00402E  C016  FFD9         	movff	stop@mR,fsr2l
  7739   004032  C017  FFDA         	movff	stop@mR+1,fsr2h
  7740   004036  50DF               	movf	indf2,w,c
  7741   004038  A4D8               	btfss	status,2,c
  7742   00403A  EF21  F020         	goto	u2601
  7743   00403E  EF23  F020         	goto	u2600
  7744   004042                     u2601:
  7745   004042  EFE7  F01F         	goto	l3305
  7746   004046                     u2600:
  7747   004046  0012               	return		;funcret
  7748   004048                     __end_of_stop:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _fullSpeedBack *****************
  7752 ;; Defined at:
  7753 ;;		line 164 in file "dc_motor.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7756 ;;		 -> motorL(9), 
  7757 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7758 ;;		 -> motorR(9), 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;		None
  7761 ;; Return value:  Size  Location     Type
  7762 ;;                  1    wreg      void 
  7763 ;; Registers used:
  7764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7765 ;; Tracked objects:
  7766 ;;		On entry : 0/0
  7767 ;;		On exit  : 0/0
  7768 ;;		Unchanged: 0/0
  7769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;Total ram usage:        6 bytes
  7775 ;; Hardware stack levels used: 1
  7776 ;; Hardware stack levels required when called: 3
  7777 ;; This function calls:
  7778 ;;		_setMotorPWM
  7779 ;; This function is called by:
  7780 ;;		_reverseDetect
  7781 ;;		_reverseOneBlock
  7782 ;;		_RetryMove
  7783 ;;		_Backhalfblock
  7784 ;; This function uses a non-reentrant model
  7785 ;;
  7786                           
  7787                           	psect	text54
  7788   003E22                     __ptext54:
  7789                           	callstack 0
  7790   003E22                     _fullSpeedBack:
  7791                           	callstack 24
  7792   003E22                     
  7793                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  7794   003E22  EE20 F001          	lfsr	2,1
  7795   003E26  5014               	movf	fullSpeedBack@mL^0,w,c
  7796   003E28  26D9               	addwf	fsr2l,f,c
  7797   003E2A  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7798   003E2C  22DA               	addwfc	fsr2h,f,c
  7799   003E2E  0E00               	movlw	0
  7800   003E30  6EDF               	movwf	indf2,c
  7801                           
  7802                           ;dc_motor.c: 168:     mR->direction =0;
  7803   003E32  EE20 F001          	lfsr	2,1
  7804   003E36  5016               	movf	fullSpeedBack@mR^0,w,c
  7805   003E38  26D9               	addwf	fsr2l,f,c
  7806   003E3A  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7807   003E3C  22DA               	addwfc	fsr2h,f,c
  7808   003E3E  0E00               	movlw	0
  7809   003E40  6EDF               	movwf	indf2,c
  7810                           
  7811                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  7812   003E42  EF47  F01F         	goto	l3355
  7813   003E46                     l3347:
  7814                           
  7815                           ;dc_motor.c: 171:         mL->power+=10;
  7816   003E46  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7817   003E4A  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7818   003E4E  0E0A               	movlw	10
  7819   003E50  26DF               	addwf	indf2,f,c
  7820                           
  7821                           ;dc_motor.c: 172:         mR->power+=10;
  7822   003E52  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7823   003E56  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7824   003E5A  0E0A               	movlw	10
  7825   003E5C  26DF               	addwf	indf2,f,c
  7826   003E5E                     
  7827                           ;dc_motor.c: 174:         setMotorPWM(mL);
  7828   003E5E  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7829   003E62  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7830   003E66  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7831   003E6A                     
  7832                           ;dc_motor.c: 175:         setMotorPWM(mR);
  7833   003E6A  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7834   003E6E  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7835   003E72  ECD8  F01A         	call	_setMotorPWM	;wreg free
  7836   003E76                     
  7837                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7838   003E76  0E02               	movlw	2
  7839   003E78  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7840   003E7A  0EA0               	movlw	160
  7841   003E7C  6E18               	movwf	??_fullSpeedBack^0,c
  7842   003E7E  0E92               	movlw	146
  7843   003E80                     u4787:
  7844   003E80  2EE8               	decfsz	wreg,f,c
  7845   003E82  D7FE               	bra	u4787
  7846   003E84  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7847   003E86  D7FC               	bra	u4787
  7848   003E88  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7849   003E8A  D7FA               	bra	u4787
  7850   003E8C  D000               	nop2	
  7851   003E8E                     l3355:
  7852   003E8E  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7853   003E92  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7854   003E96  0E1E               	movlw	30
  7855   003E98  60DF               	cpfslt	indf2,c
  7856   003E9A  EF51  F01F         	goto	u2651
  7857   003E9E  EF53  F01F         	goto	u2650
  7858   003EA2                     u2651:
  7859   003EA2  EF5F  F01F         	goto	l524
  7860   003EA6                     u2650:
  7861   003EA6  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7862   003EAA  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7863   003EAE  0E1D               	movlw	29
  7864   003EB0  64DF               	cpfsgt	indf2,c
  7865   003EB2  EF5D  F01F         	goto	u2661
  7866   003EB6  EF5F  F01F         	goto	u2660
  7867   003EBA                     u2661:
  7868   003EBA  EF23  F01F         	goto	l3347
  7869   003EBE                     u2660:
  7870   003EBE                     l524:
  7871   003EBE  0012               	return		;funcret
  7872   003EC0                     __end_of_fullSpeedBack:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function _setMotorPWM *****************
  7876 ;; Defined at:
  7877 ;;		line 67 in file "dc_motor.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  m               2   13[COMRAM] PTR struct DC_motor
  7880 ;;		 -> motorR(9), motorL(9), 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  negDuty         1   18[COMRAM] unsigned char 
  7883 ;;  posDuty         1   17[COMRAM] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      void 
  7886 ;; Registers used:
  7887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;Total ram usage:        6 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 2
  7900 ;; This function calls:
  7901 ;;		___lwdiv
  7902 ;;		___wmul
  7903 ;; This function is called by:
  7904 ;;		_stop
  7905 ;;		_turnLeft
  7906 ;;		_turnRight
  7907 ;;		_fullSpeedAhead
  7908 ;;		_fullSpeedBack
  7909 ;; This function uses a non-reentrant model
  7910 ;;
  7911                           
  7912                           	psect	text55
  7913   0035B0                     __ptext55:
  7914                           	callstack 0
  7915   0035B0                     _setMotorPWM:
  7916                           	callstack 27
  7917   0035B0                     
  7918                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  7919   0035B0  EE20 F002          	lfsr	2,2
  7920   0035B4  500E               	movf	setMotorPWM@m^0,w,c
  7921   0035B6  26D9               	addwf	fsr2l,f,c
  7922   0035B8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7923   0035BA  22DA               	addwfc	fsr2h,f,c
  7924   0035BC  50DF               	movf	indf2,w,c
  7925   0035BE  B4D8               	btfsc	status,2,c
  7926   0035C0  EFE4  F01A         	goto	u2371
  7927   0035C4  EFE6  F01A         	goto	u2370
  7928   0035C8                     u2371:
  7929   0035C8  EF1A  F01B         	goto	l3177
  7930   0035CC                     u2370:
  7931   0035CC                     
  7932                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7933   0035CC  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7934   0035D0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7935   0035D4  50DF               	movf	indf2,w,c
  7936   0035D6  6E10               	movwf	??_setMotorPWM^0,c
  7937   0035D8  5010               	movf	??_setMotorPWM^0,w,c
  7938   0035DA  6E01               	movwf	___wmul@multiplier^0,c
  7939   0035DC  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7940   0035DE  EE20 F003          	lfsr	2,3
  7941   0035E2  500E               	movf	setMotorPWM@m^0,w,c
  7942   0035E4  26D9               	addwf	fsr2l,f,c
  7943   0035E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7944   0035E8  22DA               	addwfc	fsr2h,f,c
  7945   0035EA  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7946   0035EE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7947   0035F2  EC54  F025         	call	___wmul	;wreg free
  7948   0035F6  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7949   0035FA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7950   0035FE  0E00               	movlw	0
  7951   003600  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7952   003602  0E64               	movlw	100
  7953   003604  6E09               	movwf	___lwdiv@divisor^0,c
  7954   003606  EC61  F020         	call	___lwdiv	;wreg free
  7955   00360A  EE20 F003          	lfsr	2,3
  7956   00360E  500E               	movf	setMotorPWM@m^0,w,c
  7957   003610  26D9               	addwf	fsr2l,f,c
  7958   003612  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7959   003614  22DA               	addwfc	fsr2h,f,c
  7960   003616  50DF               	movf	indf2,w,c
  7961   003618  6E11               	movwf	(??_setMotorPWM+1)^0,c
  7962   00361A  5007               	movf	?___lwdiv^0,w,c
  7963   00361C  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  7964   00361E  6E12               	movwf	setMotorPWM@posDuty^0,c
  7965   003620                     
  7966                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  7967   003620  EE20 F003          	lfsr	2,3
  7968   003624  500E               	movf	setMotorPWM@m^0,w,c
  7969   003626  26D9               	addwf	fsr2l,f,c
  7970   003628  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7971   00362A  22DA               	addwfc	fsr2h,f,c
  7972   00362C  50DF               	movf	indf2,w,c
  7973   00362E  6E13               	movwf	setMotorPWM@negDuty^0,c
  7974                           
  7975                           ;dc_motor.c: 74:     }
  7976   003630  EF3D  F01B         	goto	l3181
  7977   003634                     l3177:
  7978                           
  7979                           ;dc_motor.c: 76:         posDuty=0;
  7980   003634  0E00               	movlw	0
  7981   003636  6E12               	movwf	setMotorPWM@posDuty^0,c
  7982   003638                     
  7983                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7984   003638  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7985   00363C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7986   003640  50DF               	movf	indf2,w,c
  7987   003642  6E10               	movwf	??_setMotorPWM^0,c
  7988   003644  5010               	movf	??_setMotorPWM^0,w,c
  7989   003646  6E01               	movwf	___wmul@multiplier^0,c
  7990   003648  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7991   00364A  EE20 F003          	lfsr	2,3
  7992   00364E  500E               	movf	setMotorPWM@m^0,w,c
  7993   003650  26D9               	addwf	fsr2l,f,c
  7994   003652  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7995   003654  22DA               	addwfc	fsr2h,f,c
  7996   003656  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7997   00365A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7998   00365E  EC54  F025         	call	___wmul	;wreg free
  7999   003662  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8000   003666  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8001   00366A  0E00               	movlw	0
  8002   00366C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8003   00366E  0E64               	movlw	100
  8004   003670  6E09               	movwf	___lwdiv@divisor^0,c
  8005   003672  EC61  F020         	call	___lwdiv	;wreg free
  8006   003676  5007               	movf	?___lwdiv^0,w,c
  8007   003678  6E13               	movwf	setMotorPWM@negDuty^0,c
  8008   00367A                     l3181:
  8009                           
  8010                           ;dc_motor.c: 80:     if (m->direction) {
  8011   00367A  EE20 F001          	lfsr	2,1
  8012   00367E  500E               	movf	setMotorPWM@m^0,w,c
  8013   003680  26D9               	addwf	fsr2l,f,c
  8014   003682  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8015   003684  22DA               	addwfc	fsr2h,f,c
  8016   003686  50DF               	movf	indf2,w,c
  8017   003688  B4D8               	btfsc	status,2,c
  8018   00368A  EF49  F01B         	goto	u2381
  8019   00368E  EF4B  F01B         	goto	u2380
  8020   003692                     u2381:
  8021   003692  EF6D  F01B         	goto	l3185
  8022   003696                     u2380:
  8023   003696                     
  8024                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8025   003696  EE20 F005          	lfsr	2,5
  8026   00369A  500E               	movf	setMotorPWM@m^0,w,c
  8027   00369C  26D9               	addwf	fsr2l,f,c
  8028   00369E  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8029   0036A0  22DA               	addwfc	fsr2h,f,c
  8030   0036A2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8031   0036A6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8032   0036AA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8033   0036AE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8034   0036B2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8035                           
  8036                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8037   0036B6  EE20 F007          	lfsr	2,7
  8038   0036BA  500E               	movf	setMotorPWM@m^0,w,c
  8039   0036BC  26D9               	addwf	fsr2l,f,c
  8040   0036BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8041   0036C0  22DA               	addwfc	fsr2h,f,c
  8042   0036C2  CFDE F010          	movff	postinc2,??_setMotorPWM
  8043   0036C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8044   0036CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8045   0036CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8046   0036D2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8047                           
  8048                           ;dc_motor.c: 85:     } else {
  8049   0036D6  EF8D  F01B         	goto	l486
  8050   0036DA                     l3185:
  8051                           
  8052                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8053   0036DA  EE20 F005          	lfsr	2,5
  8054   0036DE  500E               	movf	setMotorPWM@m^0,w,c
  8055   0036E0  26D9               	addwf	fsr2l,f,c
  8056   0036E2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8057   0036E4  22DA               	addwfc	fsr2h,f,c
  8058   0036E6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8059   0036EA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8060   0036EE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8061   0036F2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8062   0036F6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8063                           
  8064                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8065   0036FA  EE20 F007          	lfsr	2,7
  8066   0036FE  500E               	movf	setMotorPWM@m^0,w,c
  8067   003700  26D9               	addwf	fsr2l,f,c
  8068   003702  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8069   003704  22DA               	addwfc	fsr2h,f,c
  8070   003706  CFDE F010          	movff	postinc2,??_setMotorPWM
  8071   00370A  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8072   00370E  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8073   003712  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8074   003716  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8075   00371A                     l486:
  8076   00371A  0012               	return		;funcret
  8077   00371C                     __end_of_setMotorPWM:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function ___wmul *****************
  8081 ;; Defined at:
  8082 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;  multiplier      2    0[COMRAM] unsigned int 
  8085 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  product         2    4[COMRAM] unsigned int 
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  2    0[COMRAM] unsigned int 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0, prodl, prodh
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;Total ram usage:        6 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 1
  8104 ;; This function calls:
  8105 ;;		Nothing
  8106 ;; This function is called by:
  8107 ;;		_setMotorPWM
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text56
  8112   004AA8                     __ptext56:
  8113                           	callstack 0
  8114   004AA8                     ___wmul:
  8115                           	callstack 27
  8116   004AA8  5001               	movf	___wmul@multiplier^0,w,c
  8117   004AAA  0203               	mulwf	___wmul@multiplicand^0,c
  8118   004AAC  CFF3 F005          	movff	prodl,___wmul@product
  8119   004AB0  CFF4 F006          	movff	prodh,___wmul@product+1
  8120   004AB4  5001               	movf	___wmul@multiplier^0,w,c
  8121   004AB6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8122   004AB8  50F3               	movf	243,w,c
  8123   004ABA  2606               	addwf	(___wmul@product+1)^0,f,c
  8124   004ABC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8125   004ABE  0203               	mulwf	___wmul@multiplicand^0,c
  8126   004AC0  50F3               	movf	243,w,c
  8127   004AC2  2606               	addwf	(___wmul@product+1)^0,f,c
  8128   004AC4  C005  F001         	movff	___wmul@product,?___wmul
  8129   004AC8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8130   004ACC  0012               	return		;funcret
  8131   004ACE                     __end_of___wmul:
  8132                           	callstack 0
  8133                           
  8134 ;; *************** function ___lwdiv *****************
  8135 ;; Defined at:
  8136 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  dividend        2    6[COMRAM] unsigned int 
  8139 ;;  divisor         2    8[COMRAM] unsigned int 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  quotient        2   10[COMRAM] unsigned int 
  8142 ;;  counter         1   12[COMRAM] unsigned char 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  2    6[COMRAM] unsigned int 
  8145 ;; Registers used:
  8146 ;;		wreg, status,2, status,0
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;Total ram usage:        7 bytes
  8157 ;; Hardware stack levels used: 1
  8158 ;; Hardware stack levels required when called: 1
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_setMotorPWM
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text57
  8167   0040C2                     __ptext57:
  8168                           	callstack 0
  8169   0040C2                     ___lwdiv:
  8170                           	callstack 27
  8171   0040C2  0E00               	movlw	0
  8172   0040C4  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8173   0040C6  0E00               	movlw	0
  8174   0040C8  6E0B               	movwf	___lwdiv@quotient^0,c
  8175   0040CA  5009               	movf	___lwdiv@divisor^0,w,c
  8176   0040CC  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8177   0040CE  B4D8               	btfsc	status,2,c
  8178   0040D0  EF6C  F020         	goto	u2331
  8179   0040D4  EF6E  F020         	goto	u2330
  8180   0040D8                     u2331:
  8181   0040D8  EF96  F020         	goto	l1152
  8182   0040DC                     u2330:
  8183   0040DC  0E01               	movlw	1
  8184   0040DE  6E0D               	movwf	___lwdiv@counter^0,c
  8185   0040E0  EF76  F020         	goto	l3149
  8186   0040E4                     l3147:
  8187   0040E4  90D8               	bcf	status,0,c
  8188   0040E6  3609               	rlcf	___lwdiv@divisor^0,f,c
  8189   0040E8  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8190   0040EA  2A0D               	incf	___lwdiv@counter^0,f,c
  8191   0040EC                     l3149:
  8192   0040EC  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8193   0040EE  EF7B  F020         	goto	u2341
  8194   0040F2  EF7D  F020         	goto	u2340
  8195   0040F6                     u2341:
  8196   0040F6  EF72  F020         	goto	l3147
  8197   0040FA                     u2340:
  8198   0040FA                     l3151:
  8199   0040FA  90D8               	bcf	status,0,c
  8200   0040FC  360B               	rlcf	___lwdiv@quotient^0,f,c
  8201   0040FE  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8202   004100  5009               	movf	___lwdiv@divisor^0,w,c
  8203   004102  5C07               	subwf	___lwdiv@dividend^0,w,c
  8204   004104  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8205   004106  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8206   004108  A0D8               	btfss	status,0,c
  8207   00410A  EF89  F020         	goto	u2351
  8208   00410E  EF8B  F020         	goto	u2350
  8209   004112                     u2351:
  8210   004112  EF90  F020         	goto	l3159
  8211   004116                     u2350:
  8212   004116  5009               	movf	___lwdiv@divisor^0,w,c
  8213   004118  5E07               	subwf	___lwdiv@dividend^0,f,c
  8214   00411A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8215   00411C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8216   00411E  800B               	bsf	___lwdiv@quotient^0,0,c
  8217   004120                     l3159:
  8218   004120  90D8               	bcf	status,0,c
  8219   004122  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8220   004124  3209               	rrcf	___lwdiv@divisor^0,f,c
  8221   004126  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8222   004128  EF7D  F020         	goto	l3151
  8223   00412C                     l1152:
  8224   00412C  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8225   004130  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8226   004134  0012               	return		;funcret
  8227   004136                     __end_of___lwdiv:
  8228                           	callstack 0
  8229                           
  8230 ;; *************** function _Interrupts_init *****************
  8231 ;; Defined at:
  8232 ;;		line 12 in file "interrupts.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;		None
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  1    wreg      void 
  8239 ;; Registers used:
  8240 ;;		None
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8250 ;;Total ram usage:        0 bytes
  8251 ;; Hardware stack levels used: 1
  8252 ;; Hardware stack levels required when called: 1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_main
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text58
  8261   004B76                     __ptext58:
  8262                           	callstack 0
  8263   004B76                     _Interrupts_init:
  8264                           	callstack 29
  8265   004B76  0012               	return		;funcret
  8266   004B78                     __end_of_Interrupts_init:
  8267                           	callstack 0
  8268                           
  8269 ;; *************** function _Colour_decider *****************
  8270 ;; Defined at:
  8271 ;;		line 125 in file "color.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  vals            2   74[COMRAM] PTR struct RGB
  8274 ;;		 -> vals(8), 
  8275 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8276 ;;		 -> rel(12), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  RGB_col        12    6[BANK0 ] float [3]
  8279 ;;  Hue             4   28[BANK0 ] float 
  8280 ;;  Cmin            4   22[BANK0 ] float 
  8281 ;;  Cmax            4   18[BANK0 ] float 
  8282 ;;  i               2   26[BANK0 ] int 
  8283 ;;  Cmax_i          2    4[BANK0 ] int 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  2   74[COMRAM] int 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8294 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8296 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8297 ;;Total ram usage:       38 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 3
  8300 ;; This function calls:
  8301 ;;		___fladd
  8302 ;;		___fldiv
  8303 ;;		___fleq
  8304 ;;		___flge
  8305 ;;		___flmul
  8306 ;;		___flsub
  8307 ;;		___xxtofl
  8308 ;; This function is called by:
  8309 ;;		_main
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           	psect	text59
  8314   000E26                     __ptext59:
  8315                           	callstack 0
  8316   000E26                     _Colour_decider:
  8317                           	callstack 27
  8318   000E26                     
  8319                           ;color.c: 126:     float Cmax = 0;
  8320   000E26  0E00               	movlw	0
  8321   000E28  0100               	movlb	0	; () banked
  8322   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8323   000E2C  0E00               	movlw	0
  8324   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8325   000E30  0E00               	movlw	0
  8326   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8327   000E34  0E00               	movlw	0
  8328   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8329                           
  8330                           ;color.c: 127:     float Cmin= 100000;
  8331   000E38  0E00               	movlw	0
  8332   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8333   000E3C  0E50               	movlw	80
  8334   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8335   000E40  0EC3               	movlw	195
  8336   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8337   000E44  0E47               	movlw	71
  8338   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8339                           
  8340                           ;color.c: 128:     int Cmax_i =4;
  8341   000E48  0E00               	movlw	0
  8342   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8343   000E4C  0E04               	movlw	4
  8344   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8345   000E50                     
  8346                           ; BSR set to: 0
  8347                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8348   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8349   000E54  0E0B               	movlw	11
  8350   000E56                     u3831:
  8351   000E56  6ADE               	clrf	postinc2,c
  8352   000E58  06E8               	decf	wreg,f,c
  8353   000E5A  E2FD               	bc	u3831
  8354   000E5C                     
  8355                           ; BSR set to: 0
  8356   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8357   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8358   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8359   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8360   000E6C  0E00               	movlw	0
  8361   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8362   000E70  0EFF               	movlw	-1
  8363   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8364   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8365   000E76  0E01               	movlw	1
  8366   000E78  EC3A  F019         	call	___xxtofl
  8367   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8368   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8369   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8370   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8371   000E8C  EE20 F002          	lfsr	2,2
  8372   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8373   000E92  26D9               	addwf	fsr2l,f,c
  8374   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8375   000E96  22DA               	addwfc	fsr2h,f,c
  8376   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8377   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8378   000EA0  0E00               	movlw	0
  8379   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8380   000EA4  0EFF               	movlw	-1
  8381   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8382   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8383   000EAA  0E01               	movlw	1
  8384   000EAC  EC3A  F019         	call	___xxtofl
  8385   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8386   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8387   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8388   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8389   000EC0  EE20 F004          	lfsr	2,4
  8390   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8391   000EC6  26D9               	addwf	fsr2l,f,c
  8392   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8393   000ECA  22DA               	addwfc	fsr2h,f,c
  8394   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8395   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8396   000ED4  0E00               	movlw	0
  8397   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8398   000ED8  0EFF               	movlw	-1
  8399   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8400   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8401   000EDE  0E01               	movlw	1
  8402   000EE0  EC3A  F019         	call	___xxtofl
  8403   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8404   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8405   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8406   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8407   000EF4                     
  8408                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8409   000EF4  0E00               	movlw	0
  8410   000EF6  0100               	movlb	0	; () banked
  8411   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8412   000EFA  0E00               	movlw	0
  8413   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8414   000EFE                     l4197:
  8415                           
  8416                           ; BSR set to: 0
  8417                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8418   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8419   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8420   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8421   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8422   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8423   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8424   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8425   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8426   000F16  90D8               	bcf	status,0,c
  8427   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8428   000F1A  6ED9               	movwf	fsr2l,c
  8429   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8430   000F1E  6EDA               	movwf	fsr2h,c
  8431   000F20  90D8               	bcf	status,0,c
  8432   000F22  36D9               	rlcf	fsr2l,f,c
  8433   000F24  36DA               	rlcf	fsr2h,f,c
  8434   000F26  504F               	movf	??_Colour_decider^0,w,c
  8435   000F28  26D9               	addwf	fsr2l,f,c
  8436   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8437   000F2C  22DA               	addwfc	fsr2h,f,c
  8438   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8439   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8440   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8441   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8442   000F3E  ECE8  F01C         	call	___flge	;wreg free
  8443   000F42  B0D8               	btfsc	status,0,c
  8444   000F44  EFA6  F007         	goto	u3841
  8445   000F48  EFA8  F007         	goto	u3840
  8446   000F4C                     u3841:
  8447   000F4C  EFC5  F007         	goto	l4203
  8448   000F50                     u3840:
  8449   000F50                     
  8450                           ;color.c: 137:             Cmax=RGB_col[i];
  8451   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8452   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8453   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8454   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8455   000F58  90D8               	bcf	status,0,c
  8456   000F5A  0100               	movlb	0	; () banked
  8457   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8458   000F5E  6ED9               	movwf	fsr2l,c
  8459   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8460   000F62  6EDA               	movwf	fsr2h,c
  8461   000F64  90D8               	bcf	status,0,c
  8462   000F66  36D9               	rlcf	fsr2l,f,c
  8463   000F68  36DA               	rlcf	fsr2h,f,c
  8464   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8465   000F6C  26D9               	addwf	fsr2l,f,c
  8466   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8467   000F70  22DA               	addwfc	fsr2h,f,c
  8468   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8469   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8470   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8471   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8472   000F82                     
  8473                           ; BSR set to: 0
  8474                           ;color.c: 138:             Cmax_i=i;
  8475   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8476   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8477   000F8A                     l4203:
  8478                           
  8479                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8480   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8481   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8482   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8483   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8484   000F92  90D8               	bcf	status,0,c
  8485   000F94  0100               	movlb	0	; () banked
  8486   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8487   000F98  6ED9               	movwf	fsr2l,c
  8488   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8489   000F9C  6EDA               	movwf	fsr2h,c
  8490   000F9E  90D8               	bcf	status,0,c
  8491   000FA0  36D9               	rlcf	fsr2l,f,c
  8492   000FA2  36DA               	rlcf	fsr2h,f,c
  8493   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8494   000FA6  26D9               	addwf	fsr2l,f,c
  8495   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8496   000FAA  22DA               	addwfc	fsr2h,f,c
  8497   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8498   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8499   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8500   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8501   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8502   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8503   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8504   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8505   000FCC  ECE8  F01C         	call	___flge	;wreg free
  8506   000FD0  B0D8               	btfsc	status,0,c
  8507   000FD2  EFED  F007         	goto	u3851
  8508   000FD6  EFEF  F007         	goto	u3850
  8509   000FDA                     u3851:
  8510   000FDA  EF08  F008         	goto	l4207
  8511   000FDE                     u3850:
  8512   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8513   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8514   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8515   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8516   000FE6  90D8               	bcf	status,0,c
  8517   000FE8  0100               	movlb	0	; () banked
  8518   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8519   000FEC  6ED9               	movwf	fsr2l,c
  8520   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8521   000FF0  6EDA               	movwf	fsr2h,c
  8522   000FF2  90D8               	bcf	status,0,c
  8523   000FF4  36D9               	rlcf	fsr2l,f,c
  8524   000FF6  36DA               	rlcf	fsr2h,f,c
  8525   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8526   000FFA  26D9               	addwf	fsr2l,f,c
  8527   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8528   000FFE  22DA               	addwfc	fsr2h,f,c
  8529   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8530   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8531   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8532   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8533   001010                     l4207:
  8534                           
  8535                           ;color.c: 141:     }
  8536   001010  0100               	movlb	0	; () banked
  8537   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8538   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8539   001016                     
  8540                           ; BSR set to: 0
  8541   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8542   001018  EF17  F008         	goto	u3861
  8543   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8544   00101E  E109               	bnz	u3860
  8545   001020  0E03               	movlw	3
  8546   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8547   001024  A0D8               	btfss	status,0,c
  8548   001026  EF17  F008         	goto	u3861
  8549   00102A  EF19  F008         	goto	u3860
  8550   00102E                     u3861:
  8551   00102E  EF7F  F007         	goto	l4197
  8552   001032                     u3860:
  8553   001032                     
  8554                           ; BSR set to: 0
  8555                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8556   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8557   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8558   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8559   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8560   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8561   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8562   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8563   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8564   001052  ECFE  F023         	call	___flsub	;wreg free
  8565   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8566   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8567   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8568   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8569   001066  0E00               	movlw	0
  8570   001068  6E1D               	movwf	___fleq@ff2^0,c
  8571   00106A  0E00               	movlw	0
  8572   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8573   00106E  0E00               	movlw	0
  8574   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8575   001072  0E00               	movlw	0
  8576   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8577   001076  ECCF  F01D         	call	___fleq	;wreg free
  8578   00107A  A0D8               	btfss	status,0,c
  8579   00107C  EF42  F008         	goto	u3871
  8580   001080  EF44  F008         	goto	u3870
  8581   001084                     u3871:
  8582   001084  EF4A  F008         	goto	l4217
  8583   001088                     u3870:
  8584   001088                     l4213:
  8585   001088  0E00               	movlw	0
  8586   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8587   00108C  0E00               	movlw	0
  8588   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8589   001090  EF80  F00C         	goto	l74
  8590   001094                     l4217:
  8591                           
  8592                           ;color.c: 146:     if (Cmax_i==0){
  8593   001094  0100               	movlb	0	; () banked
  8594   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8595   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8596   00109A  A4D8               	btfss	status,2,c
  8597   00109C  EF52  F008         	goto	u3881
  8598   0010A0  EF54  F008         	goto	u3880
  8599   0010A4                     u3881:
  8600   0010A4  EFC8  F008         	goto	l4225
  8601   0010A8                     u3880:
  8602   0010A8                     
  8603                           ; BSR set to: 0
  8604                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8605   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8606   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8607   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8608   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8609   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8610   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8611   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8612   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8613   0010C8  ECFE  F023         	call	___flsub	;wreg free
  8614   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8615   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8616   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8617   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8618   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8619   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8620   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8621   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8622   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8623   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8624   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8625   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8626   0010FC  ECFE  F023         	call	___flsub	;wreg free
  8627   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8628   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8629   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8630   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8631   001110  EC80  F013         	call	___fldiv	;wreg free
  8632   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8633   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  8634   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  8635   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  8636   001124  0E00               	movlw	0
  8637   001126  6E36               	movwf	___flmul@a^0,c
  8638   001128  0E00               	movlw	0
  8639   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  8640   00112C  0E70               	movlw	112
  8641   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  8642   001130  0E42               	movlw	66
  8643   001132  6E39               	movwf	(___flmul@a+3)^0,c
  8644   001134  EC6B  F011         	call	___flmul	;wreg free
  8645   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8646   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8647   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8648   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8649   001148                     
  8650                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8651   001148  0100               	movlb	0	; () banked
  8652   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8653   00114C  EFAC  F008         	goto	u3890
  8654   001150  EFAA  F008         	goto	u3891
  8655   001154                     u3891:
  8656   001154  EFA7  F009         	goto	l4235
  8657   001158                     u3890:
  8658   001158                     
  8659                           ; BSR set to: 0
  8660   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8661   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8662   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8663   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8664   001168  0E00               	movlw	0
  8665   00116A  6E05               	movwf	___fladd@a^0,c
  8666   00116C  0E00               	movlw	0
  8667   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  8668   001170  0EB4               	movlw	180
  8669   001172  6E07               	movwf	(___fladd@a+2)^0,c
  8670   001174  0E43               	movlw	67
  8671   001176  6E08               	movwf	(___fladd@a+3)^0,c
  8672   001178  EC0B  F00F         	call	___fladd	;wreg free
  8673   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8674   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8675   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8676   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8677   00118C  EFA7  F009         	goto	l4235
  8678   001190                     l4225:
  8679                           
  8680                           ; BSR set to: 0
  8681   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8682   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8683   001194  A4D8               	btfss	status,2,c
  8684   001196  EFCF  F008         	goto	u3901
  8685   00119A  EFD1  F008         	goto	u3900
  8686   00119E                     u3901:
  8687   00119E  EF3D  F009         	goto	l4231
  8688   0011A2                     u3900:
  8689   0011A2                     
  8690                           ; BSR set to: 0
  8691                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8692   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8693   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8694   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8695   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8696   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8697   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8698   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8699   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8700   0011C2  ECFE  F023         	call	___flsub	;wreg free
  8701   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  8702   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8703   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8704   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8705   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  8706   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8707   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8708   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8709   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  8710   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8711   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8712   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8713   0011F6  ECFE  F023         	call	___flsub	;wreg free
  8714   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  8715   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8716   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8717   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8718   00120A  EC80  F013         	call	___fldiv	;wreg free
  8719   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2808
  8720   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2808+1
  8721   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2808+2
  8722   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2808+3
  8723   00121E                     
  8724                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8725   00121E  0E00               	movlw	0
  8726   001220  6E05               	movwf	___fladd@a^0,c
  8727   001222  0E00               	movlw	0
  8728   001224  6E06               	movwf	(___fladd@a+1)^0,c
  8729   001226  0E00               	movlw	0
  8730   001228  6E07               	movwf	(___fladd@a+2)^0,c
  8731   00122A  0E40               	movlw	64
  8732   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  8733   00122E  C060  F001         	movff	_Colour_decider$2808,___fladd@b
  8734   001232  C061  F002         	movff	_Colour_decider$2808+1,___fladd@b+1
  8735   001236  C062  F003         	movff	_Colour_decider$2808+2,___fladd@b+2
  8736   00123A  C063  F004         	movff	_Colour_decider$2808+3,___fladd@b+3
  8737   00123E  EC0B  F00F         	call	___fladd	;wreg free
  8738   001242  C001  F032         	movff	?___fladd,___flmul@b
  8739   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8740   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8741   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8742   001252  0E00               	movlw	0
  8743   001254  6E36               	movwf	___flmul@a^0,c
  8744   001256  0E00               	movlw	0
  8745   001258  6E37               	movwf	(___flmul@a+1)^0,c
  8746   00125A  0E70               	movlw	112
  8747   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  8748   00125E  0E42               	movlw	66
  8749   001260  6E39               	movwf	(___flmul@a+3)^0,c
  8750   001262  EC6B  F011         	call	___flmul	;wreg free
  8751   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8752   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8753   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8754   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8755                           
  8756                           ;color.c: 155:     }
  8757   001276  EFA7  F009         	goto	l4235
  8758   00127A                     l4231:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8762   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8763   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8764   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8765   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8766   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8767   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8768   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8769   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8770   00129A  ECFE  F023         	call	___flsub	;wreg free
  8771   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  8772   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8773   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8774   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8775   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  8776   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8777   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8778   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8779   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  8780   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8781   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8782   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8783   0012CE  ECFE  F023         	call	___flsub	;wreg free
  8784   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  8785   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8786   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8787   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8788   0012E2  EC80  F013         	call	___fldiv	;wreg free
  8789   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2808
  8790   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2808+1
  8791   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2808+2
  8792   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2808+3
  8793   0012F6                     
  8794                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8795   0012F6  0E00               	movlw	0
  8796   0012F8  6E05               	movwf	___fladd@a^0,c
  8797   0012FA  0E00               	movlw	0
  8798   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  8799   0012FE  0E80               	movlw	128
  8800   001300  6E07               	movwf	(___fladd@a+2)^0,c
  8801   001302  0E40               	movlw	64
  8802   001304  6E08               	movwf	(___fladd@a+3)^0,c
  8803   001306  C060  F001         	movff	_Colour_decider$2808,___fladd@b
  8804   00130A  C061  F002         	movff	_Colour_decider$2808+1,___fladd@b+1
  8805   00130E  C062  F003         	movff	_Colour_decider$2808+2,___fladd@b+2
  8806   001312  C063  F004         	movff	_Colour_decider$2808+3,___fladd@b+3
  8807   001316  EC0B  F00F         	call	___fladd	;wreg free
  8808   00131A  C001  F032         	movff	?___fladd,___flmul@b
  8809   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8810   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8811   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8812   00132A  0E00               	movlw	0
  8813   00132C  6E36               	movwf	___flmul@a^0,c
  8814   00132E  0E00               	movlw	0
  8815   001330  6E37               	movwf	(___flmul@a+1)^0,c
  8816   001332  0E70               	movlw	112
  8817   001334  6E38               	movwf	(___flmul@a+2)^0,c
  8818   001336  0E42               	movlw	66
  8819   001338  6E39               	movwf	(___flmul@a+3)^0,c
  8820   00133A  EC6B  F011         	call	___flmul	;wreg free
  8821   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8822   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8823   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8824   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8825   00134E                     l4235:
  8826                           
  8827                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  8828   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8829   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8830   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8831   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8832   00135E  0E00               	movlw	0
  8833   001360  6E05               	movwf	___flge@ff2^0,c
  8834   001362  0E00               	movlw	0
  8835   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  8836   001366  0EA5               	movlw	165
  8837   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  8838   00136A  0E43               	movlw	67
  8839   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  8840   00136E  ECE8  F01C         	call	___flge	;wreg free
  8841   001372  A0D8               	btfss	status,0,c
  8842   001374  EFBE  F009         	goto	u3911
  8843   001378  EFC0  F009         	goto	u3910
  8844   00137C                     u3911:
  8845   00137C  EFDF  F009         	goto	l4245
  8846   001380                     u3910:
  8847   001380  0E00               	movlw	0
  8848   001382  6E01               	movwf	___flge@ff1^0,c
  8849   001384  0E00               	movlw	0
  8850   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  8851   001388  0EB4               	movlw	180
  8852   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  8853   00138C  0E43               	movlw	67
  8854   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  8855   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8856   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8857   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8858   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8859   0013A0  ECE8  F01C         	call	___flge	;wreg free
  8860   0013A4  A0D8               	btfss	status,0,c
  8861   0013A6  EFD7  F009         	goto	u3921
  8862   0013AA  EFD9  F009         	goto	u3920
  8863   0013AE                     u3921:
  8864   0013AE  EFDF  F009         	goto	l4245
  8865   0013B2                     u3920:
  8866   0013B2                     
  8867                           ;color.c: 164:         return 1;
  8868   0013B2  0E00               	movlw	0
  8869   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8870   0013B6  0E01               	movlw	1
  8871   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  8872   0013BA  EF80  F00C         	goto	l74
  8873   0013BE                     l4245:
  8874   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8875   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8876   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8877   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8878   0013CE  0E00               	movlw	0
  8879   0013D0  6E05               	movwf	___flge@ff2^0,c
  8880   0013D2  0E00               	movlw	0
  8881   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  8882   0013D6  0EA0               	movlw	160
  8883   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  8884   0013DA  0E40               	movlw	64
  8885   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  8886   0013DE  ECE8  F01C         	call	___flge	;wreg free
  8887   0013E2  A0D8               	btfss	status,0,c
  8888   0013E4  EFF6  F009         	goto	u3931
  8889   0013E8  EFF8  F009         	goto	u3930
  8890   0013EC                     u3931:
  8891   0013EC  EF17  F00A         	goto	l4255
  8892   0013F0                     u3930:
  8893   0013F0  0E00               	movlw	0
  8894   0013F2  6E01               	movwf	___flge@ff1^0,c
  8895   0013F4  0E00               	movlw	0
  8896   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  8897   0013F8  0E40               	movlw	64
  8898   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  8899   0013FC  0E41               	movlw	65
  8900   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  8901   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8902   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8903   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8904   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8905   001410  ECE8  F01C         	call	___flge	;wreg free
  8906   001414  A0D8               	btfss	status,0,c
  8907   001416  EF0F  F00A         	goto	u3941
  8908   00141A  EF11  F00A         	goto	u3940
  8909   00141E                     u3941:
  8910   00141E  EF17  F00A         	goto	l4255
  8911   001422                     u3940:
  8912   001422                     
  8913                           ;color.c: 168:         return 2;
  8914   001422  0E00               	movlw	0
  8915   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8916   001426  0E02               	movlw	2
  8917   001428  6E4B               	movwf	?_Colour_decider^0,c
  8918   00142A  EF80  F00C         	goto	l74
  8919   00142E                     l4255:
  8920   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8921   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8922   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8923   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8924   00143E  0E00               	movlw	0
  8925   001440  6E05               	movwf	___flge@ff2^0,c
  8926   001442  0E00               	movlw	0
  8927   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  8928   001446  0EA0               	movlw	160
  8929   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  8930   00144A  0E41               	movlw	65
  8931   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  8932   00144E  ECE8  F01C         	call	___flge	;wreg free
  8933   001452  A0D8               	btfss	status,0,c
  8934   001454  EF2E  F00A         	goto	u3951
  8935   001458  EF30  F00A         	goto	u3950
  8936   00145C                     u3951:
  8937   00145C  EFB0  F00A         	goto	l4281
  8938   001460                     u3950:
  8939   001460  0E00               	movlw	0
  8940   001462  6E01               	movwf	___flge@ff1^0,c
  8941   001464  0E00               	movlw	0
  8942   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  8943   001468  0EE8               	movlw	232
  8944   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  8945   00146C  0E41               	movlw	65
  8946   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  8947   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8948   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8949   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8950   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8951   001480  ECE8  F01C         	call	___flge	;wreg free
  8952   001484  A0D8               	btfss	status,0,c
  8953   001486  EF47  F00A         	goto	u3961
  8954   00148A  EF49  F00A         	goto	u3960
  8955   00148E                     u3961:
  8956   00148E  EFB0  F00A         	goto	l4281
  8957   001492                     u3960:
  8958   001492                     
  8959                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  8960   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8961   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8962   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  8963   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  8964   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  8965   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  8966   0014AA  0ECD               	movlw	205
  8967   0014AC  6E05               	movwf	___flge@ff2^0,c
  8968   0014AE  0ECC               	movlw	204
  8969   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  8970   0014B2  0E4C               	movlw	76
  8971   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  8972   0014B6  0E3E               	movlw	62
  8973   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  8974   0014BA  ECE8  F01C         	call	___flge	;wreg free
  8975   0014BE  A0D8               	btfss	status,0,c
  8976   0014C0  EF64  F00A         	goto	u3971
  8977   0014C4  EF66  F00A         	goto	u3970
  8978   0014C8                     u3971:
  8979   0014C8  EF85  F00A         	goto	l4269
  8980   0014CC                     u3970:
  8981   0014CC  0E00               	movlw	0
  8982   0014CE  6E01               	movwf	___flge@ff1^0,c
  8983   0014D0  0E00               	movlw	0
  8984   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  8985   0014D4  0E80               	movlw	128
  8986   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  8987   0014D8  0E3E               	movlw	62
  8988   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  8989   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8990   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8991   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  8992   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  8993   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  8994   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  8995   0014F4  ECE8  F01C         	call	___flge	;wreg free
  8996   0014F8  A0D8               	btfss	status,0,c
  8997   0014FA  EF81  F00A         	goto	u3981
  8998   0014FE  EF83  F00A         	goto	u3980
  8999   001502                     u3981:
  9000   001502  EF85  F00A         	goto	l4269
  9001   001506                     u3980:
  9002   001506  EF44  F008         	goto	l4213
  9003   00150A                     l4269:
  9004   00150A  EE20 F008          	lfsr	2,8
  9005   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9006   001510  26D9               	addwf	fsr2l,f,c
  9007   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9008   001514  22DA               	addwfc	fsr2h,f,c
  9009   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9010   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9011   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9012   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9013   001526  0E29               	movlw	41
  9014   001528  6E05               	movwf	___flge@ff2^0,c
  9015   00152A  0E5C               	movlw	92
  9016   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9017   00152E  0E0F               	movlw	15
  9018   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9019   001532  0E3E               	movlw	62
  9020   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9021   001536  ECE8  F01C         	call	___flge	;wreg free
  9022   00153A  A0D8               	btfss	status,0,c
  9023   00153C  EFA2  F00A         	goto	u3991
  9024   001540  EFA4  F00A         	goto	u3990
  9025   001544                     u3991:
  9026   001544  EFAA  F00A         	goto	l4277
  9027   001548                     u3990:
  9028   001548                     l4271:
  9029                           
  9030                           ;color.c: 179:             return 4;
  9031   001548  0E00               	movlw	0
  9032   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9033   00154C  0E04               	movlw	4
  9034   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9035   001550  EF80  F00C         	goto	l74
  9036   001554                     l4277:
  9037                           
  9038                           ;color.c: 182:             return 3;
  9039   001554  0E00               	movlw	0
  9040   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9041   001558  0E03               	movlw	3
  9042   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9043   00155C  EF80  F00C         	goto	l74
  9044   001560                     l4281:
  9045   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9046   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9047   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9048   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9049   001570  0E00               	movlw	0
  9050   001572  6E05               	movwf	___flge@ff2^0,c
  9051   001574  0E00               	movlw	0
  9052   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9053   001578  0E34               	movlw	52
  9054   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9055   00157C  0E42               	movlw	66
  9056   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9057   001580  ECE8  F01C         	call	___flge	;wreg free
  9058   001584  A0D8               	btfss	status,0,c
  9059   001586  EFC7  F00A         	goto	u4001
  9060   00158A  EFC9  F00A         	goto	u4000
  9061   00158E                     u4001:
  9062   00158E  EF2E  F00B         	goto	l4305
  9063   001592                     u4000:
  9064   001592  0E00               	movlw	0
  9065   001594  6E01               	movwf	___flge@ff1^0,c
  9066   001596  0E00               	movlw	0
  9067   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9068   00159A  0EA0               	movlw	160
  9069   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9070   00159E  0E42               	movlw	66
  9071   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9072   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9073   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9074   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9075   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9076   0015B2  ECE8  F01C         	call	___flge	;wreg free
  9077   0015B6  A0D8               	btfss	status,0,c
  9078   0015B8  EFE0  F00A         	goto	u4011
  9079   0015BC  EFE2  F00A         	goto	u4010
  9080   0015C0                     u4011:
  9081   0015C0  EF2E  F00B         	goto	l4305
  9082   0015C4                     u4010:
  9083   0015C4                     
  9084                           ;color.c: 188:         if(0.15<=rel->B){
  9085   0015C4  EE20 F008          	lfsr	2,8
  9086   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9087   0015CA  26D9               	addwf	fsr2l,f,c
  9088   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9089   0015CE  22DA               	addwfc	fsr2h,f,c
  9090   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9091   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9092   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9093   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9094   0015E0  0E9A               	movlw	154
  9095   0015E2  6E05               	movwf	___flge@ff2^0,c
  9096   0015E4  0E99               	movlw	153
  9097   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9098   0015E8  0E19               	movlw	25
  9099   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9100   0015EC  0E3E               	movlw	62
  9101   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9102   0015F0  ECE8  F01C         	call	___flge	;wreg free
  9103   0015F4  A0D8               	btfss	status,0,c
  9104   0015F6  EFFF  F00A         	goto	u4021
  9105   0015FA  EF01  F00B         	goto	u4020
  9106   0015FE                     u4021:
  9107   0015FE  EF03  F00B         	goto	l4293
  9108   001602                     u4020:
  9109   001602  EFA4  F00A         	goto	l4271
  9110   001606                     l4293:
  9111   001606  EE20 F008          	lfsr	2,8
  9112   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9113   00160C  26D9               	addwf	fsr2l,f,c
  9114   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9115   001610  22DA               	addwfc	fsr2h,f,c
  9116   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9117   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9118   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9119   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9120   001622  0E8F               	movlw	143
  9121   001624  6E05               	movwf	___flge@ff2^0,c
  9122   001626  0EC2               	movlw	194
  9123   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9124   00162A  0EF5               	movlw	245
  9125   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9126   00162E  0E3D               	movlw	61
  9127   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9128   001632  ECE8  F01C         	call	___flge	;wreg free
  9129   001636  A0D8               	btfss	status,0,c
  9130   001638  EF20  F00B         	goto	u4031
  9131   00163C  EF22  F00B         	goto	u4030
  9132   001640                     u4031:
  9133   001640  EF28  F00B         	goto	l4301
  9134   001644                     u4030:
  9135   001644                     l4295:
  9136                           
  9137                           ;color.c: 192:             return 6;
  9138   001644  0E00               	movlw	0
  9139   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9140   001648  0E06               	movlw	6
  9141   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9142   00164C  EF80  F00C         	goto	l74
  9143   001650                     l4301:
  9144                           
  9145                           ;color.c: 195:             return 5;
  9146   001650  0E00               	movlw	0
  9147   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9148   001654  0E05               	movlw	5
  9149   001656  6E4B               	movwf	?_Colour_decider^0,c
  9150   001658  EF80  F00C         	goto	l74
  9151   00165C                     l4305:
  9152   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9153   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9154   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9155   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9156   00166C  0E00               	movlw	0
  9157   00166E  6E05               	movwf	___flge@ff2^0,c
  9158   001670  0E00               	movlw	0
  9159   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9160   001674  0EA2               	movlw	162
  9161   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9162   001678  0E42               	movlw	66
  9163   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9164   00167C  ECE8  F01C         	call	___flge	;wreg free
  9165   001680  A0D8               	btfss	status,0,c
  9166   001682  EF45  F00B         	goto	u4041
  9167   001686  EF47  F00B         	goto	u4040
  9168   00168A                     u4041:
  9169   00168A  EF81  F00B         	goto	l4321
  9170   00168E                     u4040:
  9171   00168E  0E00               	movlw	0
  9172   001690  6E01               	movwf	___flge@ff1^0,c
  9173   001692  0E00               	movlw	0
  9174   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9175   001696  0EE6               	movlw	230
  9176   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9177   00169A  0E42               	movlw	66
  9178   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9179   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9180   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9181   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9182   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9183   0016AE  ECE8  F01C         	call	___flge	;wreg free
  9184   0016B2  A0D8               	btfss	status,0,c
  9185   0016B4  EF5E  F00B         	goto	u4051
  9186   0016B8  EF60  F00B         	goto	u4050
  9187   0016BC                     u4051:
  9188   0016BC  EF81  F00B         	goto	l4321
  9189   0016C0                     u4050:
  9190   0016C0                     
  9191                           ;color.c: 201:         if(0.15<=rel->B){
  9192   0016C0  EE20 F008          	lfsr	2,8
  9193   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9194   0016C6  26D9               	addwf	fsr2l,f,c
  9195   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9196   0016CA  22DA               	addwfc	fsr2h,f,c
  9197   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9198   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9199   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9200   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9201   0016DC  0E9A               	movlw	154
  9202   0016DE  6E05               	movwf	___flge@ff2^0,c
  9203   0016E0  0E99               	movlw	153
  9204   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9205   0016E4  0E19               	movlw	25
  9206   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9207   0016E8  0E3E               	movlw	62
  9208   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9209   0016EC  ECE8  F01C         	call	___flge	;wreg free
  9210   0016F0  A0D8               	btfss	status,0,c
  9211   0016F2  EF7D  F00B         	goto	u4061
  9212   0016F6  EF7F  F00B         	goto	u4060
  9213   0016FA                     u4061:
  9214   0016FA  EF22  F00B         	goto	l4295
  9215   0016FE                     u4060:
  9216   0016FE  EFA4  F00A         	goto	l4271
  9217   001702                     l4321:
  9218   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9219   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9220   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9221   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9222   001712  0E00               	movlw	0
  9223   001714  6E05               	movwf	___flge@ff2^0,c
  9224   001716  0E00               	movlw	0
  9225   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9226   00171A  0EF0               	movlw	240
  9227   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9228   00171E  0E41               	movlw	65
  9229   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9230   001722  ECE8  F01C         	call	___flge	;wreg free
  9231   001726  A0D8               	btfss	status,0,c
  9232   001728  EF98  F00B         	goto	u4071
  9233   00172C  EF9A  F00B         	goto	u4070
  9234   001730                     u4071:
  9235   001730  EFB3  F00B         	goto	l4325
  9236   001734                     u4070:
  9237   001734  0E00               	movlw	0
  9238   001736  6E01               	movwf	___flge@ff1^0,c
  9239   001738  0E00               	movlw	0
  9240   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9241   00173C  0E68               	movlw	104
  9242   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9243   001740  0E42               	movlw	66
  9244   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9245   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9246   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9247   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9248   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9249   001754  ECE8  F01C         	call	___flge	;wreg free
  9250   001758  B0D8               	btfsc	status,0,c
  9251   00175A  EFB1  F00B         	goto	u4081
  9252   00175E  EFB3  F00B         	goto	u4080
  9253   001762                     u4081:
  9254   001762  EFA4  F00A         	goto	l4271
  9255   001766                     u4080:
  9256   001766                     l4325:
  9257   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9258   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9259   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9260   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9261   001776  0E00               	movlw	0
  9262   001778  6E05               	movwf	___flge@ff2^0,c
  9263   00177A  0E00               	movlw	0
  9264   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9265   00177E  0EF0               	movlw	240
  9266   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9267   001782  0E42               	movlw	66
  9268   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9269   001786  ECE8  F01C         	call	___flge	;wreg free
  9270   00178A  A0D8               	btfss	status,0,c
  9271   00178C  EFCA  F00B         	goto	u4091
  9272   001790  EFCC  F00B         	goto	u4090
  9273   001794                     u4091:
  9274   001794  EFE7  F00B         	goto	l4335
  9275   001798                     u4090:
  9276   001798  0E00               	movlw	0
  9277   00179A  6E01               	movwf	___flge@ff1^0,c
  9278   00179C  0E00               	movlw	0
  9279   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9280   0017A0  0E5C               	movlw	92
  9281   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9282   0017A4  0E43               	movlw	67
  9283   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9284   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9285   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9286   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9287   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9288   0017B8  ECE8  F01C         	call	___flge	;wreg free
  9289   0017BC  A0D8               	btfss	status,0,c
  9290   0017BE  EFE3  F00B         	goto	u4101
  9291   0017C2  EFE5  F00B         	goto	u4100
  9292   0017C6                     u4101:
  9293   0017C6  EFE7  F00B         	goto	l4335
  9294   0017CA                     u4100:
  9295   0017CA  EFA4  F00A         	goto	l4271
  9296   0017CE                     l4335:
  9297   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9298   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9299   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9300   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9301   0017DE  0E00               	movlw	0
  9302   0017E0  6E05               	movwf	___flge@ff2^0,c
  9303   0017E2  0E00               	movlw	0
  9304   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9305   0017E6  0E60               	movlw	96
  9306   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9307   0017EA  0E41               	movlw	65
  9308   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9309   0017EE  ECE8  F01C         	call	___flge	;wreg free
  9310   0017F2  A0D8               	btfss	status,0,c
  9311   0017F4  EFFE  F00B         	goto	u4111
  9312   0017F8  EF00  F00C         	goto	u4110
  9313   0017FC                     u4111:
  9314   0017FC  EF7C  F00C         	goto	l4361
  9315   001800                     u4110:
  9316   001800  0E00               	movlw	0
  9317   001802  6E01               	movwf	___flge@ff1^0,c
  9318   001804  0E00               	movlw	0
  9319   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9320   001808  0E98               	movlw	152
  9321   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9322   00180C  0E41               	movlw	65
  9323   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9324   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9325   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9326   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9327   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9328   001820  ECE8  F01C         	call	___flge	;wreg free
  9329   001824  A0D8               	btfss	status,0,c
  9330   001826  EF17  F00C         	goto	u4121
  9331   00182A  EF19  F00C         	goto	u4120
  9332   00182E                     u4121:
  9333   00182E  EF7C  F00C         	goto	l4361
  9334   001832                     u4120:
  9335   001832                     
  9336                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9337   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9338   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9339   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9340   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9341   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9342   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9343   00184A  0ECD               	movlw	205
  9344   00184C  6E05               	movwf	___flge@ff2^0,c
  9345   00184E  0ECC               	movlw	204
  9346   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9347   001852  0E4C               	movlw	76
  9348   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9349   001856  0E3E               	movlw	62
  9350   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9351   00185A  ECE8  F01C         	call	___flge	;wreg free
  9352   00185E  A0D8               	btfss	status,0,c
  9353   001860  EF34  F00C         	goto	u4131
  9354   001864  EF36  F00C         	goto	u4130
  9355   001868                     u4131:
  9356   001868  EF55  F00C         	goto	l4349
  9357   00186C                     u4130:
  9358   00186C  0E1F               	movlw	31
  9359   00186E  6E01               	movwf	___flge@ff1^0,c
  9360   001870  0E85               	movlw	133
  9361   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9362   001874  0E6B               	movlw	107
  9363   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9364   001878  0E3E               	movlw	62
  9365   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9366   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9367   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9368   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9369   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9370   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9371   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9372   001894  ECE8  F01C         	call	___flge	;wreg free
  9373   001898  A0D8               	btfss	status,0,c
  9374   00189A  EF51  F00C         	goto	u4141
  9375   00189E  EF53  F00C         	goto	u4140
  9376   0018A2                     u4141:
  9377   0018A2  EF55  F00C         	goto	l4349
  9378   0018A6                     u4140:
  9379   0018A6  EF44  F008         	goto	l4213
  9380   0018AA                     l4349:
  9381   0018AA  EE20 F008          	lfsr	2,8
  9382   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9383   0018B0  26D9               	addwf	fsr2l,f,c
  9384   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9385   0018B4  22DA               	addwfc	fsr2h,f,c
  9386   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9387   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9388   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9389   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9390   0018C6  0E9A               	movlw	154
  9391   0018C8  6E05               	movwf	___flge@ff2^0,c
  9392   0018CA  0E99               	movlw	153
  9393   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9394   0018CE  0E19               	movlw	25
  9395   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9396   0018D2  0E3E               	movlw	62
  9397   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9398   0018D6  ECE8  F01C         	call	___flge	;wreg free
  9399   0018DA  A0D8               	btfss	status,0,c
  9400   0018DC  EF72  F00C         	goto	u4151
  9401   0018E0  EF74  F00C         	goto	u4150
  9402   0018E4                     u4151:
  9403   0018E4  EF76  F00C         	goto	l4357
  9404   0018E8                     u4150:
  9405   0018E8  EFA4  F00A         	goto	l4271
  9406   0018EC                     l4357:
  9407                           
  9408                           ;color.c: 223:             return 7;
  9409   0018EC  0E00               	movlw	0
  9410   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9411   0018F0  0E07               	movlw	7
  9412   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9413   0018F4  EF80  F00C         	goto	l74
  9414   0018F8                     l4361:
  9415                           
  9416                           ;color.c: 227:         return 10;
  9417   0018F8  0E00               	movlw	0
  9418   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9419   0018FC  0E0A               	movlw	10
  9420   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9421   001900                     l74:
  9422   001900  0012               	return		;funcret
  9423   001902                     __end_of_Colour_decider:
  9424                           	callstack 0
  9425                           
  9426 ;; *************** function ___xxtofl *****************
  9427 ;; Defined at:
  9428 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  sign            1    wreg     unsigned char 
  9431 ;;  val             4    0[COMRAM] long 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  sign            1    8[COMRAM] unsigned char 
  9434 ;;  arg             4   10[COMRAM] unsigned long 
  9435 ;;  exp             1    9[COMRAM] unsigned char 
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  4    0[COMRAM] unsigned char 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9446 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9447 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9448 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9449 ;;Total ram usage:       14 bytes
  9450 ;; Hardware stack levels used: 1
  9451 ;; Hardware stack levels required when called: 1
  9452 ;; This function calls:
  9453 ;;		Nothing
  9454 ;; This function is called by:
  9455 ;;		_colour_rel
  9456 ;;		_Colour_decider
  9457 ;;		_turnRight45
  9458 ;;		_turnLeft45
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text60
  9463   003274                     __ptext60:
  9464                           	callstack 0
  9465   003274                     ___xxtofl:
  9466                           	callstack 28
  9467                           
  9468                           ;incstack = 0
  9469                           ;___xxtofl@sign stored from wreg
  9470   003274  6E09               	movwf	___xxtofl@sign^0,c
  9471   003276  5009               	movf	___xxtofl@sign^0,w,c
  9472   003278  B4D8               	btfsc	status,2,c
  9473   00327A  EF41  F019         	goto	u3721
  9474   00327E  EF43  F019         	goto	u3720
  9475   003282                     u3721:
  9476   003282  EF65  F019         	goto	l1316
  9477   003286                     u3720:
  9478   003286  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9479   003288  EF4A  F019         	goto	u3730
  9480   00328C  EF48  F019         	goto	u3731
  9481   003290                     u3731:
  9482   003290  EF65  F019         	goto	l1316
  9483   003294                     u3730:
  9484   003294  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9485   003298  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9486   00329C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9487   0032A0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9488   0032A4  1E05               	comf	??___xxtofl^0,f,c
  9489   0032A6  1E06               	comf	(??___xxtofl+1)^0,f,c
  9490   0032A8  1E07               	comf	(??___xxtofl+2)^0,f,c
  9491   0032AA  1E08               	comf	(??___xxtofl+3)^0,f,c
  9492   0032AC  2A05               	incf	??___xxtofl^0,f,c
  9493   0032AE  0E00               	movlw	0
  9494   0032B0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9495   0032B2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9496   0032B4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9497   0032B6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9498   0032BA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9499   0032BE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9500   0032C2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9501   0032C6  EF6D  F019         	goto	l4083
  9502   0032CA                     l1316:
  9503   0032CA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9504   0032CE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9505   0032D2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9506   0032D6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9507   0032DA                     l4083:
  9508   0032DA  5001               	movf	___xxtofl@val^0,w,c
  9509   0032DC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9510   0032DE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9511   0032E0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9512   0032E2  A4D8               	btfss	status,2,c
  9513   0032E4  EF76  F019         	goto	u3741
  9514   0032E8  EF78  F019         	goto	u3740
  9515   0032EC                     u3741:
  9516   0032EC  EF82  F019         	goto	l4089
  9517   0032F0                     u3740:
  9518   0032F0  0E00               	movlw	0
  9519   0032F2  6E01               	movwf	?___xxtofl^0,c
  9520   0032F4  0E00               	movlw	0
  9521   0032F6  6E02               	movwf	(?___xxtofl+1)^0,c
  9522   0032F8  0E00               	movlw	0
  9523   0032FA  6E03               	movwf	(?___xxtofl+2)^0,c
  9524   0032FC  0E00               	movlw	0
  9525   0032FE  6E04               	movwf	(?___xxtofl+3)^0,c
  9526   003300  EF13  F01A         	goto	l1319
  9527   003304                     l4089:
  9528   003304  0E96               	movlw	150
  9529   003306  6E0A               	movwf	___xxtofl@exp^0,c
  9530   003308  EF8C  F019         	goto	l4093
  9531   00330C                     l4091:
  9532   00330C  2A0A               	incf	___xxtofl@exp^0,f,c
  9533   00330E  90D8               	bcf	status,0,c
  9534   003310  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9535   003312  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9536   003314  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9537   003316  320B               	rrcf	___xxtofl@arg^0,f,c
  9538   003318                     l4093:
  9539   003318  0E00               	movlw	0
  9540   00331A  140B               	andwf	___xxtofl@arg^0,w,c
  9541   00331C  6E05               	movwf	??___xxtofl^0,c
  9542   00331E  0E00               	movlw	0
  9543   003320  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9544   003322  6E06               	movwf	(??___xxtofl+1)^0,c
  9545   003324  0E00               	movlw	0
  9546   003326  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9547   003328  6E07               	movwf	(??___xxtofl+2)^0,c
  9548   00332A  0EFE               	movlw	254
  9549   00332C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9550   00332E  6E08               	movwf	(??___xxtofl+3)^0,c
  9551   003330  5005               	movf	??___xxtofl^0,w,c
  9552   003332  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9553   003334  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9554   003336  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9555   003338  A4D8               	btfss	status,2,c
  9556   00333A  EFA1  F019         	goto	u3751
  9557   00333E  EFA3  F019         	goto	u3750
  9558   003342                     u3751:
  9559   003342  EF86  F019         	goto	l4091
  9560   003346                     u3750:
  9561   003346  EFB1  F019         	goto	l1323
  9562   00334A                     l4095:
  9563   00334A  2A0A               	incf	___xxtofl@exp^0,f,c
  9564   00334C  0E01               	movlw	1
  9565   00334E  260B               	addwf	___xxtofl@arg^0,f,c
  9566   003350  0E00               	movlw	0
  9567   003352  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9568   003354  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9569   003356  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9570   003358  90D8               	bcf	status,0,c
  9571   00335A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9572   00335C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9573   00335E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9574   003360  320B               	rrcf	___xxtofl@arg^0,f,c
  9575   003362                     l1323:
  9576   003362  0E00               	movlw	0
  9577   003364  140B               	andwf	___xxtofl@arg^0,w,c
  9578   003366  6E05               	movwf	??___xxtofl^0,c
  9579   003368  0E00               	movlw	0
  9580   00336A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9581   00336C  6E06               	movwf	(??___xxtofl+1)^0,c
  9582   00336E  0E00               	movlw	0
  9583   003370  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9584   003372  6E07               	movwf	(??___xxtofl+2)^0,c
  9585   003374  0EFF               	movlw	255
  9586   003376  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9587   003378  6E08               	movwf	(??___xxtofl+3)^0,c
  9588   00337A  5005               	movf	??___xxtofl^0,w,c
  9589   00337C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9590   00337E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9591   003380  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9592   003382  A4D8               	btfss	status,2,c
  9593   003384  EFC6  F019         	goto	u3761
  9594   003388  EFC8  F019         	goto	u3760
  9595   00338C                     u3761:
  9596   00338C  EFA5  F019         	goto	l4095
  9597   003390                     u3760:
  9598   003390  EFD0  F019         	goto	l4103
  9599   003394                     l4101:
  9600   003394  060A               	decf	___xxtofl@exp^0,f,c
  9601   003396  90D8               	bcf	status,0,c
  9602   003398  360B               	rlcf	___xxtofl@arg^0,f,c
  9603   00339A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9604   00339C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9605   00339E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9606   0033A0                     l4103:
  9607   0033A0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9608   0033A2  EFD5  F019         	goto	u3771
  9609   0033A6  EFD7  F019         	goto	u3770
  9610   0033AA                     u3771:
  9611   0033AA  EFDF  F019         	goto	l1330
  9612   0033AE                     u3770:
  9613   0033AE  0E02               	movlw	2
  9614   0033B0  600A               	cpfslt	___xxtofl@exp^0,c
  9615   0033B2  EFDD  F019         	goto	u3781
  9616   0033B6  EFDF  F019         	goto	u3780
  9617   0033BA                     u3781:
  9618   0033BA  EFCA  F019         	goto	l4101
  9619   0033BE                     u3780:
  9620   0033BE                     l1330:
  9621   0033BE  B00A               	btfsc	___xxtofl@exp^0,0,c
  9622   0033C0  EFE4  F019         	goto	u3791
  9623   0033C4  EFE6  F019         	goto	u3790
  9624   0033C8                     u3791:
  9625   0033C8  EFE7  F019         	goto	l4109
  9626   0033CC                     u3790:
  9627   0033CC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9628   0033CE                     l4109:
  9629   0033CE  90D8               	bcf	status,0,c
  9630   0033D0  320A               	rrcf	___xxtofl@exp^0,f,c
  9631   0033D2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9632   0033D6  6A06               	clrf	(??___xxtofl+1)^0,c
  9633   0033D8  6A07               	clrf	(??___xxtofl+2)^0,c
  9634   0033DA  6A08               	clrf	(??___xxtofl+3)^0,c
  9635   0033DC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9636   0033E0  6A07               	clrf	(??___xxtofl+2)^0,c
  9637   0033E2  6A06               	clrf	(??___xxtofl+1)^0,c
  9638   0033E4  6A05               	clrf	??___xxtofl^0,c
  9639   0033E6  5005               	movf	??___xxtofl^0,w,c
  9640   0033E8  120B               	iorwf	___xxtofl@arg^0,f,c
  9641   0033EA  5006               	movf	(??___xxtofl+1)^0,w,c
  9642   0033EC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9643   0033EE  5007               	movf	(??___xxtofl+2)^0,w,c
  9644   0033F0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9645   0033F2  5008               	movf	(??___xxtofl+3)^0,w,c
  9646   0033F4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9647   0033F6  5009               	movf	___xxtofl@sign^0,w,c
  9648   0033F8  B4D8               	btfsc	status,2,c
  9649   0033FA  EF01  F01A         	goto	u3801
  9650   0033FE  EF03  F01A         	goto	u3800
  9651   003402                     u3801:
  9652   003402  EF0B  F01A         	goto	l4119
  9653   003406                     u3800:
  9654   003406  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9655   003408  EF0A  F01A         	goto	u3810
  9656   00340C  EF08  F01A         	goto	u3811
  9657   003410                     u3811:
  9658   003410  EF0B  F01A         	goto	l4119
  9659   003414                     u3810:
  9660   003414  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9661   003416                     l4119:
  9662   003416  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9663   00341A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9664   00341E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9665   003422  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9666   003426                     l1319:
  9667   003426  0012               	return		;funcret
  9668   003428                     __end_of___xxtofl:
  9669                           	callstack 0
  9670                           
  9671 ;; *************** function ___flsub *****************
  9672 ;; Defined at:
  9673 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  b               4   16[COMRAM] unsigned char 
  9676 ;;  a               4   20[COMRAM] unsigned char 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;		None
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  4   16[COMRAM] unsigned char 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9688 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9691 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9692 ;;Total ram usage:        8 bytes
  9693 ;; Hardware stack levels used: 1
  9694 ;; Hardware stack levels required when called: 2
  9695 ;; This function calls:
  9696 ;;		___fladd
  9697 ;; This function is called by:
  9698 ;;		_Colour_decider
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text61
  9703   0047FC                     __ptext61:
  9704                           	callstack 0
  9705   0047FC                     ___flsub:
  9706                           	callstack 27
  9707   0047FC  0E00               	movlw	0
  9708   0047FE  1A15               	xorwf	___flsub@a^0,f,c
  9709   004800  0E00               	movlw	0
  9710   004802  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9711   004804  0E00               	movlw	0
  9712   004806  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9713   004808  0E80               	movlw	128
  9714   00480A  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9715   00480C  C011  F001         	movff	___flsub@b,___fladd@b
  9716   004810  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9717   004814  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9718   004818  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9719   00481C  C015  F005         	movff	___flsub@a,___fladd@a
  9720   004820  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9721   004824  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9722   004828  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9723   00482C  EC0B  F00F         	call	___fladd	;wreg free
  9724   004830  C001  F011         	movff	?___fladd,?___flsub
  9725   004834  C002  F012         	movff	?___fladd+1,?___flsub+1
  9726   004838  C003  F013         	movff	?___fladd+2,?___flsub+2
  9727   00483C  C004  F014         	movff	?___fladd+3,?___flsub+3
  9728   004840  0012               	return		;funcret
  9729   004842                     __end_of___flsub:
  9730                           	callstack 0
  9731                           
  9732 ;; *************** function ___fladd *****************
  9733 ;; Defined at:
  9734 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  b               4    0[COMRAM] unsigned char 
  9737 ;;  a               4    4[COMRAM] unsigned char 
  9738 ;; Auto vars:     Size  Location     Type
  9739 ;;  grs             1   15[COMRAM] unsigned char 
  9740 ;;  bexp            1   14[COMRAM] unsigned char 
  9741 ;;  aexp            1   13[COMRAM] unsigned char 
  9742 ;;  signs           1   12[COMRAM] unsigned char 
  9743 ;; Return value:  Size  Location     Type
  9744 ;;                  4    0[COMRAM] unsigned char 
  9745 ;; Registers used:
  9746 ;;		wreg, status,2, status,0
  9747 ;; Tracked objects:
  9748 ;;		On entry : 0/0
  9749 ;;		On exit  : 0/0
  9750 ;;		Unchanged: 0/0
  9751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9752 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9753 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9754 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9755 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9756 ;;Total ram usage:       16 bytes
  9757 ;; Hardware stack levels used: 1
  9758 ;; Hardware stack levels required when called: 1
  9759 ;; This function calls:
  9760 ;;		Nothing
  9761 ;; This function is called by:
  9762 ;;		_colour_rel
  9763 ;;		_Colour_decider
  9764 ;;		___flsub
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           	psect	text62
  9769   001E16                     __ptext62:
  9770                           	callstack 0
  9771   001E16                     ___fladd:
  9772                           	callstack 28
  9773   001E16  5004               	movf	(___fladd@b+3)^0,w,c
  9774   001E18  0B80               	andlw	128
  9775   001E1A  6E0D               	movwf	___fladd@signs^0,c
  9776   001E1C  5004               	movf	(___fladd@b+3)^0,w,c
  9777   001E1E  2404               	addwf	(___fladd@b+3)^0,w,c
  9778   001E20  6E0F               	movwf	___fladd@bexp^0,c
  9779   001E22  AE03               	btfss	(___fladd@b+2)^0,7,c
  9780   001E24  EF16  F00F         	goto	u2791
  9781   001E28  EF18  F00F         	goto	u2790
  9782   001E2C                     u2791:
  9783   001E2C  EF19  F00F         	goto	l3471
  9784   001E30                     u2790:
  9785   001E30  800F               	bsf	___fladd@bexp^0,0,c
  9786   001E32                     l3471:
  9787   001E32  500F               	movf	___fladd@bexp^0,w,c
  9788   001E34  B4D8               	btfsc	status,2,c
  9789   001E36  EF1F  F00F         	goto	u2801
  9790   001E3A  EF21  F00F         	goto	u2800
  9791   001E3E                     u2801:
  9792   001E3E  EF36  F00F         	goto	l3481
  9793   001E42                     u2800:
  9794   001E42  280F               	incf	___fladd@bexp^0,w,c
  9795   001E44  A4D8               	btfss	status,2,c
  9796   001E46  EF27  F00F         	goto	u2811
  9797   001E4A  EF29  F00F         	goto	u2810
  9798   001E4E                     u2811:
  9799   001E4E  EF31  F00F         	goto	l3477
  9800   001E52                     u2810:
  9801   001E52  0E00               	movlw	0
  9802   001E54  6E01               	movwf	___fladd@b^0,c
  9803   001E56  0E00               	movlw	0
  9804   001E58  6E02               	movwf	(___fladd@b+1)^0,c
  9805   001E5A  0E00               	movlw	0
  9806   001E5C  6E03               	movwf	(___fladd@b+2)^0,c
  9807   001E5E  0E00               	movlw	0
  9808   001E60  6E04               	movwf	(___fladd@b+3)^0,c
  9809   001E62                     l3477:
  9810   001E62  8E03               	bsf	(___fladd@b+2)^0,7,c
  9811   001E64  0E00               	movlw	0
  9812   001E66  6E04               	movwf	(___fladd@b+3)^0,c
  9813   001E68  EF3E  F00F         	goto	l3483
  9814   001E6C                     l3481:
  9815   001E6C  0E00               	movlw	0
  9816   001E6E  6E01               	movwf	___fladd@b^0,c
  9817   001E70  0E00               	movlw	0
  9818   001E72  6E02               	movwf	(___fladd@b+1)^0,c
  9819   001E74  0E00               	movlw	0
  9820   001E76  6E03               	movwf	(___fladd@b+2)^0,c
  9821   001E78  0E00               	movlw	0
  9822   001E7A  6E04               	movwf	(___fladd@b+3)^0,c
  9823   001E7C                     l3483:
  9824   001E7C  5008               	movf	(___fladd@a+3)^0,w,c
  9825   001E7E  0B80               	andlw	128
  9826   001E80  6E0E               	movwf	___fladd@aexp^0,c
  9827   001E82  500D               	movf	___fladd@signs^0,w,c
  9828   001E84  180E               	xorwf	___fladd@aexp^0,w,c
  9829   001E86  B4D8               	btfsc	status,2,c
  9830   001E88  EF48  F00F         	goto	u2821
  9831   001E8C  EF4A  F00F         	goto	u2820
  9832   001E90                     u2821:
  9833   001E90  EF4B  F00F         	goto	l3489
  9834   001E94                     u2820:
  9835   001E94  8C0D               	bsf	___fladd@signs^0,6,c
  9836   001E96                     l3489:
  9837   001E96  5008               	movf	(___fladd@a+3)^0,w,c
  9838   001E98  2408               	addwf	(___fladd@a+3)^0,w,c
  9839   001E9A  6E0E               	movwf	___fladd@aexp^0,c
  9840   001E9C  AE07               	btfss	(___fladd@a+2)^0,7,c
  9841   001E9E  EF53  F00F         	goto	u2831
  9842   001EA2  EF55  F00F         	goto	u2830
  9843   001EA6                     u2831:
  9844   001EA6  EF56  F00F         	goto	l3495
  9845   001EAA                     u2830:
  9846   001EAA  800E               	bsf	___fladd@aexp^0,0,c
  9847   001EAC                     l3495:
  9848   001EAC  500E               	movf	___fladd@aexp^0,w,c
  9849   001EAE  B4D8               	btfsc	status,2,c
  9850   001EB0  EF5C  F00F         	goto	u2841
  9851   001EB4  EF5E  F00F         	goto	u2840
  9852   001EB8                     u2841:
  9853   001EB8  EF73  F00F         	goto	l3505
  9854   001EBC                     u2840:
  9855   001EBC  280E               	incf	___fladd@aexp^0,w,c
  9856   001EBE  A4D8               	btfss	status,2,c
  9857   001EC0  EF64  F00F         	goto	u2851
  9858   001EC4  EF66  F00F         	goto	u2850
  9859   001EC8                     u2851:
  9860   001EC8  EF6E  F00F         	goto	l3501
  9861   001ECC                     u2850:
  9862   001ECC  0E00               	movlw	0
  9863   001ECE  6E05               	movwf	___fladd@a^0,c
  9864   001ED0  0E00               	movlw	0
  9865   001ED2  6E06               	movwf	(___fladd@a+1)^0,c
  9866   001ED4  0E00               	movlw	0
  9867   001ED6  6E07               	movwf	(___fladd@a+2)^0,c
  9868   001ED8  0E00               	movlw	0
  9869   001EDA  6E08               	movwf	(___fladd@a+3)^0,c
  9870   001EDC                     l3501:
  9871   001EDC  8E07               	bsf	(___fladd@a+2)^0,7,c
  9872   001EDE  0E00               	movlw	0
  9873   001EE0  6E08               	movwf	(___fladd@a+3)^0,c
  9874   001EE2  EF7B  F00F         	goto	l3507
  9875   001EE6                     l3505:
  9876   001EE6  0E00               	movlw	0
  9877   001EE8  6E05               	movwf	___fladd@a^0,c
  9878   001EEA  0E00               	movlw	0
  9879   001EEC  6E06               	movwf	(___fladd@a+1)^0,c
  9880   001EEE  0E00               	movlw	0
  9881   001EF0  6E07               	movwf	(___fladd@a+2)^0,c
  9882   001EF2  0E00               	movlw	0
  9883   001EF4  6E08               	movwf	(___fladd@a+3)^0,c
  9884   001EF6                     l3507:
  9885   001EF6  500F               	movf	___fladd@bexp^0,w,c
  9886   001EF8  5C0E               	subwf	___fladd@aexp^0,w,c
  9887   001EFA  B0D8               	btfsc	status,0,c
  9888   001EFC  EF82  F00F         	goto	u2861
  9889   001F00  EF84  F00F         	goto	u2860
  9890   001F04                     u2861:
  9891   001F04  EFAB  F00F         	goto	l3543
  9892   001F08                     u2860:
  9893   001F08  AC0D               	btfss	___fladd@signs^0,6,c
  9894   001F0A  EF89  F00F         	goto	u2871
  9895   001F0E  EF8B  F00F         	goto	u2870
  9896   001F12                     u2871:
  9897   001F12  EF8D  F00F         	goto	l3513
  9898   001F16                     u2870:
  9899   001F16  0E80               	movlw	128
  9900   001F18  1A0D               	xorwf	___fladd@signs^0,f,c
  9901   001F1A                     l3513:
  9902   001F1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9903   001F1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9904   001F22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9905   001F26  C001  F010         	movff	___fladd@b,___fladd@grs
  9906   001F2A  C005  F001         	movff	___fladd@a,___fladd@b
  9907   001F2E  C010  F005         	movff	___fladd@grs,___fladd@a
  9908   001F32  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9909   001F36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9910   001F3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9911   001F3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9912   001F42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9913   001F46  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9914   001F4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9915   001F4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9916   001F52  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9917   001F56                     l3543:
  9918   001F56  0E00               	movlw	0
  9919   001F58  6E10               	movwf	___fladd@grs^0,c
  9920   001F5A  500F               	movf	___fladd@bexp^0,w,c
  9921   001F5C  C00E  F009         	movff	___fladd@aexp,??___fladd
  9922   001F60  6A0A               	clrf	(??___fladd+1)^0,c
  9923   001F62  5E09               	subwf	??___fladd^0,f,c
  9924   001F64  0E00               	movlw	0
  9925   001F66  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9926   001F68  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9927   001F6A  EFC0  F00F         	goto	u2881
  9928   001F6E  500A               	movf	(??___fladd+1)^0,w,c
  9929   001F70  E109               	bnz	u2880
  9930   001F72  0E1A               	movlw	26
  9931   001F74  5C09               	subwf	??___fladd^0,w,c
  9932   001F76  A0D8               	btfss	status,0,c
  9933   001F78  EFC0  F00F         	goto	u2881
  9934   001F7C  EFC2  F00F         	goto	u2880
  9935   001F80                     u2881:
  9936   001F80  EFF9  F00F         	goto	l1190
  9937   001F84                     u2880:
  9938   001F84  5001               	movf	___fladd@b^0,w,c
  9939   001F86  1002               	iorwf	(___fladd@b+1)^0,w,c
  9940   001F88  1003               	iorwf	(___fladd@b+2)^0,w,c
  9941   001F8A  1004               	iorwf	(___fladd@b+3)^0,w,c
  9942   001F8C  A4D8               	btfss	status,2,c
  9943   001F8E  EFCB  F00F         	goto	u2891
  9944   001F92  EFCE  F00F         	goto	u2890
  9945   001F96                     u2891:
  9946   001F96  0E01               	movlw	1
  9947   001F98  EFCF  F00F         	goto	u2900
  9948   001F9C                     u2890:
  9949   001F9C  0E00               	movlw	0
  9950   001F9E                     u2900:
  9951   001F9E  6E10               	movwf	___fladd@grs^0,c
  9952   001FA0  0E00               	movlw	0
  9953   001FA2  6E01               	movwf	___fladd@b^0,c
  9954   001FA4  0E00               	movlw	0
  9955   001FA6  6E02               	movwf	(___fladd@b+1)^0,c
  9956   001FA8  0E00               	movlw	0
  9957   001FAA  6E03               	movwf	(___fladd@b+2)^0,c
  9958   001FAC  0E00               	movlw	0
  9959   001FAE  6E04               	movwf	(___fladd@b+3)^0,c
  9960   001FB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9961   001FB4  EF02  F010         	goto	l1189
  9962   001FB8                     l1191:
  9963   001FB8  A010               	btfss	___fladd@grs^0,0,c
  9964   001FBA  EFE1  F00F         	goto	u2911
  9965   001FBE  EFE3  F00F         	goto	u2910
  9966   001FC2                     u2911:
  9967   001FC2  EFE9  F00F         	goto	l3555
  9968   001FC6                     u2910:
  9969   001FC6  90D8               	bcf	status,0,c
  9970   001FC8  3010               	rrcf	___fladd@grs^0,w,c
  9971   001FCA  0901               	iorlw	1
  9972   001FCC  6E10               	movwf	___fladd@grs^0,c
  9973   001FCE  EFEB  F00F         	goto	l3557
  9974   001FD2                     l3555:
  9975   001FD2  90D8               	bcf	status,0,c
  9976   001FD4  3210               	rrcf	___fladd@grs^0,f,c
  9977   001FD6                     l3557:
  9978   001FD6  A001               	btfss	___fladd@b^0,0,c
  9979   001FD8  EFF0  F00F         	goto	u2921
  9980   001FDC  EFF2  F00F         	goto	u2920
  9981   001FE0                     u2921:
  9982   001FE0  EFF3  F00F         	goto	l3561
  9983   001FE4                     u2920:
  9984   001FE4  8E10               	bsf	___fladd@grs^0,7,c
  9985   001FE6                     l3561:
  9986   001FE6  3404               	rlcf	(___fladd@b+3)^0,w,c
  9987   001FE8  3204               	rrcf	(___fladd@b+3)^0,f,c
  9988   001FEA  3203               	rrcf	(___fladd@b+2)^0,f,c
  9989   001FEC  3202               	rrcf	(___fladd@b+1)^0,f,c
  9990   001FEE  3201               	rrcf	___fladd@b^0,f,c
  9991   001FF0  2A0F               	incf	___fladd@bexp^0,f,c
  9992   001FF2                     l1190:
  9993   001FF2  500E               	movf	___fladd@aexp^0,w,c
  9994   001FF4  5C0F               	subwf	___fladd@bexp^0,w,c
  9995   001FF6  A0D8               	btfss	status,0,c
  9996   001FF8  EF00  F010         	goto	u2931
  9997   001FFC  EF02  F010         	goto	u2930
  9998   002000                     u2931:
  9999   002000  EFDC  F00F         	goto	l1191
 10000   002004                     u2930:
 10001   002004                     l1189:
 10002   002004  BC0D               	btfsc	___fladd@signs^0,6,c
 10003   002006  EF07  F010         	goto	u2941
 10004   00200A  EF09  F010         	goto	u2940
 10005   00200E                     u2941:
 10006   00200E  EF49  F010         	goto	l3589
 10007   002012                     u2940:
 10008   002012  500F               	movf	___fladd@bexp^0,w,c
 10009   002014  A4D8               	btfss	status,2,c
 10010   002016  EF0F  F010         	goto	u2951
 10011   00201A  EF11  F010         	goto	u2950
 10012   00201E                     u2951:
 10013   00201E  EF1B  F010         	goto	l3571
 10014   002022                     u2950:
 10015   002022  0E00               	movlw	0
 10016   002024  6E01               	movwf	?___fladd^0,c
 10017   002026  0E00               	movlw	0
 10018   002028  6E02               	movwf	(?___fladd+1)^0,c
 10019   00202A  0E00               	movlw	0
 10020   00202C  6E03               	movwf	(?___fladd+2)^0,c
 10021   00202E  0E00               	movlw	0
 10022   002030  6E04               	movwf	(?___fladd+3)^0,c
 10023   002032  EF6A  F011         	goto	l1198
 10024   002036                     l3571:
 10025   002036  5005               	movf	___fladd@a^0,w,c
 10026   002038  2601               	addwf	___fladd@b^0,f,c
 10027   00203A  5006               	movf	(___fladd@a+1)^0,w,c
 10028   00203C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10029   00203E  5007               	movf	(___fladd@a+2)^0,w,c
 10030   002040  2203               	addwfc	(___fladd@b+2)^0,f,c
 10031   002042  5008               	movf	(___fladd@a+3)^0,w,c
 10032   002044  2204               	addwfc	(___fladd@b+3)^0,f,c
 10033   002046  A004               	btfss	(___fladd@b+3)^0,0,c
 10034   002048  EF28  F010         	goto	u2961
 10035   00204C  EF2A  F010         	goto	u2960
 10036   002050                     u2961:
 10037   002050  EFD6  F010         	goto	l3625
 10038   002054                     u2960:
 10039   002054  A010               	btfss	___fladd@grs^0,0,c
 10040   002056  EF2F  F010         	goto	u2971
 10041   00205A  EF31  F010         	goto	u2970
 10042   00205E                     u2971:
 10043   00205E  EF37  F010         	goto	l3579
 10044   002062                     u2970:
 10045   002062  90D8               	bcf	status,0,c
 10046   002064  3010               	rrcf	___fladd@grs^0,w,c
 10047   002066  0901               	iorlw	1
 10048   002068  6E10               	movwf	___fladd@grs^0,c
 10049   00206A  EF39  F010         	goto	l3581
 10050   00206E                     l3579:
 10051   00206E  90D8               	bcf	status,0,c
 10052   002070  3210               	rrcf	___fladd@grs^0,f,c
 10053   002072                     l3581:
 10054   002072  A001               	btfss	___fladd@b^0,0,c
 10055   002074  EF3E  F010         	goto	u2981
 10056   002078  EF40  F010         	goto	u2980
 10057   00207C                     u2981:
 10058   00207C  EF41  F010         	goto	l3585
 10059   002080                     u2980:
 10060   002080  8E10               	bsf	___fladd@grs^0,7,c
 10061   002082                     l3585:
 10062   002082  3404               	rlcf	(___fladd@b+3)^0,w,c
 10063   002084  3204               	rrcf	(___fladd@b+3)^0,f,c
 10064   002086  3203               	rrcf	(___fladd@b+2)^0,f,c
 10065   002088  3202               	rrcf	(___fladd@b+1)^0,f,c
 10066   00208A  3201               	rrcf	___fladd@b^0,f,c
 10067   00208C  2A0F               	incf	___fladd@bexp^0,f,c
 10068   00208E  EFD6  F010         	goto	l3625
 10069   002092                     l3589:
 10070   002092  5005               	movf	___fladd@a^0,w,c
 10071   002094  5C01               	subwf	___fladd@b^0,w,c
 10072   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10073   002098  5802               	subwfb	(___fladd@b+1)^0,w,c
 10074   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10075   00209C  5803               	subwfb	(___fladd@b+2)^0,w,c
 10076   00209E  5004               	movf	(___fladd@b+3)^0,w,c
 10077   0020A0  0A80               	xorlw	128
 10078   0020A2  6E09               	movwf	??___fladd^0,c
 10079   0020A4  5008               	movf	(___fladd@a+3)^0,w,c
 10080   0020A6  0A80               	xorlw	128
 10081   0020A8  5809               	subwfb	??___fladd^0,w,c
 10082   0020AA  B0D8               	btfsc	status,0,c
 10083   0020AC  EF5A  F010         	goto	u2991
 10084   0020B0  EF5C  F010         	goto	u2990
 10085   0020B4                     u2991:
 10086   0020B4  EF87  F010         	goto	l3599
 10087   0020B8                     u2990:
 10088   0020B8  5001               	movf	___fladd@b^0,w,c
 10089   0020BA  5C05               	subwf	___fladd@a^0,w,c
 10090   0020BC  6E09               	movwf	??___fladd^0,c
 10091   0020BE  5002               	movf	(___fladd@b+1)^0,w,c
 10092   0020C0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10093   0020C2  6E0A               	movwf	(??___fladd+1)^0,c
 10094   0020C4  5003               	movf	(___fladd@b+2)^0,w,c
 10095   0020C6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10096   0020C8  6E0B               	movwf	(??___fladd+2)^0,c
 10097   0020CA  5004               	movf	(___fladd@b+3)^0,w,c
 10098   0020CC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10099   0020CE  6E0C               	movwf	(??___fladd+3)^0,c
 10100   0020D0  0EFF               	movlw	255
 10101   0020D2  2409               	addwf	??___fladd^0,w,c
 10102   0020D4  6E01               	movwf	___fladd@b^0,c
 10103   0020D6  0EFF               	movlw	255
 10104   0020D8  200A               	addwfc	(??___fladd+1)^0,w,c
 10105   0020DA  6E02               	movwf	(___fladd@b+1)^0,c
 10106   0020DC  0EFF               	movlw	255
 10107   0020DE  200B               	addwfc	(??___fladd+2)^0,w,c
 10108   0020E0  6E03               	movwf	(___fladd@b+2)^0,c
 10109   0020E2  0EFF               	movlw	255
 10110   0020E4  200C               	addwfc	(??___fladd+3)^0,w,c
 10111   0020E6  6E04               	movwf	(___fladd@b+3)^0,c
 10112   0020E8  0E80               	movlw	128
 10113   0020EA  1A0D               	xorwf	___fladd@signs^0,f,c
 10114   0020EC  6C10               	negf	___fladd@grs^0,c
 10115   0020EE  5010               	movf	___fladd@grs^0,w,c
 10116   0020F0  A4D8               	btfss	status,2,c
 10117   0020F2  EF7D  F010         	goto	u3001
 10118   0020F6  EF7F  F010         	goto	u3000
 10119   0020FA                     u3001:
 10120   0020FA  EF8F  F010         	goto	l1206
 10121   0020FE                     u3000:
 10122   0020FE  0E01               	movlw	1
 10123   002100  2601               	addwf	___fladd@b^0,f,c
 10124   002102  0E00               	movlw	0
 10125   002104  2202               	addwfc	(___fladd@b+1)^0,f,c
 10126   002106  2203               	addwfc	(___fladd@b+2)^0,f,c
 10127   002108  2204               	addwfc	(___fladd@b+3)^0,f,c
 10128   00210A  EF8F  F010         	goto	l1206
 10129   00210E                     l3599:
 10130   00210E  5005               	movf	___fladd@a^0,w,c
 10131   002110  5E01               	subwf	___fladd@b^0,f,c
 10132   002112  5006               	movf	(___fladd@a+1)^0,w,c
 10133   002114  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10134   002116  5007               	movf	(___fladd@a+2)^0,w,c
 10135   002118  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10136   00211A  5008               	movf	(___fladd@a+3)^0,w,c
 10137   00211C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10138   00211E                     l1206:
 10139   00211E  5001               	movf	___fladd@b^0,w,c
 10140   002120  1002               	iorwf	(___fladd@b+1)^0,w,c
 10141   002122  1003               	iorwf	(___fladd@b+2)^0,w,c
 10142   002124  1004               	iorwf	(___fladd@b+3)^0,w,c
 10143   002126  A4D8               	btfss	status,2,c
 10144   002128  EF98  F010         	goto	u3011
 10145   00212C  EF9A  F010         	goto	u3010
 10146   002130                     u3011:
 10147   002130  EFCF  F010         	goto	l3623
 10148   002134                     u3010:
 10149   002134  5010               	movf	___fladd@grs^0,w,c
 10150   002136  A4D8               	btfss	status,2,c
 10151   002138  EFA0  F010         	goto	u3021
 10152   00213C  EFA2  F010         	goto	u3020
 10153   002140                     u3021:
 10154   002140  EFCF  F010         	goto	l3623
 10155   002144                     u3020:
 10156   002144  0E00               	movlw	0
 10157   002146  6E01               	movwf	?___fladd^0,c
 10158   002148  0E00               	movlw	0
 10159   00214A  6E02               	movwf	(?___fladd+1)^0,c
 10160   00214C  0E00               	movlw	0
 10161   00214E  6E03               	movwf	(?___fladd+2)^0,c
 10162   002150  0E00               	movlw	0
 10163   002152  6E04               	movwf	(?___fladd+3)^0,c
 10164   002154  EF6A  F011         	goto	l1198
 10165   002158                     l3607:
 10166   002158  90D8               	bcf	status,0,c
 10167   00215A  3601               	rlcf	___fladd@b^0,f,c
 10168   00215C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10169   00215E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10170   002160  3604               	rlcf	(___fladd@b+3)^0,f,c
 10171   002162  AE10               	btfss	___fladd@grs^0,7,c
 10172   002164  EFB6  F010         	goto	u3031
 10173   002168  EFB8  F010         	goto	u3030
 10174   00216C                     u3031:
 10175   00216C  EFB9  F010         	goto	l3613
 10176   002170                     u3030:
 10177   002170  8001               	bsf	___fladd@b^0,0,c
 10178   002172                     l3613:
 10179   002172  A010               	btfss	___fladd@grs^0,0,c
 10180   002174  EFBE  F010         	goto	u3041
 10181   002178  EFC0  F010         	goto	u3040
 10182   00217C                     u3041:
 10183   00217C  EFC4  F010         	goto	l3617
 10184   002180                     u3040:
 10185   002180  80D8               	bsf	status,0,c
 10186   002182  3610               	rlcf	___fladd@grs^0,f,c
 10187   002184  EFC6  F010         	goto	l3619
 10188   002188                     l3617:
 10189   002188  90D8               	bcf	status,0,c
 10190   00218A  3610               	rlcf	___fladd@grs^0,f,c
 10191   00218C                     l3619:
 10192   00218C  500F               	movf	___fladd@bexp^0,w,c
 10193   00218E  B4D8               	btfsc	status,2,c
 10194   002190  EFCC  F010         	goto	u3051
 10195   002194  EFCE  F010         	goto	u3050
 10196   002198                     u3051:
 10197   002198  EFCF  F010         	goto	l3623
 10198   00219C                     u3050:
 10199   00219C  060F               	decf	___fladd@bexp^0,f,c
 10200   00219E                     l3623:
 10201   00219E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10202   0021A0  EFD4  F010         	goto	u3061
 10203   0021A4  EFD6  F010         	goto	u3060
 10204   0021A8                     u3061:
 10205   0021A8  EFAC  F010         	goto	l3607
 10206   0021AC                     u3060:
 10207   0021AC                     l3625:
 10208   0021AC  0E00               	movlw	0
 10209   0021AE  6E0E               	movwf	___fladd@aexp^0,c
 10210   0021B0  AE10               	btfss	___fladd@grs^0,7,c
 10211   0021B2  EFDD  F010         	goto	u3071
 10212   0021B6  EFDF  F010         	goto	u3070
 10213   0021BA                     u3071:
 10214   0021BA  EFF7  F010         	goto	l1215
 10215   0021BE                     u3070:
 10216   0021BE  C010  F009         	movff	___fladd@grs,??___fladd
 10217   0021C2  0E7F               	movlw	127
 10218   0021C4  1609               	andwf	??___fladd^0,f,c
 10219   0021C6  B4D8               	btfsc	status,2,c
 10220   0021C8  EFE8  F010         	goto	u3081
 10221   0021CC  EFEA  F010         	goto	u3080
 10222   0021D0                     u3081:
 10223   0021D0  EFEE  F010         	goto	l1216
 10224   0021D4                     u3080:
 10225   0021D4                     l3631:
 10226   0021D4  0E01               	movlw	1
 10227   0021D6  6E0E               	movwf	___fladd@aexp^0,c
 10228   0021D8  EFF7  F010         	goto	l1215
 10229   0021DC                     l1216:
 10230   0021DC  A001               	btfss	___fladd@b^0,0,c
 10231   0021DE  EFF3  F010         	goto	u3091
 10232   0021E2  EFF5  F010         	goto	u3090
 10233   0021E6                     u3091:
 10234   0021E6  EFF7  F010         	goto	l1215
 10235   0021EA                     u3090:
 10236   0021EA  EFEA  F010         	goto	l3631
 10237   0021EE                     l1215:
 10238   0021EE  500E               	movf	___fladd@aexp^0,w,c
 10239   0021F0  B4D8               	btfsc	status,2,c
 10240   0021F2  EFFD  F010         	goto	u3101
 10241   0021F6  EFFF  F010         	goto	u3100
 10242   0021FA                     u3101:
 10243   0021FA  EF2A  F011         	goto	l3643
 10244   0021FE                     u3100:
 10245   0021FE  0E01               	movlw	1
 10246   002200  2601               	addwf	___fladd@b^0,f,c
 10247   002202  0E00               	movlw	0
 10248   002204  2202               	addwfc	(___fladd@b+1)^0,f,c
 10249   002206  2203               	addwfc	(___fladd@b+2)^0,f,c
 10250   002208  2204               	addwfc	(___fladd@b+3)^0,f,c
 10251   00220A  A004               	btfss	(___fladd@b+3)^0,0,c
 10252   00220C  EF0A  F011         	goto	u3111
 10253   002210  EF0C  F011         	goto	u3110
 10254   002214                     u3111:
 10255   002214  EF2A  F011         	goto	l3643
 10256   002218                     u3110:
 10257   002218  C001  F009         	movff	___fladd@b,??___fladd
 10258   00221C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10259   002220  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10260   002224  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10261   002228  340C               	rlcf	(??___fladd+3)^0,w,c
 10262   00222A  320C               	rrcf	(??___fladd+3)^0,f,c
 10263   00222C  320B               	rrcf	(??___fladd+2)^0,f,c
 10264   00222E  320A               	rrcf	(??___fladd+1)^0,f,c
 10265   002230  3209               	rrcf	??___fladd^0,f,c
 10266   002232  C009  F001         	movff	??___fladd,___fladd@b
 10267   002236  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10268   00223A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10269   00223E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10270   002242  280F               	incf	___fladd@bexp^0,w,c
 10271   002244  B4D8               	btfsc	status,2,c
 10272   002246  EF27  F011         	goto	u3121
 10273   00224A  EF29  F011         	goto	u3120
 10274   00224E                     u3121:
 10275   00224E  EF2A  F011         	goto	l3643
 10276   002252                     u3120:
 10277   002252  2A0F               	incf	___fladd@bexp^0,f,c
 10278   002254                     l3643:
 10279   002254  280F               	incf	___fladd@bexp^0,w,c
 10280   002256  B4D8               	btfsc	status,2,c
 10281   002258  EF30  F011         	goto	u3131
 10282   00225C  EF32  F011         	goto	u3130
 10283   002260                     u3131:
 10284   002260  EF3A  F011         	goto	l3647
 10285   002264                     u3130:
 10286   002264  500F               	movf	___fladd@bexp^0,w,c
 10287   002266  A4D8               	btfss	status,2,c
 10288   002268  EF38  F011         	goto	u3141
 10289   00226C  EF3A  F011         	goto	u3140
 10290   002270                     u3141:
 10291   002270  EF4C  F011         	goto	l3651
 10292   002274                     u3140:
 10293   002274                     l3647:
 10294   002274  0E00               	movlw	0
 10295   002276  6E01               	movwf	___fladd@b^0,c
 10296   002278  0E00               	movlw	0
 10297   00227A  6E02               	movwf	(___fladd@b+1)^0,c
 10298   00227C  0E00               	movlw	0
 10299   00227E  6E03               	movwf	(___fladd@b+2)^0,c
 10300   002280  0E00               	movlw	0
 10301   002282  6E04               	movwf	(___fladd@b+3)^0,c
 10302   002284  500F               	movf	___fladd@bexp^0,w,c
 10303   002286  A4D8               	btfss	status,2,c
 10304   002288  EF48  F011         	goto	u3151
 10305   00228C  EF4A  F011         	goto	u3150
 10306   002290                     u3151:
 10307   002290  EF4C  F011         	goto	l3651
 10308   002294                     u3150:
 10309   002294  0E00               	movlw	0
 10310   002296  6E0D               	movwf	___fladd@signs^0,c
 10311   002298                     l3651:
 10312   002298  A00F               	btfss	___fladd@bexp^0,0,c
 10313   00229A  EF51  F011         	goto	u3161
 10314   00229E  EF53  F011         	goto	u3160
 10315   0022A2                     u3161:
 10316   0022A2  EF56  F011         	goto	l3655
 10317   0022A6                     u3160:
 10318   0022A6  8E03               	bsf	(___fladd@b+2)^0,7,c
 10319   0022A8  EF57  F011         	goto	l3657
 10320   0022AC                     l3655:
 10321   0022AC  9E03               	bcf	(___fladd@b+2)^0,7,c
 10322   0022AE                     l3657:
 10323   0022AE  90D8               	bcf	status,0,c
 10324   0022B0  300F               	rrcf	___fladd@bexp^0,w,c
 10325   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10326   0022B4  AE0D               	btfss	___fladd@signs^0,7,c
 10327   0022B6  EF5F  F011         	goto	u3171
 10328   0022BA  EF61  F011         	goto	u3170
 10329   0022BE                     u3171:
 10330   0022BE  EF62  F011         	goto	l3663
 10331   0022C2                     u3170:
 10332   0022C2  8E04               	bsf	(___fladd@b+3)^0,7,c
 10333   0022C4                     l3663:
 10334   0022C4  C001  F001         	movff	___fladd@b,?___fladd
 10335   0022C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10336   0022CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10337   0022D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10338   0022D4                     l1198:
 10339   0022D4  0012               	return		;funcret
 10340   0022D6                     __end_of___fladd:
 10341                           	callstack 0
 10342                           
 10343 ;; *************** function ___flmul *****************
 10344 ;; Defined at:
 10345 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10346 ;; Parameters:    Size  Location     Type
 10347 ;;  b               4   49[COMRAM] unsigned char 
 10348 ;;  a               4   53[COMRAM] unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  prod            4   68[COMRAM] struct .
 10351 ;;  grs             4   62[COMRAM] unsigned long 
 10352 ;;  temp            2   72[COMRAM] struct .
 10353 ;;  bexp            1   67[COMRAM] unsigned char 
 10354 ;;  aexp            1   66[COMRAM] unsigned char 
 10355 ;;  sign            1   61[COMRAM] unsigned char 
 10356 ;; Return value:  Size  Location     Type
 10357 ;;                  4   49[COMRAM] unsigned char 
 10358 ;; Registers used:
 10359 ;;		wreg, status,2, status,0, prodl, prodh
 10360 ;; Tracked objects:
 10361 ;;		On entry : 0/0
 10362 ;;		On exit  : 0/0
 10363 ;;		Unchanged: 0/0
 10364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10365 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10366 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10367 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10368 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10369 ;;Total ram usage:       25 bytes
 10370 ;; Hardware stack levels used: 1
 10371 ;; Hardware stack levels required when called: 1
 10372 ;; This function calls:
 10373 ;;		Nothing
 10374 ;; This function is called by:
 10375 ;;		_Colour_decider
 10376 ;;		_turnRight45
 10377 ;;		_turnLeft45
 10378 ;; This function uses a non-reentrant model
 10379 ;;
 10380                           
 10381                           	psect	text63
 10382   0022D6                     __ptext63:
 10383                           	callstack 0
 10384   0022D6                     ___flmul:
 10385                           	callstack 28
 10386   0022D6  5035               	movf	(___flmul@b+3)^0,w,c
 10387   0022D8  0B80               	andlw	128
 10388   0022DA  6E3E               	movwf	___flmul@sign^0,c
 10389   0022DC  5035               	movf	(___flmul@b+3)^0,w,c
 10390   0022DE  2435               	addwf	(___flmul@b+3)^0,w,c
 10391   0022E0  6E44               	movwf	___flmul@bexp^0,c
 10392   0022E2  AE34               	btfss	(___flmul@b+2)^0,7,c
 10393   0022E4  EF76  F011         	goto	u3451
 10394   0022E8  EF78  F011         	goto	u3450
 10395   0022EC                     u3451:
 10396   0022EC  EF79  F011         	goto	l3909
 10397   0022F0                     u3450:
 10398   0022F0  8044               	bsf	___flmul@bexp^0,0,c
 10399   0022F2                     l3909:
 10400   0022F2  5044               	movf	___flmul@bexp^0,w,c
 10401   0022F4  B4D8               	btfsc	status,2,c
 10402   0022F6  EF7F  F011         	goto	u3461
 10403   0022FA  EF81  F011         	goto	u3460
 10404   0022FE                     u3461:
 10405   0022FE  EF94  F011         	goto	l3917
 10406   002302                     u3460:
 10407   002302  2844               	incf	___flmul@bexp^0,w,c
 10408   002304  A4D8               	btfss	status,2,c
 10409   002306  EF87  F011         	goto	u3471
 10410   00230A  EF89  F011         	goto	u3470
 10411   00230E                     u3471:
 10412   00230E  EF91  F011         	goto	l3915
 10413   002312                     u3470:
 10414   002312  0E00               	movlw	0
 10415   002314  6E32               	movwf	___flmul@b^0,c
 10416   002316  0E00               	movlw	0
 10417   002318  6E33               	movwf	(___flmul@b+1)^0,c
 10418   00231A  0E00               	movlw	0
 10419   00231C  6E34               	movwf	(___flmul@b+2)^0,c
 10420   00231E  0E00               	movlw	0
 10421   002320  6E35               	movwf	(___flmul@b+3)^0,c
 10422   002322                     l3915:
 10423   002322  8E34               	bsf	(___flmul@b+2)^0,7,c
 10424   002324  EF9C  F011         	goto	l3919
 10425   002328                     l3917:
 10426   002328  0E00               	movlw	0
 10427   00232A  6E32               	movwf	___flmul@b^0,c
 10428   00232C  0E00               	movlw	0
 10429   00232E  6E33               	movwf	(___flmul@b+1)^0,c
 10430   002330  0E00               	movlw	0
 10431   002332  6E34               	movwf	(___flmul@b+2)^0,c
 10432   002334  0E00               	movlw	0
 10433   002336  6E35               	movwf	(___flmul@b+3)^0,c
 10434   002338                     l3919:
 10435   002338  5039               	movf	(___flmul@a+3)^0,w,c
 10436   00233A  0B80               	andlw	128
 10437   00233C  1A3E               	xorwf	___flmul@sign^0,f,c
 10438   00233E  5039               	movf	(___flmul@a+3)^0,w,c
 10439   002340  2439               	addwf	(___flmul@a+3)^0,w,c
 10440   002342  6E43               	movwf	___flmul@aexp^0,c
 10441   002344  AE38               	btfss	(___flmul@a+2)^0,7,c
 10442   002346  EFA7  F011         	goto	u3481
 10443   00234A  EFA9  F011         	goto	u3480
 10444   00234E                     u3481:
 10445   00234E  EFAA  F011         	goto	l3927
 10446   002352                     u3480:
 10447   002352  8043               	bsf	___flmul@aexp^0,0,c
 10448   002354                     l3927:
 10449   002354  5043               	movf	___flmul@aexp^0,w,c
 10450   002356  B4D8               	btfsc	status,2,c
 10451   002358  EFB0  F011         	goto	u3491
 10452   00235C  EFB2  F011         	goto	u3490
 10453   002360                     u3491:
 10454   002360  EFC5  F011         	goto	l3935
 10455   002364                     u3490:
 10456   002364  2843               	incf	___flmul@aexp^0,w,c
 10457   002366  A4D8               	btfss	status,2,c
 10458   002368  EFB8  F011         	goto	u3501
 10459   00236C  EFBA  F011         	goto	u3500
 10460   002370                     u3501:
 10461   002370  EFC2  F011         	goto	l3933
 10462   002374                     u3500:
 10463   002374  0E00               	movlw	0
 10464   002376  6E36               	movwf	___flmul@a^0,c
 10465   002378  0E00               	movlw	0
 10466   00237A  6E37               	movwf	(___flmul@a+1)^0,c
 10467   00237C  0E00               	movlw	0
 10468   00237E  6E38               	movwf	(___flmul@a+2)^0,c
 10469   002380  0E00               	movlw	0
 10470   002382  6E39               	movwf	(___flmul@a+3)^0,c
 10471   002384                     l3933:
 10472   002384  8E38               	bsf	(___flmul@a+2)^0,7,c
 10473   002386  EFCD  F011         	goto	l1275
 10474   00238A                     l3935:
 10475   00238A  0E00               	movlw	0
 10476   00238C  6E36               	movwf	___flmul@a^0,c
 10477   00238E  0E00               	movlw	0
 10478   002390  6E37               	movwf	(___flmul@a+1)^0,c
 10479   002392  0E00               	movlw	0
 10480   002394  6E38               	movwf	(___flmul@a+2)^0,c
 10481   002396  0E00               	movlw	0
 10482   002398  6E39               	movwf	(___flmul@a+3)^0,c
 10483   00239A                     l1275:
 10484   00239A  5043               	movf	___flmul@aexp^0,w,c
 10485   00239C  B4D8               	btfsc	status,2,c
 10486   00239E  EFD3  F011         	goto	u3511
 10487   0023A2  EFD5  F011         	goto	u3510
 10488   0023A6                     u3511:
 10489   0023A6  EFDD  F011         	goto	l3939
 10490   0023AA                     u3510:
 10491   0023AA  5044               	movf	___flmul@bexp^0,w,c
 10492   0023AC  A4D8               	btfss	status,2,c
 10493   0023AE  EFDB  F011         	goto	u3521
 10494   0023B2  EFDD  F011         	goto	u3520
 10495   0023B6                     u3521:
 10496   0023B6  EFE7  F011         	goto	l3943
 10497   0023BA                     u3520:
 10498   0023BA                     l3939:
 10499   0023BA  0E00               	movlw	0
 10500   0023BC  6E32               	movwf	?___flmul^0,c
 10501   0023BE  0E00               	movlw	0
 10502   0023C0  6E33               	movwf	(?___flmul+1)^0,c
 10503   0023C2  0E00               	movlw	0
 10504   0023C4  6E34               	movwf	(?___flmul+2)^0,c
 10505   0023C6  0E00               	movlw	0
 10506   0023C8  6E35               	movwf	(?___flmul+3)^0,c
 10507   0023CA  EF7F  F013         	goto	l1279
 10508   0023CE                     l3943:
 10509   0023CE  5038               	movf	(___flmul@a+2)^0,w,c
 10510   0023D0  0232               	mulwf	___flmul@b^0,c
 10511   0023D2  CFF3 F049          	movff	prodl,___flmul@temp
 10512   0023D6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10513   0023DA  5049               	movf	___flmul@temp^0,w,c
 10514   0023DC  6E3F               	movwf	___flmul@grs^0,c
 10515   0023DE  6A40               	clrf	(___flmul@grs+1)^0,c
 10516   0023E0  6A41               	clrf	(___flmul@grs+2)^0,c
 10517   0023E2  6A42               	clrf	(___flmul@grs+3)^0,c
 10518   0023E4  504A               	movf	(___flmul@temp+1)^0,w,c
 10519   0023E6  6E45               	movwf	___flmul@prod^0,c
 10520   0023E8  6A46               	clrf	(___flmul@prod+1)^0,c
 10521   0023EA  6A47               	clrf	(___flmul@prod+2)^0,c
 10522   0023EC  6A48               	clrf	(___flmul@prod+3)^0,c
 10523   0023EE  5037               	movf	(___flmul@a+1)^0,w,c
 10524   0023F0  0233               	mulwf	(___flmul@b+1)^0,c
 10525   0023F2  CFF3 F049          	movff	prodl,___flmul@temp
 10526   0023F6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10527   0023FA  5049               	movf	___flmul@temp^0,w,c
 10528   0023FC  263F               	addwf	___flmul@grs^0,f,c
 10529   0023FE  0E00               	movlw	0
 10530   002400  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10531   002402  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10532   002404  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10533   002406  504A               	movf	(___flmul@temp+1)^0,w,c
 10534   002408  2645               	addwf	___flmul@prod^0,f,c
 10535   00240A  0E00               	movlw	0
 10536   00240C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10537   00240E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10538   002410  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10539   002412  5036               	movf	___flmul@a^0,w,c
 10540   002414  0234               	mulwf	(___flmul@b+2)^0,c
 10541   002416  CFF3 F049          	movff	prodl,___flmul@temp
 10542   00241A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10543   00241E  5049               	movf	___flmul@temp^0,w,c
 10544   002420  263F               	addwf	___flmul@grs^0,f,c
 10545   002422  0E00               	movlw	0
 10546   002424  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10547   002426  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10548   002428  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10549   00242A  504A               	movf	(___flmul@temp+1)^0,w,c
 10550   00242C  2645               	addwf	___flmul@prod^0,f,c
 10551   00242E  0E00               	movlw	0
 10552   002430  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10553   002432  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10554   002434  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10555   002436  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10556   00243A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10557   00243E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10558   002442  6A3F               	clrf	___flmul@grs^0,c
 10559   002444  5036               	movf	___flmul@a^0,w,c
 10560   002446  0233               	mulwf	(___flmul@b+1)^0,c
 10561   002448  CFF3 F049          	movff	prodl,___flmul@temp
 10562   00244C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10563   002450  5049               	movf	___flmul@temp^0,w,c
 10564   002452  263F               	addwf	___flmul@grs^0,f,c
 10565   002454  504A               	movf	(___flmul@temp+1)^0,w,c
 10566   002456  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10567   002458  0E00               	movlw	0
 10568   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10569   00245C  0E00               	movlw	0
 10570   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10571   002460  5037               	movf	(___flmul@a+1)^0,w,c
 10572   002462  0232               	mulwf	___flmul@b^0,c
 10573   002464  CFF3 F049          	movff	prodl,___flmul@temp
 10574   002468  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10575   00246C  5049               	movf	___flmul@temp^0,w,c
 10576   00246E  263F               	addwf	___flmul@grs^0,f,c
 10577   002470  504A               	movf	(___flmul@temp+1)^0,w,c
 10578   002472  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10579   002474  0E00               	movlw	0
 10580   002476  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10581   002478  0E00               	movlw	0
 10582   00247A  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10583   00247C  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10584   002480  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10585   002484  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10586   002488  6A3F               	clrf	___flmul@grs^0,c
 10587   00248A  5036               	movf	___flmul@a^0,w,c
 10588   00248C  0232               	mulwf	___flmul@b^0,c
 10589   00248E  CFF3 F049          	movff	prodl,___flmul@temp
 10590   002492  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10591   002496  5049               	movf	___flmul@temp^0,w,c
 10592   002498  263F               	addwf	___flmul@grs^0,f,c
 10593   00249A  504A               	movf	(___flmul@temp+1)^0,w,c
 10594   00249C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10595   00249E  0E00               	movlw	0
 10596   0024A0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10597   0024A2  0E00               	movlw	0
 10598   0024A4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10599   0024A6  5038               	movf	(___flmul@a+2)^0,w,c
 10600   0024A8  0233               	mulwf	(___flmul@b+1)^0,c
 10601   0024AA  CFF3 F049          	movff	prodl,___flmul@temp
 10602   0024AE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10603   0024B2  5049               	movf	___flmul@temp^0,w,c
 10604   0024B4  2645               	addwf	___flmul@prod^0,f,c
 10605   0024B6  504A               	movf	(___flmul@temp+1)^0,w,c
 10606   0024B8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10607   0024BA  0E00               	movlw	0
 10608   0024BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10609   0024BE  0E00               	movlw	0
 10610   0024C0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10611   0024C2  5037               	movf	(___flmul@a+1)^0,w,c
 10612   0024C4  0234               	mulwf	(___flmul@b+2)^0,c
 10613   0024C6  CFF3 F049          	movff	prodl,___flmul@temp
 10614   0024CA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10615   0024CE  5049               	movf	___flmul@temp^0,w,c
 10616   0024D0  2645               	addwf	___flmul@prod^0,f,c
 10617   0024D2  504A               	movf	(___flmul@temp+1)^0,w,c
 10618   0024D4  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10619   0024D6  0E00               	movlw	0
 10620   0024D8  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10621   0024DA  0E00               	movlw	0
 10622   0024DC  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10623   0024DE  5038               	movf	(___flmul@a+2)^0,w,c
 10624   0024E0  0234               	mulwf	(___flmul@b+2)^0,c
 10625   0024E2  CFF3 F049          	movff	prodl,___flmul@temp
 10626   0024E6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10627   0024EA  5049               	movf	___flmul@temp^0,w,c
 10628   0024EC  6E3A               	movwf	??___flmul^0,c
 10629   0024EE  504A               	movf	(___flmul@temp+1)^0,w,c
 10630   0024F0  6E3B               	movwf	(??___flmul+1)^0,c
 10631   0024F2  6A3C               	clrf	(??___flmul+2)^0,c
 10632   0024F4  6A3D               	clrf	(??___flmul+3)^0,c
 10633   0024F6  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 10634   0024FA  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 10635   0024FE  C03A  F03B         	movff	??___flmul,??___flmul+1
 10636   002502  6A3A               	clrf	??___flmul^0,c
 10637   002504  503A               	movf	??___flmul^0,w,c
 10638   002506  2645               	addwf	___flmul@prod^0,f,c
 10639   002508  503B               	movf	(??___flmul+1)^0,w,c
 10640   00250A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10641   00250C  503C               	movf	(??___flmul+2)^0,w,c
 10642   00250E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10643   002510  503D               	movf	(??___flmul+3)^0,w,c
 10644   002512  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10645   002514  C03F  F03A         	movff	___flmul@grs,??___flmul
 10646   002518  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 10647   00251C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 10648   002520  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 10649   002524  0E19               	movlw	25
 10650   002526  EF9A  F012         	goto	u3530
 10651   00252A                     u3535:
 10652   00252A  90D8               	bcf	status,0,c
 10653   00252C  323D               	rrcf	(??___flmul+3)^0,f,c
 10654   00252E  323C               	rrcf	(??___flmul+2)^0,f,c
 10655   002530  323B               	rrcf	(??___flmul+1)^0,f,c
 10656   002532  323A               	rrcf	??___flmul^0,f,c
 10657   002534                     u3530:
 10658   002534  2EE8               	decfsz	wreg,f,c
 10659   002536  EF95  F012         	goto	u3535
 10660   00253A  503A               	movf	??___flmul^0,w,c
 10661   00253C  2645               	addwf	___flmul@prod^0,f,c
 10662   00253E  503B               	movf	(??___flmul+1)^0,w,c
 10663   002540  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10664   002542  503C               	movf	(??___flmul+2)^0,w,c
 10665   002544  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10666   002546  503D               	movf	(??___flmul+3)^0,w,c
 10667   002548  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10668   00254A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10669   00254E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10670   002552  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10671   002556  6A3F               	clrf	___flmul@grs^0,c
 10672   002558  5043               	movf	___flmul@aexp^0,w,c
 10673   00255A  C044  F03A         	movff	___flmul@bexp,??___flmul
 10674   00255E  6A3B               	clrf	(??___flmul+1)^0,c
 10675   002560  263A               	addwf	??___flmul^0,f,c
 10676   002562  0E00               	movlw	0
 10677   002564  223B               	addwfc	(??___flmul+1)^0,f,c
 10678   002566  0E82               	movlw	130
 10679   002568  243A               	addwf	??___flmul^0,w,c
 10680   00256A  6E49               	movwf	___flmul@temp^0,c
 10681   00256C  0EFF               	movlw	255
 10682   00256E  203B               	addwfc	(??___flmul+1)^0,w,c
 10683   002570  6E4A               	movwf	(___flmul@temp+1)^0,c
 10684   002572  EFD0  F012         	goto	l3991
 10685   002576                     l3985:
 10686   002576  90D8               	bcf	status,0,c
 10687   002578  3645               	rlcf	___flmul@prod^0,f,c
 10688   00257A  3646               	rlcf	(___flmul@prod+1)^0,f,c
 10689   00257C  3647               	rlcf	(___flmul@prod+2)^0,f,c
 10690   00257E  3648               	rlcf	(___flmul@prod+3)^0,f,c
 10691   002580  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10692   002582  EFC5  F012         	goto	u3541
 10693   002586  EFC7  F012         	goto	u3540
 10694   00258A                     u3541:
 10695   00258A  EFC8  F012         	goto	l1282
 10696   00258E                     u3540:
 10697   00258E  8045               	bsf	___flmul@prod^0,0,c
 10698   002590                     l1282:
 10699   002590  90D8               	bcf	status,0,c
 10700   002592  363F               	rlcf	___flmul@grs^0,f,c
 10701   002594  3640               	rlcf	(___flmul@grs+1)^0,f,c
 10702   002596  3641               	rlcf	(___flmul@grs+2)^0,f,c
 10703   002598  3642               	rlcf	(___flmul@grs+3)^0,f,c
 10704   00259A  0649               	decf	___flmul@temp^0,f,c
 10705   00259C  A0D8               	btfss	status,0,c
 10706   00259E  064A               	decf	(___flmul@temp+1)^0,f,c
 10707   0025A0                     l3991:
 10708   0025A0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 10709   0025A2  EFD5  F012         	goto	u3551
 10710   0025A6  EFD7  F012         	goto	u3550
 10711   0025AA                     u3551:
 10712   0025AA  EFBB  F012         	goto	l3985
 10713   0025AE                     u3550:
 10714   0025AE  0E00               	movlw	0
 10715   0025B0  6E43               	movwf	___flmul@aexp^0,c
 10716   0025B2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10717   0025B4  EFDE  F012         	goto	u3561
 10718   0025B8  EFE0  F012         	goto	u3560
 10719   0025BC                     u3561:
 10720   0025BC  EF04  F013         	goto	l1284
 10721   0025C0                     u3560:
 10722   0025C0  0EFF               	movlw	255
 10723   0025C2  143F               	andwf	___flmul@grs^0,w,c
 10724   0025C4  6E3A               	movwf	??___flmul^0,c
 10725   0025C6  0EFF               	movlw	255
 10726   0025C8  1440               	andwf	(___flmul@grs+1)^0,w,c
 10727   0025CA  6E3B               	movwf	(??___flmul+1)^0,c
 10728   0025CC  0EFF               	movlw	255
 10729   0025CE  1441               	andwf	(___flmul@grs+2)^0,w,c
 10730   0025D0  6E3C               	movwf	(??___flmul+2)^0,c
 10731   0025D2  0E7F               	movlw	127
 10732   0025D4  1442               	andwf	(___flmul@grs+3)^0,w,c
 10733   0025D6  6E3D               	movwf	(??___flmul+3)^0,c
 10734   0025D8  503A               	movf	??___flmul^0,w,c
 10735   0025DA  103B               	iorwf	(??___flmul+1)^0,w,c
 10736   0025DC  103C               	iorwf	(??___flmul+2)^0,w,c
 10737   0025DE  103D               	iorwf	(??___flmul+3)^0,w,c
 10738   0025E0  B4D8               	btfsc	status,2,c
 10739   0025E2  EFF5  F012         	goto	u3571
 10740   0025E6  EFF7  F012         	goto	u3570
 10741   0025EA                     u3571:
 10742   0025EA  EFFB  F012         	goto	l1285
 10743   0025EE                     u3570:
 10744   0025EE                     l3999:
 10745   0025EE  0E01               	movlw	1
 10746   0025F0  6E43               	movwf	___flmul@aexp^0,c
 10747   0025F2  EF04  F013         	goto	l1284
 10748   0025F6                     l1285:
 10749   0025F6  A045               	btfss	___flmul@prod^0,0,c
 10750   0025F8  EF00  F013         	goto	u3581
 10751   0025FC  EF02  F013         	goto	u3580
 10752   002600                     u3581:
 10753   002600  EF04  F013         	goto	l1284
 10754   002604                     u3580:
 10755   002604  EFF7  F012         	goto	l3999
 10756   002608                     l1284:
 10757   002608  5043               	movf	___flmul@aexp^0,w,c
 10758   00260A  B4D8               	btfsc	status,2,c
 10759   00260C  EF0A  F013         	goto	u3591
 10760   002610  EF0C  F013         	goto	u3590
 10761   002614                     u3591:
 10762   002614  EF30  F013         	goto	l4011
 10763   002618                     u3590:
 10764   002618  0E01               	movlw	1
 10765   00261A  2645               	addwf	___flmul@prod^0,f,c
 10766   00261C  0E00               	movlw	0
 10767   00261E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10768   002620  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10769   002622  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10770   002624  A048               	btfss	(___flmul@prod+3)^0,0,c
 10771   002626  EF17  F013         	goto	u3601
 10772   00262A  EF19  F013         	goto	u3600
 10773   00262E                     u3601:
 10774   00262E  EF30  F013         	goto	l4011
 10775   002632                     u3600:
 10776   002632  C045  F03A         	movff	___flmul@prod,??___flmul
 10777   002636  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 10778   00263A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 10779   00263E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 10780   002642  343D               	rlcf	(??___flmul+3)^0,w,c
 10781   002644  323D               	rrcf	(??___flmul+3)^0,f,c
 10782   002646  323C               	rrcf	(??___flmul+2)^0,f,c
 10783   002648  323B               	rrcf	(??___flmul+1)^0,f,c
 10784   00264A  323A               	rrcf	??___flmul^0,f,c
 10785   00264C  C03A  F045         	movff	??___flmul,___flmul@prod
 10786   002650  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 10787   002654  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 10788   002658  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 10789   00265C  4A49               	infsnz	___flmul@temp^0,f,c
 10790   00265E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 10791   002660                     l4011:
 10792   002660  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10793   002662  EF3B  F013         	goto	u3611
 10794   002666  504A               	movf	(___flmul@temp+1)^0,w,c
 10795   002668  E108               	bnz	u3610
 10796   00266A  2849               	incf	___flmul@temp^0,w,c
 10797   00266C  A0D8               	btfss	status,0,c
 10798   00266E  EF3B  F013         	goto	u3611
 10799   002672  EF3D  F013         	goto	u3610
 10800   002676                     u3611:
 10801   002676  EF47  F013         	goto	l4015
 10802   00267A                     u3610:
 10803   00267A  0E00               	movlw	0
 10804   00267C  6E45               	movwf	___flmul@prod^0,c
 10805   00267E  0E00               	movlw	0
 10806   002680  6E46               	movwf	(___flmul@prod+1)^0,c
 10807   002682  0E80               	movlw	128
 10808   002684  6E47               	movwf	(___flmul@prod+2)^0,c
 10809   002686  0E7F               	movlw	127
 10810   002688  6E48               	movwf	(___flmul@prod+3)^0,c
 10811   00268A  EF75  F013         	goto	l4027
 10812   00268E                     l4015:
 10813   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10814   002690  EF54  F013         	goto	u3620
 10815   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 10816   002696  E106               	bnz	u3621
 10817   002698  0449               	decf	___flmul@temp^0,w,c
 10818   00269A  B0D8               	btfsc	status,0,c
 10819   00269C  EF52  F013         	goto	u3621
 10820   0026A0  EF54  F013         	goto	u3620
 10821   0026A4                     u3621:
 10822   0026A4  EF60  F013         	goto	l1292
 10823   0026A8                     u3620:
 10824   0026A8  0E00               	movlw	0
 10825   0026AA  6E45               	movwf	___flmul@prod^0,c
 10826   0026AC  0E00               	movlw	0
 10827   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 10828   0026B0  0E00               	movlw	0
 10829   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 10830   0026B4  0E00               	movlw	0
 10831   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 10832   0026B8  0E00               	movlw	0
 10833   0026BA  6E3E               	movwf	___flmul@sign^0,c
 10834   0026BC  EF75  F013         	goto	l4027
 10835   0026C0                     l1292:
 10836   0026C0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 10837   0026C4  0EFF               	movlw	255
 10838   0026C6  1645               	andwf	___flmul@prod^0,f,c
 10839   0026C8  0EFF               	movlw	255
 10840   0026CA  1646               	andwf	(___flmul@prod+1)^0,f,c
 10841   0026CC  0E7F               	movlw	127
 10842   0026CE  1647               	andwf	(___flmul@prod+2)^0,f,c
 10843   0026D0  0E00               	movlw	0
 10844   0026D2  1648               	andwf	(___flmul@prod+3)^0,f,c
 10845   0026D4  A044               	btfss	___flmul@bexp^0,0,c
 10846   0026D6  EF6F  F013         	goto	u3631
 10847   0026DA  EF71  F013         	goto	u3630
 10848   0026DE                     u3631:
 10849   0026DE  EF72  F013         	goto	l4025
 10850   0026E2                     u3630:
 10851   0026E2  8E47               	bsf	(___flmul@prod+2)^0,7,c
 10852   0026E4                     l4025:
 10853   0026E4  90D8               	bcf	status,0,c
 10854   0026E6  3044               	rrcf	___flmul@bexp^0,w,c
 10855   0026E8  6E48               	movwf	(___flmul@prod+3)^0,c
 10856   0026EA                     l4027:
 10857   0026EA  503E               	movf	___flmul@sign^0,w,c
 10858   0026EC  1248               	iorwf	(___flmul@prod+3)^0,f,c
 10859   0026EE  C045  F032         	movff	___flmul@prod,?___flmul
 10860   0026F2  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 10861   0026F6  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 10862   0026FA  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 10863   0026FE                     l1279:
 10864   0026FE  0012               	return		;funcret
 10865   002700                     __end_of___flmul:
 10866                           	callstack 0
 10867                           
 10868 ;; *************** function ___flge *****************
 10869 ;; Defined at:
 10870 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  ff1             4    0[COMRAM] unsigned char 
 10873 ;;  ff2             4    4[COMRAM] unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;		None               void
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10885 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10889 ;;Total ram usage:       12 bytes
 10890 ;; Hardware stack levels used: 1
 10891 ;; Hardware stack levels required when called: 1
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_Colour_decider
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           	psect	text64
 10900   0039D0                     __ptext64:
 10901                           	callstack 0
 10902   0039D0                     ___flge:
 10903                           	callstack 28
 10904   0039D0  0E00               	movlw	0
 10905   0039D2  1401               	andwf	___flge@ff1^0,w,c
 10906   0039D4  6E09               	movwf	??___flge^0,c
 10907   0039D6  0E00               	movlw	0
 10908   0039D8  1402               	andwf	(___flge@ff1+1)^0,w,c
 10909   0039DA  6E0A               	movwf	(??___flge+1)^0,c
 10910   0039DC  0E80               	movlw	128
 10911   0039DE  1403               	andwf	(___flge@ff1+2)^0,w,c
 10912   0039E0  6E0B               	movwf	(??___flge+2)^0,c
 10913   0039E2  0E7F               	movlw	127
 10914   0039E4  1404               	andwf	(___flge@ff1+3)^0,w,c
 10915   0039E6  6E0C               	movwf	(??___flge+3)^0,c
 10916   0039E8  5009               	movf	??___flge^0,w,c
 10917   0039EA  100A               	iorwf	(??___flge+1)^0,w,c
 10918   0039EC  100B               	iorwf	(??___flge+2)^0,w,c
 10919   0039EE  100C               	iorwf	(??___flge+3)^0,w,c
 10920   0039F0  A4D8               	btfss	status,2,c
 10921   0039F2  EFFD  F01C         	goto	u3671
 10922   0039F6  EFFF  F01C         	goto	u3670
 10923   0039FA                     u3671:
 10924   0039FA  EF07  F01D         	goto	l4059
 10925   0039FE                     u3670:
 10926   0039FE  0E00               	movlw	0
 10927   003A00  6E01               	movwf	___flge@ff1^0,c
 10928   003A02  0E00               	movlw	0
 10929   003A04  6E02               	movwf	(___flge@ff1+1)^0,c
 10930   003A06  0E00               	movlw	0
 10931   003A08  6E03               	movwf	(___flge@ff1+2)^0,c
 10932   003A0A  0E00               	movlw	0
 10933   003A0C  6E04               	movwf	(___flge@ff1+3)^0,c
 10934   003A0E                     l4059:
 10935   003A0E  0E00               	movlw	0
 10936   003A10  1405               	andwf	___flge@ff2^0,w,c
 10937   003A12  6E09               	movwf	??___flge^0,c
 10938   003A14  0E00               	movlw	0
 10939   003A16  1406               	andwf	(___flge@ff2+1)^0,w,c
 10940   003A18  6E0A               	movwf	(??___flge+1)^0,c
 10941   003A1A  0E80               	movlw	128
 10942   003A1C  1407               	andwf	(___flge@ff2+2)^0,w,c
 10943   003A1E  6E0B               	movwf	(??___flge+2)^0,c
 10944   003A20  0E7F               	movlw	127
 10945   003A22  1408               	andwf	(___flge@ff2+3)^0,w,c
 10946   003A24  6E0C               	movwf	(??___flge+3)^0,c
 10947   003A26  5009               	movf	??___flge^0,w,c
 10948   003A28  100A               	iorwf	(??___flge+1)^0,w,c
 10949   003A2A  100B               	iorwf	(??___flge+2)^0,w,c
 10950   003A2C  100C               	iorwf	(??___flge+3)^0,w,c
 10951   003A2E  A4D8               	btfss	status,2,c
 10952   003A30  EF1C  F01D         	goto	u3681
 10953   003A34  EF1E  F01D         	goto	u3680
 10954   003A38                     u3681:
 10955   003A38  EF26  F01D         	goto	l4063
 10956   003A3C                     u3680:
 10957   003A3C  0E00               	movlw	0
 10958   003A3E  6E05               	movwf	___flge@ff2^0,c
 10959   003A40  0E00               	movlw	0
 10960   003A42  6E06               	movwf	(___flge@ff2+1)^0,c
 10961   003A44  0E00               	movlw	0
 10962   003A46  6E07               	movwf	(___flge@ff2+2)^0,c
 10963   003A48  0E00               	movlw	0
 10964   003A4A  6E08               	movwf	(___flge@ff2+3)^0,c
 10965   003A4C                     l4063:
 10966   003A4C  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10967   003A4E  EF2B  F01D         	goto	u3691
 10968   003A52  EF2D  F01D         	goto	u3690
 10969   003A56                     u3691:
 10970   003A56  EF36  F01D         	goto	l4067
 10971   003A5A                     u3690:
 10972   003A5A  6C01               	negf	___flge@ff1^0,c
 10973   003A5C  1E02               	comf	(___flge@ff1+1)^0,f,c
 10974   003A5E  B0D8               	btfsc	status,0,c
 10975   003A60  2A02               	incf	(___flge@ff1+1)^0,f,c
 10976   003A62  1E03               	comf	(___flge@ff1+2)^0,f,c
 10977   003A64  B0D8               	btfsc	status,0,c
 10978   003A66  2A03               	incf	(___flge@ff1+2)^0,f,c
 10979   003A68  0E80               	movlw	128
 10980   003A6A  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10981   003A6C                     l4067:
 10982   003A6C  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10983   003A6E  EF3B  F01D         	goto	u3701
 10984   003A72  EF3D  F01D         	goto	u3700
 10985   003A76                     u3701:
 10986   003A76  EF46  F01D         	goto	l926
 10987   003A7A                     u3700:
 10988   003A7A  6C05               	negf	___flge@ff2^0,c
 10989   003A7C  1E06               	comf	(___flge@ff2+1)^0,f,c
 10990   003A7E  B0D8               	btfsc	status,0,c
 10991   003A80  2A06               	incf	(___flge@ff2+1)^0,f,c
 10992   003A82  1E07               	comf	(___flge@ff2+2)^0,f,c
 10993   003A84  B0D8               	btfsc	status,0,c
 10994   003A86  2A07               	incf	(___flge@ff2+2)^0,f,c
 10995   003A88  0E80               	movlw	128
 10996   003A8A  5608               	subfwb	(___flge@ff2+3)^0,f,c
 10997   003A8C                     l926:
 10998   003A8C  0E00               	movlw	0
 10999   003A8E  1A01               	xorwf	___flge@ff1^0,f,c
 11000   003A90  0E00               	movlw	0
 11001   003A92  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11002   003A94  0E00               	movlw	0
 11003   003A96  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11004   003A98  0E80               	movlw	128
 11005   003A9A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11006   003A9C  0E00               	movlw	0
 11007   003A9E  1A05               	xorwf	___flge@ff2^0,f,c
 11008   003AA0  0E00               	movlw	0
 11009   003AA2  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11010   003AA4  0E00               	movlw	0
 11011   003AA6  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11012   003AA8  0E80               	movlw	128
 11013   003AAA  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11014   003AAC  5005               	movf	___flge@ff2^0,w,c
 11015   003AAE  5C01               	subwf	___flge@ff1^0,w,c
 11016   003AB0  5006               	movf	(___flge@ff2+1)^0,w,c
 11017   003AB2  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11018   003AB4  5007               	movf	(___flge@ff2+2)^0,w,c
 11019   003AB6  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11020   003AB8  5008               	movf	(___flge@ff2+3)^0,w,c
 11021   003ABA  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11022   003ABC  B0D8               	btfsc	status,0,c
 11023   003ABE  EF63  F01D         	goto	u3711
 11024   003AC2  EF65  F01D         	goto	u3710
 11025   003AC6                     u3711:
 11026   003AC6  EF68  F01D         	goto	l4073
 11027   003ACA                     u3710:
 11028   003ACA  90D8               	bcf	status,0,c
 11029   003ACC  EF69  F01D         	goto	l931
 11030   003AD0                     l4073:
 11031   003AD0  80D8               	bsf	status,0,c
 11032   003AD2                     l931:
 11033   003AD2  0012               	return		;funcret
 11034   003AD4                     __end_of___flge:
 11035                           	callstack 0
 11036                           
 11037 ;; *************** function ___fleq *****************
 11038 ;; Defined at:
 11039 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  ff1             4   24[COMRAM] unsigned char 
 11042 ;;  ff2             4   28[COMRAM] unsigned char 
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;		None
 11045 ;; Return value:  Size  Location     Type
 11046 ;;		None               void
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11054 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11056 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11057 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11058 ;;Total ram usage:       12 bytes
 11059 ;; Hardware stack levels used: 1
 11060 ;; Hardware stack levels required when called: 1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_Colour_decider
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text65
 11069   003B9E                     __ptext65:
 11070                           	callstack 0
 11071   003B9E                     ___fleq:
 11072                           	callstack 28
 11073   003B9E  0E00               	movlw	0
 11074   003BA0  1419               	andwf	___fleq@ff1^0,w,c
 11075   003BA2  6E21               	movwf	??___fleq^0,c
 11076   003BA4  0E00               	movlw	0
 11077   003BA6  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11078   003BA8  6E22               	movwf	(??___fleq+1)^0,c
 11079   003BAA  0E80               	movlw	128
 11080   003BAC  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11081   003BAE  6E23               	movwf	(??___fleq+2)^0,c
 11082   003BB0  0E7F               	movlw	127
 11083   003BB2  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11084   003BB4  6E24               	movwf	(??___fleq+3)^0,c
 11085   003BB6  5021               	movf	??___fleq^0,w,c
 11086   003BB8  1022               	iorwf	(??___fleq+1)^0,w,c
 11087   003BBA  1023               	iorwf	(??___fleq+2)^0,w,c
 11088   003BBC  1024               	iorwf	(??___fleq+3)^0,w,c
 11089   003BBE  A4D8               	btfss	status,2,c
 11090   003BC0  EFE4  F01D         	goto	u3641
 11091   003BC4  EFE6  F01D         	goto	u3640
 11092   003BC8                     u3641:
 11093   003BC8  EFEE  F01D         	goto	l4043
 11094   003BCC                     u3640:
 11095   003BCC  0E00               	movlw	0
 11096   003BCE  6E19               	movwf	___fleq@ff1^0,c
 11097   003BD0  0E00               	movlw	0
 11098   003BD2  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11099   003BD4  0E00               	movlw	0
 11100   003BD6  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11101   003BD8  0E00               	movlw	0
 11102   003BDA  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11103   003BDC                     l4043:
 11104   003BDC  0E00               	movlw	0
 11105   003BDE  141D               	andwf	___fleq@ff2^0,w,c
 11106   003BE0  6E21               	movwf	??___fleq^0,c
 11107   003BE2  0E00               	movlw	0
 11108   003BE4  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11109   003BE6  6E22               	movwf	(??___fleq+1)^0,c
 11110   003BE8  0E80               	movlw	128
 11111   003BEA  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11112   003BEC  6E23               	movwf	(??___fleq+2)^0,c
 11113   003BEE  0E7F               	movlw	127
 11114   003BF0  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11115   003BF2  6E24               	movwf	(??___fleq+3)^0,c
 11116   003BF4  5021               	movf	??___fleq^0,w,c
 11117   003BF6  1022               	iorwf	(??___fleq+1)^0,w,c
 11118   003BF8  1023               	iorwf	(??___fleq+2)^0,w,c
 11119   003BFA  1024               	iorwf	(??___fleq+3)^0,w,c
 11120   003BFC  A4D8               	btfss	status,2,c
 11121   003BFE  EF03  F01E         	goto	u3651
 11122   003C02  EF05  F01E         	goto	u3650
 11123   003C06                     u3651:
 11124   003C06  EF0D  F01E         	goto	l4047
 11125   003C0A                     u3650:
 11126   003C0A  0E00               	movlw	0
 11127   003C0C  6E1D               	movwf	___fleq@ff2^0,c
 11128   003C0E  0E00               	movlw	0
 11129   003C10  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11130   003C12  0E00               	movlw	0
 11131   003C14  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11132   003C16  0E00               	movlw	0
 11133   003C18  6E20               	movwf	(___fleq@ff2+3)^0,c
 11134   003C1A                     l4047:
 11135   003C1A  501D               	movf	___fleq@ff2^0,w,c
 11136   003C1C  1819               	xorwf	___fleq@ff1^0,w,c
 11137   003C1E  E10F               	bnz	u3660
 11138   003C20  501E               	movf	(___fleq@ff2+1)^0,w,c
 11139   003C22  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11140   003C24  E10C               	bnz	u3660
 11141   003C26  501F               	movf	(___fleq@ff2+2)^0,w,c
 11142   003C28  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11143   003C2A  E109               	bnz	u3660
 11144   003C2C  5020               	movf	(___fleq@ff2+3)^0,w,c
 11145   003C2E  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11146   003C30  B4D8               	btfsc	status,2,c
 11147   003C32  EF1D  F01E         	goto	u3661
 11148   003C36  EF1F  F01E         	goto	u3660
 11149   003C3A                     u3661:
 11150   003C3A  EF22  F01E         	goto	l4051
 11151   003C3E                     u3660:
 11152   003C3E  90D8               	bcf	status,0,c
 11153   003C40  EF23  F01E         	goto	l920
 11154   003C44                     l4051:
 11155   003C44  80D8               	bsf	status,0,c
 11156   003C46                     l920:
 11157   003C46  0012               	return		;funcret
 11158   003C48                     __end_of___fleq:
 11159                           	callstack 0
 11160                           
 11161 ;; *************** function ___fldiv *****************
 11162 ;; Defined at:
 11163 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;  b               4   24[COMRAM] unsigned char 
 11166 ;;  a               4   28[COMRAM] unsigned char 
 11167 ;; Auto vars:     Size  Location     Type
 11168 ;;  grs             4   43[COMRAM] unsigned long 
 11169 ;;  rem             4   36[COMRAM] unsigned long 
 11170 ;;  new_exp         2   41[COMRAM] short 
 11171 ;;  aexp            1   48[COMRAM] unsigned char 
 11172 ;;  bexp            1   47[COMRAM] unsigned char 
 11173 ;;  sign            1   40[COMRAM] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  4   24[COMRAM] unsigned char 
 11176 ;; Registers used:
 11177 ;;		wreg, status,2, status,0
 11178 ;; Tracked objects:
 11179 ;;		On entry : 0/0
 11180 ;;		On exit  : 0/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11183 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11184 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11186 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11187 ;;Total ram usage:       25 bytes
 11188 ;; Hardware stack levels used: 1
 11189 ;; Hardware stack levels required when called: 1
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		_colour_rel
 11194 ;;		_Colour_decider
 11195 ;; This function uses a non-reentrant model
 11196 ;;
 11197                           
 11198                           	psect	text66
 11199   002700                     __ptext66:
 11200                           	callstack 0
 11201   002700                     ___fldiv:
 11202                           	callstack 28
 11203   002700  501C               	movf	(___fldiv@b+3)^0,w,c
 11204   002702  0B80               	andlw	128
 11205   002704  6E29               	movwf	___fldiv@sign^0,c
 11206   002706  501C               	movf	(___fldiv@b+3)^0,w,c
 11207   002708  241C               	addwf	(___fldiv@b+3)^0,w,c
 11208   00270A  6E30               	movwf	___fldiv@bexp^0,c
 11209   00270C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11210   00270E  EF8B  F013         	goto	u3221
 11211   002712  EF8D  F013         	goto	u3220
 11212   002716                     u3221:
 11213   002716  EF8E  F013         	goto	l3771
 11214   00271A                     u3220:
 11215   00271A  8030               	bsf	___fldiv@bexp^0,0,c
 11216   00271C                     l3771:
 11217   00271C  5030               	movf	___fldiv@bexp^0,w,c
 11218   00271E  B4D8               	btfsc	status,2,c
 11219   002720  EF94  F013         	goto	u3231
 11220   002724  EF96  F013         	goto	u3230
 11221   002728                     u3231:
 11222   002728  EFAB  F013         	goto	l3781
 11223   00272C                     u3230:
 11224   00272C  2830               	incf	___fldiv@bexp^0,w,c
 11225   00272E  A4D8               	btfss	status,2,c
 11226   002730  EF9C  F013         	goto	u3241
 11227   002734  EF9E  F013         	goto	u3240
 11228   002738                     u3241:
 11229   002738  EFA6  F013         	goto	l3777
 11230   00273C                     u3240:
 11231   00273C  0E00               	movlw	0
 11232   00273E  6E19               	movwf	___fldiv@b^0,c
 11233   002740  0E00               	movlw	0
 11234   002742  6E1A               	movwf	(___fldiv@b+1)^0,c
 11235   002744  0E00               	movlw	0
 11236   002746  6E1B               	movwf	(___fldiv@b+2)^0,c
 11237   002748  0E00               	movlw	0
 11238   00274A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11239   00274C                     l3777:
 11240   00274C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11241   00274E  0E00               	movlw	0
 11242   002750  6E1C               	movwf	(___fldiv@b+3)^0,c
 11243   002752  EFB3  F013         	goto	l3783
 11244   002756                     l3781:
 11245   002756  0E00               	movlw	0
 11246   002758  6E19               	movwf	___fldiv@b^0,c
 11247   00275A  0E00               	movlw	0
 11248   00275C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11249   00275E  0E00               	movlw	0
 11250   002760  6E1B               	movwf	(___fldiv@b+2)^0,c
 11251   002762  0E00               	movlw	0
 11252   002764  6E1C               	movwf	(___fldiv@b+3)^0,c
 11253   002766                     l3783:
 11254   002766  5020               	movf	(___fldiv@a+3)^0,w,c
 11255   002768  0B80               	andlw	128
 11256   00276A  1A29               	xorwf	___fldiv@sign^0,f,c
 11257   00276C  5020               	movf	(___fldiv@a+3)^0,w,c
 11258   00276E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11259   002770  6E31               	movwf	___fldiv@aexp^0,c
 11260   002772  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11261   002774  EFBE  F013         	goto	u3251
 11262   002778  EFC0  F013         	goto	u3250
 11263   00277C                     u3251:
 11264   00277C  EFC1  F013         	goto	l3791
 11265   002780                     u3250:
 11266   002780  8031               	bsf	___fldiv@aexp^0,0,c
 11267   002782                     l3791:
 11268   002782  5031               	movf	___fldiv@aexp^0,w,c
 11269   002784  B4D8               	btfsc	status,2,c
 11270   002786  EFC7  F013         	goto	u3261
 11271   00278A  EFC9  F013         	goto	u3260
 11272   00278E                     u3261:
 11273   00278E  EFDE  F013         	goto	l3801
 11274   002792                     u3260:
 11275   002792  2831               	incf	___fldiv@aexp^0,w,c
 11276   002794  A4D8               	btfss	status,2,c
 11277   002796  EFCF  F013         	goto	u3271
 11278   00279A  EFD1  F013         	goto	u3270
 11279   00279E                     u3271:
 11280   00279E  EFD9  F013         	goto	l3797
 11281   0027A2                     u3270:
 11282   0027A2  0E00               	movlw	0
 11283   0027A4  6E1D               	movwf	___fldiv@a^0,c
 11284   0027A6  0E00               	movlw	0
 11285   0027A8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11286   0027AA  0E00               	movlw	0
 11287   0027AC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11288   0027AE  0E00               	movlw	0
 11289   0027B0  6E20               	movwf	(___fldiv@a+3)^0,c
 11290   0027B2                     l3797:
 11291   0027B2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11292   0027B4  0E00               	movlw	0
 11293   0027B6  6E20               	movwf	(___fldiv@a+3)^0,c
 11294   0027B8  EFE6  F013         	goto	l3803
 11295   0027BC                     l3801:
 11296   0027BC  0E00               	movlw	0
 11297   0027BE  6E1D               	movwf	___fldiv@a^0,c
 11298   0027C0  0E00               	movlw	0
 11299   0027C2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11300   0027C4  0E00               	movlw	0
 11301   0027C6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11302   0027C8  0E00               	movlw	0
 11303   0027CA  6E20               	movwf	(___fldiv@a+3)^0,c
 11304   0027CC                     l3803:
 11305   0027CC  501D               	movf	___fldiv@a^0,w,c
 11306   0027CE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11307   0027D0  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11308   0027D2  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11309   0027D4  A4D8               	btfss	status,2,c
 11310   0027D6  EFEF  F013         	goto	u3281
 11311   0027DA  EFF1  F013         	goto	u3280
 11312   0027DE                     u3281:
 11313   0027DE  EF09  F014         	goto	l3815
 11314   0027E2                     u3280:
 11315   0027E2  0E00               	movlw	0
 11316   0027E4  6E19               	movwf	___fldiv@b^0,c
 11317   0027E6  0E00               	movlw	0
 11318   0027E8  6E1A               	movwf	(___fldiv@b+1)^0,c
 11319   0027EA  0E00               	movlw	0
 11320   0027EC  6E1B               	movwf	(___fldiv@b+2)^0,c
 11321   0027EE  0E00               	movlw	0
 11322   0027F0  6E1C               	movwf	(___fldiv@b+3)^0,c
 11323   0027F2  0E80               	movlw	128
 11324   0027F4  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11325   0027F6  0E7F               	movlw	127
 11326   0027F8  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11327   0027FA                     l3809:
 11328   0027FA  5029               	movf	___fldiv@sign^0,w,c
 11329   0027FC  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11330   0027FE  C019  F019         	movff	___fldiv@b,?___fldiv
 11331   002802  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11332   002806  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11333   00280A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11334   00280E  EF4C  F015         	goto	l1243
 11335   002812                     l3815:
 11336   002812  5030               	movf	___fldiv@bexp^0,w,c
 11337   002814  A4D8               	btfss	status,2,c
 11338   002816  EF0F  F014         	goto	u3291
 11339   00281A  EF11  F014         	goto	u3290
 11340   00281E                     u3291:
 11341   00281E  EF1B  F014         	goto	l3823
 11342   002822                     u3290:
 11343   002822  0E00               	movlw	0
 11344   002824  6E19               	movwf	?___fldiv^0,c
 11345   002826  0E00               	movlw	0
 11346   002828  6E1A               	movwf	(?___fldiv+1)^0,c
 11347   00282A  0E00               	movlw	0
 11348   00282C  6E1B               	movwf	(?___fldiv+2)^0,c
 11349   00282E  0E00               	movlw	0
 11350   002830  6E1C               	movwf	(?___fldiv+3)^0,c
 11351   002832  EF4C  F015         	goto	l1243
 11352   002836                     l3823:
 11353   002836  5031               	movf	___fldiv@aexp^0,w,c
 11354   002838  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11355   00283C  6A22               	clrf	(??___fldiv+1)^0,c
 11356   00283E  5E21               	subwf	??___fldiv^0,f,c
 11357   002840  0E00               	movlw	0
 11358   002842  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11359   002844  0E7F               	movlw	127
 11360   002846  2421               	addwf	??___fldiv^0,w,c
 11361   002848  6E2A               	movwf	___fldiv@new_exp^0,c
 11362   00284A  0E00               	movlw	0
 11363   00284C  2022               	addwfc	(??___fldiv+1)^0,w,c
 11364   00284E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11365   002850  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11366   002854  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11367   002858  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11368   00285C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11369   002860  0E00               	movlw	0
 11370   002862  6E19               	movwf	___fldiv@b^0,c
 11371   002864  0E00               	movlw	0
 11372   002866  6E1A               	movwf	(___fldiv@b+1)^0,c
 11373   002868  0E00               	movlw	0
 11374   00286A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11375   00286C  0E00               	movlw	0
 11376   00286E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11377   002870  0E00               	movlw	0
 11378   002872  6E2C               	movwf	___fldiv@grs^0,c
 11379   002874  0E00               	movlw	0
 11380   002876  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11381   002878  0E00               	movlw	0
 11382   00287A  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11383   00287C  0E00               	movlw	0
 11384   00287E  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11385   002880  0E00               	movlw	0
 11386   002882  6E31               	movwf	___fldiv@aexp^0,c
 11387   002884  EF7C  F014         	goto	l1245
 11388   002888                     l3833:
 11389   002888  5031               	movf	___fldiv@aexp^0,w,c
 11390   00288A  B4D8               	btfsc	status,2,c
 11391   00288C  EF4A  F014         	goto	u3301
 11392   002890  EF4C  F014         	goto	u3300
 11393   002894                     u3301:
 11394   002894  EF63  F014         	goto	l3841
 11395   002898                     u3300:
 11396   002898  90D8               	bcf	status,0,c
 11397   00289A  3625               	rlcf	___fldiv@rem^0,f,c
 11398   00289C  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11399   00289E  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11400   0028A0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11401   0028A2  90D8               	bcf	status,0,c
 11402   0028A4  3619               	rlcf	___fldiv@b^0,f,c
 11403   0028A6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11404   0028A8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11405   0028AA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11406   0028AC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11407   0028AE  EF5B  F014         	goto	u3311
 11408   0028B2  EF5D  F014         	goto	u3310
 11409   0028B6                     u3311:
 11410   0028B6  EF5E  F014         	goto	l1248
 11411   0028BA                     u3310:
 11412   0028BA  8019               	bsf	___fldiv@b^0,0,c
 11413   0028BC                     l1248:
 11414   0028BC  90D8               	bcf	status,0,c
 11415   0028BE  362C               	rlcf	___fldiv@grs^0,f,c
 11416   0028C0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11417   0028C2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11418   0028C4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11419   0028C6                     l3841:
 11420   0028C6  501D               	movf	___fldiv@a^0,w,c
 11421   0028C8  5C25               	subwf	___fldiv@rem^0,w,c
 11422   0028CA  501E               	movf	(___fldiv@a+1)^0,w,c
 11423   0028CC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11424   0028CE  501F               	movf	(___fldiv@a+2)^0,w,c
 11425   0028D0  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11426   0028D2  5020               	movf	(___fldiv@a+3)^0,w,c
 11427   0028D4  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11428   0028D6  A0D8               	btfss	status,0,c
 11429   0028D8  EF70  F014         	goto	u3321
 11430   0028DC  EF72  F014         	goto	u3320
 11431   0028E0                     u3321:
 11432   0028E0  EF7B  F014         	goto	l3847
 11433   0028E4                     u3320:
 11434   0028E4  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11435   0028E6  501D               	movf	___fldiv@a^0,w,c
 11436   0028E8  5E25               	subwf	___fldiv@rem^0,f,c
 11437   0028EA  501E               	movf	(___fldiv@a+1)^0,w,c
 11438   0028EC  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11439   0028EE  501F               	movf	(___fldiv@a+2)^0,w,c
 11440   0028F0  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11441   0028F2  5020               	movf	(___fldiv@a+3)^0,w,c
 11442   0028F4  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11443   0028F6                     l3847:
 11444   0028F6  2A31               	incf	___fldiv@aexp^0,f,c
 11445   0028F8                     l1245:
 11446   0028F8  0E19               	movlw	25
 11447   0028FA  6431               	cpfsgt	___fldiv@aexp^0,c
 11448   0028FC  EF82  F014         	goto	u3331
 11449   002900  EF84  F014         	goto	u3330
 11450   002904                     u3331:
 11451   002904  EF44  F014         	goto	l3833
 11452   002908                     u3330:
 11453   002908  5025               	movf	___fldiv@rem^0,w,c
 11454   00290A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11455   00290C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11456   00290E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11457   002910  B4D8               	btfsc	status,2,c
 11458   002912  EF8D  F014         	goto	u3341
 11459   002916  EF8F  F014         	goto	u3340
 11460   00291A                     u3341:
 11461   00291A  EFA7  F014         	goto	l3859
 11462   00291E                     u3340:
 11463   00291E  802C               	bsf	___fldiv@grs^0,0,c
 11464   002920  EFA7  F014         	goto	l3859
 11465   002924                     l3853:
 11466   002924  90D8               	bcf	status,0,c
 11467   002926  3619               	rlcf	___fldiv@b^0,f,c
 11468   002928  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11469   00292A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11470   00292C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11471   00292E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11472   002930  EF9C  F014         	goto	u3351
 11473   002934  EF9E  F014         	goto	u3350
 11474   002938                     u3351:
 11475   002938  EF9F  F014         	goto	l1254
 11476   00293C                     u3350:
 11477   00293C  8019               	bsf	___fldiv@b^0,0,c
 11478   00293E                     l1254:
 11479   00293E  90D8               	bcf	status,0,c
 11480   002940  362C               	rlcf	___fldiv@grs^0,f,c
 11481   002942  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11482   002944  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11483   002946  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11484   002948  062A               	decf	___fldiv@new_exp^0,f,c
 11485   00294A  A0D8               	btfss	status,0,c
 11486   00294C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11487   00294E                     l3859:
 11488   00294E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11489   002950  EFAC  F014         	goto	u3361
 11490   002954  EFAE  F014         	goto	u3360
 11491   002958                     u3361:
 11492   002958  EF92  F014         	goto	l3853
 11493   00295C                     u3360:
 11494   00295C  0E00               	movlw	0
 11495   00295E  6E31               	movwf	___fldiv@aexp^0,c
 11496   002960  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11497   002962  EFB5  F014         	goto	u3371
 11498   002966  EFB7  F014         	goto	u3370
 11499   00296A                     u3371:
 11500   00296A  EFDB  F014         	goto	l1256
 11501   00296E                     u3370:
 11502   00296E  0EFF               	movlw	255
 11503   002970  142C               	andwf	___fldiv@grs^0,w,c
 11504   002972  6E21               	movwf	??___fldiv^0,c
 11505   002974  0EFF               	movlw	255
 11506   002976  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11507   002978  6E22               	movwf	(??___fldiv+1)^0,c
 11508   00297A  0EFF               	movlw	255
 11509   00297C  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11510   00297E  6E23               	movwf	(??___fldiv+2)^0,c
 11511   002980  0E7F               	movlw	127
 11512   002982  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11513   002984  6E24               	movwf	(??___fldiv+3)^0,c
 11514   002986  5021               	movf	??___fldiv^0,w,c
 11515   002988  1022               	iorwf	(??___fldiv+1)^0,w,c
 11516   00298A  1023               	iorwf	(??___fldiv+2)^0,w,c
 11517   00298C  1024               	iorwf	(??___fldiv+3)^0,w,c
 11518   00298E  B4D8               	btfsc	status,2,c
 11519   002990  EFCC  F014         	goto	u3381
 11520   002994  EFCE  F014         	goto	u3380
 11521   002998                     u3381:
 11522   002998  EFD2  F014         	goto	l1257
 11523   00299C                     u3380:
 11524   00299C                     l3867:
 11525   00299C  0E01               	movlw	1
 11526   00299E  6E31               	movwf	___fldiv@aexp^0,c
 11527   0029A0  EFDB  F014         	goto	l1256
 11528   0029A4                     l1257:
 11529   0029A4  A019               	btfss	___fldiv@b^0,0,c
 11530   0029A6  EFD7  F014         	goto	u3391
 11531   0029AA  EFD9  F014         	goto	u3390
 11532   0029AE                     u3391:
 11533   0029AE  EFDB  F014         	goto	l1256
 11534   0029B2                     u3390:
 11535   0029B2  EFCE  F014         	goto	l3867
 11536   0029B6                     l1256:
 11537   0029B6  5031               	movf	___fldiv@aexp^0,w,c
 11538   0029B8  B4D8               	btfsc	status,2,c
 11539   0029BA  EFE1  F014         	goto	u3401
 11540   0029BE  EFE3  F014         	goto	u3400
 11541   0029C2                     u3401:
 11542   0029C2  EF07  F015         	goto	l3879
 11543   0029C6                     u3400:
 11544   0029C6  0E01               	movlw	1
 11545   0029C8  2619               	addwf	___fldiv@b^0,f,c
 11546   0029CA  0E00               	movlw	0
 11547   0029CC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11548   0029CE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11549   0029D0  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11550   0029D2  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11551   0029D4  EFEE  F014         	goto	u3411
 11552   0029D8  EFF0  F014         	goto	u3410
 11553   0029DC                     u3411:
 11554   0029DC  EF07  F015         	goto	l3879
 11555   0029E0                     u3410:
 11556   0029E0  C019  F021         	movff	___fldiv@b,??___fldiv
 11557   0029E4  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11558   0029E8  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11559   0029EC  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11560   0029F0  3424               	rlcf	(??___fldiv+3)^0,w,c
 11561   0029F2  3224               	rrcf	(??___fldiv+3)^0,f,c
 11562   0029F4  3223               	rrcf	(??___fldiv+2)^0,f,c
 11563   0029F6  3222               	rrcf	(??___fldiv+1)^0,f,c
 11564   0029F8  3221               	rrcf	??___fldiv^0,f,c
 11565   0029FA  C021  F019         	movff	??___fldiv,___fldiv@b
 11566   0029FE  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11567   002A02  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11568   002A06  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11569   002A0A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11570   002A0C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11571   002A0E                     l3879:
 11572   002A0E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11573   002A10  EF12  F015         	goto	u3421
 11574   002A14  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11575   002A16  E108               	bnz	u3420
 11576   002A18  282A               	incf	___fldiv@new_exp^0,w,c
 11577   002A1A  A0D8               	btfss	status,0,c
 11578   002A1C  EF12  F015         	goto	u3421
 11579   002A20  EF14  F015         	goto	u3420
 11580   002A24                     u3421:
 11581   002A24  EF1F  F015         	goto	l3883
 11582   002A28                     u3420:
 11583   002A28  0E00               	movlw	0
 11584   002A2A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11585   002A2C  682A               	setf	___fldiv@new_exp^0,c
 11586   002A2E  0E00               	movlw	0
 11587   002A30  6E19               	movwf	___fldiv@b^0,c
 11588   002A32  0E00               	movlw	0
 11589   002A34  6E1A               	movwf	(___fldiv@b+1)^0,c
 11590   002A36  0E00               	movlw	0
 11591   002A38  6E1B               	movwf	(___fldiv@b+2)^0,c
 11592   002A3A  0E00               	movlw	0
 11593   002A3C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11594   002A3E                     l3883:
 11595   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11596   002A40  EF2C  F015         	goto	u3430
 11597   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11598   002A46  E106               	bnz	u3431
 11599   002A48  042A               	decf	___fldiv@new_exp^0,w,c
 11600   002A4A  B0D8               	btfsc	status,0,c
 11601   002A4C  EF2A  F015         	goto	u3431
 11602   002A50  EF2C  F015         	goto	u3430
 11603   002A54                     u3431:
 11604   002A54  EF3A  F015         	goto	l3887
 11605   002A58                     u3430:
 11606   002A58  0E00               	movlw	0
 11607   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11608   002A5C  0E00               	movlw	0
 11609   002A5E  6E2A               	movwf	___fldiv@new_exp^0,c
 11610   002A60  0E00               	movlw	0
 11611   002A62  6E19               	movwf	___fldiv@b^0,c
 11612   002A64  0E00               	movlw	0
 11613   002A66  6E1A               	movwf	(___fldiv@b+1)^0,c
 11614   002A68  0E00               	movlw	0
 11615   002A6A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11616   002A6C  0E00               	movlw	0
 11617   002A6E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11618   002A70  0E00               	movlw	0
 11619   002A72  6E29               	movwf	___fldiv@sign^0,c
 11620   002A74                     l3887:
 11621   002A74  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11622   002A78  A030               	btfss	___fldiv@bexp^0,0,c
 11623   002A7A  EF41  F015         	goto	u3441
 11624   002A7E  EF43  F015         	goto	u3440
 11625   002A82                     u3441:
 11626   002A82  EF46  F015         	goto	l3893
 11627   002A86                     u3440:
 11628   002A86  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11629   002A88  EF47  F015         	goto	l3895
 11630   002A8C                     l3893:
 11631   002A8C  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 11632   002A8E                     l3895:
 11633   002A8E  90D8               	bcf	status,0,c
 11634   002A90  3030               	rrcf	___fldiv@bexp^0,w,c
 11635   002A92  6E1C               	movwf	(___fldiv@b+3)^0,c
 11636   002A94  EFFD  F013         	goto	l3809
 11637   002A98                     l1243:
 11638   002A98  0012               	return		;funcret
 11639   002A9A                     __end_of___fldiv:
 11640                           	callstack 0
 11641                           
 11642 ;; *************** function _HighISR *****************
 11643 ;; Defined at:
 11644 ;;		line 59 in file "interrupts.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;		None
 11647 ;; Auto vars:     Size  Location     Type
 11648 ;;		None
 11649 ;; Return value:  Size  Location     Type
 11650 ;;                  1    wreg      void 
 11651 ;; Registers used:
 11652 ;;		None
 11653 ;; Tracked objects:
 11654 ;;		On entry : 0/0
 11655 ;;		On exit  : 0/0
 11656 ;;		Unchanged: 0/0
 11657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11662 ;;Total ram usage:        0 bytes
 11663 ;; Hardware stack levels used: 1
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		Interrupt level 2
 11668 ;; This function uses a non-reentrant model
 11669 ;;
 11670                           
 11671                           	psect	intcode
 11672   000008                     __pintcode:
 11673                           	callstack 0
 11674   000008                     _HighISR:
 11675                           	callstack 22
 11676                           
 11677                           ;incstack = 0
 11678   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11679   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11680   00000C  0011               	retfie		f
 11681   00000E                     __end_of_HighISR:
 11682                           	callstack 0
 11683                           
 11684                           	psect	rparam
 11685   000000                     
 11686                           	psect	temp
 11687   00005F                     btemp:
 11688                           	callstack 0
 11689   00005F                     	ds	1
 11690   000000                     int$flags	set	btemp
 11691   000000                     wtemp8	set	btemp+1
 11692   000000                     ttemp5	set	btemp+1
 11693   000000                     ttemp6	set	btemp+4
 11694   000000                     ttemp7	set	btemp+8
 11695                           
 11696                           	psect	idloc
 11697                           
 11698                           ;Config register IDLOC0 @ 0x200000
 11699                           ;	unspecified, using default values
 11700   200000                     	org	2097152
 11701   200000  0FFF               	dw	4095
 11702                           
 11703                           ;Config register IDLOC1 @ 0x200002
 11704                           ;	unspecified, using default values
 11705   200002                     	org	2097154
 11706   200002  0FFF               	dw	4095
 11707                           
 11708                           ;Config register IDLOC2 @ 0x200004
 11709                           ;	unspecified, using default values
 11710   200004                     	org	2097156
 11711   200004  0FFF               	dw	4095
 11712                           
 11713                           ;Config register IDLOC3 @ 0x200006
 11714                           ;	unspecified, using default values
 11715   200006                     	org	2097158
 11716   200006  0FFF               	dw	4095
 11717                           
 11718                           ;Config register IDLOC4 @ 0x200008
 11719                           ;	unspecified, using default values
 11720   200008                     	org	2097160
 11721   200008  0FFF               	dw	4095
 11722                           
 11723                           ;Config register IDLOC5 @ 0x20000A
 11724                           ;	unspecified, using default values
 11725   20000A                     	org	2097162
 11726   20000A  0FFF               	dw	4095
 11727                           
 11728                           ;Config register IDLOC6 @ 0x20000C
 11729                           ;	unspecified, using default values
 11730   20000C                     	org	2097164
 11731   20000C  0FFF               	dw	4095
 11732                           
 11733                           ;Config register IDLOC7 @ 0x20000E
 11734                           ;	unspecified, using default values
 11735   20000E                     	org	2097166
 11736   20000E  0FFF               	dw	4095
 11737                           
 11738                           	psect	config
 11739                           
 11740                           ;Config register CONFIG1L @ 0x300000
 11741                           ;	External Oscillator mode Selection bits
 11742                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11743                           ;	Power-up default value for COSC bits
 11744                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11745   300000                     	org	3145728
 11746   300000  AA                 	db	170
 11747                           
 11748                           ;Config register CONFIG1H @ 0x300001
 11749                           ;	unspecified, using default values
 11750                           ;	Clock Out Enable bit
 11751                           ;	CLKOUTEN = 0x1, unprogrammed default
 11752                           ;	Clock Switch Enable bit
 11753                           ;	CSWEN = 0x1, unprogrammed default
 11754                           ;	Fail-Safe Clock Monitor Enable bit
 11755                           ;	FCMEN = 0x1, unprogrammed default
 11756   300001                     	org	3145729
 11757   300001  FF                 	db	255
 11758                           
 11759                           ;Config register CONFIG2L @ 0x300002
 11760                           ;	unspecified, using default values
 11761                           ;	Master Clear Enable bit
 11762                           ;	MCLRE = 0x1, unprogrammed default
 11763                           ;	Power-up Timer Enable bit
 11764                           ;	PWRTE = 0x1, unprogrammed default
 11765                           ;	Low-power BOR enable bit
 11766                           ;	LPBOREN = 0x1, unprogrammed default
 11767                           ;	Brown-out Reset Enable bits
 11768                           ;	BOREN = 0x3, unprogrammed default
 11769   300002                     	org	3145730
 11770   300002  FF                 	db	255
 11771                           
 11772                           ;Config register CONFIG2H @ 0x300003
 11773                           ;	unspecified, using default values
 11774                           ;	Brown Out Reset Voltage selection bits
 11775                           ;	BORV = 0x3, unprogrammed default
 11776                           ;	ZCD Disable bit
 11777                           ;	ZCD = 0x1, unprogrammed default
 11778                           ;	PPSLOCK bit One-Way Set Enable bit
 11779                           ;	PPS1WAY = 0x1, unprogrammed default
 11780                           ;	Stack Full/Underflow Reset Enable bit
 11781                           ;	STVREN = 0x1, unprogrammed default
 11782                           ;	Debugger Enable bit
 11783                           ;	DEBUG = 0x1, unprogrammed default
 11784                           ;	Extended Instruction Set Enable bit
 11785                           ;	XINST = 0x1, unprogrammed default
 11786   300003                     	org	3145731
 11787   300003  FF                 	db	255
 11788                           
 11789                           ;Config register CONFIG3L @ 0x300004
 11790                           ;	WDT Period Select bits
 11791                           ;	WDTCPS = 0x1F, unprogrammed default
 11792                           ;	WDT operating mode
 11793                           ;	WDTE = OFF, WDT Disabled
 11794   300004                     	org	3145732
 11795   300004  9F                 	db	159
 11796                           
 11797                           ;Config register CONFIG3H @ 0x300005
 11798                           ;	unspecified, using default values
 11799                           ;	WDT Window Select bits
 11800                           ;	WDTCWS = 0x7, unprogrammed default
 11801                           ;	WDT input clock selector
 11802                           ;	WDTCCS = 0x7, unprogrammed default
 11803   300005                     	org	3145733
 11804   300005  FF                 	db	255
 11805                           
 11806                           ;Config register CONFIG4L @ 0x300006
 11807                           ;	unspecified, using default values
 11808                           ;	Write Protection Block 0
 11809                           ;	WRT0 = 0x1, unprogrammed default
 11810                           ;	Write Protection Block 1
 11811                           ;	WRT1 = 0x1, unprogrammed default
 11812                           ;	Write Protection Block 2
 11813                           ;	WRT2 = 0x1, unprogrammed default
 11814                           ;	Write Protection Block 3
 11815                           ;	WRT3 = 0x1, unprogrammed default
 11816                           ;	Write Protection Block 3
 11817                           ;	WRT4 = 0x1, unprogrammed default
 11818                           ;	Write Protection Block 3
 11819                           ;	WRT5 = 0x1, unprogrammed default
 11820                           ;	Write Protection Block 3
 11821                           ;	WRT6 = 0x1, unprogrammed default
 11822                           ;	Write Protection Block 3
 11823                           ;	WRT7 = 0x1, unprogrammed default
 11824   300006                     	org	3145734
 11825   300006  FF                 	db	255
 11826                           
 11827                           ;Config register CONFIG4H @ 0x300007
 11828                           ;	unspecified, using default values
 11829                           ;	Configuration Register Write Protection bit
 11830                           ;	WRTC = 0x1, unprogrammed default
 11831                           ;	Boot Block Write Protection bit
 11832                           ;	WRTB = 0x1, unprogrammed default
 11833                           ;	Data EEPROM Write Protection bit
 11834                           ;	WRTD = 0x1, unprogrammed default
 11835                           ;	Scanner Enable bit
 11836                           ;	SCANE = 0x1, unprogrammed default
 11837                           ;	Low Voltage Programming Enable bit
 11838                           ;	LVP = 0x1, unprogrammed default
 11839   300007                     	org	3145735
 11840   300007  FF                 	db	255
 11841                           
 11842                           ;Config register CONFIG5L @ 0x300008
 11843                           ;	unspecified, using default values
 11844                           ;	UserNVM Program Memory Code Protection bit
 11845                           ;	CP = 0x1, unprogrammed default
 11846                           ;	DataNVM Memory Code Protection bit
 11847                           ;	CPD = 0x1, unprogrammed default
 11848   300008                     	org	3145736
 11849   300008  FF                 	db	255
 11850                           
 11851                           ;Config register CONFIG5H @ 0x300009
 11852                           ;	unspecified, using default values
 11853   300009                     	org	3145737
 11854   300009  FF                 	db	255
 11855                           
 11856                           ;Config register CONFIG6L @ 0x30000A
 11857                           ;	unspecified, using default values
 11858                           ;	Table Read Protection Block 0
 11859                           ;	EBTR0 = 0x1, unprogrammed default
 11860                           ;	Table Read Protection Block 1
 11861                           ;	EBTR1 = 0x1, unprogrammed default
 11862                           ;	Table Read Protection Block 2
 11863                           ;	EBTR2 = 0x1, unprogrammed default
 11864                           ;	Table Read Protection Block 3
 11865                           ;	EBTR3 = 0x1, unprogrammed default
 11866                           ;	Table Read Protection Block 4
 11867                           ;	EBTR4 = 0x1, unprogrammed default
 11868                           ;	Table Read Protection Block 5
 11869                           ;	EBTR5 = 0x1, unprogrammed default
 11870                           ;	Table Read Protection Block 6
 11871                           ;	EBTR6 = 0x1, unprogrammed default
 11872                           ;	Table Read Protection Block 7
 11873                           ;	EBTR7 = 0x1, unprogrammed default
 11874   30000A                     	org	3145738
 11875   30000A  FF                 	db	255
 11876                           
 11877                           ;Config register CONFIG6H @ 0x30000B
 11878                           ;	unspecified, using default values
 11879                           ;	Boot Block Table Read Protection bit
 11880                           ;	EBTRB = 0x1, unprogrammed default
 11881   30000B                     	org	3145739
 11882   30000B  FF                 	db	255
 11883                           tosu	equ	0xFFF
 11884                           tosh	equ	0xFFE
 11885                           tosl	equ	0xFFD
 11886                           stkptr	equ	0xFFC
 11887                           pclatu	equ	0xFFB
 11888                           pclath	equ	0xFFA
 11889                           pcl	equ	0xFF9
 11890                           tblptru	equ	0xFF8
 11891                           tblptrh	equ	0xFF7
 11892                           tblptrl	equ	0xFF6
 11893                           tablat	equ	0xFF5
 11894                           prodh	equ	0xFF4
 11895                           prodl	equ	0xFF3
 11896                           indf0	equ	0xFEF
 11897                           postinc0	equ	0xFEE
 11898                           postdec0	equ	0xFED
 11899                           preinc0	equ	0xFEC
 11900                           plusw0	equ	0xFEB
 11901                           fsr0h	equ	0xFEA
 11902                           fsr0l	equ	0xFE9
 11903                           wreg	equ	0xFE8
 11904                           indf1	equ	0xFE7
 11905                           postinc1	equ	0xFE6
 11906                           postdec1	equ	0xFE5
 11907                           preinc1	equ	0xFE4
 11908                           plusw1	equ	0xFE3
 11909                           fsr1h	equ	0xFE2
 11910                           fsr1l	equ	0xFE1
 11911                           bsr	equ	0xFE0
 11912                           indf2	equ	0xFDF
 11913                           postinc2	equ	0xFDE
 11914                           postdec2	equ	0xFDD
 11915                           preinc2	equ	0xFDC
 11916                           plusw2	equ	0xFDB
 11917                           fsr2h	equ	0xFDA
 11918                           fsr2l	equ	0xFD9
 11919                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     213
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2458$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2405$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2405$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  292907
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                             13     9      4  115191
                                             35 COMRAM    11     7      4
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                     _fullSpeedAhead
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   14100
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14708
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7824
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9251
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20547
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2320
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D5       7       83.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     236      61        0.0%
DATA                 0      0     236       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 17:55:54 2023

               _color_read_Red 46BE                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 466E                   ___fldiv@sign 0029                _color_read_Blue 475E  
                           l43 45C8                             l52 470C                             l61 4268  
                           l46 4AEC                             l55 475C                             l64 2DC6  
                           l49 46BC                             l74 1900                             l58 47AC  
          ___wmul@multiplicand 0003               _color_read_Green 470E                readColours@vals 000C  
            ??_Interrupts_init 0001                            l210 4B42                            l141 4A5A  
                          l150 4B58                            l207 4B2E                            l144 4A80  
                          l216 4A2E                            l153 4B62                            l401 1DB8  
                          l138 4A58                            l147 4B6C                            l500 3E20  
                          l156 4B4E                            l270 4B76                            l159 48C6  
                          l530 4480                            l426 1E12                            l418 1DB4  
                          l524 3EBE                            l516 3D82                            l508 3CE4  
                          l533 43D0                            l542 431C                            l198 4B2A  
                          l527 4428                            l551 49FE                            l536 4376  
                          l560 466C                            l554 420A                            l634 3272  
                          l563 4524                            l539 42C2                            l492 4046  
                          l548 49C0                            l572 4944                            l628 3268  
                          l396 199E                            l661 4ACC                            l557 461A  
                          l486 371A                            l566 4576                            l655 4B0C  
                          l575 4982                            l479 3F46                            l920 3C46  
                          l569 3FC8                            l658 4AA6                            l931 3AD2  
                          l926 3A8C                            l775 35AE                            l788 387E  
                          _abs 48C8                            _pad 4048                            _rel 01B2  
                          wreg 000FE8                   ___flmul@aexp 0043                   ___flmul@bexp 0044  
                 ___flmul@sign 003E                   ___flmul@temp 0049                   ___flmul@prod 0045  
              Colour_decider@i 007A                           ?_abs 0013                           l1206 211E  
                         l1215 21EE                           l1231 4840                           l1216 21DC  
                         l1152 412C                           l1401 48FE                           l1330 33BE  
                         l1243 2A98                           l1323 3362                           l1316 32CA  
                         l1404 4906                           l1245 28F8                           l1254 293E  
                         l1190 1FF2                           l1191 1FB8                           l1319 3426  
                         l1159 4134                           l1256 29B6                           l1248 28BC  
                         l1416 3B9C                           l1424 4884                           l1257 29A4  
                         l3201 3490                           l3121 3AD4                           l1361 406A  
                         l1282 2590                           l1370 2E54                           l4003 2618  
                         l4011 2660                           l1275 239A                           l3211 34E4  
                         l3203 349C                           l1427 4B74                           l3131 3B56  
                         l3123 3AE6                           l1339 44D2                           l1292 26C0  
                         l1284 2608                           l1372 2E5C                           l4021 26D4  
                         l4013 267A                           l4005 2624                           l1285 25F6  
                         l1189 2004                           l4101 3394                           l3141 40C2  
                         l3301 3D6A                           l3221 3558                           l3213 34F6  
                         l3205 34BA                           l3125 3AF8                           l1365 40C0  
                         l1373 2EA2                           l1198 22D4                           l4023 26E2  
                         l4015 268E                           l4007 2632                           l1279 26FE  
                         l4111 33D2                           l4103 33A0                           l3151 40FA  
                         l3143 40CA                           l3135 4AA8                           l3311 3FFE  
                         l3303 3FCA                           l3215 3524                           l3207 34C2  
                         l3223 355E                           l3231 371C                           l3127 3B02  
                         l1391 39CE                           l1384 3044                           l4041 3BCC  
                         l4025 26E4                           l4017 26A8                           l4009 265C  
                         l4033 47FC                           l4113 33F6                           l4105 33AE  
                         l4201 0F82                           l3161 4126                           l3153 4100  
                         l3145 40DC                           l3137 4AC4                           l3305 3FCE  
                         l3313 4016                           l3321 3DC0                           l3225 356E  
                         l3217 3544                           l3209 34D6                           l3241 3760  
                         l3233 3720                           l3129 3B20                           l3401 2FFE  
                         l4051 3C44                           l4043 3BDC                           l4019 26C4  
                         l4027 26EA                           l4035 480C                           l4115 3406  
                         l4107 33CC                           l4211 1032                           l4203 0F8A  
                         l3155 4116                           l3147 40E4                           l3171 35B0  
                         l3315 402E                           l3307 3FE6                           l3323 3DCC  
                         l3331 3C48                           l3411 4B64                           l3227 358E  
                         l3219 3546                           l3251 37C8                           l3243 3780  
                         l3235 372E                           l3163 4842                           l3403 300E  
                         l4123 47AE                           l4045 3C0A                           l4061 3A3C  
                         l4029 26EE                           l3501 1EDC                           l4117 3414  
                         l4109 33CE                           l4301 1650                           l4221 1148  
                         l4213 1088                           l4205 0FDE                           l3157 411E  
                         l3149 40EC                           l3181 367A                           l3173 35CC  
                         l3309 3FF2                           l3325 3DD8                           l3317 3D84  
                         l3333 3C6C                           l3341 3CB4                           l3413 4B68  
                         l3421 4B5E                           l4141 45A0                           l4133 4578  
                         l3261 383E                           l3253 37F6                           l3245 379E  
                         l3237 374E                           l3165 484E                           l3405 3014  
                         l1397 47FA                           l4125 47BA                           l4047 3C1A  
                         l4039 3B9E                           l4071 3ACA                           l4063 3A4C  
                         l4055 39D0                           l3511 1F16                           l3503 1EDE  
                         l4119 3416                           l4231 127A                           l4223 1158  
                         l4207 1010                           l3159 4120                           l3183 3696  
                         l3175 3620                           l3351 3E6A                           l3319 3DA8  
                         l3327 3DF0                           l3343 3CCC                           l3335 3C84  
                         l3415 4B46                           l4151 45BA                           l4143 45AA  
                         l4135 457C                           l3431 4894                           l3423 4B50  
                         l3191 343A                           l3263 385E                           l3255 3816  
                         l3247 37A6                           l3239 3752                           l3167 4860  
                         l3271 4062                           l3407 3024                           l4127 47D6  
                         l4049 3C3E                           l4073 3AD0                           l4065 3A5A  
                         l4057 39FE                           l3601 2134                           l3521 1F2A  
                         l3513 1F1A                           l3505 1EE6                           l4081 3294  
                         l4321 1702                           l4305 165C                           l4233 12F6  
                         l4225 1190                           l4217 1094                           l4209 1016  
                         l3185 36DA                           l3177 3634                           l3353 3E76  
                         l3345 3E22                           l3329 3E08                           l4401 4B00  
                         l3337 3C90                           l3441 43D2                           l3417 4B4A  
                         l4161 45C4                           l4153 45BC                           l4145 45B4  
                         l4137 4586                           l3433 489C                           l3425 4B54  
                         l3193 345A                           l3257 3828                           l3249 37BA  
                         l3281 48C8                           l3169 4864                           l3273 4076  
                         l3361 2DE8                           l4129 47F2                           l4067 3A6C  
                         l4059 3A0E                           l3611 2170                           l3603 2144  
                         l3531 1F3E                           l3523 1F2E                           l3515 1F1E  
                         l3507 1EF6                           l4091 330C                           l4083 32DA  
                         l4323 1734                           l4307 168E                           l4227 11A2  
                         l4235 134E                           l4219 10A8                           l3179 3638  
                         l3347 3E46                           l3355 3E8E                           l3451 4454  
                         l3291 3D0A                           l4403 4B0A                           l3339 3C9C  
                         l3443 43E6                           l3419 4B5A                           l4163 45C6  
                         l4155 45BE                           l4147 45B6                           l4139 4596  
                         l4171 2B9A                           l4411 3ED6                           l3435 48C2  
                         l3427 4888                           l3195 345E                           l3187 3428  
                         l3259 382E                           l3283 48E2                           l3275 408A  
                         l3267 4048                           l3371 2E64                           l3363 2DFC  
                         l4069 3A7A                           l3621 219C                           l3613 2172  
                         l3541 1F52                           l3533 1F42                           l3525 1F32  
                         l3517 1F22                           l3509 1F08                           l4093 3318  
                         l4085 32F0                           l4077 3276                           l4341 186C  
                         l4325 1766                           l4309 16C0                           l4261 14CC  
                         l4237 1380                           l4245 13BE                           l4229 121E  
                         l4181 0E26                           l3357 3EA6                           l3349 3E5E  
                         l3453 4378                           l3293 3D22                           l3445 43FC  
                         l3701 4A40                           l3285 4A5A                           l4157 45C0  
                         l4149 45B8                           l4173 2C2E                           l3461 427E  
                         l4501 31AE                           l4421 3F20                           l4413 3ED8  
                         l4405 3EC0                           l3437 48C4                           l3429 488C  
                         l4165 420C                           l3197 346C                           l3189 342C  
                         l3277 408E                           l3269 4056                           l3381 2E9E  
                         l3373 2E74                           l3365 2E0C                           l3631 21D4  
                         l3615 2180                           l3607 2158                           l3623 219E  
                         l3551 1FB0                           l3535 1F46                           l3527 1F36  
                         l3519 1F26                           l3543 1F56                           l3471 1E32  
                         l4095 334A                           l4079 3286                           l4327 1798  
                         l4335 17CE                           l4271 1548                           l4247 13F0  
                         l4255 142E                           l4239 13B2                           l4191 0EF4  
                         l4183 0E50                           l3455 438C                           l3447 442A  
                         l3295 3D2E                           l3703 4A42                           l3287 4A6A  
                         l4159 45C2                           l4175 2C62                           l4167 2A9A  
                         l3463 4296                           l4511 3232                           l4503 31C6  
                         l4431 3F3A                           l4423 3F22                           l4415 3EEE  
                         l4407 3ED2                           l3711 466E                           l3199 348C  
                         l3279 40AC                           l3391 2F42                           l3383 2EAA  
                         l3375 2E7A                           l3367 2E2C                           l3359 2DC8  
                         l3801 27BC                           l3641 2252                           l3617 2188  
                         l3609 2162                           l3625 21AC                           l3561 1FE6  
                         l3553 1FC6                           l3545 1F5A                           l3537 1F4A  
                         l3529 1F3A                           l3473 1E42                           l3481 1E6C  
                         l3465 1E16                           l4097 334C                           l4089 3304  
                         l4337 1800                           l4361 18F8                           l4257 1460  
                         l4281 1560                           l4249 1422                           l4185 0E5C  
                         l3457 43A4                           l3449 443E                           l3297 3D3A  
                         l3289 3CE6                           l3705 4A44                           l4177 2CFA  
                         l4169 2B66                           l4513 3250                           l4505 31E4  
                         l4433 3F44                           l4425 3F2C                           l4417 3EF2  
                         l4409 3ED4                           l3713 46B4                           l3393 2F48  
                         l3385 2EB4                           l3377 2E8A                           l3369 2E48  
                         l4441 4482                           l4601 1952                           l3811 27FE  
                         l3803 27CC                           l3651 2298                           l3635 21FE  
                         l3643 2254                           l3627 21B0                           l3619 218C  
                         l3571 2036                           l3563 1FF0                           l3555 1FD2  
                         l3547 1F84                           l3539 1F4E                           l3491 1E9C  
                         l3483 1E7C                           l3475 1E52                           l3467 1E22  
                         l4099 3358                           l4339 1832                           l4283 1592  
                         l4259 1492                           l4187 0E8C                           l3299 3D52  
                         l3707 4A46                           l4179 2D2E                           l4435 4A82  
                         l3459 426A                           l4507 31FC                           l4515 3268  
                         l4427 3F2E                           l4419 3F16                           l4371 4B24  
                         l3731 47A4                           l3723 470E                           l3387 2EBA  
                         l3395 2FAC                           l3379 2E96                           l4443 4494  
                         l4611 1970                           l4603 195A                           l3805 27E2  
                         l3661 22C2                           l3653 22A6                           l3645 2264  
                         l3637 220A                           l3629 21BE                           l3581 2072  
                         l3573 2046                           l3565 2012                           l3557 1FD6  
                         l3549 1FA0                           l3493 1EAA                           l3485 1E82  
                         l3477 1E62                           l3469 1E30                           l4357 18EC  
                         l4349 18AA                           l4293 1606                           l4285 15C4  
                         l4277 1554                           l4269 150A                           l4197 0EFE  
                         l4189 0EC0                           l4461 3F74                           l4453 45CA  
                         l3709 4AD0                           l4437 4A84                           l3741 42D8  
                         l4509 321A                           l4429 3F38                           l4373 4B26  
                         l4365 4B0E                           l3725 4754                           l3717 46BE  
                         l4381 4A12                           l3397 2FC6                           l3389 2F3C  
                         l4445 449C                           l4701 1C3A                           l4621 199A  
                         l4613 1978                           l4605 1960                           ?_pad 0011  
                         l3831 2880                           l3823 2836                           l3807 27F2  
                         l3815 2812                           l3911 2302                           l3903 22D6  
                         l3663 22C4                           l3655 22AC                           l3647 2274  
                         l3639 2218                           l3591 20B8                           l3583 2080  
                         l3575 2054                           l3567 2022                           l3559 1FE4  
                         l3495 1EAC                           l3487 1E94                           l3479 1E64  
                         l4295 1644                           l4199 0F50                           l4455 461C  
                         l4463 3F88                           l4439 4A8A                           l3743 42F0  
                         l3751 49C2                           l4375 4B28                           l4367 4B18  
                         l3719 4704                           l3735 4B2E                           l4383 4A16  
                         l3399 2FE4                           l3671 38B2                           l4447 44A4  
                         l4711 1C80                           l4703 1C3E                           l4631 19E4  
                         l4623 19AC                           l4615 1980                           l4607 1964  
                         l3841 28C6                           l3833 2888                           l3825 2850  
                         l3817 2822                           l3809 27FA                           l3921 233E  
                         l3913 2312                           l3905 22E2                           l3657 22AE  
                         l3649 2294                           l3593 20EC                           l3585 2082  
                         l3577 2062                           l3497 1EBC                           l3489 1E96  
                         l4465 3F9C                           l4457 3F48                           l3753 4526  
                         l3745 4984                           l3761 4908                           l4481 3086  
                         l4473 3060                           l4369 4B1A                           l3729 475E  
                         l3737 4B3E                           l4377 4A00                           l3681 390E  
                         l3673 38C0                           l4449 44C0                           l4721 1CC6  
                         l4713 1C84                           l4705 1C42                           l4641 1A62  
                         l4633 19F0                           l4625 19C4                           l4617 198A  
                         l4609 1968                           l3851 291E                           l3843 28E4  
                         l3835 2898                           l3827 2860                           l3819 2822  
                         l3771 271C                           l3931 2374                           l3923 2344  
                         l3915 2322                           l3907 22F0                           l3659 22B4  
                         l3595 20EE                           l3587 208C                           l3579 206E  
                         l3499 1ECC                           l3755 431E                           l4459 3F5C  
                         l3739 42C4                           l3747 44D4                           l3763 4946  
                         l4491 3124                           l4483 30BC                           l4475 3068  
                         l4467 3046                           l4379 4A04                           l3683 3964  
                         l3675 38C6                           l3691 39A6                           l3667 3880  
                         l4731 1D0C                           l4723 1CCA                           l4715 1C88  
                         l4707 1C58                           l4651 1AAE                           l4643 1A68  
                         l4635 1A04                           l4627 19C8                           l4619 1992  
                         l4571 1912                           l4563 1902                           l3861 295C  
                         l3853 2924                           l3845 28E6                           l3837 28AC  
                         l3829 2870                           l3773 272C                           l3781 2756  
                         l3765 2700                           l3933 2384                           l3925 2352  
                         l3917 2328                           l3909 22F2                           l3597 20FE  
                         l3589 2092                           l3757 4332                           l4397 4AEE  
                         l3749 41A6                           l4493 3142                           l4485 30D8  
                         l4477 306E                           l4469 304E                           l3677 38D6  
                         l3669 38A4                           l4741 1D56                           l4733 1D10  
                         l4725 1CCE                           l4709 1C6C                           l4717 1C9E  
                         l4661 1AFC                           l4653 1AB6                           l4645 1A70  
                         l4637 1A22                           l4629 19D0                           l4581 1928  
                         l4573 1916                           l4565 1906                           l3871 29C6  
                         l3863 2960                           l3855 292E                           l3847 28F6  
                         l3839 28BA                           l3791 2782                           l3783 2766  
                         l3775 273C                           l3767 270C                           l3951 2406  
                         l3943 23CE                           l3935 238A                           l3927 2354  
                         l3919 2338                           l3599 210E                           l3759 434A  
                         l4399 4AF6                           l4495 315A                           l4487 30F0  
                         l3687 3994                           l3679 38F2                           l4751 1DF2  
                         l4743 1D68                           l4735 1D14                           l4719 1CB2  
                         l4727 1CE4                           l4671 1B68                           l4663 1B02  
                         l4655 1ABE                           l4647 1A8C                           l4639 1A4A  
                         l4591 1934                           l4583 192A                           l4575 1922  
                         l4567 190A                           l3881 2A28                           l3873 29D2  
                         l3865 296E                           l3857 293C                           l3849 2908  
                         l3793 2792                           l3785 276C                           l3777 274C  
                         l3769 271A                           l3961 2450                           l3953 241E  
                         l3945 23DA                           l3937 23AA                           l3929 2364  
                         l3697 4A30                           l4497 3178                           l4489 310C  
                         l4745 1D7C                           l4729 1CF8                           l4737 1D2A  
                         l4681 1BAE                           l4673 1B6C                           l4665 1B34  
                         l4649 1AA6                           l4657 1AD6                           l4753 1DFE  
                         l4593 193A                           l4585 192E                           l4577 1924  
                         l4569 190E                           l3891 2A86                           l3883 2A3E  
                         l3875 29E0                           l3867 299C                           l3859 294E  
                         l3795 27A2                           l3787 2772                           l3779 274E  
                         l3971 24A6                           l3963 2460                           l3955 242A  
                         l3947 23E4                           l3939 23BA                           l3699 4A3A  
                         l4499 3190                           l4747 1DA6                           l4739 1D3E  
                         l4691 1BF4                           l4683 1BB2                           l4675 1B70  
                         l4667 1B40                           l4659 1AF4                           l4595 193E  
                         l4587 1930                           l4579 1926                           l3893 2A8C  
                         l3885 2A58                           l3877 2A0A                           l3797 27B2  
                         l3789 2780                           l3981 254A                           l3973 24C2  
                         l3965 246C                           l3957 2436                           l3949 23FA  
                         l4749 1DC0                           l4693 1BF8                           l4685 1BB6  
                         l4669 1B54                           l4677 1B86                           l4597 1942  
                         l4589 1932                           l3895 2A8E                           l3887 2A74  
                         l3879 2A0E                           l3799 27B4                           l3991 25A0  
                         l3983 2558                           l3975 24CE                           l3967 247C  
                         l3959 2444                           l4695 1BFC                           l4679 1B9A  
                         l4687 1BCC                           l4599 194A                           l3889 2A78  
                         l3993 25AE                           l3985 2576                           l3977 24EA  
                         l3969 2496                           l4689 1BE0                           l4697 1C12  
                         l3995 25B2                           l3987 2580                           l3979 2514  
                         l4699 1C26                           l3997 25C0                           l3989 258E  
                         l3999 25EE                    GreenMove@mL 0020                    GreenMove@mR 0022  
                         STR_1 0E01                           STR_2 0E01                           u3000 20FE  
                         u3001 20FA                           u3010 2134                           u3011 2130  
                         u3100 21FE                           u3020 2144                           u2300 3AF8  
                         u3101 21FA                           u3021 2140                           u2301 3AF4  
                         u3110 2218                           u3030 2170                           u2310 3B20  
                         u3111 2214                           u3031 216C                           u2311 3B1C  
                         u3120 2252                           u3040 2180                           u4000 1592  
                         u2400 346C                           u2320 3B56                           u3200 390E  
                 _BAUD4CONbits 000EE9                           u3121 224E                           u3041 217C  
                         u4001 158E                           u2401 3468                           u2321 3B52  
                         u3201 390A                           u3130 2264                           u3050 219C  
                         u4010 15C4                           u2330 40DC                           u3210 4B3E  
                         u3131 2260                           u3051 2198                           u4011 15C0  
                         u2331 40D8                           u3211 4B3A                           u2411 3496  
                         u3300 2898                           u3220 271A                           u3140 2274  
                         u3060 21AC                           u4100 17CA                           u4020 1602  
                         u2340 40FA                           u2420 34BA                           u2500 37F6  
                         u3301 2894                           u3221 2716                           u3141 2270  
                         u3061 21A8                           u4101 17C6                           u4021 15FE  
                         u2341 40F6                           u2421 34B6                           u2501 37F2  
                         u3310 28BA                           u3230 272C                           u3150 2294  
                         u3070 21BE                           u4110 1800                           u4030 1644  
                         u2350 4116                           u2430 34E4                           u2510 383E  
                         u3311 28B6                           u3231 2728                           u3151 2290  
                         u3071 21BA                           u4111 17FC                           u4031 1640  
                         u2351 4112                           u2431 34E0                           u2511 383A  
                         u3400 29C6                           u3320 28E4                           u3240 273C  
                         u3160 22A6                           u3080 21D4                           u4120 1832  
                         u4040 168E                           u2600 4046                           u4200 305C  
                         u2440 3524                           u2360 4884                           u2520 4056  
                         u3401 29C2                           u3321 28E0                           u3241 2738  
                         u3161 22A2                           u3081 21D0                           u4121 182E  
                         u4041 168A                           u2601 4042                           u4201 3058  
                         u2441 3520                           u2361 4880                           u2521 4052  
                         u3410 29E0                           u3330 2908                           u3250 2780  
                         u3170 22C2                           u3090 21EA                           u4130 186C  
                         u4050 16C0                           u2370 35CC                           u2610 3E08  
                         u4210 30BC                           u2450 356E                           u2290 3AE6  
                         u2530 40AC                           _T2PR 000FBC                           u3411 29DC  
                         u3331 2904                           u3251 277C                           u3171 22BE  
                         u3091 21E6                           u4131 1868                           u4051 16BC  
                         u2371 35C8                           u2611 3E04                           u4211 30B8  
                         u2451 356A                           u2291 3AE2                           u2531 40A8  
                         u3420 2A28                           u3340 291E                           u3260 2792  
                         u3500 2374                           u4140 18A6                           u4060 16FE  
                         u2380 3696                           u2620 3E20                           u4220 30D8  
                         u2460 372E                           u2540 48E2                           u2700 2E48  
                         u3180 38A4                           u3421 2A24                           u3341 291A  
                         u3261 278E                           u3501 2370                           u4141 18A2  
                         u4061 16FA                           u2381 3692                           u2621 3E1C  
                         u4221 30D4                           u2461 372A                           u2541 48DE  
                         u2701 2E44                           u3181 38A0                           u3430 2A58  
                         u3350 293C                           u3270 27A2                           u3510 23AA  
                         u4150 18E8                           u4070 1734                           u2630 3CCC  
                         u2550 4A6A                           u4230 310C                           u2390 343A  
                         u2470 3760                           u2710 2E74                           u3190 38F2  
                         u3431 2A54                           u3351 2938                           u3271 279E  
                         u3511 23A6                           u4151 18E4                           u4071 1730  
                         u2631 3CC8                           u2551 4A66                           u4231 3108  
                         u2391 3436                           u2471 375C                           u2711 2E70  
                         u3191 38EE                           u3440 2A86                           u3360 295C  
                         u3280 27E2                           u3600 2632                           u3520 23BA  
                         u2800 1E42                           u4080 1766                           u2640 3CE4  
                         u2560 4A80                           u4240 3142                           u4160 4A2E  
                         u2480 379E                           u2720 2E8A                           u4400 1B9A  
                         u3441 2A82                           u3361 2958                           u3281 27DE  
                         u3601 262E                           u3521 23B6                           u2801 1E3E  
                         u4081 1762                           u2641 3CE0                           u2561 4A7C  
                         u4241 313E                           u4161 4A2A                           u2481 379A  
                         u2721 2E86                           u4401 1B96                           u3370 296E  
                         u3290 2822                           u3610 267A                           u3530 2534  
                         u3450 22F0                           u2810 1E52                           u4090 1798  
                         u2650 3EA6                           u2570 3D6A                           u4250 3178  
                         u2490 37C8                           u2730 2FC6                           u4410 1BE0  
                         u3371 296A                           u3291 281E                           u3611 2676  
                         u3451 22EC                           u2811 1E4E                           u4091 1794  
                         u2651 3EA2                           u2571 3D66                           u4251 3174  
                         u2491 37C4                           u2731 2FC2                           u4411 1BDC  
                         u3380 299C                           u3700 3A7A                           u3620 26A8  
                         u3540 258E                           u3460 2302                           u2900 1F9E  
                         u2820 1E94                           u2660 3EBE                           u2580 3D82  
                         u4260 31AE                           u2740 2FE4                           u4420 1C26  
                         u3381 2998                           u3701 3A76                           u3621 26A4  
                         u3541 258A                           u3461 22FE                           u2821 1E90  
                         u2661 3EBA                           u2581 3D7E                           u4261 31AA  
                         u2741 2FE0                           u4421 1C22                           u3390 29B2  
                         u3710 3ACA                           u3630 26E2                           u3550 25AE  
                         u3470 2312                           u2910 1FC6                           u2830 1EAA  
                         u2590 402E                           u4270 31E4                           u2750 2FFE  
                         u2670 2DF8                           u4430 1C6C                           u4350 19AC  
                         u3391 29AE                           u3711 3AC6                           u3631 26DE  
                         u3551 25AA                           u3535 252A                           u3471 230E  
                         u2911 1FC2                           u2831 1EA6                           u2591 402A  
                         u4271 31E0                           u2751 2FFA                           u2671 2DF2  
                         u4431 1C68                           u4351 19A8                           u3640 3BCC  
                         u3560 25C0                           u3480 2352                           u2920 1FE4  
                         u2840 1EBC                           u3800 3406                           u3720 3286  
                         u4280 321A                           u2760 300E                           u2680 2DFA  
                         u4440 1CB2                           u4360 1A22                           u3641 3BC8  
                         u3561 25BC                           u3481 234E                           u2921 1FE0  
                         u2841 1EB8                           u3801 3402                           u3721 3282  
                         u4281 3216                           u2761 300A                           u4441 1CAE  
                         u4361 1A1E                           u3650 3C0A                           u3570 25EE  
                         u3490 2364                           u2930 2004                           u2850 1ECC  
                         u3810 3414                           u3730 3294                           u4290 3250  
                         u2770 48B0                           u2690 2E0C                           u4450 1CF8  
                         u4370 1AA6                           u3651 3C06                           u3571 25EA  
                         u3491 2360                           u2931 2000                           u2851 1EC8  
                         u3811 3410                           u3731 3290                           u4291 324C  
                         u2771 48A8                           u2691 2E08                           u4451 1CF4  
                         u4371 1AA2                           u3660 3C3E                           u3580 2604  
                         u2940 2012                           u2860 1F08                           u3740 32F0  
                         u3900 11A2                           u3820 47F2                           u4460 1D3E  
                         u4380 1AF4                           u3661 3C3A                           u3581 2600  
                         u2941 200E                           u2861 1F04                           u3741 32EC  
                         u3901 119E                           u3821 47EE                           u4461 1D3A  
                         u4381 1AF0                           u3670 39FE                           u3590 2618  
                         u2950 2022                           u2870 1F16                           u2790 1E30  
                         u3750 3346                           u3910 1380                           u4470 1D68  
                         u4390 1B54                           u3671 39FA                           u3591 2614  
                         u2951 201E                           u2871 1F12                           u2791 1E2C  
                         u3751 3342                           u3911 137C                           u3831 0E56  
                         u4607 42B4                           u4471 1D64                           u4391 1B50  
                         u3680 3A3C                           u2960 2054                           u2880 1F84  
                         u3760 3390                           u3920 13B2                           u3840 0F50  
                         u4480 1E12                           u3681 3A38                           u2961 2050  
                         u2881 1F80                           u3761 338C                           u3921 13AE  
                         u3841 0F4C                           u4617 42E2                           u4481 1E0E  
                         u3690 3A5A                           u2970 2062                           u2890 1F9C  
                         u3770 33AE                           u3930 13F0                           u3850 0FDE  
                         u3691 3A56                           u2971 205E                           u2891 1F96  
                         u3771 33AA                           u3931 13EC                           u3851 0FDA  
                         u4707 4448                           u4627 430E                           u2980 2080  
                         u3780 33BE                           u3940 1422                           u3860 1032  
                         u2788 48B2                           u2981 207C                           u3781 33BA  
                         u3941 141E                           u3861 102E                           u4717 4472  
                         u4637 458C                           u2990 20B8                           u3790 33CC  
                         u3950 1460                           u3870 1088                           u2991 20B4  
                         u3791 33C8                           u3951 145C                           u3871 1084  
                         u4727 3DE2                           u4647 43F0                           u4567 19B6  
                         u3960 1492                           u3880 10A8                           u3961 148E  
                         u3881 10A4                           u4737 433C                           u4657 441A  
                         u4577 1A54                           u3970 14CC                           u3890 1158  
                         u3971 14C8                           u3891 1154                           u4747 4368  
                         u4667 3CA6                           u4587 1AC8                           u3980 1506  
                         u3981 1502                           u4757 4396                           u4677 3F66  
                         u4597 4288                           u3990 1548                           u3991 1544  
                         u4767 43C2                           u4687 3FA6                           u4777 4008  
                         u4697 3D44                           u4787 3E80                  _LightBlueMove 4526  
                         abs@a 0013                           _dbuf 0192                           _main 1902  
                         _dtoa 2DC8                           _prec 00F0                           _vals 01C7  
                         pad@i 0018                           pad@p 0015                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001A                           fsr2l 000FD9                           btemp 005F  
                         _stop 3FCA                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 002A         __end_of_color_read_Red 470E  
              __end_of_HighISR 000E         __end_of_color_read_lum 46BE                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 49C2  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 43D2                __end_of___aodiv 35B0                __end_of___fladd 22D6  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3880  
              __end_of___fldiv 2A9A                __end_of___flmul 2700                __end_of___flsub 4842  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 4136  
                        i2l275 000A                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 3274        __end_of_sendCharSerial4 4B44  
   __end_of_I2C_2_Master_Start 4B6E     __end_of_I2C_2_Master_Write 4B50                   YellowMove@mL 0020  
                        _flags 00F4                   YellowMove@mR 0022                          _fputc 3AD4  
                        _fputs 4842                          pad@fp 0011                          _power 01D3  
                        _width 015C                          _putch 4B74                          dtoa@d 001E  
                        dtoa@i 003C                          dtoa@n 0034                          dtoa@p 0030  
                        dtoa@s 003E                          dtoa@w 0032                 ?_LightBlueMove 0020  
                        tablat 000FF5               ??_Colour_decider 004F                          ttemp5 0060  
                        ttemp6 0063                          ttemp7 0067                   main@run_flag 00E8  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 44D4  
      __end_of_color_read_Blue 47AE          _I2C_2_Master_RepStart 4B50               __end_of_BlueMove 420C  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 4136                _reverseOneBlock 431E  
                 __end_of_main 1E16                   __end_of_dtoa 3046                   __end_of_stop 4048  
              _colour_rel$2806 003A                _colour_rel$2807 003E                         ??_main 0059  
                       ??_dtoa 0026          __end_of_ReverseYellow 4946               __end_of_PinkMove 466E  
                       ??_stop 0018                  __activetblptr 000001              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 45CA                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 44D4               __end_of___xxtofl 3428                      ??_RedMove 0024  
                ??_Timer0_init 0001                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057  
                ??_ReversePink 0024                         ___flge 39D0                         ___fleq 3B9E  
                    ??___aodiv 0011                  main@temp_1189 00E6                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 4AA8              ForwardOneBlock@mL 001A  
            ForwardOneBlock@mR 001C                      ??___fldiv 0021                      ??___flmul 003A  
                    ??___flsub 0019                      ??___lwdiv 000B                         clear_0 416E  
                       clear_1 417A                         clear_2 4186                         _motorL 00F5  
                       _motorR 01BE                         isa$std 000001                      ??_go_Home 0028  
                       pad@buf 0013                         dtoa@fp 001C                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A  
           Forwardhalfblock@mR 001C                         putch@c 0001                ??_LightBlueMove 0024  
             __end_of_vfprintf 47FC                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 0059               __end_of_turnLeft 3E22  
                   ___flge@ff1 0001                     _YellowMove 45CA                     ___flge@ff2 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0019                     ___fleq@ff2 001D                fullSpeedBack@mL 0014  
              fullSpeedBack@mR 0016                     __accesstop 0060        __end_of__initialization 4194  
      __end_of_reverseOneBlock 4378       __end_of_color_read_Green 475E         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_Blue 0005                _Interrupts_init 4B76  
               __pcstackCOMRAM 0001                  _fullSpeedBack 3E22                   __pidataBANK0 4B78  
                 __pidataBANK1 4B6E                  __end_of_fputc 3B9E                  __end_of_fputs 4886  
                __end_of_putch 4B76              __end_of_GreenMove 4A00            __end_of_Timer0_init 4B0E  
          __end_of_ReversePink 4984                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14347 0150          __end_of_reverseDetect 43D2  
                      ??_putch 0001                     __pbssBANK0 00F0                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 42C4                     _getTMR0val 4A82  
            __end_of_RetryMove 3FCA                      ?_PinkMove 0020              _color_writetoaddr 4ACE  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 0001  
                      ?___fleq 0019             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                   ?_turnRight45 001A            ??_color_writetoaddr 0004  
                colour_rel@rel 0034                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2A9A        __end_of_Interrupts_init 4B78  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 00EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 4AEE                        _RedMove 4984             _I2C_2_Master_Start 4B64  
                   ??_PinkMove 0024                     _initUSART4 4B0E             _I2C_2_Master_Write 4B44  
                      __Hparam 0000                        _WayBack 0160                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4AEE                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4946                        ___aodiv 3428  
                      ___fladd 1E16                        ___aomod 371C                        ___fldiv 2700  
                      ___flmul 22D6                        ___flsub 47FC            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 40C2            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 4136                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 3046                        __ptext0 1902                        __ptext1 4482  
                      __ptext2 47AE                        __ptext3 3880                        __ptext4 2DC8  
                      __ptext5 4048                        __ptext6 4842                        __ptext7 3AD4  
                      __ptext8 4B74                        __ptext9 48C8                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005E  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 4482  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 4194  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F2  
            __end_of_vfpfcnvrt 39D0                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 01D1                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 3EC0                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3CE6                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 002C  
                  ___fldiv@rem 0025               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032               ?_Interrupts_init 0001  
                  ___flmul@grs 003F                    _CCP1CONbits 000FAB                     main@colour 00EC  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 0020  
                    RedMove@mR 0022             ??_color_read_Green 0007                     _turnLeft45 442A  
               __end_of___flge 3AD4                 __end_of___fleq 3C48                 _fullSpeedAhead 3CE6  
                  vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F  
               __end_of___wmul 4ACE       __end_of_Forwardhalfblock 431E                      _GreenMove 49C2  
          start_initialization 4136                    __end_of_abs 4908                    __end_of_pad 40C2  
                _TxBufWriteCnt 005C          __end_of_LightBlueMove 4578                   ??_OrangeMove 0024  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 3F48                    vfprintf@fmt 0053  
       __end_of_fullSpeedAhead 3D84                       ??___flge 0009                       ??___fleq 0021  
                    _RetryMove 3F48                       ??___wmul 0005            go_Home@Time_forward 0026  
                ??_readColours 000E                    __pdataBANK0 00FE                    __pdataBANK1 01CF  
              _ForwardOneBlock 426A                      ___fladd@a 0005                      ___fladd@b 0001  
                _ReverseYellow 4908                      ___fldiv@a 001D                      ___fldiv@b 0019  
                   ?_GreenMove 0020                   OrangeMove@mL 0020                   OrangeMove@mR 0022  
           __end_of_OrangeMove 4526                      ___flmul@a 0036                      ___flmul@b 0032  
                  __pbssCOMRAM 005B                      ___flsub@a 0015                      ___flsub@b 0011  
                __pcstackBANK0 0060               ___aodiv@dividend 0001                   ??_YellowMove 0024  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 0020  
             ___lwdiv@dividend 0007                      _dtoa$2486 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                ?_fullSpeedAhead 0014                      __pintcode 0008  
                 ?_ReversePink 0020                     ?_RetryMove 001A                       ?___aodiv 0001  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0019  
             ___aodiv@quotient 0013                       ?___flmul 0032                       ?___flsub 0011  
          _Colour_decider$2808 0060                       ?___lwdiv 0007                       ?_go_Home 0024  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020             __end_of_YellowMove 461C  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 426A  
            _I2C_2_Master_Idle 4A5A              _I2C_2_Master_Init 4A30              _I2C_2_Master_Read 4886  
            _I2C_2_Master_Stop 4B5A                  _low_threshold 015E                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060               getTMR0val@moving 0001  
               colour_rel@vals 0032              _sendStringSerial4 4A00            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                   ??_getTMR0val 0001  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D        __end_of_ForwardOneBlock 42C4  
                  turnRight@mL 0014                    turnRight@mR 0016                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 0E26            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 3880      __end_of_I2C_2_Master_Idle 4A82      __end_of_I2C_2_Master_Init 4A5A  
    __end_of_I2C_2_Master_Read 48C8              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4B64  
                 setMotorPWM@m 000E                       _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002  
                  ??_GreenMove 0024              ??_color_read_Blue 0007             __end_of_getTMR0val 4AA8  
                 _TxBufReadCnt 005B                       _BlueMove 41A6                      _turnRight 3C48  
                    copy_data0 414A      __end_of_sendStringSerial4 4A30                   ??_colour_rel 0036  
                _reverseDetect 4378  __end_of_I2C_2_Master_RepStart 4B5A             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 371C                   ??_initUSART4 0001                       _PinkMove 461C  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 3EC0  
                 __Lsmallconst 0E00                    ??_RetryMove 001E                    _readColours 420C  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2DC8                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 3274                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                 _Time_forward 0200                ___lwdiv@divisor 0009             __end_of_initUSART4 4B2C  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 371C                       __ptext11 3428                       __ptext20 4886  
                     __ptext12 4A00                       __ptext21 4B0E                       __ptext13 4B2C  
                     __ptext30 49C2                       __ptext22 3EC0                       __ptext14 420C  
                     __ptext31 42C4                       __ptext23 3046                       __ptext15 466E  
                     __ptext40 4A5A                       __ptext32 41A6                       __ptext24 4908  
                     __ptext16 46BE                       __ptext41 4A30                       __ptext33 4A82  
                     __ptext25 4946                       __ptext17 470E                       __ptext50 3D84  
                     __ptext42 45CA                       __ptext34 2A9A                       __ptext26 426A  
                     __ptext18 475E                       __ptext51 431E                       __ptext43 43D2  
                     __ptext35 4578                       __ptext27 4984                       __ptext19 4B50  
                     __ptext60 3274                       __ptext52 4378                       __ptext44 3C48  
                     __ptext36 4ACE                       __ptext28 44D4                       __ptext61 47FC  
                     __ptext53 3FCA                       __ptext45 4AEE                       __ptext37 4B44  
                     __ptext29 4526                       __ptext62 1E16                       __ptext54 3E22  
                     __ptext46 3F48                       __ptext38 4B5A                       __ptext63 22D6  
                     __ptext55 35B0                       __ptext47 3CE6                       __ptext39 4B64  
                     __ptext64 39D0                       __ptext56 4AA8                       __ptext48 461C  
                     __ptext65 3B9E                       __ptext57 40C2                       __ptext49 442A  
                     __ptext66 2700                       __ptext58 4B76                       __ptext59 0E26  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002D                ?_Colour_decider 004B                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 47AE  
                ??_turnRight45 001E                       main@temp 00E4                       _turnLeft 3D84  
             ___aomod@dividend 0001              ??_reverseOneBlock 001E                main@prev_colour 00EE  
                  _setMotorPWM 35B0                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 006C                 _high_threshold 01CF  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 4578                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 442A                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 4482                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4B2C                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
