

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 18:25:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90   000000                     
    91                           ; Generated 06/04/2022 GMT
    92                           ; 
    93                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F67K40 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126                           	psect	idataBANK0
   127   004B7C                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _DataFlag
   131   004B7C  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134   004B72                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _high_threshold
   138   004B72  03E8               	dw	1000
   139                           
   140                           ;initializer for _Turn45Delay
   141   004B74  00DC               	dw	220
   142                           
   143                           ;initializer for _power
   144   004B76  001E               	dw	30
   145   000000                     _TRISEbits	set	3973
   146   000000                     _TX4REG	set	3812
   147   000000                     _RC4STAbits	set	3815
   148   000000                     _SP4BRGH	set	3814
   149   000000                     _SSP2CON2bits	set	3802
   150   000000                     _RX4PPS	set	3605
   151   000000                     _SSP2CLKPPS	set	3612
   152   000000                     _SSP2DATPPS	set	3613
   153   000000                     _ANSELDbits	set	3751
   154   000000                     _SSP2ADD	set	3798
   155   000000                     _SSP2CON1bits	set	3801
   156   000000                     _LATAbits	set	3961
   157   000000                     _LATFbits	set	3966
   158   000000                     _LATGbits	set	3967
   159   000000                     _TRISAbits	set	3969
   160   000000                     _TRISGbits	set	3975
   161   000000                     _PORTFbits	set	3982
   162   000000                     _CCPR2H	set	4006
   163   000000                     _CCPR1H	set	4010
   164   000000                     _TRISCbits	set	3971
   165   000000                     _TRISDbits	set	3972
   166   000000                     _TRISFbits	set	3974
   167   000000                     _LATDbits	set	3964
   168   000000                     _RC4REG	set	3811
   169   000000                     _SP4BRGL	set	3813
   170   000000                     _TX4STAbits	set	3816
   171   000000                     _BAUD4CONbits	set	3817
   172   000000                     _SSP2CON2	set	3802
   173   000000                     _SSP2STAT	set	3800
   174   000000                     _ANSELFbits	set	3764
   175   000000                     _SSP2BUF	set	3797
   176   000000                     _PIE4bits	set	3629
   177   000000                     _PIR4bits	set	3639
   178   000000                     _RC0PPS	set	3682
   179   000000                     _RD5PPS	set	3695
   180   000000                     _RE2PPS	set	3700
   181   000000                     _RD6PPS	set	3696
   182   000000                     _RC7PPS	set	3689
   183   000000                     _CCPR4H	set	3873
   184   000000                     _CCPR3H	set	3877
   185   000000                     _CCP1CONbits	set	4011
   186   000000                     _CCPTMRS0bits	set	4013
   187   000000                     _T2PR	set	4028
   188   000000                     _T2CONbits	set	4029
   189   000000                     _TMR0L	set	4051
   190   000000                     _TMR0H	set	4052
   191   000000                     _CCP2CONbits	set	4007
   192   000000                     _CCP3CONbits	set	3878
   193   000000                     _CCP4CONbits	set	3874
   194   000000                     _T0CON1bits	set	4054
   195   000000                     _T0CON0bits	set	4053
   196   000000                     _RE4PPS	set	3702
   197   000000                     _RG6PPS	set	3720
   198   000000                     _T2CLKCONbits	set	4031
   199   000000                     _T2HLTbits	set	4030
   200                           
   201                           	psect	smallconst
   202   000E00                     __psmallconst:
   203                           	callstack 0
   204   000E00  00                 	db	0
   205   000E01                     STR_1:
   206   000E01  72                 	db	114	;'r'
   207   000E02  65                 	db	101	;'e'
   208   000E03  64                 	db	100	;'d'
   209   000E04  3D                 	db	61	;'='
   210   000E05  25                 	db	37
   211   000E06  64                 	db	100	;'d'
   212   000E07  20                 	db	32
   213   000E08  67                 	db	103	;'g'
   214   000E09  72                 	db	114	;'r'
   215   000E0A  65                 	db	101	;'e'
   216   000E0B  65                 	db	101	;'e'
   217   000E0C  6E                 	db	110	;'n'
   218   000E0D  3D                 	db	61	;'='
   219   000E0E  25                 	db	37
   220   000E0F  64                 	db	100	;'d'
   221   000E10  20                 	db	32
   222   000E11  62                 	db	98	;'b'
   223   000E12  6C                 	db	108	;'l'
   224   000E13  75                 	db	117	;'u'
   225   000E14  65                 	db	101	;'e'
   226   000E15  3D                 	db	61	;'='
   227   000E16  25                 	db	37
   228   000E17  64                 	db	100	;'d'
   229   000E18  20                 	db	32
   230   000E19  74                 	db	116	;'t'
   231   000E1A  69                 	db	105	;'i'
   232   000E1B  6D                 	db	109	;'m'
   233   000E1C  65                 	db	101	;'e'
   234   000E1D  72                 	db	114	;'r'
   235   000E1E  3D                 	db	61	;'='
   236   000E1F  25                 	db	37
   237   000E20  64                 	db	100	;'d'
   238   000E21  20                 	db	32
   239   000E22  0D                 	db	13
   240   000E23  0A                 	db	10
   241   000E24  00                 	db	0
   242   000E25  00                 	db	0	; dummy byte at the end
   243   000000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247   00413A                     __pcinit:
   248                           	callstack 0
   249   00413A                     start_initialization:
   250                           	callstack 0
   251   00413A                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to BANK1 (6 bytes)
   255                           ; load TBLPTR registers with __pidataBANK1
   256   00413A  0E72               	movlw	low __pidataBANK1
   257   00413C  6EF6               	movwf	tblptrl,c
   258   00413E  0E4B               	movlw	high __pidataBANK1
   259   004140  6EF7               	movwf	tblptrh,c
   260   004142  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   261   004144  6EF8               	movwf	tblptru,c
   262   004146  EE01  F0CF         	lfsr	0,__pdataBANK1
   263   00414A  EE10 F006          	lfsr	1,6
   264   00414E                     copy_data0:
   265   00414E  0009               	tblrd		*+
   266   004150  CFF5 FFEE          	movff	tablat,postinc0
   267   004154  50E5               	movf	postdec1,w,c
   268   004156  50E1               	movf	fsr1l,w,c
   269   004158  E1FA               	bnz	copy_data0
   270                           
   271                           ; Initialize objects allocated to BANK0 (1 bytes)
   272                           ; load TBLPTR registers with __pidataBANK0
   273   00415A  0E7C               	movlw	low __pidataBANK0
   274   00415C  6EF6               	movwf	tblptrl,c
   275   00415E  0E4B               	movlw	high __pidataBANK0
   276   004160  6EF7               	movwf	tblptrh,c
   277   004162  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   278   004164  6EF8               	movwf	tblptru,c
   279   004166  0009               	tblrd		*+	;fetch initializer
   280   004168  CFF5 F0FE          	movff	tablat,__pdataBANK0
   281                           
   282                           ; Clear objects allocated to BANK2 (100 bytes)
   283   00416C  EE02  F000         	lfsr	0,__pbssBANK2
   284   004170  0E64               	movlw	100
   285   004172                     clear_0:
   286   004172  6AEE               	clrf	postinc0,c
   287   004174  06E8               	decf	wreg,f,c
   288   004176  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to BANK1 (207 bytes)
   291   004178  EE01  F000         	lfsr	0,__pbssBANK1
   292   00417C  0ECF               	movlw	207
   293   00417E                     clear_1:
   294   00417E  6AEE               	clrf	postinc0,c
   295   004180  06E8               	decf	wreg,f,c
   296   004182  E1FD               	bnz	clear_1
   297                           
   298                           ; Clear objects allocated to BANK0 (14 bytes)
   299   004184  EE00  F0F0         	lfsr	0,__pbssBANK0
   300   004188  0E0E               	movlw	14
   301   00418A                     clear_2:
   302   00418A  6AEE               	clrf	postinc0,c
   303   00418C  06E8               	decf	wreg,f,c
   304   00418E  E1FD               	bnz	clear_2
   305                           
   306                           ; Clear objects allocated to COMRAM (4 bytes)
   307   004190  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   308   004192  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   309   004194  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   310   004196  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   311   004198                     end_of_initialization:
   312                           	callstack 0
   313   004198                     __end_of__initialization:
   314                           	callstack 0
   315   004198  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   316   00419A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   317   00419C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   318   00419E  6EF8               	movwf	tblptru,c
   319   0041A0  0E0E               	movlw	high __Lsmallconst
   320   0041A2  6EF7               	movwf	tblptrh,c
   321   0041A4  0100               	movlb	0
   322   0041A6  EF81  F00C         	goto	_main	;jump to C main() function
   323                           
   324                           	psect	bssCOMRAM
   325   00005B                     __pbssCOMRAM:
   326                           	callstack 0
   327   00005B                     _TxBufReadCnt:
   328                           	callstack 0
   329   00005B                     	ds	1
   330   00005C                     _TxBufWriteCnt:
   331                           	callstack 0
   332   00005C                     	ds	1
   333   00005D                     _RxBufReadCnt:
   334                           	callstack 0
   335   00005D                     	ds	1
   336   00005E                     _RxBufWriteCnt:
   337                           	callstack 0
   338   00005E                     	ds	1
   339                           
   340                           	psect	bssBANK0
   341   0000F0                     __pbssBANK0:
   342                           	callstack 0
   343   0000F0                     _prec:
   344                           	callstack 0
   345   0000F0                     	ds	2
   346   0000F2                     _move_count:
   347                           	callstack 0
   348   0000F2                     	ds	2
   349   0000F4                     _flags:
   350                           	callstack 0
   351   0000F4                     	ds	1
   352   0000F5                     _motorL:
   353                           	callstack 0
   354   0000F5                     	ds	9
   355                           
   356                           	psect	dataBANK0
   357   0000FE                     __pdataBANK0:
   358                           	callstack 0
   359   0000FE                     _DataFlag:
   360                           	callstack 0
   361   0000FE                     	ds	1
   362                           
   363                           	psect	bssBANK1
   364   000100                     __pbssBANK1:
   365                           	callstack 0
   366   000100                     _EUSART4TXbuf:
   367                           	callstack 0
   368   000100                     	ds	60
   369   00013C                     _EUSART4RXbuf:
   370                           	callstack 0
   371   00013C                     	ds	20
   372   000150                     	ds	12
   373   00015C                     _width:
   374                           	callstack 0
   375   00015C                     	ds	2
   376   00015E                     _low_threshold:
   377                           	callstack 0
   378   00015E                     	ds	2
   379   000160                     _WayBack:
   380                           	callstack 0
   381   000160                     	ds	50
   382   000192                     _dbuf:
   383                           	callstack 0
   384   000192                     	ds	32
   385   0001B2                     _rel:
   386                           	callstack 0
   387   0001B2                     	ds	12
   388   0001BE                     _motorR:
   389                           	callstack 0
   390   0001BE                     	ds	9
   391   0001C7                     _vals:
   392                           	callstack 0
   393   0001C7                     	ds	8
   394                           
   395                           	psect	dataBANK1
   396   0001CF                     __pdataBANK1:
   397                           	callstack 0
   398   0001CF                     _high_threshold:
   399                           	callstack 0
   400   0001CF                     	ds	2
   401   0001D1                     _Turn45Delay:
   402                           	callstack 0
   403   0001D1                     	ds	2
   404   0001D3                     _power:
   405                           	callstack 0
   406   0001D3                     	ds	2
   407                           
   408                           	psect	bssBANK2
   409   000200                     __pbssBANK2:
   410                           	callstack 0
   411   000200                     _Time_forward:
   412                           	callstack 0
   413   000200                     	ds	100
   414                           
   415                           	psect	cstackBANK0
   416   000060                     __pcstackBANK0:
   417                           	callstack 0
   418   000060                     ?_sprintf:
   419                           	callstack 0
   420   000060                     sprintf@s:
   421                           	callstack 0
   422   000060                     _Colour_decider$2809:
   423                           	callstack 0
   424                           
   425                           ; 4 bytes @ 0x0
   426   000060                     	ds	2
   427   000062                     sprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2
   431   000062                     	ds	2
   432   000064                     Colour_decider@Cmax_i:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x4
   436   000064                     	ds	2
   437   000066                     Colour_decider@RGB_col:
   438                           	callstack 0
   439                           
   440                           ; 12 bytes @ 0x6
   441   000066                     	ds	6
   442   00006C                     sprintf@ap:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   00006C                     	ds	2
   447   00006E                     sprintf@f:
   448                           	callstack 0
   449                           
   450                           ; 11 bytes @ 0xE
   451   00006E                     	ds	4
   452   000072                     Colour_decider@Cmax:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x12
   456   000072                     	ds	4
   457   000076                     Colour_decider@Cmin:
   458                           	callstack 0
   459                           
   460                           ; 4 bytes @ 0x16
   461   000076                     	ds	4
   462   00007A                     Colour_decider@i:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x1A
   466   00007A                     	ds	2
   467   00007C                     Colour_decider@Hue:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x1C
   471   00007C                     	ds	4
   472   000080                     main@buf:
   473                           	callstack 0
   474                           
   475                           ; 100 bytes @ 0x20
   476   000080                     	ds	100
   477   0000E4                     main@temp:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x84
   481   0000E4                     	ds	2
   482   0000E6                     main@temp_1189:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x86
   486   0000E6                     	ds	2
   487   0000E8                     main@run_flag:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x88
   491   0000E8                     	ds	2
   492   0000EA                     main@consecuitive:
   493                           	callstack 0
   494                           
   495                           ; 2 bytes @ 0x8A
   496   0000EA                     	ds	2
   497   0000EC                     main@colour:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x8C
   501   0000EC                     	ds	2
   502   0000EE                     main@prev_colour:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x8E
   506   0000EE                     	ds	2
   507                           
   508                           	psect	cstackCOMRAM
   509   000001                     __pcstackCOMRAM:
   510                           	callstack 0
   511   000001                     ??_I2C_2_Master_Idle:
   512   000001                     ?___wmul:
   513                           	callstack 0
   514   000001                     ?___fladd:
   515                           	callstack 0
   516   000001                     ?___xxtofl:
   517                           	callstack 0
   518   000001                     ?___aodiv:
   519                           	callstack 0
   520   000001                     ?___aomod:
   521                           	callstack 0
   522   000001                     sendCharSerial4@charToSend:
   523                           	callstack 0
   524   000001                     initDCmotorsPWM@PWMperiod:
   525                           	callstack 0
   526   000001                     getTMR0val@moving:
   527                           	callstack 0
   528   000001                     ___wmul@multiplier:
   529                           	callstack 0
   530   000001                     fputc@c:
   531                           	callstack 0
   532   000001                     ___flge@ff1:
   533                           	callstack 0
   534   000001                     ___fladd@b:
   535                           	callstack 0
   536   000001                     ___xxtofl@val:
   537                           	callstack 0
   538   000001                     ___aodiv@dividend:
   539                           	callstack 0
   540   000001                     ___aomod@dividend:
   541                           	callstack 0
   542                           
   543                           ; 8 bytes @ 0x0
   544   000001                     	ds	1
   545   000002                     ??_I2C_2_Master_Read:
   546   000002                     I2C_2_Master_Write@data_byte:
   547                           	callstack 0
   548   000002                     sendStringSerial4@string:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x1
   552   000002                     	ds	1
   553   000003                     color_writetoaddr@value:
   554                           	callstack 0
   555   000003                     I2C_2_Master_Read@ack:
   556                           	callstack 0
   557   000003                     ___wmul@multiplicand:
   558                           	callstack 0
   559   000003                     fputc@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x2
   563   000003                     	ds	1
   564   000004                     color_writetoaddr@address:
   565                           	callstack 0
   566   000004                     I2C_2_Master_Read@tmp:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x3
   570   000004                     	ds	1
   571   000005                     ??_fputc:
   572   000005                     ??_color_click_init:
   573   000005                     ??___xxtofl:
   574   000005                     ?_color_read_lum:
   575                           	callstack 0
   576   000005                     ?_color_read_Red:
   577                           	callstack 0
   578   000005                     ?_color_read_Green:
   579                           	callstack 0
   580   000005                     ?_color_read_Blue:
   581                           	callstack 0
   582   000005                     ___wmul@product:
   583                           	callstack 0
   584   000005                     ___flge@ff2:
   585                           	callstack 0
   586   000005                     ___fladd@a:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x4
   590   000005                     	ds	2
   591   000007                     ??_color_read_lum:
   592   000007                     ??_color_read_Red:
   593   000007                     ??_color_read_Green:
   594   000007                     ??_color_read_Blue:
   595   000007                     ?___lwdiv:
   596                           	callstack 0
   597   000007                     ___lwdiv@dividend:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x6
   601   000007                     	ds	2
   602   000009                     ??___fladd:
   603   000009                     ??___flge:
   604   000009                     ___xxtofl@sign:
   605                           	callstack 0
   606   000009                     ___lwdiv@divisor:
   607                           	callstack 0
   608   000009                     ___aodiv@divisor:
   609                           	callstack 0
   610   000009                     ___aomod@divisor:
   611                           	callstack 0
   612                           
   613                           ; 8 bytes @ 0x8
   614   000009                     	ds	1
   615   00000A                     ___xxtofl@exp:
   616                           	callstack 0
   617   00000A                     color_read_lum@tmp:
   618                           	callstack 0
   619   00000A                     color_read_Red@tmp:
   620                           	callstack 0
   621   00000A                     color_read_Green@tmp:
   622                           	callstack 0
   623   00000A                     color_read_Blue@tmp:
   624                           	callstack 0
   625   00000A                     fputs@s:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x9
   629   00000A                     	ds	1
   630   00000B                     ___lwdiv@quotient:
   631                           	callstack 0
   632   00000B                     ___xxtofl@arg:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0xA
   636   00000B                     	ds	1
   637   00000C                     readColours@vals:
   638                           	callstack 0
   639   00000C                     fputs@fp:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0xB
   643   00000C                     	ds	1
   644   00000D                     ___lwdiv@counter:
   645                           	callstack 0
   646   00000D                     ___fladd@signs:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0xC
   650   00000D                     	ds	1
   651   00000E                     ___fladd@aexp:
   652                           	callstack 0
   653   00000E                     fputs@c:
   654                           	callstack 0
   655   00000E                     setMotorPWM@m:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0xD
   659   00000E                     	ds	1
   660   00000F                     ___fladd@bexp:
   661                           	callstack 0
   662   00000F                     fputs@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0xE
   666   00000F                     	ds	1
   667   000010                     ??_setMotorPWM:
   668   000010                     ___fladd@grs:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0xF
   672   000010                     	ds	1
   673   000011                     ?___flsub:
   674                           	callstack 0
   675   000011                     ___aodiv@counter:
   676                           	callstack 0
   677   000011                     ___aomod@counter:
   678                           	callstack 0
   679   000011                     pad@fp:
   680                           	callstack 0
   681   000011                     ___flsub@b:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x10
   685   000011                     	ds	1
   686   000012                     setMotorPWM@posDuty:
   687                           	callstack 0
   688   000012                     ___aodiv@sign:
   689                           	callstack 0
   690   000012                     ___aomod@sign:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x11
   694   000012                     	ds	1
   695   000013                     ?_abs:
   696                           	callstack 0
   697   000013                     setMotorPWM@negDuty:
   698                           	callstack 0
   699   000013                     pad@buf:
   700                           	callstack 0
   701   000013                     abs@a:
   702                           	callstack 0
   703   000013                     ___aodiv@quotient:
   704                           	callstack 0
   705                           
   706                           ; 8 bytes @ 0x12
   707   000013                     	ds	1
   708   000014                     stop@mL:
   709                           	callstack 0
   710   000014                     turnLeft@mL:
   711                           	callstack 0
   712   000014                     turnRight@mL:
   713                           	callstack 0
   714   000014                     fullSpeedAhead@mL:
   715                           	callstack 0
   716   000014                     fullSpeedBack@mL:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x13
   720   000014                     	ds	1
   721   000015                     ??_abs:
   722   000015                     pad@p:
   723                           	callstack 0
   724   000015                     ___flsub@a:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x14
   728   000015                     	ds	1
   729   000016                     stop@mR:
   730                           	callstack 0
   731   000016                     turnLeft@mR:
   732                           	callstack 0
   733   000016                     turnRight@mR:
   734                           	callstack 0
   735   000016                     fullSpeedAhead@mR:
   736                           	callstack 0
   737   000016                     fullSpeedBack@mR:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x15
   741   000016                     	ds	1
   742   000017                     ??_pad:
   743                           
   744                           ; 1 bytes @ 0x16
   745   000017                     	ds	1
   746   000018                     ??_fullSpeedAhead:
   747   000018                     ??_stop:
   748   000018                     ??_turnLeft:
   749   000018                     ??_turnRight:
   750   000018                     ??_fullSpeedBack:
   751   000018                     pad@i:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x17
   755   000018                     	ds	1
   756   000019                     ?___fldiv:
   757                           	callstack 0
   758   000019                     ___fleq@ff1:
   759                           	callstack 0
   760   000019                     ___fldiv@b:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x18
   764   000019                     	ds	1
   765   00001A                     turnRight45@mL:
   766                           	callstack 0
   767   00001A                     turnLeft45@mL:
   768                           	callstack 0
   769   00001A                     reverseDetect@mL:
   770                           	callstack 0
   771   00001A                     reverseOneBlock@mL:
   772                           	callstack 0
   773   00001A                     ForwardOneBlock@mL:
   774                           	callstack 0
   775   00001A                     Forwardhalfblock@mL:
   776                           	callstack 0
   777   00001A                     RetryMove@mL:
   778                           	callstack 0
   779   00001A                     pad@w:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x19
   783   00001A                     	ds	2
   784   00001C                     turnRight45@mR:
   785                           	callstack 0
   786   00001C                     turnLeft45@mR:
   787                           	callstack 0
   788   00001C                     reverseDetect@mR:
   789                           	callstack 0
   790   00001C                     reverseOneBlock@mR:
   791                           	callstack 0
   792   00001C                     ForwardOneBlock@mR:
   793                           	callstack 0
   794   00001C                     Forwardhalfblock@mR:
   795                           	callstack 0
   796   00001C                     RetryMove@mR:
   797                           	callstack 0
   798   00001C                     dtoa@fp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x1B
   802   00001C                     	ds	1
   803   00001D                     ___fleq@ff2:
   804                           	callstack 0
   805   00001D                     ___fldiv@a:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x1C
   809   00001D                     	ds	1
   810   00001E                     ??_Forwardhalfblock:
   811   00001E                     ??_RetryMove:
   812   00001E                     ??_turnRight45:
   813   00001E                     ??_turnLeft45:
   814   00001E                     ??_reverseDetect:
   815   00001E                     ??_reverseOneBlock:
   816   00001E                     ??_ForwardOneBlock:
   817   00001E                     dtoa@d:
   818                           	callstack 0
   819                           
   820                           ; 8 bytes @ 0x1D
   821   00001E                     	ds	2
   822   000020                     RedMove@mL:
   823                           	callstack 0
   824   000020                     GreenMove@mL:
   825                           	callstack 0
   826   000020                     BlueMove@mL:
   827                           	callstack 0
   828   000020                     YellowMove@mL:
   829                           	callstack 0
   830   000020                     PinkMove@mL:
   831                           	callstack 0
   832   000020                     OrangeMove@mL:
   833                           	callstack 0
   834   000020                     LightBlueMove@mL:
   835                           	callstack 0
   836   000020                     ReverseYellow@mL:
   837                           	callstack 0
   838   000020                     ReversePink@mL:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x1F
   842   000020                     	ds	1
   843   000021                     ??___fldiv:
   844   000021                     ??___fleq:
   845                           
   846                           ; 1 bytes @ 0x20
   847   000021                     	ds	1
   848   000022                     RedMove@mR:
   849                           	callstack 0
   850   000022                     GreenMove@mR:
   851                           	callstack 0
   852   000022                     BlueMove@mR:
   853                           	callstack 0
   854   000022                     YellowMove@mR:
   855                           	callstack 0
   856   000022                     PinkMove@mR:
   857                           	callstack 0
   858   000022                     OrangeMove@mR:
   859                           	callstack 0
   860   000022                     LightBlueMove@mR:
   861                           	callstack 0
   862   000022                     ReverseYellow@mR:
   863                           	callstack 0
   864   000022                     ReversePink@mR:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0x21
   868   000022                     	ds	2
   869   000024                     go_Home@WayBack:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x23
   873   000024                     	ds	1
   874   000025                     ___fldiv@rem:
   875                           	callstack 0
   876                           
   877                           ; 4 bytes @ 0x24
   878   000025                     	ds	1
   879   000026                     ??_dtoa:
   880   000026                     go_Home@Time_forward:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x25
   884   000026                     	ds	2
   885   000028                     ??_go_Home:
   886                           
   887                           ; 1 bytes @ 0x27
   888   000028                     	ds	1
   889   000029                     ___fldiv@sign:
   890                           	callstack 0
   891                           
   892                           ; 1 bytes @ 0x28
   893   000029                     	ds	1
   894   00002A                     ___fldiv@new_exp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x29
   898   00002A                     	ds	1
   899   00002B                     go_Home@cur_time:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x2A
   903   00002B                     	ds	1
   904   00002C                     ___fldiv@grs:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x2B
   908   00002C                     	ds	1
   909   00002D                     go_Home@i:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x2C
   913   00002D                     	ds	1
   914   00002E                     _dtoa$2487:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x2D
   918   00002E                     	ds	2
   919   000030                     ___fldiv@bexp:
   920                           	callstack 0
   921   000030                     dtoa@p:
   922                           	callstack 0
   923                           
   924                           ; 2 bytes @ 0x2F
   925   000030                     	ds	1
   926   000031                     ___fldiv@aexp:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x30
   930   000031                     	ds	1
   931   000032                     ?___flmul:
   932                           	callstack 0
   933   000032                     colour_rel@vals:
   934                           	callstack 0
   935   000032                     dtoa@w:
   936                           	callstack 0
   937   000032                     ___flmul@b:
   938                           	callstack 0
   939                           
   940                           ; 4 bytes @ 0x31
   941   000032                     	ds	2
   942   000034                     colour_rel@rel:
   943                           	callstack 0
   944   000034                     dtoa@n:
   945                           	callstack 0
   946                           
   947                           ; 8 bytes @ 0x33
   948   000034                     	ds	2
   949   000036                     colour_rel@L:
   950                           	callstack 0
   951   000036                     ___flmul@a:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x35
   955   000036                     	ds	4
   956   00003A                     ??___flmul:
   957   00003A                     _colour_rel$2807:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x39
   961   00003A                     	ds	2
   962   00003C                     dtoa@i:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x3B
   966   00003C                     	ds	2
   967   00003E                     ___flmul@sign:
   968                           	callstack 0
   969   00003E                     dtoa@s:
   970                           	callstack 0
   971   00003E                     _colour_rel$2808:
   972                           	callstack 0
   973                           
   974                           ; 4 bytes @ 0x3D
   975   00003E                     	ds	1
   976   00003F                     vfpfcnvrt@fp:
   977                           	callstack 0
   978   00003F                     ___flmul@grs:
   979                           	callstack 0
   980                           
   981                           ; 4 bytes @ 0x3E
   982   00003F                     	ds	2
   983   000041                     vfpfcnvrt@fmt:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x40
   987   000041                     	ds	1
   988   000042                     colour_rel@R:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x41
   992   000042                     	ds	1
   993   000043                     ___flmul@aexp:
   994                           	callstack 0
   995   000043                     vfpfcnvrt@ap:
   996                           	callstack 0
   997                           
   998                           ; 2 bytes @ 0x42
   999   000043                     	ds	1
  1000   000044                     ___flmul@bexp:
  1001                           	callstack 0
  1002                           
  1003                           ; 1 bytes @ 0x43
  1004   000044                     	ds	1
  1005   000045                     ??_vfpfcnvrt:
  1006   000045                     ___flmul@prod:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x44
  1010   000045                     	ds	1
  1011   000046                     colour_rel@G:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x45
  1015   000046                     	ds	1
  1016   000047                     vfpfcnvrt@convarg:
  1017                           	callstack 0
  1018                           
  1019                           ; 8 bytes @ 0x46
  1020   000047                     	ds	2
  1021   000049                     ___flmul@temp:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0x48
  1025   000049                     	ds	1
  1026   00004A                     colour_rel@B:
  1027                           	callstack 0
  1028                           
  1029                           ; 4 bytes @ 0x49
  1030   00004A                     	ds	1
  1031   00004B                     ?_Colour_decider:
  1032                           	callstack 0
  1033   00004B                     Colour_decider@vals:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x4A
  1037   00004B                     	ds	2
  1038   00004D                     Colour_decider@rel:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x4C
  1042   00004D                     	ds	2
  1043   00004F                     ??_Colour_decider:
  1044   00004F                     vfpfcnvrt@cp:
  1045                           	callstack 0
  1046                           
  1047                           ; 2 bytes @ 0x4E
  1048   00004F                     	ds	2
  1049   000051                     ?_vfprintf:
  1050                           	callstack 0
  1051   000051                     vfprintf@fp:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x50
  1055   000051                     	ds	2
  1056   000053                     vfprintf@fmt:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x52
  1060   000053                     	ds	2
  1061   000055                     vfprintf@ap:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0x54
  1065   000055                     	ds	2
  1066   000057                     vfprintf@cfmt:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0x56
  1070   000057                     	ds	2
  1071   000059                     ??_main:
  1072                           
  1073                           ; 1 bytes @ 0x58
  1074   000059                     	ds	2
  1075                           
  1076 ;;
  1077 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1078 ;;
  1079 ;; *************** function _main *****************
  1080 ;; Defined at:
  1081 ;;		line 30 in file "main.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  colour          2  140[BANK0 ] int 
  1086 ;;  temp            2  134[BANK0 ] int 
  1087 ;;  temp            2  132[BANK0 ] int 
  1088 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1089 ;;  prev_colour     2  142[BANK0 ] int 
  1090 ;;  consecuitive    2  138[BANK0 ] int 
  1091 ;;  run_flag        2  136[BANK0 ] int 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1102 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;Total ram usage:      114 bytes
  1106 ;; Hardware stack levels required when called: 9
  1107 ;; This function calls:
  1108 ;;		_BlueMove
  1109 ;;		_Colour_decider
  1110 ;;		_Forwardhalfblock
  1111 ;;		_GreenMove
  1112 ;;		_I2C_2_Master_Init
  1113 ;;		_Interrupts_init
  1114 ;;		_LightBlueMove
  1115 ;;		_OrangeMove
  1116 ;;		_PinkMove
  1117 ;;		_RedMove
  1118 ;;		_RetryMove
  1119 ;;		_Timer0_init
  1120 ;;		_YellowMove
  1121 ;;		_color_click_init
  1122 ;;		_colour_rel
  1123 ;;		_fullSpeedAhead
  1124 ;;		_getTMR0val
  1125 ;;		_go_Home
  1126 ;;		_initDCmotorsPWM
  1127 ;;		_initUSART4
  1128 ;;		_readColours
  1129 ;;		_sendStringSerial4
  1130 ;;		_sprintf
  1131 ;;		_stop
  1132 ;; This function is called by:
  1133 ;;		Startup code after reset
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text0
  1138   001902                     __ptext0:
  1139                           	callstack 0
  1140   001902                     _main:
  1141                           	callstack 22
  1142   001902                     
  1143                           ;main.c: 31:     initUSART4();
  1144   001902  EC89  F025         	call	_initUSART4	;wreg free
  1145   001906                     
  1146                           ;main.c: 32:     Interrupts_init();
  1147   001906  ECBD  F025         	call	_Interrupts_init	;wreg free
  1148   00190A                     
  1149                           ;main.c: 33:     color_click_init();
  1150   00190A  ECBE  F022         	call	_color_click_init	;wreg free
  1151   00190E                     
  1152                           ;main.c: 34:     I2C_2_Master_Init();
  1153   00190E  EC1A  F025         	call	_I2C_2_Master_Init	;wreg free
  1154   001912                     
  1155                           ;main.c: 35:     Timer0_init();
  1156   001912  EC79  F025         	call	_Timer0_init	;wreg free
  1157   001916                     
  1158                           ;main.c: 36:     initDCmotorsPWM(200);
  1159   001916  0E00               	movlw	0
  1160   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1161   00191A  0EC8               	movlw	200
  1162   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1163   00191E  EC62  F01F         	call	_initDCmotorsPWM	;wreg free
  1164   001922                     
  1165                           ;main.c: 37:     char buf[100];;main.c: 38:     TRISGbits.TRISG1 = 0;
  1166   001922  9287               	bcf	135,1,c	;volatile
  1167   001924                     
  1168                           ;main.c: 39:     TRISAbits.TRISA4 = 0;
  1169   001924  9881               	bcf	129,4,c	;volatile
  1170   001926                     
  1171                           ;main.c: 40:     TRISFbits.TRISF7 = 0;
  1172   001926  9E86               	bcf	134,7,c	;volatile
  1173   001928                     
  1174                           ;main.c: 41:     TRISFbits.TRISF2 = 1;
  1175   001928  8486               	bsf	134,2,c	;volatile
  1176   00192A                     
  1177                           ;main.c: 42:     ANSELFbits.ANSELF2=0;
  1178   00192A  010E               	movlb	14	; () banked
  1179   00192C  95B4               	bcf	180,2,b	;volatile
  1180   00192E                     
  1181                           ; BSR set to: 14
  1182                           ;main.c: 43:     LATGbits.LATG1=1;
  1183   00192E  827F               	bsf	127,1,c	;volatile
  1184   001930                     
  1185                           ; BSR set to: 14
  1186                           ;main.c: 44:     LATAbits.LATA4=1;
  1187   001930  8879               	bsf	121,4,c	;volatile
  1188   001932                     
  1189                           ; BSR set to: 14
  1190                           ;main.c: 45:     LATFbits.LATF7=1;
  1191   001932  8E7E               	bsf	126,7,c	;volatile
  1192   001934                     
  1193                           ; BSR set to: 14
  1194                           ;main.c: 49:     motorL.power=0;
  1195   001934  0E00               	movlw	0
  1196   001936  0100               	movlb	0	; () banked
  1197   001938  6FF5               	movwf	_motorL& (0+255),b
  1198   00193A                     
  1199                           ; BSR set to: 0
  1200                           ;main.c: 50:     motorL.direction=1;
  1201   00193A  0E01               	movlw	1
  1202   00193C  6FF6               	movwf	(_motorL+1)& (0+255),b
  1203   00193E                     
  1204                           ; BSR set to: 0
  1205                           ;main.c: 51:     motorL.brakemode=1;
  1206   00193E  0E01               	movlw	1
  1207   001940  6FF7               	movwf	(_motorL+2)& (0+255),b
  1208   001942                     
  1209                           ; BSR set to: 0
  1210                           ;main.c: 52:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1211   001942  0EAA               	movlw	170
  1212   001944  6FFA               	movwf	(_motorL+5)& (0+255),b
  1213   001946  0E0F               	movlw	15
  1214   001948  6FFB               	movwf	(_motorL+6)& (0+255),b
  1215   00194A                     
  1216                           ; BSR set to: 0
  1217                           ;main.c: 53:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1218   00194A  0EA6               	movlw	166
  1219   00194C  6FFC               	movwf	(_motorL+7)& (0+255),b
  1220   00194E  0E0F               	movlw	15
  1221   001950  6FFD               	movwf	(_motorL+8)& (0+255),b
  1222   001952                     
  1223                           ; BSR set to: 0
  1224                           ;main.c: 54:     motorL.PWMperiod=200;
  1225   001952  0E00               	movlw	0
  1226   001954  6FF9               	movwf	(_motorL+4)& (0+255),b
  1227   001956  0EC8               	movlw	200
  1228   001958  6FF8               	movwf	(_motorL+3)& (0+255),b
  1229   00195A                     
  1230                           ; BSR set to: 0
  1231                           ;main.c: 55:     motorR.power=0;
  1232   00195A  0E00               	movlw	0
  1233   00195C  0101               	movlb	1	; () banked
  1234   00195E  6FBE               	movwf	_motorR& (0+255),b
  1235   001960                     
  1236                           ; BSR set to: 1
  1237                           ;main.c: 56:     motorR.direction=1;
  1238   001960  0E01               	movlw	1
  1239   001962  6FBF               	movwf	(_motorR+1)& (0+255),b
  1240   001964                     
  1241                           ; BSR set to: 1
  1242                           ;main.c: 57:     motorR.brakemode=1;
  1243   001964  0E01               	movlw	1
  1244   001966  6FC0               	movwf	(_motorR+2)& (0+255),b
  1245   001968                     
  1246                           ; BSR set to: 1
  1247                           ;main.c: 58:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1248   001968  0E25               	movlw	37
  1249   00196A  6FC3               	movwf	(_motorR+5)& (0+255),b
  1250   00196C  0E0F               	movlw	15
  1251   00196E  6FC4               	movwf	(_motorR+6)& (0+255),b
  1252   001970                     
  1253                           ; BSR set to: 1
  1254                           ;main.c: 59:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1255   001970  0E21               	movlw	33
  1256   001972  6FC5               	movwf	(_motorR+7)& (0+255),b
  1257   001974  0E0F               	movlw	15
  1258   001976  6FC6               	movwf	(_motorR+8)& (0+255),b
  1259   001978                     
  1260                           ; BSR set to: 1
  1261                           ;main.c: 60:     motorR.PWMperiod=200;
  1262   001978  0E00               	movlw	0
  1263   00197A  6FC2               	movwf	(_motorR+4)& (0+255),b
  1264   00197C  0EC8               	movlw	200
  1265   00197E  6FC1               	movwf	(_motorR+3)& (0+255),b
  1266   001980                     
  1267                           ; BSR set to: 1
  1268                           ;main.c: 61:     int consecuitive=0;
  1269   001980  0E00               	movlw	0
  1270   001982  0100               	movlb	0	; () banked
  1271   001984  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1272   001986  0E00               	movlw	0
  1273   001988  6FEA               	movwf	main@consecuitive& (0+255),b
  1274   00198A                     
  1275                           ; BSR set to: 0
  1276                           ;main.c: 62:     int prev_colour =0;
  1277   00198A  0E00               	movlw	0
  1278   00198C  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1279   00198E  0E00               	movlw	0
  1280   001990  6FEE               	movwf	main@prev_colour& (0+255),b
  1281   001992                     
  1282                           ; BSR set to: 0
  1283                           ;main.c: 63:     int run_flag=1;
  1284   001992  0E00               	movlw	0
  1285   001994  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1286   001996  0E01               	movlw	1
  1287   001998  6FE8               	movwf	main@run_flag& (0+255),b
  1288   00199A                     
  1289                           ; BSR set to: 0
  1290                           ;main.c: 64:     move_count=-1;
  1291   00199A  69F2               	setf	_move_count& (0+255),b	;volatile
  1292   00199C  69F3               	setf	(_move_count+1)& (0+255),b	;volatile
  1293   00199E                     l396:
  1294   00199E  B48E               	btfsc	142,2,c	;volatile
  1295   0019A0  EFD4  F00C         	goto	u4351
  1296   0019A4  EFD6  F00C         	goto	u4350
  1297   0019A8                     u4351:
  1298   0019A8  EFCF  F00C         	goto	l396
  1299   0019AC                     u4350:
  1300   0019AC                     
  1301                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1302   0019AC  0E52               	movlw	82
  1303   0019AE  6E5A               	movwf	(??_main+1)^0,c
  1304   0019B0  0E2B               	movlw	43
  1305   0019B2  6E59               	movwf	??_main^0,c
  1306   0019B4  0E00               	movlw	0
  1307   0019B6                     u4567:
  1308   0019B6  2EE8               	decfsz	wreg,f,c
  1309   0019B8  D7FE               	bra	u4567
  1310   0019BA  2E59               	decfsz	??_main^0,f,c
  1311   0019BC  D7FC               	bra	u4567
  1312   0019BE  2E5A               	decfsz	(??_main+1)^0,f,c
  1313   0019C0  D7FA               	bra	u4567
  1314   0019C2  D000               	nop2	
  1315   0019C4                     
  1316                           ;main.c: 67:     TMR0H=0;
  1317   0019C4  0E00               	movlw	0
  1318   0019C6  6ED4               	movwf	212,c	;volatile
  1319   0019C8                     
  1320                           ;main.c: 68:     TMR0L=0;
  1321   0019C8  0E00               	movlw	0
  1322   0019CA  6ED3               	movwf	211,c	;volatile
  1323                           
  1324                           ;main.c: 69:     while (run_flag)
  1325   0019CC  EFFF  F00E         	goto	l4757
  1326   0019D0                     l4633:
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 70:     {;main.c: 72:         fullSpeedAhead(&motorL,&motorR);
  1330   0019D0  0EF5               	movlw	low _motorL
  1331   0019D2  6E14               	movwf	fullSpeedAhead@mL^0,c
  1332   0019D4  0E00               	movlw	high _motorL
  1333   0019D6  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1334   0019D8  0EBE               	movlw	low _motorR
  1335   0019DA  6E16               	movwf	fullSpeedAhead@mR^0,c
  1336   0019DC  0E01               	movlw	high _motorR
  1337   0019DE  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1338   0019E0  EC75  F01E         	call	_fullSpeedAhead	;wreg free
  1339   0019E4                     
  1340                           ;main.c: 77:         readColours(&vals);
  1341   0019E4  0EC7               	movlw	low _vals
  1342   0019E6  6E0C               	movwf	readColours@vals^0,c
  1343   0019E8  0E01               	movlw	high _vals
  1344   0019EA  6E0D               	movwf	(readColours@vals+1)^0,c
  1345   0019EC  EC08  F021         	call	_readColours	;wreg free
  1346   0019F0                     
  1347                           ;main.c: 80:         colour_rel(&vals, &rel);
  1348   0019F0  0EC7               	movlw	low _vals
  1349   0019F2  6E32               	movwf	colour_rel@vals^0,c
  1350   0019F4  0E01               	movlw	high _vals
  1351   0019F6  6E33               	movwf	(colour_rel@vals+1)^0,c
  1352   0019F8  0EB2               	movlw	low _rel
  1353   0019FA  6E34               	movwf	colour_rel@rel^0,c
  1354   0019FC  0E01               	movlw	high _rel
  1355   0019FE  6E35               	movwf	(colour_rel@rel+1)^0,c
  1356   001A00  EC4D  F015         	call	_colour_rel	;wreg free
  1357   001A04                     
  1358                           ;main.c: 83:         if (vals.L>=500){
  1359   001A04  0101               	movlb	1	; () banked
  1360   001A06  BFCE               	btfsc	(_vals+7)& (0+255),7,b
  1361   001A08  EF0F  F00D         	goto	u4361
  1362   001A0C  0EF4               	movlw	244
  1363   001A0E  5DCD               	subwf	(_vals+6)& (0+255),w,b
  1364   001A10  0E01               	movlw	1
  1365   001A12  59CE               	subwfb	(_vals+7)& (0+255),w,b
  1366   001A14  A0D8               	btfss	status,0,c
  1367   001A16  EF0F  F00D         	goto	u4361
  1368   001A1A  EF11  F00D         	goto	u4360
  1369   001A1E                     u4361:
  1370   001A1E  EFDC  F00E         	goto	l401
  1371   001A22                     u4360:
  1372   001A22                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 84:             Forwardhalfblock(&motorL,&motorR);
  1375   001A22  0EF5               	movlw	low _motorL
  1376   001A24  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1377   001A26  0E00               	movlw	high _motorL
  1378   001A28  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1379   001A2A  0EBE               	movlw	low _motorR
  1380   001A2C  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1381   001A2E  0E01               	movlw	high _motorR
  1382   001A30  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1383   001A32  EC64  F021         	call	_Forwardhalfblock	;wreg free
  1384                           
  1385                           ;main.c: 86:             stop(&motorL, &motorR);
  1386   001A36  0EF5               	movlw	low _motorL
  1387   001A38  6E14               	movwf	stop@mL^0,c
  1388   001A3A  0E00               	movlw	high _motorL
  1389   001A3C  6E15               	movwf	(stop@mL+1)^0,c
  1390   001A3E  0EBE               	movlw	low _motorR
  1391   001A40  6E16               	movwf	stop@mR^0,c
  1392   001A42  0E01               	movlw	high _motorR
  1393   001A44  6E17               	movwf	(stop@mR+1)^0,c
  1394   001A46  ECE7  F01F         	call	_stop	;wreg free
  1395   001A4A                     
  1396                           ;main.c: 87:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1397   001A4A  0E11               	movlw	17
  1398   001A4C  6E5A               	movwf	(??_main+1)^0,c
  1399   001A4E  0E3C               	movlw	60
  1400   001A50  6E59               	movwf	??_main^0,c
  1401   001A52  0ECB               	movlw	203
  1402   001A54                     u4577:
  1403   001A54  2EE8               	decfsz	wreg,f,c
  1404   001A56  D7FE               	bra	u4577
  1405   001A58  2E59               	decfsz	??_main^0,f,c
  1406   001A5A  D7FC               	bra	u4577
  1407   001A5C  2E5A               	decfsz	(??_main+1)^0,f,c
  1408   001A5E  D7FA               	bra	u4577
  1409   001A60  F000               	nop	
  1410   001A62                     
  1411                           ;main.c: 92:             move_count++;
  1412   001A62  0100               	movlb	0	; () banked
  1413   001A64  4BF2               	infsnz	_move_count& (0+255),f,b	;volatile
  1414   001A66  2BF3               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1415   001A68                     
  1416                           ; BSR set to: 0
  1417                           ;main.c: 93:             getTMR0val();
  1418   001A68  EC43  F025         	call	_getTMR0val	;wreg free
  1419                           
  1420                           ;main.c: 95:             while (consecuitive<20){
  1421   001A6C  EF6B  F00D         	goto	l4661
  1422   001A70                     l4649:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;main.c: 96:                 int colour = Colour_decider(&vals, &rel);
  1426   001A70  0EC7               	movlw	low _vals
  1427   001A72  6E4B               	movwf	Colour_decider@vals^0,c
  1428   001A74  0E01               	movlw	high _vals
  1429   001A76  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1430   001A78  0EB2               	movlw	low _rel
  1431   001A7A  6E4D               	movwf	Colour_decider@rel^0,c
  1432   001A7C  0E01               	movlw	high _rel
  1433   001A7E  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1434   001A80  EC13  F007         	call	_Colour_decider	;wreg free
  1435   001A84  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1436   001A88  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1437   001A8C                     
  1438                           ;main.c: 97:                 if (colour==prev_colour){
  1439   001A8C  0100               	movlb	0	; () banked
  1440   001A8E  51EE               	movf	main@prev_colour& (0+255),w,b
  1441   001A90  19EC               	xorwf	main@colour& (0+255),w,b
  1442   001A92  E107               	bnz	u4371
  1443   001A94  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1444   001A96  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1445   001A98  A4D8               	btfss	status,2,c
  1446   001A9A  EF51  F00D         	goto	u4371
  1447   001A9E  EF53  F00D         	goto	u4370
  1448   001AA2                     u4371:
  1449   001AA2  EF57  F00D         	goto	l4655
  1450   001AA6                     u4370:
  1451   001AA6                     
  1452                           ; BSR set to: 0
  1453                           ;main.c: 98:                     consecuitive++;
  1454   001AA6  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1455   001AA8  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1456                           
  1457                           ;main.c: 99:                 }
  1458   001AAA  EF5B  F00D         	goto	l4657
  1459   001AAE                     l4655:
  1460                           
  1461                           ; BSR set to: 0
  1462                           ;main.c: 101:                     consecuitive=0;
  1463   001AAE  0E00               	movlw	0
  1464   001AB0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1465   001AB2  0E00               	movlw	0
  1466   001AB4  6FEA               	movwf	main@consecuitive& (0+255),b
  1467   001AB6                     l4657:
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;main.c: 103:                 prev_colour=colour;
  1471   001AB6  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1472   001ABA  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1473   001ABE                     
  1474                           ; BSR set to: 0
  1475                           ;main.c: 104:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1476   001ABE  0E05               	movlw	5
  1477   001AC0  6E5A               	movwf	(??_main+1)^0,c
  1478   001AC2  0E0F               	movlw	15
  1479   001AC4  6E59               	movwf	??_main^0,c
  1480   001AC6  0EF1               	movlw	241
  1481   001AC8                     u4587:
  1482   001AC8  2EE8               	decfsz	wreg,f,c
  1483   001ACA  D7FE               	bra	u4587
  1484   001ACC  2E59               	decfsz	??_main^0,f,c
  1485   001ACE  D7FC               	bra	u4587
  1486   001AD0  2E5A               	decfsz	(??_main+1)^0,f,c
  1487   001AD2  D7FA               	bra	u4587
  1488   001AD4  F000               	nop	
  1489   001AD6                     l4661:
  1490                           
  1491                           ;main.c: 95:             while (consecuitive<20){
  1492   001AD6  0100               	movlb	0	; () banked
  1493   001AD8  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1494   001ADA  EF78  F00D         	goto	u4381
  1495   001ADE  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1496   001AE0  E109               	bnz	u4380
  1497   001AE2  0E14               	movlw	20
  1498   001AE4  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1499   001AE6  A0D8               	btfss	status,0,c
  1500   001AE8  EF78  F00D         	goto	u4381
  1501   001AEC  EF7A  F00D         	goto	u4380
  1502   001AF0                     u4381:
  1503   001AF0  EF38  F00D         	goto	l4649
  1504   001AF4                     u4380:
  1505   001AF4                     
  1506                           ; BSR set to: 0
  1507                           ;main.c: 106:             consecuitive=0;
  1508   001AF4  0E00               	movlw	0
  1509   001AF6  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1510   001AF8  0E00               	movlw	0
  1511   001AFA  6FEA               	movwf	main@consecuitive& (0+255),b
  1512   001AFC                     
  1513                           ; BSR set to: 0
  1514                           ;main.c: 107:             int temp=TMR0L;
  1515   001AFC  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1516   001B00  6BE5               	clrf	(main@temp+1)& (0+255),b
  1517   001B02                     
  1518                           ; BSR set to: 0
  1519                           ;main.c: 108:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1520   001B02  0E80               	movlw	low main@buf
  1521   001B04  6F60               	movwf	sprintf@s& (0+255),b
  1522   001B06  0E00               	movlw	high main@buf
  1523   001B08  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1524   001B0A  0E01               	movlw	low STR_1
  1525   001B0C  6F62               	movwf	sprintf@fmt& (0+255),b
  1526   001B0E  0E0E               	movlw	high STR_1
  1527   001B10  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1528   001B12  C1C7  F064         	movff	_vals,?_sprintf+4
  1529   001B16  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1530   001B1A  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1531   001B1E  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1532   001B22  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1533   001B26  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1534   001B2A  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1535   001B2E  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1536   001B30  EC43  F022         	call	_sprintf	;wreg free
  1537   001B34                     
  1538                           ;main.c: 111:             sendStringSerial4(buf);
  1539   001B34  0E80               	movlw	low main@buf
  1540   001B36  6E02               	movwf	sendStringSerial4@string^0,c
  1541   001B38  0E00               	movlw	high main@buf
  1542   001B3A  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1543   001B3C  EC02  F025         	call	_sendStringSerial4	;wreg free
  1544   001B40                     
  1545                           ;main.c: 113:             if (prev_colour==1){
  1546   001B40  0100               	movlb	0	; () banked
  1547   001B42  05EE               	decf	main@prev_colour& (0+255),w,b
  1548   001B44  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1549   001B46  A4D8               	btfss	status,2,c
  1550   001B48  EFA8  F00D         	goto	u4391
  1551   001B4C  EFAA  F00D         	goto	u4390
  1552   001B50                     u4391:
  1553   001B50  EFC3  F00D         	goto	l4681
  1554   001B54                     u4390:
  1555   001B54                     
  1556                           ; BSR set to: 0
  1557                           ;main.c: 114:                 RedMove(&motorL, &motorR);
  1558   001B54  0EF5               	movlw	low _motorL
  1559   001B56  6E20               	movwf	RedMove@mL^0,c
  1560   001B58  0E00               	movlw	high _motorL
  1561   001B5A  6E21               	movwf	(RedMove@mL+1)^0,c
  1562   001B5C  0EBE               	movlw	low _motorR
  1563   001B5E  6E22               	movwf	RedMove@mR^0,c
  1564   001B60  0E01               	movlw	high _motorR
  1565   001B62  6E23               	movwf	(RedMove@mR+1)^0,c
  1566   001B64  ECC4  F024         	call	_RedMove	;wreg free
  1567   001B68                     
  1568                           ;main.c: 115:                 TMR0H=0;
  1569   001B68  0E00               	movlw	0
  1570   001B6A  6ED4               	movwf	212,c	;volatile
  1571   001B6C                     
  1572                           ;main.c: 116:                 TMR0L=0;
  1573   001B6C  0E00               	movlw	0
  1574   001B6E  6ED3               	movwf	211,c	;volatile
  1575   001B70                     
  1576                           ;main.c: 117:                 WayBack[move_count]=1;
  1577   001B70  0E60               	movlw	low _WayBack
  1578   001B72  0100               	movlb	0	; () banked
  1579   001B74  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1580   001B76  6ED9               	movwf	fsr2l,c
  1581   001B78  0E01               	movlw	high _WayBack
  1582   001B7A  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1583   001B7C  6EDA               	movwf	fsr2h,c
  1584   001B7E  0E01               	movlw	1
  1585   001B80  6EDF               	movwf	indf2,c
  1586                           
  1587                           ;main.c: 118:             }
  1588   001B82  EFFF  F00E         	goto	l4757
  1589   001B86                     l4681:
  1590                           
  1591                           ; BSR set to: 0
  1592   001B86  0E02               	movlw	2
  1593   001B88  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1594   001B8A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1595   001B8C  A4D8               	btfss	status,2,c
  1596   001B8E  EFCB  F00D         	goto	u4401
  1597   001B92  EFCD  F00D         	goto	u4400
  1598   001B96                     u4401:
  1599   001B96  EFE6  F00D         	goto	l4691
  1600   001B9A                     u4400:
  1601   001B9A                     
  1602                           ; BSR set to: 0
  1603                           ;main.c: 120:                 OrangeMove(&motorL, &motorR);
  1604   001B9A  0EF5               	movlw	low _motorL
  1605   001B9C  6E20               	movwf	OrangeMove@mL^0,c
  1606   001B9E  0E00               	movlw	high _motorL
  1607   001BA0  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1608   001BA2  0EBE               	movlw	low _motorR
  1609   001BA4  6E22               	movwf	OrangeMove@mR^0,c
  1610   001BA6  0E01               	movlw	high _motorR
  1611   001BA8  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1612   001BAA  EC6C  F022         	call	_OrangeMove	;wreg free
  1613   001BAE                     
  1614                           ;main.c: 121:                 TMR0H=0;
  1615   001BAE  0E00               	movlw	0
  1616   001BB0  6ED4               	movwf	212,c	;volatile
  1617   001BB2                     
  1618                           ;main.c: 122:                 TMR0L=0;
  1619   001BB2  0E00               	movlw	0
  1620   001BB4  6ED3               	movwf	211,c	;volatile
  1621   001BB6                     
  1622                           ;main.c: 123:                 WayBack[move_count]=2;
  1623   001BB6  0E60               	movlw	low _WayBack
  1624   001BB8  0100               	movlb	0	; () banked
  1625   001BBA  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1626   001BBC  6ED9               	movwf	fsr2l,c
  1627   001BBE  0E01               	movlw	high _WayBack
  1628   001BC0  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1629   001BC2  6EDA               	movwf	fsr2h,c
  1630   001BC4  0E02               	movlw	2
  1631   001BC6  6EDF               	movwf	indf2,c
  1632                           
  1633                           ;main.c: 124:             }
  1634   001BC8  EFFF  F00E         	goto	l4757
  1635   001BCC                     l4691:
  1636                           
  1637                           ; BSR set to: 0
  1638   001BCC  0E03               	movlw	3
  1639   001BCE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1640   001BD0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1641   001BD2  A4D8               	btfss	status,2,c
  1642   001BD4  EFEE  F00D         	goto	u4411
  1643   001BD8  EFF0  F00D         	goto	u4410
  1644   001BDC                     u4411:
  1645   001BDC  EF09  F00E         	goto	l4701
  1646   001BE0                     u4410:
  1647   001BE0                     
  1648                           ; BSR set to: 0
  1649                           ;main.c: 126:                 YellowMove(&motorL, &motorR);
  1650   001BE0  0EF5               	movlw	low _motorL
  1651   001BE2  6E20               	movwf	YellowMove@mL^0,c
  1652   001BE4  0E00               	movlw	high _motorL
  1653   001BE6  6E21               	movwf	(YellowMove@mL+1)^0,c
  1654   001BE8  0EBE               	movlw	low _motorR
  1655   001BEA  6E22               	movwf	YellowMove@mR^0,c
  1656   001BEC  0E01               	movlw	high _motorR
  1657   001BEE  6E23               	movwf	(YellowMove@mR+1)^0,c
  1658   001BF0  ECE7  F022         	call	_YellowMove	;wreg free
  1659   001BF4                     
  1660                           ;main.c: 127:                 TMR0H=0;
  1661   001BF4  0E00               	movlw	0
  1662   001BF6  6ED4               	movwf	212,c	;volatile
  1663   001BF8                     
  1664                           ;main.c: 128:                 TMR0L=0;
  1665   001BF8  0E00               	movlw	0
  1666   001BFA  6ED3               	movwf	211,c	;volatile
  1667   001BFC                     
  1668                           ;main.c: 129:                 WayBack[move_count]=3;
  1669   001BFC  0E60               	movlw	low _WayBack
  1670   001BFE  0100               	movlb	0	; () banked
  1671   001C00  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1672   001C02  6ED9               	movwf	fsr2l,c
  1673   001C04  0E01               	movlw	high _WayBack
  1674   001C06  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1675   001C08  6EDA               	movwf	fsr2h,c
  1676   001C0A  0E03               	movlw	3
  1677   001C0C  6EDF               	movwf	indf2,c
  1678                           
  1679                           ;main.c: 130:             }
  1680   001C0E  EFFF  F00E         	goto	l4757
  1681   001C12                     l4701:
  1682                           
  1683                           ; BSR set to: 0
  1684   001C12  0E04               	movlw	4
  1685   001C14  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1686   001C16  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1687   001C18  A4D8               	btfss	status,2,c
  1688   001C1A  EF11  F00E         	goto	u4421
  1689   001C1E  EF13  F00E         	goto	u4420
  1690   001C22                     u4421:
  1691   001C22  EF2C  F00E         	goto	l4711
  1692   001C26                     u4420:
  1693   001C26                     
  1694                           ; BSR set to: 0
  1695                           ;main.c: 132:                 BlueMove(&motorL, &motorR);
  1696   001C26  0EF5               	movlw	low _motorL
  1697   001C28  6E20               	movwf	BlueMove@mL^0,c
  1698   001C2A  0E00               	movlw	high _motorL
  1699   001C2C  6E21               	movwf	(BlueMove@mL+1)^0,c
  1700   001C2E  0EBE               	movlw	low _motorR
  1701   001C30  6E22               	movwf	BlueMove@mR^0,c
  1702   001C32  0E01               	movlw	high _motorR
  1703   001C34  6E23               	movwf	(BlueMove@mR+1)^0,c
  1704   001C36  ECD5  F020         	call	_BlueMove	;wreg free
  1705   001C3A                     
  1706                           ;main.c: 133:                 TMR0H=0;
  1707   001C3A  0E00               	movlw	0
  1708   001C3C  6ED4               	movwf	212,c	;volatile
  1709   001C3E                     
  1710                           ;main.c: 134:                 TMR0L=0;
  1711   001C3E  0E00               	movlw	0
  1712   001C40  6ED3               	movwf	211,c	;volatile
  1713   001C42                     
  1714                           ;main.c: 135:                 WayBack[move_count]=4;
  1715   001C42  0E60               	movlw	low _WayBack
  1716   001C44  0100               	movlb	0	; () banked
  1717   001C46  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1718   001C48  6ED9               	movwf	fsr2l,c
  1719   001C4A  0E01               	movlw	high _WayBack
  1720   001C4C  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1721   001C4E  6EDA               	movwf	fsr2h,c
  1722   001C50  0E04               	movlw	4
  1723   001C52  6EDF               	movwf	indf2,c
  1724                           
  1725                           ;main.c: 136:             }
  1726   001C54  EFFF  F00E         	goto	l4757
  1727   001C58                     l4711:
  1728                           
  1729                           ; BSR set to: 0
  1730   001C58  0E05               	movlw	5
  1731   001C5A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1732   001C5C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1733   001C5E  A4D8               	btfss	status,2,c
  1734   001C60  EF34  F00E         	goto	u4431
  1735   001C64  EF36  F00E         	goto	u4430
  1736   001C68                     u4431:
  1737   001C68  EF4F  F00E         	goto	l4721
  1738   001C6C                     u4430:
  1739   001C6C                     
  1740                           ; BSR set to: 0
  1741                           ;main.c: 138:                 GreenMove(&motorL, &motorR);
  1742   001C6C  0EF5               	movlw	low _motorL
  1743   001C6E  6E20               	movwf	GreenMove@mL^0,c
  1744   001C70  0E00               	movlw	high _motorL
  1745   001C72  6E21               	movwf	(GreenMove@mL+1)^0,c
  1746   001C74  0EBE               	movlw	low _motorR
  1747   001C76  6E22               	movwf	GreenMove@mR^0,c
  1748   001C78  0E01               	movlw	high _motorR
  1749   001C7A  6E23               	movwf	(GreenMove@mR+1)^0,c
  1750   001C7C  ECE3  F024         	call	_GreenMove	;wreg free
  1751   001C80                     
  1752                           ;main.c: 139:                 TMR0H=0;
  1753   001C80  0E00               	movlw	0
  1754   001C82  6ED4               	movwf	212,c	;volatile
  1755   001C84                     
  1756                           ;main.c: 140:                 TMR0L=0;
  1757   001C84  0E00               	movlw	0
  1758   001C86  6ED3               	movwf	211,c	;volatile
  1759   001C88                     
  1760                           ;main.c: 141:                 WayBack[move_count]=5;
  1761   001C88  0E60               	movlw	low _WayBack
  1762   001C8A  0100               	movlb	0	; () banked
  1763   001C8C  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1764   001C8E  6ED9               	movwf	fsr2l,c
  1765   001C90  0E01               	movlw	high _WayBack
  1766   001C92  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1767   001C94  6EDA               	movwf	fsr2h,c
  1768   001C96  0E05               	movlw	5
  1769   001C98  6EDF               	movwf	indf2,c
  1770                           
  1771                           ;main.c: 142:             }
  1772   001C9A  EFFF  F00E         	goto	l4757
  1773   001C9E                     l4721:
  1774                           
  1775                           ; BSR set to: 0
  1776   001C9E  0E06               	movlw	6
  1777   001CA0  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1778   001CA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1779   001CA4  A4D8               	btfss	status,2,c
  1780   001CA6  EF57  F00E         	goto	u4441
  1781   001CAA  EF59  F00E         	goto	u4440
  1782   001CAE                     u4441:
  1783   001CAE  EF72  F00E         	goto	l4731
  1784   001CB2                     u4440:
  1785   001CB2                     
  1786                           ; BSR set to: 0
  1787                           ;main.c: 144:                 LightBlueMove(&motorL, &motorR);
  1788   001CB2  0EF5               	movlw	low _motorL
  1789   001CB4  6E20               	movwf	LightBlueMove@mL^0,c
  1790   001CB6  0E00               	movlw	high _motorL
  1791   001CB8  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1792   001CBA  0EBE               	movlw	low _motorR
  1793   001CBC  6E22               	movwf	LightBlueMove@mR^0,c
  1794   001CBE  0E01               	movlw	high _motorR
  1795   001CC0  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1796   001CC2  EC95  F022         	call	_LightBlueMove	;wreg free
  1797   001CC6                     
  1798                           ;main.c: 145:                 TMR0H=0;
  1799   001CC6  0E00               	movlw	0
  1800   001CC8  6ED4               	movwf	212,c	;volatile
  1801   001CCA                     
  1802                           ;main.c: 146:                 TMR0L=0;
  1803   001CCA  0E00               	movlw	0
  1804   001CCC  6ED3               	movwf	211,c	;volatile
  1805   001CCE                     
  1806                           ;main.c: 147:                 WayBack[move_count]=6;
  1807   001CCE  0E60               	movlw	low _WayBack
  1808   001CD0  0100               	movlb	0	; () banked
  1809   001CD2  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1810   001CD4  6ED9               	movwf	fsr2l,c
  1811   001CD6  0E01               	movlw	high _WayBack
  1812   001CD8  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1813   001CDA  6EDA               	movwf	fsr2h,c
  1814   001CDC  0E06               	movlw	6
  1815   001CDE  6EDF               	movwf	indf2,c
  1816                           
  1817                           ;main.c: 148:             }
  1818   001CE0  EFFF  F00E         	goto	l4757
  1819   001CE4                     l4731:
  1820                           
  1821                           ; BSR set to: 0
  1822   001CE4  0E07               	movlw	7
  1823   001CE6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1824   001CE8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1825   001CEA  A4D8               	btfss	status,2,c
  1826   001CEC  EF7A  F00E         	goto	u4451
  1827   001CF0  EF7C  F00E         	goto	u4450
  1828   001CF4                     u4451:
  1829   001CF4  EF95  F00E         	goto	l4741
  1830   001CF8                     u4450:
  1831   001CF8                     
  1832                           ; BSR set to: 0
  1833                           ;main.c: 150:                 PinkMove(&motorL, &motorR);
  1834   001CF8  0EF5               	movlw	low _motorL
  1835   001CFA  6E20               	movwf	PinkMove@mL^0,c
  1836   001CFC  0E00               	movlw	high _motorL
  1837   001CFE  6E21               	movwf	(PinkMove@mL+1)^0,c
  1838   001D00  0EBE               	movlw	low _motorR
  1839   001D02  6E22               	movwf	PinkMove@mR^0,c
  1840   001D04  0E01               	movlw	high _motorR
  1841   001D06  6E23               	movwf	(PinkMove@mR+1)^0,c
  1842   001D08  EC10  F023         	call	_PinkMove	;wreg free
  1843   001D0C                     
  1844                           ;main.c: 151:                 TMR0H=0;
  1845   001D0C  0E00               	movlw	0
  1846   001D0E  6ED4               	movwf	212,c	;volatile
  1847   001D10                     
  1848                           ;main.c: 152:                 TMR0L=0;
  1849   001D10  0E00               	movlw	0
  1850   001D12  6ED3               	movwf	211,c	;volatile
  1851   001D14                     
  1852                           ;main.c: 153:                 WayBack[move_count]=7;
  1853   001D14  0E60               	movlw	low _WayBack
  1854   001D16  0100               	movlb	0	; () banked
  1855   001D18  25F2               	addwf	_move_count& (0+255),w,b	;volatile
  1856   001D1A  6ED9               	movwf	fsr2l,c
  1857   001D1C  0E01               	movlw	high _WayBack
  1858   001D1E  21F3               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1859   001D20  6EDA               	movwf	fsr2h,c
  1860   001D22  0E07               	movlw	7
  1861   001D24  6EDF               	movwf	indf2,c
  1862                           
  1863                           ;main.c: 154:             }
  1864   001D26  EFFF  F00E         	goto	l4757
  1865   001D2A                     l4741:
  1866                           
  1867                           ; BSR set to: 0
  1868   001D2A  0E0A               	movlw	10
  1869   001D2C  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1870   001D2E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1871   001D30  A4D8               	btfss	status,2,c
  1872   001D32  EF9D  F00E         	goto	u4461
  1873   001D36  EF9F  F00E         	goto	u4460
  1874   001D3A                     u4461:
  1875   001D3A  EFAB  F00E         	goto	l4745
  1876   001D3E                     u4460:
  1877   001D3E                     
  1878                           ; BSR set to: 0
  1879                           ;main.c: 156:                 RetryMove(&motorL, &motorR);
  1880   001D3E  0EF5               	movlw	low _motorL
  1881   001D40  6E1A               	movwf	RetryMove@mL^0,c
  1882   001D42  0E00               	movlw	high _motorL
  1883   001D44  6E1B               	movwf	(RetryMove@mL+1)^0,c
  1884   001D46  0EBE               	movlw	low _motorR
  1885   001D48  6E1C               	movwf	RetryMove@mR^0,c
  1886   001D4A  0E01               	movlw	high _motorR
  1887   001D4C  6E1D               	movwf	(RetryMove@mR+1)^0,c
  1888   001D4E  ECA6  F01F         	call	_RetryMove	;wreg free
  1889                           
  1890                           ;main.c: 157:             }
  1891   001D52  EFFF  F00E         	goto	l4757
  1892   001D56                     l4745:
  1893                           
  1894                           ; BSR set to: 0
  1895   001D56  51EE               	movf	main@prev_colour& (0+255),w,b
  1896   001D58  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1897   001D5A  A4D8               	btfss	status,2,c
  1898   001D5C  EFB2  F00E         	goto	u4471
  1899   001D60  EFB4  F00E         	goto	u4470
  1900   001D64                     u4471:
  1901   001D64  EFDA  F00E         	goto	l418
  1902   001D68                     u4470:
  1903   001D68                     
  1904                           ; BSR set to: 0
  1905                           ;main.c: 159:                 BlueMove(&motorL, &motorR);
  1906   001D68  0EF5               	movlw	low _motorL
  1907   001D6A  6E20               	movwf	BlueMove@mL^0,c
  1908   001D6C  0E00               	movlw	high _motorL
  1909   001D6E  6E21               	movwf	(BlueMove@mL+1)^0,c
  1910   001D70  0EBE               	movlw	low _motorR
  1911   001D72  6E22               	movwf	BlueMove@mR^0,c
  1912   001D74  0E01               	movlw	high _motorR
  1913   001D76  6E23               	movwf	(BlueMove@mR+1)^0,c
  1914   001D78  ECD5  F020         	call	_BlueMove	;wreg free
  1915   001D7C                     
  1916                           ;main.c: 160:                 T0CON0bits.T0EN=0;
  1917   001D7C  9ED5               	bcf	213,7,c	;volatile
  1918                           
  1919                           ;main.c: 161:                 go_Home(WayBack, Time_forward);
  1920   001D7E  0E60               	movlw	low _WayBack
  1921   001D80  6E24               	movwf	go_Home@WayBack^0,c
  1922   001D82  0E01               	movlw	high _WayBack
  1923   001D84  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1924   001D86  0E00               	movlw	low _Time_forward
  1925   001D88  6E26               	movwf	go_Home@Time_forward^0,c
  1926   001D8A  0E02               	movlw	high _Time_forward
  1927   001D8C  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1928   001D8E  EC23  F018         	call	_go_Home	;wreg free
  1929                           
  1930                           ;main.c: 162:                 stop(&motorL, &motorR);
  1931   001D92  0EF5               	movlw	low _motorL
  1932   001D94  6E14               	movwf	stop@mL^0,c
  1933   001D96  0E00               	movlw	high _motorL
  1934   001D98  6E15               	movwf	(stop@mL+1)^0,c
  1935   001D9A  0EBE               	movlw	low _motorR
  1936   001D9C  6E16               	movwf	stop@mR^0,c
  1937   001D9E  0E01               	movlw	high _motorR
  1938   001DA0  6E17               	movwf	(stop@mR+1)^0,c
  1939   001DA2  ECE7  F01F         	call	_stop	;wreg free
  1940   001DA6                     
  1941                           ;main.c: 163:                 run_flag=0;
  1942   001DA6  0E00               	movlw	0
  1943   001DA8  0100               	movlb	0	; () banked
  1944   001DAA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1945   001DAC  0E00               	movlw	0
  1946   001DAE  6FE8               	movwf	main@run_flag& (0+255),b
  1947   001DB0  EFFF  F00E         	goto	l4757
  1948   001DB4                     l418:
  1949                           
  1950                           ; BSR set to: 0
  1951   001DB4  EFFF  F00E         	goto	l4757
  1952   001DB8                     l401:
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;main.c: 169:             int temp=TMR0L;
  1956   001DB8  CFD3 F0E6          	movff	4051,main@temp_1189	;volatile
  1957   001DBC  0100               	movlb	0	; () banked
  1958   001DBE  6BE7               	clrf	(main@temp_1189+1)& (0+255),b
  1959   001DC0                     
  1960                           ; BSR set to: 0
  1961                           ;main.c: 170:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1962   001DC0  0E80               	movlw	low main@buf
  1963   001DC2  6F60               	movwf	sprintf@s& (0+255),b
  1964   001DC4  0E00               	movlw	high main@buf
  1965   001DC6  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1966   001DC8  0E01               	movlw	low STR_1
  1967   001DCA  6F62               	movwf	sprintf@fmt& (0+255),b
  1968   001DCC  0E0E               	movlw	high STR_1
  1969   001DCE  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1970   001DD0  C1C7  F064         	movff	_vals,?_sprintf+4
  1971   001DD4  C1C8  F065         	movff	_vals+1,?_sprintf+5
  1972   001DD8  C1C9  F066         	movff	_vals+2,?_sprintf+6
  1973   001DDC  C1CA  F067         	movff	_vals+3,?_sprintf+7
  1974   001DE0  C1CB  F068         	movff	_vals+4,?_sprintf+8
  1975   001DE4  C1CC  F069         	movff	_vals+5,?_sprintf+9
  1976   001DE8  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1977   001DEC  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1978   001DEE  EC43  F022         	call	_sprintf	;wreg free
  1979   001DF2                     
  1980                           ;main.c: 171:             sendStringSerial4(buf);
  1981   001DF2  0E80               	movlw	low main@buf
  1982   001DF4  6E02               	movwf	sendStringSerial4@string^0,c
  1983   001DF6  0E00               	movlw	high main@buf
  1984   001DF8  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1985   001DFA  EC02  F025         	call	_sendStringSerial4	;wreg free
  1986   001DFE                     l4757:
  1987                           
  1988                           ;main.c: 69:     while (run_flag)
  1989   001DFE  0100               	movlb	0	; () banked
  1990   001E00  51E8               	movf	main@run_flag& (0+255),w,b
  1991   001E02  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  1992   001E04  A4D8               	btfss	status,2,c
  1993   001E06  EF07  F00F         	goto	u4481
  1994   001E0A  EF09  F00F         	goto	u4480
  1995   001E0E                     u4481:
  1996   001E0E  EFE8  F00C         	goto	l4633
  1997   001E12                     u4480:
  1998   001E12                     
  1999                           ; BSR set to: 0
  2000   001E12  EF07  F000         	goto	start
  2001   001E16                     __end_of_main:
  2002                           	callstack 0
  2003                           
  2004 ;; *************** function _sprintf *****************
  2005 ;; Defined at:
  2006 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2009 ;;		 -> main@buf(100), 
  2010 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2011 ;;		 -> STR_2(36), STR_1(36), 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2014 ;;  ap              2   12[BANK0 ] PTR void [1]
  2015 ;;		 -> ?_sprintf(2), 
  2016 ;;  ret             2    0        int 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  2    0[BANK0 ] int 
  2019 ;; Registers used:
  2020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2026 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2027 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2029 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2030 ;;Total ram usage:       25 bytes
  2031 ;; Hardware stack levels used: 1
  2032 ;; Hardware stack levels required when called: 8
  2033 ;; This function calls:
  2034 ;;		_vfprintf
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text1
  2041   004486                     __ptext1:
  2042                           	callstack 0
  2043   004486                     _sprintf:
  2044                           	callstack 22
  2045   004486  0E64               	movlw	low (?_sprintf+4)
  2046   004488  0100               	movlb	0	; () banked
  2047   00448A  6F6C               	movwf	sprintf@ap& (0+255),b
  2048   00448C  0E00               	movlw	high (?_sprintf+4)
  2049   00448E  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2050   004490  C060  F06E         	movff	sprintf@s,sprintf@f
  2051   004494  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2052   004498                     
  2053                           ; BSR set to: 0
  2054   004498  0E00               	movlw	0
  2055   00449A  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2056   00449C  0E00               	movlw	0
  2057   00449E  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2058   0044A0                     
  2059                           ; BSR set to: 0
  2060   0044A0  0E00               	movlw	0
  2061   0044A2  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2062   0044A4  0E00               	movlw	0
  2063   0044A6  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2064   0044A8                     
  2065                           ; BSR set to: 0
  2066   0044A8  0E6E               	movlw	low sprintf@f
  2067   0044AA  6E51               	movwf	vfprintf@fp^0,c
  2068   0044AC  0E00               	movlw	high sprintf@f
  2069   0044AE  6E52               	movwf	(vfprintf@fp+1)^0,c
  2070   0044B0  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2071   0044B4  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2072   0044B8  0E6C               	movlw	low sprintf@ap
  2073   0044BA  6E55               	movwf	vfprintf@ap^0,c
  2074   0044BC  0E00               	movlw	high sprintf@ap
  2075   0044BE  6E56               	movwf	(vfprintf@ap+1)^0,c
  2076   0044C0  ECD9  F023         	call	_vfprintf	;wreg free
  2077   0044C4  0100               	movlb	0	; () banked
  2078   0044C6  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2079   0044C8  2560               	addwf	sprintf@s& (0+255),w,b
  2080   0044CA  6ED9               	movwf	fsr2l,c
  2081   0044CC  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2082   0044CE  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2083   0044D0  6EDA               	movwf	fsr2h,c
  2084   0044D2  0E00               	movlw	0
  2085   0044D4  6EDF               	movwf	indf2,c
  2086   0044D6                     
  2087                           ; BSR set to: 0
  2088   0044D6  0012               	return		;funcret
  2089   0044D8                     __end_of_sprintf:
  2090                           	callstack 0
  2091                           
  2092 ;; *************** function _vfprintf *****************
  2093 ;; Defined at:
  2094 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2097 ;;		 -> sprintf@f(11), 
  2098 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2099 ;;		 -> STR_2(36), STR_1(36), 
  2100 ;;  ap              2   84[COMRAM] PTR PTR void 
  2101 ;;		 -> sprintf@ap(2), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2104 ;;		 -> STR_2(36), STR_1(36), 
  2105 ;; Return value:  Size  Location     Type
  2106 ;;                  2   80[COMRAM] int 
  2107 ;; Registers used:
  2108 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2109 ;; Tracked objects:
  2110 ;;		On entry : 0/0
  2111 ;;		On exit  : 0/0
  2112 ;;		Unchanged: 0/0
  2113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2114 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2117 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2118 ;;Total ram usage:        8 bytes
  2119 ;; Hardware stack levels used: 1
  2120 ;; Hardware stack levels required when called: 7
  2121 ;; This function calls:
  2122 ;;		_vfpfcnvrt
  2123 ;; This function is called by:
  2124 ;;		_sprintf
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text2
  2129   0047B2                     __ptext2:
  2130                           	callstack 0
  2131   0047B2                     _vfprintf:
  2132                           	callstack 22
  2133   0047B2                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2135   0047B2  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2136   0047B6  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2139   0047BA  EFED  F023         	goto	l4129
  2140   0047BE                     l4127:
  2141                           
  2142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2143   0047BE  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2144   0047C2  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2145   0047C6  0E57               	movlw	low vfprintf@cfmt
  2146   0047C8  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2147   0047CA  0E00               	movlw	high vfprintf@cfmt
  2148   0047CC  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2149   0047CE  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2150   0047D2  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2151   0047D6  EC42  F01C         	call	_vfpfcnvrt	;wreg free
  2152   0047DA                     l4129:
  2153                           
  2154                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2155   0047DA  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2156   0047DE  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2157   0047E2                     	if	0	;tblptru may be non-zero
  2158   0047E2                     	endif
  2159   0047E2                     	if	0	;tblptru may be non-zero
  2160   0047E2                     	endif
  2161   0047E2  0008               	tblrd		*
  2162   0047E4  50F5               	movf	tablat,w,c
  2163   0047E6  0900               	iorlw	0
  2164   0047E8  A4D8               	btfss	status,2,c
  2165   0047EA  EFF9  F023         	goto	u3821
  2166   0047EE  EFFB  F023         	goto	u3820
  2167   0047F2                     u3821:
  2168   0047F2  EFDF  F023         	goto	l4127
  2169   0047F6                     u3820:
  2170   0047F6                     
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2172   0047F6  0E00               	movlw	0
  2173   0047F8  6E52               	movwf	(?_vfprintf+1)^0,c
  2174   0047FA  0E00               	movlw	0
  2175   0047FC  6E51               	movwf	?_vfprintf^0,c
  2176   0047FE  0012               	return		;funcret
  2177   004800                     __end_of_vfprintf:
  2178                           	callstack 0
  2179                           
  2180 ;; *************** function _vfpfcnvrt *****************
  2181 ;; Defined at:
  2182 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2185 ;;		 -> sprintf@f(11), 
  2186 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2187 ;;		 -> vfprintf@cfmt(2), 
  2188 ;;  ap              2   66[COMRAM] PTR PTR void 
  2189 ;;		 -> sprintf@ap(2), 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  convarg         8   70[COMRAM] struct .
  2192 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2193 ;;		 -> STR_2(36), STR_1(36), 
  2194 ;;  i               2    0        int 
  2195 ;;  done            2    0        int 
  2196 ;;  c               1    0        unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2206 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2207 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2209 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2210 ;;Total ram usage:       18 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 6
  2213 ;; This function calls:
  2214 ;;		_dtoa
  2215 ;;		_fputc
  2216 ;; This function is called by:
  2217 ;;		_vfprintf
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text3
  2222   003884                     __ptext3:
  2223                           	callstack 0
  2224   003884                     _vfpfcnvrt:
  2225                           	callstack 22
  2226   003884                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2228   003884  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2229   003888  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2230   00388C  CFDE FFF6          	movff	postinc2,tblptrl
  2231   003890  CFDD FFF7          	movff	postdec2,tblptrh
  2232   003894                     	if	0	;tblptru may be non-zero
  2233   003894                     	endif
  2234   003894                     	if	0	;tblptru may be non-zero
  2235   003894                     	endif
  2236   003894  0008               	tblrd		*
  2237   003896  50F5               	movf	tablat,w,c
  2238   003898  0A25               	xorlw	37
  2239   00389A  A4D8               	btfss	status,2,c
  2240   00389C  EF52  F01C         	goto	u3181
  2241   0038A0  EF54  F01C         	goto	u3180
  2242   0038A4                     u3181:
  2243   0038A4  EFD5  F01C         	goto	l3693
  2244   0038A8                     u3180:
  2245   0038A8                     
  2246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2247   0038A8  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2248   0038AC  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2249   0038B0  2ADE               	incf	postinc2,f,c
  2250   0038B2  0E00               	movlw	0
  2251   0038B4  22DD               	addwfc	postdec2,f,c
  2252   0038B6                     
  2253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2254   0038B6  0E00               	movlw	0
  2255   0038B8  0101               	movlb	1	; () banked
  2256   0038BA  6F5D               	movwf	(_width+1)& (0+255),b
  2257   0038BC  0E00               	movlw	0
  2258   0038BE  6F5C               	movwf	_width& (0+255),b
  2259   0038C0  C15C  F0F4         	movff	_width,_flags
  2260   0038C4                     
  2261                           ; BSR set to: 1
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2263   0038C4  0100               	movlb	0	; () banked
  2264   0038C6  69F0               	setf	_prec& (0+255),b
  2265   0038C8  69F1               	setf	(_prec+1)& (0+255),b
  2266   0038CA                     
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2269   0038CA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270   0038CE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271   0038D2  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2272   0038D6  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2273   0038DA                     
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2276   0038DA  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2277   0038DE  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2278   0038E2                     	if	0	;tblptru may be non-zero
  2279   0038E2                     	endif
  2280   0038E2                     	if	0	;tblptru may be non-zero
  2281   0038E2                     	endif
  2282   0038E2  0008               	tblrd		*
  2283   0038E4  50F5               	movf	tablat,w,c
  2284   0038E6  0A64               	xorlw	100
  2285   0038E8  B4D8               	btfsc	status,2,c
  2286   0038EA  EF79  F01C         	goto	u3191
  2287   0038EE  EF7B  F01C         	goto	u3190
  2288   0038F2                     u3191:
  2289   0038F2  EF89  F01C         	goto	l3683
  2290   0038F6                     u3190:
  2291   0038F6                     
  2292                           ; BSR set to: 0
  2293   0038F6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2294   0038FA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2295   0038FE                     	if	0	;tblptru may be non-zero
  2296   0038FE                     	endif
  2297   0038FE                     	if	0	;tblptru may be non-zero
  2298   0038FE                     	endif
  2299   0038FE  0008               	tblrd		*
  2300   003900  50F5               	movf	tablat,w,c
  2301   003902  0A69               	xorlw	105
  2302   003904  A4D8               	btfss	status,2,c
  2303   003906  EF87  F01C         	goto	u3201
  2304   00390A  EF89  F01C         	goto	u3200
  2305   00390E                     u3201:
  2306   00390E  EFCC  F01C         	goto	l3689
  2307   003912                     u3200:
  2308   003912                     l3683:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2312   003912  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2313   003916  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2314   00391A  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2315   00391E  0E02               	movlw	2
  2316   003920  26DE               	addwf	postinc2,f,c
  2317   003922  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2318   003926  0E00               	movlw	0
  2319   003928  22DD               	addwfc	postdec2,f,c
  2320   00392A  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2321   00392E  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2322   003932  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2323   003936  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2324   00393A  0E00               	movlw	0
  2325   00393C  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2326   00393E  0EFF               	movlw	-1
  2327   003940  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2328   003942  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2329   003944  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2330   003946  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2331   003948  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2332   00394A  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2333                           
  2334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2335   00394C  0E01               	movlw	1
  2336   00394E  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2337   003950  6E45               	movwf	??_vfpfcnvrt^0,c
  2338   003952  0E00               	movlw	0
  2339   003954  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2340   003956  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2341   003958  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2342   00395C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2343   003960  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2344   003964  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2345   003968                     
  2346                           ; BSR set to: 0
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2348   003968  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2349   00396C  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2350   003970  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2351   003974  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2352   003978  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2353   00397C  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2354   003980  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2355   003984  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2356   003988  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2357   00398C  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2358   003990  ECE4  F016         	call	_dtoa	;wreg free
  2359   003994  EFE9  F01C         	goto	l1391
  2360   003998                     l3689:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2363   003998  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2364   00399C  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2365   0039A0  2ADE               	incf	postinc2,f,c
  2366   0039A2  0E00               	movlw	0
  2367   0039A4  22DD               	addwfc	postdec2,f,c
  2368   0039A6  EFE9  F01C         	goto	l1391
  2369   0039AA                     l3693:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2372   0039AA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2373   0039AE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2374   0039B2  CFDE FFF6          	movff	postinc2,tblptrl
  2375   0039B6  CFDD FFF7          	movff	postdec2,tblptrh
  2376   0039BA                     	if	0	;tblptru may be non-zero
  2377   0039BA                     	endif
  2378   0039BA                     	if	0	;tblptru may be non-zero
  2379   0039BA                     	endif
  2380   0039BA  0008               	tblrd		*
  2381   0039BC  50F5               	movf	tablat,w,c
  2382   0039BE  6E01               	movwf	fputc@c^0,c
  2383   0039C0  6A02               	clrf	(fputc@c+1)^0,c
  2384   0039C2  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2385   0039C6  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2386   0039CA  EC6C  F01D         	call	_fputc	;wreg free
  2387   0039CE  EFCC  F01C         	goto	l3689
  2388   0039D2                     l1391:
  2389   0039D2  0012               	return		;funcret
  2390   0039D4                     __end_of_vfpfcnvrt:
  2391                           	callstack 0
  2392                           
  2393 ;; *************** function _dtoa *****************
  2394 ;; Defined at:
  2395 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2398 ;;		 -> sprintf@f(11), 
  2399 ;;  d               8   29[COMRAM] long long 
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;  n               8   51[COMRAM] long long 
  2402 ;;  i               2   59[COMRAM] int 
  2403 ;;  w               2   49[COMRAM] int 
  2404 ;;  p               2   47[COMRAM] int 
  2405 ;;  s               1   61[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2415 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;Total ram usage:       35 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 5
  2422 ;; This function calls:
  2423 ;;		___aodiv
  2424 ;;		___aomod
  2425 ;;		_abs
  2426 ;;		_pad
  2427 ;; This function is called by:
  2428 ;;		_vfpfcnvrt
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text4
  2433   002DC8                     __ptext4:
  2434                           	callstack 0
  2435   002DC8                     _dtoa:
  2436                           	callstack 22
  2437   002DC8                     
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2439   002DC8  C01E  F034         	movff	dtoa@d,dtoa@n
  2440   002DCC  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2441   002DD0  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2442   002DD4  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2443   002DD8  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2444   002DDC  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2445   002DE0  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2446   002DE4  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2447   002DE8                     
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2449   002DE8  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2450   002DEA  EFF9  F016         	goto	u2671
  2451   002DEE  EFFC  F016         	goto	u2670
  2452   002DF2                     u2671:
  2453   002DF2  0E01               	movlw	1
  2454   002DF4  EFFD  F016         	goto	u2680
  2455   002DF8                     u2670:
  2456   002DF8  0E00               	movlw	0
  2457   002DFA                     u2680:
  2458   002DFA  6E3E               	movwf	dtoa@s^0,c
  2459   002DFC                     
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2461   002DFC  503E               	movf	dtoa@s^0,w,c
  2462   002DFE  B4D8               	btfsc	status,2,c
  2463   002E00  EF04  F017         	goto	u2691
  2464   002E04  EF06  F017         	goto	u2690
  2465   002E08                     u2691:
  2466   002E08  EF16  F017         	goto	l3369
  2467   002E0C                     u2690:
  2468   002E0C                     
  2469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2470   002E0C  1E3B               	comf	(dtoa@n+7)^0,f,c
  2471   002E0E  1E3A               	comf	(dtoa@n+6)^0,f,c
  2472   002E10  1E39               	comf	(dtoa@n+5)^0,f,c
  2473   002E12  1E38               	comf	(dtoa@n+4)^0,f,c
  2474   002E14  1E37               	comf	(dtoa@n+3)^0,f,c
  2475   002E16  1E36               	comf	(dtoa@n+2)^0,f,c
  2476   002E18  1E35               	comf	(dtoa@n+1)^0,f,c
  2477   002E1A  6C34               	negf	dtoa@n^0,c
  2478   002E1C  0E00               	movlw	0
  2479   002E1E  2235               	addwfc	(dtoa@n+1)^0,f,c
  2480   002E20  2236               	addwfc	(dtoa@n+2)^0,f,c
  2481   002E22  2237               	addwfc	(dtoa@n+3)^0,f,c
  2482   002E24  2238               	addwfc	(dtoa@n+4)^0,f,c
  2483   002E26  2239               	addwfc	(dtoa@n+5)^0,f,c
  2484   002E28  223A               	addwfc	(dtoa@n+6)^0,f,c
  2485   002E2A  223B               	addwfc	(dtoa@n+7)^0,f,c
  2486   002E2C                     l3369:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2489   002E2C  0100               	movlb	0	; () banked
  2490   002E2E  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2491   002E30  EF24  F017         	goto	u2700
  2492   002E34  51F1               	movf	(_prec+1)& (0+255),w,b
  2493   002E36  E106               	bnz	u2701
  2494   002E38  05F0               	decf	_prec& (0+255),w,b
  2495   002E3A  B0D8               	btfsc	status,0,c
  2496   002E3C  EF22  F017         	goto	u2701
  2497   002E40  EF24  F017         	goto	u2700
  2498   002E44                     u2701:
  2499   002E44  EF2A  F017         	goto	l1370
  2500   002E48                     u2700:
  2501   002E48                     
  2502                           ; BSR set to: 0
  2503   002E48  0E00               	movlw	0
  2504   002E4A  6E31               	movwf	(dtoa@p+1)^0,c
  2505   002E4C  0E01               	movlw	1
  2506   002E4E  6E30               	movwf	dtoa@p^0,c
  2507   002E50  EF2E  F017         	goto	l1372
  2508   002E54                     l1370:
  2509                           
  2510                           ; BSR set to: 0
  2511   002E54  C0F0  F030         	movff	_prec,dtoa@p
  2512   002E58  C0F1  F031         	movff	_prec+1,dtoa@p+1
  2513   002E5C                     l1372:
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2517   002E5C  C15C  F032         	movff	_width,dtoa@w
  2518   002E60  C15D  F033         	movff	_width+1,dtoa@w+1
  2519   002E64                     
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2522   002E64  503E               	movf	dtoa@s^0,w,c
  2523   002E66  B4D8               	btfsc	status,2,c
  2524   002E68  EF38  F017         	goto	u2711
  2525   002E6C  EF3A  F017         	goto	u2710
  2526   002E70                     u2711:
  2527   002E70  EF51  F017         	goto	l1373
  2528   002E74                     u2710:
  2529   002E74                     
  2530                           ; BSR set to: 0
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2532   002E74  0632               	decf	dtoa@w^0,f,c
  2533   002E76  A0D8               	btfss	status,0,c
  2534   002E78  0633               	decf	(dtoa@w+1)^0,f,c
  2535   002E7A                     
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2538   002E7A  503E               	movf	dtoa@s^0,w,c
  2539   002E7C  A4D8               	btfss	status,2,c
  2540   002E7E  EF43  F017         	goto	u2721
  2541   002E82  EF45  F017         	goto	u2720
  2542   002E86                     u2721:
  2543   002E86  EF4B  F017         	goto	l3381
  2544   002E8A                     u2720:
  2545   002E8A                     
  2546                           ; BSR set to: 0
  2547   002E8A  0E00               	movlw	0
  2548   002E8C  6E2F               	movwf	(_dtoa$2487+1)^0,c
  2549   002E8E  0E2B               	movlw	43
  2550   002E90  6E2E               	movwf	_dtoa$2487^0,c
  2551   002E92  EF4F  F017         	goto	l3383
  2552   002E96                     l3381:
  2553                           
  2554                           ; BSR set to: 0
  2555   002E96  0E00               	movlw	0
  2556   002E98  6E2F               	movwf	(_dtoa$2487+1)^0,c
  2557   002E9A  0E2D               	movlw	45
  2558   002E9C  6E2E               	movwf	_dtoa$2487^0,c
  2559   002E9E                     l3383:
  2560                           
  2561                           ; BSR set to: 0
  2562   002E9E  C02E  F03E         	movff	_dtoa$2487,dtoa@s
  2563   002EA2                     l1373:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2567   002EA2  0E00               	movlw	0
  2568   002EA4  6E3D               	movwf	(dtoa@i+1)^0,c
  2569   002EA6  0E1F               	movlw	31
  2570   002EA8  6E3C               	movwf	dtoa@i^0,c
  2571   002EAA                     
  2572                           ; BSR set to: 0
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2574   002EAA  0E00               	movlw	0
  2575   002EAC  0101               	movlb	1	; () banked
  2576   002EAE  6FB1               	movwf	(_dbuf+31)& (0+255),b
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2579   002EB0  EFD6  F017         	goto	l3397
  2580   002EB4                     l3387:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2583   002EB4  063C               	decf	dtoa@i^0,f,c
  2584   002EB6  A0D8               	btfss	status,0,c
  2585   002EB8  063D               	decf	(dtoa@i+1)^0,f,c
  2586   002EBA                     
  2587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2588   002EBA  0E92               	movlw	low _dbuf
  2589   002EBC  243C               	addwf	dtoa@i^0,w,c
  2590   002EBE  6ED9               	movwf	fsr2l,c
  2591   002EC0  0E01               	movlw	high _dbuf
  2592   002EC2  203D               	addwfc	(dtoa@i+1)^0,w,c
  2593   002EC4  6EDA               	movwf	fsr2h,c
  2594   002EC6  C034  F001         	movff	dtoa@n,___aomod@dividend
  2595   002ECA  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2596   002ECE  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2597   002ED2  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2598   002ED6  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2599   002EDA  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2600   002EDE  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2601   002EE2  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2602   002EE6  0E0A               	movlw	10
  2603   002EE8  6E09               	movwf	___aomod@divisor^0,c
  2604   002EEA  0E00               	movlw	0
  2605   002EEC  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2606   002EEE  0E00               	movlw	0
  2607   002EF0  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2608   002EF2  0E00               	movlw	0
  2609   002EF4  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2610   002EF6  0E00               	movlw	0
  2611   002EF8  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2612   002EFA  0E00               	movlw	0
  2613   002EFC  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2614   002EFE  0E00               	movlw	0
  2615   002F00  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2616   002F02  0E00               	movlw	0
  2617   002F04  6E10               	movwf	(___aomod@divisor+7)^0,c
  2618   002F06  EC90  F01B         	call	___aomod	;wreg free
  2619   002F0A  C001  F026         	movff	?___aomod,??_dtoa
  2620   002F0E  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2621   002F12  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2622   002F16  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2623   002F1A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2624   002F1E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2625   002F22  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2626   002F26  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2627   002F2A  C026  F013         	movff	??_dtoa,abs@a
  2628   002F2E  C027  F014         	movff	??_dtoa+1,abs@a+1
  2629   002F32  EC66  F024         	call	_abs	;wreg free
  2630   002F36  5013               	movf	?_abs^0,w,c
  2631   002F38  0F30               	addlw	48
  2632   002F3A  6EDF               	movwf	indf2,c
  2633   002F3C                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2635   002F3C  0630               	decf	dtoa@p^0,f,c
  2636   002F3E  A0D8               	btfss	status,0,c
  2637   002F40  0631               	decf	(dtoa@p+1)^0,f,c
  2638   002F42                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2640   002F42  0632               	decf	dtoa@w^0,f,c
  2641   002F44  A0D8               	btfss	status,0,c
  2642   002F46  0633               	decf	(dtoa@w+1)^0,f,c
  2643   002F48                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2645   002F48  C034  F001         	movff	dtoa@n,___aodiv@dividend
  2646   002F4C  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2647   002F50  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2648   002F54  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2649   002F58  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2650   002F5C  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2651   002F60  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2652   002F64  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2653   002F68  0E0A               	movlw	10
  2654   002F6A  6E09               	movwf	___aodiv@divisor^0,c
  2655   002F6C  0E00               	movlw	0
  2656   002F6E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2657   002F70  0E00               	movlw	0
  2658   002F72  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2659   002F74  0E00               	movlw	0
  2660   002F76  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2661   002F78  0E00               	movlw	0
  2662   002F7A  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2663   002F7C  0E00               	movlw	0
  2664   002F7E  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2665   002F80  0E00               	movlw	0
  2666   002F82  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2667   002F84  0E00               	movlw	0
  2668   002F86  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2669   002F88  EC16  F01A         	call	___aodiv	;wreg free
  2670   002F8C  C001  F034         	movff	?___aodiv,dtoa@n
  2671   002F90  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  2672   002F94  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  2673   002F98  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  2674   002F9C  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  2675   002FA0  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  2676   002FA4  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  2677   002FA8  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  2678   002FAC                     l3397:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2681   002FAC  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  2682   002FAE  EFE1  F017         	goto	u2731
  2683   002FB2  503D               	movf	(dtoa@i+1)^0,w,c
  2684   002FB4  E108               	bnz	u2730
  2685   002FB6  043C               	decf	dtoa@i^0,w,c
  2686   002FB8  A0D8               	btfss	status,0,c
  2687   002FBA  EFE1  F017         	goto	u2731
  2688   002FBE  EFE3  F017         	goto	u2730
  2689   002FC2                     u2731:
  2690   002FC2  EFFF  F017         	goto	l3403
  2691   002FC6                     u2730:
  2692   002FC6  5034               	movf	dtoa@n^0,w,c
  2693   002FC8  1035               	iorwf	(dtoa@n+1)^0,w,c
  2694   002FCA  1036               	iorwf	(dtoa@n+2)^0,w,c
  2695   002FCC  1037               	iorwf	(dtoa@n+3)^0,w,c
  2696   002FCE  1038               	iorwf	(dtoa@n+4)^0,w,c
  2697   002FD0  1039               	iorwf	(dtoa@n+5)^0,w,c
  2698   002FD2  103A               	iorwf	(dtoa@n+6)^0,w,c
  2699   002FD4  103B               	iorwf	(dtoa@n+7)^0,w,c
  2700   002FD6  A4D8               	btfss	status,2,c
  2701   002FD8  EFF0  F017         	goto	u2741
  2702   002FDC  EFF2  F017         	goto	u2740
  2703   002FE0                     u2741:
  2704   002FE0  EF5A  F017         	goto	l3387
  2705   002FE4                     u2740:
  2706   002FE4  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2707   002FE6  EFFF  F017         	goto	u2750
  2708   002FEA  5031               	movf	(dtoa@p+1)^0,w,c
  2709   002FEC  E106               	bnz	u2751
  2710   002FEE  0430               	decf	dtoa@p^0,w,c
  2711   002FF0  B0D8               	btfsc	status,0,c
  2712   002FF2  EFFD  F017         	goto	u2751
  2713   002FF6  EFFF  F017         	goto	u2750
  2714   002FFA                     u2751:
  2715   002FFA  EF5A  F017         	goto	l3387
  2716   002FFE                     u2750:
  2717   002FFE                     l3403:
  2718                           
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2720   002FFE  503E               	movf	dtoa@s^0,w,c
  2721   003000  B4D8               	btfsc	status,2,c
  2722   003002  EF05  F018         	goto	u2761
  2723   003006  EF07  F018         	goto	u2760
  2724   00300A                     u2761:
  2725   00300A  EF12  F018         	goto	l3409
  2726   00300E                     u2760:
  2727   00300E                     
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2729   00300E  063C               	decf	dtoa@i^0,f,c
  2730   003010  A0D8               	btfss	status,0,c
  2731   003012  063D               	decf	(dtoa@i+1)^0,f,c
  2732   003014                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2734   003014  0E92               	movlw	low _dbuf
  2735   003016  243C               	addwf	dtoa@i^0,w,c
  2736   003018  6ED9               	movwf	fsr2l,c
  2737   00301A  0E01               	movlw	high _dbuf
  2738   00301C  203D               	addwfc	(dtoa@i+1)^0,w,c
  2739   00301E  6EDA               	movwf	fsr2h,c
  2740   003020  C03E  FFDF         	movff	dtoa@s,indf2
  2741   003024                     l3409:
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2744   003024  C01C  F011         	movff	dtoa@fp,pad@fp
  2745   003028  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2746   00302C  0E92               	movlw	low _dbuf
  2747   00302E  243C               	addwf	dtoa@i^0,w,c
  2748   003030  6E13               	movwf	pad@buf^0,c
  2749   003032  0E01               	movlw	high _dbuf
  2750   003034  203D               	addwfc	(dtoa@i+1)^0,w,c
  2751   003036  6E14               	movwf	(pad@buf+1)^0,c
  2752   003038  C032  F015         	movff	dtoa@w,pad@p
  2753   00303C  C033  F016         	movff	dtoa@w+1,pad@p+1
  2754   003040  EC26  F020         	call	_pad	;wreg free
  2755   003044  0012               	return		;funcret
  2756   003046                     __end_of_dtoa:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _pad *****************
  2760 ;; Defined at:
  2761 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2764 ;;		 -> sprintf@f(11), 
  2765 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2766 ;;		 -> dbuf(32), 
  2767 ;;  p               2   20[COMRAM] int 
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  w               2   25[COMRAM] int 
  2770 ;;  i               2   23[COMRAM] int 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      void 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2780 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;Total ram usage:       11 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 4
  2787 ;; This function calls:
  2788 ;;		_fputc
  2789 ;;		_fputs
  2790 ;; This function is called by:
  2791 ;;		_dtoa
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text5
  2796   00404C                     __ptext5:
  2797                           	callstack 0
  2798   00404C                     _pad:
  2799                           	callstack 22
  2800   00404C                     
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2802   00404C  BE16               	btfsc	(pad@p+1)^0,7,c
  2803   00404E  EF2B  F020         	goto	u2521
  2804   004052  EF2D  F020         	goto	u2520
  2805   004056                     u2521:
  2806   004056  EF33  F020         	goto	l3273
  2807   00405A                     u2520:
  2808   00405A  C015  F01A         	movff	pad@p,pad@w
  2809   00405E  C016  F01B         	movff	pad@p+1,pad@w+1
  2810   004062  EF37  F020         	goto	l1361
  2811   004066                     l3273:
  2812   004066  0E00               	movlw	0
  2813   004068  6E1B               	movwf	(pad@w+1)^0,c
  2814   00406A  0E00               	movlw	0
  2815   00406C  6E1A               	movwf	pad@w^0,c
  2816   00406E                     l1361:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2819   00406E  0E00               	movlw	0
  2820   004070  6E19               	movwf	(pad@i+1)^0,c
  2821   004072  0E00               	movlw	0
  2822   004074  6E18               	movwf	pad@i^0,c
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2825   004076  EF49  F020         	goto	l3279
  2826   00407A                     l3275:
  2827                           
  2828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2829   00407A  0E00               	movlw	0
  2830   00407C  6E02               	movwf	(fputc@c+1)^0,c
  2831   00407E  0E20               	movlw	32
  2832   004080  6E01               	movwf	fputc@c^0,c
  2833   004082  C011  F003         	movff	pad@fp,fputc@fp
  2834   004086  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2835   00408A  EC6C  F01D         	call	_fputc	;wreg free
  2836   00408E                     
  2837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2838   00408E  4A18               	infsnz	pad@i^0,f,c
  2839   004090  2A19               	incf	(pad@i+1)^0,f,c
  2840   004092                     l3279:
  2841                           
  2842                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2843   004092  501A               	movf	pad@w^0,w,c
  2844   004094  5C18               	subwf	pad@i^0,w,c
  2845   004096  5019               	movf	(pad@i+1)^0,w,c
  2846   004098  0A80               	xorlw	128
  2847   00409A  6E17               	movwf	??_pad^0,c
  2848   00409C  501B               	movf	(pad@w+1)^0,w,c
  2849   00409E  0A80               	xorlw	128
  2850   0040A0  5817               	subwfb	??_pad^0,w,c
  2851   0040A2  A0D8               	btfss	status,0,c
  2852   0040A4  EF56  F020         	goto	u2531
  2853   0040A8  EF58  F020         	goto	u2530
  2854   0040AC                     u2531:
  2855   0040AC  EF3D  F020         	goto	l3275
  2856   0040B0                     u2530:
  2857   0040B0                     
  2858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2859   0040B0  C013  F00A         	movff	pad@buf,fputs@s
  2860   0040B4  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2861   0040B8  C011  F00C         	movff	pad@fp,fputs@fp
  2862   0040BC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2863   0040C0  EC23  F024         	call	_fputs	;wreg free
  2864   0040C4  0012               	return		;funcret
  2865   0040C6                     __end_of_pad:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _fputs *****************
  2869 ;; Defined at:
  2870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2873 ;;		 -> dbuf(32), 
  2874 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2875 ;;		 -> sprintf@f(11), 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  i               2   14[COMRAM] int 
  2878 ;;  c               1   13[COMRAM] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2    9[COMRAM] int 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2891 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2892 ;;Total ram usage:        7 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 3
  2895 ;; This function calls:
  2896 ;;		_fputc
  2897 ;; This function is called by:
  2898 ;;		_pad
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text6
  2903   004846                     __ptext6:
  2904                           	callstack 0
  2905   004846                     _fputs:
  2906                           	callstack 22
  2907   004846  0E00               	movlw	0
  2908   004848  6E10               	movwf	(fputs@i+1)^0,c
  2909   00484A  0E00               	movlw	0
  2910   00484C  6E0F               	movwf	fputs@i^0,c
  2911   00484E  EF34  F024         	goto	l3171
  2912   004852                     l3167:
  2913   004852  C00E  F001         	movff	fputs@c,fputc@c
  2914   004856  6A02               	clrf	(fputc@c+1)^0,c
  2915   004858  C00C  F003         	movff	fputs@fp,fputc@fp
  2916   00485C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2917   004860  EC6C  F01D         	call	_fputc	;wreg free
  2918   004864  4A0F               	infsnz	fputs@i^0,f,c
  2919   004866  2A10               	incf	(fputs@i+1)^0,f,c
  2920   004868                     l3171:
  2921   004868  500F               	movf	fputs@i^0,w,c
  2922   00486A  240A               	addwf	fputs@s^0,w,c
  2923   00486C  6ED9               	movwf	fsr2l,c
  2924   00486E  5010               	movf	(fputs@i+1)^0,w,c
  2925   004870  200B               	addwfc	(fputs@s+1)^0,w,c
  2926   004872  6EDA               	movwf	fsr2h,c
  2927   004874  50DF               	movf	indf2,w,c
  2928   004876  6E0E               	movwf	fputs@c^0,c
  2929   004878  500E               	movf	fputs@c^0,w,c
  2930   00487A  A4D8               	btfss	status,2,c
  2931   00487C  EF42  F024         	goto	u2361
  2932   004880  EF44  F024         	goto	u2360
  2933   004884                     u2361:
  2934   004884  EF29  F024         	goto	l3167
  2935   004888                     u2360:
  2936   004888  0012               	return		;funcret
  2937   00488A                     __end_of_fputs:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _fputc *****************
  2941 ;; Defined at:
  2942 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  c               2    0[COMRAM] int 
  2945 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2946 ;;		 -> sprintf@f(11), 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2    0[COMRAM] int 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2958 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;Total ram usage:        9 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 2
  2965 ;; This function calls:
  2966 ;;		_putch
  2967 ;; This function is called by:
  2968 ;;		_pad
  2969 ;;		_vfpfcnvrt
  2970 ;;		_fputs
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           	psect	text7
  2975   003AD8                     __ptext7:
  2976                           	callstack 0
  2977   003AD8                     _fputc:
  2978                           	callstack 25
  2979   003AD8  5003               	movf	fputc@fp^0,w,c
  2980   003ADA  1004               	iorwf	(fputc@fp+1)^0,w,c
  2981   003ADC  B4D8               	btfsc	status,2,c
  2982   003ADE  EF73  F01D         	goto	u2291
  2983   003AE2  EF75  F01D         	goto	u2290
  2984   003AE6                     u2291:
  2985   003AE6  EF7E  F01D         	goto	l3127
  2986   003AEA                     u2290:
  2987   003AEA  5003               	movf	fputc@fp^0,w,c
  2988   003AEC  1004               	iorwf	(fputc@fp+1)^0,w,c
  2989   003AEE  A4D8               	btfss	status,2,c
  2990   003AF0  EF7C  F01D         	goto	u2301
  2991   003AF4  EF7E  F01D         	goto	u2300
  2992   003AF8                     u2301:
  2993   003AF8  EF83  F01D         	goto	l3129
  2994   003AFC                     u2300:
  2995   003AFC                     l3127:
  2996   003AFC  5001               	movf	fputc@c^0,w,c
  2997   003AFE  ECBC  F025         	call	_putch
  2998   003B02  EFD0  F01D         	goto	l1416
  2999   003B06                     l3129:
  3000   003B06  EE20 F009          	lfsr	2,9
  3001   003B0A  5003               	movf	fputc@fp^0,w,c
  3002   003B0C  26D9               	addwf	fsr2l,f,c
  3003   003B0E  5004               	movf	(fputc@fp+1)^0,w,c
  3004   003B10  22DA               	addwfc	fsr2h,f,c
  3005   003B12  50DE               	movf	postinc2,w,c
  3006   003B14  10DE               	iorwf	postinc2,w,c
  3007   003B16  B4D8               	btfsc	status,2,c
  3008   003B18  EF90  F01D         	goto	u2311
  3009   003B1C  EF92  F01D         	goto	u2310
  3010   003B20                     u2311:
  3011   003B20  EFAD  F01D         	goto	l3133
  3012   003B24                     u2310:
  3013   003B24  EE20 F009          	lfsr	2,9
  3014   003B28  5003               	movf	fputc@fp^0,w,c
  3015   003B2A  26D9               	addwf	fsr2l,f,c
  3016   003B2C  5004               	movf	(fputc@fp+1)^0,w,c
  3017   003B2E  22DA               	addwfc	fsr2h,f,c
  3018   003B30  EE10 F003          	lfsr	1,3
  3019   003B34  5003               	movf	fputc@fp^0,w,c
  3020   003B36  26E1               	addwf	fsr1l,f,c
  3021   003B38  5004               	movf	(fputc@fp+1)^0,w,c
  3022   003B3A  22E2               	addwfc	fsr1h,f,c
  3023   003B3C  50DE               	movf	postinc2,w,c
  3024   003B3E  5CE6               	subwf	postinc1,w,c
  3025   003B40  50E6               	movf	postinc1,w,c
  3026   003B42  0A80               	xorlw	128
  3027   003B44  6E09               	movwf	(??_fputc+4)^0,c
  3028   003B46  50DE               	movf	postinc2,w,c
  3029   003B48  0A80               	xorlw	128
  3030   003B4A  5809               	subwfb	(??_fputc+4)^0,w,c
  3031   003B4C  B0D8               	btfsc	status,0,c
  3032   003B4E  EFAB  F01D         	goto	u2321
  3033   003B52  EFAD  F01D         	goto	u2320
  3034   003B56                     u2321:
  3035   003B56  EFD0  F01D         	goto	l1416
  3036   003B5A                     u2320:
  3037   003B5A                     l3133:
  3038   003B5A  EE20 F003          	lfsr	2,3
  3039   003B5E  5003               	movf	fputc@fp^0,w,c
  3040   003B60  26D9               	addwf	fsr2l,f,c
  3041   003B62  5004               	movf	(fputc@fp+1)^0,w,c
  3042   003B64  22DA               	addwfc	fsr2h,f,c
  3043   003B66  CFDE F005          	movff	postinc2,??_fputc
  3044   003B6A  CFDD F006          	movff	postdec2,??_fputc+1
  3045   003B6E  C003  FFD9         	movff	fputc@fp,fsr2l
  3046   003B72  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3047   003B76  CFDE F007          	movff	postinc2,??_fputc+2
  3048   003B7A  CFDD F008          	movff	postdec2,??_fputc+3
  3049   003B7E  5005               	movf	??_fputc^0,w,c
  3050   003B80  2407               	addwf	(??_fputc+2)^0,w,c
  3051   003B82  6ED9               	movwf	fsr2l,c
  3052   003B84  5006               	movf	(??_fputc+1)^0,w,c
  3053   003B86  2008               	addwfc	(??_fputc+3)^0,w,c
  3054   003B88  6EDA               	movwf	fsr2h,c
  3055   003B8A  C001  FFDF         	movff	fputc@c,indf2
  3056   003B8E  EE20 F003          	lfsr	2,3
  3057   003B92  5003               	movf	fputc@fp^0,w,c
  3058   003B94  26D9               	addwf	fsr2l,f,c
  3059   003B96  5004               	movf	(fputc@fp+1)^0,w,c
  3060   003B98  22DA               	addwfc	fsr2h,f,c
  3061   003B9A  2ADE               	incf	postinc2,f,c
  3062   003B9C  0E00               	movlw	0
  3063   003B9E  22DD               	addwfc	postdec2,f,c
  3064   003BA0                     l1416:
  3065   003BA0  0012               	return		;funcret
  3066   003BA2                     __end_of_fputc:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _putch *****************
  3070 ;; Defined at:
  3071 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  c               1    wreg     unsigned char 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  c               1    0[COMRAM] unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_fputc
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text8
  3100   004B78                     __ptext8:
  3101                           	callstack 0
  3102   004B78                     _putch:
  3103                           	callstack 25
  3104   004B78  0012               	return		;funcret
  3105   004B7A                     __end_of_putch:
  3106                           	callstack 0
  3107                           
  3108 ;; *************** function _abs *****************
  3109 ;; Defined at:
  3110 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  a               2   18[COMRAM] int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  2   18[COMRAM] int 
  3117 ;; Registers used:
  3118 ;;		wreg, status,2, status,0
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3127 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3128 ;;Total ram usage:        4 bytes
  3129 ;; Hardware stack levels used: 1
  3130 ;; Hardware stack levels required when called: 1
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_dtoa
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text9
  3139   0048CC                     __ptext9:
  3140                           	callstack 0
  3141   0048CC                     _abs:
  3142                           	callstack 25
  3143   0048CC  BE14               	btfsc	(abs@a+1)^0,7,c
  3144   0048CE  EF73  F024         	goto	u2540
  3145   0048D2  5014               	movf	(abs@a+1)^0,w,c
  3146   0048D4  E106               	bnz	u2541
  3147   0048D6  0413               	decf	abs@a^0,w,c
  3148   0048D8  B0D8               	btfsc	status,0,c
  3149   0048DA  EF71  F024         	goto	u2541
  3150   0048DE  EF73  F024         	goto	u2540
  3151   0048E2                     u2541:
  3152   0048E2  EF81  F024         	goto	l1401
  3153   0048E6                     u2540:
  3154   0048E6  C013  F015         	movff	abs@a,??_abs
  3155   0048EA  C014  F016         	movff	abs@a+1,??_abs+1
  3156   0048EE  1E15               	comf	??_abs^0,f,c
  3157   0048F0  1E16               	comf	(??_abs+1)^0,f,c
  3158   0048F2  4A15               	infsnz	??_abs^0,f,c
  3159   0048F4  2A16               	incf	(??_abs+1)^0,f,c
  3160   0048F6  C015  F013         	movff	??_abs,?_abs
  3161   0048FA  C016  F014         	movff	??_abs+1,?_abs+1
  3162   0048FE  EF85  F024         	goto	l1404
  3163   004902                     l1401:
  3164   004902  C013  F013         	movff	abs@a,?_abs
  3165   004906  C014  F014         	movff	abs@a+1,?_abs+1
  3166   00490A                     l1404:
  3167   00490A  0012               	return		;funcret
  3168   00490C                     __end_of_abs:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function ___aomod *****************
  3172 ;; Defined at:
  3173 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  dividend        8    0[COMRAM] long long 
  3176 ;;  divisor         8    8[COMRAM] long long 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  sign            1   17[COMRAM] unsigned char 
  3179 ;;  counter         1   16[COMRAM] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  8    0[COMRAM] long long 
  3182 ;; Registers used:
  3183 ;;		wreg, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3189 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3192 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;Total ram usage:       18 bytes
  3194 ;; Hardware stack levels used: 1
  3195 ;; Hardware stack levels required when called: 1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_dtoa
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text10
  3204   003720                     __ptext10:
  3205                           	callstack 0
  3206   003720                     ___aomod:
  3207                           	callstack 25
  3208   003720  0E00               	movlw	0
  3209   003722  6E12               	movwf	___aomod@sign^0,c
  3210   003724  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3211   003726  EF99  F01B         	goto	u2460
  3212   00372A  EF97  F01B         	goto	u2461
  3213   00372E                     u2461:
  3214   00372E  EFAB  F01B         	goto	l3241
  3215   003732                     u2460:
  3216   003732  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3217   003734  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3218   003736  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3219   003738  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3220   00373A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3221   00373C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3222   00373E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3223   003740  6C01               	negf	___aomod@dividend^0,c
  3224   003742  0E00               	movlw	0
  3225   003744  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3226   003746  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3227   003748  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3228   00374A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3229   00374C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3230   00374E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3231   003750  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3232   003752  0E01               	movlw	1
  3233   003754  6E12               	movwf	___aomod@sign^0,c
  3234   003756                     l3241:
  3235   003756  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3236   003758  EFB2  F01B         	goto	u2470
  3237   00375C  EFB0  F01B         	goto	u2471
  3238   003760                     u2471:
  3239   003760  EFC2  F01B         	goto	l3245
  3240   003764                     u2470:
  3241   003764  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3242   003766  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3243   003768  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3244   00376A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3245   00376C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3246   00376E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3247   003770  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3248   003772  6C09               	negf	___aomod@divisor^0,c
  3249   003774  0E00               	movlw	0
  3250   003776  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3251   003778  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3252   00377A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3253   00377C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3254   00377E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3255   003780  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3256   003782  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3257   003784                     l3245:
  3258   003784  5009               	movf	___aomod@divisor^0,w,c
  3259   003786  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3260   003788  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3261   00378A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3262   00378C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3263   00378E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3264   003790  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3265   003792  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3266   003794  B4D8               	btfsc	status,2,c
  3267   003796  EFCF  F01B         	goto	u2481
  3268   00379A  EFD1  F01B         	goto	u2480
  3269   00379E                     u2481:
  3270   00379E  EF19  F01C         	goto	l3261
  3271   0037A2                     u2480:
  3272   0037A2  0E01               	movlw	1
  3273   0037A4  6E11               	movwf	___aomod@counter^0,c
  3274   0037A6  EFDF  F01B         	goto	l3251
  3275   0037AA                     l3249:
  3276   0037AA  90D8               	bcf	status,0,c
  3277   0037AC  3609               	rlcf	___aomod@divisor^0,f,c
  3278   0037AE  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3279   0037B0  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3280   0037B2  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3281   0037B4  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3282   0037B6  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3283   0037B8  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3284   0037BA  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3285   0037BC  2A11               	incf	___aomod@counter^0,f,c
  3286   0037BE                     l3251:
  3287   0037BE  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3288   0037C0  EFE4  F01B         	goto	u2491
  3289   0037C4  EFE6  F01B         	goto	u2490
  3290   0037C8                     u2491:
  3291   0037C8  EFD5  F01B         	goto	l3249
  3292   0037CC                     u2490:
  3293   0037CC                     l3253:
  3294   0037CC  5009               	movf	___aomod@divisor^0,w,c
  3295   0037CE  5C01               	subwf	___aomod@dividend^0,w,c
  3296   0037D0  500A               	movf	(___aomod@divisor+1)^0,w,c
  3297   0037D2  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3298   0037D4  500B               	movf	(___aomod@divisor+2)^0,w,c
  3299   0037D6  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3300   0037D8  500C               	movf	(___aomod@divisor+3)^0,w,c
  3301   0037DA  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3302   0037DC  500D               	movf	(___aomod@divisor+4)^0,w,c
  3303   0037DE  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3304   0037E0  500E               	movf	(___aomod@divisor+5)^0,w,c
  3305   0037E2  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3306   0037E4  500F               	movf	(___aomod@divisor+6)^0,w,c
  3307   0037E6  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3308   0037E8  5010               	movf	(___aomod@divisor+7)^0,w,c
  3309   0037EA  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3310   0037EC  A0D8               	btfss	status,0,c
  3311   0037EE  EFFB  F01B         	goto	u2501
  3312   0037F2  EFFD  F01B         	goto	u2500
  3313   0037F6                     u2501:
  3314   0037F6  EF0D  F01C         	goto	l3257
  3315   0037FA                     u2500:
  3316   0037FA  5009               	movf	___aomod@divisor^0,w,c
  3317   0037FC  5E01               	subwf	___aomod@dividend^0,f,c
  3318   0037FE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3319   003800  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3320   003802  500B               	movf	(___aomod@divisor+2)^0,w,c
  3321   003804  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3322   003806  500C               	movf	(___aomod@divisor+3)^0,w,c
  3323   003808  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3324   00380A  500D               	movf	(___aomod@divisor+4)^0,w,c
  3325   00380C  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3326   00380E  500E               	movf	(___aomod@divisor+5)^0,w,c
  3327   003810  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3328   003812  500F               	movf	(___aomod@divisor+6)^0,w,c
  3329   003814  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3330   003816  5010               	movf	(___aomod@divisor+7)^0,w,c
  3331   003818  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3332   00381A                     l3257:
  3333   00381A  90D8               	bcf	status,0,c
  3334   00381C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3335   00381E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3336   003820  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3337   003822  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3338   003824  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3339   003826  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3340   003828  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3341   00382A  3209               	rrcf	___aomod@divisor^0,f,c
  3342   00382C  2E11               	decfsz	___aomod@counter^0,f,c
  3343   00382E  EFE6  F01B         	goto	l3253
  3344   003832                     l3261:
  3345   003832  5012               	movf	___aomod@sign^0,w,c
  3346   003834  B4D8               	btfsc	status,2,c
  3347   003836  EF1F  F01C         	goto	u2511
  3348   00383A  EF21  F01C         	goto	u2510
  3349   00383E                     u2511:
  3350   00383E  EF31  F01C         	goto	l3265
  3351   003842                     u2510:
  3352   003842  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3353   003844  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3354   003846  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3355   003848  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3356   00384A  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3357   00384C  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3358   00384E  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3359   003850  6C01               	negf	___aomod@dividend^0,c
  3360   003852  0E00               	movlw	0
  3361   003854  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3362   003856  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3363   003858  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3364   00385A  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3365   00385C  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3366   00385E  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3367   003860  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3368   003862                     l3265:
  3369   003862  C001  F001         	movff	___aomod@dividend,?___aomod
  3370   003866  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3371   00386A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3372   00386E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3373   003872  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3374   003876  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3375   00387A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3376   00387E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3377   003882  0012               	return		;funcret
  3378   003884                     __end_of___aomod:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function ___aodiv *****************
  3382 ;; Defined at:
  3383 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  dividend        8    0[COMRAM] long long 
  3386 ;;  divisor         8    8[COMRAM] long long 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  quotient        8   18[COMRAM] long long 
  3389 ;;  sign            1   17[COMRAM] unsigned char 
  3390 ;;  counter         1   16[COMRAM] unsigned char 
  3391 ;; Return value:  Size  Location     Type
  3392 ;;                  8    0[COMRAM] long long 
  3393 ;; Registers used:
  3394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3395 ;; Tracked objects:
  3396 ;;		On entry : 0/0
  3397 ;;		On exit  : 0/0
  3398 ;;		Unchanged: 0/0
  3399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3400 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3401 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3403 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;Total ram usage:       26 bytes
  3405 ;; Hardware stack levels used: 1
  3406 ;; Hardware stack levels required when called: 1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_dtoa
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           	psect	text11
  3415   00342C                     __ptext11:
  3416                           	callstack 0
  3417   00342C                     ___aodiv:
  3418                           	callstack 25
  3419   00342C  0E00               	movlw	0
  3420   00342E  6E12               	movwf	___aodiv@sign^0,c
  3421   003430  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3422   003432  EF1F  F01A         	goto	u2390
  3423   003436  EF1D  F01A         	goto	u2391
  3424   00343A                     u2391:
  3425   00343A  EF31  F01A         	goto	l3197
  3426   00343E                     u2390:
  3427   00343E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3428   003440  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3429   003442  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3430   003444  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3431   003446  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3432   003448  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3433   00344A  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3434   00344C  6C09               	negf	___aodiv@divisor^0,c
  3435   00344E  0E00               	movlw	0
  3436   003450  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3437   003452  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3438   003454  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3439   003456  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3440   003458  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3441   00345A  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3442   00345C  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3443   00345E  0E01               	movlw	1
  3444   003460  6E12               	movwf	___aodiv@sign^0,c
  3445   003462                     l3197:
  3446   003462  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3447   003464  EF38  F01A         	goto	u2400
  3448   003468  EF36  F01A         	goto	u2401
  3449   00346C                     u2401:
  3450   00346C  EF4A  F01A         	goto	l3203
  3451   003470                     u2400:
  3452   003470  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3453   003472  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3454   003474  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3455   003476  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3456   003478  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3457   00347A  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3458   00347C  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3459   00347E  6C01               	negf	___aodiv@dividend^0,c
  3460   003480  0E00               	movlw	0
  3461   003482  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3462   003484  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3463   003486  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3464   003488  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3465   00348A  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3466   00348C  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3467   00348E  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3468   003490  0E01               	movlw	1
  3469   003492  1A12               	xorwf	___aodiv@sign^0,f,c
  3470   003494                     l3203:
  3471   003494  EE20  F013         	lfsr	2,___aodiv@quotient
  3472   003498  0E07               	movlw	7
  3473   00349A                     u2411:
  3474   00349A  6ADE               	clrf	postinc2,c
  3475   00349C  06E8               	decf	wreg,f,c
  3476   00349E  E2FD               	bc	u2411
  3477   0034A0  5009               	movf	___aodiv@divisor^0,w,c
  3478   0034A2  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3479   0034A4  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3480   0034A6  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3481   0034A8  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3482   0034AA  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3483   0034AC  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3484   0034AE  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3485   0034B0  B4D8               	btfsc	status,2,c
  3486   0034B2  EF5D  F01A         	goto	u2421
  3487   0034B6  EF5F  F01A         	goto	u2420
  3488   0034BA                     u2421:
  3489   0034BA  EFB1  F01A         	goto	l3225
  3490   0034BE                     u2420:
  3491   0034BE  0E01               	movlw	1
  3492   0034C0  6E11               	movwf	___aodiv@counter^0,c
  3493   0034C2  EF6D  F01A         	goto	l3211
  3494   0034C6                     l3209:
  3495   0034C6  90D8               	bcf	status,0,c
  3496   0034C8  3609               	rlcf	___aodiv@divisor^0,f,c
  3497   0034CA  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3498   0034CC  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3499   0034CE  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3500   0034D0  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3501   0034D2  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3502   0034D4  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3503   0034D6  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3504   0034D8  2A11               	incf	___aodiv@counter^0,f,c
  3505   0034DA                     l3211:
  3506   0034DA  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3507   0034DC  EF72  F01A         	goto	u2431
  3508   0034E0  EF74  F01A         	goto	u2430
  3509   0034E4                     u2431:
  3510   0034E4  EF63  F01A         	goto	l3209
  3511   0034E8                     u2430:
  3512   0034E8                     l3213:
  3513   0034E8  90D8               	bcf	status,0,c
  3514   0034EA  3613               	rlcf	___aodiv@quotient^0,f,c
  3515   0034EC  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3516   0034EE  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3517   0034F0  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3518   0034F2  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3519   0034F4  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3520   0034F6  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3521   0034F8  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3522   0034FA  5009               	movf	___aodiv@divisor^0,w,c
  3523   0034FC  5C01               	subwf	___aodiv@dividend^0,w,c
  3524   0034FE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3525   003500  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3526   003502  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3527   003504  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3528   003506  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3529   003508  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3530   00350A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3531   00350C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3532   00350E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3533   003510  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3534   003512  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3535   003514  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3536   003516  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3537   003518  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3538   00351A  A0D8               	btfss	status,0,c
  3539   00351C  EF92  F01A         	goto	u2441
  3540   003520  EF94  F01A         	goto	u2440
  3541   003524                     u2441:
  3542   003524  EFA5  F01A         	goto	l3221
  3543   003528                     u2440:
  3544   003528  5009               	movf	___aodiv@divisor^0,w,c
  3545   00352A  5E01               	subwf	___aodiv@dividend^0,f,c
  3546   00352C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3547   00352E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3548   003530  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3549   003532  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3550   003534  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3551   003536  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3552   003538  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3553   00353A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3554   00353C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3555   00353E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3556   003540  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3557   003542  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3558   003544  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3559   003546  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3560   003548  8013               	bsf	___aodiv@quotient^0,0,c
  3561   00354A                     l3221:
  3562   00354A  90D8               	bcf	status,0,c
  3563   00354C  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3564   00354E  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3565   003550  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3566   003552  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3567   003554  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3568   003556  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3569   003558  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3570   00355A  3209               	rrcf	___aodiv@divisor^0,f,c
  3571   00355C  2E11               	decfsz	___aodiv@counter^0,f,c
  3572   00355E  EF74  F01A         	goto	l3213
  3573   003562                     l3225:
  3574   003562  5012               	movf	___aodiv@sign^0,w,c
  3575   003564  B4D8               	btfsc	status,2,c
  3576   003566  EFB7  F01A         	goto	u2451
  3577   00356A  EFB9  F01A         	goto	u2450
  3578   00356E                     u2451:
  3579   00356E  EFC9  F01A         	goto	l3229
  3580   003572                     u2450:
  3581   003572  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3582   003574  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3583   003576  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3584   003578  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3585   00357A  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3586   00357C  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3587   00357E  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3588   003580  6C13               	negf	___aodiv@quotient^0,c
  3589   003582  0E00               	movlw	0
  3590   003584  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3591   003586  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3592   003588  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3593   00358A  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3594   00358C  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3595   00358E  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3596   003590  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3597   003592                     l3229:
  3598   003592  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3599   003596  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3600   00359A  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3601   00359E  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3602   0035A2  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3603   0035A6  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3604   0035AA  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3605   0035AE  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3606   0035B2  0012               	return		;funcret
  3607   0035B4                     __end_of___aodiv:
  3608                           	callstack 0
  3609                           
  3610 ;; *************** function _sendStringSerial4 *****************
  3611 ;; Defined at:
  3612 ;;		line 33 in file "serial.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  string          2    1[COMRAM] PTR unsigned char 
  3615 ;;		 -> main@buf(100), 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;		None
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  1    wreg      void 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;Total ram usage:        2 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 2
  3634 ;; This function calls:
  3635 ;;		_sendCharSerial4
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text12
  3642   004A04                     __ptext12:
  3643                           	callstack 0
  3644   004A04                     _sendStringSerial4:
  3645                           	callstack 28
  3646   004A04                     
  3647                           ;serial.c: 34:     while (*string!=0){
  3648   004A04  EF0D  F025         	goto	l4385
  3649   004A08                     l4381:
  3650                           
  3651                           ;serial.c: 35:         sendCharSerial4(*string++);
  3652   004A08  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3653   004A0C  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3654   004A10  50DF               	movf	indf2,w,c
  3655   004A12  EC98  F025         	call	_sendCharSerial4
  3656   004A16  4A02               	infsnz	sendStringSerial4@string^0,f,c
  3657   004A18  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  3658   004A1A                     l4385:
  3659                           
  3660                           ;serial.c: 34:     while (*string!=0){
  3661   004A1A  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  3662   004A1E  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  3663   004A22  50DF               	movf	indf2,w,c
  3664   004A24  A4D8               	btfss	status,2,c
  3665   004A26  EF17  F025         	goto	u4161
  3666   004A2A  EF19  F025         	goto	u4160
  3667   004A2E                     u4161:
  3668   004A2E  EF04  F025         	goto	l4381
  3669   004A32                     u4160:
  3670   004A32  0012               	return		;funcret
  3671   004A34                     __end_of_sendStringSerial4:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _sendCharSerial4 *****************
  3675 ;; Defined at:
  3676 ;;		line 26 in file "serial.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  charToSend      1    wreg     unsigned char 
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;  charToSend      1    0[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;Total ram usage:        1 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_sendStringSerial4
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text13
  3705   004B30                     __ptext13:
  3706                           	callstack 0
  3707   004B30                     _sendCharSerial4:
  3708                           	callstack 28
  3709                           
  3710                           ;incstack = 0
  3711                           ;sendCharSerial4@charToSend stored from wreg
  3712   004B30  6E01               	movwf	sendCharSerial4@charToSend^0,c
  3713   004B32                     l207:
  3714   004B32  010E               	movlb	14	; () banked
  3715   004B34  A537               	btfss	55,2,b	;volatile
  3716   004B36  EF9F  F025         	goto	u3211
  3717   004B3A  EFA1  F025         	goto	u3210
  3718   004B3E                     u3211:
  3719   004B3E  EF99  F025         	goto	l207
  3720   004B42                     u3210:
  3721   004B42                     
  3722                           ; BSR set to: 14
  3723                           ;serial.c: 28:     TX4REG = charToSend;
  3724   004B42  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3725   004B46                     
  3726                           ; BSR set to: 14
  3727   004B46  0012               	return		;funcret
  3728   004B48                     __end_of_sendCharSerial4:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _readColours *****************
  3732 ;; Defined at:
  3733 ;;		line 105 in file "color.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;  vals            2   11[COMRAM] PTR struct RGB
  3736 ;;		 -> vals(8), 
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;Total ram usage:        2 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; Hardware stack levels required when called: 4
  3755 ;; This function calls:
  3756 ;;		_color_read_Blue
  3757 ;;		_color_read_Green
  3758 ;;		_color_read_Red
  3759 ;;		_color_read_lum
  3760 ;; This function is called by:
  3761 ;;		_main
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           	psect	text14
  3766   004210                     __ptext14:
  3767                           	callstack 0
  3768   004210                     _readColours:
  3769                           	callstack 26
  3770   004210                     
  3771                           ;color.c: 107:     vals ->R = color_read_Red();
  3772   004210  EC61  F023         	call	_color_read_Red	;wreg free
  3773   004214  C00C  FFD9         	movff	readColours@vals,fsr2l
  3774   004218  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  3775   00421C  C005  FFDE         	movff	?_color_read_Red,postinc2
  3776   004220  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  3777                           
  3778                           ;color.c: 108:     vals ->B = color_read_Blue();
  3779   004224  ECB1  F023         	call	_color_read_Blue	;wreg free
  3780   004228  EE20 F004          	lfsr	2,4
  3781   00422C  500C               	movf	readColours@vals^0,w,c
  3782   00422E  26D9               	addwf	fsr2l,f,c
  3783   004230  500D               	movf	(readColours@vals+1)^0,w,c
  3784   004232  22DA               	addwfc	fsr2h,f,c
  3785   004234  C005  FFDE         	movff	?_color_read_Blue,postinc2
  3786   004238  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  3787                           
  3788                           ;color.c: 109:     vals ->G = color_read_Green();
  3789   00423C  EC89  F023         	call	_color_read_Green	;wreg free
  3790   004240  EE20 F002          	lfsr	2,2
  3791   004244  500C               	movf	readColours@vals^0,w,c
  3792   004246  26D9               	addwf	fsr2l,f,c
  3793   004248  500D               	movf	(readColours@vals+1)^0,w,c
  3794   00424A  22DA               	addwfc	fsr2h,f,c
  3795   00424C  C005  FFDE         	movff	?_color_read_Green,postinc2
  3796   004250  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  3797                           
  3798                           ;color.c: 110:     vals ->L = color_read_lum();
  3799   004254  EC39  F023         	call	_color_read_lum	;wreg free
  3800   004258  EE20 F006          	lfsr	2,6
  3801   00425C  500C               	movf	readColours@vals^0,w,c
  3802   00425E  26D9               	addwf	fsr2l,f,c
  3803   004260  500D               	movf	(readColours@vals+1)^0,w,c
  3804   004262  22DA               	addwfc	fsr2h,f,c
  3805   004264  C005  FFDE         	movff	?_color_read_lum,postinc2
  3806   004268  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  3807   00426C  0012               	return		;funcret
  3808   00426E                     __end_of_readColours:
  3809                           	callstack 0
  3810                           
  3811 ;; *************** function _color_read_lum *****************
  3812 ;; Defined at:
  3813 ;;		line 49 in file "color.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;  tmp             2    9[COMRAM] unsigned int 
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  2    4[COMRAM] unsigned int 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2, status,0, cstack
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        7 bytes
  3832 ;; Hardware stack levels used: 1
  3833 ;; Hardware stack levels required when called: 3
  3834 ;; This function calls:
  3835 ;;		_I2C_2_Master_Read
  3836 ;;		_I2C_2_Master_RepStart
  3837 ;;		_I2C_2_Master_Start
  3838 ;;		_I2C_2_Master_Stop
  3839 ;;		_I2C_2_Master_Write
  3840 ;; This function is called by:
  3841 ;;		_readColours
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text15
  3846   004672                     __ptext15:
  3847                           	callstack 0
  3848   004672                     _color_read_lum:
  3849                           	callstack 26
  3850   004672                     
  3851                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3852   004672  ECB4  F025         	call	_I2C_2_Master_Start	;wreg free
  3853                           
  3854                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3855   004676  0E52               	movlw	82
  3856   004678  ECA4  F025         	call	_I2C_2_Master_Write
  3857                           
  3858                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  3859   00467C  0EB4               	movlw	180
  3860   00467E  ECA4  F025         	call	_I2C_2_Master_Write
  3861                           
  3862                           ;color.c: 55:  I2C_2_Master_RepStart();
  3863   004682  ECAA  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3864                           
  3865                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3866   004686  0E53               	movlw	83
  3867   004688  ECA4  F025         	call	_I2C_2_Master_Write
  3868                           
  3869                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3870   00468C  0E01               	movlw	1
  3871   00468E  EC45  F024         	call	_I2C_2_Master_Read
  3872   004692  6E07               	movwf	??_color_read_lum^0,c
  3873   004694  5007               	movf	??_color_read_lum^0,w,c
  3874   004696  6E0A               	movwf	color_read_lum@tmp^0,c
  3875   004698  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  3876                           
  3877                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3878   00469A  0E00               	movlw	0
  3879   00469C  EC45  F024         	call	_I2C_2_Master_Read
  3880   0046A0  6E07               	movwf	??_color_read_lum^0,c
  3881   0046A2  5007               	movf	??_color_read_lum^0,w,c
  3882   0046A4  6E09               	movwf	(??_color_read_lum+2)^0,c
  3883   0046A6  6A08               	clrf	(??_color_read_lum+1)^0,c
  3884   0046A8  500A               	movf	color_read_lum@tmp^0,w,c
  3885   0046AA  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  3886   0046AC  6E0A               	movwf	color_read_lum@tmp^0,c
  3887   0046AE  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  3888   0046B0  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  3889   0046B2  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  3890                           
  3891                           ;color.c: 59:  I2C_2_Master_Stop();
  3892   0046B4  ECAF  F025         	call	_I2C_2_Master_Stop	;wreg free
  3893   0046B8                     
  3894                           ;color.c: 60:  return tmp;
  3895   0046B8  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  3896   0046BC  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  3897   0046C0  0012               	return		;funcret
  3898   0046C2                     __end_of_color_read_lum:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _color_read_Red *****************
  3902 ;; Defined at:
  3903 ;;		line 63 in file "color.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;		None
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  tmp             2    9[COMRAM] unsigned int 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  2    4[COMRAM] unsigned int 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0, cstack
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3921 ;;Total ram usage:        7 bytes
  3922 ;; Hardware stack levels used: 1
  3923 ;; Hardware stack levels required when called: 3
  3924 ;; This function calls:
  3925 ;;		_I2C_2_Master_Read
  3926 ;;		_I2C_2_Master_RepStart
  3927 ;;		_I2C_2_Master_Start
  3928 ;;		_I2C_2_Master_Stop
  3929 ;;		_I2C_2_Master_Write
  3930 ;; This function is called by:
  3931 ;;		_readColours
  3932 ;; This function uses a non-reentrant model
  3933 ;;
  3934                           
  3935                           	psect	text16
  3936   0046C2                     __ptext16:
  3937                           	callstack 0
  3938   0046C2                     _color_read_Red:
  3939                           	callstack 26
  3940   0046C2                     
  3941                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3942   0046C2  ECB4  F025         	call	_I2C_2_Master_Start	;wreg free
  3943                           
  3944                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3945   0046C6  0E52               	movlw	82
  3946   0046C8  ECA4  F025         	call	_I2C_2_Master_Write
  3947                           
  3948                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  3949   0046CC  0EB6               	movlw	182
  3950   0046CE  ECA4  F025         	call	_I2C_2_Master_Write
  3951                           
  3952                           ;color.c: 69:  I2C_2_Master_RepStart();
  3953   0046D2  ECAA  F025         	call	_I2C_2_Master_RepStart	;wreg free
  3954                           
  3955                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3956   0046D6  0E53               	movlw	83
  3957   0046D8  ECA4  F025         	call	_I2C_2_Master_Write
  3958                           
  3959                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3960   0046DC  0E01               	movlw	1
  3961   0046DE  EC45  F024         	call	_I2C_2_Master_Read
  3962   0046E2  6E07               	movwf	??_color_read_Red^0,c
  3963   0046E4  5007               	movf	??_color_read_Red^0,w,c
  3964   0046E6  6E0A               	movwf	color_read_Red@tmp^0,c
  3965   0046E8  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  3966                           
  3967                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3968   0046EA  0E00               	movlw	0
  3969   0046EC  EC45  F024         	call	_I2C_2_Master_Read
  3970   0046F0  6E07               	movwf	??_color_read_Red^0,c
  3971   0046F2  5007               	movf	??_color_read_Red^0,w,c
  3972   0046F4  6E09               	movwf	(??_color_read_Red+2)^0,c
  3973   0046F6  6A08               	clrf	(??_color_read_Red+1)^0,c
  3974   0046F8  500A               	movf	color_read_Red@tmp^0,w,c
  3975   0046FA  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  3976   0046FC  6E0A               	movwf	color_read_Red@tmp^0,c
  3977   0046FE  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  3978   004700  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  3979   004702  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  3980                           
  3981                           ;color.c: 73:  I2C_2_Master_Stop();
  3982   004704  ECAF  F025         	call	_I2C_2_Master_Stop	;wreg free
  3983   004708                     
  3984                           ;color.c: 74:  return tmp;
  3985   004708  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  3986   00470C  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3987   004710  0012               	return		;funcret
  3988   004712                     __end_of_color_read_Red:
  3989                           	callstack 0
  3990                           
  3991 ;; *************** function _color_read_Green *****************
  3992 ;; Defined at:
  3993 ;;		line 76 in file "color.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;  tmp             2    9[COMRAM] unsigned int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  2    4[COMRAM] unsigned int 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;Total ram usage:        7 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 3
  4014 ;; This function calls:
  4015 ;;		_I2C_2_Master_Read
  4016 ;;		_I2C_2_Master_RepStart
  4017 ;;		_I2C_2_Master_Start
  4018 ;;		_I2C_2_Master_Stop
  4019 ;;		_I2C_2_Master_Write
  4020 ;; This function is called by:
  4021 ;;		_readColours
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text17
  4026   004712                     __ptext17:
  4027                           	callstack 0
  4028   004712                     _color_read_Green:
  4029                           	callstack 26
  4030   004712                     
  4031                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4032   004712  ECB4  F025         	call	_I2C_2_Master_Start	;wreg free
  4033                           
  4034                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4035   004716  0E52               	movlw	82
  4036   004718  ECA4  F025         	call	_I2C_2_Master_Write
  4037                           
  4038                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4039   00471C  0EB8               	movlw	184
  4040   00471E  ECA4  F025         	call	_I2C_2_Master_Write
  4041                           
  4042                           ;color.c: 82:  I2C_2_Master_RepStart();
  4043   004722  ECAA  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4044                           
  4045                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4046   004726  0E53               	movlw	83
  4047   004728  ECA4  F025         	call	_I2C_2_Master_Write
  4048                           
  4049                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4050   00472C  0E01               	movlw	1
  4051   00472E  EC45  F024         	call	_I2C_2_Master_Read
  4052   004732  6E07               	movwf	??_color_read_Green^0,c
  4053   004734  5007               	movf	??_color_read_Green^0,w,c
  4054   004736  6E0A               	movwf	color_read_Green@tmp^0,c
  4055   004738  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4056                           
  4057                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4058   00473A  0E00               	movlw	0
  4059   00473C  EC45  F024         	call	_I2C_2_Master_Read
  4060   004740  6E07               	movwf	??_color_read_Green^0,c
  4061   004742  5007               	movf	??_color_read_Green^0,w,c
  4062   004744  6E09               	movwf	(??_color_read_Green+2)^0,c
  4063   004746  6A08               	clrf	(??_color_read_Green+1)^0,c
  4064   004748  500A               	movf	color_read_Green@tmp^0,w,c
  4065   00474A  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4066   00474C  6E0A               	movwf	color_read_Green@tmp^0,c
  4067   00474E  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4068   004750  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4069   004752  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4070                           
  4071                           ;color.c: 86:  I2C_2_Master_Stop();
  4072   004754  ECAF  F025         	call	_I2C_2_Master_Stop	;wreg free
  4073   004758                     
  4074                           ;color.c: 87:  return tmp;
  4075   004758  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4076   00475C  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4077   004760  0012               	return		;funcret
  4078   004762                     __end_of_color_read_Green:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _color_read_Blue *****************
  4082 ;; Defined at:
  4083 ;;		line 90 in file "color.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  tmp             2    9[COMRAM] unsigned int 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2    4[COMRAM] unsigned int 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4101 ;;Total ram usage:        7 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 3
  4104 ;; This function calls:
  4105 ;;		_I2C_2_Master_Read
  4106 ;;		_I2C_2_Master_RepStart
  4107 ;;		_I2C_2_Master_Start
  4108 ;;		_I2C_2_Master_Stop
  4109 ;;		_I2C_2_Master_Write
  4110 ;; This function is called by:
  4111 ;;		_readColours
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text18
  4116   004762                     __ptext18:
  4117                           	callstack 0
  4118   004762                     _color_read_Blue:
  4119                           	callstack 26
  4120   004762                     
  4121                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4122   004762  ECB4  F025         	call	_I2C_2_Master_Start	;wreg free
  4123                           
  4124                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4125   004766  0E52               	movlw	82
  4126   004768  ECA4  F025         	call	_I2C_2_Master_Write
  4127                           
  4128                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4129   00476C  0EBA               	movlw	186
  4130   00476E  ECA4  F025         	call	_I2C_2_Master_Write
  4131                           
  4132                           ;color.c: 96:  I2C_2_Master_RepStart();
  4133   004772  ECAA  F025         	call	_I2C_2_Master_RepStart	;wreg free
  4134                           
  4135                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4136   004776  0E53               	movlw	83
  4137   004778  ECA4  F025         	call	_I2C_2_Master_Write
  4138                           
  4139                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4140   00477C  0E01               	movlw	1
  4141   00477E  EC45  F024         	call	_I2C_2_Master_Read
  4142   004782  6E07               	movwf	??_color_read_Blue^0,c
  4143   004784  5007               	movf	??_color_read_Blue^0,w,c
  4144   004786  6E0A               	movwf	color_read_Blue@tmp^0,c
  4145   004788  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4146                           
  4147                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4148   00478A  0E00               	movlw	0
  4149   00478C  EC45  F024         	call	_I2C_2_Master_Read
  4150   004790  6E07               	movwf	??_color_read_Blue^0,c
  4151   004792  5007               	movf	??_color_read_Blue^0,w,c
  4152   004794  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4153   004796  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4154   004798  500A               	movf	color_read_Blue@tmp^0,w,c
  4155   00479A  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4156   00479C  6E0A               	movwf	color_read_Blue@tmp^0,c
  4157   00479E  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4158   0047A0  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4159   0047A2  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4160                           
  4161                           ;color.c: 100:  I2C_2_Master_Stop();
  4162   0047A4  ECAF  F025         	call	_I2C_2_Master_Stop	;wreg free
  4163   0047A8                     
  4164                           ;color.c: 101:  return tmp;
  4165   0047A8  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4166   0047AC  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4167   0047B0  0012               	return		;funcret
  4168   0047B2                     __end_of_color_read_Blue:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _I2C_2_Master_RepStart *****************
  4172 ;; Defined at:
  4173 ;;		line 33 in file "i2c.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;		None
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;		None
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  1    wreg      void 
  4180 ;; Registers used:
  4181 ;;		wreg, status,2, status,0, cstack
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        0 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 2
  4194 ;; This function calls:
  4195 ;;		_I2C_2_Master_Idle
  4196 ;; This function is called by:
  4197 ;;		_color_read_lum
  4198 ;;		_color_read_Red
  4199 ;;		_color_read_Green
  4200 ;;		_color_read_Blue
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text19
  4205   004B54                     __ptext19:
  4206                           	callstack 0
  4207   004B54                     _I2C_2_Master_RepStart:
  4208                           	callstack 26
  4209   004B54                     
  4210                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4211   004B54  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  4212   004B58                     
  4213                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4214   004B58  010E               	movlb	14	; () banked
  4215   004B5A  83DA               	bsf	218,1,b	;volatile
  4216   004B5C                     
  4217                           ; BSR set to: 14
  4218   004B5C  0012               	return		;funcret
  4219   004B5E                     __end_of_I2C_2_Master_RepStart:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function _I2C_2_Master_Read *****************
  4223 ;; Defined at:
  4224 ;;		line 51 in file "i2c.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  ack             1    wreg     unsigned char 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  ack             1    2[COMRAM] unsigned char 
  4229 ;;  tmp             1    3[COMRAM] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      unsigned char 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, status,0, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;Total ram usage:        3 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 2
  4246 ;; This function calls:
  4247 ;;		_I2C_2_Master_Idle
  4248 ;; This function is called by:
  4249 ;;		_color_read_lum
  4250 ;;		_color_read_Red
  4251 ;;		_color_read_Green
  4252 ;;		_color_read_Blue
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text20
  4257   00488A                     __ptext20:
  4258                           	callstack 0
  4259   00488A                     _I2C_2_Master_Read:
  4260                           	callstack 26
  4261                           
  4262                           ; BSR set to: 14
  4263                           ;incstack = 0
  4264                           ;I2C_2_Master_Read@ack stored from wreg
  4265   00488A  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4266   00488C                     
  4267                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4268   00488C  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  4269   004890                     
  4270                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4271   004890  010E               	movlb	14	; () banked
  4272   004892  87DA               	bsf	218,3,b	;volatile
  4273                           
  4274                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4275   004894  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  4276   004898                     
  4277                           ;i2c.c: 57:   tmp = SSP2BUF;
  4278   004898  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4279                           
  4280                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4281   00489C  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  4282   0048A0                     
  4283                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4284   0048A0  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4285   0048A2  B4D8               	btfsc	status,2,c
  4286   0048A4  EF56  F024         	goto	u2771
  4287   0048A8  EF5A  F024         	goto	u2770
  4288   0048AC                     u2771:
  4289   0048AC  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4290   0048AE  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4291   0048B0  EF5B  F024         	goto	u2788
  4292   0048B4                     u2770:
  4293   0048B4  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4294   0048B6                     u2788:
  4295   0048B6  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4296   0048B8  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4297   0048BA  010E               	movlb	14	; () banked
  4298   0048BC  51DA               	movf	218,w,b	;volatile
  4299   0048BE  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4300   0048C0  0BDF               	andlw	-33
  4301   0048C2  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4302   0048C4  6FDA               	movwf	218,b	;volatile
  4303   0048C6                     
  4304                           ; BSR set to: 14
  4305                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4306   0048C6  89DA               	bsf	218,4,b	;volatile
  4307   0048C8                     
  4308                           ; BSR set to: 14
  4309                           ;i2c.c: 61:   return tmp;
  4310   0048C8  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4311   0048CA                     
  4312                           ; BSR set to: 14
  4313   0048CA  0012               	return		;funcret
  4314   0048CC                     __end_of_I2C_2_Master_Read:
  4315                           	callstack 0
  4316                           
  4317 ;; *************** function _initUSART4 *****************
  4318 ;; Defined at:
  4319 ;;		line 4 in file "serial.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		wreg, status,2
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text21
  4348   004B12                     __ptext21:
  4349                           	callstack 0
  4350   004B12                     _initUSART4:
  4351                           	callstack 29
  4352   004B12                     
  4353                           ;serial.c: 5:     RC0PPS = 0x12;
  4354   004B12  0E12               	movlw	18
  4355   004B14  010E               	movlb	14	; () banked
  4356   004B16  6F62               	movwf	98,b	;volatile
  4357                           
  4358                           ;serial.c: 6:     RX4PPS = 0x11;
  4359   004B18  0E11               	movlw	17
  4360   004B1A  6F15               	movwf	21,b	;volatile
  4361   004B1C                     
  4362                           ; BSR set to: 14
  4363                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4364   004B1C  97E9               	bcf	233,3,b	;volatile
  4365   004B1E                     
  4366                           ; BSR set to: 14
  4367                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4368   004B1E  95E8               	bcf	232,2,b	;volatile
  4369                           
  4370                           ;serial.c: 9:     SP4BRGL = 51;
  4371   004B20  0E33               	movlw	51
  4372   004B22  6FE5               	movwf	229,b	;volatile
  4373                           
  4374                           ;serial.c: 10:     SP4BRGH = 0;
  4375   004B24  0E00               	movlw	0
  4376   004B26  6FE6               	movwf	230,b	;volatile
  4377   004B28                     
  4378                           ; BSR set to: 14
  4379                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4380   004B28  89E7               	bsf	231,4,b	;volatile
  4381   004B2A                     
  4382                           ; BSR set to: 14
  4383                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4384   004B2A  8BE8               	bsf	232,5,b	;volatile
  4385   004B2C                     
  4386                           ; BSR set to: 14
  4387                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4388   004B2C  8FE7               	bsf	231,7,b	;volatile
  4389   004B2E                     
  4390                           ; BSR set to: 14
  4391   004B2E  0012               	return		;funcret
  4392   004B30                     __end_of_initUSART4:
  4393                           	callstack 0
  4394                           
  4395 ;; *************** function _initDCmotorsPWM *****************
  4396 ;; Defined at:
  4397 ;;		line 5 in file "dc_motor.c"
  4398 ;; Parameters:    Size  Location     Type
  4399 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      void 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4414 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4415 ;;Total ram usage:        2 bytes
  4416 ;; Hardware stack levels used: 1
  4417 ;; Hardware stack levels required when called: 1
  4418 ;; This function calls:
  4419 ;;		Nothing
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text22
  4426   003EC4                     __ptext22:
  4427                           	callstack 0
  4428   003EC4                     _initDCmotorsPWM:
  4429                           	callstack 29
  4430   003EC4                     
  4431                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4432   003EC4  0E05               	movlw	5
  4433   003EC6  010E               	movlb	14	; () banked
  4434   003EC8  6F74               	movwf	116,b	;volatile
  4435                           
  4436                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4437   003ECA  0E06               	movlw	6
  4438   003ECC  6F76               	movwf	118,b	;volatile
  4439                           
  4440                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4441   003ECE  0E07               	movlw	7
  4442   003ED0  6F69               	movwf	105,b	;volatile
  4443                           
  4444                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4445   003ED2  0E08               	movlw	8
  4446   003ED4  6F88               	movwf	136,b	;volatile
  4447   003ED6                     
  4448                           ; BSR set to: 14
  4449                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  4450   003ED6  9485               	bcf	133,2,c	;volatile
  4451   003ED8                     
  4452                           ; BSR set to: 14
  4453                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  4454   003ED8  9885               	bcf	133,4,c	;volatile
  4455   003EDA                     
  4456                           ; BSR set to: 14
  4457                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  4458   003EDA  9E83               	bcf	131,7,c	;volatile
  4459   003EDC                     
  4460                           ; BSR set to: 14
  4461                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  4462   003EDC  9C87               	bcf	135,6,c	;volatile
  4463                           
  4464                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  4465   003EDE  50BD               	movf	189,w,c	;volatile
  4466   003EE0  0B8F               	andlw	-113
  4467   003EE2  0930               	iorlw	48
  4468   003EE4  6EBD               	movwf	189,c	;volatile
  4469                           
  4470                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  4471   003EE6  0EE0               	movlw	-32
  4472   003EE8  16BE               	andwf	190,f,c	;volatile
  4473                           
  4474                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  4475   003EEA  50BF               	movf	191,w,c	;volatile
  4476   003EEC  0BF0               	andlw	-16
  4477   003EEE  0901               	iorlw	1
  4478   003EF0  6EBF               	movwf	191,c	;volatile
  4479   003EF2                     
  4480                           ; BSR set to: 14
  4481                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  4482   003EF2  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4483   003EF6                     
  4484                           ; BSR set to: 14
  4485                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  4486   003EF6  8EBD               	bsf	189,7,c	;volatile
  4487                           
  4488                           ;dc_motor.c: 33:     CCPR1H=0;
  4489   003EF8  0E00               	movlw	0
  4490   003EFA  6EAA               	movwf	170,c	;volatile
  4491                           
  4492                           ;dc_motor.c: 34:     CCPR2H=0;
  4493   003EFC  0E00               	movlw	0
  4494   003EFE  6EA6               	movwf	166,c	;volatile
  4495                           
  4496                           ;dc_motor.c: 35:     CCPR3H=0;
  4497   003F00  0E00               	movlw	0
  4498   003F02  010F               	movlb	15	; () banked
  4499   003F04  6F25               	movwf	37,b	;volatile
  4500                           
  4501                           ;dc_motor.c: 36:     CCPR4H=0;
  4502   003F06  0E00               	movlw	0
  4503   003F08  6F21               	movwf	33,b	;volatile
  4504                           
  4505                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  4506   003F0A  0EFC               	movlw	-4
  4507   003F0C  16AD               	andwf	173,f,c	;volatile
  4508                           
  4509                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  4510   003F0E  0EF3               	movlw	-13
  4511   003F10  16AD               	andwf	173,f,c	;volatile
  4512                           
  4513                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  4514   003F12  0ECF               	movlw	-49
  4515   003F14  16AD               	andwf	173,f,c	;volatile
  4516                           
  4517                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  4518   003F16  0E3F               	movlw	-193
  4519   003F18  16AD               	andwf	173,f,c	;volatile
  4520   003F1A                     
  4521                           ; BSR set to: 15
  4522                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  4523   003F1A  88AB               	bsf	171,4,c	;volatile
  4524                           
  4525                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  4526   003F1C  50AB               	movf	171,w,c	;volatile
  4527   003F1E  0BF0               	andlw	-16
  4528   003F20  090C               	iorlw	12
  4529   003F22  6EAB               	movwf	171,c	;volatile
  4530   003F24                     
  4531                           ; BSR set to: 15
  4532                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  4533   003F24  8EAB               	bsf	171,7,c	;volatile
  4534   003F26                     
  4535                           ; BSR set to: 15
  4536                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  4537   003F26  88A7               	bsf	167,4,c	;volatile
  4538                           
  4539                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  4540   003F28  50A7               	movf	167,w,c	;volatile
  4541   003F2A  0BF0               	andlw	-16
  4542   003F2C  090C               	iorlw	12
  4543   003F2E  6EA7               	movwf	167,c	;volatile
  4544   003F30                     
  4545                           ; BSR set to: 15
  4546                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  4547   003F30  8EA7               	bsf	167,7,c	;volatile
  4548   003F32                     
  4549                           ; BSR set to: 15
  4550                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  4551   003F32  8926               	bsf	38,4,b	;volatile
  4552                           
  4553                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  4554   003F34  5126               	movf	38,w,b	;volatile
  4555   003F36  0BF0               	andlw	-16
  4556   003F38  090C               	iorlw	12
  4557   003F3A  6F26               	movwf	38,b	;volatile
  4558   003F3C                     
  4559                           ; BSR set to: 15
  4560                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  4561   003F3C  8F26               	bsf	38,7,b	;volatile
  4562   003F3E                     
  4563                           ; BSR set to: 15
  4564                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  4565   003F3E  8922               	bsf	34,4,b	;volatile
  4566                           
  4567                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  4568   003F40  5122               	movf	34,w,b	;volatile
  4569   003F42  0BF0               	andlw	-16
  4570   003F44  090C               	iorlw	12
  4571   003F46  6F22               	movwf	34,b	;volatile
  4572   003F48                     
  4573                           ; BSR set to: 15
  4574                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  4575   003F48  8F22               	bsf	34,7,b	;volatile
  4576   003F4A                     
  4577                           ; BSR set to: 15
  4578   003F4A  0012               	return		;funcret
  4579   003F4C                     __end_of_initDCmotorsPWM:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function _go_Home *****************
  4583 ;; Defined at:
  4584 ;;		line 4 in file "Memory.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  4587 ;;		 -> WayBack(50), 
  4588 ;;  Time_forward    2   37[COMRAM] PTR int 
  4589 ;;		 -> Time_forward(100), 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  cur_time        2   42[COMRAM] int 
  4592 ;;  time_temp       2    0        unsigned int 
  4593 ;;  i               2   44[COMRAM] int 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4606 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4607 ;;Total ram usage:       11 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 6
  4610 ;; This function calls:
  4611 ;;		_BlueMove
  4612 ;;		_Forwardhalfblock
  4613 ;;		_GreenMove
  4614 ;;		_LightBlueMove
  4615 ;;		_OrangeMove
  4616 ;;		_RedMove
  4617 ;;		_ReversePink
  4618 ;;		_ReverseYellow
  4619 ;;		_fullSpeedAhead
  4620 ;; This function is called by:
  4621 ;;		_main
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           	psect	text23
  4626   003046                     __ptext23:
  4627                           	callstack 0
  4628   003046                     _go_Home:
  4629                           	callstack 24
  4630   003046                     
  4631                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  4632   003046  C0F2  F02D         	movff	_move_count,go_Home@i	;volatile
  4633   00304A  C0F3  F02E         	movff	_move_count+1,go_Home@i+1	;volatile
  4634   00304E                     l4471:
  4635   00304E  BE2E               	btfsc	(go_Home@i+1)^0,7,c
  4636   003050  EF2E  F018         	goto	u4200
  4637   003054  EF2C  F018         	goto	u4201
  4638   003058                     u4201:
  4639   003058  EF30  F018         	goto	l4475
  4640   00305C                     u4200:
  4641   00305C  EF3B  F019         	goto	l634
  4642   003060                     l4475:
  4643                           
  4644                           ;Memory.c: 7:         TMR0H=0;
  4645   003060  0E00               	movlw	0
  4646   003062  6ED4               	movwf	212,c	;volatile
  4647                           
  4648                           ;Memory.c: 8:         TMR0L=0;
  4649   003064  0E00               	movlw	0
  4650   003066  6ED3               	movwf	211,c	;volatile
  4651   003068  50D3               	movf	211,w,c	;volatile
  4652                           
  4653                           ;Memory.c: 10:         int cur_time=TMR0H<<8;
  4654   00306A  50D4               	movf	212,w,c	;volatile
  4655   00306C  6E2C               	movwf	(go_Home@cur_time+1)^0,c
  4656   00306E  6A2B               	clrf	go_Home@cur_time^0,c
  4657                           
  4658                           ;Memory.c: 11:         while (cur_time<Time_forward[i]){
  4659   003070  EF48  F018         	goto	l4485
  4660   003074                     l4479:
  4661                           
  4662                           ;Memory.c: 12:             fullSpeedAhead(&motorL,&motorR);
  4663   003074  0EF5               	movlw	low _motorL
  4664   003076  6E14               	movwf	fullSpeedAhead@mL^0,c
  4665   003078  0E00               	movlw	high _motorL
  4666   00307A  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  4667   00307C  0EBE               	movlw	low _motorR
  4668   00307E  6E16               	movwf	fullSpeedAhead@mR^0,c
  4669   003080  0E01               	movlw	high _motorR
  4670   003082  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  4671   003084  EC75  F01E         	call	_fullSpeedAhead	;wreg free
  4672   003088  50D3               	movf	211,w,c	;volatile
  4673   00308A                     
  4674                           ;Memory.c: 14:             cur_time=TMR0H<<8;
  4675   00308A  50D4               	movf	212,w,c	;volatile
  4676   00308C  6E2C               	movwf	(go_Home@cur_time+1)^0,c
  4677   00308E  6A2B               	clrf	go_Home@cur_time^0,c
  4678   003090                     l4485:
  4679                           
  4680                           ;Memory.c: 11:         while (cur_time<Time_forward[i]){
  4681   003090  90D8               	bcf	status,0,c
  4682   003092  342D               	rlcf	go_Home@i^0,w,c
  4683   003094  6ED9               	movwf	fsr2l,c
  4684   003096  342E               	rlcf	(go_Home@i+1)^0,w,c
  4685   003098  6EDA               	movwf	fsr2h,c
  4686   00309A  5026               	movf	go_Home@Time_forward^0,w,c
  4687   00309C  26D9               	addwf	fsr2l,f,c
  4688   00309E  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  4689   0030A0  22DA               	addwfc	fsr2h,f,c
  4690   0030A2  50DE               	movf	postinc2,w,c
  4691   0030A4  5C2B               	subwf	go_Home@cur_time^0,w,c
  4692   0030A6  502C               	movf	(go_Home@cur_time+1)^0,w,c
  4693   0030A8  0A80               	xorlw	128
  4694   0030AA  6E2A               	movwf	(??_go_Home+2)^0,c
  4695   0030AC  50DE               	movf	postinc2,w,c
  4696   0030AE  0A80               	xorlw	128
  4697   0030B0  582A               	subwfb	(??_go_Home+2)^0,w,c
  4698   0030B2  A0D8               	btfss	status,0,c
  4699   0030B4  EF5E  F018         	goto	u4211
  4700   0030B8  EF60  F018         	goto	u4210
  4701   0030BC                     u4211:
  4702   0030BC  EF3A  F018         	goto	l4479
  4703   0030C0                     u4210:
  4704   0030C0                     
  4705                           ;Memory.c: 17:         if (WayBack[i]==0){
  4706   0030C0  502D               	movf	go_Home@i^0,w,c
  4707   0030C2  2424               	addwf	go_Home@WayBack^0,w,c
  4708   0030C4  6ED9               	movwf	fsr2l,c
  4709   0030C6  502E               	movf	(go_Home@i+1)^0,w,c
  4710   0030C8  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4711   0030CA  6EDA               	movwf	fsr2h,c
  4712   0030CC  50DF               	movf	indf2,w,c
  4713   0030CE  A4D8               	btfss	status,2,c
  4714   0030D0  EF6C  F018         	goto	u4221
  4715   0030D4  EF6E  F018         	goto	u4220
  4716   0030D8                     u4221:
  4717   0030D8  EF7A  F018         	goto	l4491
  4718   0030DC                     u4220:
  4719   0030DC                     
  4720                           ;Memory.c: 18:             Forwardhalfblock(&motorL,&motorR);
  4721   0030DC  0EF5               	movlw	low _motorL
  4722   0030DE  6E1A               	movwf	Forwardhalfblock@mL^0,c
  4723   0030E0  0E00               	movlw	high _motorL
  4724   0030E2  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  4725   0030E4  0EBE               	movlw	low _motorR
  4726   0030E6  6E1C               	movwf	Forwardhalfblock@mR^0,c
  4727   0030E8  0E01               	movlw	high _motorR
  4728   0030EA  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  4729   0030EC  EC64  F021         	call	_Forwardhalfblock	;wreg free
  4730                           
  4731                           ;Memory.c: 19:         }
  4732   0030F0  EF36  F019         	goto	l4519
  4733   0030F4                     l4491:
  4734   0030F4  502D               	movf	go_Home@i^0,w,c
  4735   0030F6  2424               	addwf	go_Home@WayBack^0,w,c
  4736   0030F8  6ED9               	movwf	fsr2l,c
  4737   0030FA  502E               	movf	(go_Home@i+1)^0,w,c
  4738   0030FC  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4739   0030FE  6EDA               	movwf	fsr2h,c
  4740   003100  04DE               	decf	postinc2,w,c
  4741   003102  A4D8               	btfss	status,2,c
  4742   003104  EF86  F018         	goto	u4231
  4743   003108  EF88  F018         	goto	u4230
  4744   00310C                     u4231:
  4745   00310C  EF94  F018         	goto	l4495
  4746   003110                     u4230:
  4747   003110                     
  4748                           ;Memory.c: 21:             GreenMove(&motorL, &motorR);
  4749   003110  0EF5               	movlw	low _motorL
  4750   003112  6E20               	movwf	GreenMove@mL^0,c
  4751   003114  0E00               	movlw	high _motorL
  4752   003116  6E21               	movwf	(GreenMove@mL+1)^0,c
  4753   003118  0EBE               	movlw	low _motorR
  4754   00311A  6E22               	movwf	GreenMove@mR^0,c
  4755   00311C  0E01               	movlw	high _motorR
  4756   00311E  6E23               	movwf	(GreenMove@mR+1)^0,c
  4757   003120  ECE3  F024         	call	_GreenMove	;wreg free
  4758                           
  4759                           ;Memory.c: 22:         }
  4760   003124  EF36  F019         	goto	l4519
  4761   003128                     l4495:
  4762   003128  502D               	movf	go_Home@i^0,w,c
  4763   00312A  2424               	addwf	go_Home@WayBack^0,w,c
  4764   00312C  6ED9               	movwf	fsr2l,c
  4765   00312E  502E               	movf	(go_Home@i+1)^0,w,c
  4766   003130  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4767   003132  6EDA               	movwf	fsr2h,c
  4768   003134  0E02               	movlw	2
  4769   003136  18DE               	xorwf	postinc2,w,c
  4770   003138  A4D8               	btfss	status,2,c
  4771   00313A  EFA1  F018         	goto	u4241
  4772   00313E  EFA3  F018         	goto	u4240
  4773   003142                     u4241:
  4774   003142  EFAF  F018         	goto	l4499
  4775   003146                     u4240:
  4776   003146                     
  4777                           ;Memory.c: 24:             LightBlueMove(&motorL, &motorR);
  4778   003146  0EF5               	movlw	low _motorL
  4779   003148  6E20               	movwf	LightBlueMove@mL^0,c
  4780   00314A  0E00               	movlw	high _motorL
  4781   00314C  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  4782   00314E  0EBE               	movlw	low _motorR
  4783   003150  6E22               	movwf	LightBlueMove@mR^0,c
  4784   003152  0E01               	movlw	high _motorR
  4785   003154  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  4786   003156  EC95  F022         	call	_LightBlueMove	;wreg free
  4787                           
  4788                           ;Memory.c: 25:         }
  4789   00315A  EF36  F019         	goto	l4519
  4790   00315E                     l4499:
  4791   00315E  502D               	movf	go_Home@i^0,w,c
  4792   003160  2424               	addwf	go_Home@WayBack^0,w,c
  4793   003162  6ED9               	movwf	fsr2l,c
  4794   003164  502E               	movf	(go_Home@i+1)^0,w,c
  4795   003166  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4796   003168  6EDA               	movwf	fsr2h,c
  4797   00316A  0E03               	movlw	3
  4798   00316C  18DE               	xorwf	postinc2,w,c
  4799   00316E  A4D8               	btfss	status,2,c
  4800   003170  EFBC  F018         	goto	u4251
  4801   003174  EFBE  F018         	goto	u4250
  4802   003178                     u4251:
  4803   003178  EFCA  F018         	goto	l4503
  4804   00317C                     u4250:
  4805   00317C                     
  4806                           ;Memory.c: 27:             ReverseYellow(&motorL, &motorR);
  4807   00317C  0EF5               	movlw	low _motorL
  4808   00317E  6E20               	movwf	ReverseYellow@mL^0,c
  4809   003180  0E00               	movlw	high _motorL
  4810   003182  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  4811   003184  0EBE               	movlw	low _motorR
  4812   003186  6E22               	movwf	ReverseYellow@mR^0,c
  4813   003188  0E01               	movlw	high _motorR
  4814   00318A  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  4815   00318C  EC86  F024         	call	_ReverseYellow	;wreg free
  4816                           
  4817                           ;Memory.c: 28:         }
  4818   003190  EF36  F019         	goto	l4519
  4819   003194                     l4503:
  4820   003194  502D               	movf	go_Home@i^0,w,c
  4821   003196  2424               	addwf	go_Home@WayBack^0,w,c
  4822   003198  6ED9               	movwf	fsr2l,c
  4823   00319A  502E               	movf	(go_Home@i+1)^0,w,c
  4824   00319C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4825   00319E  6EDA               	movwf	fsr2h,c
  4826   0031A0  0E04               	movlw	4
  4827   0031A2  18DE               	xorwf	postinc2,w,c
  4828   0031A4  A4D8               	btfss	status,2,c
  4829   0031A6  EFD7  F018         	goto	u4261
  4830   0031AA  EFD9  F018         	goto	u4260
  4831   0031AE                     u4261:
  4832   0031AE  EFE5  F018         	goto	l4507
  4833   0031B2                     u4260:
  4834   0031B2                     
  4835                           ;Memory.c: 30:             BlueMove(&motorL, &motorR);
  4836   0031B2  0EF5               	movlw	low _motorL
  4837   0031B4  6E20               	movwf	BlueMove@mL^0,c
  4838   0031B6  0E00               	movlw	high _motorL
  4839   0031B8  6E21               	movwf	(BlueMove@mL+1)^0,c
  4840   0031BA  0EBE               	movlw	low _motorR
  4841   0031BC  6E22               	movwf	BlueMove@mR^0,c
  4842   0031BE  0E01               	movlw	high _motorR
  4843   0031C0  6E23               	movwf	(BlueMove@mR+1)^0,c
  4844   0031C2  ECD5  F020         	call	_BlueMove	;wreg free
  4845                           
  4846                           ;Memory.c: 31:         }
  4847   0031C6  EF36  F019         	goto	l4519
  4848   0031CA                     l4507:
  4849   0031CA  502D               	movf	go_Home@i^0,w,c
  4850   0031CC  2424               	addwf	go_Home@WayBack^0,w,c
  4851   0031CE  6ED9               	movwf	fsr2l,c
  4852   0031D0  502E               	movf	(go_Home@i+1)^0,w,c
  4853   0031D2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4854   0031D4  6EDA               	movwf	fsr2h,c
  4855   0031D6  0E05               	movlw	5
  4856   0031D8  18DE               	xorwf	postinc2,w,c
  4857   0031DA  A4D8               	btfss	status,2,c
  4858   0031DC  EFF2  F018         	goto	u4271
  4859   0031E0  EFF4  F018         	goto	u4270
  4860   0031E4                     u4271:
  4861   0031E4  EF00  F019         	goto	l4511
  4862   0031E8                     u4270:
  4863   0031E8                     
  4864                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  4865   0031E8  0EF5               	movlw	low _motorL
  4866   0031EA  6E20               	movwf	RedMove@mL^0,c
  4867   0031EC  0E00               	movlw	high _motorL
  4868   0031EE  6E21               	movwf	(RedMove@mL+1)^0,c
  4869   0031F0  0EBE               	movlw	low _motorR
  4870   0031F2  6E22               	movwf	RedMove@mR^0,c
  4871   0031F4  0E01               	movlw	high _motorR
  4872   0031F6  6E23               	movwf	(RedMove@mR+1)^0,c
  4873   0031F8  ECC4  F024         	call	_RedMove	;wreg free
  4874                           
  4875                           ;Memory.c: 34:         }
  4876   0031FC  EF36  F019         	goto	l4519
  4877   003200                     l4511:
  4878   003200  502D               	movf	go_Home@i^0,w,c
  4879   003202  2424               	addwf	go_Home@WayBack^0,w,c
  4880   003204  6ED9               	movwf	fsr2l,c
  4881   003206  502E               	movf	(go_Home@i+1)^0,w,c
  4882   003208  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4883   00320A  6EDA               	movwf	fsr2h,c
  4884   00320C  0E06               	movlw	6
  4885   00320E  18DE               	xorwf	postinc2,w,c
  4886   003210  A4D8               	btfss	status,2,c
  4887   003212  EF0D  F019         	goto	u4281
  4888   003216  EF0F  F019         	goto	u4280
  4889   00321A                     u4281:
  4890   00321A  EF1B  F019         	goto	l4515
  4891   00321E                     u4280:
  4892   00321E                     
  4893                           ;Memory.c: 36:             OrangeMove(&motorL, &motorR);
  4894   00321E  0EF5               	movlw	low _motorL
  4895   003220  6E20               	movwf	OrangeMove@mL^0,c
  4896   003222  0E00               	movlw	high _motorL
  4897   003224  6E21               	movwf	(OrangeMove@mL+1)^0,c
  4898   003226  0EBE               	movlw	low _motorR
  4899   003228  6E22               	movwf	OrangeMove@mR^0,c
  4900   00322A  0E01               	movlw	high _motorR
  4901   00322C  6E23               	movwf	(OrangeMove@mR+1)^0,c
  4902   00322E  EC6C  F022         	call	_OrangeMove	;wreg free
  4903                           
  4904                           ;Memory.c: 37:         }
  4905   003232  EF36  F019         	goto	l4519
  4906   003236                     l4515:
  4907   003236  502D               	movf	go_Home@i^0,w,c
  4908   003238  2424               	addwf	go_Home@WayBack^0,w,c
  4909   00323A  6ED9               	movwf	fsr2l,c
  4910   00323C  502E               	movf	(go_Home@i+1)^0,w,c
  4911   00323E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  4912   003240  6EDA               	movwf	fsr2h,c
  4913   003242  0E07               	movlw	7
  4914   003244  18DE               	xorwf	postinc2,w,c
  4915   003246  A4D8               	btfss	status,2,c
  4916   003248  EF28  F019         	goto	u4291
  4917   00324C  EF2A  F019         	goto	u4290
  4918   003250                     u4291:
  4919   003250  EF36  F019         	goto	l628
  4920   003254                     u4290:
  4921   003254                     
  4922                           ;Memory.c: 39:             ReversePink(&motorL, &motorR);
  4923   003254  0EF5               	movlw	low _motorL
  4924   003256  6E20               	movwf	ReversePink@mL^0,c
  4925   003258  0E00               	movlw	high _motorL
  4926   00325A  6E21               	movwf	(ReversePink@mL+1)^0,c
  4927   00325C  0EBE               	movlw	low _motorR
  4928   00325E  6E22               	movwf	ReversePink@mR^0,c
  4929   003260  0E01               	movlw	high _motorR
  4930   003262  6E23               	movwf	(ReversePink@mR+1)^0,c
  4931   003264  ECA5  F024         	call	_ReversePink	;wreg free
  4932   003268  EF36  F019         	goto	l4519
  4933   00326C                     l628:
  4934   00326C                     l4519:
  4935                           
  4936                           ;Memory.c: 43:   }
  4937   00326C  062D               	decf	go_Home@i^0,f,c
  4938   00326E  A0D8               	btfss	status,0,c
  4939   003270  062E               	decf	(go_Home@i+1)^0,f,c
  4940   003272  EF27  F018         	goto	l4471
  4941   003276                     l634:
  4942   003276  0012               	return		;funcret
  4943   003278                     __end_of_go_Home:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function _ReverseYellow *****************
  4947 ;; Defined at:
  4948 ;;		line 304 in file "dc_motor.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  4951 ;;		 -> motorL(9), 
  4952 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  4953 ;;		 -> motorR(9), 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;		None
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;Total ram usage:        4 bytes
  4970 ;; Hardware stack levels used: 1
  4971 ;; Hardware stack levels required when called: 5
  4972 ;; This function calls:
  4973 ;;		_ForwardOneBlock
  4974 ;;		_turnLeft45
  4975 ;; This function is called by:
  4976 ;;		_go_Home
  4977 ;; This function uses a non-reentrant model
  4978 ;;
  4979                           
  4980                           	psect	text24
  4981   00490C                     __ptext24:
  4982                           	callstack 0
  4983   00490C                     _ReverseYellow:
  4984                           	callstack 24
  4985   00490C                     
  4986                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  4987   00490C  0EF5               	movlw	low _motorL
  4988   00490E  6E1A               	movwf	turnLeft45@mL^0,c
  4989   004910  0E00               	movlw	high _motorL
  4990   004912  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  4991   004914  0EBE               	movlw	low _motorR
  4992   004916  6E1C               	movwf	turnLeft45@mR^0,c
  4993   004918  0E01               	movlw	high _motorR
  4994   00491A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  4995   00491C  EC17  F022         	call	_turnLeft45	;wreg free
  4996                           
  4997                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  4998   004920  0EF5               	movlw	low _motorL
  4999   004922  6E1A               	movwf	turnLeft45@mL^0,c
  5000   004924  0E00               	movlw	high _motorL
  5001   004926  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5002   004928  0EBE               	movlw	low _motorR
  5003   00492A  6E1C               	movwf	turnLeft45@mR^0,c
  5004   00492C  0E01               	movlw	high _motorR
  5005   00492E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5006   004930  EC17  F022         	call	_turnLeft45	;wreg free
  5007                           
  5008                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  5009   004934  0EF5               	movlw	low _motorL
  5010   004936  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5011   004938  0E00               	movlw	high _motorL
  5012   00493A  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5013   00493C  0EBE               	movlw	low _motorR
  5014   00493E  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5015   004940  0E01               	movlw	high _motorR
  5016   004942  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5017   004944  EC37  F021         	call	_ForwardOneBlock	;wreg free
  5018   004948  0012               	return		;funcret
  5019   00494A                     __end_of_ReverseYellow:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _ReversePink *****************
  5023 ;; Defined at:
  5024 ;;		line 309 in file "dc_motor.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5027 ;;		 -> motorL(9), 
  5028 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5029 ;;		 -> motorR(9), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:        4 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 5
  5048 ;; This function calls:
  5049 ;;		_ForwardOneBlock
  5050 ;;		_turnRight45
  5051 ;; This function is called by:
  5052 ;;		_go_Home
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text25
  5057   00494A                     __ptext25:
  5058                           	callstack 0
  5059   00494A                     _ReversePink:
  5060                           	callstack 24
  5061   00494A                     
  5062                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  5063   00494A  0EF5               	movlw	low _motorL
  5064   00494C  6E1A               	movwf	turnRight45@mL^0,c
  5065   00494E  0E00               	movlw	high _motorL
  5066   004950  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5067   004952  0EBE               	movlw	low _motorR
  5068   004954  6E1C               	movwf	turnRight45@mR^0,c
  5069   004956  0E01               	movlw	high _motorR
  5070   004958  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5071   00495A  ECEB  F021         	call	_turnRight45	;wreg free
  5072                           
  5073                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5074   00495E  0EF5               	movlw	low _motorL
  5075   004960  6E1A               	movwf	turnRight45@mL^0,c
  5076   004962  0E00               	movlw	high _motorL
  5077   004964  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5078   004966  0EBE               	movlw	low _motorR
  5079   004968  6E1C               	movwf	turnRight45@mR^0,c
  5080   00496A  0E01               	movlw	high _motorR
  5081   00496C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5082   00496E  ECEB  F021         	call	_turnRight45	;wreg free
  5083                           
  5084                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  5085   004972  0EF5               	movlw	low _motorL
  5086   004974  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5087   004976  0E00               	movlw	high _motorL
  5088   004978  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5089   00497A  0EBE               	movlw	low _motorR
  5090   00497C  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5091   00497E  0E01               	movlw	high _motorR
  5092   004980  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5093   004982  EC37  F021         	call	_ForwardOneBlock	;wreg free
  5094   004986  0012               	return		;funcret
  5095   004988                     __end_of_ReversePink:
  5096                           	callstack 0
  5097                           
  5098 ;; *************** function _ForwardOneBlock *****************
  5099 ;; Defined at:
  5100 ;;		line 208 in file "dc_motor.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5103 ;;		 -> motorL(9), 
  5104 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5105 ;;		 -> motorR(9), 
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;Total ram usage:        6 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; Hardware stack levels required when called: 4
  5124 ;; This function calls:
  5125 ;;		_fullSpeedAhead
  5126 ;;		_stop
  5127 ;; This function is called by:
  5128 ;;		_ReverseYellow
  5129 ;;		_ReversePink
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text26
  5134   00426E                     __ptext26:
  5135                           	callstack 0
  5136   00426E                     _ForwardOneBlock:
  5137                           	callstack 24
  5138   00426E                     
  5139                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  5140   00426E  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5141   004272  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5142   004276  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5143   00427A  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5144   00427E  EC75  F01E         	call	_fullSpeedAhead	;wreg free
  5145   004282                     
  5146                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5147   004282  0E52               	movlw	82
  5148   004284  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5149   004286  0E2B               	movlw	43
  5150   004288  6E1E               	movwf	??_ForwardOneBlock^0,c
  5151   00428A  0E00               	movlw	0
  5152   00428C                     u4597:
  5153   00428C  2EE8               	decfsz	wreg,f,c
  5154   00428E  D7FE               	bra	u4597
  5155   004290  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5156   004292  D7FC               	bra	u4597
  5157   004294  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5158   004296  D7FA               	bra	u4597
  5159   004298  D000               	nop2	
  5160   00429A                     
  5161                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  5162   00429A  0EF5               	movlw	low _motorL
  5163   00429C  6E14               	movwf	stop@mL^0,c
  5164   00429E  0E00               	movlw	high _motorL
  5165   0042A0  6E15               	movwf	(stop@mL+1)^0,c
  5166   0042A2  0EBE               	movlw	low _motorR
  5167   0042A4  6E16               	movwf	stop@mR^0,c
  5168   0042A6  0E01               	movlw	high _motorR
  5169   0042A8  6E17               	movwf	(stop@mR+1)^0,c
  5170   0042AA  ECE7  F01F         	call	_stop	;wreg free
  5171                           
  5172                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5173   0042AE  0E52               	movlw	82
  5174   0042B0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5175   0042B2  0E2B               	movlw	43
  5176   0042B4  6E1E               	movwf	??_ForwardOneBlock^0,c
  5177   0042B6  0E00               	movlw	0
  5178   0042B8                     u4607:
  5179   0042B8  2EE8               	decfsz	wreg,f,c
  5180   0042BA  D7FE               	bra	u4607
  5181   0042BC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5182   0042BE  D7FC               	bra	u4607
  5183   0042C0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5184   0042C2  D7FA               	bra	u4607
  5185   0042C4  D000               	nop2	
  5186   0042C6  0012               	return		;funcret
  5187   0042C8                     __end_of_ForwardOneBlock:
  5188                           	callstack 0
  5189                           
  5190 ;; *************** function _RedMove *****************
  5191 ;; Defined at:
  5192 ;;		line 232 in file "dc_motor.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5195 ;;		 -> motorL(9), 
  5196 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5197 ;;		 -> motorR(9), 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5209 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;Total ram usage:        4 bytes
  5214 ;; Hardware stack levels used: 1
  5215 ;; Hardware stack levels required when called: 5
  5216 ;; This function calls:
  5217 ;;		_reverseDetect
  5218 ;;		_turnRight45
  5219 ;; This function is called by:
  5220 ;;		_main
  5221 ;;		_go_Home
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           	psect	text27
  5226   004988                     __ptext27:
  5227                           	callstack 0
  5228   004988                     _RedMove:
  5229                           	callstack 24
  5230   004988                     
  5231                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  5232   004988  0EF5               	movlw	low _motorL
  5233   00498A  6E1A               	movwf	reverseDetect@mL^0,c
  5234   00498C  0E00               	movlw	high _motorL
  5235   00498E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5236   004990  0EBE               	movlw	low _motorR
  5237   004992  6E1C               	movwf	reverseDetect@mR^0,c
  5238   004994  0E01               	movlw	high _motorR
  5239   004996  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5240   004998  ECBE  F021         	call	_reverseDetect	;wreg free
  5241                           
  5242                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  5243   00499C  0EF5               	movlw	low _motorL
  5244   00499E  6E1A               	movwf	turnRight45@mL^0,c
  5245   0049A0  0E00               	movlw	high _motorL
  5246   0049A2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5247   0049A4  0EBE               	movlw	low _motorR
  5248   0049A6  6E1C               	movwf	turnRight45@mR^0,c
  5249   0049A8  0E01               	movlw	high _motorR
  5250   0049AA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5251   0049AC  ECEB  F021         	call	_turnRight45	;wreg free
  5252                           
  5253                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  5254   0049B0  0EF5               	movlw	low _motorL
  5255   0049B2  6E1A               	movwf	turnRight45@mL^0,c
  5256   0049B4  0E00               	movlw	high _motorL
  5257   0049B6  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5258   0049B8  0EBE               	movlw	low _motorR
  5259   0049BA  6E1C               	movwf	turnRight45@mR^0,c
  5260   0049BC  0E01               	movlw	high _motorR
  5261   0049BE  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5262   0049C0  ECEB  F021         	call	_turnRight45	;wreg free
  5263   0049C4  0012               	return		;funcret
  5264   0049C6                     __end_of_RedMove:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _OrangeMove *****************
  5268 ;; Defined at:
  5269 ;;		line 278 in file "dc_motor.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5272 ;;		 -> motorL(9), 
  5273 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5274 ;;		 -> motorR(9), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;Total ram usage:        4 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 5
  5293 ;; This function calls:
  5294 ;;		_reverseDetect
  5295 ;;		_turnRight45
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;;		_go_Home
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text28
  5303   0044D8                     __ptext28:
  5304                           	callstack 0
  5305   0044D8                     _OrangeMove:
  5306                           	callstack 24
  5307   0044D8                     
  5308                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  5309   0044D8  0EF5               	movlw	low _motorL
  5310   0044DA  6E1A               	movwf	reverseDetect@mL^0,c
  5311   0044DC  0E00               	movlw	high _motorL
  5312   0044DE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5313   0044E0  0EBE               	movlw	low _motorR
  5314   0044E2  6E1C               	movwf	reverseDetect@mR^0,c
  5315   0044E4  0E01               	movlw	high _motorR
  5316   0044E6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5317   0044E8  ECBE  F021         	call	_reverseDetect	;wreg free
  5318                           
  5319                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  5320   0044EC  0EF5               	movlw	low _motorL
  5321   0044EE  6E1A               	movwf	turnRight45@mL^0,c
  5322   0044F0  0E00               	movlw	high _motorL
  5323   0044F2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5324   0044F4  0EBE               	movlw	low _motorR
  5325   0044F6  6E1C               	movwf	turnRight45@mR^0,c
  5326   0044F8  0E01               	movlw	high _motorR
  5327   0044FA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5328   0044FC  ECEB  F021         	call	_turnRight45	;wreg free
  5329                           
  5330                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  5331   004500  0EF5               	movlw	low _motorL
  5332   004502  6E1A               	movwf	turnRight45@mL^0,c
  5333   004504  0E00               	movlw	high _motorL
  5334   004506  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5335   004508  0EBE               	movlw	low _motorR
  5336   00450A  6E1C               	movwf	turnRight45@mR^0,c
  5337   00450C  0E01               	movlw	high _motorR
  5338   00450E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5339   004510  ECEB  F021         	call	_turnRight45	;wreg free
  5340                           
  5341                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  5342   004514  0EF5               	movlw	low _motorL
  5343   004516  6E1A               	movwf	turnRight45@mL^0,c
  5344   004518  0E00               	movlw	high _motorL
  5345   00451A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5346   00451C  0EBE               	movlw	low _motorR
  5347   00451E  6E1C               	movwf	turnRight45@mR^0,c
  5348   004520  0E01               	movlw	high _motorR
  5349   004522  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5350   004524  ECEB  F021         	call	_turnRight45	;wreg free
  5351   004528  0012               	return		;funcret
  5352   00452A                     __end_of_OrangeMove:
  5353                           	callstack 0
  5354                           
  5355 ;; *************** function _LightBlueMove *****************
  5356 ;; Defined at:
  5357 ;;		line 287 in file "dc_motor.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5360 ;;		 -> motorL(9), 
  5361 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5362 ;;		 -> motorR(9), 
  5363 ;; Auto vars:     Size  Location     Type
  5364 ;;		None
  5365 ;; Return value:  Size  Location     Type
  5366 ;;                  1    wreg      void 
  5367 ;; Registers used:
  5368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5369 ;; Tracked objects:
  5370 ;;		On entry : 0/0
  5371 ;;		On exit  : 0/0
  5372 ;;		Unchanged: 0/0
  5373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;Total ram usage:        4 bytes
  5379 ;; Hardware stack levels used: 1
  5380 ;; Hardware stack levels required when called: 5
  5381 ;; This function calls:
  5382 ;;		_reverseDetect
  5383 ;;		_turnLeft45
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;;		_go_Home
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text29
  5391   00452A                     __ptext29:
  5392                           	callstack 0
  5393   00452A                     _LightBlueMove:
  5394                           	callstack 24
  5395   00452A                     
  5396                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  5397   00452A  0EF5               	movlw	low _motorL
  5398   00452C  6E1A               	movwf	reverseDetect@mL^0,c
  5399   00452E  0E00               	movlw	high _motorL
  5400   004530  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5401   004532  0EBE               	movlw	low _motorR
  5402   004534  6E1C               	movwf	reverseDetect@mR^0,c
  5403   004536  0E01               	movlw	high _motorR
  5404   004538  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5405   00453A  ECBE  F021         	call	_reverseDetect	;wreg free
  5406                           
  5407                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  5408   00453E  0EF5               	movlw	low _motorL
  5409   004540  6E1A               	movwf	turnLeft45@mL^0,c
  5410   004542  0E00               	movlw	high _motorL
  5411   004544  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5412   004546  0EBE               	movlw	low _motorR
  5413   004548  6E1C               	movwf	turnLeft45@mR^0,c
  5414   00454A  0E01               	movlw	high _motorR
  5415   00454C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5416   00454E  EC17  F022         	call	_turnLeft45	;wreg free
  5417                           
  5418                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  5419   004552  0EF5               	movlw	low _motorL
  5420   004554  6E1A               	movwf	turnLeft45@mL^0,c
  5421   004556  0E00               	movlw	high _motorL
  5422   004558  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5423   00455A  0EBE               	movlw	low _motorR
  5424   00455C  6E1C               	movwf	turnLeft45@mR^0,c
  5425   00455E  0E01               	movlw	high _motorR
  5426   004560  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5427   004562  EC17  F022         	call	_turnLeft45	;wreg free
  5428                           
  5429                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  5430   004566  0EF5               	movlw	low _motorL
  5431   004568  6E1A               	movwf	turnLeft45@mL^0,c
  5432   00456A  0E00               	movlw	high _motorL
  5433   00456C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5434   00456E  0EBE               	movlw	low _motorR
  5435   004570  6E1C               	movwf	turnLeft45@mR^0,c
  5436   004572  0E01               	movlw	high _motorR
  5437   004574  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5438   004576  EC17  F022         	call	_turnLeft45	;wreg free
  5439   00457A  0012               	return		;funcret
  5440   00457C                     __end_of_LightBlueMove:
  5441                           	callstack 0
  5442                           
  5443 ;; *************** function _GreenMove *****************
  5444 ;; Defined at:
  5445 ;;		line 240 in file "dc_motor.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5448 ;;		 -> motorL(9), 
  5449 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5450 ;;		 -> motorR(9), 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;		None
  5453 ;; Return value:  Size  Location     Type
  5454 ;;                  1    wreg      void 
  5455 ;; Registers used:
  5456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;Total ram usage:        4 bytes
  5467 ;; Hardware stack levels used: 1
  5468 ;; Hardware stack levels required when called: 5
  5469 ;; This function calls:
  5470 ;;		_reverseDetect
  5471 ;;		_turnLeft45
  5472 ;; This function is called by:
  5473 ;;		_main
  5474 ;;		_go_Home
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text30
  5479   0049C6                     __ptext30:
  5480                           	callstack 0
  5481   0049C6                     _GreenMove:
  5482                           	callstack 24
  5483   0049C6                     
  5484                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  5485   0049C6  0EF5               	movlw	low _motorL
  5486   0049C8  6E1A               	movwf	reverseDetect@mL^0,c
  5487   0049CA  0E00               	movlw	high _motorL
  5488   0049CC  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5489   0049CE  0EBE               	movlw	low _motorR
  5490   0049D0  6E1C               	movwf	reverseDetect@mR^0,c
  5491   0049D2  0E01               	movlw	high _motorR
  5492   0049D4  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5493   0049D6  ECBE  F021         	call	_reverseDetect	;wreg free
  5494                           
  5495                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  5496   0049DA  0EF5               	movlw	low _motorL
  5497   0049DC  6E1A               	movwf	turnLeft45@mL^0,c
  5498   0049DE  0E00               	movlw	high _motorL
  5499   0049E0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5500   0049E2  0EBE               	movlw	low _motorR
  5501   0049E4  6E1C               	movwf	turnLeft45@mR^0,c
  5502   0049E6  0E01               	movlw	high _motorR
  5503   0049E8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5504   0049EA  EC17  F022         	call	_turnLeft45	;wreg free
  5505                           
  5506                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  5507   0049EE  0EF5               	movlw	low _motorL
  5508   0049F0  6E1A               	movwf	turnLeft45@mL^0,c
  5509   0049F2  0E00               	movlw	high _motorL
  5510   0049F4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5511   0049F6  0EBE               	movlw	low _motorR
  5512   0049F8  6E1C               	movwf	turnLeft45@mR^0,c
  5513   0049FA  0E01               	movlw	high _motorR
  5514   0049FC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5515   0049FE  EC17  F022         	call	_turnLeft45	;wreg free
  5516   004A02  0012               	return		;funcret
  5517   004A04                     __end_of_GreenMove:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function _Forwardhalfblock *****************
  5521 ;; Defined at:
  5522 ;;		line 215 in file "dc_motor.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5525 ;;		 -> motorL(9), 
  5526 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5527 ;;		 -> motorR(9), 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;		None
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  1    wreg      void 
  5532 ;; Registers used:
  5533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5539 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5541 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;Total ram usage:        6 bytes
  5544 ;; Hardware stack levels used: 1
  5545 ;; Hardware stack levels required when called: 4
  5546 ;; This function calls:
  5547 ;;		_fullSpeedAhead
  5548 ;;		_stop
  5549 ;; This function is called by:
  5550 ;;		_main
  5551 ;;		_go_Home
  5552 ;; This function uses a non-reentrant model
  5553 ;;
  5554                           
  5555                           	psect	text31
  5556   0042C8                     __ptext31:
  5557                           	callstack 0
  5558   0042C8                     _Forwardhalfblock:
  5559                           	callstack 25
  5560   0042C8                     
  5561                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  5562   0042C8  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  5563   0042CC  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  5564   0042D0  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  5565   0042D4  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  5566   0042D8  EC75  F01E         	call	_fullSpeedAhead	;wreg free
  5567   0042DC                     
  5568                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5569   0042DC  0E29               	movlw	41
  5570   0042DE  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5571   0042E0  0E96               	movlw	150
  5572   0042E2  6E1E               	movwf	??_Forwardhalfblock^0,c
  5573   0042E4  0E7F               	movlw	127
  5574   0042E6                     u4617:
  5575   0042E6  2EE8               	decfsz	wreg,f,c
  5576   0042E8  D7FE               	bra	u4617
  5577   0042EA  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5578   0042EC  D7FC               	bra	u4617
  5579   0042EE  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5580   0042F0  D7FA               	bra	u4617
  5581   0042F2  F000               	nop	
  5582   0042F4                     
  5583                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  5584   0042F4  0EF5               	movlw	low _motorL
  5585   0042F6  6E14               	movwf	stop@mL^0,c
  5586   0042F8  0E00               	movlw	high _motorL
  5587   0042FA  6E15               	movwf	(stop@mL+1)^0,c
  5588   0042FC  0EBE               	movlw	low _motorR
  5589   0042FE  6E16               	movwf	stop@mR^0,c
  5590   004300  0E01               	movlw	high _motorR
  5591   004302  6E17               	movwf	(stop@mR+1)^0,c
  5592   004304  ECE7  F01F         	call	_stop	;wreg free
  5593                           
  5594                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5595   004308  0E52               	movlw	82
  5596   00430A  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  5597   00430C  0E2B               	movlw	43
  5598   00430E  6E1E               	movwf	??_Forwardhalfblock^0,c
  5599   004310  0E00               	movlw	0
  5600   004312                     u4627:
  5601   004312  2EE8               	decfsz	wreg,f,c
  5602   004314  D7FE               	bra	u4627
  5603   004316  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  5604   004318  D7FC               	bra	u4627
  5605   00431A  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  5606   00431C  D7FA               	bra	u4627
  5607   00431E  D000               	nop2	
  5608   004320  0012               	return		;funcret
  5609   004322                     __end_of_Forwardhalfblock:
  5610                           	callstack 0
  5611                           
  5612 ;; *************** function _BlueMove *****************
  5613 ;; Defined at:
  5614 ;;		line 248 in file "dc_motor.c"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5617 ;;		 -> motorL(9), 
  5618 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5619 ;;		 -> motorR(9), 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  1    wreg      void 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5635 ;;Total ram usage:        4 bytes
  5636 ;; Hardware stack levels used: 1
  5637 ;; Hardware stack levels required when called: 5
  5638 ;; This function calls:
  5639 ;;		_reverseDetect
  5640 ;;		_turnRight45
  5641 ;; This function is called by:
  5642 ;;		_main
  5643 ;;		_go_Home
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text32
  5648   0041AA                     __ptext32:
  5649                           	callstack 0
  5650   0041AA                     _BlueMove:
  5651                           	callstack 24
  5652   0041AA                     
  5653                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  5654   0041AA  0EF5               	movlw	low _motorL
  5655   0041AC  6E1A               	movwf	reverseDetect@mL^0,c
  5656   0041AE  0E00               	movlw	high _motorL
  5657   0041B0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5658   0041B2  0EBE               	movlw	low _motorR
  5659   0041B4  6E1C               	movwf	reverseDetect@mR^0,c
  5660   0041B6  0E01               	movlw	high _motorR
  5661   0041B8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5662   0041BA  ECBE  F021         	call	_reverseDetect	;wreg free
  5663                           
  5664                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  5665   0041BE  0EF5               	movlw	low _motorL
  5666   0041C0  6E1A               	movwf	turnRight45@mL^0,c
  5667   0041C2  0E00               	movlw	high _motorL
  5668   0041C4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5669   0041C6  0EBE               	movlw	low _motorR
  5670   0041C8  6E1C               	movwf	turnRight45@mR^0,c
  5671   0041CA  0E01               	movlw	high _motorR
  5672   0041CC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5673   0041CE  ECEB  F021         	call	_turnRight45	;wreg free
  5674                           
  5675                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  5676   0041D2  0EF5               	movlw	low _motorL
  5677   0041D4  6E1A               	movwf	turnRight45@mL^0,c
  5678   0041D6  0E00               	movlw	high _motorL
  5679   0041D8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5680   0041DA  0EBE               	movlw	low _motorR
  5681   0041DC  6E1C               	movwf	turnRight45@mR^0,c
  5682   0041DE  0E01               	movlw	high _motorR
  5683   0041E0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5684   0041E2  ECEB  F021         	call	_turnRight45	;wreg free
  5685                           
  5686                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  5687   0041E6  0EF5               	movlw	low _motorL
  5688   0041E8  6E1A               	movwf	turnRight45@mL^0,c
  5689   0041EA  0E00               	movlw	high _motorL
  5690   0041EC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5691   0041EE  0EBE               	movlw	low _motorR
  5692   0041F0  6E1C               	movwf	turnRight45@mR^0,c
  5693   0041F2  0E01               	movlw	high _motorR
  5694   0041F4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5695   0041F6  ECEB  F021         	call	_turnRight45	;wreg free
  5696                           
  5697                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  5698   0041FA  0EF5               	movlw	low _motorL
  5699   0041FC  6E1A               	movwf	turnRight45@mL^0,c
  5700   0041FE  0E00               	movlw	high _motorL
  5701   004200  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5702   004202  0EBE               	movlw	low _motorR
  5703   004204  6E1C               	movwf	turnRight45@mR^0,c
  5704   004206  0E01               	movlw	high _motorR
  5705   004208  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5706   00420A  ECEB  F021         	call	_turnRight45	;wreg free
  5707   00420E  0012               	return		;funcret
  5708   004210                     __end_of_BlueMove:
  5709                           	callstack 0
  5710                           
  5711 ;; *************** function _getTMR0val *****************
  5712 ;; Defined at:
  5713 ;;		line 28 in file "timers.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  moving          2    0[COMRAM] int 
  5718 ;;  temp            2    0        unsigned int 
  5719 ;; Return value:  Size  Location     Type
  5720 ;;                  1    wreg      void 
  5721 ;; Registers used:
  5722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5723 ;; Tracked objects:
  5724 ;;		On entry : 0/0
  5725 ;;		On exit  : 0/0
  5726 ;;		Unchanged: 0/0
  5727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5731 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;Total ram usage:        2 bytes
  5733 ;; Hardware stack levels used: 1
  5734 ;; Hardware stack levels required when called: 1
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_main
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text33
  5743   004A86                     __ptext33:
  5744                           	callstack 0
  5745   004A86                     _getTMR0val:
  5746                           	callstack 29
  5747   004A86  50D3               	movf	211,w,c	;volatile
  5748   004A88                     
  5749                           ;timers.c: 32:     int moving=TMR0H<<8;
  5750   004A88  50D4               	movf	212,w,c	;volatile
  5751   004A8A  6E02               	movwf	(getTMR0val@moving+1)^0,c
  5752   004A8C  6A01               	clrf	getTMR0val@moving^0,c
  5753   004A8E                     
  5754                           ;timers.c: 33:     Time_forward[move_count]=moving;
  5755   004A8E  90D8               	bcf	status,0,c
  5756   004A90  0100               	movlb	0	; () banked
  5757   004A92  35F2               	rlcf	_move_count& (0+255),w,b	;volatile
  5758   004A94  6ED9               	movwf	fsr2l,c
  5759   004A96  35F3               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  5760   004A98  6EDA               	movwf	fsr2h,c
  5761   004A9A  0E00               	movlw	low _Time_forward
  5762   004A9C  26D9               	addwf	fsr2l,f,c
  5763   004A9E  0E02               	movlw	high _Time_forward
  5764   004AA0  22DA               	addwfc	fsr2h,f,c
  5765   004AA2  C001  FFDE         	movff	getTMR0val@moving,postinc2
  5766   004AA6  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  5767   004AAA                     
  5768                           ; BSR set to: 0
  5769   004AAA  0012               	return		;funcret
  5770   004AAC                     __end_of_getTMR0val:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _colour_rel *****************
  5774 ;; Defined at:
  5775 ;;		line 114 in file "color.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  vals            2   49[COMRAM] PTR struct RGB
  5778 ;;		 -> vals(8), 
  5779 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  5780 ;;		 -> rel(12), 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;  B               4   73[COMRAM] float 
  5783 ;;  G               4   69[COMRAM] float 
  5784 ;;  R               4   65[COMRAM] float 
  5785 ;;  L               4   53[COMRAM] float 
  5786 ;; Return value:  Size  Location     Type
  5787 ;;                  1    wreg      void 
  5788 ;; Registers used:
  5789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5790 ;; Tracked objects:
  5791 ;;		On entry : 0/0
  5792 ;;		On exit  : 0/0
  5793 ;;		Unchanged: 0/0
  5794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;Total ram usage:       28 bytes
  5800 ;; Hardware stack levels used: 1
  5801 ;; Hardware stack levels required when called: 2
  5802 ;; This function calls:
  5803 ;;		___fladd
  5804 ;;		___fldiv
  5805 ;;		___xxtofl
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text34
  5812   002A9A                     __ptext34:
  5813                           	callstack 0
  5814   002A9A                     _colour_rel:
  5815                           	callstack 28
  5816   002A9A                     
  5817                           ;color.c: 115:     float R = vals->R;
  5818   002A9A  C032  FFD9         	movff	colour_rel@vals,fsr2l
  5819   002A9E  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  5820   002AA2  CFDE F001          	movff	postinc2,___xxtofl@val
  5821   002AA6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5822   002AAA  0E00               	movlw	0
  5823   002AAC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5824   002AAE  0EFF               	movlw	-1
  5825   002AB0  6E03               	movwf	(___xxtofl@val+2)^0,c
  5826   002AB2  6E04               	movwf	(___xxtofl@val+3)^0,c
  5827   002AB4  0E01               	movlw	1
  5828   002AB6  EC3C  F019         	call	___xxtofl
  5829   002ABA  C001  F042         	movff	?___xxtofl,colour_rel@R
  5830   002ABE  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  5831   002AC2  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  5832   002AC6  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  5833                           
  5834                           ;color.c: 116:     float G = vals->G;
  5835   002ACA  EE20 F002          	lfsr	2,2
  5836   002ACE  5032               	movf	colour_rel@vals^0,w,c
  5837   002AD0  26D9               	addwf	fsr2l,f,c
  5838   002AD2  5033               	movf	(colour_rel@vals+1)^0,w,c
  5839   002AD4  22DA               	addwfc	fsr2h,f,c
  5840   002AD6  CFDE F001          	movff	postinc2,___xxtofl@val
  5841   002ADA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5842   002ADE  0E00               	movlw	0
  5843   002AE0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5844   002AE2  0EFF               	movlw	-1
  5845   002AE4  6E03               	movwf	(___xxtofl@val+2)^0,c
  5846   002AE6  6E04               	movwf	(___xxtofl@val+3)^0,c
  5847   002AE8  0E01               	movlw	1
  5848   002AEA  EC3C  F019         	call	___xxtofl
  5849   002AEE  C001  F046         	movff	?___xxtofl,colour_rel@G
  5850   002AF2  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  5851   002AF6  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  5852   002AFA  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  5853                           
  5854                           ;color.c: 117:     float B = vals->B;
  5855   002AFE  EE20 F004          	lfsr	2,4
  5856   002B02  5032               	movf	colour_rel@vals^0,w,c
  5857   002B04  26D9               	addwf	fsr2l,f,c
  5858   002B06  5033               	movf	(colour_rel@vals+1)^0,w,c
  5859   002B08  22DA               	addwfc	fsr2h,f,c
  5860   002B0A  CFDE F001          	movff	postinc2,___xxtofl@val
  5861   002B0E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5862   002B12  0E00               	movlw	0
  5863   002B14  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5864   002B16  0EFF               	movlw	-1
  5865   002B18  6E03               	movwf	(___xxtofl@val+2)^0,c
  5866   002B1A  6E04               	movwf	(___xxtofl@val+3)^0,c
  5867   002B1C  0E01               	movlw	1
  5868   002B1E  EC3C  F019         	call	___xxtofl
  5869   002B22  C001  F04A         	movff	?___xxtofl,colour_rel@B
  5870   002B26  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  5871   002B2A  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  5872   002B2E  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  5873                           
  5874                           ;color.c: 118:     float L = vals->L;
  5875   002B32  EE20 F006          	lfsr	2,6
  5876   002B36  5032               	movf	colour_rel@vals^0,w,c
  5877   002B38  26D9               	addwf	fsr2l,f,c
  5878   002B3A  5033               	movf	(colour_rel@vals+1)^0,w,c
  5879   002B3C  22DA               	addwfc	fsr2h,f,c
  5880   002B3E  CFDE F001          	movff	postinc2,___xxtofl@val
  5881   002B42  CFDD F002          	movff	postdec2,___xxtofl@val+1
  5882   002B46  0E00               	movlw	0
  5883   002B48  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  5884   002B4A  0EFF               	movlw	-1
  5885   002B4C  6E03               	movwf	(___xxtofl@val+2)^0,c
  5886   002B4E  6E04               	movwf	(___xxtofl@val+3)^0,c
  5887   002B50  0E01               	movlw	1
  5888   002B52  EC3C  F019         	call	___xxtofl
  5889   002B56  C001  F036         	movff	?___xxtofl,colour_rel@L
  5890   002B5A  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  5891   002B5E  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  5892   002B62  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  5893   002B66                     
  5894                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5895   002B66  C046  F005         	movff	colour_rel@G,___fladd@a
  5896   002B6A  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5897   002B6E  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5898   002B72  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5899   002B76  C042  F001         	movff	colour_rel@R,___fladd@b
  5900   002B7A  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5901   002B7E  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5902   002B82  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5903   002B86  EC0B  F00F         	call	___fladd	;wreg free
  5904   002B8A  C001  F03A         	movff	?___fladd,_colour_rel$2807
  5905   002B8E  C002  F03B         	movff	?___fladd+1,_colour_rel$2807+1
  5906   002B92  C003  F03C         	movff	?___fladd+2,_colour_rel$2807+2
  5907   002B96  C004  F03D         	movff	?___fladd+3,_colour_rel$2807+3
  5908   002B9A                     
  5909                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5910   002B9A  C04A  F005         	movff	colour_rel@B,___fladd@a
  5911   002B9E  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5912   002BA2  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5913   002BA6  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5914   002BAA  C03A  F001         	movff	_colour_rel$2807,___fladd@b
  5915   002BAE  C03B  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  5916   002BB2  C03C  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  5917   002BB6  C03D  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  5918   002BBA  EC0B  F00F         	call	___fladd	;wreg free
  5919   002BBE  C001  F03E         	movff	?___fladd,_colour_rel$2808
  5920   002BC2  C002  F03F         	movff	?___fladd+1,_colour_rel$2808+1
  5921   002BC6  C003  F040         	movff	?___fladd+2,_colour_rel$2808+2
  5922   002BCA  C004  F041         	movff	?___fladd+3,_colour_rel$2808+3
  5923                           
  5924                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  5925   002BCE  C042  F019         	movff	colour_rel@R,___fldiv@b
  5926   002BD2  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  5927   002BD6  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  5928   002BDA  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  5929   002BDE  C036  F005         	movff	colour_rel@L,___fladd@a
  5930   002BE2  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5931   002BE6  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5932   002BEA  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5933   002BEE  C03E  F001         	movff	_colour_rel$2808,___fladd@b
  5934   002BF2  C03F  F002         	movff	_colour_rel$2808+1,___fladd@b+1
  5935   002BF6  C040  F003         	movff	_colour_rel$2808+2,___fladd@b+2
  5936   002BFA  C041  F004         	movff	_colour_rel$2808+3,___fladd@b+3
  5937   002BFE  EC0B  F00F         	call	___fladd	;wreg free
  5938   002C02  C001  F01D         	movff	?___fladd,___fldiv@a
  5939   002C06  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5940   002C0A  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5941   002C0E  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5942   002C12  EC80  F013         	call	___fldiv	;wreg free
  5943   002C16  C034  FFD9         	movff	colour_rel@rel,fsr2l
  5944   002C1A  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  5945   002C1E  C019  FFDE         	movff	?___fldiv,postinc2
  5946   002C22  C01A  FFDE         	movff	?___fldiv+1,postinc2
  5947   002C26  C01B  FFDE         	movff	?___fldiv+2,postinc2
  5948   002C2A  C01C  FFDE         	movff	?___fldiv+3,postinc2
  5949   002C2E                     
  5950                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5951   002C2E  C046  F005         	movff	colour_rel@G,___fladd@a
  5952   002C32  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  5953   002C36  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  5954   002C3A  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  5955   002C3E  C042  F001         	movff	colour_rel@R,___fladd@b
  5956   002C42  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  5957   002C46  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  5958   002C4A  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  5959   002C4E  EC0B  F00F         	call	___fladd	;wreg free
  5960   002C52  C001  F03A         	movff	?___fladd,_colour_rel$2807
  5961   002C56  C002  F03B         	movff	?___fladd+1,_colour_rel$2807+1
  5962   002C5A  C003  F03C         	movff	?___fladd+2,_colour_rel$2807+2
  5963   002C5E  C004  F03D         	movff	?___fladd+3,_colour_rel$2807+3
  5964   002C62                     
  5965                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5966   002C62  C04A  F005         	movff	colour_rel@B,___fladd@a
  5967   002C66  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  5968   002C6A  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  5969   002C6E  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  5970   002C72  C03A  F001         	movff	_colour_rel$2807,___fladd@b
  5971   002C76  C03B  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  5972   002C7A  C03C  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  5973   002C7E  C03D  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  5974   002C82  EC0B  F00F         	call	___fladd	;wreg free
  5975   002C86  C001  F03E         	movff	?___fladd,_colour_rel$2808
  5976   002C8A  C002  F03F         	movff	?___fladd+1,_colour_rel$2808+1
  5977   002C8E  C003  F040         	movff	?___fladd+2,_colour_rel$2808+2
  5978   002C92  C004  F041         	movff	?___fladd+3,_colour_rel$2808+3
  5979                           
  5980                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  5981   002C96  C04A  F019         	movff	colour_rel@B,___fldiv@b
  5982   002C9A  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  5983   002C9E  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  5984   002CA2  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  5985   002CA6  C036  F005         	movff	colour_rel@L,___fladd@a
  5986   002CAA  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  5987   002CAE  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  5988   002CB2  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  5989   002CB6  C03E  F001         	movff	_colour_rel$2808,___fladd@b
  5990   002CBA  C03F  F002         	movff	_colour_rel$2808+1,___fladd@b+1
  5991   002CBE  C040  F003         	movff	_colour_rel$2808+2,___fladd@b+2
  5992   002CC2  C041  F004         	movff	_colour_rel$2808+3,___fladd@b+3
  5993   002CC6  EC0B  F00F         	call	___fladd	;wreg free
  5994   002CCA  C001  F01D         	movff	?___fladd,___fldiv@a
  5995   002CCE  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  5996   002CD2  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  5997   002CD6  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  5998   002CDA  EC80  F013         	call	___fldiv	;wreg free
  5999   002CDE  EE20 F008          	lfsr	2,8
  6000   002CE2  5034               	movf	colour_rel@rel^0,w,c
  6001   002CE4  26D9               	addwf	fsr2l,f,c
  6002   002CE6  5035               	movf	(colour_rel@rel+1)^0,w,c
  6003   002CE8  22DA               	addwfc	fsr2h,f,c
  6004   002CEA  C019  FFDE         	movff	?___fldiv,postinc2
  6005   002CEE  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6006   002CF2  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6007   002CF6  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6008   002CFA                     
  6009                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6010   002CFA  C046  F005         	movff	colour_rel@G,___fladd@a
  6011   002CFE  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6012   002D02  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6013   002D06  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6014   002D0A  C042  F001         	movff	colour_rel@R,___fladd@b
  6015   002D0E  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6016   002D12  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6017   002D16  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6018   002D1A  EC0B  F00F         	call	___fladd	;wreg free
  6019   002D1E  C001  F03A         	movff	?___fladd,_colour_rel$2807
  6020   002D22  C002  F03B         	movff	?___fladd+1,_colour_rel$2807+1
  6021   002D26  C003  F03C         	movff	?___fladd+2,_colour_rel$2807+2
  6022   002D2A  C004  F03D         	movff	?___fladd+3,_colour_rel$2807+3
  6023   002D2E                     
  6024                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6025   002D2E  C04A  F005         	movff	colour_rel@B,___fladd@a
  6026   002D32  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6027   002D36  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6028   002D3A  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6029   002D3E  C03A  F001         	movff	_colour_rel$2807,___fladd@b
  6030   002D42  C03B  F002         	movff	_colour_rel$2807+1,___fladd@b+1
  6031   002D46  C03C  F003         	movff	_colour_rel$2807+2,___fladd@b+2
  6032   002D4A  C03D  F004         	movff	_colour_rel$2807+3,___fladd@b+3
  6033   002D4E  EC0B  F00F         	call	___fladd	;wreg free
  6034   002D52  C001  F03E         	movff	?___fladd,_colour_rel$2808
  6035   002D56  C002  F03F         	movff	?___fladd+1,_colour_rel$2808+1
  6036   002D5A  C003  F040         	movff	?___fladd+2,_colour_rel$2808+2
  6037   002D5E  C004  F041         	movff	?___fladd+3,_colour_rel$2808+3
  6038                           
  6039                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6040   002D62  C046  F019         	movff	colour_rel@G,___fldiv@b
  6041   002D66  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6042   002D6A  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6043   002D6E  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6044   002D72  C036  F005         	movff	colour_rel@L,___fladd@a
  6045   002D76  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6046   002D7A  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6047   002D7E  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6048   002D82  C03E  F001         	movff	_colour_rel$2808,___fladd@b
  6049   002D86  C03F  F002         	movff	_colour_rel$2808+1,___fladd@b+1
  6050   002D8A  C040  F003         	movff	_colour_rel$2808+2,___fladd@b+2
  6051   002D8E  C041  F004         	movff	_colour_rel$2808+3,___fladd@b+3
  6052   002D92  EC0B  F00F         	call	___fladd	;wreg free
  6053   002D96  C001  F01D         	movff	?___fladd,___fldiv@a
  6054   002D9A  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6055   002D9E  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6056   002DA2  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6057   002DA6  EC80  F013         	call	___fldiv	;wreg free
  6058   002DAA  EE20 F004          	lfsr	2,4
  6059   002DAE  5034               	movf	colour_rel@rel^0,w,c
  6060   002DB0  26D9               	addwf	fsr2l,f,c
  6061   002DB2  5035               	movf	(colour_rel@rel+1)^0,w,c
  6062   002DB4  22DA               	addwfc	fsr2h,f,c
  6063   002DB6  C019  FFDE         	movff	?___fldiv,postinc2
  6064   002DBA  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6065   002DBE  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6066   002DC2  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6067   002DC6  0012               	return		;funcret
  6068   002DC8                     __end_of_colour_rel:
  6069                           	callstack 0
  6070                           
  6071 ;; *************** function _color_click_init *****************
  6072 ;; Defined at:
  6073 ;;		line 7 in file "color.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, status,2, status,0, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;Total ram usage:        1 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 4
  6094 ;; This function calls:
  6095 ;;		_I2C_2_Master_Init
  6096 ;;		_color_writetoaddr
  6097 ;; This function is called by:
  6098 ;;		_main
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text35
  6103   00457C                     __ptext35:
  6104                           	callstack 0
  6105   00457C                     _color_click_init:
  6106                           	callstack 26
  6107   00457C                     
  6108                           ;color.c: 10:     I2C_2_Master_Init();
  6109   00457C  EC1A  F025         	call	_I2C_2_Master_Init	;wreg free
  6110   004580                     
  6111                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6112   004580  0E01               	movlw	1
  6113   004582  6E03               	movwf	color_writetoaddr@value^0,c
  6114   004584  0E00               	movlw	0
  6115   004586  EC69  F025         	call	_color_writetoaddr
  6116   00458A                     
  6117                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6118   00458A  0E3F               	movlw	63
  6119   00458C  6E05               	movwf	??_color_click_init^0,c
  6120   00458E  0E55               	movlw	85
  6121   004590                     u4637:
  6122   004590  2EE8               	decfsz	wreg,f,c
  6123   004592  D7FE               	bra	u4637
  6124   004594  2E05               	decfsz	??_color_click_init^0,f,c
  6125   004596  D7FC               	bra	u4637
  6126   004598  F000               	nop	
  6127   00459A                     
  6128                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6129   00459A  0E03               	movlw	3
  6130   00459C  6E03               	movwf	color_writetoaddr@value^0,c
  6131   00459E  0E00               	movlw	0
  6132   0045A0  EC69  F025         	call	_color_writetoaddr
  6133   0045A4                     
  6134                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6135   0045A4  0ED5               	movlw	213
  6136   0045A6  6E03               	movwf	color_writetoaddr@value^0,c
  6137   0045A8  0E01               	movlw	1
  6138   0045AA  EC69  F025         	call	_color_writetoaddr
  6139   0045AE                     
  6140                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6141   0045AE  0E00               	movlw	0
  6142   0045B0  6E03               	movwf	color_writetoaddr@value^0,c
  6143   0045B2  0E0F               	movlw	15
  6144   0045B4  EC69  F025         	call	_color_writetoaddr
  6145   0045B8                     
  6146                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6147   0045B8  9287               	bcf	135,1,c	;volatile
  6148   0045BA                     
  6149                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6150   0045BA  9881               	bcf	129,4,c	;volatile
  6151   0045BC                     
  6152                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6153   0045BC  9E86               	bcf	134,7,c	;volatile
  6154   0045BE                     
  6155                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6156   0045BE  9684               	bcf	132,3,c	;volatile
  6157   0045C0                     
  6158                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6159   0045C0  9884               	bcf	132,4,c	;volatile
  6160   0045C2                     
  6161                           ;color.c: 28:     LATGbits.LATG1=0;
  6162   0045C2  927F               	bcf	127,1,c	;volatile
  6163   0045C4                     
  6164                           ;color.c: 29:     LATFbits.LATF7=0;
  6165   0045C4  9E7E               	bcf	126,7,c	;volatile
  6166   0045C6                     
  6167                           ;color.c: 30:     LATAbits.LATA4=0;
  6168   0045C6  9879               	bcf	121,4,c	;volatile
  6169   0045C8                     
  6170                           ;color.c: 32:     LATDbits.LATD3=0;
  6171   0045C8  967C               	bcf	124,3,c	;volatile
  6172   0045CA                     
  6173                           ;color.c: 33:     LATDbits.LATD4=0;
  6174   0045CA  987C               	bcf	124,4,c	;volatile
  6175   0045CC  0012               	return		;funcret
  6176   0045CE                     __end_of_color_click_init:
  6177                           	callstack 0
  6178                           
  6179 ;; *************** function _color_writetoaddr *****************
  6180 ;; Defined at:
  6181 ;;		line 41 in file "color.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;  address         1    wreg     unsigned char 
  6184 ;;  value           1    2[COMRAM] unsigned char 
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  address         1    3[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6196 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;Total ram usage:        2 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 3
  6203 ;; This function calls:
  6204 ;;		_I2C_2_Master_Start
  6205 ;;		_I2C_2_Master_Stop
  6206 ;;		_I2C_2_Master_Write
  6207 ;; This function is called by:
  6208 ;;		_color_click_init
  6209 ;; This function uses a non-reentrant model
  6210 ;;
  6211                           
  6212                           	psect	text36
  6213   004AD2                     __ptext36:
  6214                           	callstack 0
  6215   004AD2                     _color_writetoaddr:
  6216                           	callstack 26
  6217                           
  6218                           ;incstack = 0
  6219                           ;color_writetoaddr@address stored from wreg
  6220   004AD2  6E04               	movwf	color_writetoaddr@address^0,c
  6221   004AD4                     
  6222                           ;color.c: 42:     I2C_2_Master_Start();
  6223   004AD4  ECB4  F025         	call	_I2C_2_Master_Start	;wreg free
  6224                           
  6225                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6226   004AD8  0E52               	movlw	82
  6227   004ADA  ECA4  F025         	call	_I2C_2_Master_Write
  6228                           
  6229                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6230   004ADE  5004               	movf	color_writetoaddr@address^0,w,c
  6231   004AE0  0980               	iorlw	128
  6232   004AE2  ECA4  F025         	call	_I2C_2_Master_Write
  6233                           
  6234                           ;color.c: 45:     I2C_2_Master_Write(value);
  6235   004AE6  5003               	movf	color_writetoaddr@value^0,w,c
  6236   004AE8  ECA4  F025         	call	_I2C_2_Master_Write
  6237                           
  6238                           ;color.c: 46:     I2C_2_Master_Stop();
  6239   004AEC  ECAF  F025         	call	_I2C_2_Master_Stop	;wreg free
  6240   004AF0  0012               	return		;funcret
  6241   004AF2                     __end_of_color_writetoaddr:
  6242                           	callstack 0
  6243                           
  6244 ;; *************** function _I2C_2_Master_Write *****************
  6245 ;; Defined at:
  6246 ;;		line 45 in file "i2c.c"
  6247 ;; Parameters:    Size  Location     Type
  6248 ;;  data_byte       1    wreg     unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  data_byte       1    1[COMRAM] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  1    wreg      void 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0, cstack
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;Total ram usage:        1 bytes
  6265 ;; Hardware stack levels used: 1
  6266 ;; Hardware stack levels required when called: 2
  6267 ;; This function calls:
  6268 ;;		_I2C_2_Master_Idle
  6269 ;; This function is called by:
  6270 ;;		_color_writetoaddr
  6271 ;;		_color_read_lum
  6272 ;;		_color_read_Red
  6273 ;;		_color_read_Green
  6274 ;;		_color_read_Blue
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text37
  6279   004B48                     __ptext37:
  6280                           	callstack 0
  6281   004B48                     _I2C_2_Master_Write:
  6282                           	callstack 26
  6283                           
  6284                           ;incstack = 0
  6285                           ;I2C_2_Master_Write@data_byte stored from wreg
  6286   004B48  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6287   004B4A                     
  6288                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6289   004B4A  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  6290   004B4E                     
  6291                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6292   004B4E  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6293   004B52  0012               	return		;funcret
  6294   004B54                     __end_of_I2C_2_Master_Write:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function _I2C_2_Master_Stop *****************
  6298 ;; Defined at:
  6299 ;;		line 39 in file "i2c.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2, status,0, cstack
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6317 ;;Total ram usage:        0 bytes
  6318 ;; Hardware stack levels used: 1
  6319 ;; Hardware stack levels required when called: 2
  6320 ;; This function calls:
  6321 ;;		_I2C_2_Master_Idle
  6322 ;; This function is called by:
  6323 ;;		_color_writetoaddr
  6324 ;;		_color_read_lum
  6325 ;;		_color_read_Red
  6326 ;;		_color_read_Green
  6327 ;;		_color_read_Blue
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text38
  6332   004B5E                     __ptext38:
  6333                           	callstack 0
  6334   004B5E                     _I2C_2_Master_Stop:
  6335                           	callstack 26
  6336   004B5E                     
  6337                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6338   004B5E  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  6339   004B62                     
  6340                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6341   004B62  010E               	movlb	14	; () banked
  6342   004B64  85DA               	bsf	218,2,b	;volatile
  6343   004B66                     
  6344                           ; BSR set to: 14
  6345   004B66  0012               	return		;funcret
  6346   004B68                     __end_of_I2C_2_Master_Stop:
  6347                           	callstack 0
  6348                           
  6349 ;; *************** function _I2C_2_Master_Start *****************
  6350 ;; Defined at:
  6351 ;;		line 27 in file "i2c.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;		None
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;                  1    wreg      void 
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0, cstack
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;Total ram usage:        0 bytes
  6370 ;; Hardware stack levels used: 1
  6371 ;; Hardware stack levels required when called: 2
  6372 ;; This function calls:
  6373 ;;		_I2C_2_Master_Idle
  6374 ;; This function is called by:
  6375 ;;		_color_writetoaddr
  6376 ;;		_color_read_lum
  6377 ;;		_color_read_Red
  6378 ;;		_color_read_Green
  6379 ;;		_color_read_Blue
  6380 ;; This function uses a non-reentrant model
  6381 ;;
  6382                           
  6383                           	psect	text39
  6384   004B68                     __ptext39:
  6385                           	callstack 0
  6386   004B68                     _I2C_2_Master_Start:
  6387                           	callstack 26
  6388   004B68                     
  6389                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6390   004B68  EC2F  F025         	call	_I2C_2_Master_Idle	;wreg free
  6391   004B6C                     
  6392                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6393   004B6C  010E               	movlb	14	; () banked
  6394   004B6E  81DA               	bsf	218,0,b	;volatile
  6395   004B70                     
  6396                           ; BSR set to: 14
  6397   004B70  0012               	return		;funcret
  6398   004B72                     __end_of_I2C_2_Master_Start:
  6399                           	callstack 0
  6400                           
  6401 ;; *************** function _I2C_2_Master_Idle *****************
  6402 ;; Defined at:
  6403 ;;		line 22 in file "i2c.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;		None
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		wreg, status,2, status,0
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;Total ram usage:        1 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; Hardware stack levels required when called: 1
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_I2C_2_Master_Start
  6428 ;;		_I2C_2_Master_RepStart
  6429 ;;		_I2C_2_Master_Stop
  6430 ;;		_I2C_2_Master_Write
  6431 ;;		_I2C_2_Master_Read
  6432 ;; This function uses a non-reentrant model
  6433 ;;
  6434                           
  6435                           	psect	text40
  6436   004A5E                     __ptext40:
  6437                           	callstack 0
  6438   004A5E                     _I2C_2_Master_Idle:
  6439                           	callstack 26
  6440   004A5E                     l141:
  6441   004A5E  010E               	movlb	14	; () banked
  6442   004A60  B5D8               	btfsc	216,2,b	;volatile
  6443   004A62  EF35  F025         	goto	u2551
  6444   004A66  EF37  F025         	goto	u2550
  6445   004A6A                     u2551:
  6446   004A6A  EF2F  F025         	goto	l141
  6447   004A6E                     u2550:
  6448   004A6E                     
  6449                           ; BSR set to: 14
  6450   004A6E  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6451   004A72  0E1F               	movlw	31
  6452   004A74  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6453   004A76  A4D8               	btfss	status,2,c
  6454   004A78  EF40  F025         	goto	u2561
  6455   004A7C  EF42  F025         	goto	u2560
  6456   004A80                     u2561:
  6457   004A80  EF2F  F025         	goto	l141
  6458   004A84                     u2560:
  6459   004A84                     
  6460                           ; BSR set to: 14
  6461   004A84  0012               	return		;funcret
  6462   004A86                     __end_of_I2C_2_Master_Idle:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _I2C_2_Master_Init *****************
  6466 ;; Defined at:
  6467 ;;		line 4 in file "i2c.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;		None
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, status,2
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;Total ram usage:        0 bytes
  6486 ;; Hardware stack levels used: 1
  6487 ;; Hardware stack levels required when called: 1
  6488 ;; This function calls:
  6489 ;;		Nothing
  6490 ;; This function is called by:
  6491 ;;		_color_click_init
  6492 ;;		_main
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           	psect	text41
  6497   004A34                     __ptext41:
  6498                           	callstack 0
  6499   004A34                     _I2C_2_Master_Init:
  6500                           	callstack 28
  6501   004A34                     
  6502                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6503   004A34  010E               	movlb	14	; () banked
  6504   004A36  51D9               	movf	217,w,b	;volatile
  6505   004A38  0BF0               	andlw	-16
  6506   004A3A  0908               	iorlw	8
  6507   004A3C  6FD9               	movwf	217,b	;volatile
  6508   004A3E                     
  6509                           ; BSR set to: 14
  6510                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6511   004A3E  8BD9               	bsf	217,5,b	;volatile
  6512                           
  6513                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6514   004A40  0E9F               	movlw	159
  6515   004A42  6FD6               	movwf	214,b	;volatile
  6516   004A44                     
  6517                           ; BSR set to: 14
  6518                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6519   004A44  8A84               	bsf	132,5,c	;volatile
  6520   004A46                     
  6521                           ; BSR set to: 14
  6522                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6523   004A46  8C84               	bsf	132,6,c	;volatile
  6524   004A48                     
  6525                           ; BSR set to: 14
  6526                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6527   004A48  9BA7               	bcf	167,5,b	;volatile
  6528   004A4A                     
  6529                           ; BSR set to: 14
  6530                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6531   004A4A  9DA7               	bcf	167,6,b	;volatile
  6532                           
  6533                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6534   004A4C  0E1D               	movlw	29
  6535   004A4E  6F1D               	movwf	29,b	;volatile
  6536                           
  6537                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6538   004A50  0E1E               	movlw	30
  6539   004A52  6F1C               	movwf	28,b	;volatile
  6540                           
  6541                           ;i2c.c: 18:   RD5PPS=0x1C;
  6542   004A54  0E1C               	movlw	28
  6543   004A56  6F6F               	movwf	111,b	;volatile
  6544                           
  6545                           ;i2c.c: 19:   RD6PPS=0x1B;
  6546   004A58  0E1B               	movlw	27
  6547   004A5A  6F70               	movwf	112,b	;volatile
  6548   004A5C                     
  6549                           ; BSR set to: 14
  6550   004A5C  0012               	return		;funcret
  6551   004A5E                     __end_of_I2C_2_Master_Init:
  6552                           	callstack 0
  6553                           
  6554 ;; *************** function _YellowMove *****************
  6555 ;; Defined at:
  6556 ;;		line 258 in file "dc_motor.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6559 ;;		 -> motorL(9), 
  6560 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6561 ;;		 -> motorR(9), 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;                  1    wreg      void 
  6566 ;; Registers used:
  6567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;Total ram usage:        4 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; Hardware stack levels required when called: 5
  6580 ;; This function calls:
  6581 ;;		_reverseDetect
  6582 ;;		_reverseOneBlock
  6583 ;;		_turnRight45
  6584 ;; This function is called by:
  6585 ;;		_main
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text42
  6590   0045CE                     __ptext42:
  6591                           	callstack 0
  6592   0045CE                     _YellowMove:
  6593                           	callstack 25
  6594   0045CE                     
  6595                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  6596   0045CE  0EF5               	movlw	low _motorL
  6597   0045D0  6E1A               	movwf	reverseDetect@mL^0,c
  6598   0045D2  0E00               	movlw	high _motorL
  6599   0045D4  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6600   0045D6  0EBE               	movlw	low _motorR
  6601   0045D8  6E1C               	movwf	reverseDetect@mR^0,c
  6602   0045DA  0E01               	movlw	high _motorR
  6603   0045DC  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6604   0045DE  ECBE  F021         	call	_reverseDetect	;wreg free
  6605                           
  6606                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  6607   0045E2  0EF5               	movlw	low _motorL
  6608   0045E4  6E1A               	movwf	reverseOneBlock@mL^0,c
  6609   0045E6  0E00               	movlw	high _motorL
  6610   0045E8  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  6611   0045EA  0EBE               	movlw	low _motorR
  6612   0045EC  6E1C               	movwf	reverseOneBlock@mR^0,c
  6613   0045EE  0E01               	movlw	high _motorR
  6614   0045F0  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  6615   0045F2  EC91  F021         	call	_reverseOneBlock	;wreg free
  6616                           
  6617                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  6618   0045F6  0EF5               	movlw	low _motorL
  6619   0045F8  6E1A               	movwf	turnRight45@mL^0,c
  6620   0045FA  0E00               	movlw	high _motorL
  6621   0045FC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6622   0045FE  0EBE               	movlw	low _motorR
  6623   004600  6E1C               	movwf	turnRight45@mR^0,c
  6624   004602  0E01               	movlw	high _motorR
  6625   004604  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6626   004606  ECEB  F021         	call	_turnRight45	;wreg free
  6627                           
  6628                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  6629   00460A  0EF5               	movlw	low _motorL
  6630   00460C  6E1A               	movwf	turnRight45@mL^0,c
  6631   00460E  0E00               	movlw	high _motorL
  6632   004610  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6633   004612  0EBE               	movlw	low _motorR
  6634   004614  6E1C               	movwf	turnRight45@mR^0,c
  6635   004616  0E01               	movlw	high _motorR
  6636   004618  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6637   00461A  ECEB  F021         	call	_turnRight45	;wreg free
  6638   00461E  0012               	return		;funcret
  6639   004620                     __end_of_YellowMove:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function _turnRight45 *****************
  6643 ;; Defined at:
  6644 ;;		line 181 in file "dc_motor.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6647 ;;		 -> motorL(9), 
  6648 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6649 ;;		 -> motorR(9), 
  6650 ;; Auto vars:     Size  Location     Type
  6651 ;;		None
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  1    wreg      void 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;Total ram usage:        6 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 4
  6668 ;; This function calls:
  6669 ;;		_stop
  6670 ;;		_turnRight
  6671 ;; This function is called by:
  6672 ;;		_RedMove
  6673 ;;		_BlueMove
  6674 ;;		_YellowMove
  6675 ;;		_OrangeMove
  6676 ;;		_ReversePink
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text43
  6681   0043D6                     __ptext43:
  6682                           	callstack 0
  6683   0043D6                     _turnRight45:
  6684                           	callstack 24
  6685   0043D6                     
  6686                           ;dc_motor.c: 182:     turnRight(mL,mR);
  6687   0043D6  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  6688   0043DA  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  6689   0043DE  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  6690   0043E2  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  6691   0043E6  EC26  F01E         	call	_turnRight	;wreg free
  6692   0043EA                     
  6693                           ;dc_motor.c: 183:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  6694   0043EA  0E12               	movlw	18
  6695   0043EC  6E1F               	movwf	(??_turnRight45+1)^0,c
  6696   0043EE  0EDC               	movlw	220
  6697   0043F0  6E1E               	movwf	??_turnRight45^0,c
  6698   0043F2  0E60               	movlw	96
  6699   0043F4                     u4647:
  6700   0043F4  2EE8               	decfsz	wreg,f,c
  6701   0043F6  D7FE               	bra	u4647
  6702   0043F8  2E1E               	decfsz	??_turnRight45^0,f,c
  6703   0043FA  D7FC               	bra	u4647
  6704   0043FC  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6705   0043FE  D7FA               	bra	u4647
  6706   004400                     
  6707                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  6708   004400  0EF5               	movlw	low _motorL
  6709   004402  6E14               	movwf	stop@mL^0,c
  6710   004404  0E00               	movlw	high _motorL
  6711   004406  6E15               	movwf	(stop@mL+1)^0,c
  6712   004408  0EBE               	movlw	low _motorR
  6713   00440A  6E16               	movwf	stop@mR^0,c
  6714   00440C  0E01               	movlw	high _motorR
  6715   00440E  6E17               	movwf	(stop@mR+1)^0,c
  6716   004410  ECE7  F01F         	call	_stop	;wreg free
  6717                           
  6718                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  6719   004414  0E52               	movlw	82
  6720   004416  6E1F               	movwf	(??_turnRight45+1)^0,c
  6721   004418  0E2B               	movlw	43
  6722   00441A  6E1E               	movwf	??_turnRight45^0,c
  6723   00441C  0E00               	movlw	0
  6724   00441E                     u4657:
  6725   00441E  2EE8               	decfsz	wreg,f,c
  6726   004420  D7FE               	bra	u4657
  6727   004422  2E1E               	decfsz	??_turnRight45^0,f,c
  6728   004424  D7FC               	bra	u4657
  6729   004426  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  6730   004428  D7FA               	bra	u4657
  6731   00442A  D000               	nop2	
  6732   00442C  0012               	return		;funcret
  6733   00442E                     __end_of_turnRight45:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function _turnRight *****************
  6737 ;; Defined at:
  6738 ;;		line 128 in file "dc_motor.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  6741 ;;		 -> motorL(9), 
  6742 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  6743 ;;		 -> motorR(9), 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;		None
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  1    wreg      void 
  6748 ;; Registers used:
  6749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6758 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6759 ;;Total ram usage:        6 bytes
  6760 ;; Hardware stack levels used: 1
  6761 ;; Hardware stack levels required when called: 3
  6762 ;; This function calls:
  6763 ;;		_setMotorPWM
  6764 ;; This function is called by:
  6765 ;;		_turnRight45
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text44
  6770   003C4C                     __ptext44:
  6771                           	callstack 0
  6772   003C4C                     _turnRight:
  6773                           	callstack 24
  6774   003C4C                     
  6775                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  6776   003C4C  EE20 F001          	lfsr	2,1
  6777   003C50  5014               	movf	turnRight@mL^0,w,c
  6778   003C52  26D9               	addwf	fsr2l,f,c
  6779   003C54  5015               	movf	(turnRight@mL+1)^0,w,c
  6780   003C56  22DA               	addwfc	fsr2h,f,c
  6781   003C58  0E01               	movlw	1
  6782   003C5A  6EDF               	movwf	indf2,c
  6783                           
  6784                           ;dc_motor.c: 131:     mR->direction =0;
  6785   003C5C  EE20 F001          	lfsr	2,1
  6786   003C60  5016               	movf	turnRight@mR^0,w,c
  6787   003C62  26D9               	addwf	fsr2l,f,c
  6788   003C64  5017               	movf	(turnRight@mR+1)^0,w,c
  6789   003C66  22DA               	addwfc	fsr2h,f,c
  6790   003C68  0E00               	movlw	0
  6791   003C6A  6EDF               	movwf	indf2,c
  6792                           
  6793                           ;dc_motor.c: 133:     while(mL->power<power && mR->power<power){
  6794   003C6C  EF5C  F01E         	goto	l3343
  6795   003C70                     l3335:
  6796                           
  6797                           ;dc_motor.c: 135:         mL->power+=10;
  6798   003C70  C014  FFD9         	movff	turnRight@mL,fsr2l
  6799   003C74  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6800   003C78  0E0A               	movlw	10
  6801   003C7A  26DF               	addwf	indf2,f,c
  6802                           
  6803                           ;dc_motor.c: 136:         mR->power+=10;
  6804   003C7C  C016  FFD9         	movff	turnRight@mR,fsr2l
  6805   003C80  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6806   003C84  0E0A               	movlw	10
  6807   003C86  26DF               	addwf	indf2,f,c
  6808   003C88                     
  6809                           ;dc_motor.c: 138:         setMotorPWM(mL);
  6810   003C88  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  6811   003C8C  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  6812   003C90  ECDA  F01A         	call	_setMotorPWM	;wreg free
  6813   003C94                     
  6814                           ;dc_motor.c: 139:         setMotorPWM(mR);
  6815   003C94  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  6816   003C98  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  6817   003C9C  ECDA  F01A         	call	_setMotorPWM	;wreg free
  6818   003CA0                     
  6819                           ;dc_motor.c: 141:         _delay((unsigned long)((20)*(64000000/4000.0)));
  6820   003CA0  0E02               	movlw	2
  6821   003CA2  6E19               	movwf	(??_turnRight+1)^0,c
  6822   003CA4  0EA0               	movlw	160
  6823   003CA6  6E18               	movwf	??_turnRight^0,c
  6824   003CA8  0E92               	movlw	146
  6825   003CAA                     u4667:
  6826   003CAA  2EE8               	decfsz	wreg,f,c
  6827   003CAC  D7FE               	bra	u4667
  6828   003CAE  2E18               	decfsz	??_turnRight^0,f,c
  6829   003CB0  D7FC               	bra	u4667
  6830   003CB2  2E19               	decfsz	(??_turnRight+1)^0,f,c
  6831   003CB4  D7FA               	bra	u4667
  6832   003CB6  D000               	nop2	
  6833   003CB8                     l3343:
  6834   003CB8  C014  FFD9         	movff	turnRight@mL,fsr2l
  6835   003CBC  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  6836   003CC0  0E1E               	movlw	30
  6837   003CC2  60DF               	cpfslt	indf2,c
  6838   003CC4  EF66  F01E         	goto	u2631
  6839   003CC8  EF68  F01E         	goto	u2630
  6840   003CCC                     u2631:
  6841   003CCC  EF74  F01E         	goto	l508
  6842   003CD0                     u2630:
  6843   003CD0  C016  FFD9         	movff	turnRight@mR,fsr2l
  6844   003CD4  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  6845   003CD8  0E1D               	movlw	29
  6846   003CDA  64DF               	cpfsgt	indf2,c
  6847   003CDC  EF72  F01E         	goto	u2641
  6848   003CE0  EF74  F01E         	goto	u2640
  6849   003CE4                     u2641:
  6850   003CE4  EF38  F01E         	goto	l3335
  6851   003CE8                     u2640:
  6852   003CE8                     l508:
  6853   003CE8  0012               	return		;funcret
  6854   003CEA                     __end_of_turnRight:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _Timer0_init *****************
  6858 ;; Defined at:
  6859 ;;		line 8 in file "timers.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;		None
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      void 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;Total ram usage:        0 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 1
  6880 ;; This function calls:
  6881 ;;		Nothing
  6882 ;; This function is called by:
  6883 ;;		_main
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text45
  6888   004AF2                     __ptext45:
  6889                           	callstack 0
  6890   004AF2                     _Timer0_init:
  6891                           	callstack 29
  6892   004AF2                     
  6893                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  6894   004AF2  50D6               	movf	214,w,c	;volatile
  6895   004AF4  0B1F               	andlw	-225
  6896   004AF6  0940               	iorlw	64
  6897   004AF8  6ED6               	movwf	214,c	;volatile
  6898   004AFA                     
  6899                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  6900   004AFA  88D6               	bsf	214,4,c	;volatile
  6901                           
  6902                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  6903   004AFC  50D6               	movf	214,w,c	;volatile
  6904   004AFE  0BF0               	andlw	-16
  6905   004B00  090E               	iorlw	14
  6906   004B02  6ED6               	movwf	214,c	;volatile
  6907   004B04                     
  6908                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  6909   004B04  88D5               	bsf	213,4,c	;volatile
  6910                           
  6911                           ;timers.c: 16:     TMR0H=0;
  6912   004B06  0E00               	movlw	0
  6913   004B08  6ED4               	movwf	212,c	;volatile
  6914                           
  6915                           ;timers.c: 17:     TMR0L=0;
  6916   004B0A  0E00               	movlw	0
  6917   004B0C  6ED3               	movwf	211,c	;volatile
  6918   004B0E                     
  6919                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  6920   004B0E  8ED5               	bsf	213,7,c	;volatile
  6921   004B10  0012               	return		;funcret
  6922   004B12                     __end_of_Timer0_init:
  6923                           	callstack 0
  6924                           
  6925 ;; *************** function _RetryMove *****************
  6926 ;; Defined at:
  6927 ;;		line 295 in file "dc_motor.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  6930 ;;		 -> motorL(9), 
  6931 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  6932 ;;		 -> motorR(9), 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;Total ram usage:        6 bytes
  6949 ;; Hardware stack levels used: 1
  6950 ;; Hardware stack levels required when called: 4
  6951 ;; This function calls:
  6952 ;;		_fullSpeedAhead
  6953 ;;		_fullSpeedBack
  6954 ;;		_stop
  6955 ;; This function is called by:
  6956 ;;		_main
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text46
  6961   003F4C                     __ptext46:
  6962                           	callstack 0
  6963   003F4C                     _RetryMove:
  6964                           	callstack 26
  6965   003F4C                     
  6966                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  6967   003F4C  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  6968   003F50  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  6969   003F54  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  6970   003F58  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  6971   003F5C  EC13  F01F         	call	_fullSpeedBack	;wreg free
  6972   003F60                     
  6973                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6974   003F60  0E29               	movlw	41
  6975   003F62  6E1F               	movwf	(??_RetryMove+1)^0,c
  6976   003F64  0E96               	movlw	150
  6977   003F66  6E1E               	movwf	??_RetryMove^0,c
  6978   003F68  0E7F               	movlw	127
  6979   003F6A                     u4677:
  6980   003F6A  2EE8               	decfsz	wreg,f,c
  6981   003F6C  D7FE               	bra	u4677
  6982   003F6E  2E1E               	decfsz	??_RetryMove^0,f,c
  6983   003F70  D7FC               	bra	u4677
  6984   003F72  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  6985   003F74  D7FA               	bra	u4677
  6986   003F76  F000               	nop	
  6987   003F78                     
  6988                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  6989   003F78  0EF5               	movlw	low _motorL
  6990   003F7A  6E14               	movwf	stop@mL^0,c
  6991   003F7C  0E00               	movlw	high _motorL
  6992   003F7E  6E15               	movwf	(stop@mL+1)^0,c
  6993   003F80  0EBE               	movlw	low _motorR
  6994   003F82  6E16               	movwf	stop@mR^0,c
  6995   003F84  0E01               	movlw	high _motorR
  6996   003F86  6E17               	movwf	(stop@mR+1)^0,c
  6997   003F88  ECE7  F01F         	call	_stop	;wreg free
  6998   003F8C                     
  6999                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  7000   003F8C  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7001   003F90  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7002   003F94  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7003   003F98  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7004   003F9C  EC75  F01E         	call	_fullSpeedAhead	;wreg free
  7005   003FA0                     
  7006                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7007   003FA0  0E29               	movlw	41
  7008   003FA2  6E1F               	movwf	(??_RetryMove+1)^0,c
  7009   003FA4  0E96               	movlw	150
  7010   003FA6  6E1E               	movwf	??_RetryMove^0,c
  7011   003FA8  0E7F               	movlw	127
  7012   003FAA                     u4687:
  7013   003FAA  2EE8               	decfsz	wreg,f,c
  7014   003FAC  D7FE               	bra	u4687
  7015   003FAE  2E1E               	decfsz	??_RetryMove^0,f,c
  7016   003FB0  D7FC               	bra	u4687
  7017   003FB2  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7018   003FB4  D7FA               	bra	u4687
  7019   003FB6  F000               	nop	
  7020                           
  7021                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  7022   003FB8  0EF5               	movlw	low _motorL
  7023   003FBA  6E14               	movwf	stop@mL^0,c
  7024   003FBC  0E00               	movlw	high _motorL
  7025   003FBE  6E15               	movwf	(stop@mL+1)^0,c
  7026   003FC0  0EBE               	movlw	low _motorR
  7027   003FC2  6E16               	movwf	stop@mR^0,c
  7028   003FC4  0E01               	movlw	high _motorR
  7029   003FC6  6E17               	movwf	(stop@mR+1)^0,c
  7030   003FC8  ECE7  F01F         	call	_stop	;wreg free
  7031   003FCC  0012               	return		;funcret
  7032   003FCE                     __end_of_RetryMove:
  7033                           	callstack 0
  7034                           
  7035 ;; *************** function _fullSpeedAhead *****************
  7036 ;; Defined at:
  7037 ;;		line 146 in file "dc_motor.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7040 ;;		 -> motorL(9), 
  7041 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7042 ;;		 -> motorR(9), 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      void 
  7047 ;; Registers used:
  7048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;Total ram usage:        6 bytes
  7059 ;; Hardware stack levels used: 1
  7060 ;; Hardware stack levels required when called: 3
  7061 ;; This function calls:
  7062 ;;		_setMotorPWM
  7063 ;; This function is called by:
  7064 ;;		_main
  7065 ;;		_ForwardOneBlock
  7066 ;;		_Forwardhalfblock
  7067 ;;		_RetryMove
  7068 ;;		_go_Home
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text47
  7073   003CEA                     __ptext47:
  7074                           	callstack 0
  7075   003CEA                     _fullSpeedAhead:
  7076                           	callstack 26
  7077   003CEA                     
  7078                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  7079   003CEA  EE20 F001          	lfsr	2,1
  7080   003CEE  5014               	movf	fullSpeedAhead@mL^0,w,c
  7081   003CF0  26D9               	addwf	fsr2l,f,c
  7082   003CF2  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  7083   003CF4  22DA               	addwfc	fsr2h,f,c
  7084   003CF6  0E01               	movlw	1
  7085   003CF8  6EDF               	movwf	indf2,c
  7086                           
  7087                           ;dc_motor.c: 150:     mR->direction =1;
  7088   003CFA  EE20 F001          	lfsr	2,1
  7089   003CFE  5016               	movf	fullSpeedAhead@mR^0,w,c
  7090   003D00  26D9               	addwf	fsr2l,f,c
  7091   003D02  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  7092   003D04  22DA               	addwfc	fsr2h,f,c
  7093   003D06  0E01               	movlw	1
  7094   003D08  6EDF               	movwf	indf2,c
  7095                           
  7096                           ;dc_motor.c: 151:     while (mL->power < power && mR->power < power){
  7097   003D0A  EFAB  F01E         	goto	l3301
  7098   003D0E                     l3293:
  7099                           
  7100                           ;dc_motor.c: 153:         mL->power+=10;
  7101   003D0E  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7102   003D12  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7103   003D16  0E0A               	movlw	10
  7104   003D18  26DF               	addwf	indf2,f,c
  7105                           
  7106                           ;dc_motor.c: 154:         mR->power+=10;
  7107   003D1A  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7108   003D1E  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7109   003D22  0E0A               	movlw	10
  7110   003D24  26DF               	addwf	indf2,f,c
  7111   003D26                     
  7112                           ;dc_motor.c: 156:         setMotorPWM(mL);
  7113   003D26  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  7114   003D2A  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  7115   003D2E  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7116   003D32                     
  7117                           ;dc_motor.c: 157:         setMotorPWM(mR);
  7118   003D32  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  7119   003D36  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  7120   003D3A  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7121   003D3E                     
  7122                           ;dc_motor.c: 159:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7123   003D3E  0E02               	movlw	2
  7124   003D40  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  7125   003D42  0EA0               	movlw	160
  7126   003D44  6E18               	movwf	??_fullSpeedAhead^0,c
  7127   003D46  0E92               	movlw	146
  7128   003D48                     u4697:
  7129   003D48  2EE8               	decfsz	wreg,f,c
  7130   003D4A  D7FE               	bra	u4697
  7131   003D4C  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  7132   003D4E  D7FC               	bra	u4697
  7133   003D50  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  7134   003D52  D7FA               	bra	u4697
  7135   003D54  D000               	nop2	
  7136   003D56                     l3301:
  7137   003D56  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  7138   003D5A  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  7139   003D5E  0E1E               	movlw	30
  7140   003D60  60DF               	cpfslt	indf2,c
  7141   003D62  EFB5  F01E         	goto	u2571
  7142   003D66  EFB7  F01E         	goto	u2570
  7143   003D6A                     u2571:
  7144   003D6A  EFC3  F01E         	goto	l516
  7145   003D6E                     u2570:
  7146   003D6E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  7147   003D72  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  7148   003D76  0E1D               	movlw	29
  7149   003D78  64DF               	cpfsgt	indf2,c
  7150   003D7A  EFC1  F01E         	goto	u2581
  7151   003D7E  EFC3  F01E         	goto	u2580
  7152   003D82                     u2581:
  7153   003D82  EF87  F01E         	goto	l3293
  7154   003D86                     u2580:
  7155   003D86                     l516:
  7156   003D86  0012               	return		;funcret
  7157   003D88                     __end_of_fullSpeedAhead:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function _PinkMove *****************
  7161 ;; Defined at:
  7162 ;;		line 268 in file "dc_motor.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7165 ;;		 -> motorL(9), 
  7166 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7167 ;;		 -> motorR(9), 
  7168 ;; Auto vars:     Size  Location     Type
  7169 ;;		None
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      void 
  7172 ;; Registers used:
  7173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;Total ram usage:        4 bytes
  7184 ;; Hardware stack levels used: 1
  7185 ;; Hardware stack levels required when called: 5
  7186 ;; This function calls:
  7187 ;;		_reverseDetect
  7188 ;;		_reverseOneBlock
  7189 ;;		_turnLeft45
  7190 ;; This function is called by:
  7191 ;;		_main
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text48
  7196   004620                     __ptext48:
  7197                           	callstack 0
  7198   004620                     _PinkMove:
  7199                           	callstack 25
  7200   004620                     
  7201                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  7202   004620  0EF5               	movlw	low _motorL
  7203   004622  6E1A               	movwf	reverseDetect@mL^0,c
  7204   004624  0E00               	movlw	high _motorL
  7205   004626  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7206   004628  0EBE               	movlw	low _motorR
  7207   00462A  6E1C               	movwf	reverseDetect@mR^0,c
  7208   00462C  0E01               	movlw	high _motorR
  7209   00462E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7210   004630  ECBE  F021         	call	_reverseDetect	;wreg free
  7211                           
  7212                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  7213   004634  0EF5               	movlw	low _motorL
  7214   004636  6E1A               	movwf	reverseOneBlock@mL^0,c
  7215   004638  0E00               	movlw	high _motorL
  7216   00463A  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7217   00463C  0EBE               	movlw	low _motorR
  7218   00463E  6E1C               	movwf	reverseOneBlock@mR^0,c
  7219   004640  0E01               	movlw	high _motorR
  7220   004642  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7221   004644  EC91  F021         	call	_reverseOneBlock	;wreg free
  7222                           
  7223                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  7224   004648  0EF5               	movlw	low _motorL
  7225   00464A  6E1A               	movwf	turnLeft45@mL^0,c
  7226   00464C  0E00               	movlw	high _motorL
  7227   00464E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7228   004650  0EBE               	movlw	low _motorR
  7229   004652  6E1C               	movwf	turnLeft45@mR^0,c
  7230   004654  0E01               	movlw	high _motorR
  7231   004656  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7232   004658  EC17  F022         	call	_turnLeft45	;wreg free
  7233                           
  7234                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  7235   00465C  0EF5               	movlw	low _motorL
  7236   00465E  6E1A               	movwf	turnLeft45@mL^0,c
  7237   004660  0E00               	movlw	high _motorL
  7238   004662  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7239   004664  0EBE               	movlw	low _motorR
  7240   004666  6E1C               	movwf	turnLeft45@mR^0,c
  7241   004668  0E01               	movlw	high _motorR
  7242   00466A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7243   00466C  EC17  F022         	call	_turnLeft45	;wreg free
  7244   004670  0012               	return		;funcret
  7245   004672                     __end_of_PinkMove:
  7246                           	callstack 0
  7247                           
  7248 ;; *************** function _turnLeft45 *****************
  7249 ;; Defined at:
  7250 ;;		line 188 in file "dc_motor.c"
  7251 ;; Parameters:    Size  Location     Type
  7252 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7253 ;;		 -> motorL(9), 
  7254 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7255 ;;		 -> motorR(9), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;		None
  7258 ;; Return value:  Size  Location     Type
  7259 ;;                  1    wreg      void 
  7260 ;; Registers used:
  7261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7267 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7270 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;Total ram usage:        6 bytes
  7272 ;; Hardware stack levels used: 1
  7273 ;; Hardware stack levels required when called: 4
  7274 ;; This function calls:
  7275 ;;		_stop
  7276 ;;		_turnLeft
  7277 ;; This function is called by:
  7278 ;;		_GreenMove
  7279 ;;		_PinkMove
  7280 ;;		_LightBlueMove
  7281 ;;		_ReverseYellow
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           	psect	text49
  7286   00442E                     __ptext49:
  7287                           	callstack 0
  7288   00442E                     _turnLeft45:
  7289                           	callstack 24
  7290   00442E                     
  7291                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  7292   00442E  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7293   004432  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7294   004436  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7295   00443A  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7296   00443E  ECC4  F01E         	call	_turnLeft	;wreg free
  7297   004442                     
  7298                           ;dc_motor.c: 190:     _delay((unsigned long)((Turn45Delay)*(64000000/4000.0)));
  7299   004442  0E12               	movlw	18
  7300   004444  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7301   004446  0EDC               	movlw	220
  7302   004448  6E1E               	movwf	??_turnLeft45^0,c
  7303   00444A  0E60               	movlw	96
  7304   00444C                     u4707:
  7305   00444C  2EE8               	decfsz	wreg,f,c
  7306   00444E  D7FE               	bra	u4707
  7307   004450  2E1E               	decfsz	??_turnLeft45^0,f,c
  7308   004452  D7FC               	bra	u4707
  7309   004454  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7310   004456  D7FA               	bra	u4707
  7311   004458                     
  7312                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  7313   004458  0EF5               	movlw	low _motorL
  7314   00445A  6E14               	movwf	stop@mL^0,c
  7315   00445C  0E00               	movlw	high _motorL
  7316   00445E  6E15               	movwf	(stop@mL+1)^0,c
  7317   004460  0EBE               	movlw	low _motorR
  7318   004462  6E16               	movwf	stop@mR^0,c
  7319   004464  0E01               	movlw	high _motorR
  7320   004466  6E17               	movwf	(stop@mR+1)^0,c
  7321   004468  ECE7  F01F         	call	_stop	;wreg free
  7322                           
  7323                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7324   00446C  0E52               	movlw	82
  7325   00446E  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7326   004470  0E2B               	movlw	43
  7327   004472  6E1E               	movwf	??_turnLeft45^0,c
  7328   004474  0E00               	movlw	0
  7329   004476                     u4717:
  7330   004476  2EE8               	decfsz	wreg,f,c
  7331   004478  D7FE               	bra	u4717
  7332   00447A  2E1E               	decfsz	??_turnLeft45^0,f,c
  7333   00447C  D7FC               	bra	u4717
  7334   00447E  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7335   004480  D7FA               	bra	u4717
  7336   004482  D000               	nop2	
  7337   004484  0012               	return		;funcret
  7338   004486                     __end_of_turnLeft45:
  7339                           	callstack 0
  7340                           
  7341 ;; *************** function _turnLeft *****************
  7342 ;; Defined at:
  7343 ;;		line 110 in file "dc_motor.c"
  7344 ;; Parameters:    Size  Location     Type
  7345 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7346 ;;		 -> motorL(9), 
  7347 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7348 ;;		 -> motorR(9), 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      void 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7362 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;Total ram usage:        6 bytes
  7365 ;; Hardware stack levels used: 1
  7366 ;; Hardware stack levels required when called: 3
  7367 ;; This function calls:
  7368 ;;		_setMotorPWM
  7369 ;; This function is called by:
  7370 ;;		_turnLeft45
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text50
  7375   003D88                     __ptext50:
  7376                           	callstack 0
  7377   003D88                     _turnLeft:
  7378                           	callstack 24
  7379   003D88                     
  7380                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  7381   003D88  EE20 F001          	lfsr	2,1
  7382   003D8C  5014               	movf	turnLeft@mL^0,w,c
  7383   003D8E  26D9               	addwf	fsr2l,f,c
  7384   003D90  5015               	movf	(turnLeft@mL+1)^0,w,c
  7385   003D92  22DA               	addwfc	fsr2h,f,c
  7386   003D94  0E00               	movlw	0
  7387   003D96  6EDF               	movwf	indf2,c
  7388                           
  7389                           ;dc_motor.c: 113:     mR->direction =1;
  7390   003D98  EE20 F001          	lfsr	2,1
  7391   003D9C  5016               	movf	turnLeft@mR^0,w,c
  7392   003D9E  26D9               	addwf	fsr2l,f,c
  7393   003DA0  5017               	movf	(turnLeft@mR+1)^0,w,c
  7394   003DA2  22DA               	addwfc	fsr2h,f,c
  7395   003DA4  0E01               	movlw	1
  7396   003DA6  6EDF               	movwf	indf2,c
  7397                           
  7398                           ;dc_motor.c: 115:     while(mL->power<power && mR->power<power){
  7399   003DA8  EFFA  F01E         	goto	l3329
  7400   003DAC                     l3321:
  7401                           
  7402                           ;dc_motor.c: 117:         mL->power+=10;
  7403   003DAC  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7404   003DB0  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7405   003DB4  0E0A               	movlw	10
  7406   003DB6  26DF               	addwf	indf2,f,c
  7407                           
  7408                           ;dc_motor.c: 118:         mR->power+=10;
  7409   003DB8  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7410   003DBC  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7411   003DC0  0E0A               	movlw	10
  7412   003DC2  26DF               	addwf	indf2,f,c
  7413   003DC4                     
  7414                           ;dc_motor.c: 120:         setMotorPWM(mL);
  7415   003DC4  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7416   003DC8  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7417   003DCC  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7418   003DD0                     
  7419                           ;dc_motor.c: 121:         setMotorPWM(mR);
  7420   003DD0  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7421   003DD4  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7422   003DD8  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7423   003DDC                     
  7424                           ;dc_motor.c: 123:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7425   003DDC  0E02               	movlw	2
  7426   003DDE  6E19               	movwf	(??_turnLeft+1)^0,c
  7427   003DE0  0EA0               	movlw	160
  7428   003DE2  6E18               	movwf	??_turnLeft^0,c
  7429   003DE4  0E92               	movlw	146
  7430   003DE6                     u4727:
  7431   003DE6  2EE8               	decfsz	wreg,f,c
  7432   003DE8  D7FE               	bra	u4727
  7433   003DEA  2E18               	decfsz	??_turnLeft^0,f,c
  7434   003DEC  D7FC               	bra	u4727
  7435   003DEE  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7436   003DF0  D7FA               	bra	u4727
  7437   003DF2  D000               	nop2	
  7438   003DF4                     l3329:
  7439   003DF4  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7440   003DF8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7441   003DFC  0E1E               	movlw	30
  7442   003DFE  60DF               	cpfslt	indf2,c
  7443   003E00  EF04  F01F         	goto	u2611
  7444   003E04  EF06  F01F         	goto	u2610
  7445   003E08                     u2611:
  7446   003E08  EF12  F01F         	goto	l500
  7447   003E0C                     u2610:
  7448   003E0C  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7449   003E10  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7450   003E14  0E1D               	movlw	29
  7451   003E16  64DF               	cpfsgt	indf2,c
  7452   003E18  EF10  F01F         	goto	u2621
  7453   003E1C  EF12  F01F         	goto	u2620
  7454   003E20                     u2621:
  7455   003E20  EFD6  F01E         	goto	l3321
  7456   003E24                     u2620:
  7457   003E24                     l500:
  7458   003E24  0012               	return		;funcret
  7459   003E26                     __end_of_turnLeft:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _reverseOneBlock *****************
  7463 ;; Defined at:
  7464 ;;		line 202 in file "dc_motor.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7467 ;;		 -> motorL(9), 
  7468 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7469 ;;		 -> motorR(9), 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;Total ram usage:        6 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 4
  7488 ;; This function calls:
  7489 ;;		_fullSpeedBack
  7490 ;;		_stop
  7491 ;; This function is called by:
  7492 ;;		_YellowMove
  7493 ;;		_PinkMove
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text51
  7498   004322                     __ptext51:
  7499                           	callstack 0
  7500   004322                     _reverseOneBlock:
  7501                           	callstack 25
  7502   004322                     
  7503                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  7504   004322  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7505   004326  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7506   00432A  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7507   00432E  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7508   004332  EC13  F01F         	call	_fullSpeedBack	;wreg free
  7509   004336                     
  7510                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7511   004336  0E52               	movlw	82
  7512   004338  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7513   00433A  0E2B               	movlw	43
  7514   00433C  6E1E               	movwf	??_reverseOneBlock^0,c
  7515   00433E  0E00               	movlw	0
  7516   004340                     u4737:
  7517   004340  2EE8               	decfsz	wreg,f,c
  7518   004342  D7FE               	bra	u4737
  7519   004344  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7520   004346  D7FC               	bra	u4737
  7521   004348  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7522   00434A  D7FA               	bra	u4737
  7523   00434C  D000               	nop2	
  7524   00434E                     
  7525                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  7526   00434E  0EF5               	movlw	low _motorL
  7527   004350  6E14               	movwf	stop@mL^0,c
  7528   004352  0E00               	movlw	high _motorL
  7529   004354  6E15               	movwf	(stop@mL+1)^0,c
  7530   004356  0EBE               	movlw	low _motorR
  7531   004358  6E16               	movwf	stop@mR^0,c
  7532   00435A  0E01               	movlw	high _motorR
  7533   00435C  6E17               	movwf	(stop@mR+1)^0,c
  7534   00435E  ECE7  F01F         	call	_stop	;wreg free
  7535                           
  7536                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7537   004362  0E52               	movlw	82
  7538   004364  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7539   004366  0E2B               	movlw	43
  7540   004368  6E1E               	movwf	??_reverseOneBlock^0,c
  7541   00436A  0E00               	movlw	0
  7542   00436C                     u4747:
  7543   00436C  2EE8               	decfsz	wreg,f,c
  7544   00436E  D7FE               	bra	u4747
  7545   004370  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7546   004372  D7FC               	bra	u4747
  7547   004374  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  7548   004376  D7FA               	bra	u4747
  7549   004378  D000               	nop2	
  7550   00437A  0012               	return		;funcret
  7551   00437C                     __end_of_reverseOneBlock:
  7552                           	callstack 0
  7553                           
  7554 ;; *************** function _reverseDetect *****************
  7555 ;; Defined at:
  7556 ;;		line 195 in file "dc_motor.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7559 ;;		 -> motorL(9), 
  7560 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7561 ;;		 -> motorR(9), 
  7562 ;; Auto vars:     Size  Location     Type
  7563 ;;		None
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  1    wreg      void 
  7566 ;; Registers used:
  7567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7573 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;Total ram usage:        6 bytes
  7578 ;; Hardware stack levels used: 1
  7579 ;; Hardware stack levels required when called: 4
  7580 ;; This function calls:
  7581 ;;		_fullSpeedBack
  7582 ;;		_stop
  7583 ;; This function is called by:
  7584 ;;		_RedMove
  7585 ;;		_GreenMove
  7586 ;;		_BlueMove
  7587 ;;		_YellowMove
  7588 ;;		_PinkMove
  7589 ;;		_OrangeMove
  7590 ;;		_LightBlueMove
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           	psect	text52
  7595   00437C                     __ptext52:
  7596                           	callstack 0
  7597   00437C                     _reverseDetect:
  7598                           	callstack 24
  7599   00437C                     
  7600                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
  7601   00437C  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  7602   004380  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  7603   004384  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  7604   004388  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  7605   00438C  EC13  F01F         	call	_fullSpeedBack	;wreg free
  7606   004390                     
  7607                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
  7608   004390  0E11               	movlw	17
  7609   004392  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7610   004394  0E3C               	movlw	60
  7611   004396  6E1E               	movwf	??_reverseDetect^0,c
  7612   004398  0ECB               	movlw	203
  7613   00439A                     u4757:
  7614   00439A  2EE8               	decfsz	wreg,f,c
  7615   00439C  D7FE               	bra	u4757
  7616   00439E  2E1E               	decfsz	??_reverseDetect^0,f,c
  7617   0043A0  D7FC               	bra	u4757
  7618   0043A2  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7619   0043A4  D7FA               	bra	u4757
  7620   0043A6  F000               	nop	
  7621   0043A8                     
  7622                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
  7623   0043A8  0EF5               	movlw	low _motorL
  7624   0043AA  6E14               	movwf	stop@mL^0,c
  7625   0043AC  0E00               	movlw	high _motorL
  7626   0043AE  6E15               	movwf	(stop@mL+1)^0,c
  7627   0043B0  0EBE               	movlw	low _motorR
  7628   0043B2  6E16               	movwf	stop@mR^0,c
  7629   0043B4  0E01               	movlw	high _motorR
  7630   0043B6  6E17               	movwf	(stop@mR+1)^0,c
  7631   0043B8  ECE7  F01F         	call	_stop	;wreg free
  7632                           
  7633                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7634   0043BC  0E52               	movlw	82
  7635   0043BE  6E1F               	movwf	(??_reverseDetect+1)^0,c
  7636   0043C0  0E2B               	movlw	43
  7637   0043C2  6E1E               	movwf	??_reverseDetect^0,c
  7638   0043C4  0E00               	movlw	0
  7639   0043C6                     u4767:
  7640   0043C6  2EE8               	decfsz	wreg,f,c
  7641   0043C8  D7FE               	bra	u4767
  7642   0043CA  2E1E               	decfsz	??_reverseDetect^0,f,c
  7643   0043CC  D7FC               	bra	u4767
  7644   0043CE  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  7645   0043D0  D7FA               	bra	u4767
  7646   0043D2  D000               	nop2	
  7647   0043D4  0012               	return		;funcret
  7648   0043D6                     __end_of_reverseDetect:
  7649                           	callstack 0
  7650                           
  7651 ;; *************** function _stop *****************
  7652 ;; Defined at:
  7653 ;;		line 92 in file "dc_motor.c"
  7654 ;; Parameters:    Size  Location     Type
  7655 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7656 ;;		 -> motorL(9), 
  7657 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7658 ;;		 -> motorR(9), 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7674 ;;Total ram usage:        6 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 3
  7677 ;; This function calls:
  7678 ;;		_setMotorPWM
  7679 ;; This function is called by:
  7680 ;;		_main
  7681 ;;		_turnRight45
  7682 ;;		_turnLeft45
  7683 ;;		_reverseDetect
  7684 ;;		_reverseOneBlock
  7685 ;;		_ForwardOneBlock
  7686 ;;		_Forwardhalfblock
  7687 ;;		_RetryMove
  7688 ;;		_Backhalfblock
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text53
  7693   003FCE                     __ptext53:
  7694                           	callstack 0
  7695   003FCE                     _stop:
  7696                           	callstack 27
  7697   003FCE                     
  7698                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
  7699   003FCE  EF0D  F020         	goto	l3315
  7700   003FD2                     l3307:
  7701                           
  7702                           ;dc_motor.c: 96:         mL->power-=10;
  7703   003FD2  C014  FFD9         	movff	stop@mL,fsr2l
  7704   003FD6  C015  FFDA         	movff	stop@mL+1,fsr2h
  7705   003FDA  0E0A               	movlw	10
  7706   003FDC  5EDF               	subwf	indf2,f,c
  7707                           
  7708                           ;dc_motor.c: 97:         mR->power-=10;
  7709   003FDE  C016  FFD9         	movff	stop@mR,fsr2l
  7710   003FE2  C017  FFDA         	movff	stop@mR+1,fsr2h
  7711   003FE6  0E0A               	movlw	10
  7712   003FE8  5EDF               	subwf	indf2,f,c
  7713   003FEA                     
  7714                           ;dc_motor.c: 102:         setMotorPWM(mL);
  7715   003FEA  C014  F00E         	movff	stop@mL,setMotorPWM@m
  7716   003FEE  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  7717   003FF2  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7718   003FF6                     
  7719                           ;dc_motor.c: 103:         setMotorPWM(mR);
  7720   003FF6  C016  F00E         	movff	stop@mR,setMotorPWM@m
  7721   003FFA  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  7722   003FFE  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7723   004002                     
  7724                           ;dc_motor.c: 105:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7725   004002  0E02               	movlw	2
  7726   004004  6E19               	movwf	(??_stop+1)^0,c
  7727   004006  0EA0               	movlw	160
  7728   004008  6E18               	movwf	??_stop^0,c
  7729   00400A  0E92               	movlw	146
  7730   00400C                     u4777:
  7731   00400C  2EE8               	decfsz	wreg,f,c
  7732   00400E  D7FE               	bra	u4777
  7733   004010  2E18               	decfsz	??_stop^0,f,c
  7734   004012  D7FC               	bra	u4777
  7735   004014  2E19               	decfsz	(??_stop+1)^0,f,c
  7736   004016  D7FA               	bra	u4777
  7737   004018  D000               	nop2	
  7738   00401A                     l3315:
  7739                           
  7740                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
  7741   00401A  C014  FFD9         	movff	stop@mL,fsr2l
  7742   00401E  C015  FFDA         	movff	stop@mL+1,fsr2h
  7743   004022  50DF               	movf	indf2,w,c
  7744   004024  A4D8               	btfss	status,2,c
  7745   004026  EF17  F020         	goto	u2591
  7746   00402A  EF19  F020         	goto	u2590
  7747   00402E                     u2591:
  7748   00402E  EFE9  F01F         	goto	l3307
  7749   004032                     u2590:
  7750   004032  C016  FFD9         	movff	stop@mR,fsr2l
  7751   004036  C017  FFDA         	movff	stop@mR+1,fsr2h
  7752   00403A  50DF               	movf	indf2,w,c
  7753   00403C  A4D8               	btfss	status,2,c
  7754   00403E  EF23  F020         	goto	u2601
  7755   004042  EF25  F020         	goto	u2600
  7756   004046                     u2601:
  7757   004046  EFE9  F01F         	goto	l3307
  7758   00404A                     u2600:
  7759   00404A  0012               	return		;funcret
  7760   00404C                     __end_of_stop:
  7761                           	callstack 0
  7762                           
  7763 ;; *************** function _fullSpeedBack *****************
  7764 ;; Defined at:
  7765 ;;		line 164 in file "dc_motor.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7768 ;;		 -> motorL(9), 
  7769 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7770 ;;		 -> motorR(9), 
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;		None
  7773 ;; Return value:  Size  Location     Type
  7774 ;;                  1    wreg      void 
  7775 ;; Registers used:
  7776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7777 ;; Tracked objects:
  7778 ;;		On entry : 0/0
  7779 ;;		On exit  : 0/0
  7780 ;;		Unchanged: 0/0
  7781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;Total ram usage:        6 bytes
  7787 ;; Hardware stack levels used: 1
  7788 ;; Hardware stack levels required when called: 3
  7789 ;; This function calls:
  7790 ;;		_setMotorPWM
  7791 ;; This function is called by:
  7792 ;;		_reverseDetect
  7793 ;;		_reverseOneBlock
  7794 ;;		_RetryMove
  7795 ;;		_Backhalfblock
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text54
  7800   003E26                     __ptext54:
  7801                           	callstack 0
  7802   003E26                     _fullSpeedBack:
  7803                           	callstack 24
  7804   003E26                     
  7805                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
  7806   003E26  EE20 F001          	lfsr	2,1
  7807   003E2A  5014               	movf	fullSpeedBack@mL^0,w,c
  7808   003E2C  26D9               	addwf	fsr2l,f,c
  7809   003E2E  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  7810   003E30  22DA               	addwfc	fsr2h,f,c
  7811   003E32  0E00               	movlw	0
  7812   003E34  6EDF               	movwf	indf2,c
  7813                           
  7814                           ;dc_motor.c: 168:     mR->direction =0;
  7815   003E36  EE20 F001          	lfsr	2,1
  7816   003E3A  5016               	movf	fullSpeedBack@mR^0,w,c
  7817   003E3C  26D9               	addwf	fsr2l,f,c
  7818   003E3E  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  7819   003E40  22DA               	addwfc	fsr2h,f,c
  7820   003E42  0E00               	movlw	0
  7821   003E44  6EDF               	movwf	indf2,c
  7822                           
  7823                           ;dc_motor.c: 169:     while (mL->power < power && mR->power < power){
  7824   003E46  EF49  F01F         	goto	l3357
  7825   003E4A                     l3349:
  7826                           
  7827                           ;dc_motor.c: 171:         mL->power+=10;
  7828   003E4A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7829   003E4E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7830   003E52  0E0A               	movlw	10
  7831   003E54  26DF               	addwf	indf2,f,c
  7832                           
  7833                           ;dc_motor.c: 172:         mR->power+=10;
  7834   003E56  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7835   003E5A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7836   003E5E  0E0A               	movlw	10
  7837   003E60  26DF               	addwf	indf2,f,c
  7838   003E62                     
  7839                           ;dc_motor.c: 174:         setMotorPWM(mL);
  7840   003E62  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  7841   003E66  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  7842   003E6A  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7843   003E6E                     
  7844                           ;dc_motor.c: 175:         setMotorPWM(mR);
  7845   003E6E  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  7846   003E72  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  7847   003E76  ECDA  F01A         	call	_setMotorPWM	;wreg free
  7848   003E7A                     
  7849                           ;dc_motor.c: 177:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7850   003E7A  0E02               	movlw	2
  7851   003E7C  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  7852   003E7E  0EA0               	movlw	160
  7853   003E80  6E18               	movwf	??_fullSpeedBack^0,c
  7854   003E82  0E92               	movlw	146
  7855   003E84                     u4787:
  7856   003E84  2EE8               	decfsz	wreg,f,c
  7857   003E86  D7FE               	bra	u4787
  7858   003E88  2E18               	decfsz	??_fullSpeedBack^0,f,c
  7859   003E8A  D7FC               	bra	u4787
  7860   003E8C  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  7861   003E8E  D7FA               	bra	u4787
  7862   003E90  D000               	nop2	
  7863   003E92                     l3357:
  7864   003E92  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  7865   003E96  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  7866   003E9A  0E1E               	movlw	30
  7867   003E9C  60DF               	cpfslt	indf2,c
  7868   003E9E  EF53  F01F         	goto	u2651
  7869   003EA2  EF55  F01F         	goto	u2650
  7870   003EA6                     u2651:
  7871   003EA6  EF61  F01F         	goto	l524
  7872   003EAA                     u2650:
  7873   003EAA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  7874   003EAE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  7875   003EB2  0E1D               	movlw	29
  7876   003EB4  64DF               	cpfsgt	indf2,c
  7877   003EB6  EF5F  F01F         	goto	u2661
  7878   003EBA  EF61  F01F         	goto	u2660
  7879   003EBE                     u2661:
  7880   003EBE  EF25  F01F         	goto	l3349
  7881   003EC2                     u2660:
  7882   003EC2                     l524:
  7883   003EC2  0012               	return		;funcret
  7884   003EC4                     __end_of_fullSpeedBack:
  7885                           	callstack 0
  7886                           
  7887 ;; *************** function _setMotorPWM *****************
  7888 ;; Defined at:
  7889 ;;		line 67 in file "dc_motor.c"
  7890 ;; Parameters:    Size  Location     Type
  7891 ;;  m               2   13[COMRAM] PTR struct DC_motor
  7892 ;;		 -> motorR(9), motorL(9), 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;  negDuty         1   18[COMRAM] unsigned char 
  7895 ;;  posDuty         1   17[COMRAM] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        6 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 2
  7912 ;; This function calls:
  7913 ;;		___lwdiv
  7914 ;;		___wmul
  7915 ;; This function is called by:
  7916 ;;		_stop
  7917 ;;		_turnLeft
  7918 ;;		_turnRight
  7919 ;;		_fullSpeedAhead
  7920 ;;		_fullSpeedBack
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text55
  7925   0035B4                     __ptext55:
  7926                           	callstack 0
  7927   0035B4                     _setMotorPWM:
  7928                           	callstack 27
  7929   0035B4                     
  7930                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
  7931   0035B4  EE20 F002          	lfsr	2,2
  7932   0035B8  500E               	movf	setMotorPWM@m^0,w,c
  7933   0035BA  26D9               	addwf	fsr2l,f,c
  7934   0035BC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7935   0035BE  22DA               	addwfc	fsr2h,f,c
  7936   0035C0  50DF               	movf	indf2,w,c
  7937   0035C2  B4D8               	btfsc	status,2,c
  7938   0035C4  EFE6  F01A         	goto	u2371
  7939   0035C8  EFE8  F01A         	goto	u2370
  7940   0035CC                     u2371:
  7941   0035CC  EF1C  F01B         	goto	l3179
  7942   0035D0                     u2370:
  7943   0035D0                     
  7944                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7945   0035D0  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7946   0035D4  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7947   0035D8  50DF               	movf	indf2,w,c
  7948   0035DA  6E10               	movwf	??_setMotorPWM^0,c
  7949   0035DC  5010               	movf	??_setMotorPWM^0,w,c
  7950   0035DE  6E01               	movwf	___wmul@multiplier^0,c
  7951   0035E0  6A02               	clrf	(___wmul@multiplier+1)^0,c
  7952   0035E2  EE20 F003          	lfsr	2,3
  7953   0035E6  500E               	movf	setMotorPWM@m^0,w,c
  7954   0035E8  26D9               	addwf	fsr2l,f,c
  7955   0035EA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7956   0035EC  22DA               	addwfc	fsr2h,f,c
  7957   0035EE  CFDE F003          	movff	postinc2,___wmul@multiplicand
  7958   0035F2  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  7959   0035F6  EC56  F025         	call	___wmul	;wreg free
  7960   0035FA  C001  F007         	movff	?___wmul,___lwdiv@dividend
  7961   0035FE  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  7962   003602  0E00               	movlw	0
  7963   003604  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7964   003606  0E64               	movlw	100
  7965   003608  6E09               	movwf	___lwdiv@divisor^0,c
  7966   00360A  EC63  F020         	call	___lwdiv	;wreg free
  7967   00360E  EE20 F003          	lfsr	2,3
  7968   003612  500E               	movf	setMotorPWM@m^0,w,c
  7969   003614  26D9               	addwf	fsr2l,f,c
  7970   003616  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7971   003618  22DA               	addwfc	fsr2h,f,c
  7972   00361A  50DF               	movf	indf2,w,c
  7973   00361C  6E11               	movwf	(??_setMotorPWM+1)^0,c
  7974   00361E  5007               	movf	?___lwdiv^0,w,c
  7975   003620  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  7976   003622  6E12               	movwf	setMotorPWM@posDuty^0,c
  7977   003624                     
  7978                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
  7979   003624  EE20 F003          	lfsr	2,3
  7980   003628  500E               	movf	setMotorPWM@m^0,w,c
  7981   00362A  26D9               	addwf	fsr2l,f,c
  7982   00362C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  7983   00362E  22DA               	addwfc	fsr2h,f,c
  7984   003630  50DF               	movf	indf2,w,c
  7985   003632  6E13               	movwf	setMotorPWM@negDuty^0,c
  7986                           
  7987                           ;dc_motor.c: 74:     }
  7988   003634  EF3F  F01B         	goto	l3183
  7989   003638                     l3179:
  7990                           
  7991                           ;dc_motor.c: 76:         posDuty=0;
  7992   003638  0E00               	movlw	0
  7993   00363A  6E12               	movwf	setMotorPWM@posDuty^0,c
  7994   00363C                     
  7995                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7996   00363C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  7997   003640  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7998   003644  50DF               	movf	indf2,w,c
  7999   003646  6E10               	movwf	??_setMotorPWM^0,c
  8000   003648  5010               	movf	??_setMotorPWM^0,w,c
  8001   00364A  6E01               	movwf	___wmul@multiplier^0,c
  8002   00364C  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8003   00364E  EE20 F003          	lfsr	2,3
  8004   003652  500E               	movf	setMotorPWM@m^0,w,c
  8005   003654  26D9               	addwf	fsr2l,f,c
  8006   003656  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8007   003658  22DA               	addwfc	fsr2h,f,c
  8008   00365A  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8009   00365E  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8010   003662  EC56  F025         	call	___wmul	;wreg free
  8011   003666  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8012   00366A  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8013   00366E  0E00               	movlw	0
  8014   003670  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8015   003672  0E64               	movlw	100
  8016   003674  6E09               	movwf	___lwdiv@divisor^0,c
  8017   003676  EC63  F020         	call	___lwdiv	;wreg free
  8018   00367A  5007               	movf	?___lwdiv^0,w,c
  8019   00367C  6E13               	movwf	setMotorPWM@negDuty^0,c
  8020   00367E                     l3183:
  8021                           
  8022                           ;dc_motor.c: 80:     if (m->direction) {
  8023   00367E  EE20 F001          	lfsr	2,1
  8024   003682  500E               	movf	setMotorPWM@m^0,w,c
  8025   003684  26D9               	addwf	fsr2l,f,c
  8026   003686  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8027   003688  22DA               	addwfc	fsr2h,f,c
  8028   00368A  50DF               	movf	indf2,w,c
  8029   00368C  B4D8               	btfsc	status,2,c
  8030   00368E  EF4B  F01B         	goto	u2381
  8031   003692  EF4D  F01B         	goto	u2380
  8032   003696                     u2381:
  8033   003696  EF6F  F01B         	goto	l3187
  8034   00369A                     u2380:
  8035   00369A                     
  8036                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
  8037   00369A  EE20 F005          	lfsr	2,5
  8038   00369E  500E               	movf	setMotorPWM@m^0,w,c
  8039   0036A0  26D9               	addwf	fsr2l,f,c
  8040   0036A2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8041   0036A4  22DA               	addwfc	fsr2h,f,c
  8042   0036A6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8043   0036AA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8044   0036AE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8045   0036B2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8046   0036B6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8047                           
  8048                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
  8049   0036BA  EE20 F007          	lfsr	2,7
  8050   0036BE  500E               	movf	setMotorPWM@m^0,w,c
  8051   0036C0  26D9               	addwf	fsr2l,f,c
  8052   0036C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8053   0036C4  22DA               	addwfc	fsr2h,f,c
  8054   0036C6  CFDE F010          	movff	postinc2,??_setMotorPWM
  8055   0036CA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8056   0036CE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8057   0036D2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8058   0036D6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8059                           
  8060                           ;dc_motor.c: 85:     } else {
  8061   0036DA  EF8F  F01B         	goto	l486
  8062   0036DE                     l3187:
  8063                           
  8064                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
  8065   0036DE  EE20 F005          	lfsr	2,5
  8066   0036E2  500E               	movf	setMotorPWM@m^0,w,c
  8067   0036E4  26D9               	addwf	fsr2l,f,c
  8068   0036E6  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8069   0036E8  22DA               	addwfc	fsr2h,f,c
  8070   0036EA  CFDE F010          	movff	postinc2,??_setMotorPWM
  8071   0036EE  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8072   0036F2  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8073   0036F6  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8074   0036FA  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8075                           
  8076                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
  8077   0036FE  EE20 F007          	lfsr	2,7
  8078   003702  500E               	movf	setMotorPWM@m^0,w,c
  8079   003704  26D9               	addwf	fsr2l,f,c
  8080   003706  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8081   003708  22DA               	addwfc	fsr2h,f,c
  8082   00370A  CFDE F010          	movff	postinc2,??_setMotorPWM
  8083   00370E  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8084   003712  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8085   003716  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8086   00371A  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8087   00371E                     l486:
  8088   00371E  0012               	return		;funcret
  8089   003720                     __end_of_setMotorPWM:
  8090                           	callstack 0
  8091                           
  8092 ;; *************** function ___wmul *****************
  8093 ;; Defined at:
  8094 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8095 ;; Parameters:    Size  Location     Type
  8096 ;;  multiplier      2    0[COMRAM] unsigned int 
  8097 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  product         2    4[COMRAM] unsigned int 
  8100 ;; Return value:  Size  Location     Type
  8101 ;;                  2    0[COMRAM] unsigned int 
  8102 ;; Registers used:
  8103 ;;		wreg, status,2, status,0, prodl, prodh
  8104 ;; Tracked objects:
  8105 ;;		On entry : 0/0
  8106 ;;		On exit  : 0/0
  8107 ;;		Unchanged: 0/0
  8108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;Total ram usage:        6 bytes
  8114 ;; Hardware stack levels used: 1
  8115 ;; Hardware stack levels required when called: 1
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_setMotorPWM
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text56
  8124   004AAC                     __ptext56:
  8125                           	callstack 0
  8126   004AAC                     ___wmul:
  8127                           	callstack 27
  8128   004AAC  5001               	movf	___wmul@multiplier^0,w,c
  8129   004AAE  0203               	mulwf	___wmul@multiplicand^0,c
  8130   004AB0  CFF3 F005          	movff	prodl,___wmul@product
  8131   004AB4  CFF4 F006          	movff	prodh,___wmul@product+1
  8132   004AB8  5001               	movf	___wmul@multiplier^0,w,c
  8133   004ABA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8134   004ABC  50F3               	movf	243,w,c
  8135   004ABE  2606               	addwf	(___wmul@product+1)^0,f,c
  8136   004AC0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8137   004AC2  0203               	mulwf	___wmul@multiplicand^0,c
  8138   004AC4  50F3               	movf	243,w,c
  8139   004AC6  2606               	addwf	(___wmul@product+1)^0,f,c
  8140   004AC8  C005  F001         	movff	___wmul@product,?___wmul
  8141   004ACC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8142   004AD0  0012               	return		;funcret
  8143   004AD2                     __end_of___wmul:
  8144                           	callstack 0
  8145                           
  8146 ;; *************** function ___lwdiv *****************
  8147 ;; Defined at:
  8148 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  dividend        2    6[COMRAM] unsigned int 
  8151 ;;  divisor         2    8[COMRAM] unsigned int 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  quotient        2   10[COMRAM] unsigned int 
  8154 ;;  counter         1   12[COMRAM] unsigned char 
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  2    6[COMRAM] unsigned int 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2, status,0
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;Total ram usage:        7 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 1
  8171 ;; This function calls:
  8172 ;;		Nothing
  8173 ;; This function is called by:
  8174 ;;		_setMotorPWM
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text57
  8179   0040C6                     __ptext57:
  8180                           	callstack 0
  8181   0040C6                     ___lwdiv:
  8182                           	callstack 27
  8183   0040C6  0E00               	movlw	0
  8184   0040C8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8185   0040CA  0E00               	movlw	0
  8186   0040CC  6E0B               	movwf	___lwdiv@quotient^0,c
  8187   0040CE  5009               	movf	___lwdiv@divisor^0,w,c
  8188   0040D0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8189   0040D2  B4D8               	btfsc	status,2,c
  8190   0040D4  EF6E  F020         	goto	u2331
  8191   0040D8  EF70  F020         	goto	u2330
  8192   0040DC                     u2331:
  8193   0040DC  EF98  F020         	goto	l1152
  8194   0040E0                     u2330:
  8195   0040E0  0E01               	movlw	1
  8196   0040E2  6E0D               	movwf	___lwdiv@counter^0,c
  8197   0040E4  EF78  F020         	goto	l3151
  8198   0040E8                     l3149:
  8199   0040E8  90D8               	bcf	status,0,c
  8200   0040EA  3609               	rlcf	___lwdiv@divisor^0,f,c
  8201   0040EC  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8202   0040EE  2A0D               	incf	___lwdiv@counter^0,f,c
  8203   0040F0                     l3151:
  8204   0040F0  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8205   0040F2  EF7D  F020         	goto	u2341
  8206   0040F6  EF7F  F020         	goto	u2340
  8207   0040FA                     u2341:
  8208   0040FA  EF74  F020         	goto	l3149
  8209   0040FE                     u2340:
  8210   0040FE                     l3153:
  8211   0040FE  90D8               	bcf	status,0,c
  8212   004100  360B               	rlcf	___lwdiv@quotient^0,f,c
  8213   004102  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8214   004104  5009               	movf	___lwdiv@divisor^0,w,c
  8215   004106  5C07               	subwf	___lwdiv@dividend^0,w,c
  8216   004108  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8217   00410A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8218   00410C  A0D8               	btfss	status,0,c
  8219   00410E  EF8B  F020         	goto	u2351
  8220   004112  EF8D  F020         	goto	u2350
  8221   004116                     u2351:
  8222   004116  EF92  F020         	goto	l3161
  8223   00411A                     u2350:
  8224   00411A  5009               	movf	___lwdiv@divisor^0,w,c
  8225   00411C  5E07               	subwf	___lwdiv@dividend^0,f,c
  8226   00411E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8227   004120  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8228   004122  800B               	bsf	___lwdiv@quotient^0,0,c
  8229   004124                     l3161:
  8230   004124  90D8               	bcf	status,0,c
  8231   004126  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8232   004128  3209               	rrcf	___lwdiv@divisor^0,f,c
  8233   00412A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8234   00412C  EF7F  F020         	goto	l3153
  8235   004130                     l1152:
  8236   004130  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8237   004134  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8238   004138  0012               	return		;funcret
  8239   00413A                     __end_of___lwdiv:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function _Interrupts_init *****************
  8243 ;; Defined at:
  8244 ;;		line 12 in file "interrupts.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;		None
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		None
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text58
  8273   004B7A                     __ptext58:
  8274                           	callstack 0
  8275   004B7A                     _Interrupts_init:
  8276                           	callstack 29
  8277   004B7A  0012               	return		;funcret
  8278   004B7C                     __end_of_Interrupts_init:
  8279                           	callstack 0
  8280                           
  8281 ;; *************** function _Colour_decider *****************
  8282 ;; Defined at:
  8283 ;;		line 125 in file "color.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;  vals            2   74[COMRAM] PTR struct RGB
  8286 ;;		 -> vals(8), 
  8287 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8288 ;;		 -> rel(12), 
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  RGB_col        12    6[BANK0 ] float [3]
  8291 ;;  Hue             4   28[BANK0 ] float 
  8292 ;;  Cmin            4   22[BANK0 ] float 
  8293 ;;  Cmax            4   18[BANK0 ] float 
  8294 ;;  i               2   26[BANK0 ] int 
  8295 ;;  Cmax_i          2    4[BANK0 ] int 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  2   74[COMRAM] int 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8308 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;Total ram usage:       38 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 3
  8312 ;; This function calls:
  8313 ;;		___fladd
  8314 ;;		___fldiv
  8315 ;;		___fleq
  8316 ;;		___flge
  8317 ;;		___flmul
  8318 ;;		___flsub
  8319 ;;		___xxtofl
  8320 ;; This function is called by:
  8321 ;;		_main
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	text59
  8326   000E26                     __ptext59:
  8327                           	callstack 0
  8328   000E26                     _Colour_decider:
  8329                           	callstack 27
  8330   000E26                     
  8331                           ;color.c: 126:     float Cmax = 0;
  8332   000E26  0E00               	movlw	0
  8333   000E28  0100               	movlb	0	; () banked
  8334   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8335   000E2C  0E00               	movlw	0
  8336   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8337   000E30  0E00               	movlw	0
  8338   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8339   000E34  0E00               	movlw	0
  8340   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8341                           
  8342                           ;color.c: 127:     float Cmin= 100000;
  8343   000E38  0E00               	movlw	0
  8344   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8345   000E3C  0E50               	movlw	80
  8346   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8347   000E40  0EC3               	movlw	195
  8348   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8349   000E44  0E47               	movlw	71
  8350   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8351                           
  8352                           ;color.c: 128:     int Cmax_i =4;
  8353   000E48  0E00               	movlw	0
  8354   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8355   000E4C  0E04               	movlw	4
  8356   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8357   000E50                     
  8358                           ; BSR set to: 0
  8359                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8360   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8361   000E54  0E0B               	movlw	11
  8362   000E56                     u3831:
  8363   000E56  6ADE               	clrf	postinc2,c
  8364   000E58  06E8               	decf	wreg,f,c
  8365   000E5A  E2FD               	bc	u3831
  8366   000E5C                     
  8367                           ; BSR set to: 0
  8368   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8369   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8370   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  8371   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8372   000E6C  0E00               	movlw	0
  8373   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8374   000E70  0EFF               	movlw	-1
  8375   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  8376   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  8377   000E76  0E01               	movlw	1
  8378   000E78  EC3C  F019         	call	___xxtofl
  8379   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8380   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8381   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8382   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8383   000E8C  EE20 F002          	lfsr	2,2
  8384   000E90  504B               	movf	Colour_decider@vals^0,w,c
  8385   000E92  26D9               	addwf	fsr2l,f,c
  8386   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8387   000E96  22DA               	addwfc	fsr2h,f,c
  8388   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8389   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8390   000EA0  0E00               	movlw	0
  8391   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8392   000EA4  0EFF               	movlw	-1
  8393   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8394   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8395   000EAA  0E01               	movlw	1
  8396   000EAC  EC3C  F019         	call	___xxtofl
  8397   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8398   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8399   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8400   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8401   000EC0  EE20 F004          	lfsr	2,4
  8402   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8403   000EC6  26D9               	addwf	fsr2l,f,c
  8404   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8405   000ECA  22DA               	addwfc	fsr2h,f,c
  8406   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8407   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8408   000ED4  0E00               	movlw	0
  8409   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8410   000ED8  0EFF               	movlw	-1
  8411   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8412   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8413   000EDE  0E01               	movlw	1
  8414   000EE0  EC3C  F019         	call	___xxtofl
  8415   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8416   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8417   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8418   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8419   000EF4                     
  8420                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8421   000EF4  0E00               	movlw	0
  8422   000EF6  0100               	movlb	0	; () banked
  8423   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8424   000EFA  0E00               	movlw	0
  8425   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  8426   000EFE                     l4199:
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8430   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  8431   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8432   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8433   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8434   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  8435   000F10  6E4F               	movwf	??_Colour_decider^0,c
  8436   000F12  0E00               	movlw	high Colour_decider@RGB_col
  8437   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  8438   000F16  90D8               	bcf	status,0,c
  8439   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8440   000F1A  6ED9               	movwf	fsr2l,c
  8441   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8442   000F1E  6EDA               	movwf	fsr2h,c
  8443   000F20  90D8               	bcf	status,0,c
  8444   000F22  36D9               	rlcf	fsr2l,f,c
  8445   000F24  36DA               	rlcf	fsr2h,f,c
  8446   000F26  504F               	movf	??_Colour_decider^0,w,c
  8447   000F28  26D9               	addwf	fsr2l,f,c
  8448   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8449   000F2C  22DA               	addwfc	fsr2h,f,c
  8450   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  8451   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  8452   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  8453   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  8454   000F3E  ECEA  F01C         	call	___flge	;wreg free
  8455   000F42  B0D8               	btfsc	status,0,c
  8456   000F44  EFA6  F007         	goto	u3841
  8457   000F48  EFA8  F007         	goto	u3840
  8458   000F4C                     u3841:
  8459   000F4C  EFC5  F007         	goto	l4205
  8460   000F50                     u3840:
  8461   000F50                     
  8462                           ;color.c: 137:             Cmax=RGB_col[i];
  8463   000F50  0E66               	movlw	low Colour_decider@RGB_col
  8464   000F52  6E4F               	movwf	??_Colour_decider^0,c
  8465   000F54  0E00               	movlw	high Colour_decider@RGB_col
  8466   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  8467   000F58  90D8               	bcf	status,0,c
  8468   000F5A  0100               	movlb	0	; () banked
  8469   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8470   000F5E  6ED9               	movwf	fsr2l,c
  8471   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8472   000F62  6EDA               	movwf	fsr2h,c
  8473   000F64  90D8               	bcf	status,0,c
  8474   000F66  36D9               	rlcf	fsr2l,f,c
  8475   000F68  36DA               	rlcf	fsr2h,f,c
  8476   000F6A  504F               	movf	??_Colour_decider^0,w,c
  8477   000F6C  26D9               	addwf	fsr2l,f,c
  8478   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  8479   000F70  22DA               	addwfc	fsr2h,f,c
  8480   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8481   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8482   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8483   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8484   000F82                     
  8485                           ; BSR set to: 0
  8486                           ;color.c: 138:             Cmax_i=i;
  8487   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8488   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8489   000F8A                     l4205:
  8490                           
  8491                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8492   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  8493   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  8494   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  8495   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  8496   000F92  90D8               	bcf	status,0,c
  8497   000F94  0100               	movlb	0	; () banked
  8498   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8499   000F98  6ED9               	movwf	fsr2l,c
  8500   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8501   000F9C  6EDA               	movwf	fsr2h,c
  8502   000F9E  90D8               	bcf	status,0,c
  8503   000FA0  36D9               	rlcf	fsr2l,f,c
  8504   000FA2  36DA               	rlcf	fsr2h,f,c
  8505   000FA4  504F               	movf	??_Colour_decider^0,w,c
  8506   000FA6  26D9               	addwf	fsr2l,f,c
  8507   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  8508   000FAA  22DA               	addwfc	fsr2h,f,c
  8509   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  8510   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  8511   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  8512   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  8513   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  8514   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8515   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8516   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8517   000FCC  ECEA  F01C         	call	___flge	;wreg free
  8518   000FD0  B0D8               	btfsc	status,0,c
  8519   000FD2  EFED  F007         	goto	u3851
  8520   000FD6  EFEF  F007         	goto	u3850
  8521   000FDA                     u3851:
  8522   000FDA  EF08  F008         	goto	l4209
  8523   000FDE                     u3850:
  8524   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  8525   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  8526   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  8527   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  8528   000FE6  90D8               	bcf	status,0,c
  8529   000FE8  0100               	movlb	0	; () banked
  8530   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8531   000FEC  6ED9               	movwf	fsr2l,c
  8532   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8533   000FF0  6EDA               	movwf	fsr2h,c
  8534   000FF2  90D8               	bcf	status,0,c
  8535   000FF4  36D9               	rlcf	fsr2l,f,c
  8536   000FF6  36DA               	rlcf	fsr2h,f,c
  8537   000FF8  504F               	movf	??_Colour_decider^0,w,c
  8538   000FFA  26D9               	addwf	fsr2l,f,c
  8539   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  8540   000FFE  22DA               	addwfc	fsr2h,f,c
  8541   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8542   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8543   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8544   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8545   001010                     l4209:
  8546                           
  8547                           ;color.c: 141:     }
  8548   001010  0100               	movlb	0	; () banked
  8549   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8550   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8551   001016                     
  8552                           ; BSR set to: 0
  8553   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8554   001018  EF17  F008         	goto	u3861
  8555   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8556   00101E  E109               	bnz	u3860
  8557   001020  0E03               	movlw	3
  8558   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8559   001024  A0D8               	btfss	status,0,c
  8560   001026  EF17  F008         	goto	u3861
  8561   00102A  EF19  F008         	goto	u3860
  8562   00102E                     u3861:
  8563   00102E  EF7F  F007         	goto	l4199
  8564   001032                     u3860:
  8565   001032                     
  8566                           ; BSR set to: 0
  8567                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8568   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8569   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8570   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8571   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8572   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8573   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8574   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8575   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8576   001052  EC00  F024         	call	___flsub	;wreg free
  8577   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  8578   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  8579   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  8580   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  8581   001066  0E00               	movlw	0
  8582   001068  6E1D               	movwf	___fleq@ff2^0,c
  8583   00106A  0E00               	movlw	0
  8584   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  8585   00106E  0E00               	movlw	0
  8586   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  8587   001072  0E00               	movlw	0
  8588   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  8589   001076  ECD1  F01D         	call	___fleq	;wreg free
  8590   00107A  A0D8               	btfss	status,0,c
  8591   00107C  EF42  F008         	goto	u3871
  8592   001080  EF44  F008         	goto	u3870
  8593   001084                     u3871:
  8594   001084  EF4A  F008         	goto	l4219
  8595   001088                     u3870:
  8596   001088                     l4215:
  8597   001088  0E00               	movlw	0
  8598   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8599   00108C  0E00               	movlw	0
  8600   00108E  6E4B               	movwf	?_Colour_decider^0,c
  8601   001090  EF80  F00C         	goto	l74
  8602   001094                     l4219:
  8603                           
  8604                           ;color.c: 146:     if (Cmax_i==0){
  8605   001094  0100               	movlb	0	; () banked
  8606   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8607   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8608   00109A  A4D8               	btfss	status,2,c
  8609   00109C  EF52  F008         	goto	u3881
  8610   0010A0  EF54  F008         	goto	u3880
  8611   0010A4                     u3881:
  8612   0010A4  EFC8  F008         	goto	l4227
  8613   0010A8                     u3880:
  8614   0010A8                     
  8615                           ; BSR set to: 0
  8616                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8617   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8618   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8619   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8620   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8621   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8622   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8623   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8624   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8625   0010C8  EC00  F024         	call	___flsub	;wreg free
  8626   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  8627   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8628   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8629   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8630   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  8631   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8632   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8633   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8634   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  8635   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8636   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8637   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8638   0010FC  EC00  F024         	call	___flsub	;wreg free
  8639   001100  C011  F019         	movff	?___flsub,___fldiv@b
  8640   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8641   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8642   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8643   001110  EC80  F013         	call	___fldiv	;wreg free
  8644   001114  C019  F032         	movff	?___fldiv,___flmul@b
  8645   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  8646   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  8647   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  8648   001124  0E00               	movlw	0
  8649   001126  6E36               	movwf	___flmul@a^0,c
  8650   001128  0E00               	movlw	0
  8651   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  8652   00112C  0E70               	movlw	112
  8653   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  8654   001130  0E42               	movlw	66
  8655   001132  6E39               	movwf	(___flmul@a+3)^0,c
  8656   001134  EC6B  F011         	call	___flmul	;wreg free
  8657   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8658   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8659   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8660   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8661   001148                     
  8662                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8663   001148  0100               	movlb	0	; () banked
  8664   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8665   00114C  EFAC  F008         	goto	u3890
  8666   001150  EFAA  F008         	goto	u3891
  8667   001154                     u3891:
  8668   001154  EFA7  F009         	goto	l4237
  8669   001158                     u3890:
  8670   001158                     
  8671                           ; BSR set to: 0
  8672   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8673   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8674   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8675   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8676   001168  0E00               	movlw	0
  8677   00116A  6E05               	movwf	___fladd@a^0,c
  8678   00116C  0E00               	movlw	0
  8679   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  8680   001170  0EB4               	movlw	180
  8681   001172  6E07               	movwf	(___fladd@a+2)^0,c
  8682   001174  0E43               	movlw	67
  8683   001176  6E08               	movwf	(___fladd@a+3)^0,c
  8684   001178  EC0B  F00F         	call	___fladd	;wreg free
  8685   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8686   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8687   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8688   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8689   00118C  EFA7  F009         	goto	l4237
  8690   001190                     l4227:
  8691                           
  8692                           ; BSR set to: 0
  8693   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8694   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8695   001194  A4D8               	btfss	status,2,c
  8696   001196  EFCF  F008         	goto	u3901
  8697   00119A  EFD1  F008         	goto	u3900
  8698   00119E                     u3901:
  8699   00119E  EF3D  F009         	goto	l4233
  8700   0011A2                     u3900:
  8701   0011A2                     
  8702                           ; BSR set to: 0
  8703                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8704   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8705   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8706   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8707   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8708   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8709   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8710   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8711   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8712   0011C2  EC00  F024         	call	___flsub	;wreg free
  8713   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  8714   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8715   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8716   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8717   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  8718   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  8719   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  8720   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  8721   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  8722   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  8723   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  8724   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  8725   0011F6  EC00  F024         	call	___flsub	;wreg free
  8726   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  8727   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8728   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8729   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8730   00120A  EC80  F013         	call	___fldiv	;wreg free
  8731   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$2809
  8732   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2809+1
  8733   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2809+2
  8734   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2809+3
  8735   00121E                     
  8736                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8737   00121E  0E00               	movlw	0
  8738   001220  6E05               	movwf	___fladd@a^0,c
  8739   001222  0E00               	movlw	0
  8740   001224  6E06               	movwf	(___fladd@a+1)^0,c
  8741   001226  0E00               	movlw	0
  8742   001228  6E07               	movwf	(___fladd@a+2)^0,c
  8743   00122A  0E40               	movlw	64
  8744   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  8745   00122E  C060  F001         	movff	_Colour_decider$2809,___fladd@b
  8746   001232  C061  F002         	movff	_Colour_decider$2809+1,___fladd@b+1
  8747   001236  C062  F003         	movff	_Colour_decider$2809+2,___fladd@b+2
  8748   00123A  C063  F004         	movff	_Colour_decider$2809+3,___fladd@b+3
  8749   00123E  EC0B  F00F         	call	___fladd	;wreg free
  8750   001242  C001  F032         	movff	?___fladd,___flmul@b
  8751   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8752   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8753   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8754   001252  0E00               	movlw	0
  8755   001254  6E36               	movwf	___flmul@a^0,c
  8756   001256  0E00               	movlw	0
  8757   001258  6E37               	movwf	(___flmul@a+1)^0,c
  8758   00125A  0E70               	movlw	112
  8759   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  8760   00125E  0E42               	movlw	66
  8761   001260  6E39               	movwf	(___flmul@a+3)^0,c
  8762   001262  EC6B  F011         	call	___flmul	;wreg free
  8763   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8764   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8765   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8766   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8767                           
  8768                           ;color.c: 155:     }
  8769   001276  EFA7  F009         	goto	l4237
  8770   00127A                     l4233:
  8771                           
  8772                           ; BSR set to: 0
  8773                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8774   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  8775   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8776   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8777   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8778   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  8779   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8780   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8781   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8782   00129A  EC00  F024         	call	___flsub	;wreg free
  8783   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  8784   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  8785   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  8786   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  8787   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  8788   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  8789   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  8790   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  8791   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  8792   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  8793   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  8794   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  8795   0012CE  EC00  F024         	call	___flsub	;wreg free
  8796   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  8797   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  8798   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  8799   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  8800   0012E2  EC80  F013         	call	___fldiv	;wreg free
  8801   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$2809
  8802   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$2809+1
  8803   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$2809+2
  8804   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$2809+3
  8805   0012F6                     
  8806                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  8807   0012F6  0E00               	movlw	0
  8808   0012F8  6E05               	movwf	___fladd@a^0,c
  8809   0012FA  0E00               	movlw	0
  8810   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  8811   0012FE  0E80               	movlw	128
  8812   001300  6E07               	movwf	(___fladd@a+2)^0,c
  8813   001302  0E40               	movlw	64
  8814   001304  6E08               	movwf	(___fladd@a+3)^0,c
  8815   001306  C060  F001         	movff	_Colour_decider$2809,___fladd@b
  8816   00130A  C061  F002         	movff	_Colour_decider$2809+1,___fladd@b+1
  8817   00130E  C062  F003         	movff	_Colour_decider$2809+2,___fladd@b+2
  8818   001312  C063  F004         	movff	_Colour_decider$2809+3,___fladd@b+3
  8819   001316  EC0B  F00F         	call	___fladd	;wreg free
  8820   00131A  C001  F032         	movff	?___fladd,___flmul@b
  8821   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  8822   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  8823   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  8824   00132A  0E00               	movlw	0
  8825   00132C  6E36               	movwf	___flmul@a^0,c
  8826   00132E  0E00               	movlw	0
  8827   001330  6E37               	movwf	(___flmul@a+1)^0,c
  8828   001332  0E70               	movlw	112
  8829   001334  6E38               	movwf	(___flmul@a+2)^0,c
  8830   001336  0E42               	movlw	66
  8831   001338  6E39               	movwf	(___flmul@a+3)^0,c
  8832   00133A  EC6B  F011         	call	___flmul	;wreg free
  8833   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  8834   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8835   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8836   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8837   00134E                     l4237:
  8838                           
  8839                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  8840   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8841   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8842   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8843   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8844   00135E  0E00               	movlw	0
  8845   001360  6E05               	movwf	___flge@ff2^0,c
  8846   001362  0E00               	movlw	0
  8847   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  8848   001366  0EA5               	movlw	165
  8849   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  8850   00136A  0E43               	movlw	67
  8851   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  8852   00136E  ECEA  F01C         	call	___flge	;wreg free
  8853   001372  A0D8               	btfss	status,0,c
  8854   001374  EFBE  F009         	goto	u3911
  8855   001378  EFC0  F009         	goto	u3910
  8856   00137C                     u3911:
  8857   00137C  EFDF  F009         	goto	l4247
  8858   001380                     u3910:
  8859   001380  0E00               	movlw	0
  8860   001382  6E01               	movwf	___flge@ff1^0,c
  8861   001384  0E00               	movlw	0
  8862   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  8863   001388  0EB4               	movlw	180
  8864   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  8865   00138C  0E43               	movlw	67
  8866   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  8867   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8868   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8869   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8870   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8871   0013A0  ECEA  F01C         	call	___flge	;wreg free
  8872   0013A4  A0D8               	btfss	status,0,c
  8873   0013A6  EFD7  F009         	goto	u3921
  8874   0013AA  EFD9  F009         	goto	u3920
  8875   0013AE                     u3921:
  8876   0013AE  EFDF  F009         	goto	l4247
  8877   0013B2                     u3920:
  8878   0013B2                     
  8879                           ;color.c: 164:         return 1;
  8880   0013B2  0E00               	movlw	0
  8881   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8882   0013B6  0E01               	movlw	1
  8883   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  8884   0013BA  EF80  F00C         	goto	l74
  8885   0013BE                     l4247:
  8886   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8887   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8888   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8889   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8890   0013CE  0E00               	movlw	0
  8891   0013D0  6E05               	movwf	___flge@ff2^0,c
  8892   0013D2  0E00               	movlw	0
  8893   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  8894   0013D6  0EA0               	movlw	160
  8895   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  8896   0013DA  0E40               	movlw	64
  8897   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  8898   0013DE  ECEA  F01C         	call	___flge	;wreg free
  8899   0013E2  A0D8               	btfss	status,0,c
  8900   0013E4  EFF6  F009         	goto	u3931
  8901   0013E8  EFF8  F009         	goto	u3930
  8902   0013EC                     u3931:
  8903   0013EC  EF17  F00A         	goto	l4257
  8904   0013F0                     u3930:
  8905   0013F0  0E00               	movlw	0
  8906   0013F2  6E01               	movwf	___flge@ff1^0,c
  8907   0013F4  0E00               	movlw	0
  8908   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  8909   0013F8  0E40               	movlw	64
  8910   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  8911   0013FC  0E41               	movlw	65
  8912   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  8913   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8914   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8915   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8916   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8917   001410  ECEA  F01C         	call	___flge	;wreg free
  8918   001414  A0D8               	btfss	status,0,c
  8919   001416  EF0F  F00A         	goto	u3941
  8920   00141A  EF11  F00A         	goto	u3940
  8921   00141E                     u3941:
  8922   00141E  EF17  F00A         	goto	l4257
  8923   001422                     u3940:
  8924   001422                     
  8925                           ;color.c: 168:         return 2;
  8926   001422  0E00               	movlw	0
  8927   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8928   001426  0E02               	movlw	2
  8929   001428  6E4B               	movwf	?_Colour_decider^0,c
  8930   00142A  EF80  F00C         	goto	l74
  8931   00142E                     l4257:
  8932   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  8933   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  8934   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  8935   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  8936   00143E  0E00               	movlw	0
  8937   001440  6E05               	movwf	___flge@ff2^0,c
  8938   001442  0E00               	movlw	0
  8939   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  8940   001446  0EA0               	movlw	160
  8941   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  8942   00144A  0E41               	movlw	65
  8943   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  8944   00144E  ECEA  F01C         	call	___flge	;wreg free
  8945   001452  A0D8               	btfss	status,0,c
  8946   001454  EF2E  F00A         	goto	u3951
  8947   001458  EF30  F00A         	goto	u3950
  8948   00145C                     u3951:
  8949   00145C  EFB0  F00A         	goto	l4283
  8950   001460                     u3950:
  8951   001460  0E00               	movlw	0
  8952   001462  6E01               	movwf	___flge@ff1^0,c
  8953   001464  0E00               	movlw	0
  8954   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  8955   001468  0EE8               	movlw	232
  8956   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  8957   00146C  0E41               	movlw	65
  8958   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  8959   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  8960   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  8961   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  8962   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  8963   001480  ECEA  F01C         	call	___flge	;wreg free
  8964   001484  A0D8               	btfss	status,0,c
  8965   001486  EF47  F00A         	goto	u3961
  8966   00148A  EF49  F00A         	goto	u3960
  8967   00148E                     u3961:
  8968   00148E  EFB0  F00A         	goto	l4283
  8969   001492                     u3960:
  8970   001492                     
  8971                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  8972   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  8973   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  8974   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  8975   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  8976   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  8977   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  8978   0014AA  0ECD               	movlw	205
  8979   0014AC  6E05               	movwf	___flge@ff2^0,c
  8980   0014AE  0ECC               	movlw	204
  8981   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  8982   0014B2  0E4C               	movlw	76
  8983   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  8984   0014B6  0E3E               	movlw	62
  8985   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  8986   0014BA  ECEA  F01C         	call	___flge	;wreg free
  8987   0014BE  A0D8               	btfss	status,0,c
  8988   0014C0  EF64  F00A         	goto	u3971
  8989   0014C4  EF66  F00A         	goto	u3970
  8990   0014C8                     u3971:
  8991   0014C8  EF85  F00A         	goto	l4271
  8992   0014CC                     u3970:
  8993   0014CC  0E00               	movlw	0
  8994   0014CE  6E01               	movwf	___flge@ff1^0,c
  8995   0014D0  0E00               	movlw	0
  8996   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  8997   0014D4  0E80               	movlw	128
  8998   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  8999   0014D8  0E3E               	movlw	62
  9000   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9001   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9002   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9003   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9004   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9005   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9006   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9007   0014F4  ECEA  F01C         	call	___flge	;wreg free
  9008   0014F8  A0D8               	btfss	status,0,c
  9009   0014FA  EF81  F00A         	goto	u3981
  9010   0014FE  EF83  F00A         	goto	u3980
  9011   001502                     u3981:
  9012   001502  EF85  F00A         	goto	l4271
  9013   001506                     u3980:
  9014   001506  EF44  F008         	goto	l4215
  9015   00150A                     l4271:
  9016   00150A  EE20 F008          	lfsr	2,8
  9017   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9018   001510  26D9               	addwf	fsr2l,f,c
  9019   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9020   001514  22DA               	addwfc	fsr2h,f,c
  9021   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9022   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9023   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9024   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9025   001526  0E29               	movlw	41
  9026   001528  6E05               	movwf	___flge@ff2^0,c
  9027   00152A  0E5C               	movlw	92
  9028   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9029   00152E  0E0F               	movlw	15
  9030   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9031   001532  0E3E               	movlw	62
  9032   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9033   001536  ECEA  F01C         	call	___flge	;wreg free
  9034   00153A  A0D8               	btfss	status,0,c
  9035   00153C  EFA2  F00A         	goto	u3991
  9036   001540  EFA4  F00A         	goto	u3990
  9037   001544                     u3991:
  9038   001544  EFAA  F00A         	goto	l4279
  9039   001548                     u3990:
  9040   001548                     l4273:
  9041                           
  9042                           ;color.c: 179:             return 4;
  9043   001548  0E00               	movlw	0
  9044   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9045   00154C  0E04               	movlw	4
  9046   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9047   001550  EF80  F00C         	goto	l74
  9048   001554                     l4279:
  9049                           
  9050                           ;color.c: 182:             return 3;
  9051   001554  0E00               	movlw	0
  9052   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9053   001558  0E03               	movlw	3
  9054   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9055   00155C  EF80  F00C         	goto	l74
  9056   001560                     l4283:
  9057   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9058   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9059   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9060   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9061   001570  0E00               	movlw	0
  9062   001572  6E05               	movwf	___flge@ff2^0,c
  9063   001574  0E00               	movlw	0
  9064   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9065   001578  0E34               	movlw	52
  9066   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9067   00157C  0E42               	movlw	66
  9068   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9069   001580  ECEA  F01C         	call	___flge	;wreg free
  9070   001584  A0D8               	btfss	status,0,c
  9071   001586  EFC7  F00A         	goto	u4001
  9072   00158A  EFC9  F00A         	goto	u4000
  9073   00158E                     u4001:
  9074   00158E  EF2E  F00B         	goto	l4307
  9075   001592                     u4000:
  9076   001592  0E00               	movlw	0
  9077   001594  6E01               	movwf	___flge@ff1^0,c
  9078   001596  0E00               	movlw	0
  9079   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9080   00159A  0EA0               	movlw	160
  9081   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9082   00159E  0E42               	movlw	66
  9083   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9084   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9085   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9086   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9087   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9088   0015B2  ECEA  F01C         	call	___flge	;wreg free
  9089   0015B6  A0D8               	btfss	status,0,c
  9090   0015B8  EFE0  F00A         	goto	u4011
  9091   0015BC  EFE2  F00A         	goto	u4010
  9092   0015C0                     u4011:
  9093   0015C0  EF2E  F00B         	goto	l4307
  9094   0015C4                     u4010:
  9095   0015C4                     
  9096                           ;color.c: 188:         if(0.15<=rel->B){
  9097   0015C4  EE20 F008          	lfsr	2,8
  9098   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9099   0015CA  26D9               	addwf	fsr2l,f,c
  9100   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9101   0015CE  22DA               	addwfc	fsr2h,f,c
  9102   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9103   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9104   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9105   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9106   0015E0  0E9A               	movlw	154
  9107   0015E2  6E05               	movwf	___flge@ff2^0,c
  9108   0015E4  0E99               	movlw	153
  9109   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9110   0015E8  0E19               	movlw	25
  9111   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9112   0015EC  0E3E               	movlw	62
  9113   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9114   0015F0  ECEA  F01C         	call	___flge	;wreg free
  9115   0015F4  A0D8               	btfss	status,0,c
  9116   0015F6  EFFF  F00A         	goto	u4021
  9117   0015FA  EF01  F00B         	goto	u4020
  9118   0015FE                     u4021:
  9119   0015FE  EF03  F00B         	goto	l4295
  9120   001602                     u4020:
  9121   001602  EFA4  F00A         	goto	l4273
  9122   001606                     l4295:
  9123   001606  EE20 F008          	lfsr	2,8
  9124   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9125   00160C  26D9               	addwf	fsr2l,f,c
  9126   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9127   001610  22DA               	addwfc	fsr2h,f,c
  9128   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9129   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9130   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9131   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9132   001622  0E8F               	movlw	143
  9133   001624  6E05               	movwf	___flge@ff2^0,c
  9134   001626  0EC2               	movlw	194
  9135   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9136   00162A  0EF5               	movlw	245
  9137   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9138   00162E  0E3D               	movlw	61
  9139   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9140   001632  ECEA  F01C         	call	___flge	;wreg free
  9141   001636  A0D8               	btfss	status,0,c
  9142   001638  EF20  F00B         	goto	u4031
  9143   00163C  EF22  F00B         	goto	u4030
  9144   001640                     u4031:
  9145   001640  EF28  F00B         	goto	l4303
  9146   001644                     u4030:
  9147   001644                     l4297:
  9148                           
  9149                           ;color.c: 192:             return 6;
  9150   001644  0E00               	movlw	0
  9151   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9152   001648  0E06               	movlw	6
  9153   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9154   00164C  EF80  F00C         	goto	l74
  9155   001650                     l4303:
  9156                           
  9157                           ;color.c: 195:             return 5;
  9158   001650  0E00               	movlw	0
  9159   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9160   001654  0E05               	movlw	5
  9161   001656  6E4B               	movwf	?_Colour_decider^0,c
  9162   001658  EF80  F00C         	goto	l74
  9163   00165C                     l4307:
  9164   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9165   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9166   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9167   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9168   00166C  0E00               	movlw	0
  9169   00166E  6E05               	movwf	___flge@ff2^0,c
  9170   001670  0E00               	movlw	0
  9171   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9172   001674  0EA2               	movlw	162
  9173   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9174   001678  0E42               	movlw	66
  9175   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9176   00167C  ECEA  F01C         	call	___flge	;wreg free
  9177   001680  A0D8               	btfss	status,0,c
  9178   001682  EF45  F00B         	goto	u4041
  9179   001686  EF47  F00B         	goto	u4040
  9180   00168A                     u4041:
  9181   00168A  EF81  F00B         	goto	l4323
  9182   00168E                     u4040:
  9183   00168E  0E00               	movlw	0
  9184   001690  6E01               	movwf	___flge@ff1^0,c
  9185   001692  0E00               	movlw	0
  9186   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9187   001696  0EE6               	movlw	230
  9188   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9189   00169A  0E42               	movlw	66
  9190   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9191   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9192   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9193   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9194   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9195   0016AE  ECEA  F01C         	call	___flge	;wreg free
  9196   0016B2  A0D8               	btfss	status,0,c
  9197   0016B4  EF5E  F00B         	goto	u4051
  9198   0016B8  EF60  F00B         	goto	u4050
  9199   0016BC                     u4051:
  9200   0016BC  EF81  F00B         	goto	l4323
  9201   0016C0                     u4050:
  9202   0016C0                     
  9203                           ;color.c: 201:         if(0.15<=rel->B){
  9204   0016C0  EE20 F008          	lfsr	2,8
  9205   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9206   0016C6  26D9               	addwf	fsr2l,f,c
  9207   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9208   0016CA  22DA               	addwfc	fsr2h,f,c
  9209   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9210   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9211   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9212   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9213   0016DC  0E9A               	movlw	154
  9214   0016DE  6E05               	movwf	___flge@ff2^0,c
  9215   0016E0  0E99               	movlw	153
  9216   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9217   0016E4  0E19               	movlw	25
  9218   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9219   0016E8  0E3E               	movlw	62
  9220   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9221   0016EC  ECEA  F01C         	call	___flge	;wreg free
  9222   0016F0  A0D8               	btfss	status,0,c
  9223   0016F2  EF7D  F00B         	goto	u4061
  9224   0016F6  EF7F  F00B         	goto	u4060
  9225   0016FA                     u4061:
  9226   0016FA  EF22  F00B         	goto	l4297
  9227   0016FE                     u4060:
  9228   0016FE  EFA4  F00A         	goto	l4273
  9229   001702                     l4323:
  9230   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9231   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9232   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9233   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9234   001712  0E00               	movlw	0
  9235   001714  6E05               	movwf	___flge@ff2^0,c
  9236   001716  0E00               	movlw	0
  9237   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9238   00171A  0EF0               	movlw	240
  9239   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9240   00171E  0E41               	movlw	65
  9241   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9242   001722  ECEA  F01C         	call	___flge	;wreg free
  9243   001726  A0D8               	btfss	status,0,c
  9244   001728  EF98  F00B         	goto	u4071
  9245   00172C  EF9A  F00B         	goto	u4070
  9246   001730                     u4071:
  9247   001730  EFB3  F00B         	goto	l4327
  9248   001734                     u4070:
  9249   001734  0E00               	movlw	0
  9250   001736  6E01               	movwf	___flge@ff1^0,c
  9251   001738  0E00               	movlw	0
  9252   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9253   00173C  0E68               	movlw	104
  9254   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9255   001740  0E42               	movlw	66
  9256   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9257   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9258   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9259   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9260   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9261   001754  ECEA  F01C         	call	___flge	;wreg free
  9262   001758  B0D8               	btfsc	status,0,c
  9263   00175A  EFB1  F00B         	goto	u4081
  9264   00175E  EFB3  F00B         	goto	u4080
  9265   001762                     u4081:
  9266   001762  EFA4  F00A         	goto	l4273
  9267   001766                     u4080:
  9268   001766                     l4327:
  9269   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9270   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9271   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9272   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9273   001776  0E00               	movlw	0
  9274   001778  6E05               	movwf	___flge@ff2^0,c
  9275   00177A  0E00               	movlw	0
  9276   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9277   00177E  0EF0               	movlw	240
  9278   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9279   001782  0E42               	movlw	66
  9280   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9281   001786  ECEA  F01C         	call	___flge	;wreg free
  9282   00178A  A0D8               	btfss	status,0,c
  9283   00178C  EFCA  F00B         	goto	u4091
  9284   001790  EFCC  F00B         	goto	u4090
  9285   001794                     u4091:
  9286   001794  EFE7  F00B         	goto	l4337
  9287   001798                     u4090:
  9288   001798  0E00               	movlw	0
  9289   00179A  6E01               	movwf	___flge@ff1^0,c
  9290   00179C  0E00               	movlw	0
  9291   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9292   0017A0  0E5C               	movlw	92
  9293   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9294   0017A4  0E43               	movlw	67
  9295   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9296   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9297   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9298   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9299   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9300   0017B8  ECEA  F01C         	call	___flge	;wreg free
  9301   0017BC  A0D8               	btfss	status,0,c
  9302   0017BE  EFE3  F00B         	goto	u4101
  9303   0017C2  EFE5  F00B         	goto	u4100
  9304   0017C6                     u4101:
  9305   0017C6  EFE7  F00B         	goto	l4337
  9306   0017CA                     u4100:
  9307   0017CA  EFA4  F00A         	goto	l4273
  9308   0017CE                     l4337:
  9309   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9310   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9311   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9312   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9313   0017DE  0E00               	movlw	0
  9314   0017E0  6E05               	movwf	___flge@ff2^0,c
  9315   0017E2  0E00               	movlw	0
  9316   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
  9317   0017E6  0E60               	movlw	96
  9318   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
  9319   0017EA  0E41               	movlw	65
  9320   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
  9321   0017EE  ECEA  F01C         	call	___flge	;wreg free
  9322   0017F2  A0D8               	btfss	status,0,c
  9323   0017F4  EFFE  F00B         	goto	u4111
  9324   0017F8  EF00  F00C         	goto	u4110
  9325   0017FC                     u4111:
  9326   0017FC  EF7C  F00C         	goto	l4363
  9327   001800                     u4110:
  9328   001800  0E00               	movlw	0
  9329   001802  6E01               	movwf	___flge@ff1^0,c
  9330   001804  0E00               	movlw	0
  9331   001806  6E02               	movwf	(___flge@ff1+1)^0,c
  9332   001808  0E98               	movlw	152
  9333   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
  9334   00180C  0E41               	movlw	65
  9335   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
  9336   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9337   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9338   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9339   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9340   001820  ECEA  F01C         	call	___flge	;wreg free
  9341   001824  A0D8               	btfss	status,0,c
  9342   001826  EF17  F00C         	goto	u4121
  9343   00182A  EF19  F00C         	goto	u4120
  9344   00182E                     u4121:
  9345   00182E  EF7C  F00C         	goto	l4363
  9346   001832                     u4120:
  9347   001832                     
  9348                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9349   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9350   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9351   00183A  CFDE F001          	movff	postinc2,___flge@ff1
  9352   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9353   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
  9354   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
  9355   00184A  0ECD               	movlw	205
  9356   00184C  6E05               	movwf	___flge@ff2^0,c
  9357   00184E  0ECC               	movlw	204
  9358   001850  6E06               	movwf	(___flge@ff2+1)^0,c
  9359   001852  0E4C               	movlw	76
  9360   001854  6E07               	movwf	(___flge@ff2+2)^0,c
  9361   001856  0E3E               	movlw	62
  9362   001858  6E08               	movwf	(___flge@ff2+3)^0,c
  9363   00185A  ECEA  F01C         	call	___flge	;wreg free
  9364   00185E  A0D8               	btfss	status,0,c
  9365   001860  EF34  F00C         	goto	u4131
  9366   001864  EF36  F00C         	goto	u4130
  9367   001868                     u4131:
  9368   001868  EF55  F00C         	goto	l4351
  9369   00186C                     u4130:
  9370   00186C  0E1F               	movlw	31
  9371   00186E  6E01               	movwf	___flge@ff1^0,c
  9372   001870  0E85               	movlw	133
  9373   001872  6E02               	movwf	(___flge@ff1+1)^0,c
  9374   001874  0E6B               	movlw	107
  9375   001876  6E03               	movwf	(___flge@ff1+2)^0,c
  9376   001878  0E3E               	movlw	62
  9377   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
  9378   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9379   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9380   001884  CFDE F005          	movff	postinc2,___flge@ff2
  9381   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
  9382   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
  9383   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
  9384   001894  ECEA  F01C         	call	___flge	;wreg free
  9385   001898  A0D8               	btfss	status,0,c
  9386   00189A  EF51  F00C         	goto	u4141
  9387   00189E  EF53  F00C         	goto	u4140
  9388   0018A2                     u4141:
  9389   0018A2  EF55  F00C         	goto	l4351
  9390   0018A6                     u4140:
  9391   0018A6  EF44  F008         	goto	l4215
  9392   0018AA                     l4351:
  9393   0018AA  EE20 F008          	lfsr	2,8
  9394   0018AE  504D               	movf	Colour_decider@rel^0,w,c
  9395   0018B0  26D9               	addwf	fsr2l,f,c
  9396   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9397   0018B4  22DA               	addwfc	fsr2h,f,c
  9398   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
  9399   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
  9400   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
  9401   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
  9402   0018C6  0E9A               	movlw	154
  9403   0018C8  6E05               	movwf	___flge@ff2^0,c
  9404   0018CA  0E99               	movlw	153
  9405   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
  9406   0018CE  0E19               	movlw	25
  9407   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
  9408   0018D2  0E3E               	movlw	62
  9409   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
  9410   0018D6  ECEA  F01C         	call	___flge	;wreg free
  9411   0018DA  A0D8               	btfss	status,0,c
  9412   0018DC  EF72  F00C         	goto	u4151
  9413   0018E0  EF74  F00C         	goto	u4150
  9414   0018E4                     u4151:
  9415   0018E4  EF76  F00C         	goto	l4359
  9416   0018E8                     u4150:
  9417   0018E8  EFA4  F00A         	goto	l4273
  9418   0018EC                     l4359:
  9419                           
  9420                           ;color.c: 223:             return 7;
  9421   0018EC  0E00               	movlw	0
  9422   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9423   0018F0  0E07               	movlw	7
  9424   0018F2  6E4B               	movwf	?_Colour_decider^0,c
  9425   0018F4  EF80  F00C         	goto	l74
  9426   0018F8                     l4363:
  9427                           
  9428                           ;color.c: 227:         return 10;
  9429   0018F8  0E00               	movlw	0
  9430   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9431   0018FC  0E0A               	movlw	10
  9432   0018FE  6E4B               	movwf	?_Colour_decider^0,c
  9433   001900                     l74:
  9434   001900  0012               	return		;funcret
  9435   001902                     __end_of_Colour_decider:
  9436                           	callstack 0
  9437                           
  9438 ;; *************** function ___xxtofl *****************
  9439 ;; Defined at:
  9440 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  sign            1    wreg     unsigned char 
  9443 ;;  val             4    0[COMRAM] long 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  sign            1    8[COMRAM] unsigned char 
  9446 ;;  arg             4   10[COMRAM] unsigned long 
  9447 ;;  exp             1    9[COMRAM] unsigned char 
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  4    0[COMRAM] unsigned char 
  9450 ;; Registers used:
  9451 ;;		wreg, status,2, status,0
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 0/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9458 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9460 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9461 ;;Total ram usage:       14 bytes
  9462 ;; Hardware stack levels used: 1
  9463 ;; Hardware stack levels required when called: 1
  9464 ;; This function calls:
  9465 ;;		Nothing
  9466 ;; This function is called by:
  9467 ;;		_colour_rel
  9468 ;;		_Colour_decider
  9469 ;;		_turnRight45
  9470 ;;		_turnLeft45
  9471 ;; This function uses a non-reentrant model
  9472 ;;
  9473                           
  9474                           	psect	text60
  9475   003278                     __ptext60:
  9476                           	callstack 0
  9477   003278                     ___xxtofl:
  9478                           	callstack 28
  9479                           
  9480                           ;incstack = 0
  9481                           ;___xxtofl@sign stored from wreg
  9482   003278  6E09               	movwf	___xxtofl@sign^0,c
  9483   00327A  5009               	movf	___xxtofl@sign^0,w,c
  9484   00327C  B4D8               	btfsc	status,2,c
  9485   00327E  EF43  F019         	goto	u3721
  9486   003282  EF45  F019         	goto	u3720
  9487   003286                     u3721:
  9488   003286  EF67  F019         	goto	l1316
  9489   00328A                     u3720:
  9490   00328A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9491   00328C  EF4C  F019         	goto	u3730
  9492   003290  EF4A  F019         	goto	u3731
  9493   003294                     u3731:
  9494   003294  EF67  F019         	goto	l1316
  9495   003298                     u3730:
  9496   003298  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9497   00329C  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9498   0032A0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9499   0032A4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9500   0032A8  1E05               	comf	??___xxtofl^0,f,c
  9501   0032AA  1E06               	comf	(??___xxtofl+1)^0,f,c
  9502   0032AC  1E07               	comf	(??___xxtofl+2)^0,f,c
  9503   0032AE  1E08               	comf	(??___xxtofl+3)^0,f,c
  9504   0032B0  2A05               	incf	??___xxtofl^0,f,c
  9505   0032B2  0E00               	movlw	0
  9506   0032B4  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9507   0032B6  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9508   0032B8  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9509   0032BA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9510   0032BE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9511   0032C2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9512   0032C6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9513   0032CA  EF6F  F019         	goto	l4085
  9514   0032CE                     l1316:
  9515   0032CE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9516   0032D2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9517   0032D6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9518   0032DA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9519   0032DE                     l4085:
  9520   0032DE  5001               	movf	___xxtofl@val^0,w,c
  9521   0032E0  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9522   0032E2  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9523   0032E4  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9524   0032E6  A4D8               	btfss	status,2,c
  9525   0032E8  EF78  F019         	goto	u3741
  9526   0032EC  EF7A  F019         	goto	u3740
  9527   0032F0                     u3741:
  9528   0032F0  EF84  F019         	goto	l4091
  9529   0032F4                     u3740:
  9530   0032F4  0E00               	movlw	0
  9531   0032F6  6E01               	movwf	?___xxtofl^0,c
  9532   0032F8  0E00               	movlw	0
  9533   0032FA  6E02               	movwf	(?___xxtofl+1)^0,c
  9534   0032FC  0E00               	movlw	0
  9535   0032FE  6E03               	movwf	(?___xxtofl+2)^0,c
  9536   003300  0E00               	movlw	0
  9537   003302  6E04               	movwf	(?___xxtofl+3)^0,c
  9538   003304  EF15  F01A         	goto	l1319
  9539   003308                     l4091:
  9540   003308  0E96               	movlw	150
  9541   00330A  6E0A               	movwf	___xxtofl@exp^0,c
  9542   00330C  EF8E  F019         	goto	l4095
  9543   003310                     l4093:
  9544   003310  2A0A               	incf	___xxtofl@exp^0,f,c
  9545   003312  90D8               	bcf	status,0,c
  9546   003314  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9547   003316  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9548   003318  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9549   00331A  320B               	rrcf	___xxtofl@arg^0,f,c
  9550   00331C                     l4095:
  9551   00331C  0E00               	movlw	0
  9552   00331E  140B               	andwf	___xxtofl@arg^0,w,c
  9553   003320  6E05               	movwf	??___xxtofl^0,c
  9554   003322  0E00               	movlw	0
  9555   003324  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9556   003326  6E06               	movwf	(??___xxtofl+1)^0,c
  9557   003328  0E00               	movlw	0
  9558   00332A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9559   00332C  6E07               	movwf	(??___xxtofl+2)^0,c
  9560   00332E  0EFE               	movlw	254
  9561   003330  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9562   003332  6E08               	movwf	(??___xxtofl+3)^0,c
  9563   003334  5005               	movf	??___xxtofl^0,w,c
  9564   003336  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9565   003338  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9566   00333A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9567   00333C  A4D8               	btfss	status,2,c
  9568   00333E  EFA3  F019         	goto	u3751
  9569   003342  EFA5  F019         	goto	u3750
  9570   003346                     u3751:
  9571   003346  EF88  F019         	goto	l4093
  9572   00334A                     u3750:
  9573   00334A  EFB3  F019         	goto	l1323
  9574   00334E                     l4097:
  9575   00334E  2A0A               	incf	___xxtofl@exp^0,f,c
  9576   003350  0E01               	movlw	1
  9577   003352  260B               	addwf	___xxtofl@arg^0,f,c
  9578   003354  0E00               	movlw	0
  9579   003356  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9580   003358  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9581   00335A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9582   00335C  90D8               	bcf	status,0,c
  9583   00335E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9584   003360  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9585   003362  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9586   003364  320B               	rrcf	___xxtofl@arg^0,f,c
  9587   003366                     l1323:
  9588   003366  0E00               	movlw	0
  9589   003368  140B               	andwf	___xxtofl@arg^0,w,c
  9590   00336A  6E05               	movwf	??___xxtofl^0,c
  9591   00336C  0E00               	movlw	0
  9592   00336E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9593   003370  6E06               	movwf	(??___xxtofl+1)^0,c
  9594   003372  0E00               	movlw	0
  9595   003374  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9596   003376  6E07               	movwf	(??___xxtofl+2)^0,c
  9597   003378  0EFF               	movlw	255
  9598   00337A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9599   00337C  6E08               	movwf	(??___xxtofl+3)^0,c
  9600   00337E  5005               	movf	??___xxtofl^0,w,c
  9601   003380  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9602   003382  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9603   003384  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9604   003386  A4D8               	btfss	status,2,c
  9605   003388  EFC8  F019         	goto	u3761
  9606   00338C  EFCA  F019         	goto	u3760
  9607   003390                     u3761:
  9608   003390  EFA7  F019         	goto	l4097
  9609   003394                     u3760:
  9610   003394  EFD2  F019         	goto	l4105
  9611   003398                     l4103:
  9612   003398  060A               	decf	___xxtofl@exp^0,f,c
  9613   00339A  90D8               	bcf	status,0,c
  9614   00339C  360B               	rlcf	___xxtofl@arg^0,f,c
  9615   00339E  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9616   0033A0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9617   0033A2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9618   0033A4                     l4105:
  9619   0033A4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9620   0033A6  EFD7  F019         	goto	u3771
  9621   0033AA  EFD9  F019         	goto	u3770
  9622   0033AE                     u3771:
  9623   0033AE  EFE1  F019         	goto	l1330
  9624   0033B2                     u3770:
  9625   0033B2  0E02               	movlw	2
  9626   0033B4  600A               	cpfslt	___xxtofl@exp^0,c
  9627   0033B6  EFDF  F019         	goto	u3781
  9628   0033BA  EFE1  F019         	goto	u3780
  9629   0033BE                     u3781:
  9630   0033BE  EFCC  F019         	goto	l4103
  9631   0033C2                     u3780:
  9632   0033C2                     l1330:
  9633   0033C2  B00A               	btfsc	___xxtofl@exp^0,0,c
  9634   0033C4  EFE6  F019         	goto	u3791
  9635   0033C8  EFE8  F019         	goto	u3790
  9636   0033CC                     u3791:
  9637   0033CC  EFE9  F019         	goto	l4111
  9638   0033D0                     u3790:
  9639   0033D0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9640   0033D2                     l4111:
  9641   0033D2  90D8               	bcf	status,0,c
  9642   0033D4  320A               	rrcf	___xxtofl@exp^0,f,c
  9643   0033D6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9644   0033DA  6A06               	clrf	(??___xxtofl+1)^0,c
  9645   0033DC  6A07               	clrf	(??___xxtofl+2)^0,c
  9646   0033DE  6A08               	clrf	(??___xxtofl+3)^0,c
  9647   0033E0  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9648   0033E4  6A07               	clrf	(??___xxtofl+2)^0,c
  9649   0033E6  6A06               	clrf	(??___xxtofl+1)^0,c
  9650   0033E8  6A05               	clrf	??___xxtofl^0,c
  9651   0033EA  5005               	movf	??___xxtofl^0,w,c
  9652   0033EC  120B               	iorwf	___xxtofl@arg^0,f,c
  9653   0033EE  5006               	movf	(??___xxtofl+1)^0,w,c
  9654   0033F0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9655   0033F2  5007               	movf	(??___xxtofl+2)^0,w,c
  9656   0033F4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9657   0033F6  5008               	movf	(??___xxtofl+3)^0,w,c
  9658   0033F8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9659   0033FA  5009               	movf	___xxtofl@sign^0,w,c
  9660   0033FC  B4D8               	btfsc	status,2,c
  9661   0033FE  EF03  F01A         	goto	u3801
  9662   003402  EF05  F01A         	goto	u3800
  9663   003406                     u3801:
  9664   003406  EF0D  F01A         	goto	l4121
  9665   00340A                     u3800:
  9666   00340A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9667   00340C  EF0C  F01A         	goto	u3810
  9668   003410  EF0A  F01A         	goto	u3811
  9669   003414                     u3811:
  9670   003414  EF0D  F01A         	goto	l4121
  9671   003418                     u3810:
  9672   003418  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9673   00341A                     l4121:
  9674   00341A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9675   00341E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9676   003422  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9677   003426  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9678   00342A                     l1319:
  9679   00342A  0012               	return		;funcret
  9680   00342C                     __end_of___xxtofl:
  9681                           	callstack 0
  9682                           
  9683 ;; *************** function ___flsub *****************
  9684 ;; Defined at:
  9685 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;  b               4   16[COMRAM] unsigned char 
  9688 ;;  a               4   20[COMRAM] unsigned char 
  9689 ;; Auto vars:     Size  Location     Type
  9690 ;;		None
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  4   16[COMRAM] unsigned char 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2, status,0, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9700 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9703 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9704 ;;Total ram usage:        8 bytes
  9705 ;; Hardware stack levels used: 1
  9706 ;; Hardware stack levels required when called: 2
  9707 ;; This function calls:
  9708 ;;		___fladd
  9709 ;; This function is called by:
  9710 ;;		_Colour_decider
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text61
  9715   004800                     __ptext61:
  9716                           	callstack 0
  9717   004800                     ___flsub:
  9718                           	callstack 27
  9719   004800  0E00               	movlw	0
  9720   004802  1A15               	xorwf	___flsub@a^0,f,c
  9721   004804  0E00               	movlw	0
  9722   004806  1A16               	xorwf	(___flsub@a+1)^0,f,c
  9723   004808  0E00               	movlw	0
  9724   00480A  1A17               	xorwf	(___flsub@a+2)^0,f,c
  9725   00480C  0E80               	movlw	128
  9726   00480E  1A18               	xorwf	(___flsub@a+3)^0,f,c
  9727   004810  C011  F001         	movff	___flsub@b,___fladd@b
  9728   004814  C012  F002         	movff	___flsub@b+1,___fladd@b+1
  9729   004818  C013  F003         	movff	___flsub@b+2,___fladd@b+2
  9730   00481C  C014  F004         	movff	___flsub@b+3,___fladd@b+3
  9731   004820  C015  F005         	movff	___flsub@a,___fladd@a
  9732   004824  C016  F006         	movff	___flsub@a+1,___fladd@a+1
  9733   004828  C017  F007         	movff	___flsub@a+2,___fladd@a+2
  9734   00482C  C018  F008         	movff	___flsub@a+3,___fladd@a+3
  9735   004830  EC0B  F00F         	call	___fladd	;wreg free
  9736   004834  C001  F011         	movff	?___fladd,?___flsub
  9737   004838  C002  F012         	movff	?___fladd+1,?___flsub+1
  9738   00483C  C003  F013         	movff	?___fladd+2,?___flsub+2
  9739   004840  C004  F014         	movff	?___fladd+3,?___flsub+3
  9740   004844  0012               	return		;funcret
  9741   004846                     __end_of___flsub:
  9742                           	callstack 0
  9743                           
  9744 ;; *************** function ___fladd *****************
  9745 ;; Defined at:
  9746 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9747 ;; Parameters:    Size  Location     Type
  9748 ;;  b               4    0[COMRAM] unsigned char 
  9749 ;;  a               4    4[COMRAM] unsigned char 
  9750 ;; Auto vars:     Size  Location     Type
  9751 ;;  grs             1   15[COMRAM] unsigned char 
  9752 ;;  bexp            1   14[COMRAM] unsigned char 
  9753 ;;  aexp            1   13[COMRAM] unsigned char 
  9754 ;;  signs           1   12[COMRAM] unsigned char 
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  4    0[COMRAM] unsigned char 
  9757 ;; Registers used:
  9758 ;;		wreg, status,2, status,0
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9764 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9765 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9767 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9768 ;;Total ram usage:       16 bytes
  9769 ;; Hardware stack levels used: 1
  9770 ;; Hardware stack levels required when called: 1
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		_colour_rel
  9775 ;;		_Colour_decider
  9776 ;;		___flsub
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text62
  9781   001E16                     __ptext62:
  9782                           	callstack 0
  9783   001E16                     ___fladd:
  9784                           	callstack 28
  9785   001E16  5004               	movf	(___fladd@b+3)^0,w,c
  9786   001E18  0B80               	andlw	128
  9787   001E1A  6E0D               	movwf	___fladd@signs^0,c
  9788   001E1C  5004               	movf	(___fladd@b+3)^0,w,c
  9789   001E1E  2404               	addwf	(___fladd@b+3)^0,w,c
  9790   001E20  6E0F               	movwf	___fladd@bexp^0,c
  9791   001E22  AE03               	btfss	(___fladd@b+2)^0,7,c
  9792   001E24  EF16  F00F         	goto	u2791
  9793   001E28  EF18  F00F         	goto	u2790
  9794   001E2C                     u2791:
  9795   001E2C  EF19  F00F         	goto	l3473
  9796   001E30                     u2790:
  9797   001E30  800F               	bsf	___fladd@bexp^0,0,c
  9798   001E32                     l3473:
  9799   001E32  500F               	movf	___fladd@bexp^0,w,c
  9800   001E34  B4D8               	btfsc	status,2,c
  9801   001E36  EF1F  F00F         	goto	u2801
  9802   001E3A  EF21  F00F         	goto	u2800
  9803   001E3E                     u2801:
  9804   001E3E  EF36  F00F         	goto	l3483
  9805   001E42                     u2800:
  9806   001E42  280F               	incf	___fladd@bexp^0,w,c
  9807   001E44  A4D8               	btfss	status,2,c
  9808   001E46  EF27  F00F         	goto	u2811
  9809   001E4A  EF29  F00F         	goto	u2810
  9810   001E4E                     u2811:
  9811   001E4E  EF31  F00F         	goto	l3479
  9812   001E52                     u2810:
  9813   001E52  0E00               	movlw	0
  9814   001E54  6E01               	movwf	___fladd@b^0,c
  9815   001E56  0E00               	movlw	0
  9816   001E58  6E02               	movwf	(___fladd@b+1)^0,c
  9817   001E5A  0E00               	movlw	0
  9818   001E5C  6E03               	movwf	(___fladd@b+2)^0,c
  9819   001E5E  0E00               	movlw	0
  9820   001E60  6E04               	movwf	(___fladd@b+3)^0,c
  9821   001E62                     l3479:
  9822   001E62  8E03               	bsf	(___fladd@b+2)^0,7,c
  9823   001E64  0E00               	movlw	0
  9824   001E66  6E04               	movwf	(___fladd@b+3)^0,c
  9825   001E68  EF3E  F00F         	goto	l3485
  9826   001E6C                     l3483:
  9827   001E6C  0E00               	movlw	0
  9828   001E6E  6E01               	movwf	___fladd@b^0,c
  9829   001E70  0E00               	movlw	0
  9830   001E72  6E02               	movwf	(___fladd@b+1)^0,c
  9831   001E74  0E00               	movlw	0
  9832   001E76  6E03               	movwf	(___fladd@b+2)^0,c
  9833   001E78  0E00               	movlw	0
  9834   001E7A  6E04               	movwf	(___fladd@b+3)^0,c
  9835   001E7C                     l3485:
  9836   001E7C  5008               	movf	(___fladd@a+3)^0,w,c
  9837   001E7E  0B80               	andlw	128
  9838   001E80  6E0E               	movwf	___fladd@aexp^0,c
  9839   001E82  500D               	movf	___fladd@signs^0,w,c
  9840   001E84  180E               	xorwf	___fladd@aexp^0,w,c
  9841   001E86  B4D8               	btfsc	status,2,c
  9842   001E88  EF48  F00F         	goto	u2821
  9843   001E8C  EF4A  F00F         	goto	u2820
  9844   001E90                     u2821:
  9845   001E90  EF4B  F00F         	goto	l3491
  9846   001E94                     u2820:
  9847   001E94  8C0D               	bsf	___fladd@signs^0,6,c
  9848   001E96                     l3491:
  9849   001E96  5008               	movf	(___fladd@a+3)^0,w,c
  9850   001E98  2408               	addwf	(___fladd@a+3)^0,w,c
  9851   001E9A  6E0E               	movwf	___fladd@aexp^0,c
  9852   001E9C  AE07               	btfss	(___fladd@a+2)^0,7,c
  9853   001E9E  EF53  F00F         	goto	u2831
  9854   001EA2  EF55  F00F         	goto	u2830
  9855   001EA6                     u2831:
  9856   001EA6  EF56  F00F         	goto	l3497
  9857   001EAA                     u2830:
  9858   001EAA  800E               	bsf	___fladd@aexp^0,0,c
  9859   001EAC                     l3497:
  9860   001EAC  500E               	movf	___fladd@aexp^0,w,c
  9861   001EAE  B4D8               	btfsc	status,2,c
  9862   001EB0  EF5C  F00F         	goto	u2841
  9863   001EB4  EF5E  F00F         	goto	u2840
  9864   001EB8                     u2841:
  9865   001EB8  EF73  F00F         	goto	l3507
  9866   001EBC                     u2840:
  9867   001EBC  280E               	incf	___fladd@aexp^0,w,c
  9868   001EBE  A4D8               	btfss	status,2,c
  9869   001EC0  EF64  F00F         	goto	u2851
  9870   001EC4  EF66  F00F         	goto	u2850
  9871   001EC8                     u2851:
  9872   001EC8  EF6E  F00F         	goto	l3503
  9873   001ECC                     u2850:
  9874   001ECC  0E00               	movlw	0
  9875   001ECE  6E05               	movwf	___fladd@a^0,c
  9876   001ED0  0E00               	movlw	0
  9877   001ED2  6E06               	movwf	(___fladd@a+1)^0,c
  9878   001ED4  0E00               	movlw	0
  9879   001ED6  6E07               	movwf	(___fladd@a+2)^0,c
  9880   001ED8  0E00               	movlw	0
  9881   001EDA  6E08               	movwf	(___fladd@a+3)^0,c
  9882   001EDC                     l3503:
  9883   001EDC  8E07               	bsf	(___fladd@a+2)^0,7,c
  9884   001EDE  0E00               	movlw	0
  9885   001EE0  6E08               	movwf	(___fladd@a+3)^0,c
  9886   001EE2  EF7B  F00F         	goto	l3509
  9887   001EE6                     l3507:
  9888   001EE6  0E00               	movlw	0
  9889   001EE8  6E05               	movwf	___fladd@a^0,c
  9890   001EEA  0E00               	movlw	0
  9891   001EEC  6E06               	movwf	(___fladd@a+1)^0,c
  9892   001EEE  0E00               	movlw	0
  9893   001EF0  6E07               	movwf	(___fladd@a+2)^0,c
  9894   001EF2  0E00               	movlw	0
  9895   001EF4  6E08               	movwf	(___fladd@a+3)^0,c
  9896   001EF6                     l3509:
  9897   001EF6  500F               	movf	___fladd@bexp^0,w,c
  9898   001EF8  5C0E               	subwf	___fladd@aexp^0,w,c
  9899   001EFA  B0D8               	btfsc	status,0,c
  9900   001EFC  EF82  F00F         	goto	u2861
  9901   001F00  EF84  F00F         	goto	u2860
  9902   001F04                     u2861:
  9903   001F04  EFAB  F00F         	goto	l3545
  9904   001F08                     u2860:
  9905   001F08  AC0D               	btfss	___fladd@signs^0,6,c
  9906   001F0A  EF89  F00F         	goto	u2871
  9907   001F0E  EF8B  F00F         	goto	u2870
  9908   001F12                     u2871:
  9909   001F12  EF8D  F00F         	goto	l3515
  9910   001F16                     u2870:
  9911   001F16  0E80               	movlw	128
  9912   001F18  1A0D               	xorwf	___fladd@signs^0,f,c
  9913   001F1A                     l3515:
  9914   001F1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9915   001F1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9916   001F22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9917   001F26  C001  F010         	movff	___fladd@b,___fladd@grs
  9918   001F2A  C005  F001         	movff	___fladd@a,___fladd@b
  9919   001F2E  C010  F005         	movff	___fladd@grs,___fladd@a
  9920   001F32  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9921   001F36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9922   001F3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9923   001F3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9924   001F42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9925   001F46  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9926   001F4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9927   001F4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9928   001F52  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9929   001F56                     l3545:
  9930   001F56  0E00               	movlw	0
  9931   001F58  6E10               	movwf	___fladd@grs^0,c
  9932   001F5A  500F               	movf	___fladd@bexp^0,w,c
  9933   001F5C  C00E  F009         	movff	___fladd@aexp,??___fladd
  9934   001F60  6A0A               	clrf	(??___fladd+1)^0,c
  9935   001F62  5E09               	subwf	??___fladd^0,f,c
  9936   001F64  0E00               	movlw	0
  9937   001F66  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9938   001F68  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9939   001F6A  EFC0  F00F         	goto	u2881
  9940   001F6E  500A               	movf	(??___fladd+1)^0,w,c
  9941   001F70  E109               	bnz	u2880
  9942   001F72  0E1A               	movlw	26
  9943   001F74  5C09               	subwf	??___fladd^0,w,c
  9944   001F76  A0D8               	btfss	status,0,c
  9945   001F78  EFC0  F00F         	goto	u2881
  9946   001F7C  EFC2  F00F         	goto	u2880
  9947   001F80                     u2881:
  9948   001F80  EFF9  F00F         	goto	l1190
  9949   001F84                     u2880:
  9950   001F84  5001               	movf	___fladd@b^0,w,c
  9951   001F86  1002               	iorwf	(___fladd@b+1)^0,w,c
  9952   001F88  1003               	iorwf	(___fladd@b+2)^0,w,c
  9953   001F8A  1004               	iorwf	(___fladd@b+3)^0,w,c
  9954   001F8C  A4D8               	btfss	status,2,c
  9955   001F8E  EFCB  F00F         	goto	u2891
  9956   001F92  EFCE  F00F         	goto	u2890
  9957   001F96                     u2891:
  9958   001F96  0E01               	movlw	1
  9959   001F98  EFCF  F00F         	goto	u2900
  9960   001F9C                     u2890:
  9961   001F9C  0E00               	movlw	0
  9962   001F9E                     u2900:
  9963   001F9E  6E10               	movwf	___fladd@grs^0,c
  9964   001FA0  0E00               	movlw	0
  9965   001FA2  6E01               	movwf	___fladd@b^0,c
  9966   001FA4  0E00               	movlw	0
  9967   001FA6  6E02               	movwf	(___fladd@b+1)^0,c
  9968   001FA8  0E00               	movlw	0
  9969   001FAA  6E03               	movwf	(___fladd@b+2)^0,c
  9970   001FAC  0E00               	movlw	0
  9971   001FAE  6E04               	movwf	(___fladd@b+3)^0,c
  9972   001FB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9973   001FB4  EF02  F010         	goto	l1189
  9974   001FB8                     l1191:
  9975   001FB8  A010               	btfss	___fladd@grs^0,0,c
  9976   001FBA  EFE1  F00F         	goto	u2911
  9977   001FBE  EFE3  F00F         	goto	u2910
  9978   001FC2                     u2911:
  9979   001FC2  EFE9  F00F         	goto	l3557
  9980   001FC6                     u2910:
  9981   001FC6  90D8               	bcf	status,0,c
  9982   001FC8  3010               	rrcf	___fladd@grs^0,w,c
  9983   001FCA  0901               	iorlw	1
  9984   001FCC  6E10               	movwf	___fladd@grs^0,c
  9985   001FCE  EFEB  F00F         	goto	l3559
  9986   001FD2                     l3557:
  9987   001FD2  90D8               	bcf	status,0,c
  9988   001FD4  3210               	rrcf	___fladd@grs^0,f,c
  9989   001FD6                     l3559:
  9990   001FD6  A001               	btfss	___fladd@b^0,0,c
  9991   001FD8  EFF0  F00F         	goto	u2921
  9992   001FDC  EFF2  F00F         	goto	u2920
  9993   001FE0                     u2921:
  9994   001FE0  EFF3  F00F         	goto	l3563
  9995   001FE4                     u2920:
  9996   001FE4  8E10               	bsf	___fladd@grs^0,7,c
  9997   001FE6                     l3563:
  9998   001FE6  3404               	rlcf	(___fladd@b+3)^0,w,c
  9999   001FE8  3204               	rrcf	(___fladd@b+3)^0,f,c
 10000   001FEA  3203               	rrcf	(___fladd@b+2)^0,f,c
 10001   001FEC  3202               	rrcf	(___fladd@b+1)^0,f,c
 10002   001FEE  3201               	rrcf	___fladd@b^0,f,c
 10003   001FF0  2A0F               	incf	___fladd@bexp^0,f,c
 10004   001FF2                     l1190:
 10005   001FF2  500E               	movf	___fladd@aexp^0,w,c
 10006   001FF4  5C0F               	subwf	___fladd@bexp^0,w,c
 10007   001FF6  A0D8               	btfss	status,0,c
 10008   001FF8  EF00  F010         	goto	u2931
 10009   001FFC  EF02  F010         	goto	u2930
 10010   002000                     u2931:
 10011   002000  EFDC  F00F         	goto	l1191
 10012   002004                     u2930:
 10013   002004                     l1189:
 10014   002004  BC0D               	btfsc	___fladd@signs^0,6,c
 10015   002006  EF07  F010         	goto	u2941
 10016   00200A  EF09  F010         	goto	u2940
 10017   00200E                     u2941:
 10018   00200E  EF49  F010         	goto	l3591
 10019   002012                     u2940:
 10020   002012  500F               	movf	___fladd@bexp^0,w,c
 10021   002014  A4D8               	btfss	status,2,c
 10022   002016  EF0F  F010         	goto	u2951
 10023   00201A  EF11  F010         	goto	u2950
 10024   00201E                     u2951:
 10025   00201E  EF1B  F010         	goto	l3573
 10026   002022                     u2950:
 10027   002022  0E00               	movlw	0
 10028   002024  6E01               	movwf	?___fladd^0,c
 10029   002026  0E00               	movlw	0
 10030   002028  6E02               	movwf	(?___fladd+1)^0,c
 10031   00202A  0E00               	movlw	0
 10032   00202C  6E03               	movwf	(?___fladd+2)^0,c
 10033   00202E  0E00               	movlw	0
 10034   002030  6E04               	movwf	(?___fladd+3)^0,c
 10035   002032  EF6A  F011         	goto	l1198
 10036   002036                     l3573:
 10037   002036  5005               	movf	___fladd@a^0,w,c
 10038   002038  2601               	addwf	___fladd@b^0,f,c
 10039   00203A  5006               	movf	(___fladd@a+1)^0,w,c
 10040   00203C  2202               	addwfc	(___fladd@b+1)^0,f,c
 10041   00203E  5007               	movf	(___fladd@a+2)^0,w,c
 10042   002040  2203               	addwfc	(___fladd@b+2)^0,f,c
 10043   002042  5008               	movf	(___fladd@a+3)^0,w,c
 10044   002044  2204               	addwfc	(___fladd@b+3)^0,f,c
 10045   002046  A004               	btfss	(___fladd@b+3)^0,0,c
 10046   002048  EF28  F010         	goto	u2961
 10047   00204C  EF2A  F010         	goto	u2960
 10048   002050                     u2961:
 10049   002050  EFD6  F010         	goto	l3627
 10050   002054                     u2960:
 10051   002054  A010               	btfss	___fladd@grs^0,0,c
 10052   002056  EF2F  F010         	goto	u2971
 10053   00205A  EF31  F010         	goto	u2970
 10054   00205E                     u2971:
 10055   00205E  EF37  F010         	goto	l3581
 10056   002062                     u2970:
 10057   002062  90D8               	bcf	status,0,c
 10058   002064  3010               	rrcf	___fladd@grs^0,w,c
 10059   002066  0901               	iorlw	1
 10060   002068  6E10               	movwf	___fladd@grs^0,c
 10061   00206A  EF39  F010         	goto	l3583
 10062   00206E                     l3581:
 10063   00206E  90D8               	bcf	status,0,c
 10064   002070  3210               	rrcf	___fladd@grs^0,f,c
 10065   002072                     l3583:
 10066   002072  A001               	btfss	___fladd@b^0,0,c
 10067   002074  EF3E  F010         	goto	u2981
 10068   002078  EF40  F010         	goto	u2980
 10069   00207C                     u2981:
 10070   00207C  EF41  F010         	goto	l3587
 10071   002080                     u2980:
 10072   002080  8E10               	bsf	___fladd@grs^0,7,c
 10073   002082                     l3587:
 10074   002082  3404               	rlcf	(___fladd@b+3)^0,w,c
 10075   002084  3204               	rrcf	(___fladd@b+3)^0,f,c
 10076   002086  3203               	rrcf	(___fladd@b+2)^0,f,c
 10077   002088  3202               	rrcf	(___fladd@b+1)^0,f,c
 10078   00208A  3201               	rrcf	___fladd@b^0,f,c
 10079   00208C  2A0F               	incf	___fladd@bexp^0,f,c
 10080   00208E  EFD6  F010         	goto	l3627
 10081   002092                     l3591:
 10082   002092  5005               	movf	___fladd@a^0,w,c
 10083   002094  5C01               	subwf	___fladd@b^0,w,c
 10084   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10085   002098  5802               	subwfb	(___fladd@b+1)^0,w,c
 10086   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10087   00209C  5803               	subwfb	(___fladd@b+2)^0,w,c
 10088   00209E  5004               	movf	(___fladd@b+3)^0,w,c
 10089   0020A0  0A80               	xorlw	128
 10090   0020A2  6E09               	movwf	??___fladd^0,c
 10091   0020A4  5008               	movf	(___fladd@a+3)^0,w,c
 10092   0020A6  0A80               	xorlw	128
 10093   0020A8  5809               	subwfb	??___fladd^0,w,c
 10094   0020AA  B0D8               	btfsc	status,0,c
 10095   0020AC  EF5A  F010         	goto	u2991
 10096   0020B0  EF5C  F010         	goto	u2990
 10097   0020B4                     u2991:
 10098   0020B4  EF87  F010         	goto	l3601
 10099   0020B8                     u2990:
 10100   0020B8  5001               	movf	___fladd@b^0,w,c
 10101   0020BA  5C05               	subwf	___fladd@a^0,w,c
 10102   0020BC  6E09               	movwf	??___fladd^0,c
 10103   0020BE  5002               	movf	(___fladd@b+1)^0,w,c
 10104   0020C0  5806               	subwfb	(___fladd@a+1)^0,w,c
 10105   0020C2  6E0A               	movwf	(??___fladd+1)^0,c
 10106   0020C4  5003               	movf	(___fladd@b+2)^0,w,c
 10107   0020C6  5807               	subwfb	(___fladd@a+2)^0,w,c
 10108   0020C8  6E0B               	movwf	(??___fladd+2)^0,c
 10109   0020CA  5004               	movf	(___fladd@b+3)^0,w,c
 10110   0020CC  5808               	subwfb	(___fladd@a+3)^0,w,c
 10111   0020CE  6E0C               	movwf	(??___fladd+3)^0,c
 10112   0020D0  0EFF               	movlw	255
 10113   0020D2  2409               	addwf	??___fladd^0,w,c
 10114   0020D4  6E01               	movwf	___fladd@b^0,c
 10115   0020D6  0EFF               	movlw	255
 10116   0020D8  200A               	addwfc	(??___fladd+1)^0,w,c
 10117   0020DA  6E02               	movwf	(___fladd@b+1)^0,c
 10118   0020DC  0EFF               	movlw	255
 10119   0020DE  200B               	addwfc	(??___fladd+2)^0,w,c
 10120   0020E0  6E03               	movwf	(___fladd@b+2)^0,c
 10121   0020E2  0EFF               	movlw	255
 10122   0020E4  200C               	addwfc	(??___fladd+3)^0,w,c
 10123   0020E6  6E04               	movwf	(___fladd@b+3)^0,c
 10124   0020E8  0E80               	movlw	128
 10125   0020EA  1A0D               	xorwf	___fladd@signs^0,f,c
 10126   0020EC  6C10               	negf	___fladd@grs^0,c
 10127   0020EE  5010               	movf	___fladd@grs^0,w,c
 10128   0020F0  A4D8               	btfss	status,2,c
 10129   0020F2  EF7D  F010         	goto	u3001
 10130   0020F6  EF7F  F010         	goto	u3000
 10131   0020FA                     u3001:
 10132   0020FA  EF8F  F010         	goto	l1206
 10133   0020FE                     u3000:
 10134   0020FE  0E01               	movlw	1
 10135   002100  2601               	addwf	___fladd@b^0,f,c
 10136   002102  0E00               	movlw	0
 10137   002104  2202               	addwfc	(___fladd@b+1)^0,f,c
 10138   002106  2203               	addwfc	(___fladd@b+2)^0,f,c
 10139   002108  2204               	addwfc	(___fladd@b+3)^0,f,c
 10140   00210A  EF8F  F010         	goto	l1206
 10141   00210E                     l3601:
 10142   00210E  5005               	movf	___fladd@a^0,w,c
 10143   002110  5E01               	subwf	___fladd@b^0,f,c
 10144   002112  5006               	movf	(___fladd@a+1)^0,w,c
 10145   002114  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10146   002116  5007               	movf	(___fladd@a+2)^0,w,c
 10147   002118  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10148   00211A  5008               	movf	(___fladd@a+3)^0,w,c
 10149   00211C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10150   00211E                     l1206:
 10151   00211E  5001               	movf	___fladd@b^0,w,c
 10152   002120  1002               	iorwf	(___fladd@b+1)^0,w,c
 10153   002122  1003               	iorwf	(___fladd@b+2)^0,w,c
 10154   002124  1004               	iorwf	(___fladd@b+3)^0,w,c
 10155   002126  A4D8               	btfss	status,2,c
 10156   002128  EF98  F010         	goto	u3011
 10157   00212C  EF9A  F010         	goto	u3010
 10158   002130                     u3011:
 10159   002130  EFCF  F010         	goto	l3625
 10160   002134                     u3010:
 10161   002134  5010               	movf	___fladd@grs^0,w,c
 10162   002136  A4D8               	btfss	status,2,c
 10163   002138  EFA0  F010         	goto	u3021
 10164   00213C  EFA2  F010         	goto	u3020
 10165   002140                     u3021:
 10166   002140  EFCF  F010         	goto	l3625
 10167   002144                     u3020:
 10168   002144  0E00               	movlw	0
 10169   002146  6E01               	movwf	?___fladd^0,c
 10170   002148  0E00               	movlw	0
 10171   00214A  6E02               	movwf	(?___fladd+1)^0,c
 10172   00214C  0E00               	movlw	0
 10173   00214E  6E03               	movwf	(?___fladd+2)^0,c
 10174   002150  0E00               	movlw	0
 10175   002152  6E04               	movwf	(?___fladd+3)^0,c
 10176   002154  EF6A  F011         	goto	l1198
 10177   002158                     l3609:
 10178   002158  90D8               	bcf	status,0,c
 10179   00215A  3601               	rlcf	___fladd@b^0,f,c
 10180   00215C  3602               	rlcf	(___fladd@b+1)^0,f,c
 10181   00215E  3603               	rlcf	(___fladd@b+2)^0,f,c
 10182   002160  3604               	rlcf	(___fladd@b+3)^0,f,c
 10183   002162  AE10               	btfss	___fladd@grs^0,7,c
 10184   002164  EFB6  F010         	goto	u3031
 10185   002168  EFB8  F010         	goto	u3030
 10186   00216C                     u3031:
 10187   00216C  EFB9  F010         	goto	l3615
 10188   002170                     u3030:
 10189   002170  8001               	bsf	___fladd@b^0,0,c
 10190   002172                     l3615:
 10191   002172  A010               	btfss	___fladd@grs^0,0,c
 10192   002174  EFBE  F010         	goto	u3041
 10193   002178  EFC0  F010         	goto	u3040
 10194   00217C                     u3041:
 10195   00217C  EFC4  F010         	goto	l3619
 10196   002180                     u3040:
 10197   002180  80D8               	bsf	status,0,c
 10198   002182  3610               	rlcf	___fladd@grs^0,f,c
 10199   002184  EFC6  F010         	goto	l3621
 10200   002188                     l3619:
 10201   002188  90D8               	bcf	status,0,c
 10202   00218A  3610               	rlcf	___fladd@grs^0,f,c
 10203   00218C                     l3621:
 10204   00218C  500F               	movf	___fladd@bexp^0,w,c
 10205   00218E  B4D8               	btfsc	status,2,c
 10206   002190  EFCC  F010         	goto	u3051
 10207   002194  EFCE  F010         	goto	u3050
 10208   002198                     u3051:
 10209   002198  EFCF  F010         	goto	l3625
 10210   00219C                     u3050:
 10211   00219C  060F               	decf	___fladd@bexp^0,f,c
 10212   00219E                     l3625:
 10213   00219E  AE03               	btfss	(___fladd@b+2)^0,7,c
 10214   0021A0  EFD4  F010         	goto	u3061
 10215   0021A4  EFD6  F010         	goto	u3060
 10216   0021A8                     u3061:
 10217   0021A8  EFAC  F010         	goto	l3609
 10218   0021AC                     u3060:
 10219   0021AC                     l3627:
 10220   0021AC  0E00               	movlw	0
 10221   0021AE  6E0E               	movwf	___fladd@aexp^0,c
 10222   0021B0  AE10               	btfss	___fladd@grs^0,7,c
 10223   0021B2  EFDD  F010         	goto	u3071
 10224   0021B6  EFDF  F010         	goto	u3070
 10225   0021BA                     u3071:
 10226   0021BA  EFF7  F010         	goto	l1215
 10227   0021BE                     u3070:
 10228   0021BE  C010  F009         	movff	___fladd@grs,??___fladd
 10229   0021C2  0E7F               	movlw	127
 10230   0021C4  1609               	andwf	??___fladd^0,f,c
 10231   0021C6  B4D8               	btfsc	status,2,c
 10232   0021C8  EFE8  F010         	goto	u3081
 10233   0021CC  EFEA  F010         	goto	u3080
 10234   0021D0                     u3081:
 10235   0021D0  EFEE  F010         	goto	l1216
 10236   0021D4                     u3080:
 10237   0021D4                     l3633:
 10238   0021D4  0E01               	movlw	1
 10239   0021D6  6E0E               	movwf	___fladd@aexp^0,c
 10240   0021D8  EFF7  F010         	goto	l1215
 10241   0021DC                     l1216:
 10242   0021DC  A001               	btfss	___fladd@b^0,0,c
 10243   0021DE  EFF3  F010         	goto	u3091
 10244   0021E2  EFF5  F010         	goto	u3090
 10245   0021E6                     u3091:
 10246   0021E6  EFF7  F010         	goto	l1215
 10247   0021EA                     u3090:
 10248   0021EA  EFEA  F010         	goto	l3633
 10249   0021EE                     l1215:
 10250   0021EE  500E               	movf	___fladd@aexp^0,w,c
 10251   0021F0  B4D8               	btfsc	status,2,c
 10252   0021F2  EFFD  F010         	goto	u3101
 10253   0021F6  EFFF  F010         	goto	u3100
 10254   0021FA                     u3101:
 10255   0021FA  EF2A  F011         	goto	l3645
 10256   0021FE                     u3100:
 10257   0021FE  0E01               	movlw	1
 10258   002200  2601               	addwf	___fladd@b^0,f,c
 10259   002202  0E00               	movlw	0
 10260   002204  2202               	addwfc	(___fladd@b+1)^0,f,c
 10261   002206  2203               	addwfc	(___fladd@b+2)^0,f,c
 10262   002208  2204               	addwfc	(___fladd@b+3)^0,f,c
 10263   00220A  A004               	btfss	(___fladd@b+3)^0,0,c
 10264   00220C  EF0A  F011         	goto	u3111
 10265   002210  EF0C  F011         	goto	u3110
 10266   002214                     u3111:
 10267   002214  EF2A  F011         	goto	l3645
 10268   002218                     u3110:
 10269   002218  C001  F009         	movff	___fladd@b,??___fladd
 10270   00221C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10271   002220  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10272   002224  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10273   002228  340C               	rlcf	(??___fladd+3)^0,w,c
 10274   00222A  320C               	rrcf	(??___fladd+3)^0,f,c
 10275   00222C  320B               	rrcf	(??___fladd+2)^0,f,c
 10276   00222E  320A               	rrcf	(??___fladd+1)^0,f,c
 10277   002230  3209               	rrcf	??___fladd^0,f,c
 10278   002232  C009  F001         	movff	??___fladd,___fladd@b
 10279   002236  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10280   00223A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10281   00223E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10282   002242  280F               	incf	___fladd@bexp^0,w,c
 10283   002244  B4D8               	btfsc	status,2,c
 10284   002246  EF27  F011         	goto	u3121
 10285   00224A  EF29  F011         	goto	u3120
 10286   00224E                     u3121:
 10287   00224E  EF2A  F011         	goto	l3645
 10288   002252                     u3120:
 10289   002252  2A0F               	incf	___fladd@bexp^0,f,c
 10290   002254                     l3645:
 10291   002254  280F               	incf	___fladd@bexp^0,w,c
 10292   002256  B4D8               	btfsc	status,2,c
 10293   002258  EF30  F011         	goto	u3131
 10294   00225C  EF32  F011         	goto	u3130
 10295   002260                     u3131:
 10296   002260  EF3A  F011         	goto	l3649
 10297   002264                     u3130:
 10298   002264  500F               	movf	___fladd@bexp^0,w,c
 10299   002266  A4D8               	btfss	status,2,c
 10300   002268  EF38  F011         	goto	u3141
 10301   00226C  EF3A  F011         	goto	u3140
 10302   002270                     u3141:
 10303   002270  EF4C  F011         	goto	l3653
 10304   002274                     u3140:
 10305   002274                     l3649:
 10306   002274  0E00               	movlw	0
 10307   002276  6E01               	movwf	___fladd@b^0,c
 10308   002278  0E00               	movlw	0
 10309   00227A  6E02               	movwf	(___fladd@b+1)^0,c
 10310   00227C  0E00               	movlw	0
 10311   00227E  6E03               	movwf	(___fladd@b+2)^0,c
 10312   002280  0E00               	movlw	0
 10313   002282  6E04               	movwf	(___fladd@b+3)^0,c
 10314   002284  500F               	movf	___fladd@bexp^0,w,c
 10315   002286  A4D8               	btfss	status,2,c
 10316   002288  EF48  F011         	goto	u3151
 10317   00228C  EF4A  F011         	goto	u3150
 10318   002290                     u3151:
 10319   002290  EF4C  F011         	goto	l3653
 10320   002294                     u3150:
 10321   002294  0E00               	movlw	0
 10322   002296  6E0D               	movwf	___fladd@signs^0,c
 10323   002298                     l3653:
 10324   002298  A00F               	btfss	___fladd@bexp^0,0,c
 10325   00229A  EF51  F011         	goto	u3161
 10326   00229E  EF53  F011         	goto	u3160
 10327   0022A2                     u3161:
 10328   0022A2  EF56  F011         	goto	l3657
 10329   0022A6                     u3160:
 10330   0022A6  8E03               	bsf	(___fladd@b+2)^0,7,c
 10331   0022A8  EF57  F011         	goto	l3659
 10332   0022AC                     l3657:
 10333   0022AC  9E03               	bcf	(___fladd@b+2)^0,7,c
 10334   0022AE                     l3659:
 10335   0022AE  90D8               	bcf	status,0,c
 10336   0022B0  300F               	rrcf	___fladd@bexp^0,w,c
 10337   0022B2  6E04               	movwf	(___fladd@b+3)^0,c
 10338   0022B4  AE0D               	btfss	___fladd@signs^0,7,c
 10339   0022B6  EF5F  F011         	goto	u3171
 10340   0022BA  EF61  F011         	goto	u3170
 10341   0022BE                     u3171:
 10342   0022BE  EF62  F011         	goto	l3665
 10343   0022C2                     u3170:
 10344   0022C2  8E04               	bsf	(___fladd@b+3)^0,7,c
 10345   0022C4                     l3665:
 10346   0022C4  C001  F001         	movff	___fladd@b,?___fladd
 10347   0022C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10348   0022CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10349   0022D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10350   0022D4                     l1198:
 10351   0022D4  0012               	return		;funcret
 10352   0022D6                     __end_of___fladd:
 10353                           	callstack 0
 10354                           
 10355 ;; *************** function ___flmul *****************
 10356 ;; Defined at:
 10357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10358 ;; Parameters:    Size  Location     Type
 10359 ;;  b               4   49[COMRAM] unsigned char 
 10360 ;;  a               4   53[COMRAM] unsigned char 
 10361 ;; Auto vars:     Size  Location     Type
 10362 ;;  prod            4   68[COMRAM] struct .
 10363 ;;  grs             4   62[COMRAM] unsigned long 
 10364 ;;  temp            2   72[COMRAM] struct .
 10365 ;;  bexp            1   67[COMRAM] unsigned char 
 10366 ;;  aexp            1   66[COMRAM] unsigned char 
 10367 ;;  sign            1   61[COMRAM] unsigned char 
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  4   49[COMRAM] unsigned char 
 10370 ;; Registers used:
 10371 ;;		wreg, status,2, status,0, prodl, prodh
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10377 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10378 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10380 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10381 ;;Total ram usage:       25 bytes
 10382 ;; Hardware stack levels used: 1
 10383 ;; Hardware stack levels required when called: 1
 10384 ;; This function calls:
 10385 ;;		Nothing
 10386 ;; This function is called by:
 10387 ;;		_Colour_decider
 10388 ;;		_turnRight45
 10389 ;;		_turnLeft45
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text63
 10394   0022D6                     __ptext63:
 10395                           	callstack 0
 10396   0022D6                     ___flmul:
 10397                           	callstack 28
 10398   0022D6  5035               	movf	(___flmul@b+3)^0,w,c
 10399   0022D8  0B80               	andlw	128
 10400   0022DA  6E3E               	movwf	___flmul@sign^0,c
 10401   0022DC  5035               	movf	(___flmul@b+3)^0,w,c
 10402   0022DE  2435               	addwf	(___flmul@b+3)^0,w,c
 10403   0022E0  6E44               	movwf	___flmul@bexp^0,c
 10404   0022E2  AE34               	btfss	(___flmul@b+2)^0,7,c
 10405   0022E4  EF76  F011         	goto	u3451
 10406   0022E8  EF78  F011         	goto	u3450
 10407   0022EC                     u3451:
 10408   0022EC  EF79  F011         	goto	l3911
 10409   0022F0                     u3450:
 10410   0022F0  8044               	bsf	___flmul@bexp^0,0,c
 10411   0022F2                     l3911:
 10412   0022F2  5044               	movf	___flmul@bexp^0,w,c
 10413   0022F4  B4D8               	btfsc	status,2,c
 10414   0022F6  EF7F  F011         	goto	u3461
 10415   0022FA  EF81  F011         	goto	u3460
 10416   0022FE                     u3461:
 10417   0022FE  EF94  F011         	goto	l3919
 10418   002302                     u3460:
 10419   002302  2844               	incf	___flmul@bexp^0,w,c
 10420   002304  A4D8               	btfss	status,2,c
 10421   002306  EF87  F011         	goto	u3471
 10422   00230A  EF89  F011         	goto	u3470
 10423   00230E                     u3471:
 10424   00230E  EF91  F011         	goto	l3917
 10425   002312                     u3470:
 10426   002312  0E00               	movlw	0
 10427   002314  6E32               	movwf	___flmul@b^0,c
 10428   002316  0E00               	movlw	0
 10429   002318  6E33               	movwf	(___flmul@b+1)^0,c
 10430   00231A  0E00               	movlw	0
 10431   00231C  6E34               	movwf	(___flmul@b+2)^0,c
 10432   00231E  0E00               	movlw	0
 10433   002320  6E35               	movwf	(___flmul@b+3)^0,c
 10434   002322                     l3917:
 10435   002322  8E34               	bsf	(___flmul@b+2)^0,7,c
 10436   002324  EF9C  F011         	goto	l3921
 10437   002328                     l3919:
 10438   002328  0E00               	movlw	0
 10439   00232A  6E32               	movwf	___flmul@b^0,c
 10440   00232C  0E00               	movlw	0
 10441   00232E  6E33               	movwf	(___flmul@b+1)^0,c
 10442   002330  0E00               	movlw	0
 10443   002332  6E34               	movwf	(___flmul@b+2)^0,c
 10444   002334  0E00               	movlw	0
 10445   002336  6E35               	movwf	(___flmul@b+3)^0,c
 10446   002338                     l3921:
 10447   002338  5039               	movf	(___flmul@a+3)^0,w,c
 10448   00233A  0B80               	andlw	128
 10449   00233C  1A3E               	xorwf	___flmul@sign^0,f,c
 10450   00233E  5039               	movf	(___flmul@a+3)^0,w,c
 10451   002340  2439               	addwf	(___flmul@a+3)^0,w,c
 10452   002342  6E43               	movwf	___flmul@aexp^0,c
 10453   002344  AE38               	btfss	(___flmul@a+2)^0,7,c
 10454   002346  EFA7  F011         	goto	u3481
 10455   00234A  EFA9  F011         	goto	u3480
 10456   00234E                     u3481:
 10457   00234E  EFAA  F011         	goto	l3929
 10458   002352                     u3480:
 10459   002352  8043               	bsf	___flmul@aexp^0,0,c
 10460   002354                     l3929:
 10461   002354  5043               	movf	___flmul@aexp^0,w,c
 10462   002356  B4D8               	btfsc	status,2,c
 10463   002358  EFB0  F011         	goto	u3491
 10464   00235C  EFB2  F011         	goto	u3490
 10465   002360                     u3491:
 10466   002360  EFC5  F011         	goto	l3937
 10467   002364                     u3490:
 10468   002364  2843               	incf	___flmul@aexp^0,w,c
 10469   002366  A4D8               	btfss	status,2,c
 10470   002368  EFB8  F011         	goto	u3501
 10471   00236C  EFBA  F011         	goto	u3500
 10472   002370                     u3501:
 10473   002370  EFC2  F011         	goto	l3935
 10474   002374                     u3500:
 10475   002374  0E00               	movlw	0
 10476   002376  6E36               	movwf	___flmul@a^0,c
 10477   002378  0E00               	movlw	0
 10478   00237A  6E37               	movwf	(___flmul@a+1)^0,c
 10479   00237C  0E00               	movlw	0
 10480   00237E  6E38               	movwf	(___flmul@a+2)^0,c
 10481   002380  0E00               	movlw	0
 10482   002382  6E39               	movwf	(___flmul@a+3)^0,c
 10483   002384                     l3935:
 10484   002384  8E38               	bsf	(___flmul@a+2)^0,7,c
 10485   002386  EFCD  F011         	goto	l1275
 10486   00238A                     l3937:
 10487   00238A  0E00               	movlw	0
 10488   00238C  6E36               	movwf	___flmul@a^0,c
 10489   00238E  0E00               	movlw	0
 10490   002390  6E37               	movwf	(___flmul@a+1)^0,c
 10491   002392  0E00               	movlw	0
 10492   002394  6E38               	movwf	(___flmul@a+2)^0,c
 10493   002396  0E00               	movlw	0
 10494   002398  6E39               	movwf	(___flmul@a+3)^0,c
 10495   00239A                     l1275:
 10496   00239A  5043               	movf	___flmul@aexp^0,w,c
 10497   00239C  B4D8               	btfsc	status,2,c
 10498   00239E  EFD3  F011         	goto	u3511
 10499   0023A2  EFD5  F011         	goto	u3510
 10500   0023A6                     u3511:
 10501   0023A6  EFDD  F011         	goto	l3941
 10502   0023AA                     u3510:
 10503   0023AA  5044               	movf	___flmul@bexp^0,w,c
 10504   0023AC  A4D8               	btfss	status,2,c
 10505   0023AE  EFDB  F011         	goto	u3521
 10506   0023B2  EFDD  F011         	goto	u3520
 10507   0023B6                     u3521:
 10508   0023B6  EFE7  F011         	goto	l3945
 10509   0023BA                     u3520:
 10510   0023BA                     l3941:
 10511   0023BA  0E00               	movlw	0
 10512   0023BC  6E32               	movwf	?___flmul^0,c
 10513   0023BE  0E00               	movlw	0
 10514   0023C0  6E33               	movwf	(?___flmul+1)^0,c
 10515   0023C2  0E00               	movlw	0
 10516   0023C4  6E34               	movwf	(?___flmul+2)^0,c
 10517   0023C6  0E00               	movlw	0
 10518   0023C8  6E35               	movwf	(?___flmul+3)^0,c
 10519   0023CA  EF7F  F013         	goto	l1279
 10520   0023CE                     l3945:
 10521   0023CE  5038               	movf	(___flmul@a+2)^0,w,c
 10522   0023D0  0232               	mulwf	___flmul@b^0,c
 10523   0023D2  CFF3 F049          	movff	prodl,___flmul@temp
 10524   0023D6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10525   0023DA  5049               	movf	___flmul@temp^0,w,c
 10526   0023DC  6E3F               	movwf	___flmul@grs^0,c
 10527   0023DE  6A40               	clrf	(___flmul@grs+1)^0,c
 10528   0023E0  6A41               	clrf	(___flmul@grs+2)^0,c
 10529   0023E2  6A42               	clrf	(___flmul@grs+3)^0,c
 10530   0023E4  504A               	movf	(___flmul@temp+1)^0,w,c
 10531   0023E6  6E45               	movwf	___flmul@prod^0,c
 10532   0023E8  6A46               	clrf	(___flmul@prod+1)^0,c
 10533   0023EA  6A47               	clrf	(___flmul@prod+2)^0,c
 10534   0023EC  6A48               	clrf	(___flmul@prod+3)^0,c
 10535   0023EE  5037               	movf	(___flmul@a+1)^0,w,c
 10536   0023F0  0233               	mulwf	(___flmul@b+1)^0,c
 10537   0023F2  CFF3 F049          	movff	prodl,___flmul@temp
 10538   0023F6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10539   0023FA  5049               	movf	___flmul@temp^0,w,c
 10540   0023FC  263F               	addwf	___flmul@grs^0,f,c
 10541   0023FE  0E00               	movlw	0
 10542   002400  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10543   002402  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10544   002404  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10545   002406  504A               	movf	(___flmul@temp+1)^0,w,c
 10546   002408  2645               	addwf	___flmul@prod^0,f,c
 10547   00240A  0E00               	movlw	0
 10548   00240C  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10549   00240E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10550   002410  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10551   002412  5036               	movf	___flmul@a^0,w,c
 10552   002414  0234               	mulwf	(___flmul@b+2)^0,c
 10553   002416  CFF3 F049          	movff	prodl,___flmul@temp
 10554   00241A  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10555   00241E  5049               	movf	___flmul@temp^0,w,c
 10556   002420  263F               	addwf	___flmul@grs^0,f,c
 10557   002422  0E00               	movlw	0
 10558   002424  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10559   002426  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10560   002428  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10561   00242A  504A               	movf	(___flmul@temp+1)^0,w,c
 10562   00242C  2645               	addwf	___flmul@prod^0,f,c
 10563   00242E  0E00               	movlw	0
 10564   002430  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10565   002432  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10566   002434  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10567   002436  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10568   00243A  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10569   00243E  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10570   002442  6A3F               	clrf	___flmul@grs^0,c
 10571   002444  5036               	movf	___flmul@a^0,w,c
 10572   002446  0233               	mulwf	(___flmul@b+1)^0,c
 10573   002448  CFF3 F049          	movff	prodl,___flmul@temp
 10574   00244C  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10575   002450  5049               	movf	___flmul@temp^0,w,c
 10576   002452  263F               	addwf	___flmul@grs^0,f,c
 10577   002454  504A               	movf	(___flmul@temp+1)^0,w,c
 10578   002456  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10579   002458  0E00               	movlw	0
 10580   00245A  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10581   00245C  0E00               	movlw	0
 10582   00245E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10583   002460  5037               	movf	(___flmul@a+1)^0,w,c
 10584   002462  0232               	mulwf	___flmul@b^0,c
 10585   002464  CFF3 F049          	movff	prodl,___flmul@temp
 10586   002468  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10587   00246C  5049               	movf	___flmul@temp^0,w,c
 10588   00246E  263F               	addwf	___flmul@grs^0,f,c
 10589   002470  504A               	movf	(___flmul@temp+1)^0,w,c
 10590   002472  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10591   002474  0E00               	movlw	0
 10592   002476  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10593   002478  0E00               	movlw	0
 10594   00247A  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10595   00247C  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10596   002480  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10597   002484  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10598   002488  6A3F               	clrf	___flmul@grs^0,c
 10599   00248A  5036               	movf	___flmul@a^0,w,c
 10600   00248C  0232               	mulwf	___flmul@b^0,c
 10601   00248E  CFF3 F049          	movff	prodl,___flmul@temp
 10602   002492  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10603   002496  5049               	movf	___flmul@temp^0,w,c
 10604   002498  263F               	addwf	___flmul@grs^0,f,c
 10605   00249A  504A               	movf	(___flmul@temp+1)^0,w,c
 10606   00249C  2240               	addwfc	(___flmul@grs+1)^0,f,c
 10607   00249E  0E00               	movlw	0
 10608   0024A0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 10609   0024A2  0E00               	movlw	0
 10610   0024A4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 10611   0024A6  5038               	movf	(___flmul@a+2)^0,w,c
 10612   0024A8  0233               	mulwf	(___flmul@b+1)^0,c
 10613   0024AA  CFF3 F049          	movff	prodl,___flmul@temp
 10614   0024AE  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10615   0024B2  5049               	movf	___flmul@temp^0,w,c
 10616   0024B4  2645               	addwf	___flmul@prod^0,f,c
 10617   0024B6  504A               	movf	(___flmul@temp+1)^0,w,c
 10618   0024B8  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10619   0024BA  0E00               	movlw	0
 10620   0024BC  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10621   0024BE  0E00               	movlw	0
 10622   0024C0  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10623   0024C2  5037               	movf	(___flmul@a+1)^0,w,c
 10624   0024C4  0234               	mulwf	(___flmul@b+2)^0,c
 10625   0024C6  CFF3 F049          	movff	prodl,___flmul@temp
 10626   0024CA  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10627   0024CE  5049               	movf	___flmul@temp^0,w,c
 10628   0024D0  2645               	addwf	___flmul@prod^0,f,c
 10629   0024D2  504A               	movf	(___flmul@temp+1)^0,w,c
 10630   0024D4  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10631   0024D6  0E00               	movlw	0
 10632   0024D8  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10633   0024DA  0E00               	movlw	0
 10634   0024DC  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10635   0024DE  5038               	movf	(___flmul@a+2)^0,w,c
 10636   0024E0  0234               	mulwf	(___flmul@b+2)^0,c
 10637   0024E2  CFF3 F049          	movff	prodl,___flmul@temp
 10638   0024E6  CFF4 F04A          	movff	prodh,___flmul@temp+1
 10639   0024EA  5049               	movf	___flmul@temp^0,w,c
 10640   0024EC  6E3A               	movwf	??___flmul^0,c
 10641   0024EE  504A               	movf	(___flmul@temp+1)^0,w,c
 10642   0024F0  6E3B               	movwf	(??___flmul+1)^0,c
 10643   0024F2  6A3C               	clrf	(??___flmul+2)^0,c
 10644   0024F4  6A3D               	clrf	(??___flmul+3)^0,c
 10645   0024F6  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 10646   0024FA  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 10647   0024FE  C03A  F03B         	movff	??___flmul,??___flmul+1
 10648   002502  6A3A               	clrf	??___flmul^0,c
 10649   002504  503A               	movf	??___flmul^0,w,c
 10650   002506  2645               	addwf	___flmul@prod^0,f,c
 10651   002508  503B               	movf	(??___flmul+1)^0,w,c
 10652   00250A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10653   00250C  503C               	movf	(??___flmul+2)^0,w,c
 10654   00250E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10655   002510  503D               	movf	(??___flmul+3)^0,w,c
 10656   002512  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10657   002514  C03F  F03A         	movff	___flmul@grs,??___flmul
 10658   002518  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 10659   00251C  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 10660   002520  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 10661   002524  0E19               	movlw	25
 10662   002526  EF9A  F012         	goto	u3530
 10663   00252A                     u3535:
 10664   00252A  90D8               	bcf	status,0,c
 10665   00252C  323D               	rrcf	(??___flmul+3)^0,f,c
 10666   00252E  323C               	rrcf	(??___flmul+2)^0,f,c
 10667   002530  323B               	rrcf	(??___flmul+1)^0,f,c
 10668   002532  323A               	rrcf	??___flmul^0,f,c
 10669   002534                     u3530:
 10670   002534  2EE8               	decfsz	wreg,f,c
 10671   002536  EF95  F012         	goto	u3535
 10672   00253A  503A               	movf	??___flmul^0,w,c
 10673   00253C  2645               	addwf	___flmul@prod^0,f,c
 10674   00253E  503B               	movf	(??___flmul+1)^0,w,c
 10675   002540  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10676   002542  503C               	movf	(??___flmul+2)^0,w,c
 10677   002544  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10678   002546  503D               	movf	(??___flmul+3)^0,w,c
 10679   002548  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10680   00254A  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 10681   00254E  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 10682   002552  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 10683   002556  6A3F               	clrf	___flmul@grs^0,c
 10684   002558  5043               	movf	___flmul@aexp^0,w,c
 10685   00255A  C044  F03A         	movff	___flmul@bexp,??___flmul
 10686   00255E  6A3B               	clrf	(??___flmul+1)^0,c
 10687   002560  263A               	addwf	??___flmul^0,f,c
 10688   002562  0E00               	movlw	0
 10689   002564  223B               	addwfc	(??___flmul+1)^0,f,c
 10690   002566  0E82               	movlw	130
 10691   002568  243A               	addwf	??___flmul^0,w,c
 10692   00256A  6E49               	movwf	___flmul@temp^0,c
 10693   00256C  0EFF               	movlw	255
 10694   00256E  203B               	addwfc	(??___flmul+1)^0,w,c
 10695   002570  6E4A               	movwf	(___flmul@temp+1)^0,c
 10696   002572  EFD0  F012         	goto	l3993
 10697   002576                     l3987:
 10698   002576  90D8               	bcf	status,0,c
 10699   002578  3645               	rlcf	___flmul@prod^0,f,c
 10700   00257A  3646               	rlcf	(___flmul@prod+1)^0,f,c
 10701   00257C  3647               	rlcf	(___flmul@prod+2)^0,f,c
 10702   00257E  3648               	rlcf	(___flmul@prod+3)^0,f,c
 10703   002580  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10704   002582  EFC5  F012         	goto	u3541
 10705   002586  EFC7  F012         	goto	u3540
 10706   00258A                     u3541:
 10707   00258A  EFC8  F012         	goto	l1282
 10708   00258E                     u3540:
 10709   00258E  8045               	bsf	___flmul@prod^0,0,c
 10710   002590                     l1282:
 10711   002590  90D8               	bcf	status,0,c
 10712   002592  363F               	rlcf	___flmul@grs^0,f,c
 10713   002594  3640               	rlcf	(___flmul@grs+1)^0,f,c
 10714   002596  3641               	rlcf	(___flmul@grs+2)^0,f,c
 10715   002598  3642               	rlcf	(___flmul@grs+3)^0,f,c
 10716   00259A  0649               	decf	___flmul@temp^0,f,c
 10717   00259C  A0D8               	btfss	status,0,c
 10718   00259E  064A               	decf	(___flmul@temp+1)^0,f,c
 10719   0025A0                     l3993:
 10720   0025A0  AE47               	btfss	(___flmul@prod+2)^0,7,c
 10721   0025A2  EFD5  F012         	goto	u3551
 10722   0025A6  EFD7  F012         	goto	u3550
 10723   0025AA                     u3551:
 10724   0025AA  EFBB  F012         	goto	l3987
 10725   0025AE                     u3550:
 10726   0025AE  0E00               	movlw	0
 10727   0025B0  6E43               	movwf	___flmul@aexp^0,c
 10728   0025B2  AE42               	btfss	(___flmul@grs+3)^0,7,c
 10729   0025B4  EFDE  F012         	goto	u3561
 10730   0025B8  EFE0  F012         	goto	u3560
 10731   0025BC                     u3561:
 10732   0025BC  EF04  F013         	goto	l1284
 10733   0025C0                     u3560:
 10734   0025C0  0EFF               	movlw	255
 10735   0025C2  143F               	andwf	___flmul@grs^0,w,c
 10736   0025C4  6E3A               	movwf	??___flmul^0,c
 10737   0025C6  0EFF               	movlw	255
 10738   0025C8  1440               	andwf	(___flmul@grs+1)^0,w,c
 10739   0025CA  6E3B               	movwf	(??___flmul+1)^0,c
 10740   0025CC  0EFF               	movlw	255
 10741   0025CE  1441               	andwf	(___flmul@grs+2)^0,w,c
 10742   0025D0  6E3C               	movwf	(??___flmul+2)^0,c
 10743   0025D2  0E7F               	movlw	127
 10744   0025D4  1442               	andwf	(___flmul@grs+3)^0,w,c
 10745   0025D6  6E3D               	movwf	(??___flmul+3)^0,c
 10746   0025D8  503A               	movf	??___flmul^0,w,c
 10747   0025DA  103B               	iorwf	(??___flmul+1)^0,w,c
 10748   0025DC  103C               	iorwf	(??___flmul+2)^0,w,c
 10749   0025DE  103D               	iorwf	(??___flmul+3)^0,w,c
 10750   0025E0  B4D8               	btfsc	status,2,c
 10751   0025E2  EFF5  F012         	goto	u3571
 10752   0025E6  EFF7  F012         	goto	u3570
 10753   0025EA                     u3571:
 10754   0025EA  EFFB  F012         	goto	l1285
 10755   0025EE                     u3570:
 10756   0025EE                     l4001:
 10757   0025EE  0E01               	movlw	1
 10758   0025F0  6E43               	movwf	___flmul@aexp^0,c
 10759   0025F2  EF04  F013         	goto	l1284
 10760   0025F6                     l1285:
 10761   0025F6  A045               	btfss	___flmul@prod^0,0,c
 10762   0025F8  EF00  F013         	goto	u3581
 10763   0025FC  EF02  F013         	goto	u3580
 10764   002600                     u3581:
 10765   002600  EF04  F013         	goto	l1284
 10766   002604                     u3580:
 10767   002604  EFF7  F012         	goto	l4001
 10768   002608                     l1284:
 10769   002608  5043               	movf	___flmul@aexp^0,w,c
 10770   00260A  B4D8               	btfsc	status,2,c
 10771   00260C  EF0A  F013         	goto	u3591
 10772   002610  EF0C  F013         	goto	u3590
 10773   002614                     u3591:
 10774   002614  EF30  F013         	goto	l4013
 10775   002618                     u3590:
 10776   002618  0E01               	movlw	1
 10777   00261A  2645               	addwf	___flmul@prod^0,f,c
 10778   00261C  0E00               	movlw	0
 10779   00261E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 10780   002620  2247               	addwfc	(___flmul@prod+2)^0,f,c
 10781   002622  2248               	addwfc	(___flmul@prod+3)^0,f,c
 10782   002624  A048               	btfss	(___flmul@prod+3)^0,0,c
 10783   002626  EF17  F013         	goto	u3601
 10784   00262A  EF19  F013         	goto	u3600
 10785   00262E                     u3601:
 10786   00262E  EF30  F013         	goto	l4013
 10787   002632                     u3600:
 10788   002632  C045  F03A         	movff	___flmul@prod,??___flmul
 10789   002636  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 10790   00263A  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 10791   00263E  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 10792   002642  343D               	rlcf	(??___flmul+3)^0,w,c
 10793   002644  323D               	rrcf	(??___flmul+3)^0,f,c
 10794   002646  323C               	rrcf	(??___flmul+2)^0,f,c
 10795   002648  323B               	rrcf	(??___flmul+1)^0,f,c
 10796   00264A  323A               	rrcf	??___flmul^0,f,c
 10797   00264C  C03A  F045         	movff	??___flmul,___flmul@prod
 10798   002650  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 10799   002654  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 10800   002658  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 10801   00265C  4A49               	infsnz	___flmul@temp^0,f,c
 10802   00265E  2A4A               	incf	(___flmul@temp+1)^0,f,c
 10803   002660                     l4013:
 10804   002660  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10805   002662  EF3B  F013         	goto	u3611
 10806   002666  504A               	movf	(___flmul@temp+1)^0,w,c
 10807   002668  E108               	bnz	u3610
 10808   00266A  2849               	incf	___flmul@temp^0,w,c
 10809   00266C  A0D8               	btfss	status,0,c
 10810   00266E  EF3B  F013         	goto	u3611
 10811   002672  EF3D  F013         	goto	u3610
 10812   002676                     u3611:
 10813   002676  EF47  F013         	goto	l4017
 10814   00267A                     u3610:
 10815   00267A  0E00               	movlw	0
 10816   00267C  6E45               	movwf	___flmul@prod^0,c
 10817   00267E  0E00               	movlw	0
 10818   002680  6E46               	movwf	(___flmul@prod+1)^0,c
 10819   002682  0E80               	movlw	128
 10820   002684  6E47               	movwf	(___flmul@prod+2)^0,c
 10821   002686  0E7F               	movlw	127
 10822   002688  6E48               	movwf	(___flmul@prod+3)^0,c
 10823   00268A  EF75  F013         	goto	l4029
 10824   00268E                     l4017:
 10825   00268E  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 10826   002690  EF54  F013         	goto	u3620
 10827   002694  504A               	movf	(___flmul@temp+1)^0,w,c
 10828   002696  E106               	bnz	u3621
 10829   002698  0449               	decf	___flmul@temp^0,w,c
 10830   00269A  B0D8               	btfsc	status,0,c
 10831   00269C  EF52  F013         	goto	u3621
 10832   0026A0  EF54  F013         	goto	u3620
 10833   0026A4                     u3621:
 10834   0026A4  EF60  F013         	goto	l1292
 10835   0026A8                     u3620:
 10836   0026A8  0E00               	movlw	0
 10837   0026AA  6E45               	movwf	___flmul@prod^0,c
 10838   0026AC  0E00               	movlw	0
 10839   0026AE  6E46               	movwf	(___flmul@prod+1)^0,c
 10840   0026B0  0E00               	movlw	0
 10841   0026B2  6E47               	movwf	(___flmul@prod+2)^0,c
 10842   0026B4  0E00               	movlw	0
 10843   0026B6  6E48               	movwf	(___flmul@prod+3)^0,c
 10844   0026B8  0E00               	movlw	0
 10845   0026BA  6E3E               	movwf	___flmul@sign^0,c
 10846   0026BC  EF75  F013         	goto	l4029
 10847   0026C0                     l1292:
 10848   0026C0  C049  F044         	movff	___flmul@temp,___flmul@bexp
 10849   0026C4  0EFF               	movlw	255
 10850   0026C6  1645               	andwf	___flmul@prod^0,f,c
 10851   0026C8  0EFF               	movlw	255
 10852   0026CA  1646               	andwf	(___flmul@prod+1)^0,f,c
 10853   0026CC  0E7F               	movlw	127
 10854   0026CE  1647               	andwf	(___flmul@prod+2)^0,f,c
 10855   0026D0  0E00               	movlw	0
 10856   0026D2  1648               	andwf	(___flmul@prod+3)^0,f,c
 10857   0026D4  A044               	btfss	___flmul@bexp^0,0,c
 10858   0026D6  EF6F  F013         	goto	u3631
 10859   0026DA  EF71  F013         	goto	u3630
 10860   0026DE                     u3631:
 10861   0026DE  EF72  F013         	goto	l4027
 10862   0026E2                     u3630:
 10863   0026E2  8E47               	bsf	(___flmul@prod+2)^0,7,c
 10864   0026E4                     l4027:
 10865   0026E4  90D8               	bcf	status,0,c
 10866   0026E6  3044               	rrcf	___flmul@bexp^0,w,c
 10867   0026E8  6E48               	movwf	(___flmul@prod+3)^0,c
 10868   0026EA                     l4029:
 10869   0026EA  503E               	movf	___flmul@sign^0,w,c
 10870   0026EC  1248               	iorwf	(___flmul@prod+3)^0,f,c
 10871   0026EE  C045  F032         	movff	___flmul@prod,?___flmul
 10872   0026F2  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 10873   0026F6  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 10874   0026FA  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 10875   0026FE                     l1279:
 10876   0026FE  0012               	return		;funcret
 10877   002700                     __end_of___flmul:
 10878                           	callstack 0
 10879                           
 10880 ;; *************** function ___flge *****************
 10881 ;; Defined at:
 10882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10883 ;; Parameters:    Size  Location     Type
 10884 ;;  ff1             4    0[COMRAM] unsigned char 
 10885 ;;  ff2             4    4[COMRAM] unsigned char 
 10886 ;; Auto vars:     Size  Location     Type
 10887 ;;		None
 10888 ;; Return value:  Size  Location     Type
 10889 ;;		None               void
 10890 ;; Registers used:
 10891 ;;		wreg, status,2, status,0
 10892 ;; Tracked objects:
 10893 ;;		On entry : 0/0
 10894 ;;		On exit  : 0/0
 10895 ;;		Unchanged: 0/0
 10896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10897 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10899 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10900 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10901 ;;Total ram usage:       12 bytes
 10902 ;; Hardware stack levels used: 1
 10903 ;; Hardware stack levels required when called: 1
 10904 ;; This function calls:
 10905 ;;		Nothing
 10906 ;; This function is called by:
 10907 ;;		_Colour_decider
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text64
 10912   0039D4                     __ptext64:
 10913                           	callstack 0
 10914   0039D4                     ___flge:
 10915                           	callstack 28
 10916   0039D4  0E00               	movlw	0
 10917   0039D6  1401               	andwf	___flge@ff1^0,w,c
 10918   0039D8  6E09               	movwf	??___flge^0,c
 10919   0039DA  0E00               	movlw	0
 10920   0039DC  1402               	andwf	(___flge@ff1+1)^0,w,c
 10921   0039DE  6E0A               	movwf	(??___flge+1)^0,c
 10922   0039E0  0E80               	movlw	128
 10923   0039E2  1403               	andwf	(___flge@ff1+2)^0,w,c
 10924   0039E4  6E0B               	movwf	(??___flge+2)^0,c
 10925   0039E6  0E7F               	movlw	127
 10926   0039E8  1404               	andwf	(___flge@ff1+3)^0,w,c
 10927   0039EA  6E0C               	movwf	(??___flge+3)^0,c
 10928   0039EC  5009               	movf	??___flge^0,w,c
 10929   0039EE  100A               	iorwf	(??___flge+1)^0,w,c
 10930   0039F0  100B               	iorwf	(??___flge+2)^0,w,c
 10931   0039F2  100C               	iorwf	(??___flge+3)^0,w,c
 10932   0039F4  A4D8               	btfss	status,2,c
 10933   0039F6  EFFF  F01C         	goto	u3671
 10934   0039FA  EF01  F01D         	goto	u3670
 10935   0039FE                     u3671:
 10936   0039FE  EF09  F01D         	goto	l4061
 10937   003A02                     u3670:
 10938   003A02  0E00               	movlw	0
 10939   003A04  6E01               	movwf	___flge@ff1^0,c
 10940   003A06  0E00               	movlw	0
 10941   003A08  6E02               	movwf	(___flge@ff1+1)^0,c
 10942   003A0A  0E00               	movlw	0
 10943   003A0C  6E03               	movwf	(___flge@ff1+2)^0,c
 10944   003A0E  0E00               	movlw	0
 10945   003A10  6E04               	movwf	(___flge@ff1+3)^0,c
 10946   003A12                     l4061:
 10947   003A12  0E00               	movlw	0
 10948   003A14  1405               	andwf	___flge@ff2^0,w,c
 10949   003A16  6E09               	movwf	??___flge^0,c
 10950   003A18  0E00               	movlw	0
 10951   003A1A  1406               	andwf	(___flge@ff2+1)^0,w,c
 10952   003A1C  6E0A               	movwf	(??___flge+1)^0,c
 10953   003A1E  0E80               	movlw	128
 10954   003A20  1407               	andwf	(___flge@ff2+2)^0,w,c
 10955   003A22  6E0B               	movwf	(??___flge+2)^0,c
 10956   003A24  0E7F               	movlw	127
 10957   003A26  1408               	andwf	(___flge@ff2+3)^0,w,c
 10958   003A28  6E0C               	movwf	(??___flge+3)^0,c
 10959   003A2A  5009               	movf	??___flge^0,w,c
 10960   003A2C  100A               	iorwf	(??___flge+1)^0,w,c
 10961   003A2E  100B               	iorwf	(??___flge+2)^0,w,c
 10962   003A30  100C               	iorwf	(??___flge+3)^0,w,c
 10963   003A32  A4D8               	btfss	status,2,c
 10964   003A34  EF1E  F01D         	goto	u3681
 10965   003A38  EF20  F01D         	goto	u3680
 10966   003A3C                     u3681:
 10967   003A3C  EF28  F01D         	goto	l4065
 10968   003A40                     u3680:
 10969   003A40  0E00               	movlw	0
 10970   003A42  6E05               	movwf	___flge@ff2^0,c
 10971   003A44  0E00               	movlw	0
 10972   003A46  6E06               	movwf	(___flge@ff2+1)^0,c
 10973   003A48  0E00               	movlw	0
 10974   003A4A  6E07               	movwf	(___flge@ff2+2)^0,c
 10975   003A4C  0E00               	movlw	0
 10976   003A4E  6E08               	movwf	(___flge@ff2+3)^0,c
 10977   003A50                     l4065:
 10978   003A50  AE04               	btfss	(___flge@ff1+3)^0,7,c
 10979   003A52  EF2D  F01D         	goto	u3691
 10980   003A56  EF2F  F01D         	goto	u3690
 10981   003A5A                     u3691:
 10982   003A5A  EF38  F01D         	goto	l4069
 10983   003A5E                     u3690:
 10984   003A5E  6C01               	negf	___flge@ff1^0,c
 10985   003A60  1E02               	comf	(___flge@ff1+1)^0,f,c
 10986   003A62  B0D8               	btfsc	status,0,c
 10987   003A64  2A02               	incf	(___flge@ff1+1)^0,f,c
 10988   003A66  1E03               	comf	(___flge@ff1+2)^0,f,c
 10989   003A68  B0D8               	btfsc	status,0,c
 10990   003A6A  2A03               	incf	(___flge@ff1+2)^0,f,c
 10991   003A6C  0E80               	movlw	128
 10992   003A6E  5604               	subfwb	(___flge@ff1+3)^0,f,c
 10993   003A70                     l4069:
 10994   003A70  AE08               	btfss	(___flge@ff2+3)^0,7,c
 10995   003A72  EF3D  F01D         	goto	u3701
 10996   003A76  EF3F  F01D         	goto	u3700
 10997   003A7A                     u3701:
 10998   003A7A  EF48  F01D         	goto	l926
 10999   003A7E                     u3700:
 11000   003A7E  6C05               	negf	___flge@ff2^0,c
 11001   003A80  1E06               	comf	(___flge@ff2+1)^0,f,c
 11002   003A82  B0D8               	btfsc	status,0,c
 11003   003A84  2A06               	incf	(___flge@ff2+1)^0,f,c
 11004   003A86  1E07               	comf	(___flge@ff2+2)^0,f,c
 11005   003A88  B0D8               	btfsc	status,0,c
 11006   003A8A  2A07               	incf	(___flge@ff2+2)^0,f,c
 11007   003A8C  0E80               	movlw	128
 11008   003A8E  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11009   003A90                     l926:
 11010   003A90  0E00               	movlw	0
 11011   003A92  1A01               	xorwf	___flge@ff1^0,f,c
 11012   003A94  0E00               	movlw	0
 11013   003A96  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11014   003A98  0E00               	movlw	0
 11015   003A9A  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11016   003A9C  0E80               	movlw	128
 11017   003A9E  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11018   003AA0  0E00               	movlw	0
 11019   003AA2  1A05               	xorwf	___flge@ff2^0,f,c
 11020   003AA4  0E00               	movlw	0
 11021   003AA6  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11022   003AA8  0E00               	movlw	0
 11023   003AAA  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11024   003AAC  0E80               	movlw	128
 11025   003AAE  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11026   003AB0  5005               	movf	___flge@ff2^0,w,c
 11027   003AB2  5C01               	subwf	___flge@ff1^0,w,c
 11028   003AB4  5006               	movf	(___flge@ff2+1)^0,w,c
 11029   003AB6  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11030   003AB8  5007               	movf	(___flge@ff2+2)^0,w,c
 11031   003ABA  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11032   003ABC  5008               	movf	(___flge@ff2+3)^0,w,c
 11033   003ABE  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11034   003AC0  B0D8               	btfsc	status,0,c
 11035   003AC2  EF65  F01D         	goto	u3711
 11036   003AC6  EF67  F01D         	goto	u3710
 11037   003ACA                     u3711:
 11038   003ACA  EF6A  F01D         	goto	l4075
 11039   003ACE                     u3710:
 11040   003ACE  90D8               	bcf	status,0,c
 11041   003AD0  EF6B  F01D         	goto	l931
 11042   003AD4                     l4075:
 11043   003AD4  80D8               	bsf	status,0,c
 11044   003AD6                     l931:
 11045   003AD6  0012               	return		;funcret
 11046   003AD8                     __end_of___flge:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function ___fleq *****************
 11050 ;; Defined at:
 11051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  ff1             4   24[COMRAM] unsigned char 
 11054 ;;  ff2             4   28[COMRAM] unsigned char 
 11055 ;; Auto vars:     Size  Location     Type
 11056 ;;		None
 11057 ;; Return value:  Size  Location     Type
 11058 ;;		None               void
 11059 ;; Registers used:
 11060 ;;		wreg, status,2, status,0
 11061 ;; Tracked objects:
 11062 ;;		On entry : 0/0
 11063 ;;		On exit  : 0/0
 11064 ;;		Unchanged: 0/0
 11065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11066 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11068 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11069 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11070 ;;Total ram usage:       12 bytes
 11071 ;; Hardware stack levels used: 1
 11072 ;; Hardware stack levels required when called: 1
 11073 ;; This function calls:
 11074 ;;		Nothing
 11075 ;; This function is called by:
 11076 ;;		_Colour_decider
 11077 ;; This function uses a non-reentrant model
 11078 ;;
 11079                           
 11080                           	psect	text65
 11081   003BA2                     __ptext65:
 11082                           	callstack 0
 11083   003BA2                     ___fleq:
 11084                           	callstack 28
 11085   003BA2  0E00               	movlw	0
 11086   003BA4  1419               	andwf	___fleq@ff1^0,w,c
 11087   003BA6  6E21               	movwf	??___fleq^0,c
 11088   003BA8  0E00               	movlw	0
 11089   003BAA  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11090   003BAC  6E22               	movwf	(??___fleq+1)^0,c
 11091   003BAE  0E80               	movlw	128
 11092   003BB0  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11093   003BB2  6E23               	movwf	(??___fleq+2)^0,c
 11094   003BB4  0E7F               	movlw	127
 11095   003BB6  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11096   003BB8  6E24               	movwf	(??___fleq+3)^0,c
 11097   003BBA  5021               	movf	??___fleq^0,w,c
 11098   003BBC  1022               	iorwf	(??___fleq+1)^0,w,c
 11099   003BBE  1023               	iorwf	(??___fleq+2)^0,w,c
 11100   003BC0  1024               	iorwf	(??___fleq+3)^0,w,c
 11101   003BC2  A4D8               	btfss	status,2,c
 11102   003BC4  EFE6  F01D         	goto	u3641
 11103   003BC8  EFE8  F01D         	goto	u3640
 11104   003BCC                     u3641:
 11105   003BCC  EFF0  F01D         	goto	l4045
 11106   003BD0                     u3640:
 11107   003BD0  0E00               	movlw	0
 11108   003BD2  6E19               	movwf	___fleq@ff1^0,c
 11109   003BD4  0E00               	movlw	0
 11110   003BD6  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11111   003BD8  0E00               	movlw	0
 11112   003BDA  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11113   003BDC  0E00               	movlw	0
 11114   003BDE  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11115   003BE0                     l4045:
 11116   003BE0  0E00               	movlw	0
 11117   003BE2  141D               	andwf	___fleq@ff2^0,w,c
 11118   003BE4  6E21               	movwf	??___fleq^0,c
 11119   003BE6  0E00               	movlw	0
 11120   003BE8  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11121   003BEA  6E22               	movwf	(??___fleq+1)^0,c
 11122   003BEC  0E80               	movlw	128
 11123   003BEE  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11124   003BF0  6E23               	movwf	(??___fleq+2)^0,c
 11125   003BF2  0E7F               	movlw	127
 11126   003BF4  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11127   003BF6  6E24               	movwf	(??___fleq+3)^0,c
 11128   003BF8  5021               	movf	??___fleq^0,w,c
 11129   003BFA  1022               	iorwf	(??___fleq+1)^0,w,c
 11130   003BFC  1023               	iorwf	(??___fleq+2)^0,w,c
 11131   003BFE  1024               	iorwf	(??___fleq+3)^0,w,c
 11132   003C00  A4D8               	btfss	status,2,c
 11133   003C02  EF05  F01E         	goto	u3651
 11134   003C06  EF07  F01E         	goto	u3650
 11135   003C0A                     u3651:
 11136   003C0A  EF0F  F01E         	goto	l4049
 11137   003C0E                     u3650:
 11138   003C0E  0E00               	movlw	0
 11139   003C10  6E1D               	movwf	___fleq@ff2^0,c
 11140   003C12  0E00               	movlw	0
 11141   003C14  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11142   003C16  0E00               	movlw	0
 11143   003C18  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11144   003C1A  0E00               	movlw	0
 11145   003C1C  6E20               	movwf	(___fleq@ff2+3)^0,c
 11146   003C1E                     l4049:
 11147   003C1E  501D               	movf	___fleq@ff2^0,w,c
 11148   003C20  1819               	xorwf	___fleq@ff1^0,w,c
 11149   003C22  E10F               	bnz	u3660
 11150   003C24  501E               	movf	(___fleq@ff2+1)^0,w,c
 11151   003C26  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11152   003C28  E10C               	bnz	u3660
 11153   003C2A  501F               	movf	(___fleq@ff2+2)^0,w,c
 11154   003C2C  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11155   003C2E  E109               	bnz	u3660
 11156   003C30  5020               	movf	(___fleq@ff2+3)^0,w,c
 11157   003C32  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11158   003C34  B4D8               	btfsc	status,2,c
 11159   003C36  EF1F  F01E         	goto	u3661
 11160   003C3A  EF21  F01E         	goto	u3660
 11161   003C3E                     u3661:
 11162   003C3E  EF24  F01E         	goto	l4053
 11163   003C42                     u3660:
 11164   003C42  90D8               	bcf	status,0,c
 11165   003C44  EF25  F01E         	goto	l920
 11166   003C48                     l4053:
 11167   003C48  80D8               	bsf	status,0,c
 11168   003C4A                     l920:
 11169   003C4A  0012               	return		;funcret
 11170   003C4C                     __end_of___fleq:
 11171                           	callstack 0
 11172                           
 11173 ;; *************** function ___fldiv *****************
 11174 ;; Defined at:
 11175 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  b               4   24[COMRAM] unsigned char 
 11178 ;;  a               4   28[COMRAM] unsigned char 
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;  grs             4   43[COMRAM] unsigned long 
 11181 ;;  rem             4   36[COMRAM] unsigned long 
 11182 ;;  new_exp         2   41[COMRAM] short 
 11183 ;;  aexp            1   48[COMRAM] unsigned char 
 11184 ;;  bexp            1   47[COMRAM] unsigned char 
 11185 ;;  sign            1   40[COMRAM] unsigned char 
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  4   24[COMRAM] unsigned char 
 11188 ;; Registers used:
 11189 ;;		wreg, status,2, status,0
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11195 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11196 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11197 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11198 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11199 ;;Total ram usage:       25 bytes
 11200 ;; Hardware stack levels used: 1
 11201 ;; Hardware stack levels required when called: 1
 11202 ;; This function calls:
 11203 ;;		Nothing
 11204 ;; This function is called by:
 11205 ;;		_colour_rel
 11206 ;;		_Colour_decider
 11207 ;; This function uses a non-reentrant model
 11208 ;;
 11209                           
 11210                           	psect	text66
 11211   002700                     __ptext66:
 11212                           	callstack 0
 11213   002700                     ___fldiv:
 11214                           	callstack 28
 11215   002700  501C               	movf	(___fldiv@b+3)^0,w,c
 11216   002702  0B80               	andlw	128
 11217   002704  6E29               	movwf	___fldiv@sign^0,c
 11218   002706  501C               	movf	(___fldiv@b+3)^0,w,c
 11219   002708  241C               	addwf	(___fldiv@b+3)^0,w,c
 11220   00270A  6E30               	movwf	___fldiv@bexp^0,c
 11221   00270C  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11222   00270E  EF8B  F013         	goto	u3221
 11223   002712  EF8D  F013         	goto	u3220
 11224   002716                     u3221:
 11225   002716  EF8E  F013         	goto	l3773
 11226   00271A                     u3220:
 11227   00271A  8030               	bsf	___fldiv@bexp^0,0,c
 11228   00271C                     l3773:
 11229   00271C  5030               	movf	___fldiv@bexp^0,w,c
 11230   00271E  B4D8               	btfsc	status,2,c
 11231   002720  EF94  F013         	goto	u3231
 11232   002724  EF96  F013         	goto	u3230
 11233   002728                     u3231:
 11234   002728  EFAB  F013         	goto	l3783
 11235   00272C                     u3230:
 11236   00272C  2830               	incf	___fldiv@bexp^0,w,c
 11237   00272E  A4D8               	btfss	status,2,c
 11238   002730  EF9C  F013         	goto	u3241
 11239   002734  EF9E  F013         	goto	u3240
 11240   002738                     u3241:
 11241   002738  EFA6  F013         	goto	l3779
 11242   00273C                     u3240:
 11243   00273C  0E00               	movlw	0
 11244   00273E  6E19               	movwf	___fldiv@b^0,c
 11245   002740  0E00               	movlw	0
 11246   002742  6E1A               	movwf	(___fldiv@b+1)^0,c
 11247   002744  0E00               	movlw	0
 11248   002746  6E1B               	movwf	(___fldiv@b+2)^0,c
 11249   002748  0E00               	movlw	0
 11250   00274A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11251   00274C                     l3779:
 11252   00274C  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11253   00274E  0E00               	movlw	0
 11254   002750  6E1C               	movwf	(___fldiv@b+3)^0,c
 11255   002752  EFB3  F013         	goto	l3785
 11256   002756                     l3783:
 11257   002756  0E00               	movlw	0
 11258   002758  6E19               	movwf	___fldiv@b^0,c
 11259   00275A  0E00               	movlw	0
 11260   00275C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11261   00275E  0E00               	movlw	0
 11262   002760  6E1B               	movwf	(___fldiv@b+2)^0,c
 11263   002762  0E00               	movlw	0
 11264   002764  6E1C               	movwf	(___fldiv@b+3)^0,c
 11265   002766                     l3785:
 11266   002766  5020               	movf	(___fldiv@a+3)^0,w,c
 11267   002768  0B80               	andlw	128
 11268   00276A  1A29               	xorwf	___fldiv@sign^0,f,c
 11269   00276C  5020               	movf	(___fldiv@a+3)^0,w,c
 11270   00276E  2420               	addwf	(___fldiv@a+3)^0,w,c
 11271   002770  6E31               	movwf	___fldiv@aexp^0,c
 11272   002772  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11273   002774  EFBE  F013         	goto	u3251
 11274   002778  EFC0  F013         	goto	u3250
 11275   00277C                     u3251:
 11276   00277C  EFC1  F013         	goto	l3793
 11277   002780                     u3250:
 11278   002780  8031               	bsf	___fldiv@aexp^0,0,c
 11279   002782                     l3793:
 11280   002782  5031               	movf	___fldiv@aexp^0,w,c
 11281   002784  B4D8               	btfsc	status,2,c
 11282   002786  EFC7  F013         	goto	u3261
 11283   00278A  EFC9  F013         	goto	u3260
 11284   00278E                     u3261:
 11285   00278E  EFDE  F013         	goto	l3803
 11286   002792                     u3260:
 11287   002792  2831               	incf	___fldiv@aexp^0,w,c
 11288   002794  A4D8               	btfss	status,2,c
 11289   002796  EFCF  F013         	goto	u3271
 11290   00279A  EFD1  F013         	goto	u3270
 11291   00279E                     u3271:
 11292   00279E  EFD9  F013         	goto	l3799
 11293   0027A2                     u3270:
 11294   0027A2  0E00               	movlw	0
 11295   0027A4  6E1D               	movwf	___fldiv@a^0,c
 11296   0027A6  0E00               	movlw	0
 11297   0027A8  6E1E               	movwf	(___fldiv@a+1)^0,c
 11298   0027AA  0E00               	movlw	0
 11299   0027AC  6E1F               	movwf	(___fldiv@a+2)^0,c
 11300   0027AE  0E00               	movlw	0
 11301   0027B0  6E20               	movwf	(___fldiv@a+3)^0,c
 11302   0027B2                     l3799:
 11303   0027B2  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 11304   0027B4  0E00               	movlw	0
 11305   0027B6  6E20               	movwf	(___fldiv@a+3)^0,c
 11306   0027B8  EFE6  F013         	goto	l3805
 11307   0027BC                     l3803:
 11308   0027BC  0E00               	movlw	0
 11309   0027BE  6E1D               	movwf	___fldiv@a^0,c
 11310   0027C0  0E00               	movlw	0
 11311   0027C2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11312   0027C4  0E00               	movlw	0
 11313   0027C6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11314   0027C8  0E00               	movlw	0
 11315   0027CA  6E20               	movwf	(___fldiv@a+3)^0,c
 11316   0027CC                     l3805:
 11317   0027CC  501D               	movf	___fldiv@a^0,w,c
 11318   0027CE  101E               	iorwf	(___fldiv@a+1)^0,w,c
 11319   0027D0  101F               	iorwf	(___fldiv@a+2)^0,w,c
 11320   0027D2  1020               	iorwf	(___fldiv@a+3)^0,w,c
 11321   0027D4  A4D8               	btfss	status,2,c
 11322   0027D6  EFEF  F013         	goto	u3281
 11323   0027DA  EFF1  F013         	goto	u3280
 11324   0027DE                     u3281:
 11325   0027DE  EF09  F014         	goto	l3817
 11326   0027E2                     u3280:
 11327   0027E2  0E00               	movlw	0
 11328   0027E4  6E19               	movwf	___fldiv@b^0,c
 11329   0027E6  0E00               	movlw	0
 11330   0027E8  6E1A               	movwf	(___fldiv@b+1)^0,c
 11331   0027EA  0E00               	movlw	0
 11332   0027EC  6E1B               	movwf	(___fldiv@b+2)^0,c
 11333   0027EE  0E00               	movlw	0
 11334   0027F0  6E1C               	movwf	(___fldiv@b+3)^0,c
 11335   0027F2  0E80               	movlw	128
 11336   0027F4  121B               	iorwf	(___fldiv@b+2)^0,f,c
 11337   0027F6  0E7F               	movlw	127
 11338   0027F8  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11339   0027FA                     l3811:
 11340   0027FA  5029               	movf	___fldiv@sign^0,w,c
 11341   0027FC  121C               	iorwf	(___fldiv@b+3)^0,f,c
 11342   0027FE  C019  F019         	movff	___fldiv@b,?___fldiv
 11343   002802  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 11344   002806  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 11345   00280A  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 11346   00280E  EF4C  F015         	goto	l1243
 11347   002812                     l3817:
 11348   002812  5030               	movf	___fldiv@bexp^0,w,c
 11349   002814  A4D8               	btfss	status,2,c
 11350   002816  EF0F  F014         	goto	u3291
 11351   00281A  EF11  F014         	goto	u3290
 11352   00281E                     u3291:
 11353   00281E  EF1B  F014         	goto	l3825
 11354   002822                     u3290:
 11355   002822  0E00               	movlw	0
 11356   002824  6E19               	movwf	?___fldiv^0,c
 11357   002826  0E00               	movlw	0
 11358   002828  6E1A               	movwf	(?___fldiv+1)^0,c
 11359   00282A  0E00               	movlw	0
 11360   00282C  6E1B               	movwf	(?___fldiv+2)^0,c
 11361   00282E  0E00               	movlw	0
 11362   002830  6E1C               	movwf	(?___fldiv+3)^0,c
 11363   002832  EF4C  F015         	goto	l1243
 11364   002836                     l3825:
 11365   002836  5031               	movf	___fldiv@aexp^0,w,c
 11366   002838  C030  F021         	movff	___fldiv@bexp,??___fldiv
 11367   00283C  6A22               	clrf	(??___fldiv+1)^0,c
 11368   00283E  5E21               	subwf	??___fldiv^0,f,c
 11369   002840  0E00               	movlw	0
 11370   002842  5A22               	subwfb	(??___fldiv+1)^0,f,c
 11371   002844  0E7F               	movlw	127
 11372   002846  2421               	addwf	??___fldiv^0,w,c
 11373   002848  6E2A               	movwf	___fldiv@new_exp^0,c
 11374   00284A  0E00               	movlw	0
 11375   00284C  2022               	addwfc	(??___fldiv+1)^0,w,c
 11376   00284E  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11377   002850  C019  F025         	movff	___fldiv@b,___fldiv@rem
 11378   002854  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 11379   002858  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 11380   00285C  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 11381   002860  0E00               	movlw	0
 11382   002862  6E19               	movwf	___fldiv@b^0,c
 11383   002864  0E00               	movlw	0
 11384   002866  6E1A               	movwf	(___fldiv@b+1)^0,c
 11385   002868  0E00               	movlw	0
 11386   00286A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11387   00286C  0E00               	movlw	0
 11388   00286E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11389   002870  0E00               	movlw	0
 11390   002872  6E2C               	movwf	___fldiv@grs^0,c
 11391   002874  0E00               	movlw	0
 11392   002876  6E2D               	movwf	(___fldiv@grs+1)^0,c
 11393   002878  0E00               	movlw	0
 11394   00287A  6E2E               	movwf	(___fldiv@grs+2)^0,c
 11395   00287C  0E00               	movlw	0
 11396   00287E  6E2F               	movwf	(___fldiv@grs+3)^0,c
 11397   002880  0E00               	movlw	0
 11398   002882  6E31               	movwf	___fldiv@aexp^0,c
 11399   002884  EF7C  F014         	goto	l1245
 11400   002888                     l3835:
 11401   002888  5031               	movf	___fldiv@aexp^0,w,c
 11402   00288A  B4D8               	btfsc	status,2,c
 11403   00288C  EF4A  F014         	goto	u3301
 11404   002890  EF4C  F014         	goto	u3300
 11405   002894                     u3301:
 11406   002894  EF63  F014         	goto	l3843
 11407   002898                     u3300:
 11408   002898  90D8               	bcf	status,0,c
 11409   00289A  3625               	rlcf	___fldiv@rem^0,f,c
 11410   00289C  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 11411   00289E  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 11412   0028A0  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 11413   0028A2  90D8               	bcf	status,0,c
 11414   0028A4  3619               	rlcf	___fldiv@b^0,f,c
 11415   0028A6  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11416   0028A8  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11417   0028AA  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11418   0028AC  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11419   0028AE  EF5B  F014         	goto	u3311
 11420   0028B2  EF5D  F014         	goto	u3310
 11421   0028B6                     u3311:
 11422   0028B6  EF5E  F014         	goto	l1248
 11423   0028BA                     u3310:
 11424   0028BA  8019               	bsf	___fldiv@b^0,0,c
 11425   0028BC                     l1248:
 11426   0028BC  90D8               	bcf	status,0,c
 11427   0028BE  362C               	rlcf	___fldiv@grs^0,f,c
 11428   0028C0  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11429   0028C2  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11430   0028C4  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11431   0028C6                     l3843:
 11432   0028C6  501D               	movf	___fldiv@a^0,w,c
 11433   0028C8  5C25               	subwf	___fldiv@rem^0,w,c
 11434   0028CA  501E               	movf	(___fldiv@a+1)^0,w,c
 11435   0028CC  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 11436   0028CE  501F               	movf	(___fldiv@a+2)^0,w,c
 11437   0028D0  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 11438   0028D2  5020               	movf	(___fldiv@a+3)^0,w,c
 11439   0028D4  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 11440   0028D6  A0D8               	btfss	status,0,c
 11441   0028D8  EF70  F014         	goto	u3321
 11442   0028DC  EF72  F014         	goto	u3320
 11443   0028E0                     u3321:
 11444   0028E0  EF7B  F014         	goto	l3849
 11445   0028E4                     u3320:
 11446   0028E4  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 11447   0028E6  501D               	movf	___fldiv@a^0,w,c
 11448   0028E8  5E25               	subwf	___fldiv@rem^0,f,c
 11449   0028EA  501E               	movf	(___fldiv@a+1)^0,w,c
 11450   0028EC  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 11451   0028EE  501F               	movf	(___fldiv@a+2)^0,w,c
 11452   0028F0  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 11453   0028F2  5020               	movf	(___fldiv@a+3)^0,w,c
 11454   0028F4  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 11455   0028F6                     l3849:
 11456   0028F6  2A31               	incf	___fldiv@aexp^0,f,c
 11457   0028F8                     l1245:
 11458   0028F8  0E19               	movlw	25
 11459   0028FA  6431               	cpfsgt	___fldiv@aexp^0,c
 11460   0028FC  EF82  F014         	goto	u3331
 11461   002900  EF84  F014         	goto	u3330
 11462   002904                     u3331:
 11463   002904  EF44  F014         	goto	l3835
 11464   002908                     u3330:
 11465   002908  5025               	movf	___fldiv@rem^0,w,c
 11466   00290A  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 11467   00290C  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 11468   00290E  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 11469   002910  B4D8               	btfsc	status,2,c
 11470   002912  EF8D  F014         	goto	u3341
 11471   002916  EF8F  F014         	goto	u3340
 11472   00291A                     u3341:
 11473   00291A  EFA7  F014         	goto	l3861
 11474   00291E                     u3340:
 11475   00291E  802C               	bsf	___fldiv@grs^0,0,c
 11476   002920  EFA7  F014         	goto	l3861
 11477   002924                     l3855:
 11478   002924  90D8               	bcf	status,0,c
 11479   002926  3619               	rlcf	___fldiv@b^0,f,c
 11480   002928  361A               	rlcf	(___fldiv@b+1)^0,f,c
 11481   00292A  361B               	rlcf	(___fldiv@b+2)^0,f,c
 11482   00292C  361C               	rlcf	(___fldiv@b+3)^0,f,c
 11483   00292E  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11484   002930  EF9C  F014         	goto	u3351
 11485   002934  EF9E  F014         	goto	u3350
 11486   002938                     u3351:
 11487   002938  EF9F  F014         	goto	l1254
 11488   00293C                     u3350:
 11489   00293C  8019               	bsf	___fldiv@b^0,0,c
 11490   00293E                     l1254:
 11491   00293E  90D8               	bcf	status,0,c
 11492   002940  362C               	rlcf	___fldiv@grs^0,f,c
 11493   002942  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 11494   002944  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 11495   002946  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 11496   002948  062A               	decf	___fldiv@new_exp^0,f,c
 11497   00294A  A0D8               	btfss	status,0,c
 11498   00294C  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 11499   00294E                     l3861:
 11500   00294E  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11501   002950  EFAC  F014         	goto	u3361
 11502   002954  EFAE  F014         	goto	u3360
 11503   002958                     u3361:
 11504   002958  EF92  F014         	goto	l3855
 11505   00295C                     u3360:
 11506   00295C  0E00               	movlw	0
 11507   00295E  6E31               	movwf	___fldiv@aexp^0,c
 11508   002960  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 11509   002962  EFB5  F014         	goto	u3371
 11510   002966  EFB7  F014         	goto	u3370
 11511   00296A                     u3371:
 11512   00296A  EFDB  F014         	goto	l1256
 11513   00296E                     u3370:
 11514   00296E  0EFF               	movlw	255
 11515   002970  142C               	andwf	___fldiv@grs^0,w,c
 11516   002972  6E21               	movwf	??___fldiv^0,c
 11517   002974  0EFF               	movlw	255
 11518   002976  142D               	andwf	(___fldiv@grs+1)^0,w,c
 11519   002978  6E22               	movwf	(??___fldiv+1)^0,c
 11520   00297A  0EFF               	movlw	255
 11521   00297C  142E               	andwf	(___fldiv@grs+2)^0,w,c
 11522   00297E  6E23               	movwf	(??___fldiv+2)^0,c
 11523   002980  0E7F               	movlw	127
 11524   002982  142F               	andwf	(___fldiv@grs+3)^0,w,c
 11525   002984  6E24               	movwf	(??___fldiv+3)^0,c
 11526   002986  5021               	movf	??___fldiv^0,w,c
 11527   002988  1022               	iorwf	(??___fldiv+1)^0,w,c
 11528   00298A  1023               	iorwf	(??___fldiv+2)^0,w,c
 11529   00298C  1024               	iorwf	(??___fldiv+3)^0,w,c
 11530   00298E  B4D8               	btfsc	status,2,c
 11531   002990  EFCC  F014         	goto	u3381
 11532   002994  EFCE  F014         	goto	u3380
 11533   002998                     u3381:
 11534   002998  EFD2  F014         	goto	l1257
 11535   00299C                     u3380:
 11536   00299C                     l3869:
 11537   00299C  0E01               	movlw	1
 11538   00299E  6E31               	movwf	___fldiv@aexp^0,c
 11539   0029A0  EFDB  F014         	goto	l1256
 11540   0029A4                     l1257:
 11541   0029A4  A019               	btfss	___fldiv@b^0,0,c
 11542   0029A6  EFD7  F014         	goto	u3391
 11543   0029AA  EFD9  F014         	goto	u3390
 11544   0029AE                     u3391:
 11545   0029AE  EFDB  F014         	goto	l1256
 11546   0029B2                     u3390:
 11547   0029B2  EFCE  F014         	goto	l3869
 11548   0029B6                     l1256:
 11549   0029B6  5031               	movf	___fldiv@aexp^0,w,c
 11550   0029B8  B4D8               	btfsc	status,2,c
 11551   0029BA  EFE1  F014         	goto	u3401
 11552   0029BE  EFE3  F014         	goto	u3400
 11553   0029C2                     u3401:
 11554   0029C2  EF07  F015         	goto	l3881
 11555   0029C6                     u3400:
 11556   0029C6  0E01               	movlw	1
 11557   0029C8  2619               	addwf	___fldiv@b^0,f,c
 11558   0029CA  0E00               	movlw	0
 11559   0029CC  221A               	addwfc	(___fldiv@b+1)^0,f,c
 11560   0029CE  221B               	addwfc	(___fldiv@b+2)^0,f,c
 11561   0029D0  221C               	addwfc	(___fldiv@b+3)^0,f,c
 11562   0029D2  A01C               	btfss	(___fldiv@b+3)^0,0,c
 11563   0029D4  EFEE  F014         	goto	u3411
 11564   0029D8  EFF0  F014         	goto	u3410
 11565   0029DC                     u3411:
 11566   0029DC  EF07  F015         	goto	l3881
 11567   0029E0                     u3410:
 11568   0029E0  C019  F021         	movff	___fldiv@b,??___fldiv
 11569   0029E4  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 11570   0029E8  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 11571   0029EC  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 11572   0029F0  3424               	rlcf	(??___fldiv+3)^0,w,c
 11573   0029F2  3224               	rrcf	(??___fldiv+3)^0,f,c
 11574   0029F4  3223               	rrcf	(??___fldiv+2)^0,f,c
 11575   0029F6  3222               	rrcf	(??___fldiv+1)^0,f,c
 11576   0029F8  3221               	rrcf	??___fldiv^0,f,c
 11577   0029FA  C021  F019         	movff	??___fldiv,___fldiv@b
 11578   0029FE  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 11579   002A02  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 11580   002A06  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 11581   002A0A  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 11582   002A0C  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 11583   002A0E                     l3881:
 11584   002A0E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11585   002A10  EF12  F015         	goto	u3421
 11586   002A14  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11587   002A16  E108               	bnz	u3420
 11588   002A18  282A               	incf	___fldiv@new_exp^0,w,c
 11589   002A1A  A0D8               	btfss	status,0,c
 11590   002A1C  EF12  F015         	goto	u3421
 11591   002A20  EF14  F015         	goto	u3420
 11592   002A24                     u3421:
 11593   002A24  EF1F  F015         	goto	l3885
 11594   002A28                     u3420:
 11595   002A28  0E00               	movlw	0
 11596   002A2A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11597   002A2C  682A               	setf	___fldiv@new_exp^0,c
 11598   002A2E  0E00               	movlw	0
 11599   002A30  6E19               	movwf	___fldiv@b^0,c
 11600   002A32  0E00               	movlw	0
 11601   002A34  6E1A               	movwf	(___fldiv@b+1)^0,c
 11602   002A36  0E00               	movlw	0
 11603   002A38  6E1B               	movwf	(___fldiv@b+2)^0,c
 11604   002A3A  0E00               	movlw	0
 11605   002A3C  6E1C               	movwf	(___fldiv@b+3)^0,c
 11606   002A3E                     l3885:
 11607   002A3E  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11608   002A40  EF2C  F015         	goto	u3430
 11609   002A44  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 11610   002A46  E106               	bnz	u3431
 11611   002A48  042A               	decf	___fldiv@new_exp^0,w,c
 11612   002A4A  B0D8               	btfsc	status,0,c
 11613   002A4C  EF2A  F015         	goto	u3431
 11614   002A50  EF2C  F015         	goto	u3430
 11615   002A54                     u3431:
 11616   002A54  EF3A  F015         	goto	l3889
 11617   002A58                     u3430:
 11618   002A58  0E00               	movlw	0
 11619   002A5A  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 11620   002A5C  0E00               	movlw	0
 11621   002A5E  6E2A               	movwf	___fldiv@new_exp^0,c
 11622   002A60  0E00               	movlw	0
 11623   002A62  6E19               	movwf	___fldiv@b^0,c
 11624   002A64  0E00               	movlw	0
 11625   002A66  6E1A               	movwf	(___fldiv@b+1)^0,c
 11626   002A68  0E00               	movlw	0
 11627   002A6A  6E1B               	movwf	(___fldiv@b+2)^0,c
 11628   002A6C  0E00               	movlw	0
 11629   002A6E  6E1C               	movwf	(___fldiv@b+3)^0,c
 11630   002A70  0E00               	movlw	0
 11631   002A72  6E29               	movwf	___fldiv@sign^0,c
 11632   002A74                     l3889:
 11633   002A74  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 11634   002A78  A030               	btfss	___fldiv@bexp^0,0,c
 11635   002A7A  EF41  F015         	goto	u3441
 11636   002A7E  EF43  F015         	goto	u3440
 11637   002A82                     u3441:
 11638   002A82  EF46  F015         	goto	l3895
 11639   002A86                     u3440:
 11640   002A86  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11641   002A88  EF47  F015         	goto	l3897
 11642   002A8C                     l3895:
 11643   002A8C  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 11644   002A8E                     l3897:
 11645   002A8E  90D8               	bcf	status,0,c
 11646   002A90  3030               	rrcf	___fldiv@bexp^0,w,c
 11647   002A92  6E1C               	movwf	(___fldiv@b+3)^0,c
 11648   002A94  EFFD  F013         	goto	l3811
 11649   002A98                     l1243:
 11650   002A98  0012               	return		;funcret
 11651   002A9A                     __end_of___fldiv:
 11652                           	callstack 0
 11653                           
 11654 ;; *************** function _HighISR *****************
 11655 ;; Defined at:
 11656 ;;		line 59 in file "interrupts.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1    wreg      void 
 11663 ;; Registers used:
 11664 ;;		None
 11665 ;; Tracked objects:
 11666 ;;		On entry : 0/0
 11667 ;;		On exit  : 0/0
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used: 1
 11676 ;; This function calls:
 11677 ;;		Nothing
 11678 ;; This function is called by:
 11679 ;;		Interrupt level 2
 11680 ;; This function uses a non-reentrant model
 11681 ;;
 11682                           
 11683                           	psect	intcode
 11684   000008                     __pintcode:
 11685                           	callstack 0
 11686   000008                     _HighISR:
 11687                           	callstack 22
 11688                           
 11689                           ;incstack = 0
 11690   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11691   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11692   00000C  0011               	retfie		f
 11693   00000E                     __end_of_HighISR:
 11694                           	callstack 0
 11695                           
 11696                           	psect	rparam
 11697   000000                     
 11698                           	psect	temp
 11699   00005F                     btemp:
 11700                           	callstack 0
 11701   00005F                     	ds	1
 11702   000000                     int$flags	set	btemp
 11703   000000                     wtemp8	set	btemp+1
 11704   000000                     ttemp5	set	btemp+1
 11705   000000                     ttemp6	set	btemp+4
 11706   000000                     ttemp7	set	btemp+8
 11707                           
 11708                           	psect	idloc
 11709                           
 11710                           ;Config register IDLOC0 @ 0x200000
 11711                           ;	unspecified, using default values
 11712   200000                     	org	2097152
 11713   200000  0FFF               	dw	4095
 11714                           
 11715                           ;Config register IDLOC1 @ 0x200002
 11716                           ;	unspecified, using default values
 11717   200002                     	org	2097154
 11718   200002  0FFF               	dw	4095
 11719                           
 11720                           ;Config register IDLOC2 @ 0x200004
 11721                           ;	unspecified, using default values
 11722   200004                     	org	2097156
 11723   200004  0FFF               	dw	4095
 11724                           
 11725                           ;Config register IDLOC3 @ 0x200006
 11726                           ;	unspecified, using default values
 11727   200006                     	org	2097158
 11728   200006  0FFF               	dw	4095
 11729                           
 11730                           ;Config register IDLOC4 @ 0x200008
 11731                           ;	unspecified, using default values
 11732   200008                     	org	2097160
 11733   200008  0FFF               	dw	4095
 11734                           
 11735                           ;Config register IDLOC5 @ 0x20000A
 11736                           ;	unspecified, using default values
 11737   20000A                     	org	2097162
 11738   20000A  0FFF               	dw	4095
 11739                           
 11740                           ;Config register IDLOC6 @ 0x20000C
 11741                           ;	unspecified, using default values
 11742   20000C                     	org	2097164
 11743   20000C  0FFF               	dw	4095
 11744                           
 11745                           ;Config register IDLOC7 @ 0x20000E
 11746                           ;	unspecified, using default values
 11747   20000E                     	org	2097166
 11748   20000E  0FFF               	dw	4095
 11749                           
 11750                           	psect	config
 11751                           
 11752                           ;Config register CONFIG1L @ 0x300000
 11753                           ;	External Oscillator mode Selection bits
 11754                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11755                           ;	Power-up default value for COSC bits
 11756                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11757   300000                     	org	3145728
 11758   300000  AA                 	db	170
 11759                           
 11760                           ;Config register CONFIG1H @ 0x300001
 11761                           ;	unspecified, using default values
 11762                           ;	Clock Out Enable bit
 11763                           ;	CLKOUTEN = 0x1, unprogrammed default
 11764                           ;	Clock Switch Enable bit
 11765                           ;	CSWEN = 0x1, unprogrammed default
 11766                           ;	Fail-Safe Clock Monitor Enable bit
 11767                           ;	FCMEN = 0x1, unprogrammed default
 11768   300001                     	org	3145729
 11769   300001  FF                 	db	255
 11770                           
 11771                           ;Config register CONFIG2L @ 0x300002
 11772                           ;	unspecified, using default values
 11773                           ;	Master Clear Enable bit
 11774                           ;	MCLRE = 0x1, unprogrammed default
 11775                           ;	Power-up Timer Enable bit
 11776                           ;	PWRTE = 0x1, unprogrammed default
 11777                           ;	Low-power BOR enable bit
 11778                           ;	LPBOREN = 0x1, unprogrammed default
 11779                           ;	Brown-out Reset Enable bits
 11780                           ;	BOREN = 0x3, unprogrammed default
 11781   300002                     	org	3145730
 11782   300002  FF                 	db	255
 11783                           
 11784                           ;Config register CONFIG2H @ 0x300003
 11785                           ;	unspecified, using default values
 11786                           ;	Brown Out Reset Voltage selection bits
 11787                           ;	BORV = 0x3, unprogrammed default
 11788                           ;	ZCD Disable bit
 11789                           ;	ZCD = 0x1, unprogrammed default
 11790                           ;	PPSLOCK bit One-Way Set Enable bit
 11791                           ;	PPS1WAY = 0x1, unprogrammed default
 11792                           ;	Stack Full/Underflow Reset Enable bit
 11793                           ;	STVREN = 0x1, unprogrammed default
 11794                           ;	Debugger Enable bit
 11795                           ;	DEBUG = 0x1, unprogrammed default
 11796                           ;	Extended Instruction Set Enable bit
 11797                           ;	XINST = 0x1, unprogrammed default
 11798   300003                     	org	3145731
 11799   300003  FF                 	db	255
 11800                           
 11801                           ;Config register CONFIG3L @ 0x300004
 11802                           ;	WDT Period Select bits
 11803                           ;	WDTCPS = 0x1F, unprogrammed default
 11804                           ;	WDT operating mode
 11805                           ;	WDTE = OFF, WDT Disabled
 11806   300004                     	org	3145732
 11807   300004  9F                 	db	159
 11808                           
 11809                           ;Config register CONFIG3H @ 0x300005
 11810                           ;	unspecified, using default values
 11811                           ;	WDT Window Select bits
 11812                           ;	WDTCWS = 0x7, unprogrammed default
 11813                           ;	WDT input clock selector
 11814                           ;	WDTCCS = 0x7, unprogrammed default
 11815   300005                     	org	3145733
 11816   300005  FF                 	db	255
 11817                           
 11818                           ;Config register CONFIG4L @ 0x300006
 11819                           ;	unspecified, using default values
 11820                           ;	Write Protection Block 0
 11821                           ;	WRT0 = 0x1, unprogrammed default
 11822                           ;	Write Protection Block 1
 11823                           ;	WRT1 = 0x1, unprogrammed default
 11824                           ;	Write Protection Block 2
 11825                           ;	WRT2 = 0x1, unprogrammed default
 11826                           ;	Write Protection Block 3
 11827                           ;	WRT3 = 0x1, unprogrammed default
 11828                           ;	Write Protection Block 3
 11829                           ;	WRT4 = 0x1, unprogrammed default
 11830                           ;	Write Protection Block 3
 11831                           ;	WRT5 = 0x1, unprogrammed default
 11832                           ;	Write Protection Block 3
 11833                           ;	WRT6 = 0x1, unprogrammed default
 11834                           ;	Write Protection Block 3
 11835                           ;	WRT7 = 0x1, unprogrammed default
 11836   300006                     	org	3145734
 11837   300006  FF                 	db	255
 11838                           
 11839                           ;Config register CONFIG4H @ 0x300007
 11840                           ;	unspecified, using default values
 11841                           ;	Configuration Register Write Protection bit
 11842                           ;	WRTC = 0x1, unprogrammed default
 11843                           ;	Boot Block Write Protection bit
 11844                           ;	WRTB = 0x1, unprogrammed default
 11845                           ;	Data EEPROM Write Protection bit
 11846                           ;	WRTD = 0x1, unprogrammed default
 11847                           ;	Scanner Enable bit
 11848                           ;	SCANE = 0x1, unprogrammed default
 11849                           ;	Low Voltage Programming Enable bit
 11850                           ;	LVP = 0x1, unprogrammed default
 11851   300007                     	org	3145735
 11852   300007  FF                 	db	255
 11853                           
 11854                           ;Config register CONFIG5L @ 0x300008
 11855                           ;	unspecified, using default values
 11856                           ;	UserNVM Program Memory Code Protection bit
 11857                           ;	CP = 0x1, unprogrammed default
 11858                           ;	DataNVM Memory Code Protection bit
 11859                           ;	CPD = 0x1, unprogrammed default
 11860   300008                     	org	3145736
 11861   300008  FF                 	db	255
 11862                           
 11863                           ;Config register CONFIG5H @ 0x300009
 11864                           ;	unspecified, using default values
 11865   300009                     	org	3145737
 11866   300009  FF                 	db	255
 11867                           
 11868                           ;Config register CONFIG6L @ 0x30000A
 11869                           ;	unspecified, using default values
 11870                           ;	Table Read Protection Block 0
 11871                           ;	EBTR0 = 0x1, unprogrammed default
 11872                           ;	Table Read Protection Block 1
 11873                           ;	EBTR1 = 0x1, unprogrammed default
 11874                           ;	Table Read Protection Block 2
 11875                           ;	EBTR2 = 0x1, unprogrammed default
 11876                           ;	Table Read Protection Block 3
 11877                           ;	EBTR3 = 0x1, unprogrammed default
 11878                           ;	Table Read Protection Block 4
 11879                           ;	EBTR4 = 0x1, unprogrammed default
 11880                           ;	Table Read Protection Block 5
 11881                           ;	EBTR5 = 0x1, unprogrammed default
 11882                           ;	Table Read Protection Block 6
 11883                           ;	EBTR6 = 0x1, unprogrammed default
 11884                           ;	Table Read Protection Block 7
 11885                           ;	EBTR7 = 0x1, unprogrammed default
 11886   30000A                     	org	3145738
 11887   30000A  FF                 	db	255
 11888                           
 11889                           ;Config register CONFIG6H @ 0x30000B
 11890                           ;	unspecified, using default values
 11891                           ;	Boot Block Table Read Protection bit
 11892                           ;	EBTRB = 0x1, unprogrammed default
 11893   30000B                     	org	3145739
 11894   30000B  FF                 	db	255
 11895                           tosu	equ	0xFFF
 11896                           tosh	equ	0xFFE
 11897                           tosl	equ	0xFFD
 11898                           stkptr	equ	0xFFC
 11899                           pclatu	equ	0xFFB
 11900                           pclath	equ	0xFFA
 11901                           pcl	equ	0xFF9
 11902                           tblptru	equ	0xFF8
 11903                           tblptrh	equ	0xFF7
 11904                           tblptrl	equ	0xFF6
 11905                           tablat	equ	0xFF5
 11906                           prodh	equ	0xFF4
 11907                           prodl	equ	0xFF3
 11908                           indf0	equ	0xFEF
 11909                           postinc0	equ	0xFEE
 11910                           postdec0	equ	0xFED
 11911                           preinc0	equ	0xFEC
 11912                           plusw0	equ	0xFEB
 11913                           fsr0h	equ	0xFEA
 11914                           fsr0l	equ	0xFE9
 11915                           wreg	equ	0xFE8
 11916                           indf1	equ	0xFE7
 11917                           postinc1	equ	0xFE6
 11918                           postdec1	equ	0xFE5
 11919                           preinc1	equ	0xFE4
 11920                           plusw1	equ	0xFE3
 11921                           fsr1h	equ	0xFE2
 11922                           fsr1l	equ	0xFE1
 11923                           bsr	equ	0xFE0
 11924                           indf2	equ	0xFDF
 11925                           postinc2	equ	0xFDE
 11926                           postdec2	equ	0xFDD
 11927                           preinc2	equ	0xFDC
 11928                           plusw2	equ	0xFDB
 11929                           fsr2h	equ	0xFDA
 11930                           fsr2l	equ	0xFD9
 11931                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        7
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     213
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2459$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2406$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2406$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  292931
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                             13     9      4  115215
                                             35 COMRAM    11     7      4
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                     _fullSpeedAhead
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   14100
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14708
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7824
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             25 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9251
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             25 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2157
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 6     2      4    3633
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2613
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20547
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     801
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2320
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _fullSpeedAhead
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D5       7       83.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRllllll      F      0       0      58        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRhlll        6      0       0      38        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRllh         1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     236      61        0.0%
DATA                 0      0     236       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 18:25:26 2023

               _color_read_Red 46C2                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4672                   ___fldiv@sign 0029                _color_read_Blue 4762  
                           l43 45CC                             l52 4710                             l61 426C  
                           l46 4AF0                             l55 4760                             l64 2DC6  
                           l49 46C0                             l74 1900                             l58 47B0  
          ___wmul@multiplicand 0003               _color_read_Green 4712                readColours@vals 000C  
            ??_Interrupts_init 0001                            l210 4B46                            l141 4A5E  
                          l150 4B5C                            l207 4B32                            l144 4A84  
                          l216 4A32                            l153 4B66                            l401 1DB8  
                          l138 4A5C                            l147 4B70                            l500 3E24  
                          l156 4B52                            l270 4B7A                            l159 48CA  
                          l530 4484                            l426 1E12                            l418 1DB4  
                          l524 3EC2                            l516 3D86                            l508 3CE8  
                          l533 43D4                            l542 4320                            l198 4B2E  
                          l527 442C                            l551 4A02                            l536 437A  
                          l560 4670                            l554 420E                            l634 3276  
                          l563 4528                            l539 42C6                            l492 404A  
                          l548 49C4                            l572 4948                            l628 326C  
                          l396 199E                            l661 4AD0                            l557 461E  
                          l486 371E                            l566 457A                            l655 4B10  
                          l575 4986                            l479 3F4A                            l920 3C4A  
                          l569 3FCC                            l658 4AAA                            l931 3AD6  
                          l926 3A90                            l775 35B2                            l788 3882  
                          _abs 48CC                            _pad 404C                            _rel 01B2  
                          wreg 000FE8                   ___flmul@aexp 0043                   ___flmul@bexp 0044  
                 ___flmul@sign 003E                   ___flmul@temp 0049                   ___flmul@prod 0045  
              Colour_decider@i 007A                           ?_abs 0013                           l1206 211E  
                         l1215 21EE                           l1231 4844                           l1216 21DC  
                         l1152 4130                           l1401 4902                           l1330 33C2  
                         l1243 2A98                           l1323 3366                           l1316 32CE  
                         l1404 490A                           l1245 28F8                           l1254 293E  
                         l1190 1FF2                           l1191 1FB8                           l1319 342A  
                         l1159 4138                           l1256 29B6                           l1248 28BC  
                         l1416 3BA0                           l1424 4888                           l1257 29A4  
                         l4001 25EE                           l3201 3490                           l1361 406E  
                         l1282 2590                           l1370 2E54                           l4011 265C  
                         l1275 239A                           l3211 34DA                           l3203 3494  
                         l1427 4B78                           l3131 3B24                           l3123 3AD8  
                         l1339 44D6                           l1292 26C0                           l1284 2608  
                         l1372 2E5C                           l4021 26C4                           l4005 2618  
                         l4013 2660                           l1285 25F6                           l1189 2004  
                         l4101 335C                           l3301 3D56                           l3221 354A  
                         l3213 34E8                           l3205 34A0                           l3133 3B5A  
                         l3125 3AEA                           l1365 40C4                           l1373 2EA2  
                         l1198 22D4                           l4031 26EE                           l4023 26D4  
                         l4015 267A                           l4007 2624                           l1279 26FE  
                         l4111 33D2                           l4103 3398                           l3151 40F0  
                         l3143 40C6                           l3311 3FF6                           l3303 3D6E  
                         l3223 355C                           l3215 34FA                           l3207 34BE  
                         l3127 3AFC                           l1391 39D2                           l1384 3044  
                         l4041 3BA2                           l4025 26E2                           l4017 268E  
                         l4009 2632                           l4121 341A                           l4113 33D6  
                         l4105 33A4                           l4201 0F50                           l3161 4124  
                         l3153 40FE                           l3145 40CE                           l3137 4AAC  
                         l3313 4002                           l3305 3FCE                           l3321 3DAC  
                         l3217 3528                           l3209 34C6                           l3225 3562  
                         l3241 3756                           l3233 3720                           l3129 3B06  
                         l3401 2FE4                           l4051 3C42                           l4043 3BD0  
                         l4027 26E4                           l4019 26A8                           l4035 4800  
                         l4115 33FA                           l4107 33B2                           l4211 1016  
                         l4203 0F82                           l3163 412A                           l3155 4104  
                         l3147 40E0                           l3139 4AC8                           l3307 3FD2  
                         l3315 401A                           l3331 3E0C                           l3323 3DC4  
                         l3227 3572                           l3219 3548                           l3251 37BE  
                         l3243 3764                           l3235 3724                           l3171 4868  
                         l3403 2FFE                           l4131 47F6                           l4053 3C48  
                         l4045 3BE0                           l4061 3A12                           l4029 26EA  
                         l3501 1ECC                           l4037 4810                           l4117 340A  
                         l4109 33D0                           l4221 10A8                           l4213 1032  
                         l4205 0F8A                           l3157 411A                           l3149 40E8  
                         l3181 363C                           l3173 35B4                           l3317 4032  
                         l3309 3FEA                           l3325 3DD0                           l3341 3CA0  
                         l3333 3C4C                           l3413 4B68                           l3421 4B5E  
                         l4141 459A                           l3229 3592                           l3253 37CC  
                         l3261 3832                           l3245 3784                           l3237 3732  
                         l3165 4846                           l3405 300E                           l1397 47FE  
                         l4125 47B2                           l4047 3C0E                           l4071 3A7E  
                         l4063 3A40                           l3511 1F08                           l3503 1EDC  
                         l4119 3418                           l4311 16C0                           l4303 1650  
                         l4231 121E                           l4223 1148                           l4215 1088  
                         l4207 0FDE                           l3159 4122                           l3183 367E  
                         l3175 35D0                           l3351 3E62                           l3327 3DDC  
                         l3319 3D88                           l3335 3C70                           l3343 3CB8  
                         l3415 4B6C                           l3423 4B62                           l4151 45BC  
                         l4143 45A4                           l4135 457C                           l3431 4890  
                         l3191 3430                           l3263 3842                           l3255 37FA  
                         l3247 37A2                           l3239 3752                           l3167 4852  
                         l3271 405A                           l3407 3014                           l4127 47BE  
                         l4049 3C1E                           l4073 3ACE                           l4065 3A50  
                         l4057 39D4                           l3601 210E                           l3521 1F26  
                         l3513 1F16                           l3505 1EDE                           l4081 328A  
                         l4241 13B2                           l4233 127A                           l4225 1158  
                         l4209 1010                           l3185 369A                           l3177 3624  
                         l3353 3E6E                           l3329 3DF4                           l4401 4AFA  
                         l3345 3CD0                           l3337 3C88                           l3417 4B4A  
                         l4161 45C6                           l4153 45BE                           l4145 45AE  
                         l4137 4580                           l3433 4898                           l3425 4B54  
                         l3193 343E                           l3265 3862                           l3257 381A  
                         l3249 37AA                           l3169 4864                           l3281 40B0  
                         l3273 4066                           l3409 3024                           l3361 2DC8  
                         l4129 47DA                           l4075 3AD4                           l4067 3A5E  
                         l4059 3A02                           l3611 2162                           l3603 2134  
                         l3531 1F3A                           l3523 1F2A                           l3515 1F1A  
                         l3507 1EE6                           l4091 3308                           l4083 3298  
                         l4323 1702                           l4307 165C                           l4251 1422  
                         l4235 12F6                           l4227 1190                           l4219 1094  
                         l3187 36DE                           l3179 3638                           l3355 3E7A  
                         l3347 3E26                           l3451 4442                           l3291 3CEA  
                         l4403 4B04                           l3339 3C94                           l3443 43D6  
                         l3419 4B4E                           l4163 45C8                           l4155 45C0  
                         l4147 45B8                           l4139 458A                           l4171 2B66  
                         l4411 3ED8                           l3435 48A0                           l3427 4B58  
                         l3195 345E                           l3259 382C                           l3283 48CC  
                         l3275 407A                           l3371 2E48                           l3363 2DE8  
                         l4069 3A70                           l3621 218C                           l3613 2170  
                         l3605 2144                           l3541 1F4E                           l3533 1F3E  
                         l3525 1F2E                           l3517 1F1E                           l3509 1EF6  
                         l4093 3310                           l4085 32DE                           l4341 1832  
                         l4325 1734                           l4309 168E                           l4261 1492  
                         l4229 11A2                           l4237 134E                           l3349 3E4A  
                         l3357 3E92                           l3453 4458                           l3293 3D0E  
                         l4405 4B0E                           l3445 43EA                           l3701 4A3E  
                         l4165 45CA                           l4157 45C2                           l4149 45BA  
                         l4181 2D2E                           l4173 2B9A                           l3461 426E  
                         l4501 317C                           l4421 3F1A                           l4413 3EDA  
                         l3437 48C6                           l3429 488C                           l3197 3462  
                         l3189 342C                           l3285 48E6                           l3277 408E  
                         l3269 404C                           l3381 2E96                           l3373 2E64  
                         l3365 2DFC                           l3631 21BE                           l3623 219C  
                         l3615 2172                           l3551 1FA0                           l3543 1F52  
                         l3535 1F42                           l3527 1F32                           l3519 1F22  
                         l3471 1E30                           l4095 331C                           l4087 32F4  
                         l4079 327A                           l4343 186C                           l4351 18AA  
                         l4327 1766                           l4263 14CC                           l4271 150A  
                         l4239 1380                           l4247 13BE                           l4191 0EC0  
                         l4183 0E26                           l3359 3EAA                           l3455 437C  
                         l3295 3D26                           l3447 4400                           l3703 4A44  
                         l3287 4A5E                           l3711 4AD4                           l4159 45C4  
                         l4175 2C2E                           l3463 4282                           l4511 3200  
                         l4503 3194                           l4431 3F3C                           l4423 3F24  
                         l4415 3EDC                           l4407 3EC4                           l3439 48C8  
                         l4167 4210                           l3199 3470                           l3279 4092  
                         l3391 2F3C                           l3383 2E9E                           l3375 2E74  
                         l3367 2E0C                           l3801 27B4                           l3641 2218  
                         l3633 21D4                           l3617 2180                           l3609 2158  
                         l3625 219E                           l3561 1FE4                           l3553 1FB0  
                         l3537 1F46                           l3529 1F36                           l3545 1F56  
                         l3481 1E64                           l3473 1E32                           l4097 334E  
                         l4329 1798                           l4337 17CE                           l4273 1548  
                         l4249 13F0                           l4257 142E                           l4193 0EF4  
                         l4185 0E50                           l3457 4390                           l3449 442E  
                         l3297 3D32                           l3705 4A46                           l3289 4A6E  
                         l4177 2C62                           l4169 2A9A                           l4441 4A8E  
                         l3465 429A                           l4513 321E                           l4505 31B2  
                         l4433 3F3E                           l4425 3F26                           l4417 3EF2  
                         l4409 3ED6                           l3721 4708                           l3713 4672  
                         l3393 2F42                           l3385 2EAA                           l3377 2E7A  
                         l3369 2E2C                           l4601 1942                           l3811 27FA  
                         l3803 27BC                           l3651 2294                           l3643 2252  
                         l3619 2188                           l3627 21AC                           l3563 1FE6  
                         l3555 1FC6                           l3547 1F5A                           l3539 1F4A  
                         l3491 1E96                           l3475 1E42                           l3483 1E6C  
                         l3467 1E16                           l4099 3350                           l4339 1800  
                         l4363 18F8                           l4259 1460                           l4283 1560  
                         l4187 0E5C                           l3459 43A8                           l3299 3D3E  
                         l3707 4A48                           l4179 2CFA                           l4515 3236  
                         l4507 31CA                           l4435 3F48                           l4427 3F30  
                         l4419 3EF6                           l4371 4B1E                           l3731 4762  
                         l3715 46B8                           l3395 2F48                           l3387 2EB4  
                         l3379 2E8A                           l4451 44C4                           l4443 4486  
                         l4611 1964                           l4603 194A                           l3821 2822  
                         l3813 27FE                           l3805 27CC                           l3661 22B4  
                         l3653 2298                           l3637 21FE                           l3645 2254  
                         l3629 21B0                           l3581 206E                           l3573 2036  
                         l3565 1FF0                           l3557 1FD2                           l3549 1F84  
                         l3493 1E9C                           l3485 1E7C                           l3477 1E52  
                         l3469 1E22                           l4285 1592                           l4189 0E8C  
                         l4461 3F60                           l3709 4A4A                           l4437 4A86  
                         l3741 42C8                           l4517 3254                           l4509 31E8  
                         l4429 3F32                           l4373 4B28                           l3733 47A8  
                         l3725 4712                           l4381 4A08                           l3389 2EBA  
                         l3397 2FAC                           l4445 4498                           l4701 1C12  
                         l4621 198A                           l4613 1968                           l4605 1952  
                         ?_pad 0011                           l3831 2870                           l3807 27E2  
                         l3911 22F2                           l3663 22C2                           l3655 22A6  
                         l3647 2264                           l3639 220A                           l3583 2072  
                         l3575 2046                           l3567 2012                           l3591 2092  
                         l3559 1FD6                           l3495 1EAA                           l3487 1E82  
                         l3479 1E62                           l4359 18EC                           l4295 1606  
                         l4287 15C4                           l4279 1554                           l4199 0EFE  
                         l4463 3F78                           l4455 45CE                           l4439 4A88  
                         l3751 41AA                           l3743 42DC                           l4519 326C  
                         l4471 304E                           l4375 4B2A                           l4367 4B12  
                         l3727 4758                           l3719 46C2                           l4383 4A16  
                         l3399 2FC6                           l3671 38A8                           l4447 44A0  
                         l4703 1C26                           l4711 1C58                           l4631 19C8  
                         l4623 1992                           l4615 1970                           l4607 195A  
                         l3841 28BA                           l3833 2880                           l3825 2836  
                         l3809 27F2                           l3817 2812                           l3921 2338  
                         l3913 2302                           l3905 22D6                           l3665 22C4  
                         l3657 22AC                           l3649 2274                           l3593 20B8  
                         l3585 2080                           l3577 2054                           l3569 2022  
                         l3497 1EAC                           l3489 1E94                           l4297 1644  
                         l3761 434E                           l4457 4620                           l4465 3F8C  
                         l3745 42F4                           l3753 49C6                           l4481 3088  
                         l4377 4B2C                           l4369 4B1C                           l3737 4B32  
                         l4385 4A1A                           l3681 38F6                           l3673 38B6  
                         l4449 44A8                           l4713 1C6C                           l4721 1C9E  
                         l4705 1C3A                           l4641 1A22                           l4633 19D0  
                         l4625 199A                           l4617 1978                           l4609 1960  
                         l3851 2908                           l3843 28C6                           l3835 2888  
                         l3827 2850                           l3819 2822                           l3771 271A  
                         l3931 2364                           l3923 233E                           l3915 2312  
                         l3907 22E2                           l3659 22AE                           l3595 20EC  
                         l3587 2082                           l3579 2062                           l3499 1EBC  
                         l4467 3FA0                           l4459 3F4C                           l3755 452A  
                         l3747 4988                           l3763 490C                           l4491 30F4  
                         l4483 308A                           l4475 3060                           l3739 4B42  
                         l4379 4A04                           l3683 3912                           l3675 38C4  
                         l4723 1CB2                           l4731 1CE4                           l4715 1C80  
                         l4707 1C3E                           l4651 1A8C                           l4643 1A4A  
                         l4635 19E4                           l4627 19AC                           l4619 1980  
                         l4571 190A                           l3853 291E                           l3861 294E  
                         l3845 28E4                           l3837 2898                           l3829 2860  
                         l3781 274E                           l3773 271C                           l3941 23BA  
                         l3933 2374                           l3925 2344                           l3917 2322  
                         l3909 22F0                           l3597 20EE                           l3589 208C  
                         l3757 4322                           l3749 44D8                           l3765 494A  
                         l4493 3110                           l4485 3090                           l4477 3068  
                         l4469 3046                           l3685 3968                           l3677 38CA  
                         l3693 39AA                           l3669 3884                           l4733 1CF8  
                         l4741 1D2A                           l4725 1CC6                           l4717 1C84  
                         l4709 1C42                           l4653 1AA6                           l4661 1AD6  
                         l4645 1A62                           l4637 19F0                           l4629 19C4  
                         l4581 1924                           l4573 190E                           l3863 295C  
                         l3855 2924                           l3847 28E6                           l3839 28AC  
                         l3791 2780                           l3775 272C                           l3783 2756  
                         l3767 2700                           l3951 23FA                           l3935 2384  
                         l3927 2352                           l3919 2328                           l3599 20FE  
                         l3759 4336                           l4399 4AF2                           l4495 3128  
                         l4487 30C0                           l4479 3074                           l3679 38DA  
                         l4751 1DA6                           l4743 1D3E                           l4735 1D0C  
                         l4727 1CCA                           l4719 1C88                           l4671 1B40  
                         l4663 1AF4                           l4655 1AAE                           l4647 1A68  
                         l4639 1A04                           l4591 1930                           l4583 1926  
                         l4575 1912                           l4567 1902                           l3873 29C6  
                         l3881 2A0E                           l3865 2960                           l3857 292E  
                         l3849 28F6                           l3793 2782                           l3785 2766  
                         l3777 273C                           l3769 270C                           l3961 2444  
                         l3953 2406                           l3945 23CE                           l3937 238A  
                         l3929 2354                           l4497 3146                           l4489 30DC  
                         l3689 3998                           l4753 1DC0                           l4745 1D56  
                         l4737 1D10                           l4729 1CCE                           l4673 1B54  
                         l4681 1B86                           l4665 1AFC                           l4657 1AB6  
                         l4649 1A70                           l4593 1932                           l4585 1928  
                         l4577 1916                           l4569 1906                           l3891 2A78  
                         l3883 2A28                           l3875 29D2                           l3867 296E  
                         l3859 293C                           l3795 2792                           l3787 276C  
                         l3779 274C                           l3971 2496                           l3963 2450  
                         l3955 241E                           l3947 23DA                           l3939 23AA  
                         l3699 4A34                           l4499 315E                           l4755 1DF2  
                         l4747 1D68                           l4739 1D14                           l4683 1B9A  
                         l4691 1BCC                           l4675 1B68                           l4667 1B02  
                         l4659 1ABE                           l4595 1934                           l4587 192A  
                         l4579 1922                           l3893 2A86                           l3885 2A3E  
                         l3877 29E0                           l3869 299C                           l3797 27A2  
                         l3789 2772                           l3981 2514                           l3973 24A6  
                         l3965 2460                           l3957 242A                           l3949 23E4  
                         l4749 1D7C                           l4693 1BE0                           l4685 1BAE  
                         l4677 1B6C                           l4669 1B34                           l4757 1DFE  
                         l4597 193A                           l4589 192E                           l3895 2A8C  
                         l3887 2A58                           l3879 2A0A                           l3799 27B2  
                         l3991 258E                           l3983 254A                           l3975 24C2  
                         l3967 246C                           l3959 2436                           l4695 1BF4  
                         l4687 1BB2                           l4679 1B70                           l4599 193E  
                         l3897 2A8E                           l3889 2A74                           l3993 25A0  
                         l3985 2558                           l3977 24CE                           l3969 247C  
                         l4697 1BF8                           l4689 1BB6                           l3995 25AE  
                         l3987 2576                           l3979 24EA                           l4699 1BFC  
                         l3997 25B2                           l3989 2580                           l3999 25C0  
                  GreenMove@mL 0020                    GreenMove@mR 0022                           STR_1 0E01  
                         STR_2 0E01                           u3000 20FE                           u3001 20FA  
                         u3010 2134                           u3011 2130                           u3100 21FE  
                         u3020 2144                           u2300 3AFC                           u3101 21FA  
                         u3021 2140                           u2301 3AF8                           u3110 2218  
                         u3030 2170                           u2310 3B24                           u3111 2214  
                         u3031 216C                           u2311 3B20                           u3120 2252  
                         u3040 2180                           u4000 1592                           u2400 3470  
                         u2320 3B5A                           u3200 3912                   _BAUD4CONbits 000EE9  
                         u3121 224E                           u3041 217C                           u4001 158E  
                         u2401 346C                           u2321 3B56                           u3201 390E  
                         u3130 2264                           u3050 219C                           u4010 15C4  
                         u2330 40E0                           u3210 4B42                           u3131 2260  
                         u3051 2198                           u4011 15C0                           u2331 40DC  
                         u3211 4B3E                           u2411 349A                           u3300 2898  
                         u3220 271A                           u3140 2274                           u3060 21AC  
                         u4100 17CA                           u4020 1602                           u2340 40FE  
                         u2420 34BE                           u2500 37FA                           u3301 2894  
                         u3221 2716                           u3141 2270                           u3061 21A8  
                         u4101 17C6                           u4021 15FE                           u2341 40FA  
                         u2421 34BA                           u2501 37F6                           u3310 28BA  
                         u3230 272C                           u3150 2294                           u3070 21BE  
                         u4110 1800                           u4030 1644                           u2350 411A  
                         u2430 34E8                           u2510 3842                           u3311 28B6  
                         u3231 2728                           u3151 2290                           u3071 21BA  
                         u4111 17FC                           u4031 1640                           u2351 4116  
                         u2431 34E4                           u2511 383E                           u3400 29C6  
                         u3320 28E4                           u3240 273C                           u3160 22A6  
                         u3080 21D4                           u4120 1832                           u4040 168E  
                         u2600 404A                           u4200 305C                           u2440 3528  
                         u2360 4888                           u2520 405A                           u3401 29C2  
                         u3321 28E0                           u3241 2738                           u3161 22A2  
                         u3081 21D0                           u4121 182E                           u4041 168A  
                         u2601 4046                           u4201 3058                           u2441 3524  
                         u2361 4884                           u2521 4056                           u3410 29E0  
                         u3330 2908                           u3250 2780                           u3170 22C2  
                         u3090 21EA                           u4130 186C                           u4050 16C0  
                         u2370 35D0                           u2610 3E0C                           u4210 30C0  
                         u2450 3572                           u2290 3AEA                           u2530 40B0  
                         _T2PR 000FBC                           u3411 29DC                           u3331 2904  
                         u3251 277C                           u3171 22BE                           u3091 21E6  
                         u4131 1868                           u4051 16BC                           u2371 35CC  
                         u2611 3E08                           u4211 30BC                           u2451 356E  
                         u2291 3AE6                           u2531 40AC                           u3420 2A28  
                         u3340 291E                           u3260 2792                           u3500 2374  
                         u4140 18A6                           u4060 16FE                           u2380 369A  
                         u2620 3E24                           u4220 30DC                           u2460 3732  
                         u2540 48E6                           u2700 2E48                           u3180 38A8  
                         u3421 2A24                           u3341 291A                           u3261 278E  
                         u3501 2370                           u4141 18A2                           u4061 16FA  
                         u2381 3696                           u2621 3E20                           u4221 30D8  
                         u2461 372E                           u2541 48E2                           u2701 2E44  
                         u3181 38A4                           u3430 2A58                           u3350 293C  
                         u3270 27A2                           u3510 23AA                           u4150 18E8  
                         u4070 1734                           u2630 3CD0                           u2550 4A6E  
                         u4230 3110                           u2390 343E                           u2470 3764  
                         u2710 2E74                           u3190 38F6                           u3431 2A54  
                         u3351 2938                           u3271 279E                           u3511 23A6  
                         u4151 18E4                           u4071 1730                           u2631 3CCC  
                         u2551 4A6A                           u4231 310C                           u2391 343A  
                         u2471 3760                           u2711 2E70                           u3191 38F2  
                         u3440 2A86                           u3360 295C                           u3280 27E2  
                         u3600 2632                           u3520 23BA                           u2800 1E42  
                         u4080 1766                           u2640 3CE8                           u2560 4A84  
                         u4240 3146                           u4160 4A32                           u2480 37A2  
                         u2720 2E8A                           u4400 1B9A                           u3441 2A82  
                         u3361 2958                           u3281 27DE                           u3601 262E  
                         u3521 23B6                           u2801 1E3E                           u4081 1762  
                         u2641 3CE4                           u2561 4A80                           u4241 3142  
                         u4161 4A2E                           u2481 379E                           u2721 2E86  
                         u4401 1B96                           u3370 296E                           u3290 2822  
                         u3610 267A                           u3530 2534                           u3450 22F0  
                         u2810 1E52                           u4090 1798                           u2650 3EAA  
                         u2570 3D6E                           u4250 317C                           u2490 37CC  
                         u2730 2FC6                           u4410 1BE0                           u3371 296A  
                         u3291 281E                           u3611 2676                           u3451 22EC  
                         u2811 1E4E                           u4091 1794                           u2651 3EA6  
                         u2571 3D6A                           u4251 3178                           u2491 37C8  
                         u2731 2FC2                           u4411 1BDC                           u3380 299C  
                         u3700 3A7E                           u3620 26A8                           u3540 258E  
                         u3460 2302                           u2900 1F9E                           u2820 1E94  
                         u2660 3EC2                           u2580 3D86                           u4260 31B2  
                         u2740 2FE4                           u4420 1C26                           u3381 2998  
                         u3701 3A7A                           u3621 26A4                           u3541 258A  
                         u3461 22FE                           u2821 1E90                           u2661 3EBE  
                         u2581 3D82                           u4261 31AE                           u2741 2FE0  
                         u4421 1C22                           u3390 29B2                           u3710 3ACE  
                         u3630 26E2                           u3550 25AE                           u3470 2312  
                         u2910 1FC6                           u2830 1EAA                           u2590 4032  
                         u4270 31E8                           u2750 2FFE                           u2670 2DF8  
                         u4430 1C6C                           u4350 19AC                           u3391 29AE  
                         u3711 3ACA                           u3631 26DE                           u3551 25AA  
                         u3535 252A                           u3471 230E                           u2911 1FC2  
                         u2831 1EA6                           u2591 402E                           u4271 31E4  
                         u2751 2FFA                           u2671 2DF2                           u4431 1C68  
                         u4351 19A8                           u3640 3BD0                           u3560 25C0  
                         u3480 2352                           u2920 1FE4                           u2840 1EBC  
                         u3800 340A                           u3720 328A                           u4280 321E  
                         u2760 300E                           u2680 2DFA                           u4440 1CB2  
                         u4360 1A22                           u3641 3BCC                           u3561 25BC  
                         u3481 234E                           u2921 1FE0                           u2841 1EB8  
                         u3801 3406                           u3721 3286                           u4281 321A  
                         u2761 300A                           u4441 1CAE                           u4361 1A1E  
                         u3650 3C0E                           u3570 25EE                           u3490 2364  
                         u2930 2004                           u2850 1ECC                           u3810 3418  
                         u3730 3298                           u4290 3254                           u2770 48B4  
                         u2690 2E0C                           u4450 1CF8                           u4370 1AA6  
                         u3651 3C0A                           u3571 25EA                           u3491 2360  
                         u2931 2000                           u2851 1EC8                           u3811 3414  
                         u3731 3294                           u4291 3250                           u2771 48AC  
                         u2691 2E08                           u4451 1CF4                           u4371 1AA2  
                         u3660 3C42                           u3580 2604                           u2940 2012  
                         u2860 1F08                           u3740 32F4                           u3900 11A2  
                         u3820 47F6                           u4460 1D3E                           u4380 1AF4  
                         u3661 3C3E                           u3581 2600                           u2941 200E  
                         u2861 1F04                           u3741 32F0                           u3901 119E  
                         u3821 47F2                           u4461 1D3A                           u4381 1AF0  
                         u3670 3A02                           u3590 2618                           u2950 2022  
                         u2870 1F16                           u2790 1E30                           u3750 334A  
                         u3910 1380                           u4470 1D68                           u4390 1B54  
                         u3671 39FE                           u3591 2614                           u2951 201E  
                         u2871 1F12                           u2791 1E2C                           u3751 3346  
                         u3911 137C                           u3831 0E56                           u4607 42B8  
                         u4471 1D64                           u4391 1B50                           u3680 3A40  
                         u2960 2054                           u2880 1F84                           u3760 3394  
                         u3920 13B2                           u3840 0F50                           u4480 1E12  
                         u3681 3A3C                           u2961 2050                           u2881 1F80  
                         u3761 3390                           u3921 13AE                           u3841 0F4C  
                         u4617 42E6                           u4481 1E0E                           u3690 3A5E  
                         u2970 2062                           u2890 1F9C                           u3770 33B2  
                         u3930 13F0                           u3850 0FDE                           u3691 3A5A  
                         u2971 205E                           u2891 1F96                           u3771 33AE  
                         u3931 13EC                           u3851 0FDA                           u4707 444C  
                         u4627 4312                           u2980 2080                           u3780 33C2  
                         u3940 1422                           u3860 1032                           u2788 48B6  
                         u2981 207C                           u3781 33BE                           u3941 141E  
                         u3861 102E                           u4717 4476                           u4637 4590  
                         u2990 20B8                           u3790 33D0                           u3950 1460  
                         u3870 1088                           u2991 20B4                           u3791 33CC  
                         u3951 145C                           u3871 1084                           u4727 3DE6  
                         u4647 43F4                           u4567 19B6                           u3960 1492  
                         u3880 10A8                           u3961 148E                           u3881 10A4  
                         u4737 4340                           u4657 441E                           u4577 1A54  
                         u3970 14CC                           u3890 1158                           u3971 14C8  
                         u3891 1154                           u4747 436C                           u4667 3CAA  
                         u4587 1AC8                           u3980 1506                           u3981 1502  
                         u4757 439A                           u4677 3F6A                           u4597 428C  
                         u3990 1548                           u3991 1544                           u4767 43C6  
                         u4687 3FAA                           u4777 400C                           u4697 3D48  
                         u4787 3E84                  _LightBlueMove 452A                           abs@a 0013  
                         _dbuf 0192                           _main 1902                           _dtoa 2DC8  
                         _prec 00F0                           _vals 01C7                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 3FCE  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4712                __end_of_HighISR 000E  
       __end_of_color_read_lum 46C2                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 49C6                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 43D6  
              __end_of___aodiv 35B4                __end_of___fladd 22D6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 3884                __end_of___fldiv 2A9A  
              __end_of___flmul 2700                __end_of___flsub 4846                    colour_rel@B 004A  
                  colour_rel@G 0046                          ?_stop 0014                    colour_rel@L 0036  
                  colour_rel@R 0042                __end_of___lwdiv 413A                          i2l275 000A  
                 vfpfcnvrt@fmt 0041                          _TMR0H 000FD4                          _TMR0L 000FD3  
              __end_of_go_Home 3278        __end_of_sendCharSerial4 4B48     __end_of_I2C_2_Master_Start 4B72  
   __end_of_I2C_2_Master_Write 4B54                   YellowMove@mL 0020                          _flags 00F4  
                 YellowMove@mR 0022                          _fputc 3AD8                          _fputs 4846  
                        pad@fp 0011                          _power 01D3                          _width 015C  
                        _putch 4B78                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                   main@run_flag 00E8                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 44D8        __end_of_color_read_Blue 47B2  
        _I2C_2_Master_RepStart 4B54               __end_of_BlueMove 4210                     PinkMove@mL 0020  
                   PinkMove@mR 0022                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 413A                _reverseOneBlock 4322                   __end_of_main 1E16  
                 __end_of_dtoa 3046                   __end_of_stop 404C                _colour_rel$2807 003A  
              _colour_rel$2808 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 494A               __end_of_PinkMove 4672                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 45CE  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 44D8  
             __end_of___xxtofl 342C                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 39D4                         ___fleq 3BA2                      ??___aodiv 0011  
                main@temp_1189 00E6                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4AAC              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 4172                         clear_1 417E  
                       clear_2 418A                         _motorL 00F5                         _motorR 01BE  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4800  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 3E26                     ___flge@ff1 0001  
                   _YellowMove 45CE                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 4198        __end_of_reverseOneBlock 437C  
     __end_of_color_read_Green 4762         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4B7A                 __pcstackCOMRAM 0001  
                _fullSpeedBack 3E26                   __pidataBANK0 4B7C                   __pidataBANK1 4B72  
                __end_of_fputc 3BA2                  __end_of_fputs 488A                  __end_of_putch 4B7A  
            __end_of_GreenMove 4A04            __end_of_Timer0_init 4B12            __end_of_ReversePink 4988  
                    ?_BlueMove 0020                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14347 0150          __end_of_reverseDetect 43D6                        ??_putch 0001  
                   __pbssBANK0 00F0                     __pbssBANK1 0100                     __pbssBANK2 0200  
              reverseDetect@mL 001A                reverseDetect@mR 001C                    ?_OrangeMove 0020  
             _Forwardhalfblock 42C8                     _getTMR0val 4A86              __end_of_RetryMove 3FCE  
                    ?_PinkMove 0020              _color_writetoaddr 4AD2                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 0001                        ?___fleq 0019  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                 ?_turnRight45 001A            ??_color_writetoaddr 0004                  colour_rel@rel 0034  
               go_Home@WayBack 0024                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5              ??_ForwardOneBlock 001E                     ??_BlueMove 0024  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                    ?_YellowMove 0020  
                   _colour_rel 2A9A        __end_of_Interrupts_init 4B7C         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               main@consecuitive 00EA                        _HighISR 0008  
             ??_color_read_lum 0007               ?_reverseOneBlock 001A      __end_of_color_writetoaddr 4AF2  
                      _RedMove 4988             _I2C_2_Master_Start 4B68                     ??_PinkMove 0024  
                   _initUSART4 4B12             _I2C_2_Master_Write 4B48                        __Hparam 0000  
                      _WayBack 0160                        __Lparam 0000              color_read_Red@tmp 000A  
                  _Timer0_init 4AF2                    RetryMove@mL 001A                    RetryMove@mR 001C  
      sendStringSerial4@string 0002              reverseOneBlock@mL 001A              reverseOneBlock@mR 001C  
                  _ReversePink 494A                        ___aodiv 342C                        ___fladd 1E16  
                      ___aomod 3720                        ___fldiv 2700                        ___flmul 22D6  
                      ___flsub 4800            ?_I2C_2_Master_Start 0001                        ___lwdiv 40C6  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 413A  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 3046  
                      __ptext0 1902                        __ptext1 4486                        __ptext2 47B2  
                      __ptext3 3884                        __ptext4 2DC8                        __ptext5 404C  
                      __ptext6 4846                        __ptext7 3AD8                        __ptext8 4B78  
                      __ptext9 48CC                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                  _RxBufWriteCnt 005E              color_read_lum@tmp 000A  
                      main@buf 0080                        _sprintf 4486           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization 4198                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 00F2              __end_of_vfpfcnvrt 39D4  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 01D1  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0047                     ??_vfprintf 0057                _initDCmotorsPWM 3EC4  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 3CEA                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 002C                    ___fldiv@rem 0025  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 0020  
                ReversePink@mR 0022       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 0032               ?_Interrupts_init 0001                    ___flmul@grs 003F  
                  _CCP1CONbits 000FAB                     main@colour 00EC                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 0020                      RedMove@mR 0022  
           ??_color_read_Green 0007                     _turnLeft45 442E                 __end_of___flge 3AD8  
               __end_of___fleq 3C4C                 _fullSpeedAhead 3CEA                    vfpfcnvrt@ap 0043  
                  vfpfcnvrt@cp 004F                    vfpfcnvrt@fp 003F                 __end_of___wmul 4AD2  
     __end_of_Forwardhalfblock 4322                      _GreenMove 49C6            start_initialization 413A  
                  __end_of_abs 490C                    __end_of_pad 40C6                  _TxBufWriteCnt 005C  
        __end_of_LightBlueMove 457C                   ??_OrangeMove 0024            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 3F4C                    vfprintf@fmt 0053         __end_of_fullSpeedAhead 3D88  
                     ??___flge 0009                       ??___fleq 0021                      _RetryMove 3F4C  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                  __pdataBANK0 00FE                    __pdataBANK1 01CF                _ForwardOneBlock 426E  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 490C  
                    ___fldiv@a 001D                      ___fldiv@b 0019                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 452A  
                    ___flmul@a 0036                      ___flmul@b 0032                    __pbssCOMRAM 005B  
                    ___flsub@a 0015                      ___flsub@b 0011                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2487 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0019               ___aodiv@quotient 0013  
                     ?___flmul 0032                       ?___flsub 0011            _Colour_decider$2809 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 4620           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00            __end_of_readColours 426E              _I2C_2_Master_Idle 4A5E  
            _I2C_2_Master_Init 4A34              _I2C_2_Master_Read 488A              _I2C_2_Master_Stop 4B5E  
                _low_threshold 015E                   _RxBufReadCnt 005D             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 0060               getTMR0val@moving 0001                 colour_rel@vals 0032  
            _sendStringSerial4 4A04            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D        __end_of_ForwardOneBlock 42C8                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3884  
    __end_of_I2C_2_Master_Idle 4A86      __end_of_I2C_2_Master_Init 4A5E      __end_of_I2C_2_Master_Read 48CC  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4B68                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4AAC                   _TxBufReadCnt 005B  
                     _BlueMove 41AA                      _turnRight 3C4C                go_Home@cur_time 002B  
                    copy_data0 414E      __end_of_sendStringSerial4 4A34                   ??_colour_rel 0036  
                _reverseDetect 437C  __end_of_I2C_2_Master_RepStart 4B5E             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 3720                   ??_initUSART4 0001                       _PinkMove 4620  
                     __Hrparam 0000         __end_of_Colour_decider 1902                     vfprintf@ap 0055  
                     __Lrparam 0000                     vfprintf@fp 0051          __end_of_fullSpeedBack 3EC4  
                 __Lsmallconst 0E00                    ??_RetryMove 001E                    _readColours 4210  
              ??_ReverseYellow 0024                     ?_vfpfcnvrt 003F                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 2DC8                     _ANSELDbits 000EA7  
                   _ANSELFbits 000EB4                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 3278                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                 _Time_forward 0200                ___lwdiv@divisor 0009             __end_of_initUSART4 4B30  
              ___lwdiv@counter 000D             ??_Forwardhalfblock 001E                     ?_turnRight 0014  
                     __ptext10 3720                       __ptext11 342C                       __ptext20 488A  
                     __ptext12 4A04                       __ptext21 4B12                       __ptext13 4B30  
                     __ptext30 49C6                       __ptext22 3EC4                       __ptext14 4210  
                     __ptext31 42C8                       __ptext23 3046                       __ptext15 4672  
                     __ptext40 4A5E                       __ptext32 41AA                       __ptext24 490C  
                     __ptext16 46C2                       __ptext41 4A34                       __ptext33 4A86  
                     __ptext25 494A                       __ptext17 4712                       __ptext50 3D88  
                     __ptext42 45CE                       __ptext34 2A9A                       __ptext26 426E  
                     __ptext18 4762                       __ptext51 4322                       __ptext43 43D6  
                     __ptext35 457C                       __ptext27 4988                       __ptext19 4B54  
                     __ptext60 3278                       __ptext52 437C                       __ptext44 3C4C  
                     __ptext36 4AD2                       __ptext28 44D8                       __ptext61 4800  
                     __ptext53 3FCE                       __ptext45 4AF2                       __ptext37 4B48  
                     __ptext29 452A                       __ptext62 1E16                       __ptext54 3E26  
                     __ptext46 3F4C                       __ptext38 4B5E                       __ptext63 22D6  
                     __ptext55 35B4                       __ptext47 3CEA                       __ptext39 4B68  
                     __ptext64 39D4                       __ptext56 4AAC                       __ptext48 4620  
                     __ptext65 3BA2                       __ptext57 40C6                       __ptext49 442E  
                     __ptext66 2700                       __ptext58 4B7A                       __ptext59 0E26  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   turnLeft@mL 0014                     turnLeft@mR 0016               ?_ForwardOneBlock 001A  
                     go_Home@i 002D                ?_Colour_decider 004B                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 47B2  
                ??_turnRight45 001E                       main@temp 00E4                       _turnLeft 3D88  
             ___aomod@dividend 0001              ??_reverseOneBlock 001E                main@prev_colour 00EE  
                  _setMotorPWM 35B4                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 006C                 _high_threshold 01CF  
             ??_fullSpeedAhead 0018                   ??_turnLeft45 001E                     BlueMove@mL 0020  
                   BlueMove@mR 0022                ___aomod@divisor 0009                    ??_vfpfcnvrt 0045  
              ___aomod@counter 0011               _color_click_init 457C                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 442E                ??_reverseDetect 001E                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 4486                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 4B30                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
