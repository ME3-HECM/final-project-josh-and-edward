

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Feb 27 01:03:08 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 06/04/2022 GMT
    61                           ; 
    62                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F67K40 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95                           	psect	idataBANK0
    96   0023C8                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _DataFlag
   100   0023C8  01                 	db	1
   101   000000                     _TX4REG	set	3812
   102   000000                     _RC4STAbits	set	3815
   103   000000                     _SP4BRGH	set	3814
   104   000000                     _SSP2CON2bits	set	3802
   105   000000                     _RX4PPS	set	3605
   106   000000                     _SSP2CLKPPS	set	3612
   107   000000                     _SSP2DATPPS	set	3613
   108   000000                     _ANSELDbits	set	3751
   109   000000                     _SSP2ADD	set	3798
   110   000000                     _SSP2CON1bits	set	3801
   111   000000                     _LATAbits	set	3961
   112   000000                     _LATGbits	set	3967
   113   000000                     _TRISAbits	set	3969
   114   000000                     _TRISGbits	set	3975
   115   000000                     _LATFbits	set	3966
   116   000000                     _INTCONbits	set	4082
   117   000000                     _TRISDbits	set	3972
   118   000000                     _TRISFbits	set	3974
   119   000000                     _RC4REG	set	3811
   120   000000                     _SP4BRGL	set	3813
   121   000000                     _TX4STAbits	set	3816
   122   000000                     _BAUD4CONbits	set	3817
   123   000000                     _SSP2CON2	set	3802
   124   000000                     _SSP2STAT	set	3800
   125   000000                     _SSP2BUF	set	3797
   126   000000                     _PIE2bits	set	3627
   127   000000                     _PIE4bits	set	3629
   128   000000                     _PIR4bits	set	3639
   129   000000                     _RC0PPS	set	3682
   130   000000                     _RD5PPS	set	3695
   131   000000                     _RD6PPS	set	3696
   132                           
   133                           	psect	smallconst
   134   000E00                     __psmallconst:
   135                           	callstack 0
   136   000E00  00                 	db	0
   137   000E01                     STR_1:
   138   000E01  72                 	db	114	;'r'
   139   000E02  65                 	db	101	;'e'
   140   000E03  64                 	db	100	;'d'
   141   000E04  3D                 	db	61	;'='
   142   000E05  25                 	db	37
   143   000E06  64                 	db	100	;'d'
   144   000E07  20                 	db	32
   145   000E08  67                 	db	103	;'g'
   146   000E09  72                 	db	114	;'r'
   147   000E0A  65                 	db	101	;'e'
   148   000E0B  65                 	db	101	;'e'
   149   000E0C  6E                 	db	110	;'n'
   150   000E0D  3D                 	db	61	;'='
   151   000E0E  25                 	db	37
   152   000E0F  64                 	db	100	;'d'
   153   000E10  20                 	db	32
   154   000E11  62                 	db	98	;'b'
   155   000E12  6C                 	db	108	;'l'
   156   000E13  75                 	db	117	;'u'
   157   000E14  65                 	db	101	;'e'
   158   000E15  3D                 	db	61	;'='
   159   000E16  25                 	db	37
   160   000E17  64                 	db	100	;'d'
   161   000E18  20                 	db	32
   162   000E19  6C                 	db	108	;'l'
   163   000E1A  75                 	db	117	;'u'
   164   000E1B  6D                 	db	109	;'m'
   165   000E1C  3D                 	db	61	;'='
   166   000E1D  25                 	db	37
   167   000E1E  64                 	db	100	;'d'
   168   000E1F  0D                 	db	13
   169   000E20  0A                 	db	10
   170   000E21  00                 	db	0
   171   000E22  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   0020C2                     __pcinit:
   177                           	callstack 0
   178   0020C2                     start_initialization:
   179                           	callstack 0
   180   0020C2                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to BANK0 (1 bytes)
   184                           ; load TBLPTR registers with __pidataBANK0
   185   0020C2  0EC8               	movlw	low __pidataBANK0
   186   0020C4  6EF6               	movwf	tblptrl,c
   187   0020C6  0E23               	movlw	high __pidataBANK0
   188   0020C8  6EF7               	movwf	tblptrh,c
   189   0020CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   190   0020CC  6EF8               	movwf	tblptru,c
   191   0020CE  0009               	tblrd		*+	;fetch initializer
   192   0020D0  CFF5 F0CE          	movff	tablat,__pdataBANK0
   193                           
   194                           ; Clear objects allocated to BANK1 (60 bytes)
   195   0020D4  EE01  F000         	lfsr	0,__pbssBANK1
   196   0020D8  0E3C               	movlw	60
   197   0020DA                     clear_0:
   198   0020DA  6AEE               	clrf	postinc0,c
   199   0020DC  06E8               	decf	wreg,f,c
   200   0020DE  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (77 bytes)
   203   0020E0  EE00  F060         	lfsr	0,__pbssBANK0
   204   0020E4  0E4D               	movlw	77
   205   0020E6                     clear_1:
   206   0020E6  6AEE               	clrf	postinc0,c
   207   0020E8  06E8               	decf	wreg,f,c
   208   0020EA  E1FD               	bnz	clear_1
   209                           
   210                           ; Clear objects allocated to COMRAM (4 bytes)
   211   0020EC  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   212   0020EE  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   213   0020F0  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   214   0020F2  6A57               	clrf	__pbssCOMRAM& (0+255),c
   215   0020F4                     end_of_initialization:
   216                           	callstack 0
   217   0020F4                     __end_of__initialization:
   218                           	callstack 0
   219   0020F4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   220   0020F6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   221   0020F8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   222   0020FA  6EF8               	movwf	tblptru,c
   223   0020FC  0E0E               	movlw	high __Lsmallconst
   224   0020FE  6EF7               	movwf	tblptrh,c
   225   002100  0100               	movlb	0
   226   002102  EFCF  F00D         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   000057                     __pbssCOMRAM:
   230                           	callstack 0
   231   000057                     _TxBufReadCnt:
   232                           	callstack 0
   233   000057                     	ds	1
   234   000058                     _TxBufWriteCnt:
   235                           	callstack 0
   236   000058                     	ds	1
   237   000059                     _RxBufReadCnt:
   238                           	callstack 0
   239   000059                     	ds	1
   240   00005A                     _RxBufWriteCnt:
   241                           	callstack 0
   242   00005A                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245   000060                     __pbssBANK0:
   246                           	callstack 0
   247   000060                     _EUSART4RXbuf:
   248                           	callstack 0
   249   000060                     	ds	20
   250   000074                     _width:
   251                           	callstack 0
   252   000074                     	ds	2
   253   000076                     _prec:
   254                           	callstack 0
   255   000076                     	ds	2
   256   000078                     _flags:
   257                           	callstack 0
   258   000078                     	ds	1
   259   000079                     _dbuf:
   260                           	callstack 0
   261   000079                     	ds	32
   262   000099                     _rel:
   263                           	callstack 0
   264   000099                     	ds	12
   265   0000A5                     _vals:
   266                           	callstack 0
   267   0000A5                     	ds	8
   268                           
   269                           	psect	dataBANK0
   270   0000CE                     __pdataBANK0:
   271                           	callstack 0
   272   0000CE                     _DataFlag:
   273                           	callstack 0
   274   0000CE                     	ds	1
   275                           
   276                           	psect	bssBANK1
   277   000100                     __pbssBANK1:
   278                           	callstack 0
   279   000100                     _EUSART4TXbuf:
   280                           	callstack 0
   281   000100                     	ds	60
   282                           
   283                           	psect	cstackBANK1
   284   00013C                     __pcstackBANK1:
   285                           	callstack 0
   286   00013C                     main@buf:
   287                           	callstack 0
   288                           
   289                           ; 50 bytes @ 0x0
   290   00013C                     	ds	50
   291                           
   292                           	psect	cstackBANK0
   293   0000AD                     __pcstackBANK0:
   294                           	callstack 0
   295   0000AD                     ?_vfprintf:
   296                           	callstack 0
   297   0000AD                     vfprintf@fp:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301   0000AD                     	ds	2
   302   0000AF                     vfprintf@fmt:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x2
   306   0000AF                     	ds	2
   307   0000B1                     vfprintf@ap:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x4
   311   0000B1                     	ds	2
   312   0000B3                     ?_sprintf:
   313                           	callstack 0
   314   0000B3                     sprintf@s:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x6
   318   0000B3                     	ds	2
   319   0000B5                     sprintf@fmt:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x8
   323   0000B5                     	ds	10
   324   0000BF                     sprintf@ap:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x12
   328   0000BF                     	ds	2
   329   0000C1                     sprintf@f:
   330                           	callstack 0
   331                           
   332                           ; 11 bytes @ 0x14
   333   0000C1                     	ds	11
   334   0000CC                     ??_main:
   335                           
   336                           ; 1 bytes @ 0x1F
   337   0000CC                     	ds	2
   338                           
   339                           	psect	cstackCOMRAM
   340   000001                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000001                     ??_getCharFromTxBuf:
   343   000001                     putCharToRxBuf@byte:
   344                           	callstack 0
   345   000001                     
   346                           ; 1 bytes @ 0x0
   347   000001                     	ds	2
   348   000003                     ??_HighISR:
   349                           
   350                           ; 1 bytes @ 0x2
   351   000003                     	ds	2
   352   000005                     ??_I2C_2_Master_Idle:
   353   000005                     ?___awdiv:
   354                           	callstack 0
   355   000005                     ?___aodiv:
   356                           	callstack 0
   357   000005                     ?___aomod:
   358                           	callstack 0
   359   000005                     putCharToTxBuf@byte:
   360                           	callstack 0
   361   000005                     ___awdiv@dividend:
   362                           	callstack 0
   363   000005                     fputc@c:
   364                           	callstack 0
   365   000005                     ___aodiv@dividend:
   366                           	callstack 0
   367   000005                     ___aomod@dividend:
   368                           	callstack 0
   369                           
   370                           ; 8 bytes @ 0x4
   371   000005                     	ds	1
   372   000006                     ??_I2C_2_Master_Read:
   373   000006                     I2C_2_Master_Write@data_byte:
   374                           	callstack 0
   375   000006                     TxBufferedString@string:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x5
   379   000006                     	ds	1
   380   000007                     color_writetoaddr@value:
   381                           	callstack 0
   382   000007                     I2C_2_Master_Read@ack:
   383                           	callstack 0
   384   000007                     ___awdiv@divisor:
   385                           	callstack 0
   386   000007                     fputc@fp:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x6
   390   000007                     	ds	1
   391   000008                     color_writetoaddr@address:
   392                           	callstack 0
   393   000008                     I2C_2_Master_Read@tmp:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x7
   397   000008                     	ds	1
   398   000009                     ??_fputc:
   399   000009                     ??_color_click_init:
   400   000009                     ?_color_read_lum:
   401                           	callstack 0
   402   000009                     ?_color_read_Red:
   403                           	callstack 0
   404   000009                     ?_color_read_Green:
   405                           	callstack 0
   406   000009                     ?_color_read_Blue:
   407                           	callstack 0
   408   000009                     ___awdiv@counter:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x8
   412   000009                     	ds	1
   413   00000A                     ___awdiv@sign:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x9
   417   00000A                     	ds	1
   418   00000B                     ??_color_read_lum:
   419   00000B                     ??_color_read_Red:
   420   00000B                     ??_color_read_Green:
   421   00000B                     ??_color_read_Blue:
   422   00000B                     ___awdiv@quotient:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0xA
   426   00000B                     	ds	2
   427   00000D                     ?___xxtofl:
   428                           	callstack 0
   429   00000D                     ___xxtofl@val:
   430                           	callstack 0
   431   00000D                     ___aodiv@divisor:
   432                           	callstack 0
   433   00000D                     ___aomod@divisor:
   434                           	callstack 0
   435                           
   436                           ; 8 bytes @ 0xC
   437   00000D                     	ds	1
   438   00000E                     color_read_lum@tmp:
   439                           	callstack 0
   440   00000E                     color_read_Red@tmp:
   441                           	callstack 0
   442   00000E                     color_read_Green@tmp:
   443                           	callstack 0
   444   00000E                     color_read_Blue@tmp:
   445                           	callstack 0
   446   00000E                     fputs@s:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xD
   450   00000E                     	ds	2
   451   000010                     readColours@vals:
   452                           	callstack 0
   453   000010                     fputs@fp:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xF
   457   000010                     	ds	1
   458   000011                     ??___xxtofl:
   459                           
   460                           ; 1 bytes @ 0x10
   461   000011                     	ds	1
   462   000012                     fputs@c:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0x11
   466   000012                     	ds	1
   467   000013                     fputs@i:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x12
   471   000013                     	ds	2
   472   000015                     ___aodiv@counter:
   473                           	callstack 0
   474   000015                     ___aomod@counter:
   475                           	callstack 0
   476   000015                     ___xxtofl@sign:
   477                           	callstack 0
   478   000015                     pad@fp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x14
   482   000015                     	ds	1
   483   000016                     ___aodiv@sign:
   484                           	callstack 0
   485   000016                     ___aomod@sign:
   486                           	callstack 0
   487   000016                     ___xxtofl@exp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x15
   491   000016                     	ds	1
   492   000017                     ?_abs:
   493                           	callstack 0
   494   000017                     pad@buf:
   495                           	callstack 0
   496   000017                     abs@a:
   497                           	callstack 0
   498   000017                     ___xxtofl@arg:
   499                           	callstack 0
   500   000017                     ___aodiv@quotient:
   501                           	callstack 0
   502                           
   503                           ; 8 bytes @ 0x16
   504   000017                     	ds	2
   505   000019                     ??_abs:
   506   000019                     pad@p:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x18
   510   000019                     	ds	2
   511   00001B                     ??_pad:
   512   00001B                     ?___fldiv:
   513                           	callstack 0
   514   00001B                     ___fldiv@b:
   515                           	callstack 0
   516                           
   517                           ; 4 bytes @ 0x1A
   518   00001B                     	ds	1
   519   00001C                     pad@i:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1B
   523   00001C                     	ds	2
   524   00001E                     pad@w:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1D
   528   00001E                     	ds	1
   529   00001F                     ___fldiv@a:
   530                           	callstack 0
   531                           
   532                           ; 4 bytes @ 0x1E
   533   00001F                     	ds	1
   534   000020                     dtoa@fp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x1F
   538   000020                     	ds	2
   539   000022                     dtoa@d:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x21
   543   000022                     	ds	1
   544   000023                     ??___fldiv:
   545                           
   546                           ; 1 bytes @ 0x22
   547   000023                     	ds	4
   548   000027                     ___fldiv@rem:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x26
   552   000027                     	ds	3
   553   00002A                     ??_dtoa:
   554                           
   555                           ; 1 bytes @ 0x29
   556   00002A                     	ds	1
   557   00002B                     ___fldiv@sign:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x2A
   561   00002B                     	ds	1
   562   00002C                     ___fldiv@new_exp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x2B
   566   00002C                     	ds	2
   567   00002E                     ___fldiv@grs:
   568                           	callstack 0
   569                           
   570                           ; 4 bytes @ 0x2D
   571   00002E                     	ds	4
   572   000032                     ___fldiv@bexp:
   573                           	callstack 0
   574   000032                     _dtoa$1431:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x31
   578   000032                     	ds	1
   579   000033                     ___fldiv@aexp:
   580                           	callstack 0
   581                           
   582                           ; 1 bytes @ 0x32
   583   000033                     	ds	1
   584   000034                     colour_rel@vals:
   585                           	callstack 0
   586   000034                     dtoa@p:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x33
   590   000034                     	ds	2
   591   000036                     colour_rel@rel:
   592                           	callstack 0
   593   000036                     dtoa@w:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x35
   597   000036                     	ds	2
   598   000038                     colour_rel@R:
   599                           	callstack 0
   600   000038                     dtoa@n:
   601                           	callstack 0
   602                           
   603                           ; 8 bytes @ 0x37
   604   000038                     	ds	2
   605   00003A                     colour_rel@G:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x39
   609   00003A                     	ds	2
   610   00003C                     colour_rel@B:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x3B
   614   00003C                     	ds	2
   615   00003E                     colour_rel@L:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x3D
   619   00003E                     	ds	2
   620   000040                     dtoa@s:
   621                           	callstack 0
   622                           
   623                           ; 1 bytes @ 0x3F
   624   000040                     	ds	1
   625   000041                     dtoa@i:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x40
   629   000041                     	ds	2
   630   000043                     vfpfcnvrt@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x42
   634   000043                     	ds	2
   635   000045                     vfpfcnvrt@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x44
   639   000045                     	ds	2
   640   000047                     vfpfcnvrt@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x46
   644   000047                     	ds	2
   645   000049                     ??_vfpfcnvrt:
   646                           
   647                           ; 1 bytes @ 0x48
   648   000049                     	ds	2
   649   00004B                     vfpfcnvrt@convarg:
   650                           	callstack 0
   651                           
   652                           ; 8 bytes @ 0x4A
   653   00004B                     	ds	8
   654   000053                     vfpfcnvrt@cp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x52
   658   000053                     	ds	2
   659   000055                     vfprintf@cfmt:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x54
   663   000055                     	ds	2
   664   000057                     
   665                           ; 1 bytes @ 0x56
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 28 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  value           4    0        float 
   676 ;;  buf            50    0[BANK1 ] unsigned char [50]
   677 ;;  ADC             2    0        unsigned int 
   678 ;;  frac_part       2    0        unsigned int 
   679 ;;  int_part        2    0        unsigned int 
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   690 ;;      Locals:         0       0      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
   691 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   692 ;;      Totals:         0       2      50       0       0       0       0       0       0       0       0       0       
      +0       0       0
   693 ;;Total ram usage:       52 bytes
   694 ;; Hardware stack levels required when called: 10
   695 ;; This function calls:
   696 ;;		_I2C_2_Master_Init
   697 ;;		_Interrupts_init
   698 ;;		_TxBufferedString
   699 ;;		___awdiv
   700 ;;		___xxtofl
   701 ;;		_color_click_init
   702 ;;		_colour_rel
   703 ;;		_initUSART4
   704 ;;		_readColours
   705 ;;		_sendTxBuf
   706 ;;		_sprintf
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713   001B9E                     __ptext0:
   714                           	callstack 0
   715   001B9E                     _main:
   716                           	callstack 21
   717   001B9E                     
   718                           ;main.c: 29:     initUSART4();
   719   001B9E  ECAC  F011         	call	_initUSART4	;wreg free
   720   001BA2                     
   721                           ;main.c: 30:     Interrupts_init();
   722   001BA2  ECC7  F011         	call	_Interrupts_init	;wreg free
   723   001BA6                     
   724                           ;main.c: 31:     color_click_init();
   725   001BA6  ECE6  F010         	call	_color_click_init	;wreg free
   726   001BAA                     
   727                           ;main.c: 32:     I2C_2_Master_Init();
   728   001BAA  EC49  F011         	call	_I2C_2_Master_Init	;wreg free
   729   001BAE                     l3025:
   730                           
   731                           ;main.c: 39:     {;main.c: 40:    LATGbits.LATG1=1;
   732   001BAE  827F               	bsf	127,1,c	;volatile
   733   001BB0                     
   734                           ;main.c: 41:     _delay((unsigned long)((100)*(64000000/4000.0)));
   735   001BB0  0E09               	movlw	9
   736   001BB2  0100               	movlb	0	; () banked
   737   001BB4  6FCD               	movwf	(??_main+1)& (0+255),b
   738   001BB6  0E1E               	movlw	30
   739   001BB8  6FCC               	movwf	??_main& (0+255),b
   740   001BBA  0EE4               	movlw	228
   741   001BBC                     u2687:
   742   001BBC  2EE8               	decfsz	wreg,f,c
   743   001BBE  D7FE               	bra	u2687
   744   001BC0  2FCC               	decfsz	??_main& (0+255),f,b
   745   001BC2  D7FC               	bra	u2687
   746   001BC4  2FCD               	decfsz	(??_main+1)& (0+255),f,b
   747   001BC6  D7FA               	bra	u2687
   748   001BC8  F000               	nop	
   749   001BCA                     
   750                           ;main.c: 44:     readColours(&vals);
   751   001BCA  0EA5               	movlw	low _vals
   752   001BCC  6E10               	movwf	readColours@vals^0,c
   753   001BCE  0E00               	movlw	high _vals
   754   001BD0  6E11               	movwf	(readColours@vals+1)^0,c
   755   001BD2  EC41  F00F         	call	_readColours	;wreg free
   756   001BD6                     
   757                           ;main.c: 45:     colour_rel(&vals, &rel);
   758   001BD6  0EA5               	movlw	low _vals
   759   001BD8  6E34               	movwf	colour_rel@vals^0,c
   760   001BDA  0E00               	movlw	high _vals
   761   001BDC  6E35               	movwf	(colour_rel@vals+1)^0,c
   762   001BDE  0E99               	movlw	low _rel
   763   001BE0  6E36               	movwf	colour_rel@rel^0,c
   764   001BE2  0E00               	movlw	high _rel
   765   001BE4  6E37               	movwf	(colour_rel@rel+1)^0,c
   766   001BE6  ECBB  F00B         	call	_colour_rel	;wreg free
   767   001BEA  C0AB  F007         	movff	_vals+6,___awdiv@divisor
   768   001BEE  C0AC  F008         	movff	_vals+7,___awdiv@divisor+1
   769   001BF2  C0A5  F005         	movff	_vals,___awdiv@dividend
   770   001BF6  C0A6  F006         	movff	_vals+1,___awdiv@dividend+1
   771   001BFA  ECA2  F00E         	call	___awdiv	;wreg free
   772   001BFE  C005  F00D         	movff	?___awdiv,___xxtofl@val
   773   001C02  C006  F00E         	movff	?___awdiv+1,___xxtofl@val+1
   774   001C06  0E00               	movlw	0
   775   001C08  BE0E               	btfsc	(___xxtofl@val+1)^0,7,c
   776   001C0A  0EFF               	movlw	-1
   777   001C0C  6E0F               	movwf	(___xxtofl@val+2)^0,c
   778   001C0E  6E10               	movwf	(___xxtofl@val+3)^0,c
   779   001C10  0E01               	movlw	1
   780   001C12  EC1D  F00A         	call	___xxtofl
   781   001C16                     
   782                           ;main.c: 48:     sprintf(buf,"red=%d green=%d blue=%d lum=%d\r\n",vals.R, vals.G,vals.B,
      +                          vals.L);
   783   001C16  0E3C               	movlw	low main@buf
   784   001C18  0100               	movlb	0	; () banked
   785   001C1A  6FB3               	movwf	sprintf@s& (0+255),b
   786   001C1C  0E01               	movlw	high main@buf
   787   001C1E  6FB4               	movwf	(sprintf@s+1)& (0+255),b
   788   001C20  0E01               	movlw	low STR_1
   789   001C22  6FB5               	movwf	sprintf@fmt& (0+255),b
   790   001C24  0E0E               	movlw	high STR_1
   791   001C26  6FB6               	movwf	(sprintf@fmt+1)& (0+255),b
   792   001C28  C0A5  F0B7         	movff	_vals,?_sprintf+4
   793   001C2C  C0A6  F0B8         	movff	_vals+1,?_sprintf+5
   794   001C30  C0A7  F0B9         	movff	_vals+2,?_sprintf+6
   795   001C34  C0A8  F0BA         	movff	_vals+3,?_sprintf+7
   796   001C38  C0A9  F0BB         	movff	_vals+4,?_sprintf+8
   797   001C3C  C0AA  F0BC         	movff	_vals+5,?_sprintf+9
   798   001C40  C0AB  F0BD         	movff	_vals+6,?_sprintf+10
   799   001C44  C0AC  F0BE         	movff	_vals+7,?_sprintf+11
   800   001C48  EC70  F00F         	call	_sprintf	;wreg free
   801   001C4C                     
   802                           ;main.c: 49:     TxBufferedString(buf);
   803   001C4C  0E3C               	movlw	low main@buf
   804   001C4E  6E06               	movwf	TxBufferedString@string^0,c
   805   001C50  0E01               	movlw	high main@buf
   806   001C52  6E07               	movwf	(TxBufferedString@string+1)^0,c
   807   001C54  EC06  F011         	call	_TxBufferedString	;wreg free
   808                           
   809                           ;main.c: 51:     while (DataFlag){
   810   001C58  EF30  F00E         	goto	l3041
   811   001C5C                     l3039:
   812                           
   813                           ; BSR set to: 0
   814                           ;main.c: 52:         sendTxBuf();
   815   001C5C  EC34  F011         	call	_sendTxBuf	;wreg free
   816   001C60                     l3041:
   817                           
   818                           ;main.c: 51:     while (DataFlag){
   819   001C60  0100               	movlb	0	; () banked
   820   001C62  51CE               	movf	_DataFlag& (0+255),w,b	;volatile
   821   001C64  A4D8               	btfss	status,2,c
   822   001C66  EF37  F00E         	goto	u2671
   823   001C6A  EF39  F00E         	goto	u2670
   824   001C6E                     u2671:
   825   001C6E  EF2E  F00E         	goto	l3039
   826   001C72                     u2670:
   827   001C72  EFD7  F00D         	goto	l3025
   828   001C76  EF25  F000         	goto	start
   829   001C7A                     __end_of_main:
   830                           	callstack 0
   831                           
   832 ;; *************** function _sprintf *****************
   833 ;; Defined at:
   834 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  s               2    6[BANK0 ] PTR unsigned char 
   837 ;;		 -> main@buf(50), 
   838 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   839 ;;		 -> STR_1(33), 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  f              11   20[BANK0 ] struct _IO_FILE
   842 ;;  ap              2   18[BANK0 ] PTR void [1]
   843 ;;		 -> ?_sprintf(2), 
   844 ;;  ret             2    0        int 
   845 ;; Return value:  Size  Location     Type
   846 ;;                  2    6[BANK0 ] int 
   847 ;; Registers used:
   848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   854 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   855 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   857 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   858 ;;Total ram usage:       25 bytes
   859 ;; Hardware stack levels used: 1
   860 ;; Hardware stack levels required when called: 9
   861 ;; This function calls:
   862 ;;		_vfprintf
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text1
   869   001EE0                     __ptext1:
   870                           	callstack 0
   871   001EE0                     _sprintf:
   872                           	callstack 21
   873   001EE0  0EB7               	movlw	low (?_sprintf+4)
   874   001EE2  0100               	movlb	0	; () banked
   875   001EE4  6FBF               	movwf	sprintf@ap& (0+255),b
   876   001EE6  0E00               	movlw	high (?_sprintf+4)
   877   001EE8  6FC0               	movwf	(sprintf@ap+1)& (0+255),b
   878   001EEA  C0B3  F0C1         	movff	sprintf@s,sprintf@f
   879   001EEE  C0B4  F0C2         	movff	sprintf@s+1,sprintf@f+1
   880   001EF2                     
   881                           ; BSR set to: 0
   882   001EF2  0E00               	movlw	0
   883   001EF4  6FC5               	movwf	(sprintf@f+4)& (0+255),b
   884   001EF6  0E00               	movlw	0
   885   001EF8  6FC4               	movwf	(sprintf@f+3)& (0+255),b
   886   001EFA                     
   887                           ; BSR set to: 0
   888   001EFA  0E00               	movlw	0
   889   001EFC  6FCB               	movwf	(sprintf@f+10)& (0+255),b
   890   001EFE  0E00               	movlw	0
   891   001F00  6FCA               	movwf	(sprintf@f+9)& (0+255),b
   892   001F02                     
   893                           ; BSR set to: 0
   894   001F02  0EC1               	movlw	low sprintf@f
   895   001F04  6FAD               	movwf	vfprintf@fp& (0+255),b
   896   001F06  0E00               	movlw	high sprintf@f
   897   001F08  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
   898   001F0A  C0B5  F0AF         	movff	sprintf@fmt,vfprintf@fmt
   899   001F0E  C0B6  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
   900   001F12  0EBF               	movlw	low sprintf@ap
   901   001F14  6FB1               	movwf	vfprintf@ap& (0+255),b
   902   001F16  0E00               	movlw	high sprintf@ap
   903   001F18  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
   904   001F1A  EC99  F00F         	call	_vfprintf	;wreg free
   905   001F1E  0100               	movlb	0	; () banked
   906   001F20  51C4               	movf	(sprintf@f+3)& (0+255),w,b
   907   001F22  25B3               	addwf	sprintf@s& (0+255),w,b
   908   001F24  6ED9               	movwf	fsr2l,c
   909   001F26  51C5               	movf	(sprintf@f+4)& (0+255),w,b
   910   001F28  21B4               	addwfc	(sprintf@s+1)& (0+255),w,b
   911   001F2A  6EDA               	movwf	fsr2h,c
   912   001F2C  0E00               	movlw	0
   913   001F2E  6EDF               	movwf	indf2,c
   914   001F30                     
   915                           ; BSR set to: 0
   916   001F30  0012               	return		;funcret
   917   001F32                     __end_of_sprintf:
   918                           	callstack 0
   919                           
   920 ;; *************** function _vfprintf *****************
   921 ;; Defined at:
   922 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   925 ;;		 -> sprintf@f(11), 
   926 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   927 ;;		 -> STR_1(33), 
   928 ;;  ap              2    4[BANK0 ] PTR PTR void 
   929 ;;		 -> sprintf@ap(2), 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   932 ;;		 -> STR_1(33), 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  2    0[BANK0 ] int 
   935 ;; Registers used:
   936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   942 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;Total ram usage:        8 bytes
   947 ;; Hardware stack levels used: 1
   948 ;; Hardware stack levels required when called: 8
   949 ;; This function calls:
   950 ;;		_vfpfcnvrt
   951 ;; This function is called by:
   952 ;;		_sprintf
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text2
   957   001F32                     __ptext2:
   958                           	callstack 0
   959   001F32                     _vfprintf:
   960                           	callstack 21
   961   001F32                     
   962                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
   963   001F32  C0AF  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   964   001F36  C0B0  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   965                           
   966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   967   001F3A  EFAD  F00F         	goto	l2887
   968   001F3E                     l2885:
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   971   001F3E  C0AD  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   972   001F42  C0AE  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   973   001F46  0E55               	movlw	low vfprintf@cfmt
   974   001F48  6E45               	movwf	vfpfcnvrt@fmt^0,c
   975   001F4A  0E00               	movlw	high vfprintf@cfmt
   976   001F4C  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   977   001F4E  C0B1  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   978   001F52  C0B2  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   979   001F56  EC28  F00D         	call	_vfpfcnvrt	;wreg free
   980   001F5A                     l2887:
   981                           
   982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   983   001F5A  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   984   001F5E  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   985   001F62                     	if	0	;tblptru may be non-zero
   986   001F62                     	endif
   987   001F62                     	if	0	;tblptru may be non-zero
   988   001F62                     	endif
   989   001F62  0008               	tblrd		*
   990   001F64  50F5               	movf	tablat,w,c
   991   001F66  0900               	iorlw	0
   992   001F68  A4D8               	btfss	status,2,c
   993   001F6A  EFB9  F00F         	goto	u2581
   994   001F6E  EFBB  F00F         	goto	u2580
   995   001F72                     u2581:
   996   001F72  EF9F  F00F         	goto	l2885
   997   001F76                     u2580:
   998   001F76                     
   999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1000   001F76  0E00               	movlw	0
  1001   001F78  0100               	movlb	0	; () banked
  1002   001F7A  6FAE               	movwf	(?_vfprintf+1)& (0+255),b
  1003   001F7C  0E00               	movlw	0
  1004   001F7E  6FAD               	movwf	?_vfprintf& (0+255),b
  1005   001F80                     
  1006                           ; BSR set to: 0
  1007   001F80  0012               	return		;funcret
  1008   001F82                     __end_of_vfprintf:
  1009                           	callstack 0
  1010                           
  1011 ;; *************** function _vfpfcnvrt *****************
  1012 ;; Defined at:
  1013 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1016 ;;		 -> sprintf@f(11), 
  1017 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1018 ;;		 -> vfprintf@cfmt(2), 
  1019 ;;  ap              2   70[COMRAM] PTR PTR void 
  1020 ;;		 -> sprintf@ap(2), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  convarg         8   74[COMRAM] struct .
  1023 ;;  cp              2   82[COMRAM] PTR unsigned char 
  1024 ;;		 -> STR_1(33), 
  1025 ;;  i               2    0        int 
  1026 ;;  done            2    0        int 
  1027 ;;  c               1    0        unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1037 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1038 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;Total ram usage:       18 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 7
  1044 ;; This function calls:
  1045 ;;		_dtoa
  1046 ;;		_fputc
  1047 ;; This function is called by:
  1048 ;;		_vfprintf
  1049 ;; This function uses a non-reentrant model
  1050 ;;
  1051                           
  1052                           	psect	text3
  1053   001A50                     __ptext3:
  1054                           	callstack 0
  1055   001A50                     _vfpfcnvrt:
  1056                           	callstack 21
  1057   001A50                     
  1058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1059   001A50  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1060   001A54  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1061   001A58  CFDE FFF6          	movff	postinc2,tblptrl
  1062   001A5C  CFDD FFF7          	movff	postdec2,tblptrh
  1063   001A60                     	if	0	;tblptru may be non-zero
  1064   001A60                     	endif
  1065   001A60                     	if	0	;tblptru may be non-zero
  1066   001A60                     	endif
  1067   001A60  0008               	tblrd		*
  1068   001A62  50F5               	movf	tablat,w,c
  1069   001A64  0A25               	xorlw	37
  1070   001A66  A4D8               	btfss	status,2,c
  1071   001A68  EF38  F00D         	goto	u2191
  1072   001A6C  EF3A  F00D         	goto	u2190
  1073   001A70                     u2191:
  1074   001A70  EFBA  F00D         	goto	l2643
  1075   001A74                     u2190:
  1076   001A74                     
  1077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1078   001A74  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1079   001A78  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1080   001A7C  2ADE               	incf	postinc2,f,c
  1081   001A7E  0E00               	movlw	0
  1082   001A80  22DD               	addwfc	postdec2,f,c
  1083   001A82                     
  1084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1085   001A82  0E00               	movlw	0
  1086   001A84  0100               	movlb	0	; () banked
  1087   001A86  6F75               	movwf	(_width+1)& (0+255),b
  1088   001A88  0E00               	movlw	0
  1089   001A8A  6F74               	movwf	_width& (0+255),b
  1090   001A8C  C074  F078         	movff	_width,_flags
  1091   001A90                     
  1092                           ; BSR set to: 0
  1093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1094   001A90  6976               	setf	_prec& (0+255),b
  1095   001A92  6977               	setf	(_prec+1)& (0+255),b
  1096   001A94                     
  1097                           ; BSR set to: 0
  1098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1099   001A94  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1100   001A98  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1101   001A9C  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
  1102   001AA0  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
  1103   001AA4                     
  1104                           ; BSR set to: 0
  1105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1106   001AA4  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1107   001AA8  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1108   001AAC                     	if	0	;tblptru may be non-zero
  1109   001AAC                     	endif
  1110   001AAC                     	if	0	;tblptru may be non-zero
  1111   001AAC                     	endif
  1112   001AAC  0008               	tblrd		*
  1113   001AAE  50F5               	movf	tablat,w,c
  1114   001AB0  0A64               	xorlw	100
  1115   001AB2  B4D8               	btfsc	status,2,c
  1116   001AB4  EF5E  F00D         	goto	u2201
  1117   001AB8  EF60  F00D         	goto	u2200
  1118   001ABC                     u2201:
  1119   001ABC  EF6E  F00D         	goto	l2633
  1120   001AC0                     u2200:
  1121   001AC0                     
  1122                           ; BSR set to: 0
  1123   001AC0  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1124   001AC4  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1125   001AC8                     	if	0	;tblptru may be non-zero
  1126   001AC8                     	endif
  1127   001AC8                     	if	0	;tblptru may be non-zero
  1128   001AC8                     	endif
  1129   001AC8  0008               	tblrd		*
  1130   001ACA  50F5               	movf	tablat,w,c
  1131   001ACC  0A69               	xorlw	105
  1132   001ACE  A4D8               	btfss	status,2,c
  1133   001AD0  EF6C  F00D         	goto	u2211
  1134   001AD4  EF6E  F00D         	goto	u2210
  1135   001AD8                     u2211:
  1136   001AD8  EFB1  F00D         	goto	l2639
  1137   001ADC                     u2210:
  1138   001ADC                     l2633:
  1139                           
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1142   001ADC  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1143   001AE0  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1144   001AE4  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1145   001AE8  0E02               	movlw	2
  1146   001AEA  26DE               	addwf	postinc2,f,c
  1147   001AEC  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1148   001AF0  0E00               	movlw	0
  1149   001AF2  22DD               	addwfc	postdec2,f,c
  1150   001AF4  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1151   001AF8  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1152   001AFC  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1153   001B00  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1154   001B04  0E00               	movlw	0
  1155   001B06  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1156   001B08  0EFF               	movlw	-1
  1157   001B0A  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1158   001B0C  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1159   001B0E  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1160   001B10  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1161   001B12  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1162   001B14  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1163                           
  1164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1165   001B16  0E01               	movlw	1
  1166   001B18  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1167   001B1A  6E49               	movwf	??_vfpfcnvrt^0,c
  1168   001B1C  0E00               	movlw	0
  1169   001B1E  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1170   001B20  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1171   001B22  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1172   001B26  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1173   001B2A  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1174   001B2E  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1175   001B32                     
  1176                           ; BSR set to: 0
  1177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1178   001B32  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1179   001B36  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1180   001B3A  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1181   001B3E  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1182   001B42  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1183   001B46  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1184   001B4A  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1185   001B4E  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1186   001B52  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1187   001B56  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1188   001B5A  ECDF  F008         	call	_dtoa	;wreg free
  1189   001B5E  EFCE  F00D         	goto	l1021
  1190   001B62                     l2639:
  1191                           
  1192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1193   001B62  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1194   001B66  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1195   001B6A  2ADE               	incf	postinc2,f,c
  1196   001B6C  0E00               	movlw	0
  1197   001B6E  22DD               	addwfc	postdec2,f,c
  1198   001B70  EFCE  F00D         	goto	l1021
  1199   001B74                     l2643:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1202   001B74  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1203   001B78  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1204   001B7C  CFDE FFF6          	movff	postinc2,tblptrl
  1205   001B80  CFDD FFF7          	movff	postdec2,tblptrh
  1206   001B84                     	if	0	;tblptru may be non-zero
  1207   001B84                     	endif
  1208   001B84                     	if	0	;tblptru may be non-zero
  1209   001B84                     	endif
  1210   001B84  0008               	tblrd		*
  1211   001B86  50F5               	movf	tablat,w,c
  1212   001B88  6E05               	movwf	fputc@c^0,c
  1213   001B8A  6A06               	clrf	(fputc@c+1)^0,c
  1214   001B8C  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1215   001B90  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1216   001B94  EC3D  F00E         	call	_fputc	;wreg free
  1217   001B98  EFB1  F00D         	goto	l2639
  1218   001B9C                     l1021:
  1219   001B9C  0012               	return		;funcret
  1220   001B9E                     __end_of_vfpfcnvrt:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _dtoa *****************
  1224 ;; Defined at:
  1225 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1228 ;;		 -> sprintf@f(11), 
  1229 ;;  d               8   33[COMRAM] long long 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  n               8   55[COMRAM] long long 
  1232 ;;  i               2   64[COMRAM] int 
  1233 ;;  w               2   53[COMRAM] int 
  1234 ;;  p               2   51[COMRAM] int 
  1235 ;;  s               1   63[COMRAM] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      void 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1245 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1246 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1247 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1248 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;Total ram usage:       35 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 6
  1252 ;; This function calls:
  1253 ;;		___aodiv
  1254 ;;		___aomod
  1255 ;;		_abs
  1256 ;;		_pad
  1257 ;; This function is called by:
  1258 ;;		_vfpfcnvrt
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text4
  1263   0011BE                     __ptext4:
  1264                           	callstack 0
  1265   0011BE                     _dtoa:
  1266                           	callstack 21
  1267   0011BE                     
  1268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  1269   0011BE  C022  F038         	movff	dtoa@d,dtoa@n
  1270   0011C2  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1271   0011C6  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1272   0011CA  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1273   0011CE  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1274   0011D2  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1275   0011D6  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1276   0011DA  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1277   0011DE                     
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1279   0011DE  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1280   0011E0  EFF4  F008         	goto	u2071
  1281   0011E4  EFF7  F008         	goto	u2070
  1282   0011E8                     u2071:
  1283   0011E8  0E01               	movlw	1
  1284   0011EA  EFF8  F008         	goto	u2080
  1285   0011EE                     u2070:
  1286   0011EE  0E00               	movlw	0
  1287   0011F0                     u2080:
  1288   0011F0  6E40               	movwf	dtoa@s^0,c
  1289   0011F2                     
  1290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1291   0011F2  5040               	movf	dtoa@s^0,w,c
  1292   0011F4  B4D8               	btfsc	status,2,c
  1293   0011F6  EFFF  F008         	goto	u2091
  1294   0011FA  EF01  F009         	goto	u2090
  1295   0011FE                     u2091:
  1296   0011FE  EF11  F009         	goto	l2545
  1297   001202                     u2090:
  1298   001202                     
  1299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1300   001202  1E3F               	comf	(dtoa@n+7)^0,f,c
  1301   001204  1E3E               	comf	(dtoa@n+6)^0,f,c
  1302   001206  1E3D               	comf	(dtoa@n+5)^0,f,c
  1303   001208  1E3C               	comf	(dtoa@n+4)^0,f,c
  1304   00120A  1E3B               	comf	(dtoa@n+3)^0,f,c
  1305   00120C  1E3A               	comf	(dtoa@n+2)^0,f,c
  1306   00120E  1E39               	comf	(dtoa@n+1)^0,f,c
  1307   001210  6C38               	negf	dtoa@n^0,c
  1308   001212  0E00               	movlw	0
  1309   001214  2239               	addwfc	(dtoa@n+1)^0,f,c
  1310   001216  223A               	addwfc	(dtoa@n+2)^0,f,c
  1311   001218  223B               	addwfc	(dtoa@n+3)^0,f,c
  1312   00121A  223C               	addwfc	(dtoa@n+4)^0,f,c
  1313   00121C  223D               	addwfc	(dtoa@n+5)^0,f,c
  1314   00121E  223E               	addwfc	(dtoa@n+6)^0,f,c
  1315   001220  223F               	addwfc	(dtoa@n+7)^0,f,c
  1316   001222                     l2545:
  1317                           
  1318                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1319   001222  0100               	movlb	0	; () banked
  1320   001224  BF77               	btfsc	(_prec+1)& (0+255),7,b
  1321   001226  EF1F  F009         	goto	u2100
  1322   00122A  5177               	movf	(_prec+1)& (0+255),w,b
  1323   00122C  E106               	bnz	u2101
  1324   00122E  0576               	decf	_prec& (0+255),w,b
  1325   001230  B0D8               	btfsc	status,0,c
  1326   001232  EF1D  F009         	goto	u2101
  1327   001236  EF1F  F009         	goto	u2100
  1328   00123A                     u2101:
  1329   00123A  EF25  F009         	goto	l1000
  1330   00123E                     u2100:
  1331   00123E                     
  1332                           ; BSR set to: 0
  1333   00123E  0E00               	movlw	0
  1334   001240  6E35               	movwf	(dtoa@p+1)^0,c
  1335   001242  0E01               	movlw	1
  1336   001244  6E34               	movwf	dtoa@p^0,c
  1337   001246  EF29  F009         	goto	l1002
  1338   00124A                     l1000:
  1339                           
  1340                           ; BSR set to: 0
  1341   00124A  C076  F034         	movff	_prec,dtoa@p
  1342   00124E  C077  F035         	movff	_prec+1,dtoa@p+1
  1343   001252                     l1002:
  1344                           
  1345                           ; BSR set to: 0
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1347   001252  C074  F036         	movff	_width,dtoa@w
  1348   001256  C075  F037         	movff	_width+1,dtoa@w+1
  1349   00125A                     
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1352   00125A  5040               	movf	dtoa@s^0,w,c
  1353   00125C  B4D8               	btfsc	status,2,c
  1354   00125E  EF33  F009         	goto	u2111
  1355   001262  EF35  F009         	goto	u2110
  1356   001266                     u2111:
  1357   001266  EF4C  F009         	goto	l1003
  1358   00126A                     u2110:
  1359   00126A                     
  1360                           ; BSR set to: 0
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1362   00126A  0636               	decf	dtoa@w^0,f,c
  1363   00126C  A0D8               	btfss	status,0,c
  1364   00126E  0637               	decf	(dtoa@w+1)^0,f,c
  1365   001270                     
  1366                           ; BSR set to: 0
  1367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1368   001270  5040               	movf	dtoa@s^0,w,c
  1369   001272  A4D8               	btfss	status,2,c
  1370   001274  EF3E  F009         	goto	u2121
  1371   001278  EF40  F009         	goto	u2120
  1372   00127C                     u2121:
  1373   00127C  EF46  F009         	goto	l2557
  1374   001280                     u2120:
  1375   001280                     
  1376                           ; BSR set to: 0
  1377   001280  0E00               	movlw	0
  1378   001282  6E33               	movwf	(_dtoa$1431+1)^0,c
  1379   001284  0E2B               	movlw	43
  1380   001286  6E32               	movwf	_dtoa$1431^0,c
  1381   001288  EF4A  F009         	goto	l2559
  1382   00128C                     l2557:
  1383                           
  1384                           ; BSR set to: 0
  1385   00128C  0E00               	movlw	0
  1386   00128E  6E33               	movwf	(_dtoa$1431+1)^0,c
  1387   001290  0E2D               	movlw	45
  1388   001292  6E32               	movwf	_dtoa$1431^0,c
  1389   001294                     l2559:
  1390                           
  1391                           ; BSR set to: 0
  1392   001294  C032  F040         	movff	_dtoa$1431,dtoa@s
  1393   001298                     l1003:
  1394                           
  1395                           ; BSR set to: 0
  1396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1397   001298  0E00               	movlw	0
  1398   00129A  6E42               	movwf	(dtoa@i+1)^0,c
  1399   00129C  0E1F               	movlw	31
  1400   00129E  6E41               	movwf	dtoa@i^0,c
  1401   0012A0                     
  1402                           ; BSR set to: 0
  1403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1404   0012A0  0E00               	movlw	0
  1405   0012A2  6F98               	movwf	(_dbuf+31)& (0+255),b
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1408   0012A4  EFD0  F009         	goto	l2573
  1409   0012A8                     l2563:
  1410                           
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1412   0012A8  0641               	decf	dtoa@i^0,f,c
  1413   0012AA  A0D8               	btfss	status,0,c
  1414   0012AC  0642               	decf	(dtoa@i+1)^0,f,c
  1415   0012AE                     
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1417   0012AE  0E79               	movlw	low _dbuf
  1418   0012B0  2441               	addwf	dtoa@i^0,w,c
  1419   0012B2  6ED9               	movwf	fsr2l,c
  1420   0012B4  0E00               	movlw	high _dbuf
  1421   0012B6  2042               	addwfc	(dtoa@i+1)^0,w,c
  1422   0012B8  6EDA               	movwf	fsr2h,c
  1423   0012BA  C038  F005         	movff	dtoa@n,___aomod@dividend
  1424   0012BE  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1425   0012C2  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1426   0012C6  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1427   0012CA  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1428   0012CE  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1429   0012D2  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1430   0012D6  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1431   0012DA  0E0A               	movlw	10
  1432   0012DC  6E0D               	movwf	___aomod@divisor^0,c
  1433   0012DE  0E00               	movlw	0
  1434   0012E0  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1435   0012E2  0E00               	movlw	0
  1436   0012E4  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1437   0012E6  0E00               	movlw	0
  1438   0012E8  6E10               	movwf	(___aomod@divisor+3)^0,c
  1439   0012EA  0E00               	movlw	0
  1440   0012EC  6E11               	movwf	(___aomod@divisor+4)^0,c
  1441   0012EE  0E00               	movlw	0
  1442   0012F0  6E12               	movwf	(___aomod@divisor+5)^0,c
  1443   0012F2  0E00               	movlw	0
  1444   0012F4  6E13               	movwf	(___aomod@divisor+6)^0,c
  1445   0012F6  0E00               	movlw	0
  1446   0012F8  6E14               	movwf	(___aomod@divisor+7)^0,c
  1447   0012FA  EC76  F00C         	call	___aomod	;wreg free
  1448   0012FE  C005  F02A         	movff	?___aomod,??_dtoa
  1449   001302  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1450   001306  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1451   00130A  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1452   00130E  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1453   001312  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1454   001316  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1455   00131A  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1456   00131E  C02A  F017         	movff	??_dtoa,abs@a
  1457   001322  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1458   001326  ECC6  F010         	call	_abs	;wreg free
  1459   00132A  5017               	movf	?_abs^0,w,c
  1460   00132C  0F30               	addlw	48
  1461   00132E  6EDF               	movwf	indf2,c
  1462   001330                     
  1463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1464   001330  0634               	decf	dtoa@p^0,f,c
  1465   001332  A0D8               	btfss	status,0,c
  1466   001334  0635               	decf	(dtoa@p+1)^0,f,c
  1467   001336                     
  1468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1469   001336  0636               	decf	dtoa@w^0,f,c
  1470   001338  A0D8               	btfss	status,0,c
  1471   00133A  0637               	decf	(dtoa@w+1)^0,f,c
  1472   00133C                     
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1474   00133C  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1475   001340  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1476   001344  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1477   001348  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1478   00134C  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1479   001350  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1480   001354  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1481   001358  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1482   00135C  0E0A               	movlw	10
  1483   00135E  6E0D               	movwf	___aodiv@divisor^0,c
  1484   001360  0E00               	movlw	0
  1485   001362  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1486   001364  0E00               	movlw	0
  1487   001366  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1488   001368  0E00               	movlw	0
  1489   00136A  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1490   00136C  0E00               	movlw	0
  1491   00136E  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1492   001370  0E00               	movlw	0
  1493   001372  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1494   001374  0E00               	movlw	0
  1495   001376  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1496   001378  0E00               	movlw	0
  1497   00137A  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1498   00137C  ECF7  F00A         	call	___aodiv	;wreg free
  1499   001380  C005  F038         	movff	?___aodiv,dtoa@n
  1500   001384  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1501   001388  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1502   00138C  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1503   001390  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1504   001394  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1505   001398  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1506   00139C  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1507   0013A0                     l2573:
  1508                           
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1510   0013A0  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1511   0013A2  EFDB  F009         	goto	u2131
  1512   0013A6  5042               	movf	(dtoa@i+1)^0,w,c
  1513   0013A8  E108               	bnz	u2130
  1514   0013AA  0441               	decf	dtoa@i^0,w,c
  1515   0013AC  A0D8               	btfss	status,0,c
  1516   0013AE  EFDB  F009         	goto	u2131
  1517   0013B2  EFDD  F009         	goto	u2130
  1518   0013B6                     u2131:
  1519   0013B6  EFF9  F009         	goto	l2579
  1520   0013BA                     u2130:
  1521   0013BA  5038               	movf	dtoa@n^0,w,c
  1522   0013BC  1039               	iorwf	(dtoa@n+1)^0,w,c
  1523   0013BE  103A               	iorwf	(dtoa@n+2)^0,w,c
  1524   0013C0  103B               	iorwf	(dtoa@n+3)^0,w,c
  1525   0013C2  103C               	iorwf	(dtoa@n+4)^0,w,c
  1526   0013C4  103D               	iorwf	(dtoa@n+5)^0,w,c
  1527   0013C6  103E               	iorwf	(dtoa@n+6)^0,w,c
  1528   0013C8  103F               	iorwf	(dtoa@n+7)^0,w,c
  1529   0013CA  A4D8               	btfss	status,2,c
  1530   0013CC  EFEA  F009         	goto	u2141
  1531   0013D0  EFEC  F009         	goto	u2140
  1532   0013D4                     u2141:
  1533   0013D4  EF54  F009         	goto	l2563
  1534   0013D8                     u2140:
  1535   0013D8  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1536   0013DA  EFF9  F009         	goto	u2150
  1537   0013DE  5035               	movf	(dtoa@p+1)^0,w,c
  1538   0013E0  E106               	bnz	u2151
  1539   0013E2  0434               	decf	dtoa@p^0,w,c
  1540   0013E4  B0D8               	btfsc	status,0,c
  1541   0013E6  EFF7  F009         	goto	u2151
  1542   0013EA  EFF9  F009         	goto	u2150
  1543   0013EE                     u2151:
  1544   0013EE  EF54  F009         	goto	l2563
  1545   0013F2                     u2150:
  1546   0013F2                     l2579:
  1547                           
  1548                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1549   0013F2  5040               	movf	dtoa@s^0,w,c
  1550   0013F4  B4D8               	btfsc	status,2,c
  1551   0013F6  EFFF  F009         	goto	u2161
  1552   0013FA  EF01  F00A         	goto	u2160
  1553   0013FE                     u2161:
  1554   0013FE  EF0C  F00A         	goto	l2585
  1555   001402                     u2160:
  1556   001402                     
  1557                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1558   001402  0641               	decf	dtoa@i^0,f,c
  1559   001404  A0D8               	btfss	status,0,c
  1560   001406  0642               	decf	(dtoa@i+1)^0,f,c
  1561   001408                     
  1562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1563   001408  0E79               	movlw	low _dbuf
  1564   00140A  2441               	addwf	dtoa@i^0,w,c
  1565   00140C  6ED9               	movwf	fsr2l,c
  1566   00140E  0E00               	movlw	high _dbuf
  1567   001410  2042               	addwfc	(dtoa@i+1)^0,w,c
  1568   001412  6EDA               	movwf	fsr2h,c
  1569   001414  C040  FFDF         	movff	dtoa@s,indf2
  1570   001418                     l2585:
  1571                           
  1572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1573   001418  C020  F015         	movff	dtoa@fp,pad@fp
  1574   00141C  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1575   001420  0E79               	movlw	low _dbuf
  1576   001422  2441               	addwf	dtoa@i^0,w,c
  1577   001424  6E17               	movwf	pad@buf^0,c
  1578   001426  0E00               	movlw	high _dbuf
  1579   001428  2042               	addwfc	(dtoa@i+1)^0,w,c
  1580   00142A  6E18               	movwf	(pad@buf+1)^0,c
  1581   00142C  C036  F019         	movff	dtoa@w,pad@p
  1582   001430  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1583   001434  EC04  F00F         	call	_pad	;wreg free
  1584   001438  0012               	return		;funcret
  1585   00143A                     __end_of_dtoa:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _pad *****************
  1589 ;; Defined at:
  1590 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1593 ;;		 -> sprintf@f(11), 
  1594 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1595 ;;		 -> dbuf(32), 
  1596 ;;  p               2   24[COMRAM] int 
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  w               2   29[COMRAM] int 
  1599 ;;  i               2   27[COMRAM] int 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1609 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1612 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1613 ;;Total ram usage:       11 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 5
  1616 ;; This function calls:
  1617 ;;		_fputc
  1618 ;;		_fputs
  1619 ;; This function is called by:
  1620 ;;		_dtoa
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text5
  1625   001E08                     __ptext5:
  1626                           	callstack 0
  1627   001E08                     _pad:
  1628                           	callstack 21
  1629   001E08                     
  1630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1631   001E08  BE1A               	btfsc	(pad@p+1)^0,7,c
  1632   001E0A  EF09  F00F         	goto	u2021
  1633   001E0E  EF0B  F00F         	goto	u2020
  1634   001E12                     u2021:
  1635   001E12  EF11  F00F         	goto	l2519
  1636   001E16                     u2020:
  1637   001E16  C019  F01E         	movff	pad@p,pad@w
  1638   001E1A  C01A  F01F         	movff	pad@p+1,pad@w+1
  1639   001E1E  EF15  F00F         	goto	l991
  1640   001E22                     l2519:
  1641   001E22  0E00               	movlw	0
  1642   001E24  6E1F               	movwf	(pad@w+1)^0,c
  1643   001E26  0E00               	movlw	0
  1644   001E28  6E1E               	movwf	pad@w^0,c
  1645   001E2A                     l991:
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1648   001E2A  0E00               	movlw	0
  1649   001E2C  6E1D               	movwf	(pad@i+1)^0,c
  1650   001E2E  0E00               	movlw	0
  1651   001E30  6E1C               	movwf	pad@i^0,c
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1654   001E32  EF27  F00F         	goto	l2525
  1655   001E36                     l2521:
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1658   001E36  0E00               	movlw	0
  1659   001E38  6E06               	movwf	(fputc@c+1)^0,c
  1660   001E3A  0E20               	movlw	32
  1661   001E3C  6E05               	movwf	fputc@c^0,c
  1662   001E3E  C015  F007         	movff	pad@fp,fputc@fp
  1663   001E42  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1664   001E46  EC3D  F00E         	call	_fputc	;wreg free
  1665   001E4A                     
  1666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1667   001E4A  4A1C               	infsnz	pad@i^0,f,c
  1668   001E4C  2A1D               	incf	(pad@i+1)^0,f,c
  1669   001E4E                     l2525:
  1670                           
  1671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1672   001E4E  501E               	movf	pad@w^0,w,c
  1673   001E50  5C1C               	subwf	pad@i^0,w,c
  1674   001E52  501D               	movf	(pad@i+1)^0,w,c
  1675   001E54  0A80               	xorlw	128
  1676   001E56  6E1B               	movwf	??_pad^0,c
  1677   001E58  501F               	movf	(pad@w+1)^0,w,c
  1678   001E5A  0A80               	xorlw	128
  1679   001E5C  581B               	subwfb	??_pad^0,w,c
  1680   001E5E  A0D8               	btfss	status,0,c
  1681   001E60  EF34  F00F         	goto	u2031
  1682   001E64  EF36  F00F         	goto	u2030
  1683   001E68                     u2031:
  1684   001E68  EF1B  F00F         	goto	l2521
  1685   001E6C                     u2030:
  1686   001E6C                     
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1688   001E6C  C017  F00E         	movff	pad@buf,fputs@s
  1689   001E70  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1690   001E74  C015  F010         	movff	pad@fp,fputs@fp
  1691   001E78  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1692   001E7C  EC83  F010         	call	_fputs	;wreg free
  1693   001E80  0012               	return		;funcret
  1694   001E82                     __end_of_pad:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _fputs *****************
  1698 ;; Defined at:
  1699 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1702 ;;		 -> dbuf(32), 
  1703 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1704 ;;		 -> sprintf@f(11), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  i               2   18[COMRAM] int 
  1707 ;;  c               1   17[COMRAM] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  2   13[COMRAM] int 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1721 ;;Total ram usage:        7 bytes
  1722 ;; Hardware stack levels used: 1
  1723 ;; Hardware stack levels required when called: 4
  1724 ;; This function calls:
  1725 ;;		_fputc
  1726 ;; This function is called by:
  1727 ;;		_pad
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text6
  1732   002106                     __ptext6:
  1733                           	callstack 0
  1734   002106                     _fputs:
  1735                           	callstack 21
  1736   002106  0E00               	movlw	0
  1737   002108  6E14               	movwf	(fputs@i+1)^0,c
  1738   00210A  0E00               	movlw	0
  1739   00210C  6E13               	movwf	fputs@i^0,c
  1740   00210E  EF94  F010         	goto	l2433
  1741   002112                     l2429:
  1742   002112  C012  F005         	movff	fputs@c,fputc@c
  1743   002116  6A06               	clrf	(fputc@c+1)^0,c
  1744   002118  C010  F007         	movff	fputs@fp,fputc@fp
  1745   00211C  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1746   002120  EC3D  F00E         	call	_fputc	;wreg free
  1747   002124  4A13               	infsnz	fputs@i^0,f,c
  1748   002126  2A14               	incf	(fputs@i+1)^0,f,c
  1749   002128                     l2433:
  1750   002128  5013               	movf	fputs@i^0,w,c
  1751   00212A  240E               	addwf	fputs@s^0,w,c
  1752   00212C  6ED9               	movwf	fsr2l,c
  1753   00212E  5014               	movf	(fputs@i+1)^0,w,c
  1754   002130  200F               	addwfc	(fputs@s+1)^0,w,c
  1755   002132  6EDA               	movwf	fsr2h,c
  1756   002134  50DF               	movf	indf2,w,c
  1757   002136  6E12               	movwf	fputs@c^0,c
  1758   002138  5012               	movf	fputs@c^0,w,c
  1759   00213A  A4D8               	btfss	status,2,c
  1760   00213C  EFA2  F010         	goto	u1881
  1761   002140  EFA4  F010         	goto	u1880
  1762   002144                     u1881:
  1763   002144  EF89  F010         	goto	l2429
  1764   002148                     u1880:
  1765   002148  0012               	return		;funcret
  1766   00214A                     __end_of_fputs:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _fputc *****************
  1770 ;; Defined at:
  1771 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;  c               2    4[COMRAM] int 
  1774 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1775 ;;		 -> sprintf@f(11), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  2    4[COMRAM] int 
  1780 ;; Registers used:
  1781 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1789 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1790 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;Total ram usage:        9 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; Hardware stack levels required when called: 3
  1794 ;; This function calls:
  1795 ;;		_putch
  1796 ;; This function is called by:
  1797 ;;		_pad
  1798 ;;		_vfpfcnvrt
  1799 ;;		_fputs
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text7
  1804   001C7A                     __ptext7:
  1805                           	callstack 0
  1806   001C7A                     _fputc:
  1807                           	callstack 24
  1808   001C7A  5007               	movf	fputc@fp^0,w,c
  1809   001C7C  1008               	iorwf	(fputc@fp+1)^0,w,c
  1810   001C7E  B4D8               	btfsc	status,2,c
  1811   001C80  EF44  F00E         	goto	u1841
  1812   001C84  EF46  F00E         	goto	u1840
  1813   001C88                     u1841:
  1814   001C88  EF4F  F00E         	goto	l2417
  1815   001C8C                     u1840:
  1816   001C8C  5007               	movf	fputc@fp^0,w,c
  1817   001C8E  1008               	iorwf	(fputc@fp+1)^0,w,c
  1818   001C90  A4D8               	btfss	status,2,c
  1819   001C92  EF4D  F00E         	goto	u1851
  1820   001C96  EF4F  F00E         	goto	u1850
  1821   001C9A                     u1851:
  1822   001C9A  EF54  F00E         	goto	l2419
  1823   001C9E                     u1850:
  1824   001C9E                     l2417:
  1825   001C9E  5005               	movf	fputc@c^0,w,c
  1826   001CA0  ECE3  F011         	call	_putch
  1827   001CA4  EFA1  F00E         	goto	l1046
  1828   001CA8                     l2419:
  1829   001CA8  EE20 F009          	lfsr	2,9
  1830   001CAC  5007               	movf	fputc@fp^0,w,c
  1831   001CAE  26D9               	addwf	fsr2l,f,c
  1832   001CB0  5008               	movf	(fputc@fp+1)^0,w,c
  1833   001CB2  22DA               	addwfc	fsr2h,f,c
  1834   001CB4  50DE               	movf	postinc2,w,c
  1835   001CB6  10DE               	iorwf	postinc2,w,c
  1836   001CB8  B4D8               	btfsc	status,2,c
  1837   001CBA  EF61  F00E         	goto	u1861
  1838   001CBE  EF63  F00E         	goto	u1860
  1839   001CC2                     u1861:
  1840   001CC2  EF7E  F00E         	goto	l2423
  1841   001CC6                     u1860:
  1842   001CC6  EE20 F009          	lfsr	2,9
  1843   001CCA  5007               	movf	fputc@fp^0,w,c
  1844   001CCC  26D9               	addwf	fsr2l,f,c
  1845   001CCE  5008               	movf	(fputc@fp+1)^0,w,c
  1846   001CD0  22DA               	addwfc	fsr2h,f,c
  1847   001CD2  EE10 F003          	lfsr	1,3
  1848   001CD6  5007               	movf	fputc@fp^0,w,c
  1849   001CD8  26E1               	addwf	fsr1l,f,c
  1850   001CDA  5008               	movf	(fputc@fp+1)^0,w,c
  1851   001CDC  22E2               	addwfc	fsr1h,f,c
  1852   001CDE  50DE               	movf	postinc2,w,c
  1853   001CE0  5CE6               	subwf	postinc1,w,c
  1854   001CE2  50E6               	movf	postinc1,w,c
  1855   001CE4  0A80               	xorlw	128
  1856   001CE6  6E0D               	movwf	(??_fputc+4)^0,c
  1857   001CE8  50DE               	movf	postinc2,w,c
  1858   001CEA  0A80               	xorlw	128
  1859   001CEC  580D               	subwfb	(??_fputc+4)^0,w,c
  1860   001CEE  B0D8               	btfsc	status,0,c
  1861   001CF0  EF7C  F00E         	goto	u1871
  1862   001CF4  EF7E  F00E         	goto	u1870
  1863   001CF8                     u1871:
  1864   001CF8  EFA1  F00E         	goto	l1046
  1865   001CFC                     u1870:
  1866   001CFC                     l2423:
  1867   001CFC  EE20 F003          	lfsr	2,3
  1868   001D00  5007               	movf	fputc@fp^0,w,c
  1869   001D02  26D9               	addwf	fsr2l,f,c
  1870   001D04  5008               	movf	(fputc@fp+1)^0,w,c
  1871   001D06  22DA               	addwfc	fsr2h,f,c
  1872   001D08  CFDE F009          	movff	postinc2,??_fputc
  1873   001D0C  CFDD F00A          	movff	postdec2,??_fputc+1
  1874   001D10  C007  FFD9         	movff	fputc@fp,fsr2l
  1875   001D14  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1876   001D18  CFDE F00B          	movff	postinc2,??_fputc+2
  1877   001D1C  CFDD F00C          	movff	postdec2,??_fputc+3
  1878   001D20  5009               	movf	??_fputc^0,w,c
  1879   001D22  240B               	addwf	(??_fputc+2)^0,w,c
  1880   001D24  6ED9               	movwf	fsr2l,c
  1881   001D26  500A               	movf	(??_fputc+1)^0,w,c
  1882   001D28  200C               	addwfc	(??_fputc+3)^0,w,c
  1883   001D2A  6EDA               	movwf	fsr2h,c
  1884   001D2C  C005  FFDF         	movff	fputc@c,indf2
  1885   001D30  EE20 F003          	lfsr	2,3
  1886   001D34  5007               	movf	fputc@fp^0,w,c
  1887   001D36  26D9               	addwf	fsr2l,f,c
  1888   001D38  5008               	movf	(fputc@fp+1)^0,w,c
  1889   001D3A  22DA               	addwfc	fsr2h,f,c
  1890   001D3C  2ADE               	incf	postinc2,f,c
  1891   001D3E  0E00               	movlw	0
  1892   001D40  22DD               	addwfc	postdec2,f,c
  1893   001D42                     l1046:
  1894   001D42  0012               	return		;funcret
  1895   001D44                     __end_of_fputc:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _putch *****************
  1899 ;; Defined at:
  1900 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  c               1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  c               1    0[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 2
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_fputc
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           	psect	text8
  1929   0023C6                     __ptext8:
  1930                           	callstack 0
  1931   0023C6                     _putch:
  1932                           	callstack 24
  1933   0023C6  0012               	return		;funcret
  1934   0023C8                     __end_of_putch:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _abs *****************
  1938 ;; Defined at:
  1939 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  a               2   22[COMRAM] int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;                  2   22[COMRAM] int 
  1946 ;; Registers used:
  1947 ;;		wreg, status,2, status,0
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1957 ;;Total ram usage:        4 bytes
  1958 ;; Hardware stack levels used: 1
  1959 ;; Hardware stack levels required when called: 2
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_dtoa
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text9
  1968   00218C                     __ptext9:
  1969                           	callstack 0
  1970   00218C                     _abs:
  1971                           	callstack 24
  1972   00218C  BE18               	btfsc	(abs@a+1)^0,7,c
  1973   00218E  EFD3  F010         	goto	u2040
  1974   002192  5018               	movf	(abs@a+1)^0,w,c
  1975   002194  E106               	bnz	u2041
  1976   002196  0417               	decf	abs@a^0,w,c
  1977   002198  B0D8               	btfsc	status,0,c
  1978   00219A  EFD1  F010         	goto	u2041
  1979   00219E  EFD3  F010         	goto	u2040
  1980   0021A2                     u2041:
  1981   0021A2  EFE1  F010         	goto	l1031
  1982   0021A6                     u2040:
  1983   0021A6  C017  F019         	movff	abs@a,??_abs
  1984   0021AA  C018  F01A         	movff	abs@a+1,??_abs+1
  1985   0021AE  1E19               	comf	??_abs^0,f,c
  1986   0021B0  1E1A               	comf	(??_abs+1)^0,f,c
  1987   0021B2  4A19               	infsnz	??_abs^0,f,c
  1988   0021B4  2A1A               	incf	(??_abs+1)^0,f,c
  1989   0021B6  C019  F017         	movff	??_abs,?_abs
  1990   0021BA  C01A  F018         	movff	??_abs+1,?_abs+1
  1991   0021BE  EFE5  F010         	goto	l1034
  1992   0021C2                     l1031:
  1993   0021C2  C017  F017         	movff	abs@a,?_abs
  1994   0021C6  C018  F018         	movff	abs@a+1,?_abs+1
  1995   0021CA                     l1034:
  1996   0021CA  0012               	return		;funcret
  1997   0021CC                     __end_of_abs:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function ___aomod *****************
  2001 ;; Defined at:
  2002 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  dividend        8    4[COMRAM] long long 
  2005 ;;  divisor         8   12[COMRAM] long long 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  sign            1   21[COMRAM] unsigned char 
  2008 ;;  counter         1   20[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  8    4[COMRAM] long long 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2018 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2019 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;Total ram usage:       18 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 2
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_dtoa
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text10
  2033   0018EC                     __ptext10:
  2034                           	callstack 0
  2035   0018EC                     ___aomod:
  2036                           	callstack 24
  2037   0018EC  0E00               	movlw	0
  2038   0018EE  6E16               	movwf	___aomod@sign^0,c
  2039   0018F0  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  2040   0018F2  EF7F  F00C         	goto	u1960
  2041   0018F6  EF7D  F00C         	goto	u1961
  2042   0018FA                     u1961:
  2043   0018FA  EF91  F00C         	goto	l2487
  2044   0018FE                     u1960:
  2045   0018FE  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2046   001900  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2047   001902  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2048   001904  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2049   001906  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2050   001908  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2051   00190A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2052   00190C  6C05               	negf	___aomod@dividend^0,c
  2053   00190E  0E00               	movlw	0
  2054   001910  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2055   001912  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2056   001914  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2057   001916  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2058   001918  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2059   00191A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2060   00191C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2061   00191E  0E01               	movlw	1
  2062   001920  6E16               	movwf	___aomod@sign^0,c
  2063   001922                     l2487:
  2064   001922  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  2065   001924  EF98  F00C         	goto	u1970
  2066   001928  EF96  F00C         	goto	u1971
  2067   00192C                     u1971:
  2068   00192C  EFA8  F00C         	goto	l2491
  2069   001930                     u1970:
  2070   001930  1E14               	comf	(___aomod@divisor+7)^0,f,c
  2071   001932  1E13               	comf	(___aomod@divisor+6)^0,f,c
  2072   001934  1E12               	comf	(___aomod@divisor+5)^0,f,c
  2073   001936  1E11               	comf	(___aomod@divisor+4)^0,f,c
  2074   001938  1E10               	comf	(___aomod@divisor+3)^0,f,c
  2075   00193A  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  2076   00193C  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  2077   00193E  6C0D               	negf	___aomod@divisor^0,c
  2078   001940  0E00               	movlw	0
  2079   001942  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  2080   001944  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  2081   001946  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  2082   001948  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  2083   00194A  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  2084   00194C  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  2085   00194E  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  2086   001950                     l2491:
  2087   001950  500D               	movf	___aomod@divisor^0,w,c
  2088   001952  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  2089   001954  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  2090   001956  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  2091   001958  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  2092   00195A  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  2093   00195C  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  2094   00195E  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  2095   001960  B4D8               	btfsc	status,2,c
  2096   001962  EFB5  F00C         	goto	u1981
  2097   001966  EFB7  F00C         	goto	u1980
  2098   00196A                     u1981:
  2099   00196A  EFFF  F00C         	goto	l2507
  2100   00196E                     u1980:
  2101   00196E  0E01               	movlw	1
  2102   001970  6E15               	movwf	___aomod@counter^0,c
  2103   001972  EFC5  F00C         	goto	l2497
  2104   001976                     l2495:
  2105   001976  90D8               	bcf	status,0,c
  2106   001978  360D               	rlcf	___aomod@divisor^0,f,c
  2107   00197A  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  2108   00197C  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  2109   00197E  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  2110   001980  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  2111   001982  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  2112   001984  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  2113   001986  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  2114   001988  2A15               	incf	___aomod@counter^0,f,c
  2115   00198A                     l2497:
  2116   00198A  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  2117   00198C  EFCA  F00C         	goto	u1991
  2118   001990  EFCC  F00C         	goto	u1990
  2119   001994                     u1991:
  2120   001994  EFBB  F00C         	goto	l2495
  2121   001998                     u1990:
  2122   001998                     l2499:
  2123   001998  500D               	movf	___aomod@divisor^0,w,c
  2124   00199A  5C05               	subwf	___aomod@dividend^0,w,c
  2125   00199C  500E               	movf	(___aomod@divisor+1)^0,w,c
  2126   00199E  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  2127   0019A0  500F               	movf	(___aomod@divisor+2)^0,w,c
  2128   0019A2  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  2129   0019A4  5010               	movf	(___aomod@divisor+3)^0,w,c
  2130   0019A6  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  2131   0019A8  5011               	movf	(___aomod@divisor+4)^0,w,c
  2132   0019AA  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  2133   0019AC  5012               	movf	(___aomod@divisor+5)^0,w,c
  2134   0019AE  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  2135   0019B0  5013               	movf	(___aomod@divisor+6)^0,w,c
  2136   0019B2  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  2137   0019B4  5014               	movf	(___aomod@divisor+7)^0,w,c
  2138   0019B6  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  2139   0019B8  A0D8               	btfss	status,0,c
  2140   0019BA  EFE1  F00C         	goto	u2001
  2141   0019BE  EFE3  F00C         	goto	u2000
  2142   0019C2                     u2001:
  2143   0019C2  EFF3  F00C         	goto	l2503
  2144   0019C6                     u2000:
  2145   0019C6  500D               	movf	___aomod@divisor^0,w,c
  2146   0019C8  5E05               	subwf	___aomod@dividend^0,f,c
  2147   0019CA  500E               	movf	(___aomod@divisor+1)^0,w,c
  2148   0019CC  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  2149   0019CE  500F               	movf	(___aomod@divisor+2)^0,w,c
  2150   0019D0  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  2151   0019D2  5010               	movf	(___aomod@divisor+3)^0,w,c
  2152   0019D4  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  2153   0019D6  5011               	movf	(___aomod@divisor+4)^0,w,c
  2154   0019D8  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  2155   0019DA  5012               	movf	(___aomod@divisor+5)^0,w,c
  2156   0019DC  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  2157   0019DE  5013               	movf	(___aomod@divisor+6)^0,w,c
  2158   0019E0  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  2159   0019E2  5014               	movf	(___aomod@divisor+7)^0,w,c
  2160   0019E4  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2161   0019E6                     l2503:
  2162   0019E6  90D8               	bcf	status,0,c
  2163   0019E8  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2164   0019EA  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2165   0019EC  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2166   0019EE  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2167   0019F0  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2168   0019F2  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2169   0019F4  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2170   0019F6  320D               	rrcf	___aomod@divisor^0,f,c
  2171   0019F8  2E15               	decfsz	___aomod@counter^0,f,c
  2172   0019FA  EFCC  F00C         	goto	l2499
  2173   0019FE                     l2507:
  2174   0019FE  5016               	movf	___aomod@sign^0,w,c
  2175   001A00  B4D8               	btfsc	status,2,c
  2176   001A02  EF05  F00D         	goto	u2011
  2177   001A06  EF07  F00D         	goto	u2010
  2178   001A0A                     u2011:
  2179   001A0A  EF17  F00D         	goto	l2511
  2180   001A0E                     u2010:
  2181   001A0E  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2182   001A10  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2183   001A12  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2184   001A14  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2185   001A16  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2186   001A18  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2187   001A1A  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2188   001A1C  6C05               	negf	___aomod@dividend^0,c
  2189   001A1E  0E00               	movlw	0
  2190   001A20  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2191   001A22  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2192   001A24  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2193   001A26  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2194   001A28  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2195   001A2A  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2196   001A2C  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2197   001A2E                     l2511:
  2198   001A2E  C005  F005         	movff	___aomod@dividend,?___aomod
  2199   001A32  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2200   001A36  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2201   001A3A  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2202   001A3E  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2203   001A42  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2204   001A46  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2205   001A4A  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2206   001A4E  0012               	return		;funcret
  2207   001A50                     __end_of___aomod:
  2208                           	callstack 0
  2209                           
  2210 ;; *************** function ___aodiv *****************
  2211 ;; Defined at:
  2212 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  dividend        8    4[COMRAM] long long 
  2215 ;;  divisor         8   12[COMRAM] long long 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  quotient        8   22[COMRAM] long long 
  2218 ;;  sign            1   21[COMRAM] unsigned char 
  2219 ;;  counter         1   20[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  8    4[COMRAM] long long 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2229 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2232 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2233 ;;Total ram usage:       26 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 2
  2236 ;; This function calls:
  2237 ;;		Nothing
  2238 ;; This function is called by:
  2239 ;;		_dtoa
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text11
  2244   0015EE                     __ptext11:
  2245                           	callstack 0
  2246   0015EE                     ___aodiv:
  2247                           	callstack 24
  2248   0015EE  0E00               	movlw	0
  2249   0015F0  6E16               	movwf	___aodiv@sign^0,c
  2250   0015F2  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2251   0015F4  EF00  F00B         	goto	u1890
  2252   0015F8  EFFE  F00A         	goto	u1891
  2253   0015FC                     u1891:
  2254   0015FC  EF12  F00B         	goto	l2443
  2255   001600                     u1890:
  2256   001600  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2257   001602  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2258   001604  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2259   001606  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2260   001608  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2261   00160A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2262   00160C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2263   00160E  6C0D               	negf	___aodiv@divisor^0,c
  2264   001610  0E00               	movlw	0
  2265   001612  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2266   001614  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2267   001616  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2268   001618  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2269   00161A  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2270   00161C  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2271   00161E  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2272   001620  0E01               	movlw	1
  2273   001622  6E16               	movwf	___aodiv@sign^0,c
  2274   001624                     l2443:
  2275   001624  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2276   001626  EF19  F00B         	goto	u1900
  2277   00162A  EF17  F00B         	goto	u1901
  2278   00162E                     u1901:
  2279   00162E  EF2B  F00B         	goto	l2449
  2280   001632                     u1900:
  2281   001632  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2282   001634  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2283   001636  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2284   001638  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2285   00163A  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2286   00163C  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2287   00163E  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2288   001640  6C05               	negf	___aodiv@dividend^0,c
  2289   001642  0E00               	movlw	0
  2290   001644  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2291   001646  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2292   001648  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2293   00164A  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2294   00164C  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2295   00164E  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2296   001650  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2297   001652  0E01               	movlw	1
  2298   001654  1A16               	xorwf	___aodiv@sign^0,f,c
  2299   001656                     l2449:
  2300   001656  EE20  F017         	lfsr	2,___aodiv@quotient
  2301   00165A  0E07               	movlw	7
  2302   00165C                     u1911:
  2303   00165C  6ADE               	clrf	postinc2,c
  2304   00165E  06E8               	decf	wreg,f,c
  2305   001660  E2FD               	bc	u1911
  2306   001662  500D               	movf	___aodiv@divisor^0,w,c
  2307   001664  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2308   001666  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2309   001668  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2310   00166A  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2311   00166C  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2312   00166E  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2313   001670  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2314   001672  B4D8               	btfsc	status,2,c
  2315   001674  EF3E  F00B         	goto	u1921
  2316   001678  EF40  F00B         	goto	u1920
  2317   00167C                     u1921:
  2318   00167C  EF92  F00B         	goto	l2471
  2319   001680                     u1920:
  2320   001680  0E01               	movlw	1
  2321   001682  6E15               	movwf	___aodiv@counter^0,c
  2322   001684  EF4E  F00B         	goto	l2457
  2323   001688                     l2455:
  2324   001688  90D8               	bcf	status,0,c
  2325   00168A  360D               	rlcf	___aodiv@divisor^0,f,c
  2326   00168C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2327   00168E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2328   001690  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2329   001692  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2330   001694  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2331   001696  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2332   001698  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2333   00169A  2A15               	incf	___aodiv@counter^0,f,c
  2334   00169C                     l2457:
  2335   00169C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2336   00169E  EF53  F00B         	goto	u1931
  2337   0016A2  EF55  F00B         	goto	u1930
  2338   0016A6                     u1931:
  2339   0016A6  EF44  F00B         	goto	l2455
  2340   0016AA                     u1930:
  2341   0016AA                     l2459:
  2342   0016AA  90D8               	bcf	status,0,c
  2343   0016AC  3617               	rlcf	___aodiv@quotient^0,f,c
  2344   0016AE  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2345   0016B0  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2346   0016B2  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2347   0016B4  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2348   0016B6  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2349   0016B8  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2350   0016BA  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2351   0016BC  500D               	movf	___aodiv@divisor^0,w,c
  2352   0016BE  5C05               	subwf	___aodiv@dividend^0,w,c
  2353   0016C0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2354   0016C2  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2355   0016C4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2356   0016C6  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2357   0016C8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2358   0016CA  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2359   0016CC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2360   0016CE  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2361   0016D0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2362   0016D2  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2363   0016D4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2364   0016D6  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2365   0016D8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2366   0016DA  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2367   0016DC  A0D8               	btfss	status,0,c
  2368   0016DE  EF73  F00B         	goto	u1941
  2369   0016E2  EF75  F00B         	goto	u1940
  2370   0016E6                     u1941:
  2371   0016E6  EF86  F00B         	goto	l2467
  2372   0016EA                     u1940:
  2373   0016EA  500D               	movf	___aodiv@divisor^0,w,c
  2374   0016EC  5E05               	subwf	___aodiv@dividend^0,f,c
  2375   0016EE  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2376   0016F0  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2377   0016F2  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2378   0016F4  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2379   0016F6  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2380   0016F8  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2381   0016FA  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2382   0016FC  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2383   0016FE  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2384   001700  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2385   001702  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2386   001704  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2387   001706  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2388   001708  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2389   00170A  8017               	bsf	___aodiv@quotient^0,0,c
  2390   00170C                     l2467:
  2391   00170C  90D8               	bcf	status,0,c
  2392   00170E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2393   001710  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2394   001712  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2395   001714  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2396   001716  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2397   001718  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2398   00171A  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2399   00171C  320D               	rrcf	___aodiv@divisor^0,f,c
  2400   00171E  2E15               	decfsz	___aodiv@counter^0,f,c
  2401   001720  EF55  F00B         	goto	l2459
  2402   001724                     l2471:
  2403   001724  5016               	movf	___aodiv@sign^0,w,c
  2404   001726  B4D8               	btfsc	status,2,c
  2405   001728  EF98  F00B         	goto	u1951
  2406   00172C  EF9A  F00B         	goto	u1950
  2407   001730                     u1951:
  2408   001730  EFAA  F00B         	goto	l2475
  2409   001734                     u1950:
  2410   001734  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2411   001736  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2412   001738  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2413   00173A  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2414   00173C  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2415   00173E  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2416   001740  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2417   001742  6C17               	negf	___aodiv@quotient^0,c
  2418   001744  0E00               	movlw	0
  2419   001746  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2420   001748  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2421   00174A  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2422   00174C  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2423   00174E  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2424   001750  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2425   001752  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2426   001754                     l2475:
  2427   001754  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2428   001758  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2429   00175C  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2430   001760  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2431   001764  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2432   001768  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2433   00176C  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2434   001770  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2435   001774  0012               	return		;funcret
  2436   001776                     __end_of___aodiv:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _sendTxBuf *****************
  2440 ;; Defined at:
  2441 ;;		line 93 in file "serial.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 3
  2462 ;; This function calls:
  2463 ;;		_isDataInTxBuf
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text12
  2470   002268                     __ptext12:
  2471                           	callstack 0
  2472   002268                     _sendTxBuf:
  2473                           	callstack 27
  2474   002268                     
  2475                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  2476   002268  ECBB  F011         	call	_isDataInTxBuf	;wreg free
  2477   00226C  0900               	iorlw	0
  2478   00226E  B4D8               	btfsc	status,2,c
  2479   002270  EF3C  F011         	goto	u2601
  2480   002274  EF3E  F011         	goto	u2600
  2481   002278                     u2601:
  2482   002278  EF45  F011         	goto	l2957
  2483   00227C                     u2600:
  2484   00227C  010E               	movlb	14	; () banked
  2485   00227E  852D               	bsf	45,2,b	;volatile
  2486   002280                     
  2487                           ; BSR set to: 14
  2488                           ;serial.c: 95:     DataFlag =1;}
  2489   002280  0E01               	movlw	1
  2490   002282  0100               	movlb	0	; () banked
  2491   002284  6FCE               	movwf	_DataFlag& (0+255),b	;volatile
  2492   002286  EF48  F011         	goto	l194
  2493   00228A                     l2957:
  2494                           
  2495                           ;serial.c: 97:         DataFlag=0;}
  2496   00228A  0E00               	movlw	0
  2497   00228C  0100               	movlb	0	; () banked
  2498   00228E  6FCE               	movwf	_DataFlag& (0+255),b	;volatile
  2499   002290                     l194:
  2500                           
  2501                           ; BSR set to: 0
  2502   002290  0012               	return		;funcret
  2503   002292                     __end_of_sendTxBuf:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _isDataInTxBuf *****************
  2507 ;; Defined at:
  2508 ;;		line 80 in file "serial.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 2
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_sendTxBuf
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text13
  2537   002376                     __ptext13:
  2538                           	callstack 0
  2539   002376                     _isDataInTxBuf:
  2540                           	callstack 27
  2541   002376                     
  2542                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  2543   002376  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2544   002378  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2545   00237A  A4D8               	btfss	status,2,c
  2546   00237C  EFC2  F011         	goto	u2231
  2547   002380  EFC5  F011         	goto	u2230
  2548   002384                     u2231:
  2549   002384  0E01               	movlw	1
  2550   002386  EFC6  F011         	goto	u2240
  2551   00238A                     u2230:
  2552   00238A  0E00               	movlw	0
  2553   00238C                     u2240:
  2554   00238C  0012               	return		;funcret
  2555   00238E                     __end_of_isDataInTxBuf:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _readColours *****************
  2559 ;; Defined at:
  2560 ;;		line 93 in file "color.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  vals            2   15[COMRAM] PTR struct RGB
  2563 ;;		 -> vals(8), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2575 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 5
  2582 ;; This function calls:
  2583 ;;		_color_read_Blue
  2584 ;;		_color_read_Green
  2585 ;;		_color_read_Red
  2586 ;;		_color_read_lum
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text14
  2593   001E82                     __ptext14:
  2594                           	callstack 0
  2595   001E82                     _readColours:
  2596                           	callstack 25
  2597   001E82                     
  2598                           ;color.c: 94:     vals ->R = color_read_Red();
  2599   001E82  ECE9  F00F         	call	_color_read_Red	;wreg free
  2600   001E86  C010  FFD9         	movff	readColours@vals,fsr2l
  2601   001E8A  C011  FFDA         	movff	readColours@vals+1,fsr2h
  2602   001E8E  C009  FFDE         	movff	?_color_read_Red,postinc2
  2603   001E92  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2604                           
  2605                           ;color.c: 95:     vals ->B = color_read_Blue();
  2606   001E96  EC39  F010         	call	_color_read_Blue	;wreg free
  2607   001E9A  EE20 F004          	lfsr	2,4
  2608   001E9E  5010               	movf	readColours@vals^0,w,c
  2609   001EA0  26D9               	addwf	fsr2l,f,c
  2610   001EA2  5011               	movf	(readColours@vals+1)^0,w,c
  2611   001EA4  22DA               	addwfc	fsr2h,f,c
  2612   001EA6  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2613   001EAA  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2614                           
  2615                           ;color.c: 96:     vals ->G = color_read_Green();
  2616   001EAE  EC11  F010         	call	_color_read_Green	;wreg free
  2617   001EB2  EE20 F002          	lfsr	2,2
  2618   001EB6  5010               	movf	readColours@vals^0,w,c
  2619   001EB8  26D9               	addwf	fsr2l,f,c
  2620   001EBA  5011               	movf	(readColours@vals+1)^0,w,c
  2621   001EBC  22DA               	addwfc	fsr2h,f,c
  2622   001EBE  C009  FFDE         	movff	?_color_read_Green,postinc2
  2623   001EC2  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2624                           
  2625                           ;color.c: 97:     vals ->L = color_read_lum();
  2626   001EC6  ECC1  F00F         	call	_color_read_lum	;wreg free
  2627   001ECA  EE20 F006          	lfsr	2,6
  2628   001ECE  5010               	movf	readColours@vals^0,w,c
  2629   001ED0  26D9               	addwf	fsr2l,f,c
  2630   001ED2  5011               	movf	(readColours@vals+1)^0,w,c
  2631   001ED4  22DA               	addwfc	fsr2h,f,c
  2632   001ED6  C009  FFDE         	movff	?_color_read_lum,postinc2
  2633   001EDA  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  2634   001EDE  0012               	return		;funcret
  2635   001EE0                     __end_of_readColours:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _color_read_lum *****************
  2639 ;; Defined at:
  2640 ;;		line 37 in file "color.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  tmp             2   13[COMRAM] unsigned int 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  2    8[COMRAM] unsigned int 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2655 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2657 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;Total ram usage:        7 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 4
  2661 ;; This function calls:
  2662 ;;		_I2C_2_Master_Read
  2663 ;;		_I2C_2_Master_RepStart
  2664 ;;		_I2C_2_Master_Start
  2665 ;;		_I2C_2_Master_Stop
  2666 ;;		_I2C_2_Master_Write
  2667 ;; This function is called by:
  2668 ;;		_readColours
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text15
  2673   001F82                     __ptext15:
  2674                           	callstack 0
  2675   001F82                     _color_read_lum:
  2676                           	callstack 25
  2677   001F82                     
  2678                           ;color.c: 39:  unsigned int tmp;;color.c: 40:  I2C_2_Master_Start();
  2679   001F82  ECDE  F011         	call	_I2C_2_Master_Start	;wreg free
  2680                           
  2681                           ;color.c: 41:  I2C_2_Master_Write(0x52 | 0x00);
  2682   001F86  0E52               	movlw	82
  2683   001F88  ECCE  F011         	call	_I2C_2_Master_Write
  2684                           
  2685                           ;color.c: 42:  I2C_2_Master_Write(0xA0 | 0x14);
  2686   001F8C  0EB4               	movlw	180
  2687   001F8E  ECCE  F011         	call	_I2C_2_Master_Write
  2688                           
  2689                           ;color.c: 43:  I2C_2_Master_RepStart();
  2690   001F92  ECD4  F011         	call	_I2C_2_Master_RepStart	;wreg free
  2691                           
  2692                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x01);
  2693   001F96  0E53               	movlw	83
  2694   001F98  ECCE  F011         	call	_I2C_2_Master_Write
  2695                           
  2696                           ;color.c: 45:  tmp=I2C_2_Master_Read(1);
  2697   001F9C  0E01               	movlw	1
  2698   001F9E  ECA5  F010         	call	_I2C_2_Master_Read
  2699   001FA2  6E0B               	movwf	??_color_read_lum^0,c
  2700   001FA4  500B               	movf	??_color_read_lum^0,w,c
  2701   001FA6  6E0E               	movwf	color_read_lum@tmp^0,c
  2702   001FA8  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  2703                           
  2704                           ;color.c: 46:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2705   001FAA  0E00               	movlw	0
  2706   001FAC  ECA5  F010         	call	_I2C_2_Master_Read
  2707   001FB0  6E0B               	movwf	??_color_read_lum^0,c
  2708   001FB2  500B               	movf	??_color_read_lum^0,w,c
  2709   001FB4  6E0D               	movwf	(??_color_read_lum+2)^0,c
  2710   001FB6  6A0C               	clrf	(??_color_read_lum+1)^0,c
  2711   001FB8  500E               	movf	color_read_lum@tmp^0,w,c
  2712   001FBA  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  2713   001FBC  6E0E               	movwf	color_read_lum@tmp^0,c
  2714   001FBE  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  2715   001FC0  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  2716   001FC2  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  2717                           
  2718                           ;color.c: 47:  I2C_2_Master_Stop();
  2719   001FC4  ECD9  F011         	call	_I2C_2_Master_Stop	;wreg free
  2720   001FC8                     
  2721                           ;color.c: 48:  return tmp;
  2722   001FC8  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  2723   001FCC  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  2724   001FD0  0012               	return		;funcret
  2725   001FD2                     __end_of_color_read_lum:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _color_read_Red *****************
  2729 ;; Defined at:
  2730 ;;		line 51 in file "color.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;		None
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  tmp             2   13[COMRAM] unsigned int 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  2    8[COMRAM] unsigned int 
  2737 ;; Registers used:
  2738 ;;		wreg, status,2, status,0, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2744 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2745 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2746 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2747 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2748 ;;Total ram usage:        7 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 4
  2751 ;; This function calls:
  2752 ;;		_I2C_2_Master_Read
  2753 ;;		_I2C_2_Master_RepStart
  2754 ;;		_I2C_2_Master_Start
  2755 ;;		_I2C_2_Master_Stop
  2756 ;;		_I2C_2_Master_Write
  2757 ;; This function is called by:
  2758 ;;		_readColours
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text16
  2763   001FD2                     __ptext16:
  2764                           	callstack 0
  2765   001FD2                     _color_read_Red:
  2766                           	callstack 25
  2767   001FD2                     
  2768                           ;color.c: 53:  unsigned int tmp;;color.c: 54:  I2C_2_Master_Start();
  2769   001FD2  ECDE  F011         	call	_I2C_2_Master_Start	;wreg free
  2770                           
  2771                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x00);
  2772   001FD6  0E52               	movlw	82
  2773   001FD8  ECCE  F011         	call	_I2C_2_Master_Write
  2774                           
  2775                           ;color.c: 56:  I2C_2_Master_Write(0xA0 | 0x16);
  2776   001FDC  0EB6               	movlw	182
  2777   001FDE  ECCE  F011         	call	_I2C_2_Master_Write
  2778                           
  2779                           ;color.c: 57:  I2C_2_Master_RepStart();
  2780   001FE2  ECD4  F011         	call	_I2C_2_Master_RepStart	;wreg free
  2781                           
  2782                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x01);
  2783   001FE6  0E53               	movlw	83
  2784   001FE8  ECCE  F011         	call	_I2C_2_Master_Write
  2785                           
  2786                           ;color.c: 59:  tmp=I2C_2_Master_Read(1);
  2787   001FEC  0E01               	movlw	1
  2788   001FEE  ECA5  F010         	call	_I2C_2_Master_Read
  2789   001FF2  6E0B               	movwf	??_color_read_Red^0,c
  2790   001FF4  500B               	movf	??_color_read_Red^0,w,c
  2791   001FF6  6E0E               	movwf	color_read_Red@tmp^0,c
  2792   001FF8  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2793                           
  2794                           ;color.c: 60:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2795   001FFA  0E00               	movlw	0
  2796   001FFC  ECA5  F010         	call	_I2C_2_Master_Read
  2797   002000  6E0B               	movwf	??_color_read_Red^0,c
  2798   002002  500B               	movf	??_color_read_Red^0,w,c
  2799   002004  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2800   002006  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2801   002008  500E               	movf	color_read_Red@tmp^0,w,c
  2802   00200A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2803   00200C  6E0E               	movwf	color_read_Red@tmp^0,c
  2804   00200E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2805   002010  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2806   002012  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2807                           
  2808                           ;color.c: 61:  I2C_2_Master_Stop();
  2809   002014  ECD9  F011         	call	_I2C_2_Master_Stop	;wreg free
  2810   002018                     
  2811                           ;color.c: 62:  return tmp;
  2812   002018  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2813   00201C  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2814   002020  0012               	return		;funcret
  2815   002022                     __end_of_color_read_Red:
  2816                           	callstack 0
  2817                           
  2818 ;; *************** function _color_read_Green *****************
  2819 ;; Defined at:
  2820 ;;		line 64 in file "color.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;		None
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  tmp             2   13[COMRAM] unsigned int 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2    8[COMRAM] unsigned int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0, cstack
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2835 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;Total ram usage:        7 bytes
  2839 ;; Hardware stack levels used: 1
  2840 ;; Hardware stack levels required when called: 4
  2841 ;; This function calls:
  2842 ;;		_I2C_2_Master_Read
  2843 ;;		_I2C_2_Master_RepStart
  2844 ;;		_I2C_2_Master_Start
  2845 ;;		_I2C_2_Master_Stop
  2846 ;;		_I2C_2_Master_Write
  2847 ;; This function is called by:
  2848 ;;		_readColours
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852                           	psect	text17
  2853   002022                     __ptext17:
  2854                           	callstack 0
  2855   002022                     _color_read_Green:
  2856                           	callstack 25
  2857   002022                     
  2858                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  2859   002022  ECDE  F011         	call	_I2C_2_Master_Start	;wreg free
  2860                           
  2861                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  2862   002026  0E52               	movlw	82
  2863   002028  ECCE  F011         	call	_I2C_2_Master_Write
  2864                           
  2865                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  2866   00202C  0EB6               	movlw	182
  2867   00202E  ECCE  F011         	call	_I2C_2_Master_Write
  2868                           
  2869                           ;color.c: 70:  I2C_2_Master_RepStart();
  2870   002032  ECD4  F011         	call	_I2C_2_Master_RepStart	;wreg free
  2871                           
  2872                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  2873   002036  0E53               	movlw	83
  2874   002038  ECCE  F011         	call	_I2C_2_Master_Write
  2875                           
  2876                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  2877   00203C  0E01               	movlw	1
  2878   00203E  ECA5  F010         	call	_I2C_2_Master_Read
  2879   002042  6E0B               	movwf	??_color_read_Green^0,c
  2880   002044  500B               	movf	??_color_read_Green^0,w,c
  2881   002046  6E0E               	movwf	color_read_Green@tmp^0,c
  2882   002048  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2883                           
  2884                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2885   00204A  0E00               	movlw	0
  2886   00204C  ECA5  F010         	call	_I2C_2_Master_Read
  2887   002050  6E0B               	movwf	??_color_read_Green^0,c
  2888   002052  500B               	movf	??_color_read_Green^0,w,c
  2889   002054  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2890   002056  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2891   002058  500E               	movf	color_read_Green@tmp^0,w,c
  2892   00205A  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2893   00205C  6E0E               	movwf	color_read_Green@tmp^0,c
  2894   00205E  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2895   002060  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2896   002062  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2897                           
  2898                           ;color.c: 74:  I2C_2_Master_Stop();
  2899   002064  ECD9  F011         	call	_I2C_2_Master_Stop	;wreg free
  2900   002068                     
  2901                           ;color.c: 75:  return tmp;
  2902   002068  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2903   00206C  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2904   002070  0012               	return		;funcret
  2905   002072                     __end_of_color_read_Green:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _color_read_Blue *****************
  2909 ;; Defined at:
  2910 ;;		line 78 in file "color.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  tmp             2   13[COMRAM] unsigned int 
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2    8[COMRAM] unsigned int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2, status,0, cstack
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2928 ;;Total ram usage:        7 bytes
  2929 ;; Hardware stack levels used: 1
  2930 ;; Hardware stack levels required when called: 4
  2931 ;; This function calls:
  2932 ;;		_I2C_2_Master_Read
  2933 ;;		_I2C_2_Master_RepStart
  2934 ;;		_I2C_2_Master_Start
  2935 ;;		_I2C_2_Master_Stop
  2936 ;;		_I2C_2_Master_Write
  2937 ;; This function is called by:
  2938 ;;		_readColours
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text18
  2943   002072                     __ptext18:
  2944                           	callstack 0
  2945   002072                     _color_read_Blue:
  2946                           	callstack 25
  2947   002072                     
  2948                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  2949   002072  ECDE  F011         	call	_I2C_2_Master_Start	;wreg free
  2950                           
  2951                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  2952   002076  0E52               	movlw	82
  2953   002078  ECCE  F011         	call	_I2C_2_Master_Write
  2954                           
  2955                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  2956   00207C  0EBA               	movlw	186
  2957   00207E  ECCE  F011         	call	_I2C_2_Master_Write
  2958                           
  2959                           ;color.c: 84:  I2C_2_Master_RepStart();
  2960   002082  ECD4  F011         	call	_I2C_2_Master_RepStart	;wreg free
  2961                           
  2962                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  2963   002086  0E53               	movlw	83
  2964   002088  ECCE  F011         	call	_I2C_2_Master_Write
  2965                           
  2966                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  2967   00208C  0E01               	movlw	1
  2968   00208E  ECA5  F010         	call	_I2C_2_Master_Read
  2969   002092  6E0B               	movwf	??_color_read_Blue^0,c
  2970   002094  500B               	movf	??_color_read_Blue^0,w,c
  2971   002096  6E0E               	movwf	color_read_Blue@tmp^0,c
  2972   002098  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2973                           
  2974                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2975   00209A  0E00               	movlw	0
  2976   00209C  ECA5  F010         	call	_I2C_2_Master_Read
  2977   0020A0  6E0B               	movwf	??_color_read_Blue^0,c
  2978   0020A2  500B               	movf	??_color_read_Blue^0,w,c
  2979   0020A4  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2980   0020A6  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2981   0020A8  500E               	movf	color_read_Blue@tmp^0,w,c
  2982   0020AA  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2983   0020AC  6E0E               	movwf	color_read_Blue@tmp^0,c
  2984   0020AE  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2985   0020B0  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2986   0020B2  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2987                           
  2988                           ;color.c: 88:  I2C_2_Master_Stop();
  2989   0020B4  ECD9  F011         	call	_I2C_2_Master_Stop	;wreg free
  2990   0020B8                     
  2991                           ;color.c: 89:  return tmp;
  2992   0020B8  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2993   0020BC  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2994   0020C0  0012               	return		;funcret
  2995   0020C2                     __end_of_color_read_Blue:
  2996                           	callstack 0
  2997                           
  2998 ;; *************** function _I2C_2_Master_RepStart *****************
  2999 ;; Defined at:
  3000 ;;		line 33 in file "i2c.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;		None
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0, cstack
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3018 ;;Total ram usage:        0 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		_I2C_2_Master_Idle
  3023 ;; This function is called by:
  3024 ;;		_color_read_lum
  3025 ;;		_color_read_Red
  3026 ;;		_color_read_Green
  3027 ;;		_color_read_Blue
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text19
  3032   0023A8                     __ptext19:
  3033                           	callstack 0
  3034   0023A8                     _I2C_2_Master_RepStart:
  3035                           	callstack 25
  3036   0023A8                     
  3037                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3038   0023A8  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  3039   0023AC                     
  3040                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3041   0023AC  010E               	movlb	14	; () banked
  3042   0023AE  83DA               	bsf	218,1,b	;volatile
  3043   0023B0                     
  3044                           ; BSR set to: 14
  3045   0023B0  0012               	return		;funcret
  3046   0023B2                     __end_of_I2C_2_Master_RepStart:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function _I2C_2_Master_Read *****************
  3050 ;; Defined at:
  3051 ;;		line 51 in file "i2c.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  ack             1    wreg     unsigned char 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  ack             1    6[COMRAM] unsigned char 
  3056 ;;  tmp             1    7[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      unsigned char 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3069 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3070 ;;Total ram usage:        3 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 3
  3073 ;; This function calls:
  3074 ;;		_I2C_2_Master_Idle
  3075 ;; This function is called by:
  3076 ;;		_color_read_lum
  3077 ;;		_color_read_Red
  3078 ;;		_color_read_Green
  3079 ;;		_color_read_Blue
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text20
  3084   00214A                     __ptext20:
  3085                           	callstack 0
  3086   00214A                     _I2C_2_Master_Read:
  3087                           	callstack 25
  3088                           
  3089                           ; BSR set to: 14
  3090                           ;incstack = 0
  3091                           ;I2C_2_Master_Read@ack stored from wreg
  3092   00214A  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  3093   00214C                     
  3094                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3095   00214C  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  3096   002150                     
  3097                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3098   002150  010E               	movlb	14	; () banked
  3099   002152  87DA               	bsf	218,3,b	;volatile
  3100                           
  3101                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3102   002154  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  3103   002158                     
  3104                           ;i2c.c: 57:   tmp = SSP2BUF;
  3105   002158  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3106                           
  3107                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3108   00215C  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  3109   002160                     
  3110                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3111   002160  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  3112   002162  B4D8               	btfsc	status,2,c
  3113   002164  EFB6  F010         	goto	u2171
  3114   002168  EFBA  F010         	goto	u2170
  3115   00216C                     u2171:
  3116   00216C  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3117   00216E  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  3118   002170  EFBB  F010         	goto	u2188
  3119   002174                     u2170:
  3120   002174  6A06               	clrf	??_I2C_2_Master_Read^0,c
  3121   002176                     u2188:
  3122   002176  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  3123   002178  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  3124   00217A  010E               	movlb	14	; () banked
  3125   00217C  51DA               	movf	218,w,b	;volatile
  3126   00217E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3127   002180  0BDF               	andlw	-33
  3128   002182  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  3129   002184  6FDA               	movwf	218,b	;volatile
  3130   002186                     
  3131                           ; BSR set to: 14
  3132                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3133   002186  89DA               	bsf	218,4,b	;volatile
  3134   002188                     
  3135                           ; BSR set to: 14
  3136                           ;i2c.c: 61:   return tmp;
  3137   002188  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  3138   00218A                     
  3139                           ; BSR set to: 14
  3140   00218A  0012               	return		;funcret
  3141   00218C                     __end_of_I2C_2_Master_Read:
  3142                           	callstack 0
  3143                           
  3144 ;; *************** function _initUSART4 *****************
  3145 ;; Defined at:
  3146 ;;		line 4 in file "serial.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used: 1
  3166 ;; Hardware stack levels required when called: 2
  3167 ;; This function calls:
  3168 ;;		Nothing
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text21
  3175   002358                     __ptext21:
  3176                           	callstack 0
  3177   002358                     _initUSART4:
  3178                           	callstack 28
  3179   002358                     
  3180                           ;serial.c: 5:     RC0PPS = 0x12;
  3181   002358  0E12               	movlw	18
  3182   00235A  010E               	movlb	14	; () banked
  3183   00235C  6F62               	movwf	98,b	;volatile
  3184                           
  3185                           ;serial.c: 6:     RX4PPS = 0x11;
  3186   00235E  0E11               	movlw	17
  3187   002360  6F15               	movwf	21,b	;volatile
  3188   002362                     
  3189                           ; BSR set to: 14
  3190                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3191   002362  97E9               	bcf	233,3,b	;volatile
  3192   002364                     
  3193                           ; BSR set to: 14
  3194                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3195   002364  95E8               	bcf	232,2,b	;volatile
  3196                           
  3197                           ;serial.c: 9:     SP4BRGL = 51;
  3198   002366  0E33               	movlw	51
  3199   002368  6FE5               	movwf	229,b	;volatile
  3200                           
  3201                           ;serial.c: 10:     SP4BRGH = 0;
  3202   00236A  0E00               	movlw	0
  3203   00236C  6FE6               	movwf	230,b	;volatile
  3204   00236E                     
  3205                           ; BSR set to: 14
  3206                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3207   00236E  89E7               	bsf	231,4,b	;volatile
  3208   002370                     
  3209                           ; BSR set to: 14
  3210                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3211   002370  8BE8               	bsf	232,5,b	;volatile
  3212   002372                     
  3213                           ; BSR set to: 14
  3214                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3215   002372  8FE7               	bsf	231,7,b	;volatile
  3216   002374                     
  3217                           ; BSR set to: 14
  3218   002374  0012               	return		;funcret
  3219   002376                     __end_of_initUSART4:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _colour_rel *****************
  3223 ;; Defined at:
  3224 ;;		line 100 in file "color.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  vals            2   51[COMRAM] PTR struct RGB
  3227 ;;		 -> vals(8), 
  3228 ;;  rel             2   53[COMRAM] PTR struct RGB_rel
  3229 ;;		 -> rel(12), 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  L               2   61[COMRAM] unsigned int 
  3232 ;;  B               2   59[COMRAM] unsigned int 
  3233 ;;  G               2   57[COMRAM] unsigned int 
  3234 ;;  R               2   55[COMRAM] unsigned int 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:       12 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 3
  3251 ;; This function calls:
  3252 ;;		___fldiv
  3253 ;;		___xxtofl
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text22
  3260   001776                     __ptext22:
  3261                           	callstack 0
  3262   001776                     _colour_rel:
  3263                           	callstack 27
  3264   001776                     
  3265                           ;color.c: 101:     unsigned int R = vals->R;
  3266   001776  C034  FFD9         	movff	colour_rel@vals,fsr2l
  3267   00177A  C035  FFDA         	movff	colour_rel@vals+1,fsr2h
  3268   00177E  CFDE F038          	movff	postinc2,colour_rel@R
  3269   001782  CFDD F039          	movff	postdec2,colour_rel@R+1
  3270   001786                     
  3271                           ;color.c: 102:     unsigned int G = vals->G;
  3272   001786  EE20 F002          	lfsr	2,2
  3273   00178A  5034               	movf	colour_rel@vals^0,w,c
  3274   00178C  26D9               	addwf	fsr2l,f,c
  3275   00178E  5035               	movf	(colour_rel@vals+1)^0,w,c
  3276   001790  22DA               	addwfc	fsr2h,f,c
  3277   001792  CFDE F03A          	movff	postinc2,colour_rel@G
  3278   001796  CFDD F03B          	movff	postdec2,colour_rel@G+1
  3279   00179A                     
  3280                           ;color.c: 103:     unsigned int B = vals->B;
  3281   00179A  EE20 F004          	lfsr	2,4
  3282   00179E  5034               	movf	colour_rel@vals^0,w,c
  3283   0017A0  26D9               	addwf	fsr2l,f,c
  3284   0017A2  5035               	movf	(colour_rel@vals+1)^0,w,c
  3285   0017A4  22DA               	addwfc	fsr2h,f,c
  3286   0017A6  CFDE F03C          	movff	postinc2,colour_rel@B
  3287   0017AA  CFDD F03D          	movff	postdec2,colour_rel@B+1
  3288   0017AE                     
  3289                           ;color.c: 104:     unsigned int L = vals->L;
  3290   0017AE  EE20 F006          	lfsr	2,6
  3291   0017B2  5034               	movf	colour_rel@vals^0,w,c
  3292   0017B4  26D9               	addwf	fsr2l,f,c
  3293   0017B6  5035               	movf	(colour_rel@vals+1)^0,w,c
  3294   0017B8  22DA               	addwfc	fsr2h,f,c
  3295   0017BA  CFDE F03E          	movff	postinc2,colour_rel@L
  3296   0017BE  CFDD F03F          	movff	postdec2,colour_rel@L+1
  3297   0017C2                     
  3298                           ;color.c: 105:     rel -> R = (float)R/(float)L;
  3299   0017C2  C038  F00D         	movff	colour_rel@R,___xxtofl@val
  3300   0017C6  C039  F00E         	movff	colour_rel@R+1,___xxtofl@val+1
  3301   0017CA  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3302   0017CC  6A10               	clrf	(___xxtofl@val+3)^0,c
  3303   0017CE  0E00               	movlw	0
  3304   0017D0  EC1D  F00A         	call	___xxtofl
  3305   0017D4  C00D  F01B         	movff	?___xxtofl,___fldiv@b
  3306   0017D8  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
  3307   0017DC  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
  3308   0017E0  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
  3309   0017E4  C03E  F00D         	movff	colour_rel@L,___xxtofl@val
  3310   0017E8  C03F  F00E         	movff	colour_rel@L+1,___xxtofl@val+1
  3311   0017EC  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3312   0017EE  6A10               	clrf	(___xxtofl@val+3)^0,c
  3313   0017F0  0E00               	movlw	0
  3314   0017F2  EC1D  F00A         	call	___xxtofl
  3315   0017F6  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  3316   0017FA  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  3317   0017FE  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  3318   001802  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  3319   001806  EC12  F007         	call	___fldiv	;wreg free
  3320   00180A  C036  FFD9         	movff	colour_rel@rel,fsr2l
  3321   00180E  C037  FFDA         	movff	colour_rel@rel+1,fsr2h
  3322   001812  C01B  FFDE         	movff	?___fldiv,postinc2
  3323   001816  C01C  FFDE         	movff	?___fldiv+1,postinc2
  3324   00181A  C01D  FFDE         	movff	?___fldiv+2,postinc2
  3325   00181E  C01E  FFDE         	movff	?___fldiv+3,postinc2
  3326   001822                     
  3327                           ;color.c: 106:     rel -> B = (float)B/(float)L;
  3328   001822  C03C  F00D         	movff	colour_rel@B,___xxtofl@val
  3329   001826  C03D  F00E         	movff	colour_rel@B+1,___xxtofl@val+1
  3330   00182A  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3331   00182C  6A10               	clrf	(___xxtofl@val+3)^0,c
  3332   00182E  0E00               	movlw	0
  3333   001830  EC1D  F00A         	call	___xxtofl
  3334   001834  C00D  F01B         	movff	?___xxtofl,___fldiv@b
  3335   001838  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
  3336   00183C  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
  3337   001840  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
  3338   001844  C03E  F00D         	movff	colour_rel@L,___xxtofl@val
  3339   001848  C03F  F00E         	movff	colour_rel@L+1,___xxtofl@val+1
  3340   00184C  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3341   00184E  6A10               	clrf	(___xxtofl@val+3)^0,c
  3342   001850  0E00               	movlw	0
  3343   001852  EC1D  F00A         	call	___xxtofl
  3344   001856  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  3345   00185A  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  3346   00185E  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  3347   001862  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  3348   001866  EC12  F007         	call	___fldiv	;wreg free
  3349   00186A  EE20 F008          	lfsr	2,8
  3350   00186E  5036               	movf	colour_rel@rel^0,w,c
  3351   001870  26D9               	addwf	fsr2l,f,c
  3352   001872  5037               	movf	(colour_rel@rel+1)^0,w,c
  3353   001874  22DA               	addwfc	fsr2h,f,c
  3354   001876  C01B  FFDE         	movff	?___fldiv,postinc2
  3355   00187A  C01C  FFDE         	movff	?___fldiv+1,postinc2
  3356   00187E  C01D  FFDE         	movff	?___fldiv+2,postinc2
  3357   001882  C01E  FFDE         	movff	?___fldiv+3,postinc2
  3358   001886                     
  3359                           ;color.c: 107:     rel -> G = (float)G/(float)L;
  3360   001886  C03A  F00D         	movff	colour_rel@G,___xxtofl@val
  3361   00188A  C03B  F00E         	movff	colour_rel@G+1,___xxtofl@val+1
  3362   00188E  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3363   001890  6A10               	clrf	(___xxtofl@val+3)^0,c
  3364   001892  0E00               	movlw	0
  3365   001894  EC1D  F00A         	call	___xxtofl
  3366   001898  C00D  F01B         	movff	?___xxtofl,___fldiv@b
  3367   00189C  C00E  F01C         	movff	?___xxtofl+1,___fldiv@b+1
  3368   0018A0  C00F  F01D         	movff	?___xxtofl+2,___fldiv@b+2
  3369   0018A4  C010  F01E         	movff	?___xxtofl+3,___fldiv@b+3
  3370   0018A8  C03E  F00D         	movff	colour_rel@L,___xxtofl@val
  3371   0018AC  C03F  F00E         	movff	colour_rel@L+1,___xxtofl@val+1
  3372   0018B0  6A0F               	clrf	(___xxtofl@val+2)^0,c
  3373   0018B2  6A10               	clrf	(___xxtofl@val+3)^0,c
  3374   0018B4  0E00               	movlw	0
  3375   0018B6  EC1D  F00A         	call	___xxtofl
  3376   0018BA  C00D  F01F         	movff	?___xxtofl,___fldiv@a
  3377   0018BE  C00E  F020         	movff	?___xxtofl+1,___fldiv@a+1
  3378   0018C2  C00F  F021         	movff	?___xxtofl+2,___fldiv@a+2
  3379   0018C6  C010  F022         	movff	?___xxtofl+3,___fldiv@a+3
  3380   0018CA  EC12  F007         	call	___fldiv	;wreg free
  3381   0018CE  EE20 F004          	lfsr	2,4
  3382   0018D2  5036               	movf	colour_rel@rel^0,w,c
  3383   0018D4  26D9               	addwf	fsr2l,f,c
  3384   0018D6  5037               	movf	(colour_rel@rel+1)^0,w,c
  3385   0018D8  22DA               	addwfc	fsr2h,f,c
  3386   0018DA  C01B  FFDE         	movff	?___fldiv,postinc2
  3387   0018DE  C01C  FFDE         	movff	?___fldiv+1,postinc2
  3388   0018E2  C01D  FFDE         	movff	?___fldiv+2,postinc2
  3389   0018E6  C01E  FFDE         	movff	?___fldiv+3,postinc2
  3390   0018EA  0012               	return		;funcret
  3391   0018EC                     __end_of_colour_rel:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function ___xxtofl *****************
  3395 ;; Defined at:
  3396 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  sign            1    wreg     unsigned char 
  3399 ;;  val             4   12[COMRAM] long 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  sign            1   20[COMRAM] unsigned char 
  3402 ;;  arg             4   22[COMRAM] unsigned long 
  3403 ;;  exp             1   21[COMRAM] unsigned char 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  4   12[COMRAM] unsigned char 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3413 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3414 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3416 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3417 ;;Total ram usage:       14 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 2
  3420 ;; This function calls:
  3421 ;;		Nothing
  3422 ;; This function is called by:
  3423 ;;		_colour_rel
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text23
  3429   00143A                     __ptext23:
  3430                           	callstack 0
  3431   00143A                     ___xxtofl:
  3432                           	callstack 27
  3433                           
  3434                           ;incstack = 0
  3435                           ;___xxtofl@sign stored from wreg
  3436   00143A  6E15               	movwf	___xxtofl@sign^0,c
  3437   00143C  5015               	movf	___xxtofl@sign^0,w,c
  3438   00143E  B4D8               	btfsc	status,2,c
  3439   001440  EF24  F00A         	goto	u2481
  3440   001444  EF26  F00A         	goto	u2480
  3441   001448                     u2481:
  3442   001448  EF48  F00A         	goto	l946
  3443   00144C                     u2480:
  3444   00144C  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  3445   00144E  EF2D  F00A         	goto	u2490
  3446   001452  EF2B  F00A         	goto	u2491
  3447   001456                     u2491:
  3448   001456  EF48  F00A         	goto	l946
  3449   00145A                     u2490:
  3450   00145A  C00D  F011         	movff	___xxtofl@val,??___xxtofl
  3451   00145E  C00E  F012         	movff	___xxtofl@val+1,??___xxtofl+1
  3452   001462  C00F  F013         	movff	___xxtofl@val+2,??___xxtofl+2
  3453   001466  C010  F014         	movff	___xxtofl@val+3,??___xxtofl+3
  3454   00146A  1E11               	comf	??___xxtofl^0,f,c
  3455   00146C  1E12               	comf	(??___xxtofl+1)^0,f,c
  3456   00146E  1E13               	comf	(??___xxtofl+2)^0,f,c
  3457   001470  1E14               	comf	(??___xxtofl+3)^0,f,c
  3458   001472  2A11               	incf	??___xxtofl^0,f,c
  3459   001474  0E00               	movlw	0
  3460   001476  2212               	addwfc	(??___xxtofl+1)^0,f,c
  3461   001478  2213               	addwfc	(??___xxtofl+2)^0,f,c
  3462   00147A  2214               	addwfc	(??___xxtofl+3)^0,f,c
  3463   00147C  C011  F017         	movff	??___xxtofl,___xxtofl@arg
  3464   001480  C012  F018         	movff	??___xxtofl+1,___xxtofl@arg+1
  3465   001484  C013  F019         	movff	??___xxtofl+2,___xxtofl@arg+2
  3466   001488  C014  F01A         	movff	??___xxtofl+3,___xxtofl@arg+3
  3467   00148C  EF50  F00A         	goto	l2843
  3468   001490                     l946:
  3469   001490  C00D  F017         	movff	___xxtofl@val,___xxtofl@arg
  3470   001494  C00E  F018         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3471   001498  C00F  F019         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3472   00149C  C010  F01A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3473   0014A0                     l2843:
  3474   0014A0  500D               	movf	___xxtofl@val^0,w,c
  3475   0014A2  100E               	iorwf	(___xxtofl@val+1)^0,w,c
  3476   0014A4  100F               	iorwf	(___xxtofl@val+2)^0,w,c
  3477   0014A6  1010               	iorwf	(___xxtofl@val+3)^0,w,c
  3478   0014A8  A4D8               	btfss	status,2,c
  3479   0014AA  EF59  F00A         	goto	u2501
  3480   0014AE  EF5B  F00A         	goto	u2500
  3481   0014B2                     u2501:
  3482   0014B2  EF65  F00A         	goto	l2849
  3483   0014B6                     u2500:
  3484   0014B6  0E00               	movlw	0
  3485   0014B8  6E0D               	movwf	?___xxtofl^0,c
  3486   0014BA  0E00               	movlw	0
  3487   0014BC  6E0E               	movwf	(?___xxtofl+1)^0,c
  3488   0014BE  0E00               	movlw	0
  3489   0014C0  6E0F               	movwf	(?___xxtofl+2)^0,c
  3490   0014C2  0E00               	movlw	0
  3491   0014C4  6E10               	movwf	(?___xxtofl+3)^0,c
  3492   0014C6  EFF6  F00A         	goto	l949
  3493   0014CA                     l2849:
  3494   0014CA  0E96               	movlw	150
  3495   0014CC  6E16               	movwf	___xxtofl@exp^0,c
  3496   0014CE  EF6F  F00A         	goto	l2853
  3497   0014D2                     l2851:
  3498   0014D2  2A16               	incf	___xxtofl@exp^0,f,c
  3499   0014D4  90D8               	bcf	status,0,c
  3500   0014D6  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  3501   0014D8  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  3502   0014DA  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  3503   0014DC  3217               	rrcf	___xxtofl@arg^0,f,c
  3504   0014DE                     l2853:
  3505   0014DE  0E00               	movlw	0
  3506   0014E0  1417               	andwf	___xxtofl@arg^0,w,c
  3507   0014E2  6E11               	movwf	??___xxtofl^0,c
  3508   0014E4  0E00               	movlw	0
  3509   0014E6  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  3510   0014E8  6E12               	movwf	(??___xxtofl+1)^0,c
  3511   0014EA  0E00               	movlw	0
  3512   0014EC  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  3513   0014EE  6E13               	movwf	(??___xxtofl+2)^0,c
  3514   0014F0  0EFE               	movlw	254
  3515   0014F2  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  3516   0014F4  6E14               	movwf	(??___xxtofl+3)^0,c
  3517   0014F6  5011               	movf	??___xxtofl^0,w,c
  3518   0014F8  1012               	iorwf	(??___xxtofl+1)^0,w,c
  3519   0014FA  1013               	iorwf	(??___xxtofl+2)^0,w,c
  3520   0014FC  1014               	iorwf	(??___xxtofl+3)^0,w,c
  3521   0014FE  A4D8               	btfss	status,2,c
  3522   001500  EF84  F00A         	goto	u2511
  3523   001504  EF86  F00A         	goto	u2510
  3524   001508                     u2511:
  3525   001508  EF69  F00A         	goto	l2851
  3526   00150C                     u2510:
  3527   00150C  EF94  F00A         	goto	l953
  3528   001510                     l2855:
  3529   001510  2A16               	incf	___xxtofl@exp^0,f,c
  3530   001512  0E01               	movlw	1
  3531   001514  2617               	addwf	___xxtofl@arg^0,f,c
  3532   001516  0E00               	movlw	0
  3533   001518  2218               	addwfc	(___xxtofl@arg+1)^0,f,c
  3534   00151A  2219               	addwfc	(___xxtofl@arg+2)^0,f,c
  3535   00151C  221A               	addwfc	(___xxtofl@arg+3)^0,f,c
  3536   00151E  90D8               	bcf	status,0,c
  3537   001520  321A               	rrcf	(___xxtofl@arg+3)^0,f,c
  3538   001522  3219               	rrcf	(___xxtofl@arg+2)^0,f,c
  3539   001524  3218               	rrcf	(___xxtofl@arg+1)^0,f,c
  3540   001526  3217               	rrcf	___xxtofl@arg^0,f,c
  3541   001528                     l953:
  3542   001528  0E00               	movlw	0
  3543   00152A  1417               	andwf	___xxtofl@arg^0,w,c
  3544   00152C  6E11               	movwf	??___xxtofl^0,c
  3545   00152E  0E00               	movlw	0
  3546   001530  1418               	andwf	(___xxtofl@arg+1)^0,w,c
  3547   001532  6E12               	movwf	(??___xxtofl+1)^0,c
  3548   001534  0E00               	movlw	0
  3549   001536  1419               	andwf	(___xxtofl@arg+2)^0,w,c
  3550   001538  6E13               	movwf	(??___xxtofl+2)^0,c
  3551   00153A  0EFF               	movlw	255
  3552   00153C  141A               	andwf	(___xxtofl@arg+3)^0,w,c
  3553   00153E  6E14               	movwf	(??___xxtofl+3)^0,c
  3554   001540  5011               	movf	??___xxtofl^0,w,c
  3555   001542  1012               	iorwf	(??___xxtofl+1)^0,w,c
  3556   001544  1013               	iorwf	(??___xxtofl+2)^0,w,c
  3557   001546  1014               	iorwf	(??___xxtofl+3)^0,w,c
  3558   001548  A4D8               	btfss	status,2,c
  3559   00154A  EFA9  F00A         	goto	u2521
  3560   00154E  EFAB  F00A         	goto	u2520
  3561   001552                     u2521:
  3562   001552  EF88  F00A         	goto	l2855
  3563   001556                     u2520:
  3564   001556  EFB3  F00A         	goto	l2863
  3565   00155A                     l2861:
  3566   00155A  0616               	decf	___xxtofl@exp^0,f,c
  3567   00155C  90D8               	bcf	status,0,c
  3568   00155E  3617               	rlcf	___xxtofl@arg^0,f,c
  3569   001560  3618               	rlcf	(___xxtofl@arg+1)^0,f,c
  3570   001562  3619               	rlcf	(___xxtofl@arg+2)^0,f,c
  3571   001564  361A               	rlcf	(___xxtofl@arg+3)^0,f,c
  3572   001566                     l2863:
  3573   001566  BE19               	btfsc	(___xxtofl@arg+2)^0,7,c
  3574   001568  EFB8  F00A         	goto	u2531
  3575   00156C  EFBA  F00A         	goto	u2530
  3576   001570                     u2531:
  3577   001570  EFC2  F00A         	goto	l960
  3578   001574                     u2530:
  3579   001574  0E02               	movlw	2
  3580   001576  6016               	cpfslt	___xxtofl@exp^0,c
  3581   001578  EFC0  F00A         	goto	u2541
  3582   00157C  EFC2  F00A         	goto	u2540
  3583   001580                     u2541:
  3584   001580  EFAD  F00A         	goto	l2861
  3585   001584                     u2540:
  3586   001584                     l960:
  3587   001584  B016               	btfsc	___xxtofl@exp^0,0,c
  3588   001586  EFC7  F00A         	goto	u2551
  3589   00158A  EFC9  F00A         	goto	u2550
  3590   00158E                     u2551:
  3591   00158E  EFCA  F00A         	goto	l2869
  3592   001592                     u2550:
  3593   001592  9E19               	bcf	(___xxtofl@arg+2)^0,7,c
  3594   001594                     l2869:
  3595   001594  90D8               	bcf	status,0,c
  3596   001596  3216               	rrcf	___xxtofl@exp^0,f,c
  3597   001598  C016  F011         	movff	___xxtofl@exp,??___xxtofl
  3598   00159C  6A12               	clrf	(??___xxtofl+1)^0,c
  3599   00159E  6A13               	clrf	(??___xxtofl+2)^0,c
  3600   0015A0  6A14               	clrf	(??___xxtofl+3)^0,c
  3601   0015A2  C011  F014         	movff	??___xxtofl,??___xxtofl+3
  3602   0015A6  6A13               	clrf	(??___xxtofl+2)^0,c
  3603   0015A8  6A12               	clrf	(??___xxtofl+1)^0,c
  3604   0015AA  6A11               	clrf	??___xxtofl^0,c
  3605   0015AC  5011               	movf	??___xxtofl^0,w,c
  3606   0015AE  1217               	iorwf	___xxtofl@arg^0,f,c
  3607   0015B0  5012               	movf	(??___xxtofl+1)^0,w,c
  3608   0015B2  1218               	iorwf	(___xxtofl@arg+1)^0,f,c
  3609   0015B4  5013               	movf	(??___xxtofl+2)^0,w,c
  3610   0015B6  1219               	iorwf	(___xxtofl@arg+2)^0,f,c
  3611   0015B8  5014               	movf	(??___xxtofl+3)^0,w,c
  3612   0015BA  121A               	iorwf	(___xxtofl@arg+3)^0,f,c
  3613   0015BC  5015               	movf	___xxtofl@sign^0,w,c
  3614   0015BE  B4D8               	btfsc	status,2,c
  3615   0015C0  EFE4  F00A         	goto	u2561
  3616   0015C4  EFE6  F00A         	goto	u2560
  3617   0015C8                     u2561:
  3618   0015C8  EFEE  F00A         	goto	l2879
  3619   0015CC                     u2560:
  3620   0015CC  BE10               	btfsc	(___xxtofl@val+3)^0,7,c
  3621   0015CE  EFED  F00A         	goto	u2570
  3622   0015D2  EFEB  F00A         	goto	u2571
  3623   0015D6                     u2571:
  3624   0015D6  EFEE  F00A         	goto	l2879
  3625   0015DA                     u2570:
  3626   0015DA  8E1A               	bsf	(___xxtofl@arg+3)^0,7,c
  3627   0015DC                     l2879:
  3628   0015DC  C017  F00D         	movff	___xxtofl@arg,?___xxtofl
  3629   0015E0  C018  F00E         	movff	___xxtofl@arg+1,?___xxtofl+1
  3630   0015E4  C019  F00F         	movff	___xxtofl@arg+2,?___xxtofl+2
  3631   0015E8  C01A  F010         	movff	___xxtofl@arg+3,?___xxtofl+3
  3632   0015EC                     l949:
  3633   0015EC  0012               	return		;funcret
  3634   0015EE                     __end_of___xxtofl:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function ___fldiv *****************
  3638 ;; Defined at:
  3639 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  b               4   26[COMRAM] unsigned char 
  3642 ;;  a               4   30[COMRAM] unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  grs             4   45[COMRAM] unsigned long 
  3645 ;;  rem             4   38[COMRAM] unsigned long 
  3646 ;;  new_exp         2   43[COMRAM] short 
  3647 ;;  aexp            1   50[COMRAM] unsigned char 
  3648 ;;  bexp            1   49[COMRAM] unsigned char 
  3649 ;;  sign            1   42[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  4   26[COMRAM] unsigned char 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3659 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3660 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;Total ram usage:       25 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 2
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_colour_rel
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text24
  3674   000E24                     __ptext24:
  3675                           	callstack 0
  3676   000E24                     ___fldiv:
  3677                           	callstack 27
  3678   000E24  501E               	movf	(___fldiv@b+3)^0,w,c
  3679   000E26  0B80               	andlw	128
  3680   000E28  6E2B               	movwf	___fldiv@sign^0,c
  3681   000E2A  501E               	movf	(___fldiv@b+3)^0,w,c
  3682   000E2C  241E               	addwf	(___fldiv@b+3)^0,w,c
  3683   000E2E  6E32               	movwf	___fldiv@bexp^0,c
  3684   000E30  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  3685   000E32  EF1D  F007         	goto	u2251
  3686   000E36  EF1F  F007         	goto	u2250
  3687   000E3A                     u2251:
  3688   000E3A  EF20  F007         	goto	l2705
  3689   000E3E                     u2250:
  3690   000E3E  8032               	bsf	___fldiv@bexp^0,0,c
  3691   000E40                     l2705:
  3692   000E40  5032               	movf	___fldiv@bexp^0,w,c
  3693   000E42  B4D8               	btfsc	status,2,c
  3694   000E44  EF26  F007         	goto	u2261
  3695   000E48  EF28  F007         	goto	u2260
  3696   000E4C                     u2261:
  3697   000E4C  EF3D  F007         	goto	l2715
  3698   000E50                     u2260:
  3699   000E50  2832               	incf	___fldiv@bexp^0,w,c
  3700   000E52  A4D8               	btfss	status,2,c
  3701   000E54  EF2E  F007         	goto	u2271
  3702   000E58  EF30  F007         	goto	u2270
  3703   000E5C                     u2271:
  3704   000E5C  EF38  F007         	goto	l2711
  3705   000E60                     u2270:
  3706   000E60  0E00               	movlw	0
  3707   000E62  6E1B               	movwf	___fldiv@b^0,c
  3708   000E64  0E00               	movlw	0
  3709   000E66  6E1C               	movwf	(___fldiv@b+1)^0,c
  3710   000E68  0E00               	movlw	0
  3711   000E6A  6E1D               	movwf	(___fldiv@b+2)^0,c
  3712   000E6C  0E00               	movlw	0
  3713   000E6E  6E1E               	movwf	(___fldiv@b+3)^0,c
  3714   000E70                     l2711:
  3715   000E70  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  3716   000E72  0E00               	movlw	0
  3717   000E74  6E1E               	movwf	(___fldiv@b+3)^0,c
  3718   000E76  EF45  F007         	goto	l2717
  3719   000E7A                     l2715:
  3720   000E7A  0E00               	movlw	0
  3721   000E7C  6E1B               	movwf	___fldiv@b^0,c
  3722   000E7E  0E00               	movlw	0
  3723   000E80  6E1C               	movwf	(___fldiv@b+1)^0,c
  3724   000E82  0E00               	movlw	0
  3725   000E84  6E1D               	movwf	(___fldiv@b+2)^0,c
  3726   000E86  0E00               	movlw	0
  3727   000E88  6E1E               	movwf	(___fldiv@b+3)^0,c
  3728   000E8A                     l2717:
  3729   000E8A  5022               	movf	(___fldiv@a+3)^0,w,c
  3730   000E8C  0B80               	andlw	128
  3731   000E8E  1A2B               	xorwf	___fldiv@sign^0,f,c
  3732   000E90  5022               	movf	(___fldiv@a+3)^0,w,c
  3733   000E92  2422               	addwf	(___fldiv@a+3)^0,w,c
  3734   000E94  6E33               	movwf	___fldiv@aexp^0,c
  3735   000E96  AE21               	btfss	(___fldiv@a+2)^0,7,c
  3736   000E98  EF50  F007         	goto	u2281
  3737   000E9C  EF52  F007         	goto	u2280
  3738   000EA0                     u2281:
  3739   000EA0  EF53  F007         	goto	l2725
  3740   000EA4                     u2280:
  3741   000EA4  8033               	bsf	___fldiv@aexp^0,0,c
  3742   000EA6                     l2725:
  3743   000EA6  5033               	movf	___fldiv@aexp^0,w,c
  3744   000EA8  B4D8               	btfsc	status,2,c
  3745   000EAA  EF59  F007         	goto	u2291
  3746   000EAE  EF5B  F007         	goto	u2290
  3747   000EB2                     u2291:
  3748   000EB2  EF70  F007         	goto	l2735
  3749   000EB6                     u2290:
  3750   000EB6  2833               	incf	___fldiv@aexp^0,w,c
  3751   000EB8  A4D8               	btfss	status,2,c
  3752   000EBA  EF61  F007         	goto	u2301
  3753   000EBE  EF63  F007         	goto	u2300
  3754   000EC2                     u2301:
  3755   000EC2  EF6B  F007         	goto	l2731
  3756   000EC6                     u2300:
  3757   000EC6  0E00               	movlw	0
  3758   000EC8  6E1F               	movwf	___fldiv@a^0,c
  3759   000ECA  0E00               	movlw	0
  3760   000ECC  6E20               	movwf	(___fldiv@a+1)^0,c
  3761   000ECE  0E00               	movlw	0
  3762   000ED0  6E21               	movwf	(___fldiv@a+2)^0,c
  3763   000ED2  0E00               	movlw	0
  3764   000ED4  6E22               	movwf	(___fldiv@a+3)^0,c
  3765   000ED6                     l2731:
  3766   000ED6  8E21               	bsf	(___fldiv@a+2)^0,7,c
  3767   000ED8  0E00               	movlw	0
  3768   000EDA  6E22               	movwf	(___fldiv@a+3)^0,c
  3769   000EDC  EF78  F007         	goto	l2737
  3770   000EE0                     l2735:
  3771   000EE0  0E00               	movlw	0
  3772   000EE2  6E1F               	movwf	___fldiv@a^0,c
  3773   000EE4  0E00               	movlw	0
  3774   000EE6  6E20               	movwf	(___fldiv@a+1)^0,c
  3775   000EE8  0E00               	movlw	0
  3776   000EEA  6E21               	movwf	(___fldiv@a+2)^0,c
  3777   000EEC  0E00               	movlw	0
  3778   000EEE  6E22               	movwf	(___fldiv@a+3)^0,c
  3779   000EF0                     l2737:
  3780   000EF0  501F               	movf	___fldiv@a^0,w,c
  3781   000EF2  1020               	iorwf	(___fldiv@a+1)^0,w,c
  3782   000EF4  1021               	iorwf	(___fldiv@a+2)^0,w,c
  3783   000EF6  1022               	iorwf	(___fldiv@a+3)^0,w,c
  3784   000EF8  A4D8               	btfss	status,2,c
  3785   000EFA  EF81  F007         	goto	u2311
  3786   000EFE  EF83  F007         	goto	u2310
  3787   000F02                     u2311:
  3788   000F02  EF9B  F007         	goto	l2749
  3789   000F06                     u2310:
  3790   000F06  0E00               	movlw	0
  3791   000F08  6E1B               	movwf	___fldiv@b^0,c
  3792   000F0A  0E00               	movlw	0
  3793   000F0C  6E1C               	movwf	(___fldiv@b+1)^0,c
  3794   000F0E  0E00               	movlw	0
  3795   000F10  6E1D               	movwf	(___fldiv@b+2)^0,c
  3796   000F12  0E00               	movlw	0
  3797   000F14  6E1E               	movwf	(___fldiv@b+3)^0,c
  3798   000F16  0E80               	movlw	128
  3799   000F18  121D               	iorwf	(___fldiv@b+2)^0,f,c
  3800   000F1A  0E7F               	movlw	127
  3801   000F1C  121E               	iorwf	(___fldiv@b+3)^0,f,c
  3802   000F1E                     l2743:
  3803   000F1E  502B               	movf	___fldiv@sign^0,w,c
  3804   000F20  121E               	iorwf	(___fldiv@b+3)^0,f,c
  3805   000F22  C01B  F01B         	movff	___fldiv@b,?___fldiv
  3806   000F26  C01C  F01C         	movff	___fldiv@b+1,?___fldiv+1
  3807   000F2A  C01D  F01D         	movff	___fldiv@b+2,?___fldiv+2
  3808   000F2E  C01E  F01E         	movff	___fldiv@b+3,?___fldiv+3
  3809   000F32  EFDE  F008         	goto	l873
  3810   000F36                     l2749:
  3811   000F36  5032               	movf	___fldiv@bexp^0,w,c
  3812   000F38  A4D8               	btfss	status,2,c
  3813   000F3A  EFA1  F007         	goto	u2321
  3814   000F3E  EFA3  F007         	goto	u2320
  3815   000F42                     u2321:
  3816   000F42  EFAD  F007         	goto	l2757
  3817   000F46                     u2320:
  3818   000F46  0E00               	movlw	0
  3819   000F48  6E1B               	movwf	?___fldiv^0,c
  3820   000F4A  0E00               	movlw	0
  3821   000F4C  6E1C               	movwf	(?___fldiv+1)^0,c
  3822   000F4E  0E00               	movlw	0
  3823   000F50  6E1D               	movwf	(?___fldiv+2)^0,c
  3824   000F52  0E00               	movlw	0
  3825   000F54  6E1E               	movwf	(?___fldiv+3)^0,c
  3826   000F56  EFDE  F008         	goto	l873
  3827   000F5A                     l2757:
  3828   000F5A  5033               	movf	___fldiv@aexp^0,w,c
  3829   000F5C  C032  F023         	movff	___fldiv@bexp,??___fldiv
  3830   000F60  6A24               	clrf	(??___fldiv+1)^0,c
  3831   000F62  5E23               	subwf	??___fldiv^0,f,c
  3832   000F64  0E00               	movlw	0
  3833   000F66  5A24               	subwfb	(??___fldiv+1)^0,f,c
  3834   000F68  0E7F               	movlw	127
  3835   000F6A  2423               	addwf	??___fldiv^0,w,c
  3836   000F6C  6E2C               	movwf	___fldiv@new_exp^0,c
  3837   000F6E  0E00               	movlw	0
  3838   000F70  2024               	addwfc	(??___fldiv+1)^0,w,c
  3839   000F72  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  3840   000F74  C01B  F027         	movff	___fldiv@b,___fldiv@rem
  3841   000F78  C01C  F028         	movff	___fldiv@b+1,___fldiv@rem+1
  3842   000F7C  C01D  F029         	movff	___fldiv@b+2,___fldiv@rem+2
  3843   000F80  C01E  F02A         	movff	___fldiv@b+3,___fldiv@rem+3
  3844   000F84  0E00               	movlw	0
  3845   000F86  6E1B               	movwf	___fldiv@b^0,c
  3846   000F88  0E00               	movlw	0
  3847   000F8A  6E1C               	movwf	(___fldiv@b+1)^0,c
  3848   000F8C  0E00               	movlw	0
  3849   000F8E  6E1D               	movwf	(___fldiv@b+2)^0,c
  3850   000F90  0E00               	movlw	0
  3851   000F92  6E1E               	movwf	(___fldiv@b+3)^0,c
  3852   000F94  0E00               	movlw	0
  3853   000F96  6E2E               	movwf	___fldiv@grs^0,c
  3854   000F98  0E00               	movlw	0
  3855   000F9A  6E2F               	movwf	(___fldiv@grs+1)^0,c
  3856   000F9C  0E00               	movlw	0
  3857   000F9E  6E30               	movwf	(___fldiv@grs+2)^0,c
  3858   000FA0  0E00               	movlw	0
  3859   000FA2  6E31               	movwf	(___fldiv@grs+3)^0,c
  3860   000FA4  0E00               	movlw	0
  3861   000FA6  6E33               	movwf	___fldiv@aexp^0,c
  3862   000FA8  EF0E  F008         	goto	l875
  3863   000FAC                     l2767:
  3864   000FAC  5033               	movf	___fldiv@aexp^0,w,c
  3865   000FAE  B4D8               	btfsc	status,2,c
  3866   000FB0  EFDC  F007         	goto	u2331
  3867   000FB4  EFDE  F007         	goto	u2330
  3868   000FB8                     u2331:
  3869   000FB8  EFF5  F007         	goto	l2775
  3870   000FBC                     u2330:
  3871   000FBC  90D8               	bcf	status,0,c
  3872   000FBE  3627               	rlcf	___fldiv@rem^0,f,c
  3873   000FC0  3628               	rlcf	(___fldiv@rem+1)^0,f,c
  3874   000FC2  3629               	rlcf	(___fldiv@rem+2)^0,f,c
  3875   000FC4  362A               	rlcf	(___fldiv@rem+3)^0,f,c
  3876   000FC6  90D8               	bcf	status,0,c
  3877   000FC8  361B               	rlcf	___fldiv@b^0,f,c
  3878   000FCA  361C               	rlcf	(___fldiv@b+1)^0,f,c
  3879   000FCC  361D               	rlcf	(___fldiv@b+2)^0,f,c
  3880   000FCE  361E               	rlcf	(___fldiv@b+3)^0,f,c
  3881   000FD0  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  3882   000FD2  EFED  F007         	goto	u2341
  3883   000FD6  EFEF  F007         	goto	u2340
  3884   000FDA                     u2341:
  3885   000FDA  EFF0  F007         	goto	l878
  3886   000FDE                     u2340:
  3887   000FDE  801B               	bsf	___fldiv@b^0,0,c
  3888   000FE0                     l878:
  3889   000FE0  90D8               	bcf	status,0,c
  3890   000FE2  362E               	rlcf	___fldiv@grs^0,f,c
  3891   000FE4  362F               	rlcf	(___fldiv@grs+1)^0,f,c
  3892   000FE6  3630               	rlcf	(___fldiv@grs+2)^0,f,c
  3893   000FE8  3631               	rlcf	(___fldiv@grs+3)^0,f,c
  3894   000FEA                     l2775:
  3895   000FEA  501F               	movf	___fldiv@a^0,w,c
  3896   000FEC  5C27               	subwf	___fldiv@rem^0,w,c
  3897   000FEE  5020               	movf	(___fldiv@a+1)^0,w,c
  3898   000FF0  5828               	subwfb	(___fldiv@rem+1)^0,w,c
  3899   000FF2  5021               	movf	(___fldiv@a+2)^0,w,c
  3900   000FF4  5829               	subwfb	(___fldiv@rem+2)^0,w,c
  3901   000FF6  5022               	movf	(___fldiv@a+3)^0,w,c
  3902   000FF8  582A               	subwfb	(___fldiv@rem+3)^0,w,c
  3903   000FFA  A0D8               	btfss	status,0,c
  3904   000FFC  EF02  F008         	goto	u2351
  3905   001000  EF04  F008         	goto	u2350
  3906   001004                     u2351:
  3907   001004  EF0D  F008         	goto	l2781
  3908   001008                     u2350:
  3909   001008  8C31               	bsf	(___fldiv@grs+3)^0,6,c
  3910   00100A  501F               	movf	___fldiv@a^0,w,c
  3911   00100C  5E27               	subwf	___fldiv@rem^0,f,c
  3912   00100E  5020               	movf	(___fldiv@a+1)^0,w,c
  3913   001010  5A28               	subwfb	(___fldiv@rem+1)^0,f,c
  3914   001012  5021               	movf	(___fldiv@a+2)^0,w,c
  3915   001014  5A29               	subwfb	(___fldiv@rem+2)^0,f,c
  3916   001016  5022               	movf	(___fldiv@a+3)^0,w,c
  3917   001018  5A2A               	subwfb	(___fldiv@rem+3)^0,f,c
  3918   00101A                     l2781:
  3919   00101A  2A33               	incf	___fldiv@aexp^0,f,c
  3920   00101C                     l875:
  3921   00101C  0E19               	movlw	25
  3922   00101E  6433               	cpfsgt	___fldiv@aexp^0,c
  3923   001020  EF14  F008         	goto	u2361
  3924   001024  EF16  F008         	goto	u2360
  3925   001028                     u2361:
  3926   001028  EFD6  F007         	goto	l2767
  3927   00102C                     u2360:
  3928   00102C  5027               	movf	___fldiv@rem^0,w,c
  3929   00102E  1028               	iorwf	(___fldiv@rem+1)^0,w,c
  3930   001030  1029               	iorwf	(___fldiv@rem+2)^0,w,c
  3931   001032  102A               	iorwf	(___fldiv@rem+3)^0,w,c
  3932   001034  B4D8               	btfsc	status,2,c
  3933   001036  EF1F  F008         	goto	u2371
  3934   00103A  EF21  F008         	goto	u2370
  3935   00103E                     u2371:
  3936   00103E  EF39  F008         	goto	l2793
  3937   001042                     u2370:
  3938   001042  802E               	bsf	___fldiv@grs^0,0,c
  3939   001044  EF39  F008         	goto	l2793
  3940   001048                     l2787:
  3941   001048  90D8               	bcf	status,0,c
  3942   00104A  361B               	rlcf	___fldiv@b^0,f,c
  3943   00104C  361C               	rlcf	(___fldiv@b+1)^0,f,c
  3944   00104E  361D               	rlcf	(___fldiv@b+2)^0,f,c
  3945   001050  361E               	rlcf	(___fldiv@b+3)^0,f,c
  3946   001052  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  3947   001054  EF2E  F008         	goto	u2381
  3948   001058  EF30  F008         	goto	u2380
  3949   00105C                     u2381:
  3950   00105C  EF31  F008         	goto	l884
  3951   001060                     u2380:
  3952   001060  801B               	bsf	___fldiv@b^0,0,c
  3953   001062                     l884:
  3954   001062  90D8               	bcf	status,0,c
  3955   001064  362E               	rlcf	___fldiv@grs^0,f,c
  3956   001066  362F               	rlcf	(___fldiv@grs+1)^0,f,c
  3957   001068  3630               	rlcf	(___fldiv@grs+2)^0,f,c
  3958   00106A  3631               	rlcf	(___fldiv@grs+3)^0,f,c
  3959   00106C  062C               	decf	___fldiv@new_exp^0,f,c
  3960   00106E  A0D8               	btfss	status,0,c
  3961   001070  062D               	decf	(___fldiv@new_exp+1)^0,f,c
  3962   001072                     l2793:
  3963   001072  AE1D               	btfss	(___fldiv@b+2)^0,7,c
  3964   001074  EF3E  F008         	goto	u2391
  3965   001078  EF40  F008         	goto	u2390
  3966   00107C                     u2391:
  3967   00107C  EF24  F008         	goto	l2787
  3968   001080                     u2390:
  3969   001080  0E00               	movlw	0
  3970   001082  6E33               	movwf	___fldiv@aexp^0,c
  3971   001084  AE31               	btfss	(___fldiv@grs+3)^0,7,c
  3972   001086  EF47  F008         	goto	u2401
  3973   00108A  EF49  F008         	goto	u2400
  3974   00108E                     u2401:
  3975   00108E  EF6D  F008         	goto	l886
  3976   001092                     u2400:
  3977   001092  0EFF               	movlw	255
  3978   001094  142E               	andwf	___fldiv@grs^0,w,c
  3979   001096  6E23               	movwf	??___fldiv^0,c
  3980   001098  0EFF               	movlw	255
  3981   00109A  142F               	andwf	(___fldiv@grs+1)^0,w,c
  3982   00109C  6E24               	movwf	(??___fldiv+1)^0,c
  3983   00109E  0EFF               	movlw	255
  3984   0010A0  1430               	andwf	(___fldiv@grs+2)^0,w,c
  3985   0010A2  6E25               	movwf	(??___fldiv+2)^0,c
  3986   0010A4  0E7F               	movlw	127
  3987   0010A6  1431               	andwf	(___fldiv@grs+3)^0,w,c
  3988   0010A8  6E26               	movwf	(??___fldiv+3)^0,c
  3989   0010AA  5023               	movf	??___fldiv^0,w,c
  3990   0010AC  1024               	iorwf	(??___fldiv+1)^0,w,c
  3991   0010AE  1025               	iorwf	(??___fldiv+2)^0,w,c
  3992   0010B0  1026               	iorwf	(??___fldiv+3)^0,w,c
  3993   0010B2  B4D8               	btfsc	status,2,c
  3994   0010B4  EF5E  F008         	goto	u2411
  3995   0010B8  EF60  F008         	goto	u2410
  3996   0010BC                     u2411:
  3997   0010BC  EF64  F008         	goto	l887
  3998   0010C0                     u2410:
  3999   0010C0                     l2801:
  4000   0010C0  0E01               	movlw	1
  4001   0010C2  6E33               	movwf	___fldiv@aexp^0,c
  4002   0010C4  EF6D  F008         	goto	l886
  4003   0010C8                     l887:
  4004   0010C8  A01B               	btfss	___fldiv@b^0,0,c
  4005   0010CA  EF69  F008         	goto	u2421
  4006   0010CE  EF6B  F008         	goto	u2420
  4007   0010D2                     u2421:
  4008   0010D2  EF6D  F008         	goto	l886
  4009   0010D6                     u2420:
  4010   0010D6  EF60  F008         	goto	l2801
  4011   0010DA                     l886:
  4012   0010DA  5033               	movf	___fldiv@aexp^0,w,c
  4013   0010DC  B4D8               	btfsc	status,2,c
  4014   0010DE  EF73  F008         	goto	u2431
  4015   0010E2  EF75  F008         	goto	u2430
  4016   0010E6                     u2431:
  4017   0010E6  EF99  F008         	goto	l2813
  4018   0010EA                     u2430:
  4019   0010EA  0E01               	movlw	1
  4020   0010EC  261B               	addwf	___fldiv@b^0,f,c
  4021   0010EE  0E00               	movlw	0
  4022   0010F0  221C               	addwfc	(___fldiv@b+1)^0,f,c
  4023   0010F2  221D               	addwfc	(___fldiv@b+2)^0,f,c
  4024   0010F4  221E               	addwfc	(___fldiv@b+3)^0,f,c
  4025   0010F6  A01E               	btfss	(___fldiv@b+3)^0,0,c
  4026   0010F8  EF80  F008         	goto	u2441
  4027   0010FC  EF82  F008         	goto	u2440
  4028   001100                     u2441:
  4029   001100  EF99  F008         	goto	l2813
  4030   001104                     u2440:
  4031   001104  C01B  F023         	movff	___fldiv@b,??___fldiv
  4032   001108  C01C  F024         	movff	___fldiv@b+1,??___fldiv+1
  4033   00110C  C01D  F025         	movff	___fldiv@b+2,??___fldiv+2
  4034   001110  C01E  F026         	movff	___fldiv@b+3,??___fldiv+3
  4035   001114  3426               	rlcf	(??___fldiv+3)^0,w,c
  4036   001116  3226               	rrcf	(??___fldiv+3)^0,f,c
  4037   001118  3225               	rrcf	(??___fldiv+2)^0,f,c
  4038   00111A  3224               	rrcf	(??___fldiv+1)^0,f,c
  4039   00111C  3223               	rrcf	??___fldiv^0,f,c
  4040   00111E  C023  F01B         	movff	??___fldiv,___fldiv@b
  4041   001122  C024  F01C         	movff	??___fldiv+1,___fldiv@b+1
  4042   001126  C025  F01D         	movff	??___fldiv+2,___fldiv@b+2
  4043   00112A  C026  F01E         	movff	??___fldiv+3,___fldiv@b+3
  4044   00112E  4A2C               	infsnz	___fldiv@new_exp^0,f,c
  4045   001130  2A2D               	incf	(___fldiv@new_exp+1)^0,f,c
  4046   001132                     l2813:
  4047   001132  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4048   001134  EFA4  F008         	goto	u2451
  4049   001138  502D               	movf	(___fldiv@new_exp+1)^0,w,c
  4050   00113A  E108               	bnz	u2450
  4051   00113C  282C               	incf	___fldiv@new_exp^0,w,c
  4052   00113E  A0D8               	btfss	status,0,c
  4053   001140  EFA4  F008         	goto	u2451
  4054   001144  EFA6  F008         	goto	u2450
  4055   001148                     u2451:
  4056   001148  EFB1  F008         	goto	l2817
  4057   00114C                     u2450:
  4058   00114C  0E00               	movlw	0
  4059   00114E  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  4060   001150  682C               	setf	___fldiv@new_exp^0,c
  4061   001152  0E00               	movlw	0
  4062   001154  6E1B               	movwf	___fldiv@b^0,c
  4063   001156  0E00               	movlw	0
  4064   001158  6E1C               	movwf	(___fldiv@b+1)^0,c
  4065   00115A  0E00               	movlw	0
  4066   00115C  6E1D               	movwf	(___fldiv@b+2)^0,c
  4067   00115E  0E00               	movlw	0
  4068   001160  6E1E               	movwf	(___fldiv@b+3)^0,c
  4069   001162                     l2817:
  4070   001162  BE2D               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4071   001164  EFBE  F008         	goto	u2460
  4072   001168  502D               	movf	(___fldiv@new_exp+1)^0,w,c
  4073   00116A  E106               	bnz	u2461
  4074   00116C  042C               	decf	___fldiv@new_exp^0,w,c
  4075   00116E  B0D8               	btfsc	status,0,c
  4076   001170  EFBC  F008         	goto	u2461
  4077   001174  EFBE  F008         	goto	u2460
  4078   001178                     u2461:
  4079   001178  EFCC  F008         	goto	l2821
  4080   00117C                     u2460:
  4081   00117C  0E00               	movlw	0
  4082   00117E  6E2D               	movwf	(___fldiv@new_exp+1)^0,c
  4083   001180  0E00               	movlw	0
  4084   001182  6E2C               	movwf	___fldiv@new_exp^0,c
  4085   001184  0E00               	movlw	0
  4086   001186  6E1B               	movwf	___fldiv@b^0,c
  4087   001188  0E00               	movlw	0
  4088   00118A  6E1C               	movwf	(___fldiv@b+1)^0,c
  4089   00118C  0E00               	movlw	0
  4090   00118E  6E1D               	movwf	(___fldiv@b+2)^0,c
  4091   001190  0E00               	movlw	0
  4092   001192  6E1E               	movwf	(___fldiv@b+3)^0,c
  4093   001194  0E00               	movlw	0
  4094   001196  6E2B               	movwf	___fldiv@sign^0,c
  4095   001198                     l2821:
  4096   001198  C02C  F032         	movff	___fldiv@new_exp,___fldiv@bexp
  4097   00119C  A032               	btfss	___fldiv@bexp^0,0,c
  4098   00119E  EFD3  F008         	goto	u2471
  4099   0011A2  EFD5  F008         	goto	u2470
  4100   0011A6                     u2471:
  4101   0011A6  EFD8  F008         	goto	l2827
  4102   0011AA                     u2470:
  4103   0011AA  8E1D               	bsf	(___fldiv@b+2)^0,7,c
  4104   0011AC  EFD9  F008         	goto	l2829
  4105   0011B0                     l2827:
  4106   0011B0  9E1D               	bcf	(___fldiv@b+2)^0,7,c
  4107   0011B2                     l2829:
  4108   0011B2  90D8               	bcf	status,0,c
  4109   0011B4  3032               	rrcf	___fldiv@bexp^0,w,c
  4110   0011B6  6E1E               	movwf	(___fldiv@b+3)^0,c
  4111   0011B8  EF8F  F007         	goto	l2743
  4112   0011BC                     l873:
  4113   0011BC  0012               	return		;funcret
  4114   0011BE                     __end_of___fldiv:
  4115                           	callstack 0
  4116                           
  4117 ;; *************** function _color_click_init *****************
  4118 ;; Defined at:
  4119 ;;		line 5 in file "color.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;		None
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;		None
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;Total ram usage:        1 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; Hardware stack levels required when called: 5
  4140 ;; This function calls:
  4141 ;;		_I2C_2_Master_Init
  4142 ;;		_color_writetoaddr
  4143 ;; This function is called by:
  4144 ;;		_main
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text25
  4149   0021CC                     __ptext25:
  4150                           	callstack 0
  4151   0021CC                     _color_click_init:
  4152                           	callstack 25
  4153   0021CC                     
  4154                           ;color.c: 8:     I2C_2_Master_Init();
  4155   0021CC  EC49  F011         	call	_I2C_2_Master_Init	;wreg free
  4156   0021D0                     
  4157                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  4158   0021D0  0E01               	movlw	1
  4159   0021D2  6E07               	movwf	color_writetoaddr@value^0,c
  4160   0021D4  0E00               	movlw	0
  4161   0021D6  EC9C  F011         	call	_color_writetoaddr
  4162   0021DA                     
  4163                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4164   0021DA  0E3F               	movlw	63
  4165   0021DC  6E09               	movwf	??_color_click_init^0,c
  4166   0021DE  0E55               	movlw	85
  4167   0021E0                     u2697:
  4168   0021E0  2EE8               	decfsz	wreg,f,c
  4169   0021E2  D7FE               	bra	u2697
  4170   0021E4  2E09               	decfsz	??_color_click_init^0,f,c
  4171   0021E6  D7FC               	bra	u2697
  4172   0021E8  F000               	nop	
  4173   0021EA                     
  4174                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  4175   0021EA  0E03               	movlw	3
  4176   0021EC  6E07               	movwf	color_writetoaddr@value^0,c
  4177   0021EE  0E00               	movlw	0
  4178   0021F0  EC9C  F011         	call	_color_writetoaddr
  4179   0021F4                     
  4180                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  4181   0021F4  0ED5               	movlw	213
  4182   0021F6  6E07               	movwf	color_writetoaddr@value^0,c
  4183   0021F8  0E01               	movlw	1
  4184   0021FA  EC9C  F011         	call	_color_writetoaddr
  4185   0021FE                     
  4186                           ;color.c: 20:     LATGbits.LATG1=0;
  4187   0021FE  927F               	bcf	127,1,c	;volatile
  4188   002200                     
  4189                           ;color.c: 21:     LATAbits.LATA4=0;
  4190   002200  9879               	bcf	121,4,c	;volatile
  4191   002202                     
  4192                           ;color.c: 22:     LATFbits.LATF7=0;
  4193   002202  9E7E               	bcf	126,7,c	;volatile
  4194   002204                     
  4195                           ;color.c: 23:     TRISGbits.TRISG1=0;
  4196   002204  9287               	bcf	135,1,c	;volatile
  4197   002206                     
  4198                           ;color.c: 24:     TRISAbits.TRISA4 = 0;
  4199   002206  9881               	bcf	129,4,c	;volatile
  4200   002208                     
  4201                           ;color.c: 25:     TRISFbits.TRISF7 = 0;
  4202   002208  9E86               	bcf	134,7,c	;volatile
  4203   00220A  0012               	return		;funcret
  4204   00220C                     __end_of_color_click_init:
  4205                           	callstack 0
  4206                           
  4207 ;; *************** function _color_writetoaddr *****************
  4208 ;; Defined at:
  4209 ;;		line 29 in file "color.c"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;  address         1    wreg     unsigned char 
  4212 ;;  value           1    6[COMRAM] unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  address         1    7[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4224 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4227 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4228 ;;Total ram usage:        2 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 4
  4231 ;; This function calls:
  4232 ;;		_I2C_2_Master_Start
  4233 ;;		_I2C_2_Master_Stop
  4234 ;;		_I2C_2_Master_Write
  4235 ;; This function is called by:
  4236 ;;		_color_click_init
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text26
  4241   002338                     __ptext26:
  4242                           	callstack 0
  4243   002338                     _color_writetoaddr:
  4244                           	callstack 25
  4245                           
  4246                           ;incstack = 0
  4247                           ;color_writetoaddr@address stored from wreg
  4248   002338  6E08               	movwf	color_writetoaddr@address^0,c
  4249   00233A                     
  4250                           ;color.c: 30:     I2C_2_Master_Start();
  4251   00233A  ECDE  F011         	call	_I2C_2_Master_Start	;wreg free
  4252                           
  4253                           ;color.c: 31:     I2C_2_Master_Write(0x52 | 0x00);
  4254   00233E  0E52               	movlw	82
  4255   002340  ECCE  F011         	call	_I2C_2_Master_Write
  4256                           
  4257                           ;color.c: 32:     I2C_2_Master_Write(0x80 | address);
  4258   002344  5008               	movf	color_writetoaddr@address^0,w,c
  4259   002346  0980               	iorlw	128
  4260   002348  ECCE  F011         	call	_I2C_2_Master_Write
  4261                           
  4262                           ;color.c: 33:     I2C_2_Master_Write(value);
  4263   00234C  5007               	movf	color_writetoaddr@value^0,w,c
  4264   00234E  ECCE  F011         	call	_I2C_2_Master_Write
  4265                           
  4266                           ;color.c: 34:     I2C_2_Master_Stop();
  4267   002352  ECD9  F011         	call	_I2C_2_Master_Stop	;wreg free
  4268   002356  0012               	return		;funcret
  4269   002358                     __end_of_color_writetoaddr:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _I2C_2_Master_Write *****************
  4273 ;; Defined at:
  4274 ;;		line 45 in file "i2c.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  data_byte       1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  data_byte       1    5[COMRAM] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, status,2, status,0, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used: 1
  4294 ;; Hardware stack levels required when called: 3
  4295 ;; This function calls:
  4296 ;;		_I2C_2_Master_Idle
  4297 ;; This function is called by:
  4298 ;;		_color_writetoaddr
  4299 ;;		_color_read_lum
  4300 ;;		_color_read_Red
  4301 ;;		_color_read_Green
  4302 ;;		_color_read_Blue
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text27
  4307   00239C                     __ptext27:
  4308                           	callstack 0
  4309   00239C                     _I2C_2_Master_Write:
  4310                           	callstack 25
  4311                           
  4312                           ;incstack = 0
  4313                           ;I2C_2_Master_Write@data_byte stored from wreg
  4314   00239C  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  4315   00239E                     
  4316                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4317   00239E  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  4318   0023A2                     
  4319                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4320   0023A2  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4321   0023A6  0012               	return		;funcret
  4322   0023A8                     __end_of_I2C_2_Master_Write:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _I2C_2_Master_Stop *****************
  4326 ;; Defined at:
  4327 ;;		line 39 in file "i2c.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 3
  4348 ;; This function calls:
  4349 ;;		_I2C_2_Master_Idle
  4350 ;; This function is called by:
  4351 ;;		_color_writetoaddr
  4352 ;;		_color_read_lum
  4353 ;;		_color_read_Red
  4354 ;;		_color_read_Green
  4355 ;;		_color_read_Blue
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text28
  4360   0023B2                     __ptext28:
  4361                           	callstack 0
  4362   0023B2                     _I2C_2_Master_Stop:
  4363                           	callstack 25
  4364   0023B2                     
  4365                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4366   0023B2  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  4367   0023B6                     
  4368                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4369   0023B6  010E               	movlb	14	; () banked
  4370   0023B8  85DA               	bsf	218,2,b	;volatile
  4371   0023BA                     
  4372                           ; BSR set to: 14
  4373   0023BA  0012               	return		;funcret
  4374   0023BC                     __end_of_I2C_2_Master_Stop:
  4375                           	callstack 0
  4376                           
  4377 ;; *************** function _I2C_2_Master_Start *****************
  4378 ;; Defined at:
  4379 ;;		line 27 in file "i2c.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used: 1
  4399 ;; Hardware stack levels required when called: 3
  4400 ;; This function calls:
  4401 ;;		_I2C_2_Master_Idle
  4402 ;; This function is called by:
  4403 ;;		_color_writetoaddr
  4404 ;;		_color_read_lum
  4405 ;;		_color_read_Red
  4406 ;;		_color_read_Green
  4407 ;;		_color_read_Blue
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text29
  4412   0023BC                     __ptext29:
  4413                           	callstack 0
  4414   0023BC                     _I2C_2_Master_Start:
  4415                           	callstack 25
  4416   0023BC                     
  4417                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4418   0023BC  EC88  F011         	call	_I2C_2_Master_Idle	;wreg free
  4419   0023C0                     
  4420                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4421   0023C0  010E               	movlb	14	; () banked
  4422   0023C2  81DA               	bsf	218,0,b	;volatile
  4423   0023C4                     
  4424                           ; BSR set to: 14
  4425   0023C4  0012               	return		;funcret
  4426   0023C6                     __end_of_I2C_2_Master_Start:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _I2C_2_Master_Idle *****************
  4430 ;; Defined at:
  4431 ;;		line 22 in file "i2c.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 2
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_I2C_2_Master_Start
  4456 ;;		_I2C_2_Master_RepStart
  4457 ;;		_I2C_2_Master_Stop
  4458 ;;		_I2C_2_Master_Write
  4459 ;;		_I2C_2_Master_Read
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text30
  4464   002310                     __ptext30:
  4465                           	callstack 0
  4466   002310                     _I2C_2_Master_Idle:
  4467                           	callstack 25
  4468   002310                     l86:
  4469   002310  010E               	movlb	14	; () banked
  4470   002312  B5D8               	btfsc	216,2,b	;volatile
  4471   002314  EF8E  F011         	goto	u2051
  4472   002318  EF90  F011         	goto	u2050
  4473   00231C                     u2051:
  4474   00231C  EF88  F011         	goto	l86
  4475   002320                     u2050:
  4476   002320                     
  4477                           ; BSR set to: 14
  4478   002320  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4479   002324  0E1F               	movlw	31
  4480   002326  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  4481   002328  A4D8               	btfss	status,2,c
  4482   00232A  EF99  F011         	goto	u2061
  4483   00232E  EF9B  F011         	goto	u2060
  4484   002332                     u2061:
  4485   002332  EF88  F011         	goto	l86
  4486   002336                     u2060:
  4487   002336                     
  4488                           ; BSR set to: 14
  4489   002336  0012               	return		;funcret
  4490   002338                     __end_of_I2C_2_Master_Idle:
  4491                           	callstack 0
  4492                           
  4493 ;; *************** function _I2C_2_Master_Init *****************
  4494 ;; Defined at:
  4495 ;;		line 4 in file "i2c.c"
  4496 ;; Parameters:    Size  Location     Type
  4497 ;;		None
  4498 ;; Auto vars:     Size  Location     Type
  4499 ;;		None
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      void 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;Total ram usage:        0 bytes
  4514 ;; Hardware stack levels used: 1
  4515 ;; Hardware stack levels required when called: 2
  4516 ;; This function calls:
  4517 ;;		Nothing
  4518 ;; This function is called by:
  4519 ;;		_color_click_init
  4520 ;;		_main
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text31
  4525   002292                     __ptext31:
  4526                           	callstack 0
  4527   002292                     _I2C_2_Master_Init:
  4528                           	callstack 27
  4529   002292                     
  4530                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4531   002292  010E               	movlb	14	; () banked
  4532   002294  51D9               	movf	217,w,b	;volatile
  4533   002296  0BF0               	andlw	-16
  4534   002298  0908               	iorlw	8
  4535   00229A  6FD9               	movwf	217,b	;volatile
  4536   00229C                     
  4537                           ; BSR set to: 14
  4538                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4539   00229C  8BD9               	bsf	217,5,b	;volatile
  4540                           
  4541                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4542   00229E  0E9F               	movlw	159
  4543   0022A0  6FD6               	movwf	214,b	;volatile
  4544   0022A2                     
  4545                           ; BSR set to: 14
  4546                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4547   0022A2  8A84               	bsf	132,5,c	;volatile
  4548   0022A4                     
  4549                           ; BSR set to: 14
  4550                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4551   0022A4  8C84               	bsf	132,6,c	;volatile
  4552   0022A6                     
  4553                           ; BSR set to: 14
  4554                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4555   0022A6  9BA7               	bcf	167,5,b	;volatile
  4556   0022A8                     
  4557                           ; BSR set to: 14
  4558                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4559   0022A8  9DA7               	bcf	167,6,b	;volatile
  4560                           
  4561                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4562   0022AA  0E1D               	movlw	29
  4563   0022AC  6F1D               	movwf	29,b	;volatile
  4564                           
  4565                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4566   0022AE  0E1E               	movlw	30
  4567   0022B0  6F1C               	movwf	28,b	;volatile
  4568                           
  4569                           ;i2c.c: 18:   RD5PPS=0x1C;
  4570   0022B2  0E1C               	movlw	28
  4571   0022B4  6F6F               	movwf	111,b	;volatile
  4572                           
  4573                           ;i2c.c: 19:   RD6PPS=0x1B;
  4574   0022B6  0E1B               	movlw	27
  4575   0022B8  6F70               	movwf	112,b	;volatile
  4576   0022BA                     
  4577                           ; BSR set to: 14
  4578   0022BA  0012               	return		;funcret
  4579   0022BC                     __end_of_I2C_2_Master_Init:
  4580                           	callstack 0
  4581                           
  4582 ;; *************** function ___awdiv *****************
  4583 ;; Defined at:
  4584 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  dividend        2    4[COMRAM] int 
  4587 ;;  divisor         2    6[COMRAM] int 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;  quotient        2   10[COMRAM] int 
  4590 ;;  sign            1    9[COMRAM] unsigned char 
  4591 ;;  counter         1    8[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  2    4[COMRAM] int 
  4594 ;; Registers used:
  4595 ;;		wreg, status,2, status,0
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;Total ram usage:        8 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 2
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_main
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text32
  4616   001D44                     __ptext32:
  4617                           	callstack 0
  4618   001D44                     ___awdiv:
  4619                           	callstack 28
  4620   001D44  0E00               	movlw	0
  4621   001D46  6E0A               	movwf	___awdiv@sign^0,c
  4622   001D48  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  4623   001D4A  EFAB  F00E         	goto	u2610
  4624   001D4E  EFA9  F00E         	goto	u2611
  4625   001D52                     u2611:
  4626   001D52  EFB1  F00E         	goto	l2981
  4627   001D56                     u2610:
  4628   001D56  6C07               	negf	___awdiv@divisor^0,c
  4629   001D58  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  4630   001D5A  B0D8               	btfsc	status,0,c
  4631   001D5C  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  4632   001D5E  0E01               	movlw	1
  4633   001D60  6E0A               	movwf	___awdiv@sign^0,c
  4634   001D62                     l2981:
  4635   001D62  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  4636   001D64  EFB8  F00E         	goto	u2620
  4637   001D68  EFB6  F00E         	goto	u2621
  4638   001D6C                     u2621:
  4639   001D6C  EFBE  F00E         	goto	l2987
  4640   001D70                     u2620:
  4641   001D70  6C05               	negf	___awdiv@dividend^0,c
  4642   001D72  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  4643   001D74  B0D8               	btfsc	status,0,c
  4644   001D76  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  4645   001D78  0E01               	movlw	1
  4646   001D7A  1A0A               	xorwf	___awdiv@sign^0,f,c
  4647   001D7C                     l2987:
  4648   001D7C  0E00               	movlw	0
  4649   001D7E  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  4650   001D80  0E00               	movlw	0
  4651   001D82  6E0B               	movwf	___awdiv@quotient^0,c
  4652   001D84  5007               	movf	___awdiv@divisor^0,w,c
  4653   001D86  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  4654   001D88  B4D8               	btfsc	status,2,c
  4655   001D8A  EFC9  F00E         	goto	u2631
  4656   001D8E  EFCB  F00E         	goto	u2630
  4657   001D92                     u2631:
  4658   001D92  EFF3  F00E         	goto	l3009
  4659   001D96                     u2630:
  4660   001D96  0E01               	movlw	1
  4661   001D98  6E09               	movwf	___awdiv@counter^0,c
  4662   001D9A  EFD3  F00E         	goto	l2995
  4663   001D9E                     l2993:
  4664   001D9E  90D8               	bcf	status,0,c
  4665   001DA0  3607               	rlcf	___awdiv@divisor^0,f,c
  4666   001DA2  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  4667   001DA4  2A09               	incf	___awdiv@counter^0,f,c
  4668   001DA6                     l2995:
  4669   001DA6  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  4670   001DA8  EFD8  F00E         	goto	u2641
  4671   001DAC  EFDA  F00E         	goto	u2640
  4672   001DB0                     u2641:
  4673   001DB0  EFCF  F00E         	goto	l2993
  4674   001DB4                     u2640:
  4675   001DB4                     l2997:
  4676   001DB4  90D8               	bcf	status,0,c
  4677   001DB6  360B               	rlcf	___awdiv@quotient^0,f,c
  4678   001DB8  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  4679   001DBA  5007               	movf	___awdiv@divisor^0,w,c
  4680   001DBC  5C05               	subwf	___awdiv@dividend^0,w,c
  4681   001DBE  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4682   001DC0  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  4683   001DC2  A0D8               	btfss	status,0,c
  4684   001DC4  EFE6  F00E         	goto	u2651
  4685   001DC8  EFE8  F00E         	goto	u2650
  4686   001DCC                     u2651:
  4687   001DCC  EFED  F00E         	goto	l3005
  4688   001DD0                     u2650:
  4689   001DD0  5007               	movf	___awdiv@divisor^0,w,c
  4690   001DD2  5E05               	subwf	___awdiv@dividend^0,f,c
  4691   001DD4  5008               	movf	(___awdiv@divisor+1)^0,w,c
  4692   001DD6  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  4693   001DD8  800B               	bsf	___awdiv@quotient^0,0,c
  4694   001DDA                     l3005:
  4695   001DDA  90D8               	bcf	status,0,c
  4696   001DDC  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  4697   001DDE  3207               	rrcf	___awdiv@divisor^0,f,c
  4698   001DE0  2E09               	decfsz	___awdiv@counter^0,f,c
  4699   001DE2  EFDA  F00E         	goto	l2997
  4700   001DE6                     l3009:
  4701   001DE6  500A               	movf	___awdiv@sign^0,w,c
  4702   001DE8  B4D8               	btfsc	status,2,c
  4703   001DEA  EFF9  F00E         	goto	u2661
  4704   001DEE  EFFB  F00E         	goto	u2660
  4705   001DF2                     u2661:
  4706   001DF2  EFFF  F00E         	goto	l3013
  4707   001DF6                     u2660:
  4708   001DF6  6C0B               	negf	___awdiv@quotient^0,c
  4709   001DF8  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  4710   001DFA  B0D8               	btfsc	status,0,c
  4711   001DFC  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  4712   001DFE                     l3013:
  4713   001DFE  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  4714   001E02  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  4715   001E06  0012               	return		;funcret
  4716   001E08                     __end_of___awdiv:
  4717                           	callstack 0
  4718                           
  4719 ;; *************** function _TxBufferedString *****************
  4720 ;; Defined at:
  4721 ;;		line 85 in file "serial.c"
  4722 ;; Parameters:    Size  Location     Type
  4723 ;;  string          2    5[COMRAM] PTR unsigned char 
  4724 ;;		 -> main@buf(50), 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      void 
  4729 ;; Registers used:
  4730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4736 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4739 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4740 ;;Total ram usage:        2 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 3
  4743 ;; This function calls:
  4744 ;;		_putCharToTxBuf
  4745 ;; This function is called by:
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text33
  4751   00220C                     __ptext33:
  4752                           	callstack 0
  4753   00220C                     _TxBufferedString:
  4754                           	callstack 27
  4755   00220C                     
  4756                           ;serial.c: 86:  while (*string!=0){
  4757   00220C  EF11  F011         	goto	l2949
  4758   002210                     l2945:
  4759                           
  4760                           ;serial.c: 87:         putCharToTxBuf(*string++);
  4761   002210  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  4762   002214  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4763   002218  50DF               	movf	indf2,w,c
  4764   00221A  EC5E  F011         	call	_putCharToTxBuf
  4765   00221E  4A06               	infsnz	TxBufferedString@string^0,f,c
  4766   002220  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  4767   002222                     l2949:
  4768                           
  4769                           ;serial.c: 86:  while (*string!=0){
  4770   002222  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  4771   002226  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4772   00222A  50DF               	movf	indf2,w,c
  4773   00222C  A4D8               	btfss	status,2,c
  4774   00222E  EF1B  F011         	goto	u2591
  4775   002232  EF1D  F011         	goto	u2590
  4776   002236                     u2591:
  4777   002236  EF08  F011         	goto	l2945
  4778   00223A                     u2590:
  4779   00223A  0012               	return		;funcret
  4780   00223C                     __end_of_TxBufferedString:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _putCharToTxBuf *****************
  4784 ;; Defined at:
  4785 ;;		line 72 in file "serial.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  byte            1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  byte            1    4[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:        1 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 2
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_TxBufferedString
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text34
  4814   0022BC                     __ptext34:
  4815                           	callstack 0
  4816   0022BC                     _putCharToTxBuf:
  4817                           	callstack 27
  4818                           
  4819                           ;incstack = 0
  4820                           ;putCharToTxBuf@byte stored from wreg
  4821   0022BC  6E05               	movwf	putCharToTxBuf@byte^0,c
  4822   0022BE                     
  4823                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4824   0022BE  0E3B               	movlw	59
  4825   0022C0  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4826   0022C2  EF65  F011         	goto	u2221
  4827   0022C6  EF67  F011         	goto	u2220
  4828   0022CA                     u2221:
  4829   0022CA  EF69  F011         	goto	l2691
  4830   0022CE                     u2220:
  4831   0022CE  0E00               	movlw	0
  4832   0022D0  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  4833   0022D2                     l2691:
  4834                           
  4835                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4836   0022D2  0E00               	movlw	low _EUSART4TXbuf
  4837   0022D4  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4838   0022D6  6ED9               	movwf	fsr2l,c
  4839   0022D8  6ADA               	clrf	fsr2h,c
  4840   0022DA  0E01               	movlw	high _EUSART4TXbuf
  4841   0022DC  22DA               	addwfc	fsr2h,f,c
  4842   0022DE  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  4843   0022E2  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4844   0022E4  0012               	return		;funcret
  4845   0022E6                     __end_of_putCharToTxBuf:
  4846                           	callstack 0
  4847                           
  4848 ;; *************** function _Interrupts_init *****************
  4849 ;; Defined at:
  4850 ;;		line 10 in file "interrupts.c"
  4851 ;; Parameters:    Size  Location     Type
  4852 ;;		None
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;		None
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		None
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;Total ram usage:        0 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 2
  4871 ;; This function calls:
  4872 ;;		Nothing
  4873 ;; This function is called by:
  4874 ;;		_main
  4875 ;; This function uses a non-reentrant model
  4876 ;;
  4877                           
  4878                           	psect	text35
  4879   00238E                     __ptext35:
  4880                           	callstack 0
  4881   00238E                     _Interrupts_init:
  4882                           	callstack 28
  4883   00238E                     
  4884                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  4885   00238E  9AF2               	bcf	242,5,c	;volatile
  4886                           
  4887                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  4888   002390  010E               	movlb	14	; () banked
  4889   002392  812B               	bsf	43,0,b	;volatile
  4890                           
  4891                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  4892   002394  8CF2               	bsf	242,6,c	;volatile
  4893                           
  4894                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  4895   002396  8EF2               	bsf	242,7,c	;volatile
  4896                           
  4897                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  4898   002398  872D               	bsf	45,3,b	;volatile
  4899   00239A                     
  4900                           ; BSR set to: 14
  4901   00239A  0012               	return		;funcret
  4902   00239C                     __end_of_Interrupts_init:
  4903                           	callstack 0
  4904                           
  4905 ;; *************** function _HighISR *****************
  4906 ;; Defined at:
  4907 ;;		line 25 in file "interrupts.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;		None
  4910 ;; Auto vars:     Size  Location     Type
  4911 ;;		None
  4912 ;; Return value:  Size  Location     Type
  4913 ;;                  1    wreg      void 
  4914 ;; Registers used:
  4915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4916 ;; Tracked objects:
  4917 ;;		On entry : 0/0
  4918 ;;		On exit  : 0/0
  4919 ;;		Unchanged: 0/0
  4920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;Total ram usage:        2 bytes
  4926 ;; Hardware stack levels used: 1
  4927 ;; Hardware stack levels required when called: 1
  4928 ;; This function calls:
  4929 ;;		_getCharFromTxBuf
  4930 ;;		_putCharToRxBuf
  4931 ;; This function is called by:
  4932 ;;		Interrupt level 2
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           	psect	intcode
  4937   000008                     __pintcode:
  4938                           	callstack 0
  4939   000008                     _HighISR:
  4940                           	callstack 21
  4941                           
  4942                           ; BSR set to: 14
  4943                           ;incstack = 0
  4944   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4945   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  4946   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  4947   000012                     
  4948                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  4949   000012  010E               	movlb	14	; () banked
  4950   000014  A537               	btfss	55,2,b	;volatile
  4951   000016  EF0F  F000         	goto	i2u181_41
  4952   00001A  EF11  F000         	goto	i2u181_40
  4953   00001E                     i2u181_41:
  4954   00001E  EF15  F000         	goto	i2l233
  4955   000022                     i2u181_40:
  4956   000022                     
  4957                           ; BSR set to: 14
  4958                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  4959   000022  EC1E  F011         	call	_getCharFromTxBuf	;wreg free
  4960   000026  010E               	movlb	14	; () banked
  4961   000028  6FE4               	movwf	228,b	;volatile
  4962   00002A                     i2l233:
  4963                           
  4964                           ; BSR set to: 14
  4965                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  4966   00002A  A737               	btfss	55,3,b	;volatile
  4967   00002C  EF1A  F000         	goto	i2u182_41
  4968   000030  EF1C  F000         	goto	i2u182_40
  4969   000034                     i2u182_41:
  4970   000034  EF1F  F000         	goto	i2l235
  4971   000038                     i2u182_40:
  4972   000038                     
  4973                           ; BSR set to: 14
  4974                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  4975   000038  51E3               	movf	227,w,b	;volatile
  4976   00003A  EC73  F011         	call	_putCharToRxBuf
  4977   00003E                     i2l235:
  4978   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  4979   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  4980   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4981   000048  0011               	retfie		f
  4982   00004A                     __end_of_HighISR:
  4983                           	callstack 0
  4984                           
  4985 ;; *************** function _putCharToRxBuf *****************
  4986 ;; Defined at:
  4987 ;;		line 52 in file "serial.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  byte            1    wreg     unsigned char 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  byte            1    0[COMRAM] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  1    wreg      void 
  4994 ;; Registers used:
  4995 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5005 ;;Total ram usage:        1 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_HighISR
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text37
  5015   0022E6                     __ptext37:
  5016                           	callstack 0
  5017   0022E6                     _putCharToRxBuf:
  5018                           	callstack 21
  5019                           
  5020                           ;incstack = 0
  5021                           ;putCharToRxBuf@byte stored from wreg
  5022   0022E6  6E01               	movwf	putCharToRxBuf@byte^0,c
  5023   0022E8                     
  5024                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  5025   0022E8  0E13               	movlw	19
  5026   0022EA  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  5027   0022EC  EF7A  F011         	goto	i2u170_41
  5028   0022F0  EF7C  F011         	goto	i2u170_40
  5029   0022F4                     i2u170_41:
  5030   0022F4  EF7E  F011         	goto	i2l2283
  5031   0022F8                     i2u170_40:
  5032   0022F8  0E00               	movlw	0
  5033   0022FA  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  5034   0022FC                     i2l2283:
  5035                           
  5036                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  5037   0022FC  0E60               	movlw	low _EUSART4RXbuf
  5038   0022FE  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  5039   002300  6ED9               	movwf	fsr2l,c
  5040   002302  6ADA               	clrf	fsr2h,c
  5041   002304  0E00               	movlw	high _EUSART4RXbuf
  5042   002306  22DA               	addwfc	fsr2h,f,c
  5043   002308  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  5044   00230C  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  5045   00230E  0012               	return		;funcret
  5046   002310                     __end_of_putCharToRxBuf:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function _getCharFromTxBuf *****************
  5050 ;; Defined at:
  5051 ;;		line 66 in file "serial.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;		None
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;		None
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      unsigned char 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;Total ram usage:        2 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_HighISR
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text38
  5079   00223C                     __ptext38:
  5080                           	callstack 0
  5081   00223C                     _getCharFromTxBuf:
  5082                           	callstack 21
  5083   00223C                     
  5084                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  5085   00223C  0E3B               	movlw	59
  5086   00223E  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  5087   002240  EF24  F011         	goto	i2u171_41
  5088   002244  EF26  F011         	goto	i2u171_40
  5089   002248                     i2u171_41:
  5090   002248  EF28  F011         	goto	i2l2291
  5091   00224C                     i2u171_40:
  5092   00224C  0E00               	movlw	0
  5093   00224E  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  5094   002250                     i2l2291:
  5095                           
  5096                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  5097   002250  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  5098   002252  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  5099   002254  6E01               	movwf	??_getCharFromTxBuf^0,c
  5100   002256  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  5101   002258  0E00               	movlw	low _EUSART4TXbuf
  5102   00225A  2401               	addwf	??_getCharFromTxBuf^0,w,c
  5103   00225C  6ED9               	movwf	fsr2l,c
  5104   00225E  0E01               	movlw	high _EUSART4TXbuf
  5105   002260  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  5106   002262  6EDA               	movwf	fsr2h,c
  5107   002264  50DF               	movf	indf2,w,c
  5108   002266  0012               	return		;funcret
  5109   002268                     __end_of_getCharFromTxBuf:
  5110                           	callstack 0
  5111                           
  5112                           	psect	rparam
  5113   000000                     
  5114                           	psect	temp
  5115   00005B                     btemp:
  5116                           	callstack 0
  5117   00005B                     	ds	1
  5118   000000                     int$flags	set	btemp
  5119   000000                     wtemp8	set	btemp+1
  5120   000000                     ttemp5	set	btemp+1
  5121   000000                     ttemp6	set	btemp+4
  5122   000000                     ttemp7	set	btemp+8
  5123                           
  5124                           	psect	idloc
  5125                           
  5126                           ;Config register IDLOC0 @ 0x200000
  5127                           ;	unspecified, using default values
  5128   200000                     	org	2097152
  5129   200000  0FFF               	dw	4095
  5130                           
  5131                           ;Config register IDLOC1 @ 0x200002
  5132                           ;	unspecified, using default values
  5133   200002                     	org	2097154
  5134   200002  0FFF               	dw	4095
  5135                           
  5136                           ;Config register IDLOC2 @ 0x200004
  5137                           ;	unspecified, using default values
  5138   200004                     	org	2097156
  5139   200004  0FFF               	dw	4095
  5140                           
  5141                           ;Config register IDLOC3 @ 0x200006
  5142                           ;	unspecified, using default values
  5143   200006                     	org	2097158
  5144   200006  0FFF               	dw	4095
  5145                           
  5146                           ;Config register IDLOC4 @ 0x200008
  5147                           ;	unspecified, using default values
  5148   200008                     	org	2097160
  5149   200008  0FFF               	dw	4095
  5150                           
  5151                           ;Config register IDLOC5 @ 0x20000A
  5152                           ;	unspecified, using default values
  5153   20000A                     	org	2097162
  5154   20000A  0FFF               	dw	4095
  5155                           
  5156                           ;Config register IDLOC6 @ 0x20000C
  5157                           ;	unspecified, using default values
  5158   20000C                     	org	2097164
  5159   20000C  0FFF               	dw	4095
  5160                           
  5161                           ;Config register IDLOC7 @ 0x20000E
  5162                           ;	unspecified, using default values
  5163   20000E                     	org	2097166
  5164   20000E  0FFF               	dw	4095
  5165                           
  5166                           	psect	config
  5167                           
  5168                           ;Config register CONFIG1L @ 0x300000
  5169                           ;	External Oscillator mode Selection bits
  5170                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5171                           ;	Power-up default value for COSC bits
  5172                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5173   300000                     	org	3145728
  5174   300000  AA                 	db	170
  5175                           
  5176                           ;Config register CONFIG1H @ 0x300001
  5177                           ;	unspecified, using default values
  5178                           ;	Clock Out Enable bit
  5179                           ;	CLKOUTEN = 0x1, unprogrammed default
  5180                           ;	Clock Switch Enable bit
  5181                           ;	CSWEN = 0x1, unprogrammed default
  5182                           ;	Fail-Safe Clock Monitor Enable bit
  5183                           ;	FCMEN = 0x1, unprogrammed default
  5184   300001                     	org	3145729
  5185   300001  FF                 	db	255
  5186                           
  5187                           ;Config register CONFIG2L @ 0x300002
  5188                           ;	unspecified, using default values
  5189                           ;	Master Clear Enable bit
  5190                           ;	MCLRE = 0x1, unprogrammed default
  5191                           ;	Power-up Timer Enable bit
  5192                           ;	PWRTE = 0x1, unprogrammed default
  5193                           ;	Low-power BOR enable bit
  5194                           ;	LPBOREN = 0x1, unprogrammed default
  5195                           ;	Brown-out Reset Enable bits
  5196                           ;	BOREN = 0x3, unprogrammed default
  5197   300002                     	org	3145730
  5198   300002  FF                 	db	255
  5199                           
  5200                           ;Config register CONFIG2H @ 0x300003
  5201                           ;	unspecified, using default values
  5202                           ;	Brown Out Reset Voltage selection bits
  5203                           ;	BORV = 0x3, unprogrammed default
  5204                           ;	ZCD Disable bit
  5205                           ;	ZCD = 0x1, unprogrammed default
  5206                           ;	PPSLOCK bit One-Way Set Enable bit
  5207                           ;	PPS1WAY = 0x1, unprogrammed default
  5208                           ;	Stack Full/Underflow Reset Enable bit
  5209                           ;	STVREN = 0x1, unprogrammed default
  5210                           ;	Debugger Enable bit
  5211                           ;	DEBUG = 0x1, unprogrammed default
  5212                           ;	Extended Instruction Set Enable bit
  5213                           ;	XINST = 0x1, unprogrammed default
  5214   300003                     	org	3145731
  5215   300003  FF                 	db	255
  5216                           
  5217                           ;Config register CONFIG3L @ 0x300004
  5218                           ;	WDT Period Select bits
  5219                           ;	WDTCPS = 0x1F, unprogrammed default
  5220                           ;	WDT operating mode
  5221                           ;	WDTE = OFF, WDT Disabled
  5222   300004                     	org	3145732
  5223   300004  9F                 	db	159
  5224                           
  5225                           ;Config register CONFIG3H @ 0x300005
  5226                           ;	unspecified, using default values
  5227                           ;	WDT Window Select bits
  5228                           ;	WDTCWS = 0x7, unprogrammed default
  5229                           ;	WDT input clock selector
  5230                           ;	WDTCCS = 0x7, unprogrammed default
  5231   300005                     	org	3145733
  5232   300005  FF                 	db	255
  5233                           
  5234                           ;Config register CONFIG4L @ 0x300006
  5235                           ;	unspecified, using default values
  5236                           ;	Write Protection Block 0
  5237                           ;	WRT0 = 0x1, unprogrammed default
  5238                           ;	Write Protection Block 1
  5239                           ;	WRT1 = 0x1, unprogrammed default
  5240                           ;	Write Protection Block 2
  5241                           ;	WRT2 = 0x1, unprogrammed default
  5242                           ;	Write Protection Block 3
  5243                           ;	WRT3 = 0x1, unprogrammed default
  5244                           ;	Write Protection Block 3
  5245                           ;	WRT4 = 0x1, unprogrammed default
  5246                           ;	Write Protection Block 3
  5247                           ;	WRT5 = 0x1, unprogrammed default
  5248                           ;	Write Protection Block 3
  5249                           ;	WRT6 = 0x1, unprogrammed default
  5250                           ;	Write Protection Block 3
  5251                           ;	WRT7 = 0x1, unprogrammed default
  5252   300006                     	org	3145734
  5253   300006  FF                 	db	255
  5254                           
  5255                           ;Config register CONFIG4H @ 0x300007
  5256                           ;	unspecified, using default values
  5257                           ;	Configuration Register Write Protection bit
  5258                           ;	WRTC = 0x1, unprogrammed default
  5259                           ;	Boot Block Write Protection bit
  5260                           ;	WRTB = 0x1, unprogrammed default
  5261                           ;	Data EEPROM Write Protection bit
  5262                           ;	WRTD = 0x1, unprogrammed default
  5263                           ;	Scanner Enable bit
  5264                           ;	SCANE = 0x1, unprogrammed default
  5265                           ;	Low Voltage Programming Enable bit
  5266                           ;	LVP = 0x1, unprogrammed default
  5267   300007                     	org	3145735
  5268   300007  FF                 	db	255
  5269                           
  5270                           ;Config register CONFIG5L @ 0x300008
  5271                           ;	unspecified, using default values
  5272                           ;	UserNVM Program Memory Code Protection bit
  5273                           ;	CP = 0x1, unprogrammed default
  5274                           ;	DataNVM Memory Code Protection bit
  5275                           ;	CPD = 0x1, unprogrammed default
  5276   300008                     	org	3145736
  5277   300008  FF                 	db	255
  5278                           
  5279                           ;Config register CONFIG5H @ 0x300009
  5280                           ;	unspecified, using default values
  5281   300009                     	org	3145737
  5282   300009  FF                 	db	255
  5283                           
  5284                           ;Config register CONFIG6L @ 0x30000A
  5285                           ;	unspecified, using default values
  5286                           ;	Table Read Protection Block 0
  5287                           ;	EBTR0 = 0x1, unprogrammed default
  5288                           ;	Table Read Protection Block 1
  5289                           ;	EBTR1 = 0x1, unprogrammed default
  5290                           ;	Table Read Protection Block 2
  5291                           ;	EBTR2 = 0x1, unprogrammed default
  5292                           ;	Table Read Protection Block 3
  5293                           ;	EBTR3 = 0x1, unprogrammed default
  5294                           ;	Table Read Protection Block 4
  5295                           ;	EBTR4 = 0x1, unprogrammed default
  5296                           ;	Table Read Protection Block 5
  5297                           ;	EBTR5 = 0x1, unprogrammed default
  5298                           ;	Table Read Protection Block 6
  5299                           ;	EBTR6 = 0x1, unprogrammed default
  5300                           ;	Table Read Protection Block 7
  5301                           ;	EBTR7 = 0x1, unprogrammed default
  5302   30000A                     	org	3145738
  5303   30000A  FF                 	db	255
  5304                           
  5305                           ;Config register CONFIG6H @ 0x30000B
  5306                           ;	unspecified, using default values
  5307                           ;	Boot Block Table Read Protection bit
  5308                           ;	EBTRB = 0x1, unprogrammed default
  5309   30000B                     	org	3145739
  5310   30000B  FF                 	db	255
  5311                           tosu	equ	0xFFF
  5312                           tosh	equ	0xFFE
  5313                           tosl	equ	0xFFD
  5314                           stkptr	equ	0xFFC
  5315                           pclatu	equ	0xFFB
  5316                           pclath	equ	0xFFA
  5317                           pcl	equ	0xFF9
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           indf0	equ	0xFEF
  5325                           postinc0	equ	0xFEE
  5326                           postdec0	equ	0xFED
  5327                           preinc0	equ	0xFEC
  5328                           plusw0	equ	0xFEB
  5329                           fsr0h	equ	0xFEA
  5330                           fsr0l	equ	0xFE9
  5331                           wreg	equ	0xFE8
  5332                           indf1	equ	0xFE7
  5333                           postinc1	equ	0xFE6
  5334                           postdec1	equ	0xFE5
  5335                           preinc1	equ	0xFE4
  5336                           plusw1	equ	0xFE3
  5337                           fsr1h	equ	0xFE2
  5338                           fsr1l	equ	0xFE1
  5339                           bsr	equ	0xFE0
  5340                           indf2	equ	0xFDF
  5341                           postinc2	equ	0xFDE
  5342                           postdec2	equ	0xFDD
  5343                           preinc2	equ	0xFDC
  5344                           plusw2	equ	0xFDB
  5345                           fsr2h	equ	0xFDA
  5346                           fsr2l	equ	0xFD9
  5347                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    0
    Data        1
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     86      90
    BANK0           160     33     111
    BANK1           256     50     110
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1403$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1350$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1350$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK1[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK0[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    ___xxtofl->___awdiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0   14613
                                             31 BANK0      2     2      0
                                              0 BANK1     50    50      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                            ___awdiv
                           ___xxtofl
                   _color_click_init
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    7316
                                              6 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6830
                                             84 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    6369
                                             66 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4802
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     870
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          12     8      4    4064
                                             51 COMRAM    12     8      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                             12 COMRAM    14    10      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2363
                                             26 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     186
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   ___awdiv
   ___xxtofl
     ___awdiv (ARG)
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fldiv
       ___xxtofl (ARG)
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     32      6E       7       43.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     21      6F       5       69.4%
BITBIGSFRllhh       8F      0       0      38        0.0%
BITBIGSFRhhl        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllllh     36      0       0      42        0.0%
BITBIGSFRllllh      2D      0       0      41        0.0%
BITBIGSFRlllllh     2A      0       0      44        0.0%
BITBIGSFRllllll     26      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllllh      D      0       0      47        0.0%
BITBIGSFRlllllh      C      0       0      43        0.0%
BITBIGSFRlllllh      9      0       0      45        0.0%
BITBIGSFRllhlll      8      0       0      39        0.0%
BITBIGSFRllllll      6      0       0      48        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRhlhl        2      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRhlhh        1      0       0      34        0.0%
BITBIGSFRlllh        1      0       0      40        0.0%
BITBIGSFRhll         1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     137      50        0.0%
DATA                 0      0     137       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Feb 27 01:03:08 2023

               _color_read_Red 1FD2                   ___fldiv@aexp 0033                   ___fldiv@bexp 0032  
               _color_read_lum 1F82                   ___fldiv@sign 002B                _color_read_Blue 2072  
                           l31 220A                             l40 2020                             l34 2356  
                           l43 2070                             l52 18EA                             l37 1FD0  
                           l46 20C0                             l49 1EDE                             l83 22BA  
                           l92 23C4                             l86 2310                             l95 23B0  
                           l89 2336                             l98 23BA                   ___awdiv@sign 000A  
             _color_read_Green 2022                readColours@vals 0010              ??_Interrupts_init 0005  
                          l101 23A6                            l104 218A                            l143 2374  
                          l227 239A                            l180 22E4                            l405 1774  
                          l183 238C                            l522 1E06                            l194 2290  
                          l418 1A4E                            l189 223A                            l960 1584  
                          l873 11BC                            l953 1528                            l946 1490  
                          l875 101C                            l884 1062                            l949 15EC  
                          l886 10DA                            l878 0FE0                            l887 10C8  
                          l991 1E2A                            l969 1F30                            l995 1E80  
                          _abs 218C                            _pad 1E08                            _rel 0099  
                          wreg 000FE8                           l1000 124A                           l1002 1252  
                         l1003 1298                           l1021 1B9C                           l1014 1438  
                         l1031 21C2                           l1034 21CA                           l1027 1F80  
                         ?_abs 0017                           l1046 1D42                           l1054 2148  
                         l3001 1DD0                           l1057 23C6                           l3011 1DF6  
                         l3003 1DD8                           l3013 1DFE                           l3005 1DDA  
                         l3021 1BA6                           l3007 1DE0                           l3031 1BD6  
                         l3023 1BAA                           l3009 1DE6                           l3041 1C60  
                         l3033 1BEA                           l3025 1BAE                           l3017 1B9E  
                         l3035 1C16                           l3027 1BB0                           l3019 1BA2  
                         l2501 19C6                           l2421 1CC6                           l2413 1C7A  
                         l3037 1C4C                           l3029 1BCA                           l2511 1A2E  
                         l2503 19E6                           l2423 1CFC                           l2415 1C8C  
                         l2431 2124                           l3039 1C5C                           l2601 23A8  
                         l2441 1620                           l2505 19F8                           l2417 1C9E  
                         l2433 2128                           l2521 1E36                           l2611 2160  
                         l2603 23AC                           l2451 1662                           l2443 1624  
                         l2435 15EE                           l2507 19FE                           l2531 21A6  
                         l2419 1CA8                           l2427 2106                           l2523 1E4A  
                         l2515 1E08                           l2533 2310                           l2701 0E30  
                         l2613 2186                           l2605 214C                           l2461 16BC  
                         l2453 1680                           l2445 1632                           l2437 15F2  
                         l2509 1A0E                           l2429 2112                           l2525 1E4E  
                         l2517 1E16                           l2541 11F2                           l2621 1A74  
                         l2535 2320                           l2711 0E70                           l2703 0E3E  
                         l2615 2188                           l2607 2150                           l2463 16EA  
                         l2455 1688                           l2471 1724                           l2447 1652  
                         l2439 1600                           l2527 1E6C                           l2519 1E22  
                         l2551 126A                           l2543 1202                           l2631 1AC0  
                         l2623 1A82                           l2801 10C0                           l2721 0E96  
                         l2713 0E72                           l2705 0E40                           l2609 2158  
                         l2473 1734                           l2465 170A                           l2457 169C  
                         l2449 1656                           l2481 18F0                           l2529 218C  
                         l2561 12A0                           l2553 1270                           l2545 1222  
                         l2537 11BE                           l2633 1ADC                           l2625 1A90  
                         l2651 229C                           l2811 112E                           l2731 0ED6  
                         l2723 0EA4                           l2707 0E50                           l2715 0E7A  
                         l2475 1754                           l2467 170C                           l2459 16AA  
                         l2491 1950                           l2483 18FE                           l2571 133C  
                         l2563 12A8                           l2555 1280                           l2547 123E  
                         l2539 11DE                           l2635 1B32                           l2627 1A94  
                         l2643 1B74                           l2619 1A50                           l2653 22A2  
                         l2661 233A                           l2901 21F4                           l2821 1198  
                         l2805 10EA                           l2813 1132                           l2741 0F16  
                         l2733 0ED8                           l2725 0EA6                           l2717 0E8A  
                         l2709 0E60                           l2469 171E                           l2493 196E  
                         l2485 191E                           l2581 1402                           l2565 12AE  
                         l2573 13A0                           l2557 128C                           l2549 125A  
                         l2629 1AA4                           l2655 22A4                           l2591 23C0  
                         l2911 2206                           l2903 21FE                           l2823 119C  
                         l2815 114C                           l2807 10F6                           l2751 0F46  
                         l2743 0F1E                           l2727 0EB6                           l2735 0EE0  
                         l2719 0E90                           l2671 2018                           l2663 1F82  
                         l2495 1976                           l2487 1922                           l2479 18EC  
                         l2583 1408                           l2575 13BA                           l2567 1330  
                         l2559 1294                           l2639 1B62                           l2657 22A6  
                         l2649 2292                           l2593 239E                           l2913 2208  
                         l2905 2200                           l2825 11AA                           l2817 1162  
                         l2809 1104                           l2761 0F84                           l2753 0F46  
                         l2745 0F22                           l2737 0EF0                           l2729 0EC6  
                         l2841 145A                           l2921 179A                           l2681 2072  
                         l2665 1FC8                           l2497 198A                           l2489 1930  
                         l2585 1418                           l2577 13D8                           l2569 1336  
                         l2691 22D2                           l2659 22A8                           l2595 23A2  
                         l2907 2202                           l2827 11B0                           l2819 117C  
                         l2771 0FD0                           l2763 0F94                           l2739 0F06  
                         l2851 14D2                           l2843 14A0                           l2923 17AE  
                         l2931 2358                           l2683 20B8                           l2675 2022  
                         l2915 1E82                           l2499 1998                           l2579 13F2  
                         l2693 22E2                           l2589 23BC                           l2597 23B2  
                         l2909 2204                           l2829 11B2                           l2781 101A  
                         l2773 0FDE                           l2765 0FA4                           l2757 0F5A  
                         l2749 0F36                           l2861 155A                           l2853 14DE  
                         l2845 14B6                           l2837 143C                           l2925 17C2  
                         l2917 1776                           l2941 2372                           l2933 2362  
                         l2677 2068                           l2669 1FD2                           ?_pad 0015  
                         l2687 22BE                           l2943 220C                           l2599 23B6  
                         l2791 1060                           l2783 102C                           l2775 0FEA  
                         l2767 0FAC                           l2759 0F74                           l2871 1598  
                         l2863 1566                           l2855 1510                           l2839 144C  
                         l2927 1822                           l2919 1786                           l2935 2364  
                         l2695 2376                           l2951 2268                           l2689 22CE  
                         l2945 2210                           l2785 1042                           l2793 1072  
                         l2777 1008                           l2769 0FBC                           l2873 15BC  
                         l2865 1574                           l2857 1512                           l2849 14CA  
                         l2929 1886                           l2937 236E                           l2953 227C  
                         l2961 1EE0                           l2947 221E                           l2795 1080  
                         l2787 1048                           l2779 100A                           l2699 0E24  
                         l2875 15CC                           l2867 1592                           l2859 151E  
                         l2939 2370                           l2955 2280                           l2883 1F32  
                         l2963 1EF2                           l2949 2222                           l2981 1D62  
                         l2973 1D44                           l2893 21CC                           l2797 1084  
                         l2789 1052                           l2877 15DA                           l2869 1594  
                         l2957 228A                           l2885 1F3E                           l2965 1EFA  
                         l2959 238E                           l2991 1D96                           l2983 1D70  
                         l2975 1D48                           l2895 21D0                           l2799 1092  
                         l2879 15DC                           l2887 1F5A                           l2967 1F02  
                         l2993 1D9E                           l2985 1D78                           l2977 1D56  
                         l2897 21DA                           l2889 1F76                           l2969 1F1E  
                         l2995 1DA6                           l2987 1D7C                           l2979 1D5E  
                         l2899 21EA                           l2997 1DB4                           l2989 1D84  
                         l2999 1DBA                           STR_1 0E01                           u2000 19C6  
                         u2001 19C2                           u2010 1A0E                           u2011 1A0A  
                         u2020 1E16                           u2100 123E                           u2021 1E12  
                         u2101 123A                           u2030 1E6C                           u2110 126A  
                         u2031 1E68                           u2111 1266                           u2040 21A6  
                         u2120 1280                           u2200 1AC0                           u2041 21A2  
                         u2121 127C                           u2201 1ABC                           u2050 2320  
                         u2130 13BA                           u2210 1ADC                           u2051 231C  
                         u2131 13B6                           u2211 1AD8                           u2220 22CE  
                         u2060 2336                           u2300 0EC6                           u2140 13D8  
                         u2221 22CA                           u2061 2332                           u2301 0EC2  
                         u2141 13D4                           u2310 0F06                           u2230 238A  
                         u2150 13F2                           u2070 11EE                           u2311 0F02  
                         u2231 2384                           u2151 13EE                           u2071 11E8  
                         u2400 1092                           u2320 0F46                           u2240 238C  
                         u2160 1402                           u2080 11F0                   _BAUD4CONbits 000EE9  
                         u2401 108E                           u2321 0F42                           u2161 13FE  
                         u2410 10C0                           u2330 0FBC                           u2250 0E3E  
                         u2170 2174                           u2090 1202                           u2411 10BC  
                         u2331 0FB8                           u2251 0E3A                           u2171 216C  
                         u2091 11FE                           u2420 10D6                           u2340 0FDE  
                         u2260 0E50                           u2500 14B6                           u2421 10D2  
                         u2341 0FDA                           u2261 0E4C                           u2501 14B2  
                         u2430 10EA                           u2350 1008                           u2270 0E60  
                         u2510 150C                           u2190 1A74                           u2431 10E6  
                         u2351 1004                           u2271 0E5C                           u2511 1508  
                         u2191 1A70                           u2440 1104                           u2360 102C  
                         u2280 0EA4                           u2520 1556                           u2600 227C  
                         u2441 1100                           u2361 1028                           u2281 0EA0  
                         u2521 1552                           u2601 2278                           u2610 1D56  
                         u2450 114C                           u2370 1042                           u2290 0EB6  
                         u2530 1574                           u2611 1D52                           u2451 1148  
                         u2371 103E                           u2291 0EB2                           u2531 1570  
                         u2620 1D70                           u2460 117C                           u2380 1060  
                         u2540 1584                           u2188 2176                           u1900 1632  
                         u2621 1D6C                           u2461 1178                           u2381 105C  
                         u2541 1580                           u1901 162E                           u2630 1D96  
                         u2470 11AA                           u2390 1080                           u2550 1592  
                         u2631 1D92                           u2471 11A6                           u2391 107C  
                         u2551 158E                           u1911 165C                           u2640 1DB4  
                         u2560 15CC                           u2480 144C                           u1920 1680  
                         u1840 1C8C                           u2641 1DB0                           u2561 15C8  
                         u2481 1448                           u1921 167C                           u1841 1C88  
                         u2650 1DD0                           u2570 15DA                           u2490 145A  
                         u1930 16AA                           u1850 1C9E                           u2651 1DCC  
                         u2571 15D6                           u2491 1456                           u1931 16A6  
                         u1851 1C9A                           u2660 1DF6                           u1940 16EA  
                         u1860 1CC6                           u2580 1F76                           u2661 1DF2  
                         u1941 16E6                           u1861 1CC2                           u2581 1F72  
                         u2590 223A                           u1950 1734                           u1870 1CFC  
                         u2670 1C72                           u2591 2236                           u1951 1730  
                         u1871 1CF8                           u2671 1C6E                           u1960 18FE  
                         u1880 2148                           u1961 18FA                           u1881 2144  
                         u1890 1600                           u1970 1930                           u1891 15FC  
                         u1971 192C                           u1980 196E                           u1981 196A  
                         u1990 1998                           u1991 1994                           u2687 1BBC  
                         u2697 21E0                           abs@a 0017                           _dbuf 0079  
                         _main 1B9E                           _dtoa 11BE                           _prec 0076  
                         _vals 00A5                           pad@i 001C                           pad@p 0019  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001E                           fsr2l 000FD9  
                         btemp 005B                           start 004A                ___fldiv@new_exp 002C  
       __end_of_color_read_Red 2022                __end_of_HighISR 004A         __end_of_color_read_lum 1FD2  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
                 ?_readColours 0010                __end_of___aodiv 1776                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 1A50                __end_of___fldiv 11BE  
              __end_of___awdiv 1E08                    colour_rel@B 003C                    colour_rel@G 003A  
                  colour_rel@L 003E                    colour_rel@R 0038                ___awdiv@divisor 0007  
                        i2l233 002A                          i2l235 003E                          i2l176 2266  
                        i2l169 230E                ___awdiv@counter 0009                   vfpfcnvrt@fmt 0045  
   __end_of_I2C_2_Master_Start 23C6     __end_of_I2C_2_Master_Write 23A8                          _flags 0078  
                        _fputc 1C7A                          _fputs 2106                          pad@fp 0015  
                        _width 0074                          _putch 23C6                          dtoa@d 0022  
                        dtoa@i 0041                          dtoa@n 0038                          dtoa@p 0034  
                        dtoa@s 0040                          dtoa@w 0036                          tablat 000FF5  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 1F32  
      __end_of_color_read_Blue 20C2          _I2C_2_Master_RepStart 23A8             putCharToRxBuf@byte 0001  
              ?_color_read_Red 0009                ?_color_read_lum 0009                __initialization 20C2  
                 __end_of_main 1C7A                   __end_of_dtoa 143A             putCharToTxBuf@byte 0005  
                       ??_main 00CC                         ??_dtoa 002A                  __activetblptr 000001  
                       ?_fputc 0005                         ?_fputs 000E               ___awdiv@dividend 0005  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                         i2l2281 22F8  
                       i2l2291 2250                         i2l2283 22FC                         i2l2285 230C  
                       i2l2381 0022                         i2l2287 223C                         i2l2279 22E8  
                       i2l2289 224C                         i2l2385 0038                         i2l2379 0012  
                    ??_HighISR 0003       __end_of_color_click_init 220C                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 15EE                   vfprintf@cfmt 0055  
             _getCharFromTxBuf 223C                      ??___aodiv 0015                      ??___aomod 0015  
                    ??___fldiv 0023                      ??___awdiv 0009                         clear_0 20DA  
                       clear_1 20E6               ___awdiv@quotient 000B                         isa$std 000001  
                       pad@buf 0017                         dtoa@fp 0020                         fputc@c 0005  
            ?_TxBufferedString 0006                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0008  
                       putch@c 0001               __end_of_vfprintf 1F82                      ??_sprintf 0057  
                 ___xxtofl@arg 0017                   ___xxtofl@exp 0016                   ___xxtofl@val 000D  
        __end_of_isDataInTxBuf 238E                     __accesstop 0060        __end_of__initialization 20F4  
     __end_of_color_read_Green 2072         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0009                _Interrupts_init 238E                 __pcstackCOMRAM 0001  
                 __pidataBANK0 23C8                  __end_of_fputc 1D44                  __end_of_fputs 214A  
                __end_of_putch 23C8                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 0060                     __pbssBANK1 0100  
            _color_writetoaddr 2338             ?_color_writetoaddr 0007            ??_color_writetoaddr 0008  
                colour_rel@rel 0036                      ?___xxtofl 000D                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 1776        __end_of_Interrupts_init 239C         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 2358             _I2C_2_Master_Start 23BC                     _initUSART4 2358  
           _I2C_2_Master_Write 239C                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 15EE                        ___aomod 18EC  
                      ___fldiv 0E24                        ___awdiv 1D44            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00AD                   __psmallconst 0E00  
                      __pcinit 20C2                        __ramtop 0E00                        __ptext0 1B9E  
                      __ptext1 1EE0                        __ptext2 1F32                        __ptext3 1A50  
                      __ptext4 11BE                        __ptext5 1E08                        __ptext6 2106  
                      __ptext7 1C7A                        __ptext8 23C6                        __ptext9 218C  
                   ??___xxtofl 0011                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 2268  
            color_read_lum@tmp 000E                        main@buf 013C                        _sprintf 1EE0  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 20F4  
            __end_of_sendTxBuf 2292                        fputc@fp 0007                        fputs@fp 0010  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 1B9E  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0055  
                ___xxtofl@sign 0015                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 002E  
                  ___fldiv@rem 0027       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
                  ?_colour_rel 0034               ?_Interrupts_init 0001                   _EUSART4RXbuf 0060  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0009                    ?_initUSART4 0001  
           ??_color_read_Green 000B                    vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0053  
                  vfpfcnvrt@fp 0043            start_initialization 20C2                    __end_of_abs 21CC  
                  __end_of_pad 1E82                  _TxBufWriteCnt 0058            color_read_Green@tmp 000E  
                  vfprintf@fmt 00AF                  ??_readColours 0012                 _putCharToRxBuf 22E6  
               _putCharToTxBuf 22BC                    __pdataBANK0 00CE                      ___fldiv@a 001F  
                    ___fldiv@b 001B                    __pbssCOMRAM 0057                  __pcstackBANK0 00AD  
                __pcstackBANK1 013C               ___aodiv@dividend 0005                       ?_HighISR 0001  
                    _dtoa$1431 0032         __end_of_putCharToRxBuf 2310         __end_of_putCharToTxBuf 22E6  
                    __pintcode 0008                       ?___aodiv 0005                       ?___aomod 0005  
                     ?___fldiv 001B                       ?___awdiv 0005               ___aodiv@quotient 0017  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00            __end_of_readColours 1EE0              _I2C_2_Master_Idle 2310  
            _I2C_2_Master_Init 2292              _I2C_2_Master_Read 214A              _I2C_2_Master_Stop 23B2  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 00B3  
            ?_getCharFromTxBuf 0001                 colour_rel@vals 0034             ??_getCharFromTxBuf 0001  
          ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 2376  
                     _LATFbits 000F7E               _TxBufferedString 220C                       _LATGbits 000F7F  
                    _sendTxBuf 2268                       _PIE2bits 000E2B                       _PIE4bits 000E2D  
                     i2u170_40 22F8                       i2u170_41 22F4                       i2u171_40 224C  
                     i2u171_41 2248                       i2u181_40 0022                       i2u181_41 001E  
                     i2u182_40 0038                       i2u182_41 0034                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 1A50      __end_of_I2C_2_Master_Idle 2338  
    __end_of_I2C_2_Master_Init 22BC      __end_of_I2C_2_Master_Read 218C      __end_of_I2C_2_Master_Stop 23BC  
                     _DataFlag 00CE    I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B  
                 _TxBufReadCnt 0057                   ??_colour_rel 0038                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 23B2             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 00B1  
                     __Lrparam 0000                     vfprintf@fp 00AD                   __Lsmallconst 0E00  
                  _readColours 1E82                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015             __end_of_colour_rel 18EC                     _ANSELDbits 000EA7  
                   sprintf@fmt 00B5                       ___xxtofl 143A             __end_of_initUSART4 2376  
                     __ptext10 18EC                       __ptext11 15EE                       __ptext20 214A  
                     __ptext12 2268                       __ptext21 2358                       __ptext13 2376  
                     __ptext30 2310                       __ptext22 1776                       __ptext14 1E82  
                     __ptext31 2292                       __ptext23 143A                       __ptext15 1F82  
                     __ptext32 1D44                       __ptext24 0E24                       __ptext16 1FD2  
                     __ptext33 220C                       __ptext25 21CC                       __ptext17 2022  
                     __ptext34 22BC                       __ptext26 2338                       __ptext18 2072  
                     __ptext35 238E                       __ptext27 239C                       __ptext19 23A8  
                     __ptext28 23B2                       __ptext37 22E6                       __ptext29 23BC  
                     __ptext38 223C                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 1F32               ___aomod@dividend 0005                     _INTCONbits 000FF2  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 00BF  
                  ??_sendTxBuf 0005                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 21CC       __end_of_TxBufferedString 223C  
                     sprintf@f 00C1                       sprintf@s 00B3                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005                   ___aomod@sign 0016  
