

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Mar 12 13:12:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    89                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    90                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    91                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    92                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    93                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    94   000000                     
    95                           ; Generated 06/04/2022 GMT
    96                           ; 
    97                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution. Publication is not required when
   111                           ;        this file is used in an embedded application.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC18F67K40 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129   000000                     
   130                           	psect	idataBANK0
   131   004E94                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _Turn45Delay
   135   004E94  00DC               	dw	220
   136                           
   137                           ;initializer for _DataFlag
   138   004E96  01                 	db	1
   139                           
   140                           	psect	idataBANK1
   141   004E8E                     __pidataBANK1:
   142                           	callstack 0
   143                           
   144                           ;initializer for _high_threshold
   145   004E8E  03E8               	dw	1000
   146                           
   147                           ;initializer for _RunOneBlockTime
   148   004E90  07D0               	dw	2000
   149                           
   150                           ;initializer for _power
   151   004E92  001E               	dw	30
   152   000000                     _TRISEbits	set	3973
   153   000000                     _LATHbits	set	3968
   154   000000                     _TX4REG	set	3812
   155   000000                     _RC4STAbits	set	3815
   156   000000                     _SP4BRGH	set	3814
   157   000000                     _SSP2CON2bits	set	3802
   158   000000                     _RX4PPS	set	3605
   159   000000                     _SSP2CLKPPS	set	3612
   160   000000                     _SSP2DATPPS	set	3613
   161   000000                     _ANSELDbits	set	3751
   162   000000                     _SSP2ADD	set	3798
   163   000000                     _SSP2CON1bits	set	3801
   164   000000                     _LATAbits	set	3961
   165   000000                     _LATFbits	set	3966
   166   000000                     _LATGbits	set	3967
   167   000000                     _TRISAbits	set	3969
   168   000000                     _TRISGbits	set	3975
   169   000000                     _PORTFbits	set	3982
   170   000000                     _TRISHbits	set	3976
   171   000000                     _CCPR2H	set	4006
   172   000000                     _CCPR1H	set	4010
   173   000000                     _TRISCbits	set	3971
   174   000000                     _TRISDbits	set	3972
   175   000000                     _TRISFbits	set	3974
   176   000000                     _LATDbits	set	3964
   177   000000                     _RC4REG	set	3811
   178   000000                     _SP4BRGL	set	3813
   179   000000                     _TX4STAbits	set	3816
   180   000000                     _BAUD4CONbits	set	3817
   181   000000                     _SSP2CON2	set	3802
   182   000000                     _SSP2STAT	set	3800
   183   000000                     _ANSELFbits	set	3764
   184   000000                     _SSP2BUF	set	3797
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR4bits	set	3639
   187   000000                     _RC0PPS	set	3682
   188   000000                     _RD5PPS	set	3695
   189   000000                     _RE2PPS	set	3700
   190   000000                     _RD6PPS	set	3696
   191   000000                     _RC7PPS	set	3689
   192   000000                     _CCPR4H	set	3873
   193   000000                     _CCPR3H	set	3877
   194   000000                     _CCP1CONbits	set	4011
   195   000000                     _CCPTMRS0bits	set	4013
   196   000000                     _T2PR	set	4028
   197   000000                     _T2CONbits	set	4029
   198   000000                     _TMR0L	set	4051
   199   000000                     _TMR0H	set	4052
   200   000000                     _CCP2CONbits	set	4007
   201   000000                     _CCP3CONbits	set	3878
   202   000000                     _CCP4CONbits	set	3874
   203   000000                     _T0CON1bits	set	4054
   204   000000                     _T0CON0bits	set	4053
   205   000000                     _RE4PPS	set	3702
   206   000000                     _RG6PPS	set	3720
   207   000000                     _T2CLKCONbits	set	4031
   208   000000                     _T2HLTbits	set	4030
   209                           
   210                           	psect	smallconst
   211   000E00                     __psmallconst:
   212                           	callstack 0
   213   000E00  00                 	db	0
   214   000E01                     STR_1:
   215   000E01  72                 	db	114	;'r'
   216   000E02  65                 	db	101	;'e'
   217   000E03  64                 	db	100	;'d'
   218   000E04  3D                 	db	61	;'='
   219   000E05  25                 	db	37
   220   000E06  64                 	db	100	;'d'
   221   000E07  20                 	db	32
   222   000E08  67                 	db	103	;'g'
   223   000E09  72                 	db	114	;'r'
   224   000E0A  65                 	db	101	;'e'
   225   000E0B  65                 	db	101	;'e'
   226   000E0C  6E                 	db	110	;'n'
   227   000E0D  3D                 	db	61	;'='
   228   000E0E  25                 	db	37
   229   000E0F  64                 	db	100	;'d'
   230   000E10  20                 	db	32
   231   000E11  62                 	db	98	;'b'
   232   000E12  6C                 	db	108	;'l'
   233   000E13  75                 	db	117	;'u'
   234   000E14  65                 	db	101	;'e'
   235   000E15  3D                 	db	61	;'='
   236   000E16  25                 	db	37
   237   000E17  64                 	db	100	;'d'
   238   000E18  20                 	db	32
   239   000E19  74                 	db	116	;'t'
   240   000E1A  69                 	db	105	;'i'
   241   000E1B  6D                 	db	109	;'m'
   242   000E1C  65                 	db	101	;'e'
   243   000E1D  72                 	db	114	;'r'
   244   000E1E  3D                 	db	61	;'='
   245   000E1F  25                 	db	37
   246   000E20  64                 	db	100	;'d'
   247   000E21  20                 	db	32
   248   000E22  0D                 	db	13
   249   000E23  0A                 	db	10
   250   000E24  00                 	db	0
   251   000E25  00                 	db	0	; dummy byte at the end
   252   000000                     
   253                           ; #config settings
   254                           
   255                           	psect	cinit
   256   004302                     __pcinit:
   257                           	callstack 0
   258   004302                     start_initialization:
   259                           	callstack 0
   260   004302                     __initialization:
   261                           	callstack 0
   262                           
   263                           ; Initialize objects allocated to BANK1 (6 bytes)
   264                           ; load TBLPTR registers with __pidataBANK1
   265   004302  0E8E               	movlw	low __pidataBANK1
   266   004304  6EF6               	movwf	tblptrl,c
   267   004306  0E4E               	movlw	high __pidataBANK1
   268   004308  6EF7               	movwf	tblptrh,c
   269   00430A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   270   00430C  6EF8               	movwf	tblptru,c
   271   00430E  EE01  F0D1         	lfsr	0,__pdataBANK1
   272   004312  EE10 F006          	lfsr	1,6
   273   004316                     copy_data0:
   274   004316  0009               	tblrd		*+
   275   004318  CFF5 FFEE          	movff	tablat,postinc0
   276   00431C  50E5               	movf	postdec1,w,c
   277   00431E  50E1               	movf	fsr1l,w,c
   278   004320  E1FA               	bnz	copy_data0
   279                           
   280                           ; Initialize objects allocated to BANK0 (3 bytes)
   281                           ; load TBLPTR registers with __pidataBANK0
   282   004322  0E94               	movlw	low __pidataBANK0
   283   004324  6EF6               	movwf	tblptrl,c
   284   004326  0E4E               	movlw	high __pidataBANK0
   285   004328  6EF7               	movwf	tblptrh,c
   286   00432A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   287   00432C  6EF8               	movwf	tblptru,c
   288   00432E  0009               	tblrd		*+	;fetch initializer
   289   004330  CFF5 F0FC          	movff	tablat,__pdataBANK0
   290   004334  0009               	tblrd		*+	;fetch initializer
   291   004336  CFF5 F0FD          	movff	tablat,__pdataBANK0+1
   292   00433A  0009               	tblrd		*+	;fetch initializer
   293   00433C  CFF5 F0FE          	movff	tablat,__pdataBANK0+2
   294                           
   295                           ; Clear objects allocated to BANK2 (100 bytes)
   296   004340  EE02  F000         	lfsr	0,__pbssBANK2
   297   004344  0E64               	movlw	100
   298   004346                     clear_0:
   299   004346  6AEE               	clrf	postinc0,c
   300   004348  06E8               	decf	wreg,f,c
   301   00434A  E1FD               	bnz	clear_0
   302                           
   303                           ; Clear objects allocated to BANK1 (209 bytes)
   304   00434C  EE01  F000         	lfsr	0,__pbssBANK1
   305   004350  0ED1               	movlw	209
   306   004352                     clear_1:
   307   004352  6AEE               	clrf	postinc0,c
   308   004354  06E8               	decf	wreg,f,c
   309   004356  E1FD               	bnz	clear_1
   310                           
   311                           ; Clear objects allocated to BANK0 (12 bytes)
   312   004358  EE00  F0F0         	lfsr	0,__pbssBANK0
   313   00435C  0E0C               	movlw	12
   314   00435E                     clear_2:
   315   00435E  6AEE               	clrf	postinc0,c
   316   004360  06E8               	decf	wreg,f,c
   317   004362  E1FD               	bnz	clear_2
   318                           
   319                           ; Clear objects allocated to COMRAM (4 bytes)
   320   004364  6A5E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   321   004366  6A5D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   322   004368  6A5C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   323   00436A  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   324   00436C                     end_of_initialization:
   325                           	callstack 0
   326   00436C                     __end_of__initialization:
   327                           	callstack 0
   328   00436C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   329   00436E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   330   004370  0E00               	movlw	low (__Lsmallconst shr (0+16))
   331   004372  6EF8               	movwf	tblptru,c
   332   004374  0E0E               	movlw	high __Lsmallconst
   333   004376  6EF7               	movwf	tblptrh,c
   334   004378  0100               	movlb	0
   335   00437A  EF81  F00C         	goto	_main	;jump to C main() function
   336                           
   337                           	psect	bssCOMRAM
   338   00005B                     __pbssCOMRAM:
   339                           	callstack 0
   340   00005B                     _TxBufReadCnt:
   341                           	callstack 0
   342   00005B                     	ds	1
   343   00005C                     _TxBufWriteCnt:
   344                           	callstack 0
   345   00005C                     	ds	1
   346   00005D                     _RxBufReadCnt:
   347                           	callstack 0
   348   00005D                     	ds	1
   349   00005E                     _RxBufWriteCnt:
   350                           	callstack 0
   351   00005E                     	ds	1
   352                           
   353                           	psect	bssBANK0
   354   0000F0                     __pbssBANK0:
   355                           	callstack 0
   356   0000F0                     _move_count:
   357                           	callstack 0
   358   0000F0                     	ds	2
   359   0000F2                     _flags:
   360                           	callstack 0
   361   0000F2                     	ds	1
   362   0000F3                     _motorL:
   363                           	callstack 0
   364   0000F3                     	ds	9
   365                           
   366                           	psect	dataBANK0
   367   0000FC                     __pdataBANK0:
   368                           	callstack 0
   369   0000FC                     _Turn45Delay:
   370                           	callstack 0
   371   0000FC                     	ds	2
   372   0000FE                     _DataFlag:
   373                           	callstack 0
   374   0000FE                     	ds	1
   375                           
   376                           	psect	bssBANK1
   377   000100                     __pbssBANK1:
   378                           	callstack 0
   379   000100                     _EUSART4TXbuf:
   380                           	callstack 0
   381   000100                     	ds	60
   382   00013C                     _EUSART4RXbuf:
   383                           	callstack 0
   384   00013C                     	ds	20
   385   000150                     	ds	12
   386   00015C                     _width:
   387                           	callstack 0
   388   00015C                     	ds	2
   389   00015E                     _prec:
   390                           	callstack 0
   391   00015E                     	ds	2
   392   000160                     _low_threshold:
   393                           	callstack 0
   394   000160                     	ds	2
   395   000162                     _WayBack:
   396                           	callstack 0
   397   000162                     	ds	50
   398   000194                     _dbuf:
   399                           	callstack 0
   400   000194                     	ds	32
   401   0001B4                     _rel:
   402                           	callstack 0
   403   0001B4                     	ds	12
   404   0001C0                     _motorR:
   405                           	callstack 0
   406   0001C0                     	ds	9
   407   0001C9                     _vals:
   408                           	callstack 0
   409   0001C9                     	ds	8
   410                           
   411                           	psect	dataBANK1
   412   0001D1                     __pdataBANK1:
   413                           	callstack 0
   414   0001D1                     _high_threshold:
   415                           	callstack 0
   416   0001D1                     	ds	2
   417   0001D3                     _RunOneBlockTime:
   418                           	callstack 0
   419   0001D3                     	ds	2
   420   0001D5                     _power:
   421                           	callstack 0
   422   0001D5                     	ds	2
   423                           
   424                           	psect	bssBANK2
   425   000200                     __pbssBANK2:
   426                           	callstack 0
   427   000200                     _Time_forward:
   428                           	callstack 0
   429   000200                     	ds	100
   430                           
   431                           	psect	cstackBANK0
   432   000060                     __pcstackBANK0:
   433                           	callstack 0
   434   000060                     ?_sprintf:
   435                           	callstack 0
   436   000060                     sprintf@s:
   437                           	callstack 0
   438   000060                     _Colour_decider$3049:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x0
   442   000060                     	ds	2
   443   000062                     sprintf@fmt:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2
   447   000062                     	ds	2
   448   000064                     Colour_decider@Cmax_i:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x4
   452   000064                     	ds	2
   453   000066                     Colour_decider@RGB_col:
   454                           	callstack 0
   455                           
   456                           ; 12 bytes @ 0x6
   457   000066                     	ds	6
   458   00006C                     sprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xC
   462   00006C                     	ds	2
   463   00006E                     sprintf@f:
   464                           	callstack 0
   465                           
   466                           ; 11 bytes @ 0xE
   467   00006E                     	ds	4
   468   000072                     Colour_decider@Cmax:
   469                           	callstack 0
   470                           
   471                           ; 4 bytes @ 0x12
   472   000072                     	ds	4
   473   000076                     Colour_decider@Cmin:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x16
   477   000076                     	ds	4
   478   00007A                     Colour_decider@i:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x1A
   482   00007A                     	ds	2
   483   00007C                     Colour_decider@Hue:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x1C
   487   00007C                     	ds	4
   488   000080                     main@buf:
   489                           	callstack 0
   490                           
   491                           ; 100 bytes @ 0x20
   492   000080                     	ds	100
   493   0000E4                     main@temp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x84
   497   0000E4                     	ds	2
   498   0000E6                     main@temp_1304:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x86
   502   0000E6                     	ds	2
   503   0000E8                     main@run_flag:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x88
   507   0000E8                     	ds	2
   508   0000EA                     main@consecuitive:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x8A
   512   0000EA                     	ds	2
   513   0000EC                     main@colour:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x8C
   517   0000EC                     	ds	2
   518   0000EE                     main@prev_colour:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x8E
   522   0000EE                     	ds	2
   523                           
   524                           	psect	cstackCOMRAM
   525   000001                     __pcstackCOMRAM:
   526                           	callstack 0
   527   000001                     ??_I2C_2_Master_Idle:
   528   000001                     ?___wmul:
   529                           	callstack 0
   530   000001                     ?___fladd:
   531                           	callstack 0
   532   000001                     ?___xxtofl:
   533                           	callstack 0
   534   000001                     ?___aodiv:
   535                           	callstack 0
   536   000001                     ?___aomod:
   537                           	callstack 0
   538   000001                     sendCharSerial4@charToSend:
   539                           	callstack 0
   540   000001                     initDCmotorsPWM@PWMperiod:
   541                           	callstack 0
   542   000001                     TurnDelay@Turn45Delay:
   543                           	callstack 0
   544   000001                     getTMR0val@moving:
   545                           	callstack 0
   546   000001                     delayed_ms@time:
   547                           	callstack 0
   548   000001                     ___wmul@multiplier:
   549                           	callstack 0
   550   000001                     fputc@c:
   551                           	callstack 0
   552   000001                     ___flge@ff1:
   553                           	callstack 0
   554   000001                     ___fladd@b:
   555                           	callstack 0
   556   000001                     ___xxtofl@val:
   557                           	callstack 0
   558   000001                     ___aodiv@dividend:
   559                           	callstack 0
   560   000001                     ___aomod@dividend:
   561                           	callstack 0
   562                           
   563                           ; 8 bytes @ 0x0
   564   000001                     	ds	1
   565   000002                     ??_I2C_2_Master_Read:
   566   000002                     I2C_2_Master_Write@data_byte:
   567                           	callstack 0
   568   000002                     sendStringSerial4@string:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1
   572   000002                     	ds	1
   573   000003                     ??_delayed_ms:
   574   000003                     ??_TurnDelay:
   575   000003                     color_writetoaddr@value:
   576                           	callstack 0
   577   000003                     I2C_2_Master_Read@ack:
   578                           	callstack 0
   579   000003                     ___wmul@multiplicand:
   580                           	callstack 0
   581   000003                     fputc@fp:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585   000003                     	ds	1
   586   000004                     color_writetoaddr@address:
   587                           	callstack 0
   588   000004                     I2C_2_Master_Read@tmp:
   589                           	callstack 0
   590   000004                     delayed_ms@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x3
   594   000004                     	ds	1
   595   000005                     ??_fputc:
   596   000005                     ??_color_click_init:
   597   000005                     ??___xxtofl:
   598   000005                     ?_color_read_lum:
   599                           	callstack 0
   600   000005                     ?_color_read_Red:
   601                           	callstack 0
   602   000005                     ?_color_read_Green:
   603                           	callstack 0
   604   000005                     ?_color_read_Blue:
   605                           	callstack 0
   606   000005                     ___wmul@product:
   607                           	callstack 0
   608   000005                     ___flge@ff2:
   609                           	callstack 0
   610   000005                     ___fladd@a:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x4
   614   000005                     	ds	2
   615   000007                     ??_color_read_lum:
   616   000007                     ??_color_read_Red:
   617   000007                     ??_color_read_Green:
   618   000007                     ??_color_read_Blue:
   619   000007                     ?___lwdiv:
   620                           	callstack 0
   621   000007                     ___lwdiv@dividend:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x6
   625   000007                     	ds	2
   626   000009                     ??___fladd:
   627   000009                     ??___flge:
   628   000009                     ___xxtofl@sign:
   629                           	callstack 0
   630   000009                     ___lwdiv@divisor:
   631                           	callstack 0
   632   000009                     ___aodiv@divisor:
   633                           	callstack 0
   634   000009                     ___aomod@divisor:
   635                           	callstack 0
   636                           
   637                           ; 8 bytes @ 0x8
   638   000009                     	ds	1
   639   00000A                     ___xxtofl@exp:
   640                           	callstack 0
   641   00000A                     color_read_lum@tmp:
   642                           	callstack 0
   643   00000A                     color_read_Red@tmp:
   644                           	callstack 0
   645   00000A                     color_read_Green@tmp:
   646                           	callstack 0
   647   00000A                     color_read_Blue@tmp:
   648                           	callstack 0
   649   00000A                     fputs@s:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x9
   653   00000A                     	ds	1
   654   00000B                     ___lwdiv@quotient:
   655                           	callstack 0
   656   00000B                     ___xxtofl@arg:
   657                           	callstack 0
   658                           
   659                           ; 4 bytes @ 0xA
   660   00000B                     	ds	1
   661   00000C                     readColours@vals:
   662                           	callstack 0
   663   00000C                     fputs@fp:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0xB
   667   00000C                     	ds	1
   668   00000D                     ___lwdiv@counter:
   669                           	callstack 0
   670   00000D                     ___fladd@signs:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0xC
   674   00000D                     	ds	1
   675   00000E                     ___fladd@aexp:
   676                           	callstack 0
   677   00000E                     fputs@c:
   678                           	callstack 0
   679   00000E                     setMotorPWM@m:
   680                           	callstack 0
   681                           
   682                           ; 2 bytes @ 0xD
   683   00000E                     	ds	1
   684   00000F                     ___fladd@bexp:
   685                           	callstack 0
   686   00000F                     fputs@i:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xE
   690   00000F                     	ds	1
   691   000010                     ??_setMotorPWM:
   692   000010                     ___fladd@grs:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0xF
   696   000010                     	ds	1
   697   000011                     ?___flsub:
   698                           	callstack 0
   699   000011                     ___aodiv@counter:
   700                           	callstack 0
   701   000011                     ___aomod@counter:
   702                           	callstack 0
   703   000011                     pad@fp:
   704                           	callstack 0
   705   000011                     ___flsub@b:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x10
   709   000011                     	ds	1
   710   000012                     setMotorPWM@posDuty:
   711                           	callstack 0
   712   000012                     ___aodiv@sign:
   713                           	callstack 0
   714   000012                     ___aomod@sign:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x11
   718   000012                     	ds	1
   719   000013                     ?_abs:
   720                           	callstack 0
   721   000013                     setMotorPWM@negDuty:
   722                           	callstack 0
   723   000013                     pad@buf:
   724                           	callstack 0
   725   000013                     abs@a:
   726                           	callstack 0
   727   000013                     ___aodiv@quotient:
   728                           	callstack 0
   729                           
   730                           ; 8 bytes @ 0x12
   731   000013                     	ds	1
   732   000014                     stop@mL:
   733                           	callstack 0
   734   000014                     turnLeft@mL:
   735                           	callstack 0
   736   000014                     turnRight@mL:
   737                           	callstack 0
   738   000014                     fullSpeedAhead@mL:
   739                           	callstack 0
   740   000014                     timed_forward@mL:
   741                           	callstack 0
   742   000014                     fullSpeedBack@mL:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x13
   746   000014                     	ds	1
   747   000015                     ??_abs:
   748   000015                     pad@p:
   749                           	callstack 0
   750   000015                     ___flsub@a:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x14
   754   000015                     	ds	1
   755   000016                     stop@mR:
   756                           	callstack 0
   757   000016                     turnLeft@mR:
   758                           	callstack 0
   759   000016                     turnRight@mR:
   760                           	callstack 0
   761   000016                     fullSpeedAhead@mR:
   762                           	callstack 0
   763   000016                     timed_forward@mR:
   764                           	callstack 0
   765   000016                     fullSpeedBack@mR:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x15
   769   000016                     	ds	1
   770   000017                     ??_pad:
   771                           
   772                           ; 1 bytes @ 0x16
   773   000017                     	ds	1
   774   000018                     ??_fullSpeedAhead:
   775   000018                     ??_stop:
   776   000018                     ??_turnLeft:
   777   000018                     ??_turnRight:
   778   000018                     ??_fullSpeedBack:
   779   000018                     timed_forward@time:
   780                           	callstack 0
   781   000018                     pad@i:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785   000018                     	ds	1
   786   000019                     ?___fldiv:
   787                           	callstack 0
   788   000019                     ___fleq@ff1:
   789                           	callstack 0
   790   000019                     ___fldiv@b:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794   000019                     	ds	1
   795   00001A                     ??_timed_forward:
   796   00001A                     turnRight45@mL:
   797                           	callstack 0
   798   00001A                     turnLeft45@mL:
   799                           	callstack 0
   800   00001A                     reverseDetect@mL:
   801                           	callstack 0
   802   00001A                     reverseOneBlock@mL:
   803                           	callstack 0
   804   00001A                     ForwardOneBlock@mL:
   805                           	callstack 0
   806   00001A                     Forwardhalfblock@mL:
   807                           	callstack 0
   808   00001A                     RetryMove@mL:
   809                           	callstack 0
   810   00001A                     pad@w:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x19
   814   00001A                     	ds	2
   815   00001C                     turnRight45@mR:
   816                           	callstack 0
   817   00001C                     turnLeft45@mR:
   818                           	callstack 0
   819   00001C                     reverseDetect@mR:
   820                           	callstack 0
   821   00001C                     reverseOneBlock@mR:
   822                           	callstack 0
   823   00001C                     ForwardOneBlock@mR:
   824                           	callstack 0
   825   00001C                     Forwardhalfblock@mR:
   826                           	callstack 0
   827   00001C                     RetryMove@mR:
   828                           	callstack 0
   829   00001C                     dtoa@fp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x1B
   833   00001C                     	ds	1
   834   00001D                     ___fleq@ff2:
   835                           	callstack 0
   836   00001D                     ___fldiv@a:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x1C
   840   00001D                     	ds	1
   841   00001E                     ??_Forwardhalfblock:
   842   00001E                     ??_RetryMove:
   843   00001E                     ??_turnRight45:
   844   00001E                     ??_turnLeft45:
   845   00001E                     ??_reverseDetect:
   846   00001E                     ??_reverseOneBlock:
   847   00001E                     ??_ForwardOneBlock:
   848   00001E                     dtoa@d:
   849                           	callstack 0
   850                           
   851                           ; 8 bytes @ 0x1D
   852   00001E                     	ds	2
   853   000020                     RedMove@mL:
   854                           	callstack 0
   855   000020                     GreenMove@mL:
   856                           	callstack 0
   857   000020                     BlueMove@mL:
   858                           	callstack 0
   859   000020                     YellowMove@mL:
   860                           	callstack 0
   861   000020                     PinkMove@mL:
   862                           	callstack 0
   863   000020                     OrangeMove@mL:
   864                           	callstack 0
   865   000020                     LightBlueMove@mL:
   866                           	callstack 0
   867   000020                     ReverseYellow@mL:
   868                           	callstack 0
   869   000020                     ReversePink@mL:
   870                           	callstack 0
   871   000020                     turnCalibration@mL:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0x1F
   875   000020                     	ds	1
   876   000021                     ??___fldiv:
   877   000021                     ??___fleq:
   878                           
   879                           ; 1 bytes @ 0x20
   880   000021                     	ds	1
   881   000022                     RedMove@mR:
   882                           	callstack 0
   883   000022                     GreenMove@mR:
   884                           	callstack 0
   885   000022                     BlueMove@mR:
   886                           	callstack 0
   887   000022                     YellowMove@mR:
   888                           	callstack 0
   889   000022                     PinkMove@mR:
   890                           	callstack 0
   891   000022                     OrangeMove@mR:
   892                           	callstack 0
   893   000022                     LightBlueMove@mR:
   894                           	callstack 0
   895   000022                     ReverseYellow@mR:
   896                           	callstack 0
   897   000022                     ReversePink@mR:
   898                           	callstack 0
   899   000022                     turnCalibration@mR:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x21
   903   000022                     	ds	2
   904   000024                     ??_turnCalibration:
   905   000024                     go_Home@WayBack:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x23
   909   000024                     	ds	1
   910   000025                     ___fldiv@rem:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x24
   914   000025                     	ds	1
   915   000026                     ??_dtoa:
   916   000026                     go_Home@Time_forward:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x25
   920   000026                     	ds	2
   921   000028                     ??_go_Home:
   922                           
   923                           ; 1 bytes @ 0x27
   924   000028                     	ds	1
   925   000029                     ___fldiv@sign:
   926                           	callstack 0
   927                           
   928                           ; 1 bytes @ 0x28
   929   000029                     	ds	1
   930   00002A                     ___fldiv@new_exp:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x29
   934   00002A                     	ds	1
   935   00002B                     go_Home@i:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x2A
   939   00002B                     	ds	1
   940   00002C                     ___fldiv@grs:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x2B
   944   00002C                     	ds	2
   945   00002E                     _dtoa$2723:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x2D
   949   00002E                     	ds	2
   950   000030                     ___fldiv@bexp:
   951                           	callstack 0
   952   000030                     dtoa@p:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x2F
   956   000030                     	ds	1
   957   000031                     ___fldiv@aexp:
   958                           	callstack 0
   959                           
   960                           ; 1 bytes @ 0x30
   961   000031                     	ds	1
   962   000032                     ?___flmul:
   963                           	callstack 0
   964   000032                     colour_rel@vals:
   965                           	callstack 0
   966   000032                     dtoa@w:
   967                           	callstack 0
   968   000032                     ___flmul@b:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0x31
   972   000032                     	ds	2
   973   000034                     colour_rel@rel:
   974                           	callstack 0
   975   000034                     dtoa@n:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x33
   979   000034                     	ds	2
   980   000036                     colour_rel@L:
   981                           	callstack 0
   982   000036                     ___flmul@a:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x35
   986   000036                     	ds	4
   987   00003A                     ??___flmul:
   988   00003A                     _colour_rel$3047:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0x39
   992   00003A                     	ds	2
   993   00003C                     dtoa@i:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x3B
   997   00003C                     	ds	2
   998   00003E                     ___flmul@sign:
   999                           	callstack 0
  1000   00003E                     dtoa@s:
  1001                           	callstack 0
  1002   00003E                     _colour_rel$3048:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x3D
  1006   00003E                     	ds	1
  1007   00003F                     vfpfcnvrt@fp:
  1008                           	callstack 0
  1009   00003F                     ___flmul@grs:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x3E
  1013   00003F                     	ds	2
  1014   000041                     vfpfcnvrt@fmt:
  1015                           	callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x40
  1018   000041                     	ds	1
  1019   000042                     colour_rel@R:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x41
  1023   000042                     	ds	1
  1024   000043                     ___flmul@aexp:
  1025                           	callstack 0
  1026   000043                     vfpfcnvrt@ap:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x42
  1030   000043                     	ds	1
  1031   000044                     ___flmul@bexp:
  1032                           	callstack 0
  1033                           
  1034                           ; 1 bytes @ 0x43
  1035   000044                     	ds	1
  1036   000045                     ??_vfpfcnvrt:
  1037   000045                     ___flmul@prod:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x44
  1041   000045                     	ds	1
  1042   000046                     colour_rel@G:
  1043                           	callstack 0
  1044                           
  1045                           ; 4 bytes @ 0x45
  1046   000046                     	ds	1
  1047   000047                     vfpfcnvrt@convarg:
  1048                           	callstack 0
  1049                           
  1050                           ; 8 bytes @ 0x46
  1051   000047                     	ds	2
  1052   000049                     ___flmul@temp:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x48
  1056   000049                     	ds	1
  1057   00004A                     colour_rel@B:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x49
  1061   00004A                     	ds	1
  1062   00004B                     ?_Colour_decider:
  1063                           	callstack 0
  1064   00004B                     Colour_decider@vals:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x4A
  1068   00004B                     	ds	2
  1069   00004D                     Colour_decider@rel:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x4C
  1073   00004D                     	ds	2
  1074   00004F                     ??_Colour_decider:
  1075   00004F                     vfpfcnvrt@cp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x4E
  1079   00004F                     	ds	2
  1080   000051                     ?_vfprintf:
  1081                           	callstack 0
  1082   000051                     vfprintf@fp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x50
  1086   000051                     	ds	2
  1087   000053                     vfprintf@fmt:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x52
  1091   000053                     	ds	2
  1092   000055                     vfprintf@ap:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x54
  1096   000055                     	ds	2
  1097   000057                     vfprintf@cfmt:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x56
  1101   000057                     	ds	2
  1102   000059                     ??_main:
  1103                           
  1104                           ; 1 bytes @ 0x58
  1105   000059                     	ds	2
  1106                           
  1107 ;;
  1108 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1109 ;;
  1110 ;; *************** function _main *****************
  1111 ;; Defined at:
  1112 ;;		line 30 in file "main.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  colour          2  140[BANK0 ] int 
  1117 ;;  temp            2  134[BANK0 ] int 
  1118 ;;  temp            2  132[BANK0 ] int 
  1119 ;;  buf           100   32[BANK0 ] unsigned char [100]
  1120 ;;  prev_colour     2  142[BANK0 ] int 
  1121 ;;  consecuitive    2  138[BANK0 ] int 
  1122 ;;  run_flag        2  136[BANK0 ] int 
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Locals:         0     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1135 ;;      Totals:         2     112       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1136 ;;Total ram usage:      114 bytes
  1137 ;; Hardware stack levels required when called: 9
  1138 ;; This function calls:
  1139 ;;		_BlueMove
  1140 ;;		_Colour_decider
  1141 ;;		_Forwardhalfblock
  1142 ;;		_GreenMove
  1143 ;;		_I2C_2_Master_Init
  1144 ;;		_Interrupts_init
  1145 ;;		_LightBlueMove
  1146 ;;		_OrangeMove
  1147 ;;		_PinkMove
  1148 ;;		_RedMove
  1149 ;;		_RetryMove
  1150 ;;		_Timer0_init
  1151 ;;		_YellowMove
  1152 ;;		_color_click_init
  1153 ;;		_colour_rel
  1154 ;;		_fullSpeedAhead
  1155 ;;		_getTMR0val
  1156 ;;		_go_Home
  1157 ;;		_initDCmotorsPWM
  1158 ;;		_initUSART4
  1159 ;;		_readColours
  1160 ;;		_sendStringSerial4
  1161 ;;		_sprintf
  1162 ;;		_stop
  1163 ;;		_turnCalibration
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text0
  1170   001902                     __ptext0:
  1171                           	callstack 0
  1172   001902                     _main:
  1173                           	callstack 22
  1174   001902                     
  1175                           ;main.c: 31:     initUSART4();
  1176   001902  EC17  F027         	call	_initUSART4	;wreg free
  1177   001906                     
  1178                           ;main.c: 32:     Interrupts_init();
  1179   001906  EC4D  F027         	call	_Interrupts_init	;wreg free
  1180   00190A                     
  1181                           ;main.c: 33:     color_click_init();
  1182   00190A  ECC7  F023         	call	_color_click_init	;wreg free
  1183   00190E                     
  1184                           ;main.c: 34:     I2C_2_Master_Init();
  1185   00190E  ECA8  F026         	call	_I2C_2_Master_Init	;wreg free
  1186   001912                     
  1187                           ;main.c: 35:     Timer0_init();
  1188   001912  EC07  F027         	call	_Timer0_init	;wreg free
  1189   001916                     
  1190                           ;main.c: 36:     initDCmotorsPWM(200);
  1191   001916  0E00               	movlw	0
  1192   001918  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1193   00191A  0EC8               	movlw	200
  1194   00191C  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1195   00191E  ECBD  F020         	call	_initDCmotorsPWM	;wreg free
  1196   001922                     
  1197                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1198   001922  9287               	bcf	135,1,c	;volatile
  1199   001924                     
  1200                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1201   001924  9881               	bcf	129,4,c	;volatile
  1202   001926                     
  1203                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1204   001926  9E86               	bcf	134,7,c	;volatile
  1205   001928                     
  1206                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1207   001928  8486               	bsf	134,2,c	;volatile
  1208   00192A                     
  1209                           ;main.c: 44:     ANSELFbits.ANSELF2=0;
  1210   00192A  010E               	movlb	14	; () banked
  1211   00192C  95B4               	bcf	180,2,b	;volatile
  1212   00192E                     
  1213                           ; BSR set to: 14
  1214                           ;main.c: 45:     TRISFbits.TRISF3 = 1;
  1215   00192E  8686               	bsf	134,3,c	;volatile
  1216   001930                     
  1217                           ; BSR set to: 14
  1218                           ;main.c: 47:     ANSELFbits.ANSELF3=0;
  1219   001930  97B4               	bcf	180,3,b	;volatile
  1220   001932                     
  1221                           ; BSR set to: 14
  1222                           ;main.c: 48:     LATGbits.LATG1=1;
  1223   001932  827F               	bsf	127,1,c	;volatile
  1224   001934                     
  1225                           ; BSR set to: 14
  1226                           ;main.c: 49:     LATAbits.LATA4=1;
  1227   001934  8879               	bsf	121,4,c	;volatile
  1228   001936                     
  1229                           ; BSR set to: 14
  1230                           ;main.c: 50:     LATFbits.LATF7=1;
  1231   001936  8E7E               	bsf	126,7,c	;volatile
  1232   001938                     
  1233                           ; BSR set to: 14
  1234                           ;main.c: 53:     LATDbits.LATD7=0;
  1235   001938  9E7C               	bcf	124,7,c	;volatile
  1236   00193A                     
  1237                           ; BSR set to: 14
  1238                           ;main.c: 54:     TRISDbits.TRISD7=0;
  1239   00193A  9E84               	bcf	132,7,c	;volatile
  1240   00193C                     
  1241                           ; BSR set to: 14
  1242                           ;main.c: 55:     LATHbits.LATH3=0;
  1243   00193C  9680               	bcf	128,3,c	;volatile
  1244   00193E                     
  1245                           ; BSR set to: 14
  1246                           ;main.c: 56:     TRISHbits.TRISH3=0;
  1247   00193E  9688               	bcf	136,3,c	;volatile
  1248   001940                     
  1249                           ; BSR set to: 14
  1250                           ;main.c: 59:     LATHbits.LATH0=0;
  1251   001940  9080               	bcf	128,0,c	;volatile
  1252   001942                     
  1253                           ; BSR set to: 14
  1254                           ;main.c: 60:     TRISHbits.TRISH0=0;
  1255   001942  9088               	bcf	136,0,c	;volatile
  1256   001944                     
  1257                           ; BSR set to: 14
  1258                           ;main.c: 63:     LATFbits.LATF0=0;
  1259   001944  907E               	bcf	126,0,c	;volatile
  1260   001946                     
  1261                           ; BSR set to: 14
  1262                           ;main.c: 64:     TRISFbits.TRISF0=0;
  1263   001946  9086               	bcf	134,0,c	;volatile
  1264   001948                     
  1265                           ; BSR set to: 14
  1266                           ;main.c: 67:     LATDbits.LATD4=0;
  1267   001948  987C               	bcf	124,4,c	;volatile
  1268   00194A                     
  1269                           ; BSR set to: 14
  1270                           ;main.c: 68:     TRISDbits.TRISD4=0;
  1271   00194A  9884               	bcf	132,4,c	;volatile
  1272   00194C                     
  1273                           ; BSR set to: 14
  1274                           ;main.c: 71:     LATDbits.LATD3=0;
  1275   00194C  967C               	bcf	124,3,c	;volatile
  1276   00194E                     
  1277                           ; BSR set to: 14
  1278                           ;main.c: 72:     TRISDbits.TRISD3=0;
  1279   00194E  9684               	bcf	132,3,c	;volatile
  1280   001950                     
  1281                           ; BSR set to: 14
  1282                           ;main.c: 77:     motorL.power=0;
  1283   001950  0E00               	movlw	0
  1284   001952  0100               	movlb	0	; () banked
  1285   001954  6FF3               	movwf	_motorL& (0+255),b
  1286   001956                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 78:     motorL.direction=1;
  1289   001956  0E01               	movlw	1
  1290   001958  6FF4               	movwf	(_motorL+1)& (0+255),b
  1291   00195A                     
  1292                           ; BSR set to: 0
  1293                           ;main.c: 79:     motorL.brakemode=1;
  1294   00195A  0E01               	movlw	1
  1295   00195C  6FF5               	movwf	(_motorL+2)& (0+255),b
  1296   00195E                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 80:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1299   00195E  0EAA               	movlw	170
  1300   001960  6FF8               	movwf	(_motorL+5)& (0+255),b
  1301   001962  0E0F               	movlw	15
  1302   001964  6FF9               	movwf	(_motorL+6)& (0+255),b
  1303   001966                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 81:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1306   001966  0EA6               	movlw	166
  1307   001968  6FFA               	movwf	(_motorL+7)& (0+255),b
  1308   00196A  0E0F               	movlw	15
  1309   00196C  6FFB               	movwf	(_motorL+8)& (0+255),b
  1310   00196E                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 82:     motorL.PWMperiod=200;
  1313   00196E  0E00               	movlw	0
  1314   001970  6FF7               	movwf	(_motorL+4)& (0+255),b
  1315   001972  0EC8               	movlw	200
  1316   001974  6FF6               	movwf	(_motorL+3)& (0+255),b
  1317   001976                     
  1318                           ; BSR set to: 0
  1319                           ;main.c: 83:     motorR.power=0;
  1320   001976  0E00               	movlw	0
  1321   001978  0101               	movlb	1	; () banked
  1322   00197A  6FC0               	movwf	_motorR& (0+255),b
  1323   00197C                     
  1324                           ; BSR set to: 1
  1325                           ;main.c: 84:     motorR.direction=1;
  1326   00197C  0E01               	movlw	1
  1327   00197E  6FC1               	movwf	(_motorR+1)& (0+255),b
  1328   001980                     
  1329                           ; BSR set to: 1
  1330                           ;main.c: 85:     motorR.brakemode=1;
  1331   001980  0E01               	movlw	1
  1332   001982  6FC2               	movwf	(_motorR+2)& (0+255),b
  1333   001984                     
  1334                           ; BSR set to: 1
  1335                           ;main.c: 86:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1336   001984  0E25               	movlw	37
  1337   001986  6FC5               	movwf	(_motorR+5)& (0+255),b
  1338   001988  0E0F               	movlw	15
  1339   00198A  6FC6               	movwf	(_motorR+6)& (0+255),b
  1340   00198C                     
  1341                           ; BSR set to: 1
  1342                           ;main.c: 87:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1343   00198C  0E21               	movlw	33
  1344   00198E  6FC7               	movwf	(_motorR+7)& (0+255),b
  1345   001990  0E0F               	movlw	15
  1346   001992  6FC8               	movwf	(_motorR+8)& (0+255),b
  1347   001994                     
  1348                           ; BSR set to: 1
  1349                           ;main.c: 88:     motorR.PWMperiod=200;
  1350   001994  0E00               	movlw	0
  1351   001996  6FC4               	movwf	(_motorR+4)& (0+255),b
  1352   001998  0EC8               	movlw	200
  1353   00199A  6FC3               	movwf	(_motorR+3)& (0+255),b
  1354   00199C                     
  1355                           ; BSR set to: 1
  1356                           ;main.c: 90:     int consecuitive=0;
  1357   00199C  0E00               	movlw	0
  1358   00199E  0100               	movlb	0	; () banked
  1359   0019A0  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1360   0019A2  0E00               	movlw	0
  1361   0019A4  6FEA               	movwf	main@consecuitive& (0+255),b
  1362   0019A6                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 91:     int prev_colour =0;
  1365   0019A6  0E00               	movlw	0
  1366   0019A8  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1367   0019AA  0E00               	movlw	0
  1368   0019AC  6FEE               	movwf	main@prev_colour& (0+255),b
  1369   0019AE                     
  1370                           ; BSR set to: 0
  1371                           ;main.c: 92:     int run_flag=1;
  1372   0019AE  0E00               	movlw	0
  1373   0019B0  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1374   0019B2  0E01               	movlw	1
  1375   0019B4  6FE8               	movwf	main@run_flag& (0+255),b
  1376   0019B6                     
  1377                           ; BSR set to: 0
  1378                           ;main.c: 93:     move_count=-1;
  1379   0019B6  69F0               	setf	_move_count& (0+255),b	;volatile
  1380   0019B8  69F1               	setf	(_move_count+1)& (0+255),b	;volatile
  1381   0019BA                     
  1382                           ; BSR set to: 0
  1383                           ;main.c: 95:     turnCalibration(&motorL,&motorR);
  1384   0019BA  0EF3               	movlw	low _motorL
  1385   0019BC  6E20               	movwf	turnCalibration@mL^0,c
  1386   0019BE  0E00               	movlw	high _motorL
  1387   0019C0  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1388   0019C2  0EC0               	movlw	low _motorR
  1389   0019C4  6E22               	movwf	turnCalibration@mR^0,c
  1390   0019C6  0E01               	movlw	high _motorR
  1391   0019C8  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1392   0019CA  EC57  F019         	call	_turnCalibration	;wreg free
  1393   0019CE                     
  1394                           ;main.c: 97:     LATFbits.LATF0=0;
  1395   0019CE  907E               	bcf	126,0,c	;volatile
  1396   0019D0                     
  1397                           ;main.c: 98:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1398   0019D0  0E52               	movlw	82
  1399   0019D2  6E5A               	movwf	(??_main+1)^0,c
  1400   0019D4  0E2B               	movlw	43
  1401   0019D6  6E59               	movwf	??_main^0,c
  1402   0019D8  0E00               	movlw	0
  1403   0019DA                     u4927:
  1404   0019DA  2EE8               	decfsz	wreg,f,c
  1405   0019DC  D7FE               	bra	u4927
  1406   0019DE  2E59               	decfsz	??_main^0,f,c
  1407   0019E0  D7FC               	bra	u4927
  1408   0019E2  2E5A               	decfsz	(??_main+1)^0,f,c
  1409   0019E4  D7FA               	bra	u4927
  1410   0019E6  D000               	nop2	
  1411   0019E8                     l410:
  1412   0019E8  A48E               	btfss	142,2,c	;volatile
  1413   0019EA  EFF9  F00C         	goto	u4651
  1414   0019EE  EFFB  F00C         	goto	u4650
  1415   0019F2                     u4651:
  1416   0019F2  EFF4  F00C         	goto	l410
  1417   0019F6                     u4650:
  1418   0019F6                     
  1419                           ;main.c: 102:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1420   0019F6  0E52               	movlw	82
  1421   0019F8  6E5A               	movwf	(??_main+1)^0,c
  1422   0019FA  0E2B               	movlw	43
  1423   0019FC  6E59               	movwf	??_main^0,c
  1424   0019FE  0E00               	movlw	0
  1425   001A00                     u4937:
  1426   001A00  2EE8               	decfsz	wreg,f,c
  1427   001A02  D7FE               	bra	u4937
  1428   001A04  2E59               	decfsz	??_main^0,f,c
  1429   001A06  D7FC               	bra	u4937
  1430   001A08  2E5A               	decfsz	(??_main+1)^0,f,c
  1431   001A0A  D7FA               	bra	u4937
  1432   001A0C  D000               	nop2	
  1433   001A0E                     
  1434                           ;main.c: 103:     TMR0H=0;
  1435   001A0E  0E00               	movlw	0
  1436   001A10  6ED4               	movwf	212,c	;volatile
  1437   001A12                     
  1438                           ;main.c: 104:     TMR0L=0;
  1439   001A12  0E00               	movlw	0
  1440   001A14  6ED3               	movwf	211,c	;volatile
  1441                           
  1442                           ;main.c: 105:     while (run_flag)
  1443   001A16  EF24  F00F         	goto	l5047
  1444   001A1A                     l4921:
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;main.c: 106:     {;main.c: 108:         fullSpeedAhead(&motorL,&motorR);
  1448   001A1A  0EF3               	movlw	low _motorL
  1449   001A1C  6E14               	movwf	fullSpeedAhead@mL^0,c
  1450   001A1E  0E00               	movlw	high _motorL
  1451   001A20  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1452   001A22  0EC0               	movlw	low _motorR
  1453   001A24  6E16               	movwf	fullSpeedAhead@mR^0,c
  1454   001A26  0E01               	movlw	high _motorR
  1455   001A28  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1456   001A2A  EC6E  F020         	call	_fullSpeedAhead	;wreg free
  1457   001A2E                     
  1458                           ;main.c: 113:         readColours(&vals);
  1459   001A2E  0EC9               	movlw	low _vals
  1460   001A30  6E0C               	movwf	readColours@vals^0,c
  1461   001A32  0E01               	movlw	high _vals
  1462   001A34  6E0D               	movwf	(readColours@vals+1)^0,c
  1463   001A36  EC69  F022         	call	_readColours	;wreg free
  1464   001A3A                     
  1465                           ;main.c: 116:         colour_rel(&vals, &rel);
  1466   001A3A  0EC9               	movlw	low _vals
  1467   001A3C  6E32               	movwf	colour_rel@vals^0,c
  1468   001A3E  0E01               	movlw	high _vals
  1469   001A40  6E33               	movwf	(colour_rel@vals+1)^0,c
  1470   001A42  0EB4               	movlw	low _rel
  1471   001A44  6E34               	movwf	colour_rel@rel^0,c
  1472   001A46  0E01               	movlw	high _rel
  1473   001A48  6E35               	movwf	(colour_rel@rel+1)^0,c
  1474   001A4A  EC72  F015         	call	_colour_rel	;wreg free
  1475   001A4E                     
  1476                           ;main.c: 119:         if (vals.L>=500){
  1477   001A4E  0101               	movlb	1	; () banked
  1478   001A50  BFD0               	btfsc	(_vals+7)& (0+255),7,b
  1479   001A52  EF34  F00D         	goto	u4661
  1480   001A56  0EF4               	movlw	244
  1481   001A58  5DCF               	subwf	(_vals+6)& (0+255),w,b
  1482   001A5A  0E01               	movlw	1
  1483   001A5C  59D0               	subwfb	(_vals+7)& (0+255),w,b
  1484   001A5E  A0D8               	btfss	status,0,c
  1485   001A60  EF34  F00D         	goto	u4661
  1486   001A64  EF36  F00D         	goto	u4660
  1487   001A68                     u4661:
  1488   001A68  EF01  F00F         	goto	l415
  1489   001A6C                     u4660:
  1490   001A6C                     
  1491                           ; BSR set to: 1
  1492                           ;main.c: 120:             move_count++;
  1493   001A6C  0100               	movlb	0	; () banked
  1494   001A6E  4BF0               	infsnz	_move_count& (0+255),f,b	;volatile
  1495   001A70  2BF1               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1496   001A72                     
  1497                           ; BSR set to: 0
  1498                           ;main.c: 121:             getTMR0val();
  1499   001A72  ECD1  F026         	call	_getTMR0val	;wreg free
  1500   001A76                     
  1501                           ;main.c: 123:             Forwardhalfblock(&motorL,&motorR);
  1502   001A76  0EF3               	movlw	low _motorL
  1503   001A78  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1504   001A7A  0E00               	movlw	high _motorL
  1505   001A7C  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1506   001A7E  0EC0               	movlw	low _motorR
  1507   001A80  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1508   001A82  0E01               	movlw	high _motorR
  1509   001A84  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1510   001A86  EC1F  F023         	call	_Forwardhalfblock	;wreg free
  1511   001A8A                     
  1512                           ;main.c: 125:             stop(&motorL, &motorR);
  1513   001A8A  0EF3               	movlw	low _motorL
  1514   001A8C  6E14               	movwf	stop@mL^0,c
  1515   001A8E  0E00               	movlw	high _motorL
  1516   001A90  6E15               	movwf	(stop@mL+1)^0,c
  1517   001A92  0EC0               	movlw	low _motorR
  1518   001A94  6E16               	movwf	stop@mR^0,c
  1519   001A96  0E01               	movlw	high _motorR
  1520   001A98  6E17               	movwf	(stop@mR+1)^0,c
  1521   001A9A  EC42  F021         	call	_stop	;wreg free
  1522   001A9E                     
  1523                           ;main.c: 126:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1524   001A9E  0E11               	movlw	17
  1525   001AA0  6E5A               	movwf	(??_main+1)^0,c
  1526   001AA2  0E3C               	movlw	60
  1527   001AA4  6E59               	movwf	??_main^0,c
  1528   001AA6  0ECB               	movlw	203
  1529   001AA8                     u4947:
  1530   001AA8  2EE8               	decfsz	wreg,f,c
  1531   001AAA  D7FE               	bra	u4947
  1532   001AAC  2E59               	decfsz	??_main^0,f,c
  1533   001AAE  D7FC               	bra	u4947
  1534   001AB0  2E5A               	decfsz	(??_main+1)^0,f,c
  1535   001AB2  D7FA               	bra	u4947
  1536   001AB4  F000               	nop	
  1537                           
  1538                           ;main.c: 133:             while (consecuitive<20){
  1539   001AB6  EF90  F00D         	goto	l4951
  1540   001ABA                     l4939:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 134:                 int colour = Colour_decider(&vals, &rel);
  1544   001ABA  0EC9               	movlw	low _vals
  1545   001ABC  6E4B               	movwf	Colour_decider@vals^0,c
  1546   001ABE  0E01               	movlw	high _vals
  1547   001AC0  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1548   001AC2  0EB4               	movlw	low _rel
  1549   001AC4  6E4D               	movwf	Colour_decider@rel^0,c
  1550   001AC6  0E01               	movlw	high _rel
  1551   001AC8  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1552   001ACA  EC13  F007         	call	_Colour_decider	;wreg free
  1553   001ACE  C04B  F0EC         	movff	?_Colour_decider,main@colour
  1554   001AD2  C04C  F0ED         	movff	?_Colour_decider+1,main@colour+1
  1555   001AD6                     
  1556                           ;main.c: 135:                 if (colour==prev_colour){
  1557   001AD6  0100               	movlb	0	; () banked
  1558   001AD8  51EE               	movf	main@prev_colour& (0+255),w,b
  1559   001ADA  19EC               	xorwf	main@colour& (0+255),w,b
  1560   001ADC  E107               	bnz	u4671
  1561   001ADE  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1562   001AE0  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1563   001AE2  A4D8               	btfss	status,2,c
  1564   001AE4  EF76  F00D         	goto	u4671
  1565   001AE8  EF78  F00D         	goto	u4670
  1566   001AEC                     u4671:
  1567   001AEC  EF7C  F00D         	goto	l4945
  1568   001AF0                     u4670:
  1569   001AF0                     
  1570                           ; BSR set to: 0
  1571                           ;main.c: 136:                     consecuitive++;
  1572   001AF0  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1573   001AF2  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1574                           
  1575                           ;main.c: 137:                 }
  1576   001AF4  EF80  F00D         	goto	l4947
  1577   001AF8                     l4945:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;main.c: 139:                     consecuitive=0;
  1581   001AF8  0E00               	movlw	0
  1582   001AFA  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1583   001AFC  0E00               	movlw	0
  1584   001AFE  6FEA               	movwf	main@consecuitive& (0+255),b
  1585   001B00                     l4947:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 141:                 prev_colour=colour;
  1589   001B00  C0EC  F0EE         	movff	main@colour,main@prev_colour
  1590   001B04  C0ED  F0EF         	movff	main@colour+1,main@prev_colour+1
  1591   001B08                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 142:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1594   001B08  0E05               	movlw	5
  1595   001B0A  6E5A               	movwf	(??_main+1)^0,c
  1596   001B0C  0E0F               	movlw	15
  1597   001B0E  6E59               	movwf	??_main^0,c
  1598   001B10  0EF1               	movlw	241
  1599   001B12                     u4957:
  1600   001B12  2EE8               	decfsz	wreg,f,c
  1601   001B14  D7FE               	bra	u4957
  1602   001B16  2E59               	decfsz	??_main^0,f,c
  1603   001B18  D7FC               	bra	u4957
  1604   001B1A  2E5A               	decfsz	(??_main+1)^0,f,c
  1605   001B1C  D7FA               	bra	u4957
  1606   001B1E  F000               	nop	
  1607   001B20                     l4951:
  1608                           
  1609                           ;main.c: 133:             while (consecuitive<20){
  1610   001B20  0100               	movlb	0	; () banked
  1611   001B22  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1612   001B24  EF9D  F00D         	goto	u4681
  1613   001B28  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1614   001B2A  E109               	bnz	u4680
  1615   001B2C  0E14               	movlw	20
  1616   001B2E  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1617   001B30  A0D8               	btfss	status,0,c
  1618   001B32  EF9D  F00D         	goto	u4681
  1619   001B36  EF9F  F00D         	goto	u4680
  1620   001B3A                     u4681:
  1621   001B3A  EF5D  F00D         	goto	l4939
  1622   001B3E                     u4680:
  1623   001B3E                     
  1624                           ; BSR set to: 0
  1625                           ;main.c: 144:             consecuitive=0;
  1626   001B3E  0E00               	movlw	0
  1627   001B40  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1628   001B42  0E00               	movlw	0
  1629   001B44  6FEA               	movwf	main@consecuitive& (0+255),b
  1630   001B46                     
  1631                           ; BSR set to: 0
  1632                           ;main.c: 145:             int temp=TMR0L;
  1633   001B46  CFD3 F0E4          	movff	4051,main@temp	;volatile
  1634   001B4A  6BE5               	clrf	(main@temp+1)& (0+255),b
  1635   001B4C                     
  1636                           ; BSR set to: 0
  1637                           ;main.c: 146:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  1638   001B4C  0E80               	movlw	low main@buf
  1639   001B4E  6F60               	movwf	sprintf@s& (0+255),b
  1640   001B50  0E00               	movlw	high main@buf
  1641   001B52  6F61               	movwf	(sprintf@s+1)& (0+255),b
  1642   001B54  0E01               	movlw	low STR_1
  1643   001B56  6F62               	movwf	sprintf@fmt& (0+255),b
  1644   001B58  0E0E               	movlw	high STR_1
  1645   001B5A  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1646   001B5C  C1C9  F064         	movff	_vals,?_sprintf+4
  1647   001B60  C1CA  F065         	movff	_vals+1,?_sprintf+5
  1648   001B64  C1CB  F066         	movff	_vals+2,?_sprintf+6
  1649   001B68  C1CC  F067         	movff	_vals+3,?_sprintf+7
  1650   001B6C  C1CD  F068         	movff	_vals+4,?_sprintf+8
  1651   001B70  C1CE  F069         	movff	_vals+5,?_sprintf+9
  1652   001B74  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  1653   001B78  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  1654   001B7A  EC4C  F023         	call	_sprintf	;wreg free
  1655   001B7E                     
  1656                           ;main.c: 149:             sendStringSerial4(buf);
  1657   001B7E  0E80               	movlw	low main@buf
  1658   001B80  6E02               	movwf	sendStringSerial4@string^0,c
  1659   001B82  0E00               	movlw	high main@buf
  1660   001B84  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1661   001B86  EC90  F026         	call	_sendStringSerial4	;wreg free
  1662   001B8A                     
  1663                           ;main.c: 151:             if (prev_colour==1){
  1664   001B8A  0100               	movlb	0	; () banked
  1665   001B8C  05EE               	decf	main@prev_colour& (0+255),w,b
  1666   001B8E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1667   001B90  A4D8               	btfss	status,2,c
  1668   001B92  EFCD  F00D         	goto	u4691
  1669   001B96  EFCF  F00D         	goto	u4690
  1670   001B9A                     u4691:
  1671   001B9A  EFE8  F00D         	goto	l4971
  1672   001B9E                     u4690:
  1673   001B9E                     
  1674                           ; BSR set to: 0
  1675                           ;main.c: 152:                 RedMove(&motorL, &motorR);
  1676   001B9E  0EF3               	movlw	low _motorL
  1677   001BA0  6E20               	movwf	RedMove@mL^0,c
  1678   001BA2  0E00               	movlw	high _motorL
  1679   001BA4  6E21               	movwf	(RedMove@mL+1)^0,c
  1680   001BA6  0EC0               	movlw	low _motorR
  1681   001BA8  6E22               	movwf	RedMove@mR^0,c
  1682   001BAA  0E01               	movlw	high _motorR
  1683   001BAC  6E23               	movwf	(RedMove@mR+1)^0,c
  1684   001BAE  EC1B  F026         	call	_RedMove	;wreg free
  1685   001BB2                     
  1686                           ;main.c: 153:                 TMR0H=0;
  1687   001BB2  0E00               	movlw	0
  1688   001BB4  6ED4               	movwf	212,c	;volatile
  1689   001BB6                     
  1690                           ;main.c: 154:                 TMR0L=0;
  1691   001BB6  0E00               	movlw	0
  1692   001BB8  6ED3               	movwf	211,c	;volatile
  1693   001BBA                     
  1694                           ;main.c: 155:                 WayBack[move_count]=1;
  1695   001BBA  0E62               	movlw	low _WayBack
  1696   001BBC  0100               	movlb	0	; () banked
  1697   001BBE  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1698   001BC0  6ED9               	movwf	fsr2l,c
  1699   001BC2  0E01               	movlw	high _WayBack
  1700   001BC4  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1701   001BC6  6EDA               	movwf	fsr2h,c
  1702   001BC8  0E01               	movlw	1
  1703   001BCA  6EDF               	movwf	indf2,c
  1704                           
  1705                           ;main.c: 156:             }
  1706   001BCC  EF24  F00F         	goto	l5047
  1707   001BD0                     l4971:
  1708                           
  1709                           ; BSR set to: 0
  1710   001BD0  0E02               	movlw	2
  1711   001BD2  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1712   001BD4  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1713   001BD6  A4D8               	btfss	status,2,c
  1714   001BD8  EFF0  F00D         	goto	u4701
  1715   001BDC  EFF2  F00D         	goto	u4700
  1716   001BE0                     u4701:
  1717   001BE0  EF0B  F00E         	goto	l4981
  1718   001BE4                     u4700:
  1719   001BE4                     
  1720                           ; BSR set to: 0
  1721                           ;main.c: 158:                 OrangeMove(&motorL, &motorR);
  1722   001BE4  0EF3               	movlw	low _motorL
  1723   001BE6  6E20               	movwf	OrangeMove@mL^0,c
  1724   001BE8  0E00               	movlw	high _motorL
  1725   001BEA  6E21               	movwf	(OrangeMove@mL+1)^0,c
  1726   001BEC  0EC0               	movlw	low _motorR
  1727   001BEE  6E22               	movwf	OrangeMove@mR^0,c
  1728   001BF0  0E01               	movlw	high _motorR
  1729   001BF2  6E23               	movwf	(OrangeMove@mR+1)^0,c
  1730   001BF4  EC75  F023         	call	_OrangeMove	;wreg free
  1731   001BF8                     
  1732                           ;main.c: 159:                 TMR0H=0;
  1733   001BF8  0E00               	movlw	0
  1734   001BFA  6ED4               	movwf	212,c	;volatile
  1735   001BFC                     
  1736                           ;main.c: 160:                 TMR0L=0;
  1737   001BFC  0E00               	movlw	0
  1738   001BFE  6ED3               	movwf	211,c	;volatile
  1739   001C00                     
  1740                           ;main.c: 161:                 WayBack[move_count]=2;
  1741   001C00  0E62               	movlw	low _WayBack
  1742   001C02  0100               	movlb	0	; () banked
  1743   001C04  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1744   001C06  6ED9               	movwf	fsr2l,c
  1745   001C08  0E01               	movlw	high _WayBack
  1746   001C0A  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1747   001C0C  6EDA               	movwf	fsr2h,c
  1748   001C0E  0E02               	movlw	2
  1749   001C10  6EDF               	movwf	indf2,c
  1750                           
  1751                           ;main.c: 162:             }
  1752   001C12  EF24  F00F         	goto	l5047
  1753   001C16                     l4981:
  1754                           
  1755                           ; BSR set to: 0
  1756   001C16  0E03               	movlw	3
  1757   001C18  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1758   001C1A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1759   001C1C  A4D8               	btfss	status,2,c
  1760   001C1E  EF13  F00E         	goto	u4711
  1761   001C22  EF15  F00E         	goto	u4710
  1762   001C26                     u4711:
  1763   001C26  EF2E  F00E         	goto	l4991
  1764   001C2A                     u4710:
  1765   001C2A                     
  1766                           ; BSR set to: 0
  1767                           ;main.c: 164:                 YellowMove(&motorL, &motorR);
  1768   001C2A  0EF3               	movlw	low _motorL
  1769   001C2C  6E20               	movwf	YellowMove@mL^0,c
  1770   001C2E  0E00               	movlw	high _motorL
  1771   001C30  6E21               	movwf	(YellowMove@mL+1)^0,c
  1772   001C32  0EC0               	movlw	low _motorR
  1773   001C34  6E22               	movwf	YellowMove@mR^0,c
  1774   001C36  0E01               	movlw	high _motorR
  1775   001C38  6E23               	movwf	(YellowMove@mR+1)^0,c
  1776   001C3A  ECF0  F023         	call	_YellowMove	;wreg free
  1777   001C3E                     
  1778                           ;main.c: 165:                 TMR0H=0;
  1779   001C3E  0E00               	movlw	0
  1780   001C40  6ED4               	movwf	212,c	;volatile
  1781   001C42                     
  1782                           ;main.c: 166:                 TMR0L=0;
  1783   001C42  0E00               	movlw	0
  1784   001C44  6ED3               	movwf	211,c	;volatile
  1785   001C46                     
  1786                           ;main.c: 167:                 WayBack[move_count]=3;
  1787   001C46  0E62               	movlw	low _WayBack
  1788   001C48  0100               	movlb	0	; () banked
  1789   001C4A  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1790   001C4C  6ED9               	movwf	fsr2l,c
  1791   001C4E  0E01               	movlw	high _WayBack
  1792   001C50  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1793   001C52  6EDA               	movwf	fsr2h,c
  1794   001C54  0E03               	movlw	3
  1795   001C56  6EDF               	movwf	indf2,c
  1796                           
  1797                           ;main.c: 168:             }
  1798   001C58  EF24  F00F         	goto	l5047
  1799   001C5C                     l4991:
  1800                           
  1801                           ; BSR set to: 0
  1802   001C5C  0E04               	movlw	4
  1803   001C5E  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1804   001C60  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1805   001C62  A4D8               	btfss	status,2,c
  1806   001C64  EF36  F00E         	goto	u4721
  1807   001C68  EF38  F00E         	goto	u4720
  1808   001C6C                     u4721:
  1809   001C6C  EF51  F00E         	goto	l5001
  1810   001C70                     u4720:
  1811   001C70                     
  1812                           ; BSR set to: 0
  1813                           ;main.c: 170:                 BlueMove(&motorL, &motorR);
  1814   001C70  0EF3               	movlw	low _motorL
  1815   001C72  6E20               	movwf	BlueMove@mL^0,c
  1816   001C74  0E00               	movlw	high _motorL
  1817   001C76  6E21               	movwf	(BlueMove@mL+1)^0,c
  1818   001C78  0EC0               	movlw	low _motorR
  1819   001C7A  6E22               	movwf	BlueMove@mR^0,c
  1820   001C7C  0E01               	movlw	high _motorR
  1821   001C7E  6E23               	movwf	(BlueMove@mR+1)^0,c
  1822   001C80  EC36  F022         	call	_BlueMove	;wreg free
  1823   001C84                     
  1824                           ;main.c: 171:                 TMR0H=0;
  1825   001C84  0E00               	movlw	0
  1826   001C86  6ED4               	movwf	212,c	;volatile
  1827   001C88                     
  1828                           ;main.c: 172:                 TMR0L=0;
  1829   001C88  0E00               	movlw	0
  1830   001C8A  6ED3               	movwf	211,c	;volatile
  1831   001C8C                     
  1832                           ;main.c: 173:                 WayBack[move_count]=4;
  1833   001C8C  0E62               	movlw	low _WayBack
  1834   001C8E  0100               	movlb	0	; () banked
  1835   001C90  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1836   001C92  6ED9               	movwf	fsr2l,c
  1837   001C94  0E01               	movlw	high _WayBack
  1838   001C96  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1839   001C98  6EDA               	movwf	fsr2h,c
  1840   001C9A  0E04               	movlw	4
  1841   001C9C  6EDF               	movwf	indf2,c
  1842                           
  1843                           ;main.c: 174:             }
  1844   001C9E  EF24  F00F         	goto	l5047
  1845   001CA2                     l5001:
  1846                           
  1847                           ; BSR set to: 0
  1848   001CA2  0E05               	movlw	5
  1849   001CA4  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1850   001CA6  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1851   001CA8  A4D8               	btfss	status,2,c
  1852   001CAA  EF59  F00E         	goto	u4731
  1853   001CAE  EF5B  F00E         	goto	u4730
  1854   001CB2                     u4731:
  1855   001CB2  EF74  F00E         	goto	l5011
  1856   001CB6                     u4730:
  1857   001CB6                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 176:                 GreenMove(&motorL, &motorR);
  1860   001CB6  0EF3               	movlw	low _motorL
  1861   001CB8  6E20               	movwf	GreenMove@mL^0,c
  1862   001CBA  0E00               	movlw	high _motorL
  1863   001CBC  6E21               	movwf	(GreenMove@mL+1)^0,c
  1864   001CBE  0EC0               	movlw	low _motorR
  1865   001CC0  6E22               	movwf	GreenMove@mR^0,c
  1866   001CC2  0E01               	movlw	high _motorR
  1867   001CC4  6E23               	movwf	(GreenMove@mR+1)^0,c
  1868   001CC6  EC3A  F026         	call	_GreenMove	;wreg free
  1869   001CCA                     
  1870                           ;main.c: 177:                 TMR0H=0;
  1871   001CCA  0E00               	movlw	0
  1872   001CCC  6ED4               	movwf	212,c	;volatile
  1873   001CCE                     
  1874                           ;main.c: 178:                 TMR0L=0;
  1875   001CCE  0E00               	movlw	0
  1876   001CD0  6ED3               	movwf	211,c	;volatile
  1877   001CD2                     
  1878                           ;main.c: 179:                 WayBack[move_count]=5;
  1879   001CD2  0E62               	movlw	low _WayBack
  1880   001CD4  0100               	movlb	0	; () banked
  1881   001CD6  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1882   001CD8  6ED9               	movwf	fsr2l,c
  1883   001CDA  0E01               	movlw	high _WayBack
  1884   001CDC  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1885   001CDE  6EDA               	movwf	fsr2h,c
  1886   001CE0  0E05               	movlw	5
  1887   001CE2  6EDF               	movwf	indf2,c
  1888                           
  1889                           ;main.c: 180:             }
  1890   001CE4  EF24  F00F         	goto	l5047
  1891   001CE8                     l5011:
  1892                           
  1893                           ; BSR set to: 0
  1894   001CE8  0E06               	movlw	6
  1895   001CEA  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1896   001CEC  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1897   001CEE  A4D8               	btfss	status,2,c
  1898   001CF0  EF7C  F00E         	goto	u4741
  1899   001CF4  EF7E  F00E         	goto	u4740
  1900   001CF8                     u4741:
  1901   001CF8  EF97  F00E         	goto	l5021
  1902   001CFC                     u4740:
  1903   001CFC                     
  1904                           ; BSR set to: 0
  1905                           ;main.c: 182:                 LightBlueMove(&motorL, &motorR);
  1906   001CFC  0EF3               	movlw	low _motorL
  1907   001CFE  6E20               	movwf	LightBlueMove@mL^0,c
  1908   001D00  0E00               	movlw	high _motorL
  1909   001D02  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  1910   001D04  0EC0               	movlw	low _motorR
  1911   001D06  6E22               	movwf	LightBlueMove@mR^0,c
  1912   001D08  0E01               	movlw	high _motorR
  1913   001D0A  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  1914   001D0C  EC9E  F023         	call	_LightBlueMove	;wreg free
  1915   001D10                     
  1916                           ;main.c: 183:                 TMR0H=0;
  1917   001D10  0E00               	movlw	0
  1918   001D12  6ED4               	movwf	212,c	;volatile
  1919   001D14                     
  1920                           ;main.c: 184:                 TMR0L=0;
  1921   001D14  0E00               	movlw	0
  1922   001D16  6ED3               	movwf	211,c	;volatile
  1923   001D18                     
  1924                           ;main.c: 185:                 WayBack[move_count]=6;
  1925   001D18  0E62               	movlw	low _WayBack
  1926   001D1A  0100               	movlb	0	; () banked
  1927   001D1C  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1928   001D1E  6ED9               	movwf	fsr2l,c
  1929   001D20  0E01               	movlw	high _WayBack
  1930   001D22  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1931   001D24  6EDA               	movwf	fsr2h,c
  1932   001D26  0E06               	movlw	6
  1933   001D28  6EDF               	movwf	indf2,c
  1934                           
  1935                           ;main.c: 186:             }
  1936   001D2A  EF24  F00F         	goto	l5047
  1937   001D2E                     l5021:
  1938                           
  1939                           ; BSR set to: 0
  1940   001D2E  0E07               	movlw	7
  1941   001D30  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1942   001D32  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1943   001D34  A4D8               	btfss	status,2,c
  1944   001D36  EF9F  F00E         	goto	u4751
  1945   001D3A  EFA1  F00E         	goto	u4750
  1946   001D3E                     u4751:
  1947   001D3E  EFBA  F00E         	goto	l5031
  1948   001D42                     u4750:
  1949   001D42                     
  1950                           ; BSR set to: 0
  1951                           ;main.c: 188:                 PinkMove(&motorL, &motorR);
  1952   001D42  0EF3               	movlw	low _motorL
  1953   001D44  6E20               	movwf	PinkMove@mL^0,c
  1954   001D46  0E00               	movlw	high _motorL
  1955   001D48  6E21               	movwf	(PinkMove@mL+1)^0,c
  1956   001D4A  0EC0               	movlw	low _motorR
  1957   001D4C  6E22               	movwf	PinkMove@mR^0,c
  1958   001D4E  0E01               	movlw	high _motorR
  1959   001D50  6E23               	movwf	(PinkMove@mR+1)^0,c
  1960   001D52  EC19  F024         	call	_PinkMove	;wreg free
  1961   001D56                     
  1962                           ;main.c: 189:                 TMR0H=0;
  1963   001D56  0E00               	movlw	0
  1964   001D58  6ED4               	movwf	212,c	;volatile
  1965   001D5A                     
  1966                           ;main.c: 190:                 TMR0L=0;
  1967   001D5A  0E00               	movlw	0
  1968   001D5C  6ED3               	movwf	211,c	;volatile
  1969   001D5E                     
  1970                           ;main.c: 191:                 WayBack[move_count]=7;
  1971   001D5E  0E62               	movlw	low _WayBack
  1972   001D60  0100               	movlb	0	; () banked
  1973   001D62  25F0               	addwf	_move_count& (0+255),w,b	;volatile
  1974   001D64  6ED9               	movwf	fsr2l,c
  1975   001D66  0E01               	movlw	high _WayBack
  1976   001D68  21F1               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1977   001D6A  6EDA               	movwf	fsr2h,c
  1978   001D6C  0E07               	movlw	7
  1979   001D6E  6EDF               	movwf	indf2,c
  1980                           
  1981                           ;main.c: 192:             }
  1982   001D70  EF24  F00F         	goto	l5047
  1983   001D74                     l5031:
  1984                           
  1985                           ; BSR set to: 0
  1986   001D74  0E0A               	movlw	10
  1987   001D76  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1988   001D78  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1989   001D7A  A4D8               	btfss	status,2,c
  1990   001D7C  EFC2  F00E         	goto	u4761
  1991   001D80  EFC4  F00E         	goto	u4760
  1992   001D84                     u4761:
  1993   001D84  EFD0  F00E         	goto	l5035
  1994   001D88                     u4760:
  1995   001D88                     
  1996                           ; BSR set to: 0
  1997                           ;main.c: 194:                 RetryMove(&motorL, &motorR);
  1998   001D88  0EF3               	movlw	low _motorL
  1999   001D8A  6E1A               	movwf	RetryMove@mL^0,c
  2000   001D8C  0E00               	movlw	high _motorL
  2001   001D8E  6E1B               	movwf	(RetryMove@mL+1)^0,c
  2002   001D90  0EC0               	movlw	low _motorR
  2003   001D92  6E1C               	movwf	RetryMove@mR^0,c
  2004   001D94  0E01               	movlw	high _motorR
  2005   001D96  6E1D               	movwf	(RetryMove@mR+1)^0,c
  2006   001D98  EC01  F021         	call	_RetryMove	;wreg free
  2007                           
  2008                           ;main.c: 195:             }
  2009   001D9C  EF24  F00F         	goto	l5047
  2010   001DA0                     l5035:
  2011                           
  2012                           ; BSR set to: 0
  2013   001DA0  51EE               	movf	main@prev_colour& (0+255),w,b
  2014   001DA2  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2015   001DA4  A4D8               	btfss	status,2,c
  2016   001DA6  EFD7  F00E         	goto	u4771
  2017   001DAA  EFD9  F00E         	goto	u4770
  2018   001DAE                     u4771:
  2019   001DAE  EFFF  F00E         	goto	l432
  2020   001DB2                     u4770:
  2021   001DB2                     
  2022                           ; BSR set to: 0
  2023                           ;main.c: 197:                 BlueMove(&motorL, &motorR);
  2024   001DB2  0EF3               	movlw	low _motorL
  2025   001DB4  6E20               	movwf	BlueMove@mL^0,c
  2026   001DB6  0E00               	movlw	high _motorL
  2027   001DB8  6E21               	movwf	(BlueMove@mL+1)^0,c
  2028   001DBA  0EC0               	movlw	low _motorR
  2029   001DBC  6E22               	movwf	BlueMove@mR^0,c
  2030   001DBE  0E01               	movlw	high _motorR
  2031   001DC0  6E23               	movwf	(BlueMove@mR+1)^0,c
  2032   001DC2  EC36  F022         	call	_BlueMove	;wreg free
  2033   001DC6                     
  2034                           ;main.c: 198:                 T0CON0bits.T0EN=0;
  2035   001DC6  9ED5               	bcf	213,7,c	;volatile
  2036                           
  2037                           ;main.c: 199:                 go_Home(WayBack, Time_forward);
  2038   001DC8  0E62               	movlw	low _WayBack
  2039   001DCA  6E24               	movwf	go_Home@WayBack^0,c
  2040   001DCC  0E01               	movlw	high _WayBack
  2041   001DCE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  2042   001DD0  0E00               	movlw	low _Time_forward
  2043   001DD2  6E26               	movwf	go_Home@Time_forward^0,c
  2044   001DD4  0E02               	movlw	high _Time_forward
  2045   001DD6  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  2046   001DD8  EC47  F018         	call	_go_Home	;wreg free
  2047                           
  2048                           ;main.c: 200:                 stop(&motorL, &motorR);
  2049   001DDC  0EF3               	movlw	low _motorL
  2050   001DDE  6E14               	movwf	stop@mL^0,c
  2051   001DE0  0E00               	movlw	high _motorL
  2052   001DE2  6E15               	movwf	(stop@mL+1)^0,c
  2053   001DE4  0EC0               	movlw	low _motorR
  2054   001DE6  6E16               	movwf	stop@mR^0,c
  2055   001DE8  0E01               	movlw	high _motorR
  2056   001DEA  6E17               	movwf	(stop@mR+1)^0,c
  2057   001DEC  EC42  F021         	call	_stop	;wreg free
  2058   001DF0                     
  2059                           ;main.c: 201:                 run_flag=0;
  2060   001DF0  0E00               	movlw	0
  2061   001DF2  0100               	movlb	0	; () banked
  2062   001DF4  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  2063   001DF6  0E00               	movlw	0
  2064   001DF8  6FE8               	movwf	main@run_flag& (0+255),b
  2065   001DFA  EF24  F00F         	goto	l5047
  2066   001DFE                     l432:
  2067                           
  2068                           ; BSR set to: 0
  2069   001DFE  EF24  F00F         	goto	l5047
  2070   001E02                     l415:
  2071                           
  2072                           ; BSR set to: 1
  2073                           ;main.c: 207:             int temp=TMR0L;
  2074   001E02  CFD3 F0E6          	movff	4051,main@temp_1304	;volatile
  2075   001E06  0100               	movlb	0	; () banked
  2076   001E08  6BE7               	clrf	(main@temp_1304+1)& (0+255),b
  2077   001E0A                     
  2078                           ; BSR set to: 0
  2079                           ;main.c: 208:             sprintf(buf,"red=%d green=%d blue=%d timer=%d \r\n",vals.R, va
      +                          ls.G,vals.B,TMR0H);
  2080   001E0A  0E80               	movlw	low main@buf
  2081   001E0C  6F60               	movwf	sprintf@s& (0+255),b
  2082   001E0E  0E00               	movlw	high main@buf
  2083   001E10  6F61               	movwf	(sprintf@s+1)& (0+255),b
  2084   001E12  0E01               	movlw	low STR_1
  2085   001E14  6F62               	movwf	sprintf@fmt& (0+255),b
  2086   001E16  0E0E               	movlw	high STR_1
  2087   001E18  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2088   001E1A  C1C9  F064         	movff	_vals,?_sprintf+4
  2089   001E1E  C1CA  F065         	movff	_vals+1,?_sprintf+5
  2090   001E22  C1CB  F066         	movff	_vals+2,?_sprintf+6
  2091   001E26  C1CC  F067         	movff	_vals+3,?_sprintf+7
  2092   001E2A  C1CD  F068         	movff	_vals+4,?_sprintf+8
  2093   001E2E  C1CE  F069         	movff	_vals+5,?_sprintf+9
  2094   001E32  CFD4 F06A          	movff	4052,?_sprintf+10	;volatile
  2095   001E36  6B6B               	clrf	(?_sprintf+11)& (0+255),b
  2096   001E38  EC4C  F023         	call	_sprintf	;wreg free
  2097   001E3C                     
  2098                           ;main.c: 209:             sendStringSerial4(buf);
  2099   001E3C  0E80               	movlw	low main@buf
  2100   001E3E  6E02               	movwf	sendStringSerial4@string^0,c
  2101   001E40  0E00               	movlw	high main@buf
  2102   001E42  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2103   001E44  EC90  F026         	call	_sendStringSerial4	;wreg free
  2104   001E48                     l5047:
  2105                           
  2106                           ;main.c: 105:     while (run_flag)
  2107   001E48  0100               	movlb	0	; () banked
  2108   001E4A  51E8               	movf	main@run_flag& (0+255),w,b
  2109   001E4C  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2110   001E4E  A4D8               	btfss	status,2,c
  2111   001E50  EF2C  F00F         	goto	u4781
  2112   001E54  EF2E  F00F         	goto	u4780
  2113   001E58                     u4781:
  2114   001E58  EF0D  F00D         	goto	l4921
  2115   001E5C                     u4780:
  2116   001E5C                     
  2117                           ; BSR set to: 0
  2118   001E5C  EF07  F000         	goto	start
  2119   001E60                     __end_of_main:
  2120                           	callstack 0
  2121                           
  2122 ;; *************** function _turnCalibration *****************
  2123 ;; Defined at:
  2124 ;;		line 345 in file "dc_motor.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  2127 ;;		 -> motorL(9), 
  2128 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  2129 ;;		 -> motorR(9), 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;Total ram usage:        6 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 5
  2148 ;; This function calls:
  2149 ;;		_turnLeft45
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text1
  2156   0032AE                     __ptext1:
  2157                           	callstack 0
  2158   0032AE                     _turnCalibration:
  2159                           	callstack 25
  2160   0032AE                     
  2161                           ;dc_motor.c: 346:     LATFbits.LATF0=1;
  2162   0032AE  807E               	bsf	126,0,c	;volatile
  2163   0032B0                     
  2164                           ;dc_motor.c: 347:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  2165   0032B0  0E52               	movlw	82
  2166   0032B2  6E25               	movwf	(??_turnCalibration+1)^0,c
  2167   0032B4  0E2B               	movlw	43
  2168   0032B6  6E24               	movwf	??_turnCalibration^0,c
  2169   0032B8  0E00               	movlw	0
  2170   0032BA                     u4967:
  2171   0032BA  2EE8               	decfsz	wreg,f,c
  2172   0032BC  D7FE               	bra	u4967
  2173   0032BE  2E24               	decfsz	??_turnCalibration^0,f,c
  2174   0032C0  D7FC               	bra	u4967
  2175   0032C2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2176   0032C4  D7FA               	bra	u4967
  2177   0032C6  D000               	nop2	
  2178                           
  2179                           ;dc_motor.c: 349:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2180   0032C8  EF1A  F01A         	goto	l618
  2181   0032CC                     l619:
  2182                           
  2183                           ;dc_motor.c: 350:         LATDbits.LATD3=1;
  2184   0032CC  867C               	bsf	124,3,c	;volatile
  2185   0032CE                     
  2186                           ;dc_motor.c: 352:         turnLeft45(&motorL, &motorR);
  2187   0032CE  0EF3               	movlw	low _motorL
  2188   0032D0  6E1A               	movwf	turnLeft45@mL^0,c
  2189   0032D2  0E00               	movlw	high _motorL
  2190   0032D4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2191   0032D6  0EC0               	movlw	low _motorR
  2192   0032D8  6E1C               	movwf	turnLeft45@mR^0,c
  2193   0032DA  0E01               	movlw	high _motorR
  2194   0032DC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2195   0032DE  EC30  F025         	call	_turnLeft45	;wreg free
  2196                           
  2197                           ;dc_motor.c: 353:         turnLeft45(&motorL, &motorR);
  2198   0032E2  0EF3               	movlw	low _motorL
  2199   0032E4  6E1A               	movwf	turnLeft45@mL^0,c
  2200   0032E6  0E00               	movlw	high _motorL
  2201   0032E8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2202   0032EA  0EC0               	movlw	low _motorR
  2203   0032EC  6E1C               	movwf	turnLeft45@mR^0,c
  2204   0032EE  0E01               	movlw	high _motorR
  2205   0032F0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2206   0032F2  EC30  F025         	call	_turnLeft45	;wreg free
  2207                           
  2208                           ;dc_motor.c: 354:         turnLeft45(&motorL, &motorR);
  2209   0032F6  0EF3               	movlw	low _motorL
  2210   0032F8  6E1A               	movwf	turnLeft45@mL^0,c
  2211   0032FA  0E00               	movlw	high _motorL
  2212   0032FC  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2213   0032FE  0EC0               	movlw	low _motorR
  2214   003300  6E1C               	movwf	turnLeft45@mR^0,c
  2215   003302  0E01               	movlw	high _motorR
  2216   003304  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2217   003306  EC30  F025         	call	_turnLeft45	;wreg free
  2218                           
  2219                           ;dc_motor.c: 355:         turnLeft45(&motorL, &motorR);
  2220   00330A  0EF3               	movlw	low _motorL
  2221   00330C  6E1A               	movwf	turnLeft45@mL^0,c
  2222   00330E  0E00               	movlw	high _motorL
  2223   003310  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  2224   003312  0EC0               	movlw	low _motorR
  2225   003314  6E1C               	movwf	turnLeft45@mR^0,c
  2226   003316  0E01               	movlw	high _motorR
  2227   003318  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  2228   00331A  EC30  F025         	call	_turnLeft45	;wreg free
  2229                           
  2230                           ;dc_motor.c: 357:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2231   00331E  EFFF  F019         	goto	l4691
  2232   003322                     l621:
  2233                           
  2234                           ;dc_motor.c: 360:               LATDbits.LATD4=1;
  2235   003322  887C               	bsf	124,4,c	;volatile
  2236   003324                     
  2237                           ;dc_motor.c: 361:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2238   003324  0EA3               	movlw	163
  2239   003326  6E25               	movwf	(??_turnCalibration+1)^0,c
  2240   003328  0E57               	movlw	87
  2241   00332A  6E24               	movwf	??_turnCalibration^0,c
  2242   00332C  0E02               	movlw	2
  2243   00332E                     u4977:
  2244   00332E  2EE8               	decfsz	wreg,f,c
  2245   003330  D7FE               	bra	u4977
  2246   003332  2E24               	decfsz	??_turnCalibration^0,f,c
  2247   003334  D7FC               	bra	u4977
  2248   003336  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2249   003338  D7FA               	bra	u4977
  2250   00333A  D000               	nop2	
  2251                           
  2252                           ;dc_motor.c: 362:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  2253   00333C  A48E               	btfss	142,2,c	;volatile
  2254   00333E  EFA3  F019         	goto	u4421
  2255   003342  EFA6  F019         	goto	u4420
  2256   003346                     u4421:
  2257   003346  0E01               	movlw	1
  2258   003348  EFA7  F019         	goto	u4422
  2259   00334C                     u4420:
  2260   00334C  0E00               	movlw	0
  2261   00334E                     u4422:
  2262   00334E  6E24               	movwf	??_turnCalibration^0,c
  2263   003350  A68E               	btfss	142,3,c	;volatile
  2264   003352  EFAD  F019         	goto	u4431
  2265   003356  EFB0  F019         	goto	u4430
  2266   00335A                     u4431:
  2267   00335A  0E01               	movlw	1
  2268   00335C  EFB1  F019         	goto	u4432
  2269   003360                     u4430:
  2270   003360  0E00               	movlw	0
  2271   003362                     u4432:
  2272   003362  1424               	andwf	??_turnCalibration^0,w,c
  2273   003364  A0E8               	btfss	wreg,0,c
  2274   003366  EFB7  F019         	goto	u4441
  2275   00336A  EFB9  F019         	goto	u4440
  2276   00336E                     u4441:
  2277   00336E  EFC9  F019         	goto	l4673
  2278   003372                     u4440:
  2279   003372                     
  2280                           ;dc_motor.c: 363:                 LATHbits.LATH3=1;
  2281   003372  8680               	bsf	128,3,c	;volatile
  2282                           
  2283                           ;dc_motor.c: 364:                 LATDbits.LATD7=1;
  2284   003374  8E7C               	bsf	124,7,c	;volatile
  2285   003376                     
  2286                           ;dc_motor.c: 365:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2287   003376  0E52               	movlw	82
  2288   003378  6E25               	movwf	(??_turnCalibration+1)^0,c
  2289   00337A  0E2B               	movlw	43
  2290   00337C  6E24               	movwf	??_turnCalibration^0,c
  2291   00337E  0E00               	movlw	0
  2292   003380                     u4987:
  2293   003380  2EE8               	decfsz	wreg,f,c
  2294   003382  D7FE               	bra	u4987
  2295   003384  2E24               	decfsz	??_turnCalibration^0,f,c
  2296   003386  D7FC               	bra	u4987
  2297   003388  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2298   00338A  D7FA               	bra	u4987
  2299   00338C  D000               	nop2	
  2300   00338E                     
  2301                           ;dc_motor.c: 366:                 LATHbits.LATH3=0;
  2302   00338E  9680               	bcf	128,3,c	;volatile
  2303   003390                     
  2304                           ;dc_motor.c: 367:                 LATDbits.LATD7=0;
  2305   003390  9E7C               	bcf	124,7,c	;volatile
  2306   003392                     l4673:
  2307                           
  2308                           ;dc_motor.c: 369:             if (!PORTFbits.RF3){
  2309   003392  B68E               	btfsc	142,3,c	;volatile
  2310   003394  EFCE  F019         	goto	u4451
  2311   003398  EFD0  F019         	goto	u4450
  2312   00339C                     u4451:
  2313   00339C  EFE5  F019         	goto	l623
  2314   0033A0                     u4450:
  2315   0033A0                     
  2316                           ;dc_motor.c: 370:                 Turn45Delay+=10;
  2317   0033A0  0E0A               	movlw	10
  2318   0033A2  0100               	movlb	0	; () banked
  2319   0033A4  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2320   0033A6  0E00               	movlw	0
  2321   0033A8  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2322   0033AA                     
  2323                           ; BSR set to: 0
  2324                           ;dc_motor.c: 371:                 LATHbits.LATH3=1;
  2325   0033AA  8680               	bsf	128,3,c	;volatile
  2326   0033AC                     
  2327                           ; BSR set to: 0
  2328                           ;dc_motor.c: 372:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2329   0033AC  0E52               	movlw	82
  2330   0033AE  6E25               	movwf	(??_turnCalibration+1)^0,c
  2331   0033B0  0E2B               	movlw	43
  2332   0033B2  6E24               	movwf	??_turnCalibration^0,c
  2333   0033B4  0E00               	movlw	0
  2334   0033B6                     u4997:
  2335   0033B6  2EE8               	decfsz	wreg,f,c
  2336   0033B8  D7FE               	bra	u4997
  2337   0033BA  2E24               	decfsz	??_turnCalibration^0,f,c
  2338   0033BC  D7FC               	bra	u4997
  2339   0033BE  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2340   0033C0  D7FA               	bra	u4997
  2341   0033C2  D000               	nop2	
  2342   0033C4                     
  2343                           ;dc_motor.c: 373:                 LATHbits.LATH3=0;
  2344   0033C4  9680               	bcf	128,3,c	;volatile
  2345                           
  2346                           ;dc_motor.c: 374:             }
  2347   0033C6  EFFF  F019         	goto	l4691
  2348   0033CA                     l623:
  2349   0033CA  B48E               	btfsc	142,2,c	;volatile
  2350   0033CC  EFEA  F019         	goto	u4461
  2351   0033D0  EFEC  F019         	goto	u4460
  2352   0033D4                     u4461:
  2353   0033D4  EFFF  F019         	goto	l4691
  2354   0033D8                     u4460:
  2355   0033D8                     
  2356                           ;dc_motor.c: 377:                 Turn45Delay-=10;
  2357   0033D8  0100               	movlb	0	; () banked
  2358   0033DA  0EF6               	movlw	246
  2359   0033DC  27FC               	addwf	_Turn45Delay& (0+255),f,b
  2360   0033DE  0EFF               	movlw	255
  2361   0033E0  23FD               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2362   0033E2                     
  2363                           ; BSR set to: 0
  2364                           ;dc_motor.c: 378:                 LATDbits.LATD7=1;
  2365   0033E2  8E7C               	bsf	124,7,c	;volatile
  2366   0033E4                     
  2367                           ; BSR set to: 0
  2368                           ;dc_motor.c: 379:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2369   0033E4  0E52               	movlw	82
  2370   0033E6  6E25               	movwf	(??_turnCalibration+1)^0,c
  2371   0033E8  0E2B               	movlw	43
  2372   0033EA  6E24               	movwf	??_turnCalibration^0,c
  2373   0033EC  0E00               	movlw	0
  2374   0033EE                     u5007:
  2375   0033EE  2EE8               	decfsz	wreg,f,c
  2376   0033F0  D7FE               	bra	u5007
  2377   0033F2  2E24               	decfsz	??_turnCalibration^0,f,c
  2378   0033F4  D7FC               	bra	u5007
  2379   0033F6  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2380   0033F8  D7FA               	bra	u5007
  2381   0033FA  D000               	nop2	
  2382   0033FC                     
  2383                           ;dc_motor.c: 380:                 LATDbits.LATD7=0;
  2384   0033FC  9E7C               	bcf	124,7,c	;volatile
  2385   0033FE                     l4691:
  2386                           
  2387                           ;dc_motor.c: 357:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2388   0033FE  A48E               	btfss	142,2,c	;volatile
  2389   003400  EF04  F01A         	goto	u4471
  2390   003404  EF06  F01A         	goto	u4470
  2391   003408                     u4471:
  2392   003408  EF0D  F01A         	goto	l628
  2393   00340C                     u4470:
  2394   00340C  B68E               	btfsc	142,3,c	;volatile
  2395   00340E  EF0B  F01A         	goto	u4481
  2396   003412  EF0D  F01A         	goto	u4480
  2397   003416                     u4481:
  2398   003416  EF91  F019         	goto	l621
  2399   00341A                     u4480:
  2400   00341A                     l628:
  2401                           
  2402                           ;dc_motor.c: 383:         LATDbits.LATD4=0;
  2403   00341A  987C               	bcf	124,4,c	;volatile
  2404   00341C                     
  2405                           ;dc_motor.c: 384:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2406   00341C  0EA3               	movlw	163
  2407   00341E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2408   003420  0E57               	movlw	87
  2409   003422  6E24               	movwf	??_turnCalibration^0,c
  2410   003424  0E02               	movlw	2
  2411   003426                     u5017:
  2412   003426  2EE8               	decfsz	wreg,f,c
  2413   003428  D7FE               	bra	u5017
  2414   00342A  2E24               	decfsz	??_turnCalibration^0,f,c
  2415   00342C  D7FC               	bra	u5017
  2416   00342E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2417   003430  D7FA               	bra	u5017
  2418   003432  D000               	nop2	
  2419   003434                     l618:
  2420                           
  2421                           ;dc_motor.c: 349:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  2422   003434  A68E               	btfss	142,3,c	;volatile
  2423   003436  EF1F  F01A         	goto	u4491
  2424   00343A  EF22  F01A         	goto	u4490
  2425   00343E                     u4491:
  2426   00343E  0E01               	movlw	1
  2427   003440  EF23  F01A         	goto	u4492
  2428   003444                     u4490:
  2429   003444  0E00               	movlw	0
  2430   003446                     u4492:
  2431   003446  6E24               	movwf	??_turnCalibration^0,c
  2432   003448  A48E               	btfss	142,2,c	;volatile
  2433   00344A  EF29  F01A         	goto	u4501
  2434   00344E  EF2C  F01A         	goto	u4500
  2435   003452                     u4501:
  2436   003452  0E01               	movlw	1
  2437   003454  EF2D  F01A         	goto	u4502
  2438   003458                     u4500:
  2439   003458  0E00               	movlw	0
  2440   00345A                     u4502:
  2441   00345A  1424               	andwf	??_turnCalibration^0,w,c
  2442   00345C  A0E8               	btfss	wreg,0,c
  2443   00345E  EF33  F01A         	goto	u4511
  2444   003462  EF35  F01A         	goto	u4510
  2445   003466                     u4511:
  2446   003466  EF66  F019         	goto	l619
  2447   00346A                     u4510:
  2448   00346A                     
  2449                           ;dc_motor.c: 386:     LATDbits.LATD3=0;
  2450   00346A  967C               	bcf	124,3,c	;volatile
  2451   00346C                     
  2452                           ;dc_motor.c: 387:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2453   00346C  0EA3               	movlw	163
  2454   00346E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2455   003470  0E57               	movlw	87
  2456   003472  6E24               	movwf	??_turnCalibration^0,c
  2457   003474  0E02               	movlw	2
  2458   003476                     u5027:
  2459   003476  2EE8               	decfsz	wreg,f,c
  2460   003478  D7FE               	bra	u5027
  2461   00347A  2E24               	decfsz	??_turnCalibration^0,f,c
  2462   00347C  D7FC               	bra	u5027
  2463   00347E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2464   003480  D7FA               	bra	u5027
  2465   003482  D000               	nop2	
  2466   003484  0012               	return		;funcret
  2467   003486                     __end_of_turnCalibration:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _sprintf *****************
  2471 ;; Defined at:
  2472 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2475 ;;		 -> main@buf(100), 
  2476 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2477 ;;		 -> STR_2(36), STR_1(36), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2480 ;;  ap              2   12[BANK0 ] PTR void [1]
  2481 ;;		 -> ?_sprintf(2), 
  2482 ;;  ret             2    0        int 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    0[BANK0 ] int 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2492 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2493 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;Total ram usage:       25 bytes
  2497 ;; Hardware stack levels used: 1
  2498 ;; Hardware stack levels required when called: 8
  2499 ;; This function calls:
  2500 ;;		_vfprintf
  2501 ;; This function is called by:
  2502 ;;		_main
  2503 ;; This function uses a non-reentrant model
  2504 ;;
  2505                           
  2506                           	psect	text2
  2507   004698                     __ptext2:
  2508                           	callstack 0
  2509   004698                     _sprintf:
  2510                           	callstack 22
  2511   004698  0E64               	movlw	low (?_sprintf+4)
  2512   00469A  0100               	movlb	0	; () banked
  2513   00469C  6F6C               	movwf	sprintf@ap& (0+255),b
  2514   00469E  0E00               	movlw	high (?_sprintf+4)
  2515   0046A0  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2516   0046A2  C060  F06E         	movff	sprintf@s,sprintf@f
  2517   0046A6  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2518   0046AA                     
  2519                           ; BSR set to: 0
  2520   0046AA  0E00               	movlw	0
  2521   0046AC  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2522   0046AE  0E00               	movlw	0
  2523   0046B0  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2524   0046B2                     
  2525                           ; BSR set to: 0
  2526   0046B2  0E00               	movlw	0
  2527   0046B4  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2528   0046B6  0E00               	movlw	0
  2529   0046B8  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2530   0046BA                     
  2531                           ; BSR set to: 0
  2532   0046BA  0E6E               	movlw	low sprintf@f
  2533   0046BC  6E51               	movwf	vfprintf@fp^0,c
  2534   0046BE  0E00               	movlw	high sprintf@f
  2535   0046C0  6E52               	movwf	(vfprintf@fp+1)^0,c
  2536   0046C2  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2537   0046C6  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2538   0046CA  0E6C               	movlw	low sprintf@ap
  2539   0046CC  6E55               	movwf	vfprintf@ap^0,c
  2540   0046CE  0E00               	movlw	high sprintf@ap
  2541   0046D0  6E56               	movwf	(vfprintf@ap+1)^0,c
  2542   0046D2  ECE2  F024         	call	_vfprintf	;wreg free
  2543   0046D6  0100               	movlb	0	; () banked
  2544   0046D8  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2545   0046DA  2560               	addwf	sprintf@s& (0+255),w,b
  2546   0046DC  6ED9               	movwf	fsr2l,c
  2547   0046DE  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2548   0046E0  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2549   0046E2  6EDA               	movwf	fsr2h,c
  2550   0046E4  0E00               	movlw	0
  2551   0046E6  6EDF               	movwf	indf2,c
  2552   0046E8                     
  2553                           ; BSR set to: 0
  2554   0046E8  0012               	return		;funcret
  2555   0046EA                     __end_of_sprintf:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _vfprintf *****************
  2559 ;; Defined at:
  2560 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2563 ;;		 -> sprintf@f(11), 
  2564 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2565 ;;		 -> STR_2(36), STR_1(36), 
  2566 ;;  ap              2   84[COMRAM] PTR PTR void 
  2567 ;;		 -> sprintf@ap(2), 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2570 ;;		 -> STR_2(36), STR_1(36), 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  2   80[COMRAM] int 
  2573 ;; Registers used:
  2574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2580 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2583 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2584 ;;Total ram usage:        8 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 7
  2587 ;; This function calls:
  2588 ;;		_vfpfcnvrt
  2589 ;; This function is called by:
  2590 ;;		_sprintf
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text3
  2595   0049C4                     __ptext3:
  2596                           	callstack 0
  2597   0049C4                     _vfprintf:
  2598                           	callstack 22
  2599   0049C4                     
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2601   0049C4  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2602   0049C8  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2605   0049CC  EFF6  F024         	goto	l4349
  2606   0049D0                     l4347:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2609   0049D0  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2610   0049D4  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2611   0049D8  0E57               	movlw	low vfprintf@cfmt
  2612   0049DA  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2613   0049DC  0E00               	movlw	high vfprintf@cfmt
  2614   0049DE  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2615   0049E0  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2616   0049E4  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2617   0049E8  EC49  F01D         	call	_vfpfcnvrt	;wreg free
  2618   0049EC                     l4349:
  2619                           
  2620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2621   0049EC  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2622   0049F0  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2623   0049F4                     	if	0	;tblptru may be non-zero
  2624   0049F4                     	endif
  2625   0049F4                     	if	0	;tblptru may be non-zero
  2626   0049F4                     	endif
  2627   0049F4  0008               	tblrd		*
  2628   0049F6  50F5               	movf	tablat,w,c
  2629   0049F8  0900               	iorlw	0
  2630   0049FA  A4D8               	btfss	status,2,c
  2631   0049FC  EF02  F025         	goto	u4041
  2632   004A00  EF04  F025         	goto	u4040
  2633   004A04                     u4041:
  2634   004A04  EFE8  F024         	goto	l4347
  2635   004A08                     u4040:
  2636   004A08                     
  2637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2638   004A08  0E00               	movlw	0
  2639   004A0A  6E52               	movwf	(?_vfprintf+1)^0,c
  2640   004A0C  0E00               	movlw	0
  2641   004A0E  6E51               	movwf	?_vfprintf^0,c
  2642   004A10  0012               	return		;funcret
  2643   004A12                     __end_of_vfprintf:
  2644                           	callstack 0
  2645                           
  2646 ;; *************** function _vfpfcnvrt *****************
  2647 ;; Defined at:
  2648 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2651 ;;		 -> sprintf@f(11), 
  2652 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  2653 ;;		 -> vfprintf@cfmt(2), 
  2654 ;;  ap              2   66[COMRAM] PTR PTR void 
  2655 ;;		 -> sprintf@ap(2), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  convarg         8   70[COMRAM] struct .
  2658 ;;  cp              2   78[COMRAM] PTR unsigned char 
  2659 ;;		 -> STR_2(36), STR_1(36), 
  2660 ;;  i               2    0        int 
  2661 ;;  done            2    0        int 
  2662 ;;  c               1    0        unsigned char 
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2672 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2673 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;Total ram usage:       18 bytes
  2677 ;; Hardware stack levels used: 1
  2678 ;; Hardware stack levels required when called: 6
  2679 ;; This function calls:
  2680 ;;		_dtoa
  2681 ;;		_fputc
  2682 ;; This function is called by:
  2683 ;;		_vfprintf
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text4
  2688   003A92                     __ptext4:
  2689                           	callstack 0
  2690   003A92                     _vfpfcnvrt:
  2691                           	callstack 22
  2692   003A92                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2694   003A92  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2695   003A96  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2696   003A9A  CFDE FFF6          	movff	postinc2,tblptrl
  2697   003A9E  CFDD FFF7          	movff	postdec2,tblptrh
  2698   003AA2                     	if	0	;tblptru may be non-zero
  2699   003AA2                     	endif
  2700   003AA2                     	if	0	;tblptru may be non-zero
  2701   003AA2                     	endif
  2702   003AA2  0008               	tblrd		*
  2703   003AA4  50F5               	movf	tablat,w,c
  2704   003AA6  0A25               	xorlw	37
  2705   003AA8  A4D8               	btfss	status,2,c
  2706   003AAA  EF59  F01D         	goto	u3381
  2707   003AAE  EF5B  F01D         	goto	u3380
  2708   003AB2                     u3381:
  2709   003AB2  EFDB  F01D         	goto	l3903
  2710   003AB6                     u3380:
  2711   003AB6                     
  2712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2713   003AB6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2714   003ABA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2715   003ABE  2ADE               	incf	postinc2,f,c
  2716   003AC0  0E00               	movlw	0
  2717   003AC2  22DD               	addwfc	postdec2,f,c
  2718   003AC4                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2720   003AC4  0E00               	movlw	0
  2721   003AC6  0101               	movlb	1	; () banked
  2722   003AC8  6F5D               	movwf	(_width+1)& (0+255),b
  2723   003ACA  0E00               	movlw	0
  2724   003ACC  6F5C               	movwf	_width& (0+255),b
  2725   003ACE  C15C  F0F2         	movff	_width,_flags
  2726   003AD2                     
  2727                           ; BSR set to: 1
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2729   003AD2  695E               	setf	_prec& (0+255),b
  2730   003AD4  695F               	setf	(_prec+1)& (0+255),b
  2731   003AD6                     
  2732                           ; BSR set to: 1
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2734   003AD6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2735   003ADA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2736   003ADE  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  2737   003AE2  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  2738   003AE6                     
  2739                           ; BSR set to: 1
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2741   003AE6  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2742   003AEA  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2743   003AEE                     	if	0	;tblptru may be non-zero
  2744   003AEE                     	endif
  2745   003AEE                     	if	0	;tblptru may be non-zero
  2746   003AEE                     	endif
  2747   003AEE  0008               	tblrd		*
  2748   003AF0  50F5               	movf	tablat,w,c
  2749   003AF2  0A64               	xorlw	100
  2750   003AF4  B4D8               	btfsc	status,2,c
  2751   003AF6  EF7F  F01D         	goto	u3391
  2752   003AFA  EF81  F01D         	goto	u3390
  2753   003AFE                     u3391:
  2754   003AFE  EF8F  F01D         	goto	l3893
  2755   003B02                     u3390:
  2756   003B02                     
  2757                           ; BSR set to: 1
  2758   003B02  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2759   003B06  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2760   003B0A                     	if	0	;tblptru may be non-zero
  2761   003B0A                     	endif
  2762   003B0A                     	if	0	;tblptru may be non-zero
  2763   003B0A                     	endif
  2764   003B0A  0008               	tblrd		*
  2765   003B0C  50F5               	movf	tablat,w,c
  2766   003B0E  0A69               	xorlw	105
  2767   003B10  A4D8               	btfss	status,2,c
  2768   003B12  EF8D  F01D         	goto	u3401
  2769   003B16  EF8F  F01D         	goto	u3400
  2770   003B1A                     u3401:
  2771   003B1A  EFD2  F01D         	goto	l3899
  2772   003B1E                     u3400:
  2773   003B1E                     l3893:
  2774                           
  2775                           ; BSR set to: 1
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2777   003B1E  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2778   003B22  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2779   003B26  CFDF F045          	movff	indf2,??_vfpfcnvrt
  2780   003B2A  0E02               	movlw	2
  2781   003B2C  26DE               	addwf	postinc2,f,c
  2782   003B2E  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  2783   003B32  0E00               	movlw	0
  2784   003B34  22DD               	addwfc	postdec2,f,c
  2785   003B36  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2786   003B3A  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2787   003B3E  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  2788   003B42  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  2789   003B46  0E00               	movlw	0
  2790   003B48  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2791   003B4A  0EFF               	movlw	-1
  2792   003B4C  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2793   003B4E  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2794   003B50  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2795   003B52  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2796   003B54  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2797   003B56  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2798                           
  2799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2800   003B58  0E01               	movlw	1
  2801   003B5A  244F               	addwf	vfpfcnvrt@cp^0,w,c
  2802   003B5C  6E45               	movwf	??_vfpfcnvrt^0,c
  2803   003B5E  0E00               	movlw	0
  2804   003B60  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2805   003B62  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  2806   003B64  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2807   003B68  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2808   003B6C  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  2809   003B70  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2810   003B74                     
  2811                           ; BSR set to: 1
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2813   003B74  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2814   003B78  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2815   003B7C  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2816   003B80  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2817   003B84  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2818   003B88  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2819   003B8C  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2820   003B90  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2821   003B94  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2822   003B98  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2823   003B9C  EC09  F017         	call	_dtoa	;wreg free
  2824   003BA0  EFEF  F01D         	goto	l1445
  2825   003BA4                     l3899:
  2826                           
  2827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2828   003BA4  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2829   003BA8  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2830   003BAC  2ADE               	incf	postinc2,f,c
  2831   003BAE  0E00               	movlw	0
  2832   003BB0  22DD               	addwfc	postdec2,f,c
  2833   003BB2  EFEF  F01D         	goto	l1445
  2834   003BB6                     l3903:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2837   003BB6  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2838   003BBA  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2839   003BBE  CFDE FFF6          	movff	postinc2,tblptrl
  2840   003BC2  CFDD FFF7          	movff	postdec2,tblptrh
  2841   003BC6                     	if	0	;tblptru may be non-zero
  2842   003BC6                     	endif
  2843   003BC6                     	if	0	;tblptru may be non-zero
  2844   003BC6                     	endif
  2845   003BC6  0008               	tblrd		*
  2846   003BC8  50F5               	movf	tablat,w,c
  2847   003BCA  6E01               	movwf	fputc@c^0,c
  2848   003BCC  6A02               	clrf	(fputc@c+1)^0,c
  2849   003BCE  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2850   003BD2  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2851   003BD6  EC72  F01E         	call	_fputc	;wreg free
  2852   003BDA  EFD2  F01D         	goto	l3899
  2853   003BDE                     l1445:
  2854   003BDE  0012               	return		;funcret
  2855   003BE0                     __end_of_vfpfcnvrt:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _dtoa *****************
  2859 ;; Defined at:
  2860 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  2863 ;;		 -> sprintf@f(11), 
  2864 ;;  d               8   29[COMRAM] long long 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;  n               8   51[COMRAM] long long 
  2867 ;;  i               2   59[COMRAM] int 
  2868 ;;  w               2   49[COMRAM] int 
  2869 ;;  p               2   47[COMRAM] int 
  2870 ;;  s               1   61[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:       35 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 5
  2887 ;; This function calls:
  2888 ;;		___aodiv
  2889 ;;		___aomod
  2890 ;;		_abs
  2891 ;;		_pad
  2892 ;; This function is called by:
  2893 ;;		_vfpfcnvrt
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text5
  2898   002E12                     __ptext5:
  2899                           	callstack 0
  2900   002E12                     _dtoa:
  2901                           	callstack 22
  2902   002E12                     
  2903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2904   002E12  C01E  F034         	movff	dtoa@d,dtoa@n
  2905   002E16  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  2906   002E1A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  2907   002E1E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  2908   002E22  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  2909   002E26  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  2910   002E2A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  2911   002E2E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  2912   002E32                     
  2913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2914   002E32  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  2915   002E34  EF1E  F017         	goto	u2861
  2916   002E38  EF21  F017         	goto	u2860
  2917   002E3C                     u2861:
  2918   002E3C  0E01               	movlw	1
  2919   002E3E  EF22  F017         	goto	u2870
  2920   002E42                     u2860:
  2921   002E42  0E00               	movlw	0
  2922   002E44                     u2870:
  2923   002E44  6E3E               	movwf	dtoa@s^0,c
  2924   002E46                     
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2926   002E46  503E               	movf	dtoa@s^0,w,c
  2927   002E48  B4D8               	btfsc	status,2,c
  2928   002E4A  EF29  F017         	goto	u2881
  2929   002E4E  EF2B  F017         	goto	u2880
  2930   002E52                     u2881:
  2931   002E52  EF3B  F017         	goto	l3569
  2932   002E56                     u2880:
  2933   002E56                     
  2934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2935   002E56  1E3B               	comf	(dtoa@n+7)^0,f,c
  2936   002E58  1E3A               	comf	(dtoa@n+6)^0,f,c
  2937   002E5A  1E39               	comf	(dtoa@n+5)^0,f,c
  2938   002E5C  1E38               	comf	(dtoa@n+4)^0,f,c
  2939   002E5E  1E37               	comf	(dtoa@n+3)^0,f,c
  2940   002E60  1E36               	comf	(dtoa@n+2)^0,f,c
  2941   002E62  1E35               	comf	(dtoa@n+1)^0,f,c
  2942   002E64  6C34               	negf	dtoa@n^0,c
  2943   002E66  0E00               	movlw	0
  2944   002E68  2235               	addwfc	(dtoa@n+1)^0,f,c
  2945   002E6A  2236               	addwfc	(dtoa@n+2)^0,f,c
  2946   002E6C  2237               	addwfc	(dtoa@n+3)^0,f,c
  2947   002E6E  2238               	addwfc	(dtoa@n+4)^0,f,c
  2948   002E70  2239               	addwfc	(dtoa@n+5)^0,f,c
  2949   002E72  223A               	addwfc	(dtoa@n+6)^0,f,c
  2950   002E74  223B               	addwfc	(dtoa@n+7)^0,f,c
  2951   002E76                     l3569:
  2952                           
  2953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2954   002E76  0101               	movlb	1	; () banked
  2955   002E78  BF5F               	btfsc	(_prec+1)& (0+255),7,b
  2956   002E7A  EF49  F017         	goto	u2890
  2957   002E7E  515F               	movf	(_prec+1)& (0+255),w,b
  2958   002E80  E106               	bnz	u2891
  2959   002E82  055E               	decf	_prec& (0+255),w,b
  2960   002E84  B0D8               	btfsc	status,0,c
  2961   002E86  EF47  F017         	goto	u2891
  2962   002E8A  EF49  F017         	goto	u2890
  2963   002E8E                     u2891:
  2964   002E8E  EF4F  F017         	goto	l1424
  2965   002E92                     u2890:
  2966   002E92                     
  2967                           ; BSR set to: 1
  2968   002E92  0E00               	movlw	0
  2969   002E94  6E31               	movwf	(dtoa@p+1)^0,c
  2970   002E96  0E01               	movlw	1
  2971   002E98  6E30               	movwf	dtoa@p^0,c
  2972   002E9A  EF53  F017         	goto	l1426
  2973   002E9E                     l1424:
  2974                           
  2975                           ; BSR set to: 1
  2976   002E9E  C15E  F030         	movff	_prec,dtoa@p
  2977   002EA2  C15F  F031         	movff	_prec+1,dtoa@p+1
  2978   002EA6                     l1426:
  2979                           
  2980                           ; BSR set to: 1
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2982   002EA6  C15C  F032         	movff	_width,dtoa@w
  2983   002EAA  C15D  F033         	movff	_width+1,dtoa@w+1
  2984   002EAE                     
  2985                           ; BSR set to: 1
  2986                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2987   002EAE  503E               	movf	dtoa@s^0,w,c
  2988   002EB0  B4D8               	btfsc	status,2,c
  2989   002EB2  EF5D  F017         	goto	u2901
  2990   002EB6  EF5F  F017         	goto	u2900
  2991   002EBA                     u2901:
  2992   002EBA  EF76  F017         	goto	l1427
  2993   002EBE                     u2900:
  2994   002EBE                     
  2995                           ; BSR set to: 1
  2996                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2997   002EBE  0632               	decf	dtoa@w^0,f,c
  2998   002EC0  A0D8               	btfss	status,0,c
  2999   002EC2  0633               	decf	(dtoa@w+1)^0,f,c
  3000   002EC4                     
  3001                           ; BSR set to: 1
  3002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3003   002EC4  503E               	movf	dtoa@s^0,w,c
  3004   002EC6  A4D8               	btfss	status,2,c
  3005   002EC8  EF68  F017         	goto	u2911
  3006   002ECC  EF6A  F017         	goto	u2910
  3007   002ED0                     u2911:
  3008   002ED0  EF70  F017         	goto	l3581
  3009   002ED4                     u2910:
  3010   002ED4                     
  3011                           ; BSR set to: 1
  3012   002ED4  0E00               	movlw	0
  3013   002ED6  6E2F               	movwf	(_dtoa$2723+1)^0,c
  3014   002ED8  0E2B               	movlw	43
  3015   002EDA  6E2E               	movwf	_dtoa$2723^0,c
  3016   002EDC  EF74  F017         	goto	l3583
  3017   002EE0                     l3581:
  3018                           
  3019                           ; BSR set to: 1
  3020   002EE0  0E00               	movlw	0
  3021   002EE2  6E2F               	movwf	(_dtoa$2723+1)^0,c
  3022   002EE4  0E2D               	movlw	45
  3023   002EE6  6E2E               	movwf	_dtoa$2723^0,c
  3024   002EE8                     l3583:
  3025                           
  3026                           ; BSR set to: 1
  3027   002EE8  C02E  F03E         	movff	_dtoa$2723,dtoa@s
  3028   002EEC                     l1427:
  3029                           
  3030                           ; BSR set to: 1
  3031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3032   002EEC  0E00               	movlw	0
  3033   002EEE  6E3D               	movwf	(dtoa@i+1)^0,c
  3034   002EF0  0E1F               	movlw	31
  3035   002EF2  6E3C               	movwf	dtoa@i^0,c
  3036   002EF4                     
  3037                           ; BSR set to: 1
  3038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3039   002EF4  0E00               	movlw	0
  3040   002EF6  6FB3               	movwf	(_dbuf+31)& (0+255),b
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3043   002EF8  EFFA  F017         	goto	l3597
  3044   002EFC                     l3587:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3047   002EFC  063C               	decf	dtoa@i^0,f,c
  3048   002EFE  A0D8               	btfss	status,0,c
  3049   002F00  063D               	decf	(dtoa@i+1)^0,f,c
  3050   002F02                     
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3052   002F02  0E94               	movlw	low _dbuf
  3053   002F04  243C               	addwf	dtoa@i^0,w,c
  3054   002F06  6ED9               	movwf	fsr2l,c
  3055   002F08  0E01               	movlw	high _dbuf
  3056   002F0A  203D               	addwfc	(dtoa@i+1)^0,w,c
  3057   002F0C  6EDA               	movwf	fsr2h,c
  3058   002F0E  C034  F001         	movff	dtoa@n,___aomod@dividend
  3059   002F12  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3060   002F16  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3061   002F1A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3062   002F1E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3063   002F22  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3064   002F26  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3065   002F2A  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3066   002F2E  0E0A               	movlw	10
  3067   002F30  6E09               	movwf	___aomod@divisor^0,c
  3068   002F32  0E00               	movlw	0
  3069   002F34  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3070   002F36  0E00               	movlw	0
  3071   002F38  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3072   002F3A  0E00               	movlw	0
  3073   002F3C  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3074   002F3E  0E00               	movlw	0
  3075   002F40  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3076   002F42  0E00               	movlw	0
  3077   002F44  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3078   002F46  0E00               	movlw	0
  3079   002F48  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3080   002F4A  0E00               	movlw	0
  3081   002F4C  6E10               	movwf	(___aomod@divisor+7)^0,c
  3082   002F4E  EC97  F01C         	call	___aomod	;wreg free
  3083   002F52  C001  F026         	movff	?___aomod,??_dtoa
  3084   002F56  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3085   002F5A  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3086   002F5E  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3087   002F62  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3088   002F66  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3089   002F6A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3090   002F6E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3091   002F72  C026  F013         	movff	??_dtoa,abs@a
  3092   002F76  C027  F014         	movff	??_dtoa+1,abs@a+1
  3093   002F7A  ECBD  F025         	call	_abs	;wreg free
  3094   002F7E  5013               	movf	?_abs^0,w,c
  3095   002F80  0F30               	addlw	48
  3096   002F82  6EDF               	movwf	indf2,c
  3097   002F84                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3099   002F84  0630               	decf	dtoa@p^0,f,c
  3100   002F86  A0D8               	btfss	status,0,c
  3101   002F88  0631               	decf	(dtoa@p+1)^0,f,c
  3102   002F8A                     
  3103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3104   002F8A  0632               	decf	dtoa@w^0,f,c
  3105   002F8C  A0D8               	btfss	status,0,c
  3106   002F8E  0633               	decf	(dtoa@w+1)^0,f,c
  3107   002F90                     
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3109   002F90  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3110   002F94  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3111   002F98  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3112   002F9C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3113   002FA0  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3114   002FA4  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3115   002FA8  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3116   002FAC  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3117   002FB0  0E0A               	movlw	10
  3118   002FB2  6E09               	movwf	___aodiv@divisor^0,c
  3119   002FB4  0E00               	movlw	0
  3120   002FB6  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3121   002FB8  0E00               	movlw	0
  3122   002FBA  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3123   002FBC  0E00               	movlw	0
  3124   002FBE  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3125   002FC0  0E00               	movlw	0
  3126   002FC2  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3127   002FC4  0E00               	movlw	0
  3128   002FC6  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3129   002FC8  0E00               	movlw	0
  3130   002FCA  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3131   002FCC  0E00               	movlw	0
  3132   002FCE  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3133   002FD0  EC1D  F01B         	call	___aodiv	;wreg free
  3134   002FD4  C001  F034         	movff	?___aodiv,dtoa@n
  3135   002FD8  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3136   002FDC  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3137   002FE0  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3138   002FE4  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3139   002FE8  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3140   002FEC  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3141   002FF0  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3142   002FF4                     l3597:
  3143                           
  3144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3145   002FF4  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3146   002FF6  EF05  F018         	goto	u2921
  3147   002FFA  503D               	movf	(dtoa@i+1)^0,w,c
  3148   002FFC  E108               	bnz	u2920
  3149   002FFE  043C               	decf	dtoa@i^0,w,c
  3150   003000  A0D8               	btfss	status,0,c
  3151   003002  EF05  F018         	goto	u2921
  3152   003006  EF07  F018         	goto	u2920
  3153   00300A                     u2921:
  3154   00300A  EF23  F018         	goto	l3603
  3155   00300E                     u2920:
  3156   00300E  5034               	movf	dtoa@n^0,w,c
  3157   003010  1035               	iorwf	(dtoa@n+1)^0,w,c
  3158   003012  1036               	iorwf	(dtoa@n+2)^0,w,c
  3159   003014  1037               	iorwf	(dtoa@n+3)^0,w,c
  3160   003016  1038               	iorwf	(dtoa@n+4)^0,w,c
  3161   003018  1039               	iorwf	(dtoa@n+5)^0,w,c
  3162   00301A  103A               	iorwf	(dtoa@n+6)^0,w,c
  3163   00301C  103B               	iorwf	(dtoa@n+7)^0,w,c
  3164   00301E  A4D8               	btfss	status,2,c
  3165   003020  EF14  F018         	goto	u2931
  3166   003024  EF16  F018         	goto	u2930
  3167   003028                     u2931:
  3168   003028  EF7E  F017         	goto	l3587
  3169   00302C                     u2930:
  3170   00302C  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3171   00302E  EF23  F018         	goto	u2940
  3172   003032  5031               	movf	(dtoa@p+1)^0,w,c
  3173   003034  E106               	bnz	u2941
  3174   003036  0430               	decf	dtoa@p^0,w,c
  3175   003038  B0D8               	btfsc	status,0,c
  3176   00303A  EF21  F018         	goto	u2941
  3177   00303E  EF23  F018         	goto	u2940
  3178   003042                     u2941:
  3179   003042  EF7E  F017         	goto	l3587
  3180   003046                     u2940:
  3181   003046                     l3603:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3184   003046  503E               	movf	dtoa@s^0,w,c
  3185   003048  B4D8               	btfsc	status,2,c
  3186   00304A  EF29  F018         	goto	u2951
  3187   00304E  EF2B  F018         	goto	u2950
  3188   003052                     u2951:
  3189   003052  EF36  F018         	goto	l3609
  3190   003056                     u2950:
  3191   003056                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3193   003056  063C               	decf	dtoa@i^0,f,c
  3194   003058  A0D8               	btfss	status,0,c
  3195   00305A  063D               	decf	(dtoa@i+1)^0,f,c
  3196   00305C                     
  3197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3198   00305C  0E94               	movlw	low _dbuf
  3199   00305E  243C               	addwf	dtoa@i^0,w,c
  3200   003060  6ED9               	movwf	fsr2l,c
  3201   003062  0E01               	movlw	high _dbuf
  3202   003064  203D               	addwfc	(dtoa@i+1)^0,w,c
  3203   003066  6EDA               	movwf	fsr2h,c
  3204   003068  C03E  FFDF         	movff	dtoa@s,indf2
  3205   00306C                     l3609:
  3206                           
  3207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3208   00306C  C01C  F011         	movff	dtoa@fp,pad@fp
  3209   003070  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3210   003074  0E94               	movlw	low _dbuf
  3211   003076  243C               	addwf	dtoa@i^0,w,c
  3212   003078  6E13               	movwf	pad@buf^0,c
  3213   00307A  0E01               	movlw	high _dbuf
  3214   00307C  203D               	addwfc	(dtoa@i+1)^0,w,c
  3215   00307E  6E14               	movwf	(pad@buf+1)^0,c
  3216   003080  C032  F015         	movff	dtoa@w,pad@p
  3217   003084  C033  F016         	movff	dtoa@w+1,pad@p+1
  3218   003088  ECBF  F021         	call	_pad	;wreg free
  3219   00308C  0012               	return		;funcret
  3220   00308E                     __end_of_dtoa:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _pad *****************
  3224 ;; Defined at:
  3225 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3228 ;;		 -> sprintf@f(11), 
  3229 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3230 ;;		 -> dbuf(32), 
  3231 ;;  p               2   20[COMRAM] int 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  w               2   25[COMRAM] int 
  3234 ;;  i               2   23[COMRAM] int 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:       11 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 4
  3251 ;; This function calls:
  3252 ;;		_fputc
  3253 ;;		_fputs
  3254 ;; This function is called by:
  3255 ;;		_dtoa
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text6
  3260   00437E                     __ptext6:
  3261                           	callstack 0
  3262   00437E                     _pad:
  3263                           	callstack 22
  3264   00437E                     
  3265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3266   00437E  BE16               	btfsc	(pad@p+1)^0,7,c
  3267   004380  EFC4  F021         	goto	u2701
  3268   004384  EFC6  F021         	goto	u2700
  3269   004388                     u2701:
  3270   004388  EFCC  F021         	goto	l3467
  3271   00438C                     u2700:
  3272   00438C  C015  F01A         	movff	pad@p,pad@w
  3273   004390  C016  F01B         	movff	pad@p+1,pad@w+1
  3274   004394  EFD0  F021         	goto	l1415
  3275   004398                     l3467:
  3276   004398  0E00               	movlw	0
  3277   00439A  6E1B               	movwf	(pad@w+1)^0,c
  3278   00439C  0E00               	movlw	0
  3279   00439E  6E1A               	movwf	pad@w^0,c
  3280   0043A0                     l1415:
  3281                           
  3282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3283   0043A0  0E00               	movlw	0
  3284   0043A2  6E19               	movwf	(pad@i+1)^0,c
  3285   0043A4  0E00               	movlw	0
  3286   0043A6  6E18               	movwf	pad@i^0,c
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3289   0043A8  EFE2  F021         	goto	l3473
  3290   0043AC                     l3469:
  3291                           
  3292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3293   0043AC  0E00               	movlw	0
  3294   0043AE  6E02               	movwf	(fputc@c+1)^0,c
  3295   0043B0  0E20               	movlw	32
  3296   0043B2  6E01               	movwf	fputc@c^0,c
  3297   0043B4  C011  F003         	movff	pad@fp,fputc@fp
  3298   0043B8  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3299   0043BC  EC72  F01E         	call	_fputc	;wreg free
  3300   0043C0                     
  3301                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3302   0043C0  4A18               	infsnz	pad@i^0,f,c
  3303   0043C2  2A19               	incf	(pad@i+1)^0,f,c
  3304   0043C4                     l3473:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3307   0043C4  501A               	movf	pad@w^0,w,c
  3308   0043C6  5C18               	subwf	pad@i^0,w,c
  3309   0043C8  5019               	movf	(pad@i+1)^0,w,c
  3310   0043CA  0A80               	xorlw	128
  3311   0043CC  6E17               	movwf	??_pad^0,c
  3312   0043CE  501B               	movf	(pad@w+1)^0,w,c
  3313   0043D0  0A80               	xorlw	128
  3314   0043D2  5817               	subwfb	??_pad^0,w,c
  3315   0043D4  A0D8               	btfss	status,0,c
  3316   0043D6  EFEF  F021         	goto	u2711
  3317   0043DA  EFF1  F021         	goto	u2710
  3318   0043DE                     u2711:
  3319   0043DE  EFD6  F021         	goto	l3469
  3320   0043E2                     u2710:
  3321   0043E2                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3323   0043E2  C013  F00A         	movff	pad@buf,fputs@s
  3324   0043E6  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3325   0043EA  C011  F00C         	movff	pad@fp,fputs@fp
  3326   0043EE  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3327   0043F2  EC7A  F025         	call	_fputs	;wreg free
  3328   0043F6  0012               	return		;funcret
  3329   0043F8                     __end_of_pad:
  3330                           	callstack 0
  3331                           
  3332 ;; *************** function _fputs *****************
  3333 ;; Defined at:
  3334 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3337 ;;		 -> dbuf(32), 
  3338 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3339 ;;		 -> sprintf@f(11), 
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  i               2   14[COMRAM] int 
  3342 ;;  c               1   13[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  2    9[COMRAM] int 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3355 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3356 ;;Total ram usage:        7 bytes
  3357 ;; Hardware stack levels used: 1
  3358 ;; Hardware stack levels required when called: 3
  3359 ;; This function calls:
  3360 ;;		_fputc
  3361 ;; This function is called by:
  3362 ;;		_pad
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text7
  3367   004AF4                     __ptext7:
  3368                           	callstack 0
  3369   004AF4                     _fputs:
  3370                           	callstack 22
  3371   004AF4  0E00               	movlw	0
  3372   004AF6  6E10               	movwf	(fputs@i+1)^0,c
  3373   004AF8  0E00               	movlw	0
  3374   004AFA  6E0F               	movwf	fputs@i^0,c
  3375   004AFC  EF8B  F025         	goto	l3365
  3376   004B00                     l3361:
  3377   004B00  C00E  F001         	movff	fputs@c,fputc@c
  3378   004B04  6A02               	clrf	(fputc@c+1)^0,c
  3379   004B06  C00C  F003         	movff	fputs@fp,fputc@fp
  3380   004B0A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3381   004B0E  EC72  F01E         	call	_fputc	;wreg free
  3382   004B12  4A0F               	infsnz	fputs@i^0,f,c
  3383   004B14  2A10               	incf	(fputs@i+1)^0,f,c
  3384   004B16                     l3365:
  3385   004B16  500F               	movf	fputs@i^0,w,c
  3386   004B18  240A               	addwf	fputs@s^0,w,c
  3387   004B1A  6ED9               	movwf	fsr2l,c
  3388   004B1C  5010               	movf	(fputs@i+1)^0,w,c
  3389   004B1E  200B               	addwfc	(fputs@s+1)^0,w,c
  3390   004B20  6EDA               	movwf	fsr2h,c
  3391   004B22  50DF               	movf	indf2,w,c
  3392   004B24  6E0E               	movwf	fputs@c^0,c
  3393   004B26  500E               	movf	fputs@c^0,w,c
  3394   004B28  A4D8               	btfss	status,2,c
  3395   004B2A  EF99  F025         	goto	u2541
  3396   004B2E  EF9B  F025         	goto	u2540
  3397   004B32                     u2541:
  3398   004B32  EF80  F025         	goto	l3361
  3399   004B36                     u2540:
  3400   004B36  0012               	return		;funcret
  3401   004B38                     __end_of_fputs:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function _fputc *****************
  3405 ;; Defined at:
  3406 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  c               2    0[COMRAM] int 
  3409 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3410 ;;		 -> sprintf@f(11), 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  2    0[COMRAM] int 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;Total ram usage:        9 bytes
  3427 ;; Hardware stack levels used: 1
  3428 ;; Hardware stack levels required when called: 2
  3429 ;; This function calls:
  3430 ;;		_putch
  3431 ;; This function is called by:
  3432 ;;		_pad
  3433 ;;		_vfpfcnvrt
  3434 ;;		_fputs
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text8
  3439   003CE4                     __ptext8:
  3440                           	callstack 0
  3441   003CE4                     _fputc:
  3442                           	callstack 25
  3443   003CE4  5003               	movf	fputc@fp^0,w,c
  3444   003CE6  1004               	iorwf	(fputc@fp+1)^0,w,c
  3445   003CE8  B4D8               	btfsc	status,2,c
  3446   003CEA  EF79  F01E         	goto	u2471
  3447   003CEE  EF7B  F01E         	goto	u2470
  3448   003CF2                     u2471:
  3449   003CF2  EF84  F01E         	goto	l3321
  3450   003CF6                     u2470:
  3451   003CF6  5003               	movf	fputc@fp^0,w,c
  3452   003CF8  1004               	iorwf	(fputc@fp+1)^0,w,c
  3453   003CFA  A4D8               	btfss	status,2,c
  3454   003CFC  EF82  F01E         	goto	u2481
  3455   003D00  EF84  F01E         	goto	u2480
  3456   003D04                     u2481:
  3457   003D04  EF89  F01E         	goto	l3323
  3458   003D08                     u2480:
  3459   003D08                     l3321:
  3460   003D08  5001               	movf	fputc@c^0,w,c
  3461   003D0A  EC4C  F027         	call	_putch
  3462   003D0E  EFD6  F01E         	goto	l1470
  3463   003D12                     l3323:
  3464   003D12  EE20 F009          	lfsr	2,9
  3465   003D16  5003               	movf	fputc@fp^0,w,c
  3466   003D18  26D9               	addwf	fsr2l,f,c
  3467   003D1A  5004               	movf	(fputc@fp+1)^0,w,c
  3468   003D1C  22DA               	addwfc	fsr2h,f,c
  3469   003D1E  50DE               	movf	postinc2,w,c
  3470   003D20  10DE               	iorwf	postinc2,w,c
  3471   003D22  B4D8               	btfsc	status,2,c
  3472   003D24  EF96  F01E         	goto	u2491
  3473   003D28  EF98  F01E         	goto	u2490
  3474   003D2C                     u2491:
  3475   003D2C  EFB3  F01E         	goto	l3327
  3476   003D30                     u2490:
  3477   003D30  EE20 F009          	lfsr	2,9
  3478   003D34  5003               	movf	fputc@fp^0,w,c
  3479   003D36  26D9               	addwf	fsr2l,f,c
  3480   003D38  5004               	movf	(fputc@fp+1)^0,w,c
  3481   003D3A  22DA               	addwfc	fsr2h,f,c
  3482   003D3C  EE10 F003          	lfsr	1,3
  3483   003D40  5003               	movf	fputc@fp^0,w,c
  3484   003D42  26E1               	addwf	fsr1l,f,c
  3485   003D44  5004               	movf	(fputc@fp+1)^0,w,c
  3486   003D46  22E2               	addwfc	fsr1h,f,c
  3487   003D48  50DE               	movf	postinc2,w,c
  3488   003D4A  5CE6               	subwf	postinc1,w,c
  3489   003D4C  50E6               	movf	postinc1,w,c
  3490   003D4E  0A80               	xorlw	128
  3491   003D50  6E09               	movwf	(??_fputc+4)^0,c
  3492   003D52  50DE               	movf	postinc2,w,c
  3493   003D54  0A80               	xorlw	128
  3494   003D56  5809               	subwfb	(??_fputc+4)^0,w,c
  3495   003D58  B0D8               	btfsc	status,0,c
  3496   003D5A  EFB1  F01E         	goto	u2501
  3497   003D5E  EFB3  F01E         	goto	u2500
  3498   003D62                     u2501:
  3499   003D62  EFD6  F01E         	goto	l1470
  3500   003D66                     u2500:
  3501   003D66                     l3327:
  3502   003D66  EE20 F003          	lfsr	2,3
  3503   003D6A  5003               	movf	fputc@fp^0,w,c
  3504   003D6C  26D9               	addwf	fsr2l,f,c
  3505   003D6E  5004               	movf	(fputc@fp+1)^0,w,c
  3506   003D70  22DA               	addwfc	fsr2h,f,c
  3507   003D72  CFDE F005          	movff	postinc2,??_fputc
  3508   003D76  CFDD F006          	movff	postdec2,??_fputc+1
  3509   003D7A  C003  FFD9         	movff	fputc@fp,fsr2l
  3510   003D7E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3511   003D82  CFDE F007          	movff	postinc2,??_fputc+2
  3512   003D86  CFDD F008          	movff	postdec2,??_fputc+3
  3513   003D8A  5005               	movf	??_fputc^0,w,c
  3514   003D8C  2407               	addwf	(??_fputc+2)^0,w,c
  3515   003D8E  6ED9               	movwf	fsr2l,c
  3516   003D90  5006               	movf	(??_fputc+1)^0,w,c
  3517   003D92  2008               	addwfc	(??_fputc+3)^0,w,c
  3518   003D94  6EDA               	movwf	fsr2h,c
  3519   003D96  C001  FFDF         	movff	fputc@c,indf2
  3520   003D9A  EE20 F003          	lfsr	2,3
  3521   003D9E  5003               	movf	fputc@fp^0,w,c
  3522   003DA0  26D9               	addwf	fsr2l,f,c
  3523   003DA2  5004               	movf	(fputc@fp+1)^0,w,c
  3524   003DA4  22DA               	addwfc	fsr2h,f,c
  3525   003DA6  2ADE               	incf	postinc2,f,c
  3526   003DA8  0E00               	movlw	0
  3527   003DAA  22DD               	addwfc	postdec2,f,c
  3528   003DAC                     l1470:
  3529   003DAC  0012               	return		;funcret
  3530   003DAE                     __end_of_fputc:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _putch *****************
  3534 ;; Defined at:
  3535 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  c               1    wreg     unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  c               1    0[COMRAM] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;Total ram usage:        0 bytes
  3554 ;; Hardware stack levels used: 1
  3555 ;; Hardware stack levels required when called: 1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_fputc
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text9
  3564   004E98                     __ptext9:
  3565                           	callstack 0
  3566   004E98                     _putch:
  3567                           	callstack 25
  3568   004E98  0012               	return		;funcret
  3569   004E9A                     __end_of_putch:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _abs *****************
  3573 ;; Defined at:
  3574 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  a               2   18[COMRAM] int 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  2   18[COMRAM] int 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;Total ram usage:        4 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_dtoa
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text10
  3603   004B7A                     __ptext10:
  3604                           	callstack 0
  3605   004B7A                     _abs:
  3606                           	callstack 25
  3607   004B7A  BE14               	btfsc	(abs@a+1)^0,7,c
  3608   004B7C  EFCA  F025         	goto	u2720
  3609   004B80  5014               	movf	(abs@a+1)^0,w,c
  3610   004B82  E106               	bnz	u2721
  3611   004B84  0413               	decf	abs@a^0,w,c
  3612   004B86  B0D8               	btfsc	status,0,c
  3613   004B88  EFC8  F025         	goto	u2721
  3614   004B8C  EFCA  F025         	goto	u2720
  3615   004B90                     u2721:
  3616   004B90  EFD8  F025         	goto	l1455
  3617   004B94                     u2720:
  3618   004B94  C013  F015         	movff	abs@a,??_abs
  3619   004B98  C014  F016         	movff	abs@a+1,??_abs+1
  3620   004B9C  1E15               	comf	??_abs^0,f,c
  3621   004B9E  1E16               	comf	(??_abs+1)^0,f,c
  3622   004BA0  4A15               	infsnz	??_abs^0,f,c
  3623   004BA2  2A16               	incf	(??_abs+1)^0,f,c
  3624   004BA4  C015  F013         	movff	??_abs,?_abs
  3625   004BA8  C016  F014         	movff	??_abs+1,?_abs+1
  3626   004BAC  EFDC  F025         	goto	l1458
  3627   004BB0                     l1455:
  3628   004BB0  C013  F013         	movff	abs@a,?_abs
  3629   004BB4  C014  F014         	movff	abs@a+1,?_abs+1
  3630   004BB8                     l1458:
  3631   004BB8  0012               	return		;funcret
  3632   004BBA                     __end_of_abs:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function ___aomod *****************
  3636 ;; Defined at:
  3637 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  dividend        8    0[COMRAM] long long 
  3640 ;;  divisor         8    8[COMRAM] long long 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  sign            1   17[COMRAM] unsigned char 
  3643 ;;  counter         1   16[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  8    0[COMRAM] long long 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3653 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;Total ram usage:       18 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 1
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_dtoa
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text11
  3668   00392E                     __ptext11:
  3669                           	callstack 0
  3670   00392E                     ___aomod:
  3671                           	callstack 25
  3672   00392E  0E00               	movlw	0
  3673   003930  6E12               	movwf	___aomod@sign^0,c
  3674   003932  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  3675   003934  EFA0  F01C         	goto	u2640
  3676   003938  EF9E  F01C         	goto	u2641
  3677   00393C                     u2641:
  3678   00393C  EFB2  F01C         	goto	l3435
  3679   003940                     u2640:
  3680   003940  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3681   003942  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3682   003944  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3683   003946  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3684   003948  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3685   00394A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3686   00394C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3687   00394E  6C01               	negf	___aomod@dividend^0,c
  3688   003950  0E00               	movlw	0
  3689   003952  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3690   003954  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3691   003956  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3692   003958  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3693   00395A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3694   00395C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3695   00395E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3696   003960  0E01               	movlw	1
  3697   003962  6E12               	movwf	___aomod@sign^0,c
  3698   003964                     l3435:
  3699   003964  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  3700   003966  EFB9  F01C         	goto	u2650
  3701   00396A  EFB7  F01C         	goto	u2651
  3702   00396E                     u2651:
  3703   00396E  EFC9  F01C         	goto	l3439
  3704   003972                     u2650:
  3705   003972  1E10               	comf	(___aomod@divisor+7)^0,f,c
  3706   003974  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  3707   003976  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  3708   003978  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  3709   00397A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  3710   00397C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  3711   00397E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  3712   003980  6C09               	negf	___aomod@divisor^0,c
  3713   003982  0E00               	movlw	0
  3714   003984  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  3715   003986  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  3716   003988  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  3717   00398A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  3718   00398C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  3719   00398E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  3720   003990  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  3721   003992                     l3439:
  3722   003992  5009               	movf	___aomod@divisor^0,w,c
  3723   003994  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  3724   003996  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  3725   003998  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  3726   00399A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  3727   00399C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  3728   00399E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  3729   0039A0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  3730   0039A2  B4D8               	btfsc	status,2,c
  3731   0039A4  EFD6  F01C         	goto	u2661
  3732   0039A8  EFD8  F01C         	goto	u2660
  3733   0039AC                     u2661:
  3734   0039AC  EF20  F01D         	goto	l3455
  3735   0039B0                     u2660:
  3736   0039B0  0E01               	movlw	1
  3737   0039B2  6E11               	movwf	___aomod@counter^0,c
  3738   0039B4  EFE6  F01C         	goto	l3445
  3739   0039B8                     l3443:
  3740   0039B8  90D8               	bcf	status,0,c
  3741   0039BA  3609               	rlcf	___aomod@divisor^0,f,c
  3742   0039BC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  3743   0039BE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  3744   0039C0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  3745   0039C2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  3746   0039C4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  3747   0039C6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  3748   0039C8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  3749   0039CA  2A11               	incf	___aomod@counter^0,f,c
  3750   0039CC                     l3445:
  3751   0039CC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  3752   0039CE  EFEB  F01C         	goto	u2671
  3753   0039D2  EFED  F01C         	goto	u2670
  3754   0039D6                     u2671:
  3755   0039D6  EFDC  F01C         	goto	l3443
  3756   0039DA                     u2670:
  3757   0039DA                     l3447:
  3758   0039DA  5009               	movf	___aomod@divisor^0,w,c
  3759   0039DC  5C01               	subwf	___aomod@dividend^0,w,c
  3760   0039DE  500A               	movf	(___aomod@divisor+1)^0,w,c
  3761   0039E0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  3762   0039E2  500B               	movf	(___aomod@divisor+2)^0,w,c
  3763   0039E4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  3764   0039E6  500C               	movf	(___aomod@divisor+3)^0,w,c
  3765   0039E8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  3766   0039EA  500D               	movf	(___aomod@divisor+4)^0,w,c
  3767   0039EC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  3768   0039EE  500E               	movf	(___aomod@divisor+5)^0,w,c
  3769   0039F0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  3770   0039F2  500F               	movf	(___aomod@divisor+6)^0,w,c
  3771   0039F4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  3772   0039F6  5010               	movf	(___aomod@divisor+7)^0,w,c
  3773   0039F8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  3774   0039FA  A0D8               	btfss	status,0,c
  3775   0039FC  EF02  F01D         	goto	u2681
  3776   003A00  EF04  F01D         	goto	u2680
  3777   003A04                     u2681:
  3778   003A04  EF14  F01D         	goto	l3451
  3779   003A08                     u2680:
  3780   003A08  5009               	movf	___aomod@divisor^0,w,c
  3781   003A0A  5E01               	subwf	___aomod@dividend^0,f,c
  3782   003A0C  500A               	movf	(___aomod@divisor+1)^0,w,c
  3783   003A0E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  3784   003A10  500B               	movf	(___aomod@divisor+2)^0,w,c
  3785   003A12  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  3786   003A14  500C               	movf	(___aomod@divisor+3)^0,w,c
  3787   003A16  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  3788   003A18  500D               	movf	(___aomod@divisor+4)^0,w,c
  3789   003A1A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  3790   003A1C  500E               	movf	(___aomod@divisor+5)^0,w,c
  3791   003A1E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  3792   003A20  500F               	movf	(___aomod@divisor+6)^0,w,c
  3793   003A22  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  3794   003A24  5010               	movf	(___aomod@divisor+7)^0,w,c
  3795   003A26  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  3796   003A28                     l3451:
  3797   003A28  90D8               	bcf	status,0,c
  3798   003A2A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3799   003A2C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3800   003A2E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3801   003A30  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3802   003A32  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3803   003A34  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3804   003A36  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3805   003A38  3209               	rrcf	___aomod@divisor^0,f,c
  3806   003A3A  2E11               	decfsz	___aomod@counter^0,f,c
  3807   003A3C  EFED  F01C         	goto	l3447
  3808   003A40                     l3455:
  3809   003A40  5012               	movf	___aomod@sign^0,w,c
  3810   003A42  B4D8               	btfsc	status,2,c
  3811   003A44  EF26  F01D         	goto	u2691
  3812   003A48  EF28  F01D         	goto	u2690
  3813   003A4C                     u2691:
  3814   003A4C  EF38  F01D         	goto	l3459
  3815   003A50                     u2690:
  3816   003A50  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3817   003A52  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3818   003A54  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3819   003A56  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3820   003A58  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3821   003A5A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3822   003A5C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3823   003A5E  6C01               	negf	___aomod@dividend^0,c
  3824   003A60  0E00               	movlw	0
  3825   003A62  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3826   003A64  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3827   003A66  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3828   003A68  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3829   003A6A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3830   003A6C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3831   003A6E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3832   003A70                     l3459:
  3833   003A70  C001  F001         	movff	___aomod@dividend,?___aomod
  3834   003A74  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3835   003A78  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3836   003A7C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3837   003A80  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3838   003A84  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3839   003A88  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3840   003A8C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3841   003A90  0012               	return		;funcret
  3842   003A92                     __end_of___aomod:
  3843                           	callstack 0
  3844                           
  3845 ;; *************** function ___aodiv *****************
  3846 ;; Defined at:
  3847 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;  dividend        8    0[COMRAM] long long 
  3850 ;;  divisor         8    8[COMRAM] long long 
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;  quotient        8   18[COMRAM] long long 
  3853 ;;  sign            1   17[COMRAM] unsigned char 
  3854 ;;  counter         1   16[COMRAM] unsigned char 
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  8    0[COMRAM] long long 
  3857 ;; Registers used:
  3858 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3864 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;Total ram usage:       26 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 1
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_dtoa
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text12
  3879   00363A                     __ptext12:
  3880                           	callstack 0
  3881   00363A                     ___aodiv:
  3882                           	callstack 25
  3883   00363A  0E00               	movlw	0
  3884   00363C  6E12               	movwf	___aodiv@sign^0,c
  3885   00363E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3886   003640  EF26  F01B         	goto	u2570
  3887   003644  EF24  F01B         	goto	u2571
  3888   003648                     u2571:
  3889   003648  EF38  F01B         	goto	l3391
  3890   00364C                     u2570:
  3891   00364C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3892   00364E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3893   003650  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3894   003652  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3895   003654  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3896   003656  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3897   003658  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3898   00365A  6C09               	negf	___aodiv@divisor^0,c
  3899   00365C  0E00               	movlw	0
  3900   00365E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3901   003660  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3902   003662  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3903   003664  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3904   003666  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3905   003668  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3906   00366A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3907   00366C  0E01               	movlw	1
  3908   00366E  6E12               	movwf	___aodiv@sign^0,c
  3909   003670                     l3391:
  3910   003670  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3911   003672  EF3F  F01B         	goto	u2580
  3912   003676  EF3D  F01B         	goto	u2581
  3913   00367A                     u2581:
  3914   00367A  EF51  F01B         	goto	l3397
  3915   00367E                     u2580:
  3916   00367E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3917   003680  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3918   003682  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3919   003684  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3920   003686  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3921   003688  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3922   00368A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3923   00368C  6C01               	negf	___aodiv@dividend^0,c
  3924   00368E  0E00               	movlw	0
  3925   003690  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3926   003692  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3927   003694  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3928   003696  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3929   003698  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3930   00369A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3931   00369C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3932   00369E  0E01               	movlw	1
  3933   0036A0  1A12               	xorwf	___aodiv@sign^0,f,c
  3934   0036A2                     l3397:
  3935   0036A2  EE20  F013         	lfsr	2,___aodiv@quotient
  3936   0036A6  0E07               	movlw	7
  3937   0036A8                     u2591:
  3938   0036A8  6ADE               	clrf	postinc2,c
  3939   0036AA  06E8               	decf	wreg,f,c
  3940   0036AC  E2FD               	bc	u2591
  3941   0036AE  5009               	movf	___aodiv@divisor^0,w,c
  3942   0036B0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3943   0036B2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3944   0036B4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3945   0036B6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3946   0036B8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3947   0036BA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3948   0036BC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3949   0036BE  B4D8               	btfsc	status,2,c
  3950   0036C0  EF64  F01B         	goto	u2601
  3951   0036C4  EF66  F01B         	goto	u2600
  3952   0036C8                     u2601:
  3953   0036C8  EFB8  F01B         	goto	l3419
  3954   0036CC                     u2600:
  3955   0036CC  0E01               	movlw	1
  3956   0036CE  6E11               	movwf	___aodiv@counter^0,c
  3957   0036D0  EF74  F01B         	goto	l3405
  3958   0036D4                     l3403:
  3959   0036D4  90D8               	bcf	status,0,c
  3960   0036D6  3609               	rlcf	___aodiv@divisor^0,f,c
  3961   0036D8  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3962   0036DA  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3963   0036DC  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3964   0036DE  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3965   0036E0  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3966   0036E2  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3967   0036E4  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3968   0036E6  2A11               	incf	___aodiv@counter^0,f,c
  3969   0036E8                     l3405:
  3970   0036E8  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3971   0036EA  EF79  F01B         	goto	u2611
  3972   0036EE  EF7B  F01B         	goto	u2610
  3973   0036F2                     u2611:
  3974   0036F2  EF6A  F01B         	goto	l3403
  3975   0036F6                     u2610:
  3976   0036F6                     l3407:
  3977   0036F6  90D8               	bcf	status,0,c
  3978   0036F8  3613               	rlcf	___aodiv@quotient^0,f,c
  3979   0036FA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3980   0036FC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3981   0036FE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3982   003700  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3983   003702  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3984   003704  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3985   003706  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3986   003708  5009               	movf	___aodiv@divisor^0,w,c
  3987   00370A  5C01               	subwf	___aodiv@dividend^0,w,c
  3988   00370C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3989   00370E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3990   003710  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3991   003712  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3992   003714  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3993   003716  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3994   003718  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3995   00371A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3996   00371C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3997   00371E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3998   003720  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3999   003722  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4000   003724  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4001   003726  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4002   003728  A0D8               	btfss	status,0,c
  4003   00372A  EF99  F01B         	goto	u2621
  4004   00372E  EF9B  F01B         	goto	u2620
  4005   003732                     u2621:
  4006   003732  EFAC  F01B         	goto	l3415
  4007   003736                     u2620:
  4008   003736  5009               	movf	___aodiv@divisor^0,w,c
  4009   003738  5E01               	subwf	___aodiv@dividend^0,f,c
  4010   00373A  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4011   00373C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4012   00373E  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4013   003740  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4014   003742  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4015   003744  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4016   003746  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4017   003748  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4018   00374A  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4019   00374C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4020   00374E  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4021   003750  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4022   003752  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4023   003754  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4024   003756  8013               	bsf	___aodiv@quotient^0,0,c
  4025   003758                     l3415:
  4026   003758  90D8               	bcf	status,0,c
  4027   00375A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4028   00375C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4029   00375E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4030   003760  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4031   003762  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4032   003764  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4033   003766  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4034   003768  3209               	rrcf	___aodiv@divisor^0,f,c
  4035   00376A  2E11               	decfsz	___aodiv@counter^0,f,c
  4036   00376C  EF7B  F01B         	goto	l3407
  4037   003770                     l3419:
  4038   003770  5012               	movf	___aodiv@sign^0,w,c
  4039   003772  B4D8               	btfsc	status,2,c
  4040   003774  EFBE  F01B         	goto	u2631
  4041   003778  EFC0  F01B         	goto	u2630
  4042   00377C                     u2631:
  4043   00377C  EFD0  F01B         	goto	l3423
  4044   003780                     u2630:
  4045   003780  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4046   003782  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4047   003784  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4048   003786  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4049   003788  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4050   00378A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4051   00378C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4052   00378E  6C13               	negf	___aodiv@quotient^0,c
  4053   003790  0E00               	movlw	0
  4054   003792  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4055   003794  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4056   003796  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4057   003798  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4058   00379A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4059   00379C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4060   00379E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4061   0037A0                     l3423:
  4062   0037A0  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4063   0037A4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4064   0037A8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4065   0037AC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4066   0037B0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4067   0037B4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4068   0037B8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4069   0037BC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4070   0037C0  0012               	return		;funcret
  4071   0037C2                     __end_of___aodiv:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _sendStringSerial4 *****************
  4075 ;; Defined at:
  4076 ;;		line 33 in file "serial.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  string          2    1[COMRAM] PTR unsigned char 
  4079 ;;		 -> main@buf(100), 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;Total ram usage:        2 bytes
  4096 ;; Hardware stack levels used: 1
  4097 ;; Hardware stack levels required when called: 2
  4098 ;; This function calls:
  4099 ;;		_sendCharSerial4
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text13
  4106   004D20                     __ptext13:
  4107                           	callstack 0
  4108   004D20                     _sendStringSerial4:
  4109                           	callstack 28
  4110   004D20                     
  4111                           ;serial.c: 34:     while (*string!=0){
  4112   004D20  EF9B  F026         	goto	l4605
  4113   004D24                     l4601:
  4114                           
  4115                           ;serial.c: 35:         sendCharSerial4(*string++);
  4116   004D24  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4117   004D28  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4118   004D2C  50DF               	movf	indf2,w,c
  4119   004D2E  EC26  F027         	call	_sendCharSerial4
  4120   004D32  4A02               	infsnz	sendStringSerial4@string^0,f,c
  4121   004D34  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  4122   004D36                     l4605:
  4123                           
  4124                           ;serial.c: 34:     while (*string!=0){
  4125   004D36  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  4126   004D3A  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  4127   004D3E  50DF               	movf	indf2,w,c
  4128   004D40  A4D8               	btfss	status,2,c
  4129   004D42  EFA5  F026         	goto	u4381
  4130   004D46  EFA7  F026         	goto	u4380
  4131   004D4A                     u4381:
  4132   004D4A  EF92  F026         	goto	l4601
  4133   004D4E                     u4380:
  4134   004D4E  0012               	return		;funcret
  4135   004D50                     __end_of_sendStringSerial4:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _sendCharSerial4 *****************
  4139 ;; Defined at:
  4140 ;;		line 26 in file "serial.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  charToSend      1    wreg     unsigned char 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  charToSend      1    0[COMRAM] unsigned char 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;Total ram usage:        1 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_sendStringSerial4
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text14
  4169   004E4C                     __ptext14:
  4170                           	callstack 0
  4171   004E4C                     _sendCharSerial4:
  4172                           	callstack 28
  4173                           
  4174                           ;incstack = 0
  4175                           ;sendCharSerial4@charToSend stored from wreg
  4176   004E4C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4177   004E4E                     l209:
  4178   004E4E  010E               	movlb	14	; () banked
  4179   004E50  A537               	btfss	55,2,b	;volatile
  4180   004E52  EF2D  F027         	goto	u3411
  4181   004E56  EF2F  F027         	goto	u3410
  4182   004E5A                     u3411:
  4183   004E5A  EF27  F027         	goto	l209
  4184   004E5E                     u3410:
  4185   004E5E                     
  4186                           ; BSR set to: 14
  4187                           ;serial.c: 28:     TX4REG = charToSend;
  4188   004E5E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4189   004E62                     
  4190                           ; BSR set to: 14
  4191   004E62  0012               	return		;funcret
  4192   004E64                     __end_of_sendCharSerial4:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _readColours *****************
  4196 ;; Defined at:
  4197 ;;		line 105 in file "color.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  vals            2   11[COMRAM] PTR struct RGB
  4200 ;;		 -> vals(8), 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;		None
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  1    wreg      void 
  4205 ;; Registers used:
  4206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;Total ram usage:        2 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 4
  4219 ;; This function calls:
  4220 ;;		_color_read_Blue
  4221 ;;		_color_read_Green
  4222 ;;		_color_read_Red
  4223 ;;		_color_read_lum
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text15
  4230   0044D2                     __ptext15:
  4231                           	callstack 0
  4232   0044D2                     _readColours:
  4233                           	callstack 26
  4234   0044D2                     
  4235                           ;color.c: 107:     vals ->R = color_read_Red();
  4236   0044D2  EC6A  F024         	call	_color_read_Red	;wreg free
  4237   0044D6  C00C  FFD9         	movff	readColours@vals,fsr2l
  4238   0044DA  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  4239   0044DE  C005  FFDE         	movff	?_color_read_Red,postinc2
  4240   0044E2  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  4241                           
  4242                           ;color.c: 108:     vals ->B = color_read_Blue();
  4243   0044E6  ECBA  F024         	call	_color_read_Blue	;wreg free
  4244   0044EA  EE20 F004          	lfsr	2,4
  4245   0044EE  500C               	movf	readColours@vals^0,w,c
  4246   0044F0  26D9               	addwf	fsr2l,f,c
  4247   0044F2  500D               	movf	(readColours@vals+1)^0,w,c
  4248   0044F4  22DA               	addwfc	fsr2h,f,c
  4249   0044F6  C005  FFDE         	movff	?_color_read_Blue,postinc2
  4250   0044FA  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  4251                           
  4252                           ;color.c: 109:     vals ->G = color_read_Green();
  4253   0044FE  EC92  F024         	call	_color_read_Green	;wreg free
  4254   004502  EE20 F002          	lfsr	2,2
  4255   004506  500C               	movf	readColours@vals^0,w,c
  4256   004508  26D9               	addwf	fsr2l,f,c
  4257   00450A  500D               	movf	(readColours@vals+1)^0,w,c
  4258   00450C  22DA               	addwfc	fsr2h,f,c
  4259   00450E  C005  FFDE         	movff	?_color_read_Green,postinc2
  4260   004512  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  4261                           
  4262                           ;color.c: 110:     vals ->L = color_read_lum();
  4263   004516  EC42  F024         	call	_color_read_lum	;wreg free
  4264   00451A  EE20 F006          	lfsr	2,6
  4265   00451E  500C               	movf	readColours@vals^0,w,c
  4266   004520  26D9               	addwf	fsr2l,f,c
  4267   004522  500D               	movf	(readColours@vals+1)^0,w,c
  4268   004524  22DA               	addwfc	fsr2h,f,c
  4269   004526  C005  FFDE         	movff	?_color_read_lum,postinc2
  4270   00452A  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  4271   00452E  0012               	return		;funcret
  4272   004530                     __end_of_readColours:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _color_read_lum *****************
  4276 ;; Defined at:
  4277 ;;		line 49 in file "color.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;  tmp             2    9[COMRAM] unsigned int 
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  2    4[COMRAM] unsigned int 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;Total ram usage:        7 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 3
  4298 ;; This function calls:
  4299 ;;		_I2C_2_Master_Read
  4300 ;;		_I2C_2_Master_RepStart
  4301 ;;		_I2C_2_Master_Start
  4302 ;;		_I2C_2_Master_Stop
  4303 ;;		_I2C_2_Master_Write
  4304 ;; This function is called by:
  4305 ;;		_readColours
  4306 ;; This function uses a non-reentrant model
  4307 ;;
  4308                           
  4309                           	psect	text16
  4310   004884                     __ptext16:
  4311                           	callstack 0
  4312   004884                     _color_read_lum:
  4313                           	callstack 26
  4314   004884                     
  4315                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  4316   004884  EC42  F027         	call	_I2C_2_Master_Start	;wreg free
  4317                           
  4318                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  4319   004888  0E52               	movlw	82
  4320   00488A  EC32  F027         	call	_I2C_2_Master_Write
  4321                           
  4322                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  4323   00488E  0EB4               	movlw	180
  4324   004890  EC32  F027         	call	_I2C_2_Master_Write
  4325                           
  4326                           ;color.c: 55:  I2C_2_Master_RepStart();
  4327   004894  EC38  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4328                           
  4329                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4330   004898  0E53               	movlw	83
  4331   00489A  EC32  F027         	call	_I2C_2_Master_Write
  4332                           
  4333                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4334   00489E  0E01               	movlw	1
  4335   0048A0  EC9C  F025         	call	_I2C_2_Master_Read
  4336   0048A4  6E07               	movwf	??_color_read_lum^0,c
  4337   0048A6  5007               	movf	??_color_read_lum^0,w,c
  4338   0048A8  6E0A               	movwf	color_read_lum@tmp^0,c
  4339   0048AA  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  4340                           
  4341                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4342   0048AC  0E00               	movlw	0
  4343   0048AE  EC9C  F025         	call	_I2C_2_Master_Read
  4344   0048B2  6E07               	movwf	??_color_read_lum^0,c
  4345   0048B4  5007               	movf	??_color_read_lum^0,w,c
  4346   0048B6  6E09               	movwf	(??_color_read_lum+2)^0,c
  4347   0048B8  6A08               	clrf	(??_color_read_lum+1)^0,c
  4348   0048BA  500A               	movf	color_read_lum@tmp^0,w,c
  4349   0048BC  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  4350   0048BE  6E0A               	movwf	color_read_lum@tmp^0,c
  4351   0048C0  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  4352   0048C2  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  4353   0048C4  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  4354                           
  4355                           ;color.c: 59:  I2C_2_Master_Stop();
  4356   0048C6  EC3D  F027         	call	_I2C_2_Master_Stop	;wreg free
  4357   0048CA                     
  4358                           ;color.c: 60:  return tmp;
  4359   0048CA  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  4360   0048CE  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  4361   0048D2  0012               	return		;funcret
  4362   0048D4                     __end_of_color_read_lum:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _color_read_Red *****************
  4366 ;; Defined at:
  4367 ;;		line 63 in file "color.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;		None
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  tmp             2    9[COMRAM] unsigned int 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  2    4[COMRAM] unsigned int 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;Total ram usage:        7 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 3
  4388 ;; This function calls:
  4389 ;;		_I2C_2_Master_Read
  4390 ;;		_I2C_2_Master_RepStart
  4391 ;;		_I2C_2_Master_Start
  4392 ;;		_I2C_2_Master_Stop
  4393 ;;		_I2C_2_Master_Write
  4394 ;; This function is called by:
  4395 ;;		_readColours
  4396 ;; This function uses a non-reentrant model
  4397 ;;
  4398                           
  4399                           	psect	text17
  4400   0048D4                     __ptext17:
  4401                           	callstack 0
  4402   0048D4                     _color_read_Red:
  4403                           	callstack 26
  4404   0048D4                     
  4405                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4406   0048D4  EC42  F027         	call	_I2C_2_Master_Start	;wreg free
  4407                           
  4408                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4409   0048D8  0E52               	movlw	82
  4410   0048DA  EC32  F027         	call	_I2C_2_Master_Write
  4411                           
  4412                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  4413   0048DE  0EB6               	movlw	182
  4414   0048E0  EC32  F027         	call	_I2C_2_Master_Write
  4415                           
  4416                           ;color.c: 69:  I2C_2_Master_RepStart();
  4417   0048E4  EC38  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4418                           
  4419                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4420   0048E8  0E53               	movlw	83
  4421   0048EA  EC32  F027         	call	_I2C_2_Master_Write
  4422                           
  4423                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4424   0048EE  0E01               	movlw	1
  4425   0048F0  EC9C  F025         	call	_I2C_2_Master_Read
  4426   0048F4  6E07               	movwf	??_color_read_Red^0,c
  4427   0048F6  5007               	movf	??_color_read_Red^0,w,c
  4428   0048F8  6E0A               	movwf	color_read_Red@tmp^0,c
  4429   0048FA  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  4430                           
  4431                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4432   0048FC  0E00               	movlw	0
  4433   0048FE  EC9C  F025         	call	_I2C_2_Master_Read
  4434   004902  6E07               	movwf	??_color_read_Red^0,c
  4435   004904  5007               	movf	??_color_read_Red^0,w,c
  4436   004906  6E09               	movwf	(??_color_read_Red+2)^0,c
  4437   004908  6A08               	clrf	(??_color_read_Red+1)^0,c
  4438   00490A  500A               	movf	color_read_Red@tmp^0,w,c
  4439   00490C  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  4440   00490E  6E0A               	movwf	color_read_Red@tmp^0,c
  4441   004910  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  4442   004912  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  4443   004914  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  4444                           
  4445                           ;color.c: 73:  I2C_2_Master_Stop();
  4446   004916  EC3D  F027         	call	_I2C_2_Master_Stop	;wreg free
  4447   00491A                     
  4448                           ;color.c: 74:  return tmp;
  4449   00491A  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  4450   00491E  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4451   004922  0012               	return		;funcret
  4452   004924                     __end_of_color_read_Red:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _color_read_Green *****************
  4456 ;; Defined at:
  4457 ;;		line 76 in file "color.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  tmp             2    9[COMRAM] unsigned int 
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  2    4[COMRAM] unsigned int 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2, status,0, cstack
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4473 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;Total ram usage:        7 bytes
  4476 ;; Hardware stack levels used: 1
  4477 ;; Hardware stack levels required when called: 3
  4478 ;; This function calls:
  4479 ;;		_I2C_2_Master_Read
  4480 ;;		_I2C_2_Master_RepStart
  4481 ;;		_I2C_2_Master_Start
  4482 ;;		_I2C_2_Master_Stop
  4483 ;;		_I2C_2_Master_Write
  4484 ;; This function is called by:
  4485 ;;		_readColours
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           	psect	text18
  4490   004924                     __ptext18:
  4491                           	callstack 0
  4492   004924                     _color_read_Green:
  4493                           	callstack 26
  4494   004924                     
  4495                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  4496   004924  EC42  F027         	call	_I2C_2_Master_Start	;wreg free
  4497                           
  4498                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  4499   004928  0E52               	movlw	82
  4500   00492A  EC32  F027         	call	_I2C_2_Master_Write
  4501                           
  4502                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  4503   00492E  0EB8               	movlw	184
  4504   004930  EC32  F027         	call	_I2C_2_Master_Write
  4505                           
  4506                           ;color.c: 82:  I2C_2_Master_RepStart();
  4507   004934  EC38  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4508                           
  4509                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  4510   004938  0E53               	movlw	83
  4511   00493A  EC32  F027         	call	_I2C_2_Master_Write
  4512                           
  4513                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  4514   00493E  0E01               	movlw	1
  4515   004940  EC9C  F025         	call	_I2C_2_Master_Read
  4516   004944  6E07               	movwf	??_color_read_Green^0,c
  4517   004946  5007               	movf	??_color_read_Green^0,w,c
  4518   004948  6E0A               	movwf	color_read_Green@tmp^0,c
  4519   00494A  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  4520                           
  4521                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4522   00494C  0E00               	movlw	0
  4523   00494E  EC9C  F025         	call	_I2C_2_Master_Read
  4524   004952  6E07               	movwf	??_color_read_Green^0,c
  4525   004954  5007               	movf	??_color_read_Green^0,w,c
  4526   004956  6E09               	movwf	(??_color_read_Green+2)^0,c
  4527   004958  6A08               	clrf	(??_color_read_Green+1)^0,c
  4528   00495A  500A               	movf	color_read_Green@tmp^0,w,c
  4529   00495C  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  4530   00495E  6E0A               	movwf	color_read_Green@tmp^0,c
  4531   004960  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  4532   004962  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  4533   004964  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  4534                           
  4535                           ;color.c: 86:  I2C_2_Master_Stop();
  4536   004966  EC3D  F027         	call	_I2C_2_Master_Stop	;wreg free
  4537   00496A                     
  4538                           ;color.c: 87:  return tmp;
  4539   00496A  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  4540   00496E  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4541   004972  0012               	return		;funcret
  4542   004974                     __end_of_color_read_Green:
  4543                           	callstack 0
  4544                           
  4545 ;; *************** function _color_read_Blue *****************
  4546 ;; Defined at:
  4547 ;;		line 90 in file "color.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  tmp             2    9[COMRAM] unsigned int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2    4[COMRAM] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4564 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;Total ram usage:        7 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 3
  4568 ;; This function calls:
  4569 ;;		_I2C_2_Master_Read
  4570 ;;		_I2C_2_Master_RepStart
  4571 ;;		_I2C_2_Master_Start
  4572 ;;		_I2C_2_Master_Stop
  4573 ;;		_I2C_2_Master_Write
  4574 ;; This function is called by:
  4575 ;;		_readColours
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text19
  4580   004974                     __ptext19:
  4581                           	callstack 0
  4582   004974                     _color_read_Blue:
  4583                           	callstack 26
  4584   004974                     
  4585                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  4586   004974  EC42  F027         	call	_I2C_2_Master_Start	;wreg free
  4587                           
  4588                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  4589   004978  0E52               	movlw	82
  4590   00497A  EC32  F027         	call	_I2C_2_Master_Write
  4591                           
  4592                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  4593   00497E  0EBA               	movlw	186
  4594   004980  EC32  F027         	call	_I2C_2_Master_Write
  4595                           
  4596                           ;color.c: 96:  I2C_2_Master_RepStart();
  4597   004984  EC38  F027         	call	_I2C_2_Master_RepStart	;wreg free
  4598                           
  4599                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  4600   004988  0E53               	movlw	83
  4601   00498A  EC32  F027         	call	_I2C_2_Master_Write
  4602                           
  4603                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  4604   00498E  0E01               	movlw	1
  4605   004990  EC9C  F025         	call	_I2C_2_Master_Read
  4606   004994  6E07               	movwf	??_color_read_Blue^0,c
  4607   004996  5007               	movf	??_color_read_Blue^0,w,c
  4608   004998  6E0A               	movwf	color_read_Blue@tmp^0,c
  4609   00499A  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  4610                           
  4611                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4612   00499C  0E00               	movlw	0
  4613   00499E  EC9C  F025         	call	_I2C_2_Master_Read
  4614   0049A2  6E07               	movwf	??_color_read_Blue^0,c
  4615   0049A4  5007               	movf	??_color_read_Blue^0,w,c
  4616   0049A6  6E09               	movwf	(??_color_read_Blue+2)^0,c
  4617   0049A8  6A08               	clrf	(??_color_read_Blue+1)^0,c
  4618   0049AA  500A               	movf	color_read_Blue@tmp^0,w,c
  4619   0049AC  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  4620   0049AE  6E0A               	movwf	color_read_Blue@tmp^0,c
  4621   0049B0  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  4622   0049B2  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  4623   0049B4  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  4624                           
  4625                           ;color.c: 100:  I2C_2_Master_Stop();
  4626   0049B6  EC3D  F027         	call	_I2C_2_Master_Stop	;wreg free
  4627   0049BA                     
  4628                           ;color.c: 101:  return tmp;
  4629   0049BA  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  4630   0049BE  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4631   0049C2  0012               	return		;funcret
  4632   0049C4                     __end_of_color_read_Blue:
  4633                           	callstack 0
  4634                           
  4635 ;; *************** function _I2C_2_Master_RepStart *****************
  4636 ;; Defined at:
  4637 ;;		line 33 in file "i2c.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;		None
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;		None
  4642 ;; Return value:  Size  Location     Type
  4643 ;;                  1    wreg      void 
  4644 ;; Registers used:
  4645 ;;		wreg, status,2, status,0, cstack
  4646 ;; Tracked objects:
  4647 ;;		On entry : 0/0
  4648 ;;		On exit  : 0/0
  4649 ;;		Unchanged: 0/0
  4650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;Total ram usage:        0 bytes
  4656 ;; Hardware stack levels used: 1
  4657 ;; Hardware stack levels required when called: 2
  4658 ;; This function calls:
  4659 ;;		_I2C_2_Master_Idle
  4660 ;; This function is called by:
  4661 ;;		_color_read_lum
  4662 ;;		_color_read_Red
  4663 ;;		_color_read_Green
  4664 ;;		_color_read_Blue
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text20
  4669   004E70                     __ptext20:
  4670                           	callstack 0
  4671   004E70                     _I2C_2_Master_RepStart:
  4672                           	callstack 26
  4673   004E70                     
  4674                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4675   004E70  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  4676   004E74                     
  4677                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4678   004E74  010E               	movlb	14	; () banked
  4679   004E76  83DA               	bsf	218,1,b	;volatile
  4680   004E78                     
  4681                           ; BSR set to: 14
  4682   004E78  0012               	return		;funcret
  4683   004E7A                     __end_of_I2C_2_Master_RepStart:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _I2C_2_Master_Read *****************
  4687 ;; Defined at:
  4688 ;;		line 51 in file "i2c.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  ack             1    wreg     unsigned char 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  ack             1    2[COMRAM] unsigned char 
  4693 ;;  tmp             1    3[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  1    wreg      unsigned char 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0, cstack
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4705 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;Total ram usage:        3 bytes
  4708 ;; Hardware stack levels used: 1
  4709 ;; Hardware stack levels required when called: 2
  4710 ;; This function calls:
  4711 ;;		_I2C_2_Master_Idle
  4712 ;; This function is called by:
  4713 ;;		_color_read_lum
  4714 ;;		_color_read_Red
  4715 ;;		_color_read_Green
  4716 ;;		_color_read_Blue
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text21
  4721   004B38                     __ptext21:
  4722                           	callstack 0
  4723   004B38                     _I2C_2_Master_Read:
  4724                           	callstack 26
  4725                           
  4726                           ; BSR set to: 14
  4727                           ;incstack = 0
  4728                           ;I2C_2_Master_Read@ack stored from wreg
  4729   004B38  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  4730   004B3A                     
  4731                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4732   004B3A  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  4733   004B3E                     
  4734                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4735   004B3E  010E               	movlb	14	; () banked
  4736   004B40  87DA               	bsf	218,3,b	;volatile
  4737                           
  4738                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4739   004B42  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  4740   004B46                     
  4741                           ;i2c.c: 57:   tmp = SSP2BUF;
  4742   004B46  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4743                           
  4744                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4745   004B4A  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  4746   004B4E                     
  4747                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4748   004B4E  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  4749   004B50  B4D8               	btfsc	status,2,c
  4750   004B52  EFAD  F025         	goto	u2961
  4751   004B56  EFB1  F025         	goto	u2960
  4752   004B5A                     u2961:
  4753   004B5A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4754   004B5C  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  4755   004B5E  EFB2  F025         	goto	u2978
  4756   004B62                     u2960:
  4757   004B62  6A02               	clrf	??_I2C_2_Master_Read^0,c
  4758   004B64                     u2978:
  4759   004B64  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  4760   004B66  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  4761   004B68  010E               	movlb	14	; () banked
  4762   004B6A  51DA               	movf	218,w,b	;volatile
  4763   004B6C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4764   004B6E  0BDF               	andlw	-33
  4765   004B70  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  4766   004B72  6FDA               	movwf	218,b	;volatile
  4767   004B74                     
  4768                           ; BSR set to: 14
  4769                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4770   004B74  89DA               	bsf	218,4,b	;volatile
  4771   004B76                     
  4772                           ; BSR set to: 14
  4773                           ;i2c.c: 61:   return tmp;
  4774   004B76  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  4775   004B78                     
  4776                           ; BSR set to: 14
  4777   004B78  0012               	return		;funcret
  4778   004B7A                     __end_of_I2C_2_Master_Read:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function _initUSART4 *****************
  4782 ;; Defined at:
  4783 ;;		line 4 in file "serial.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;		None
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, status,2
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;Total ram usage:        0 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 1
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text22
  4812   004E2E                     __ptext22:
  4813                           	callstack 0
  4814   004E2E                     _initUSART4:
  4815                           	callstack 29
  4816   004E2E                     
  4817                           ;serial.c: 5:     RC0PPS = 0x12;
  4818   004E2E  0E12               	movlw	18
  4819   004E30  010E               	movlb	14	; () banked
  4820   004E32  6F62               	movwf	98,b	;volatile
  4821                           
  4822                           ;serial.c: 6:     RX4PPS = 0x11;
  4823   004E34  0E11               	movlw	17
  4824   004E36  6F15               	movwf	21,b	;volatile
  4825   004E38                     
  4826                           ; BSR set to: 14
  4827                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  4828   004E38  97E9               	bcf	233,3,b	;volatile
  4829   004E3A                     
  4830                           ; BSR set to: 14
  4831                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  4832   004E3A  95E8               	bcf	232,2,b	;volatile
  4833                           
  4834                           ;serial.c: 9:     SP4BRGL = 51;
  4835   004E3C  0E33               	movlw	51
  4836   004E3E  6FE5               	movwf	229,b	;volatile
  4837                           
  4838                           ;serial.c: 10:     SP4BRGH = 0;
  4839   004E40  0E00               	movlw	0
  4840   004E42  6FE6               	movwf	230,b	;volatile
  4841   004E44                     
  4842                           ; BSR set to: 14
  4843                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  4844   004E44  89E7               	bsf	231,4,b	;volatile
  4845   004E46                     
  4846                           ; BSR set to: 14
  4847                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  4848   004E46  8BE8               	bsf	232,5,b	;volatile
  4849   004E48                     
  4850                           ; BSR set to: 14
  4851                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  4852   004E48  8FE7               	bsf	231,7,b	;volatile
  4853   004E4A                     
  4854                           ; BSR set to: 14
  4855   004E4A  0012               	return		;funcret
  4856   004E4C                     __end_of_initUSART4:
  4857                           	callstack 0
  4858                           
  4859 ;; *************** function _initDCmotorsPWM *****************
  4860 ;; Defined at:
  4861 ;;		line 6 in file "dc_motor.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;Total ram usage:        2 bytes
  4880 ;; Hardware stack levels used: 1
  4881 ;; Hardware stack levels required when called: 1
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           	psect	text23
  4890   00417A                     __ptext23:
  4891                           	callstack 0
  4892   00417A                     _initDCmotorsPWM:
  4893                           	callstack 29
  4894   00417A                     
  4895                           ;dc_motor.c: 10:     RE2PPS=0x05;
  4896   00417A  0E05               	movlw	5
  4897   00417C  010E               	movlb	14	; () banked
  4898   00417E  6F74               	movwf	116,b	;volatile
  4899                           
  4900                           ;dc_motor.c: 11:     RE4PPS=0x06;
  4901   004180  0E06               	movlw	6
  4902   004182  6F76               	movwf	118,b	;volatile
  4903                           
  4904                           ;dc_motor.c: 12:     RC7PPS=0x07;
  4905   004184  0E07               	movlw	7
  4906   004186  6F69               	movwf	105,b	;volatile
  4907                           
  4908                           ;dc_motor.c: 13:     RG6PPS=0x08;
  4909   004188  0E08               	movlw	8
  4910   00418A  6F88               	movwf	136,b	;volatile
  4911   00418C                     
  4912                           ; BSR set to: 14
  4913                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  4914   00418C  9485               	bcf	133,2,c	;volatile
  4915   00418E                     
  4916                           ; BSR set to: 14
  4917                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  4918   00418E  9885               	bcf	133,4,c	;volatile
  4919   004190                     
  4920                           ; BSR set to: 14
  4921                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  4922   004190  9E83               	bcf	131,7,c	;volatile
  4923   004192                     
  4924                           ; BSR set to: 14
  4925                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  4926   004192  9C87               	bcf	135,6,c	;volatile
  4927                           
  4928                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  4929   004194  50BD               	movf	189,w,c	;volatile
  4930   004196  0B8F               	andlw	-113
  4931   004198  0930               	iorlw	48
  4932   00419A  6EBD               	movwf	189,c	;volatile
  4933                           
  4934                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  4935   00419C  0EE0               	movlw	-32
  4936   00419E  16BE               	andwf	190,f,c	;volatile
  4937                           
  4938                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  4939   0041A0  50BF               	movf	191,w,c	;volatile
  4940   0041A2  0BF0               	andlw	-16
  4941   0041A4  0901               	iorlw	1
  4942   0041A6  6EBF               	movwf	191,c	;volatile
  4943   0041A8                     
  4944                           ; BSR set to: 14
  4945                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  4946   0041A8  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  4947   0041AC                     
  4948                           ; BSR set to: 14
  4949                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  4950   0041AC  8EBD               	bsf	189,7,c	;volatile
  4951                           
  4952                           ;dc_motor.c: 34:     CCPR1H=0;
  4953   0041AE  0E00               	movlw	0
  4954   0041B0  6EAA               	movwf	170,c	;volatile
  4955                           
  4956                           ;dc_motor.c: 35:     CCPR2H=0;
  4957   0041B2  0E00               	movlw	0
  4958   0041B4  6EA6               	movwf	166,c	;volatile
  4959                           
  4960                           ;dc_motor.c: 36:     CCPR3H=0;
  4961   0041B6  0E00               	movlw	0
  4962   0041B8  010F               	movlb	15	; () banked
  4963   0041BA  6F25               	movwf	37,b	;volatile
  4964                           
  4965                           ;dc_motor.c: 37:     CCPR4H=0;
  4966   0041BC  0E00               	movlw	0
  4967   0041BE  6F21               	movwf	33,b	;volatile
  4968                           
  4969                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  4970   0041C0  0EFC               	movlw	-4
  4971   0041C2  16AD               	andwf	173,f,c	;volatile
  4972                           
  4973                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  4974   0041C4  0EF3               	movlw	-13
  4975   0041C6  16AD               	andwf	173,f,c	;volatile
  4976                           
  4977                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  4978   0041C8  0ECF               	movlw	-49
  4979   0041CA  16AD               	andwf	173,f,c	;volatile
  4980                           
  4981                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  4982   0041CC  0E3F               	movlw	-193
  4983   0041CE  16AD               	andwf	173,f,c	;volatile
  4984   0041D0                     
  4985                           ; BSR set to: 15
  4986                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  4987   0041D0  88AB               	bsf	171,4,c	;volatile
  4988                           
  4989                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  4990   0041D2  50AB               	movf	171,w,c	;volatile
  4991   0041D4  0BF0               	andlw	-16
  4992   0041D6  090C               	iorlw	12
  4993   0041D8  6EAB               	movwf	171,c	;volatile
  4994   0041DA                     
  4995                           ; BSR set to: 15
  4996                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  4997   0041DA  8EAB               	bsf	171,7,c	;volatile
  4998   0041DC                     
  4999                           ; BSR set to: 15
  5000                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  5001   0041DC  88A7               	bsf	167,4,c	;volatile
  5002                           
  5003                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  5004   0041DE  50A7               	movf	167,w,c	;volatile
  5005   0041E0  0BF0               	andlw	-16
  5006   0041E2  090C               	iorlw	12
  5007   0041E4  6EA7               	movwf	167,c	;volatile
  5008   0041E6                     
  5009                           ; BSR set to: 15
  5010                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  5011   0041E6  8EA7               	bsf	167,7,c	;volatile
  5012   0041E8                     
  5013                           ; BSR set to: 15
  5014                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  5015   0041E8  8926               	bsf	38,4,b	;volatile
  5016                           
  5017                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  5018   0041EA  5126               	movf	38,w,b	;volatile
  5019   0041EC  0BF0               	andlw	-16
  5020   0041EE  090C               	iorlw	12
  5021   0041F0  6F26               	movwf	38,b	;volatile
  5022   0041F2                     
  5023                           ; BSR set to: 15
  5024                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  5025   0041F2  8F26               	bsf	38,7,b	;volatile
  5026   0041F4                     
  5027                           ; BSR set to: 15
  5028                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  5029   0041F4  8922               	bsf	34,4,b	;volatile
  5030                           
  5031                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  5032   0041F6  5122               	movf	34,w,b	;volatile
  5033   0041F8  0BF0               	andlw	-16
  5034   0041FA  090C               	iorlw	12
  5035   0041FC  6F22               	movwf	34,b	;volatile
  5036   0041FE                     
  5037                           ; BSR set to: 15
  5038                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  5039   0041FE  8F22               	bsf	34,7,b	;volatile
  5040   004200                     
  5041                           ; BSR set to: 15
  5042   004200  0012               	return		;funcret
  5043   004202                     __end_of_initDCmotorsPWM:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _go_Home *****************
  5047 ;; Defined at:
  5048 ;;		line 4 in file "Memory.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  5051 ;;		 -> WayBack(50), 
  5052 ;;  Time_forward    2   37[COMRAM] PTR int 
  5053 ;;		 -> Time_forward(100), 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  i               2   42[COMRAM] int 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      void 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;Total ram usage:        9 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; Hardware stack levels required when called: 6
  5072 ;; This function calls:
  5073 ;;		_BlueMove
  5074 ;;		_GreenMove
  5075 ;;		_LightBlueMove
  5076 ;;		_OrangeMove
  5077 ;;		_RedMove
  5078 ;;		_ReversePink
  5079 ;;		_ReverseYellow
  5080 ;;		_timed_forward
  5081 ;; This function is called by:
  5082 ;;		_main
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text24
  5087   00308E                     __ptext24:
  5088                           	callstack 0
  5089   00308E                     _go_Home:
  5090                           	callstack 24
  5091   00308E                     
  5092                           ;Memory.c: 5:     int i;;Memory.c: 6:     for (i = move_count; i >= 0; i--){
  5093   00308E  C0F0  F02B         	movff	_move_count,go_Home@i	;volatile
  5094   003092  C0F1  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  5095   003096                     l4739:
  5096   003096  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  5097   003098  EF52  F018         	goto	u4520
  5098   00309C  EF50  F018         	goto	u4521
  5099   0030A0                     u4521:
  5100   0030A0  EF54  F018         	goto	l4743
  5101   0030A4                     u4520:
  5102   0030A4  EF56  F019         	goto	l680
  5103   0030A8                     l4743:
  5104                           
  5105                           ;Memory.c: 16:         timed_forward(&motorL, &motorR,Time_forward[i]);
  5106   0030A8  0EF3               	movlw	low _motorL
  5107   0030AA  6E14               	movwf	timed_forward@mL^0,c
  5108   0030AC  0E00               	movlw	high _motorL
  5109   0030AE  6E15               	movwf	(timed_forward@mL+1)^0,c
  5110   0030B0  0EC0               	movlw	low _motorR
  5111   0030B2  6E16               	movwf	timed_forward@mR^0,c
  5112   0030B4  0E01               	movlw	high _motorR
  5113   0030B6  6E17               	movwf	(timed_forward@mR+1)^0,c
  5114   0030B8  90D8               	bcf	status,0,c
  5115   0030BA  342B               	rlcf	go_Home@i^0,w,c
  5116   0030BC  6ED9               	movwf	fsr2l,c
  5117   0030BE  342C               	rlcf	(go_Home@i+1)^0,w,c
  5118   0030C0  6EDA               	movwf	fsr2h,c
  5119   0030C2  5026               	movf	go_Home@Time_forward^0,w,c
  5120   0030C4  26D9               	addwf	fsr2l,f,c
  5121   0030C6  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  5122   0030C8  22DA               	addwfc	fsr2h,f,c
  5123   0030CA  CFDE F018          	movff	postinc2,timed_forward@time
  5124   0030CE  CFDD F019          	movff	postdec2,timed_forward@time+1
  5125   0030D2  ECD7  F01E         	call	_timed_forward	;wreg free
  5126   0030D6                     
  5127                           ;Memory.c: 21:         if (WayBack[i-1]==1){
  5128   0030D6  502B               	movf	go_Home@i^0,w,c
  5129   0030D8  2424               	addwf	go_Home@WayBack^0,w,c
  5130   0030DA  6E28               	movwf	??_go_Home^0,c
  5131   0030DC  502C               	movf	(go_Home@i+1)^0,w,c
  5132   0030DE  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5133   0030E0  6E29               	movwf	(??_go_Home+1)^0,c
  5134   0030E2  0EFF               	movlw	255
  5135   0030E4  2428               	addwf	??_go_Home^0,w,c
  5136   0030E6  6ED9               	movwf	fsr2l,c
  5137   0030E8  0EFF               	movlw	255
  5138   0030EA  2029               	addwfc	(??_go_Home+1)^0,w,c
  5139   0030EC  6EDA               	movwf	fsr2h,c
  5140   0030EE  04DE               	decf	postinc2,w,c
  5141   0030F0  A4D8               	btfss	status,2,c
  5142   0030F2  EF7D  F018         	goto	u4531
  5143   0030F6  EF7F  F018         	goto	u4530
  5144   0030FA                     u4531:
  5145   0030FA  EF8B  F018         	goto	l4749
  5146   0030FE                     u4530:
  5147   0030FE                     
  5148                           ;Memory.c: 22:             GreenMove(&motorL, &motorR);
  5149   0030FE  0EF3               	movlw	low _motorL
  5150   003100  6E20               	movwf	GreenMove@mL^0,c
  5151   003102  0E00               	movlw	high _motorL
  5152   003104  6E21               	movwf	(GreenMove@mL+1)^0,c
  5153   003106  0EC0               	movlw	low _motorR
  5154   003108  6E22               	movwf	GreenMove@mR^0,c
  5155   00310A  0E01               	movlw	high _motorR
  5156   00310C  6E23               	movwf	(GreenMove@mR+1)^0,c
  5157   00310E  EC3A  F026         	call	_GreenMove	;wreg free
  5158                           
  5159                           ;Memory.c: 23:         }
  5160   003112  EF51  F019         	goto	l4773
  5161   003116                     l4749:
  5162   003116  502B               	movf	go_Home@i^0,w,c
  5163   003118  2424               	addwf	go_Home@WayBack^0,w,c
  5164   00311A  6E28               	movwf	??_go_Home^0,c
  5165   00311C  502C               	movf	(go_Home@i+1)^0,w,c
  5166   00311E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5167   003120  6E29               	movwf	(??_go_Home+1)^0,c
  5168   003122  0EFF               	movlw	255
  5169   003124  2428               	addwf	??_go_Home^0,w,c
  5170   003126  6ED9               	movwf	fsr2l,c
  5171   003128  0EFF               	movlw	255
  5172   00312A  2029               	addwfc	(??_go_Home+1)^0,w,c
  5173   00312C  6EDA               	movwf	fsr2h,c
  5174   00312E  0E02               	movlw	2
  5175   003130  18DE               	xorwf	postinc2,w,c
  5176   003132  A4D8               	btfss	status,2,c
  5177   003134  EF9E  F018         	goto	u4541
  5178   003138  EFA0  F018         	goto	u4540
  5179   00313C                     u4541:
  5180   00313C  EFAC  F018         	goto	l4753
  5181   003140                     u4540:
  5182   003140                     
  5183                           ;Memory.c: 25:             LightBlueMove(&motorL, &motorR);
  5184   003140  0EF3               	movlw	low _motorL
  5185   003142  6E20               	movwf	LightBlueMove@mL^0,c
  5186   003144  0E00               	movlw	high _motorL
  5187   003146  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  5188   003148  0EC0               	movlw	low _motorR
  5189   00314A  6E22               	movwf	LightBlueMove@mR^0,c
  5190   00314C  0E01               	movlw	high _motorR
  5191   00314E  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  5192   003150  EC9E  F023         	call	_LightBlueMove	;wreg free
  5193                           
  5194                           ;Memory.c: 26:         }
  5195   003154  EF51  F019         	goto	l4773
  5196   003158                     l4753:
  5197   003158  502B               	movf	go_Home@i^0,w,c
  5198   00315A  2424               	addwf	go_Home@WayBack^0,w,c
  5199   00315C  6E28               	movwf	??_go_Home^0,c
  5200   00315E  502C               	movf	(go_Home@i+1)^0,w,c
  5201   003160  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5202   003162  6E29               	movwf	(??_go_Home+1)^0,c
  5203   003164  0EFF               	movlw	255
  5204   003166  2428               	addwf	??_go_Home^0,w,c
  5205   003168  6ED9               	movwf	fsr2l,c
  5206   00316A  0EFF               	movlw	255
  5207   00316C  2029               	addwfc	(??_go_Home+1)^0,w,c
  5208   00316E  6EDA               	movwf	fsr2h,c
  5209   003170  0E03               	movlw	3
  5210   003172  18DE               	xorwf	postinc2,w,c
  5211   003174  A4D8               	btfss	status,2,c
  5212   003176  EFBF  F018         	goto	u4551
  5213   00317A  EFC1  F018         	goto	u4550
  5214   00317E                     u4551:
  5215   00317E  EFCD  F018         	goto	l4757
  5216   003182                     u4550:
  5217   003182                     
  5218                           ;Memory.c: 28:             ReverseYellow(&motorL, &motorR);
  5219   003182  0EF3               	movlw	low _motorL
  5220   003184  6E20               	movwf	ReverseYellow@mL^0,c
  5221   003186  0E00               	movlw	high _motorL
  5222   003188  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  5223   00318A  0EC0               	movlw	low _motorR
  5224   00318C  6E22               	movwf	ReverseYellow@mR^0,c
  5225   00318E  0E01               	movlw	high _motorR
  5226   003190  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  5227   003192  ECDD  F025         	call	_ReverseYellow	;wreg free
  5228                           
  5229                           ;Memory.c: 29:         }
  5230   003196  EF51  F019         	goto	l4773
  5231   00319A                     l4757:
  5232   00319A  502B               	movf	go_Home@i^0,w,c
  5233   00319C  2424               	addwf	go_Home@WayBack^0,w,c
  5234   00319E  6E28               	movwf	??_go_Home^0,c
  5235   0031A0  502C               	movf	(go_Home@i+1)^0,w,c
  5236   0031A2  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5237   0031A4  6E29               	movwf	(??_go_Home+1)^0,c
  5238   0031A6  0EFF               	movlw	255
  5239   0031A8  2428               	addwf	??_go_Home^0,w,c
  5240   0031AA  6ED9               	movwf	fsr2l,c
  5241   0031AC  0EFF               	movlw	255
  5242   0031AE  2029               	addwfc	(??_go_Home+1)^0,w,c
  5243   0031B0  6EDA               	movwf	fsr2h,c
  5244   0031B2  0E04               	movlw	4
  5245   0031B4  18DE               	xorwf	postinc2,w,c
  5246   0031B6  A4D8               	btfss	status,2,c
  5247   0031B8  EFE0  F018         	goto	u4561
  5248   0031BC  EFE2  F018         	goto	u4560
  5249   0031C0                     u4561:
  5250   0031C0  EFEE  F018         	goto	l4761
  5251   0031C4                     u4560:
  5252   0031C4                     
  5253                           ;Memory.c: 31:             BlueMove(&motorL, &motorR);
  5254   0031C4  0EF3               	movlw	low _motorL
  5255   0031C6  6E20               	movwf	BlueMove@mL^0,c
  5256   0031C8  0E00               	movlw	high _motorL
  5257   0031CA  6E21               	movwf	(BlueMove@mL+1)^0,c
  5258   0031CC  0EC0               	movlw	low _motorR
  5259   0031CE  6E22               	movwf	BlueMove@mR^0,c
  5260   0031D0  0E01               	movlw	high _motorR
  5261   0031D2  6E23               	movwf	(BlueMove@mR+1)^0,c
  5262   0031D4  EC36  F022         	call	_BlueMove	;wreg free
  5263                           
  5264                           ;Memory.c: 32:         }
  5265   0031D8  EF51  F019         	goto	l4773
  5266   0031DC                     l4761:
  5267   0031DC  502B               	movf	go_Home@i^0,w,c
  5268   0031DE  2424               	addwf	go_Home@WayBack^0,w,c
  5269   0031E0  6E28               	movwf	??_go_Home^0,c
  5270   0031E2  502C               	movf	(go_Home@i+1)^0,w,c
  5271   0031E4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5272   0031E6  6E29               	movwf	(??_go_Home+1)^0,c
  5273   0031E8  0EFF               	movlw	255
  5274   0031EA  2428               	addwf	??_go_Home^0,w,c
  5275   0031EC  6ED9               	movwf	fsr2l,c
  5276   0031EE  0EFF               	movlw	255
  5277   0031F0  2029               	addwfc	(??_go_Home+1)^0,w,c
  5278   0031F2  6EDA               	movwf	fsr2h,c
  5279   0031F4  0E05               	movlw	5
  5280   0031F6  18DE               	xorwf	postinc2,w,c
  5281   0031F8  A4D8               	btfss	status,2,c
  5282   0031FA  EF01  F019         	goto	u4571
  5283   0031FE  EF03  F019         	goto	u4570
  5284   003202                     u4571:
  5285   003202  EF0F  F019         	goto	l4765
  5286   003206                     u4570:
  5287   003206                     
  5288                           ;Memory.c: 34:             RedMove(&motorL, &motorR);
  5289   003206  0EF3               	movlw	low _motorL
  5290   003208  6E20               	movwf	RedMove@mL^0,c
  5291   00320A  0E00               	movlw	high _motorL
  5292   00320C  6E21               	movwf	(RedMove@mL+1)^0,c
  5293   00320E  0EC0               	movlw	low _motorR
  5294   003210  6E22               	movwf	RedMove@mR^0,c
  5295   003212  0E01               	movlw	high _motorR
  5296   003214  6E23               	movwf	(RedMove@mR+1)^0,c
  5297   003216  EC1B  F026         	call	_RedMove	;wreg free
  5298                           
  5299                           ;Memory.c: 35:         }
  5300   00321A  EF51  F019         	goto	l4773
  5301   00321E                     l4765:
  5302   00321E  502B               	movf	go_Home@i^0,w,c
  5303   003220  2424               	addwf	go_Home@WayBack^0,w,c
  5304   003222  6E28               	movwf	??_go_Home^0,c
  5305   003224  502C               	movf	(go_Home@i+1)^0,w,c
  5306   003226  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5307   003228  6E29               	movwf	(??_go_Home+1)^0,c
  5308   00322A  0EFF               	movlw	255
  5309   00322C  2428               	addwf	??_go_Home^0,w,c
  5310   00322E  6ED9               	movwf	fsr2l,c
  5311   003230  0EFF               	movlw	255
  5312   003232  2029               	addwfc	(??_go_Home+1)^0,w,c
  5313   003234  6EDA               	movwf	fsr2h,c
  5314   003236  0E06               	movlw	6
  5315   003238  18DE               	xorwf	postinc2,w,c
  5316   00323A  A4D8               	btfss	status,2,c
  5317   00323C  EF22  F019         	goto	u4581
  5318   003240  EF24  F019         	goto	u4580
  5319   003244                     u4581:
  5320   003244  EF30  F019         	goto	l4769
  5321   003248                     u4580:
  5322   003248                     
  5323                           ;Memory.c: 37:             OrangeMove(&motorL, &motorR);
  5324   003248  0EF3               	movlw	low _motorL
  5325   00324A  6E20               	movwf	OrangeMove@mL^0,c
  5326   00324C  0E00               	movlw	high _motorL
  5327   00324E  6E21               	movwf	(OrangeMove@mL+1)^0,c
  5328   003250  0EC0               	movlw	low _motorR
  5329   003252  6E22               	movwf	OrangeMove@mR^0,c
  5330   003254  0E01               	movlw	high _motorR
  5331   003256  6E23               	movwf	(OrangeMove@mR+1)^0,c
  5332   003258  EC75  F023         	call	_OrangeMove	;wreg free
  5333                           
  5334                           ;Memory.c: 38:         }
  5335   00325C  EF51  F019         	goto	l4773
  5336   003260                     l4769:
  5337   003260  502B               	movf	go_Home@i^0,w,c
  5338   003262  2424               	addwf	go_Home@WayBack^0,w,c
  5339   003264  6E28               	movwf	??_go_Home^0,c
  5340   003266  502C               	movf	(go_Home@i+1)^0,w,c
  5341   003268  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  5342   00326A  6E29               	movwf	(??_go_Home+1)^0,c
  5343   00326C  0EFF               	movlw	255
  5344   00326E  2428               	addwf	??_go_Home^0,w,c
  5345   003270  6ED9               	movwf	fsr2l,c
  5346   003272  0EFF               	movlw	255
  5347   003274  2029               	addwfc	(??_go_Home+1)^0,w,c
  5348   003276  6EDA               	movwf	fsr2h,c
  5349   003278  0E07               	movlw	7
  5350   00327A  18DE               	xorwf	postinc2,w,c
  5351   00327C  A4D8               	btfss	status,2,c
  5352   00327E  EF43  F019         	goto	u4591
  5353   003282  EF45  F019         	goto	u4590
  5354   003286                     u4591:
  5355   003286  EF51  F019         	goto	l674
  5356   00328A                     u4590:
  5357   00328A                     
  5358                           ;Memory.c: 40:             ReversePink(&motorL, &motorR);
  5359   00328A  0EF3               	movlw	low _motorL
  5360   00328C  6E20               	movwf	ReversePink@mL^0,c
  5361   00328E  0E00               	movlw	high _motorL
  5362   003290  6E21               	movwf	(ReversePink@mL+1)^0,c
  5363   003292  0EC0               	movlw	low _motorR
  5364   003294  6E22               	movwf	ReversePink@mR^0,c
  5365   003296  0E01               	movlw	high _motorR
  5366   003298  6E23               	movwf	(ReversePink@mR+1)^0,c
  5367   00329A  ECFC  F025         	call	_ReversePink	;wreg free
  5368   00329E  EF51  F019         	goto	l4773
  5369   0032A2                     l674:
  5370   0032A2                     l4773:
  5371                           
  5372                           ;Memory.c: 44:   }
  5373   0032A2  062B               	decf	go_Home@i^0,f,c
  5374   0032A4  A0D8               	btfss	status,0,c
  5375   0032A6  062C               	decf	(go_Home@i+1)^0,f,c
  5376   0032A8  EF4B  F018         	goto	l4739
  5377   0032AC                     l680:
  5378   0032AC  0012               	return		;funcret
  5379   0032AE                     __end_of_go_Home:
  5380                           	callstack 0
  5381                           
  5382 ;; *************** function _timed_forward *****************
  5383 ;; Defined at:
  5384 ;;		line 165 in file "dc_motor.c"
  5385 ;; Parameters:    Size  Location     Type
  5386 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  5387 ;;		 -> motorL(9), 
  5388 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  5389 ;;		 -> motorR(9), 
  5390 ;;  time            2   23[COMRAM] int 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;		None
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5402 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;Total ram usage:        8 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 3
  5409 ;; This function calls:
  5410 ;;		_delayed_ms
  5411 ;;		_setMotorPWM
  5412 ;; This function is called by:
  5413 ;;		_go_Home
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text25
  5418   003DAE                     __ptext25:
  5419                           	callstack 0
  5420   003DAE                     _timed_forward:
  5421                           	callstack 26
  5422   003DAE                     
  5423                           ;dc_motor.c: 165: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 166: {;dc_motor.c: 168:     mL->direction =1;
  5424   003DAE  EE20 F001          	lfsr	2,1
  5425   003DB2  5014               	movf	timed_forward@mL^0,w,c
  5426   003DB4  26D9               	addwf	fsr2l,f,c
  5427   003DB6  5015               	movf	(timed_forward@mL+1)^0,w,c
  5428   003DB8  22DA               	addwfc	fsr2h,f,c
  5429   003DBA  0E01               	movlw	1
  5430   003DBC  6EDF               	movwf	indf2,c
  5431                           
  5432                           ;dc_motor.c: 169:     mR->direction =1;
  5433   003DBE  EE20 F001          	lfsr	2,1
  5434   003DC2  5016               	movf	timed_forward@mR^0,w,c
  5435   003DC4  26D9               	addwf	fsr2l,f,c
  5436   003DC6  5017               	movf	(timed_forward@mR+1)^0,w,c
  5437   003DC8  22DA               	addwfc	fsr2h,f,c
  5438   003DCA  0E01               	movlw	1
  5439   003DCC  6EDF               	movwf	indf2,c
  5440                           
  5441                           ;dc_motor.c: 170:     while (mL->power < power && mR->power < power){
  5442   003DCE  EF0D  F01F         	goto	l3971
  5443   003DD2                     l3963:
  5444                           
  5445                           ;dc_motor.c: 172:         mL->power+=10;
  5446   003DD2  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5447   003DD6  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5448   003DDA  0E0A               	movlw	10
  5449   003DDC  26DF               	addwf	indf2,f,c
  5450                           
  5451                           ;dc_motor.c: 173:         mR->power+=10;
  5452   003DDE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5453   003DE2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5454   003DE6  0E0A               	movlw	10
  5455   003DE8  26DF               	addwf	indf2,f,c
  5456   003DEA                     
  5457                           ;dc_motor.c: 175:         setMotorPWM(mL);
  5458   003DEA  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  5459   003DEE  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  5460   003DF2  ECE1  F01B         	call	_setMotorPWM	;wreg free
  5461   003DF6                     
  5462                           ;dc_motor.c: 176:         setMotorPWM(mR);
  5463   003DF6  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  5464   003DFA  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  5465   003DFE  ECE1  F01B         	call	_setMotorPWM	;wreg free
  5466   003E02                     
  5467                           ;dc_motor.c: 179:         _delay((unsigned long)((20)*(64000000/4000.0)));
  5468   003E02  0E02               	movlw	2
  5469   003E04  6E1B               	movwf	(??_timed_forward+1)^0,c
  5470   003E06  0EA0               	movlw	160
  5471   003E08  6E1A               	movwf	??_timed_forward^0,c
  5472   003E0A  0E92               	movlw	146
  5473   003E0C                     u5037:
  5474   003E0C  2EE8               	decfsz	wreg,f,c
  5475   003E0E  D7FE               	bra	u5037
  5476   003E10  2E1A               	decfsz	??_timed_forward^0,f,c
  5477   003E12  D7FC               	bra	u5037
  5478   003E14  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  5479   003E16  D7FA               	bra	u5037
  5480   003E18  D000               	nop2	
  5481   003E1A                     l3971:
  5482   003E1A  C014  FFD9         	movff	timed_forward@mL,fsr2l
  5483   003E1E  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  5484   003E22  0E1E               	movlw	30
  5485   003E24  60DF               	cpfslt	indf2,c
  5486   003E26  EF17  F01F         	goto	u3421
  5487   003E2A  EF19  F01F         	goto	u3420
  5488   003E2E                     u3421:
  5489   003E2E  EF25  F01F         	goto	l3975
  5490   003E32                     u3420:
  5491   003E32  C016  FFD9         	movff	timed_forward@mR,fsr2l
  5492   003E36  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  5493   003E3A  0E1D               	movlw	29
  5494   003E3C  64DF               	cpfsgt	indf2,c
  5495   003E3E  EF23  F01F         	goto	u3431
  5496   003E42  EF25  F01F         	goto	u3430
  5497   003E46                     u3431:
  5498   003E46  EFE9  F01E         	goto	l3963
  5499   003E4A                     u3430:
  5500   003E4A                     l3975:
  5501                           
  5502                           ;dc_motor.c: 181:     delayed_ms(time);
  5503   003E4A  C018  F001         	movff	timed_forward@time,delayed_ms@time
  5504   003E4E  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  5505   003E52  EC59  F026         	call	_delayed_ms	;wreg free
  5506   003E56  0012               	return		;funcret
  5507   003E58                     __end_of_timed_forward:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _delayed_ms *****************
  5511 ;; Defined at:
  5512 ;;		line 39 in file "timers.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  time            2    0[COMRAM] int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  i               2    3[COMRAM] unsigned int 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;Total ram usage:        5 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; Hardware stack levels required when called: 1
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_timed_forward
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540                           	psect	text26
  5541   004CB2                     __ptext26:
  5542                           	callstack 0
  5543   004CB2                     _delayed_ms:
  5544                           	callstack 27
  5545   004CB2                     
  5546                           ;timers.c: 40:     for(unsigned int i=0;i<time;i++){
  5547   004CB2  0E00               	movlw	0
  5548   004CB4  6E05               	movwf	(delayed_ms@i+1)^0,c
  5549   004CB6  0E00               	movlw	0
  5550   004CB8  6E04               	movwf	delayed_ms@i^0,c
  5551   004CBA  EF69  F026         	goto	l709
  5552   004CBE                     l3645:
  5553                           
  5554                           ;timers.c: 41:         _delay((unsigned long)((1)*(64000000/4000.0)));
  5555   004CBE  0E15               	movlw	21
  5556   004CC0  6E03               	movwf	??_delayed_ms^0,c
  5557   004CC2  0EC6               	movlw	198
  5558   004CC4                     u5047:
  5559   004CC4  2EE8               	decfsz	wreg,f,c
  5560   004CC6  D7FE               	bra	u5047
  5561   004CC8  2E03               	decfsz	??_delayed_ms^0,f,c
  5562   004CCA  D7FC               	bra	u5047
  5563   004CCC  D000               	nop2	
  5564   004CCE                     
  5565                           ;timers.c: 42:     }
  5566   004CCE  4A04               	infsnz	delayed_ms@i^0,f,c
  5567   004CD0  2A05               	incf	(delayed_ms@i+1)^0,f,c
  5568   004CD2                     l709:
  5569   004CD2  5001               	movf	delayed_ms@time^0,w,c
  5570   004CD4  5C04               	subwf	delayed_ms@i^0,w,c
  5571   004CD6  5002               	movf	(delayed_ms@time+1)^0,w,c
  5572   004CD8  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  5573   004CDA  A0D8               	btfss	status,0,c
  5574   004CDC  EF72  F026         	goto	u2981
  5575   004CE0  EF74  F026         	goto	u2980
  5576   004CE4                     u2981:
  5577   004CE4  EF5F  F026         	goto	l3645
  5578   004CE8                     u2980:
  5579   004CE8  0012               	return		;funcret
  5580   004CEA                     __end_of_delayed_ms:
  5581                           	callstack 0
  5582                           
  5583 ;; *************** function _ReverseYellow *****************
  5584 ;; Defined at:
  5585 ;;		line 334 in file "dc_motor.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5588 ;;		 -> motorL(9), 
  5589 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5590 ;;		 -> motorR(9), 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  1    wreg      void 
  5595 ;; Registers used:
  5596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;Total ram usage:        4 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 5
  5609 ;; This function calls:
  5610 ;;		_ForwardOneBlock
  5611 ;;		_turnLeft45
  5612 ;; This function is called by:
  5613 ;;		_go_Home
  5614 ;; This function uses a non-reentrant model
  5615 ;;
  5616                           
  5617                           	psect	text27
  5618   004BBA                     __ptext27:
  5619                           	callstack 0
  5620   004BBA                     _ReverseYellow:
  5621                           	callstack 24
  5622   004BBA                     
  5623                           ;dc_motor.c: 335:     turnLeft45(&motorL, &motorR);
  5624   004BBA  0EF3               	movlw	low _motorL
  5625   004BBC  6E1A               	movwf	turnLeft45@mL^0,c
  5626   004BBE  0E00               	movlw	high _motorL
  5627   004BC0  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5628   004BC2  0EC0               	movlw	low _motorR
  5629   004BC4  6E1C               	movwf	turnLeft45@mR^0,c
  5630   004BC6  0E01               	movlw	high _motorR
  5631   004BC8  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5632   004BCA  EC30  F025         	call	_turnLeft45	;wreg free
  5633                           
  5634                           ;dc_motor.c: 336:     turnLeft45(&motorL, &motorR);
  5635   004BCE  0EF3               	movlw	low _motorL
  5636   004BD0  6E1A               	movwf	turnLeft45@mL^0,c
  5637   004BD2  0E00               	movlw	high _motorL
  5638   004BD4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  5639   004BD6  0EC0               	movlw	low _motorR
  5640   004BD8  6E1C               	movwf	turnLeft45@mR^0,c
  5641   004BDA  0E01               	movlw	high _motorR
  5642   004BDC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  5643   004BDE  EC30  F025         	call	_turnLeft45	;wreg free
  5644                           
  5645                           ;dc_motor.c: 337:     ForwardOneBlock(&motorL, &motorR);
  5646   004BE2  0EF3               	movlw	low _motorL
  5647   004BE4  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5648   004BE6  0E00               	movlw	high _motorL
  5649   004BE8  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5650   004BEA  0EC0               	movlw	low _motorR
  5651   004BEC  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5652   004BEE  0E01               	movlw	high _motorR
  5653   004BF0  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5654   004BF2  EC98  F022         	call	_ForwardOneBlock	;wreg free
  5655   004BF6  0012               	return		;funcret
  5656   004BF8                     __end_of_ReverseYellow:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _ReversePink *****************
  5660 ;; Defined at:
  5661 ;;		line 339 in file "dc_motor.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5664 ;;		 -> motorL(9), 
  5665 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5666 ;;		 -> motorR(9), 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;		None
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  1    wreg      void 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;Total ram usage:        4 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 5
  5685 ;; This function calls:
  5686 ;;		_ForwardOneBlock
  5687 ;;		_turnRight45
  5688 ;; This function is called by:
  5689 ;;		_go_Home
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text28
  5694   004BF8                     __ptext28:
  5695                           	callstack 0
  5696   004BF8                     _ReversePink:
  5697                           	callstack 24
  5698   004BF8                     
  5699                           ;dc_motor.c: 340:     turnRight45(&motorL, &motorR);
  5700   004BF8  0EF3               	movlw	low _motorL
  5701   004BFA  6E1A               	movwf	turnRight45@mL^0,c
  5702   004BFC  0E00               	movlw	high _motorL
  5703   004BFE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5704   004C00  0EC0               	movlw	low _motorR
  5705   004C02  6E1C               	movwf	turnRight45@mR^0,c
  5706   004C04  0E01               	movlw	high _motorR
  5707   004C06  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5708   004C08  EC09  F025         	call	_turnRight45	;wreg free
  5709                           
  5710                           ;dc_motor.c: 341:     turnRight45(&motorL, &motorR);
  5711   004C0C  0EF3               	movlw	low _motorL
  5712   004C0E  6E1A               	movwf	turnRight45@mL^0,c
  5713   004C10  0E00               	movlw	high _motorL
  5714   004C12  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5715   004C14  0EC0               	movlw	low _motorR
  5716   004C16  6E1C               	movwf	turnRight45@mR^0,c
  5717   004C18  0E01               	movlw	high _motorR
  5718   004C1A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5719   004C1C  EC09  F025         	call	_turnRight45	;wreg free
  5720                           
  5721                           ;dc_motor.c: 342:     ForwardOneBlock(&motorL, &motorR);
  5722   004C20  0EF3               	movlw	low _motorL
  5723   004C22  6E1A               	movwf	ForwardOneBlock@mL^0,c
  5724   004C24  0E00               	movlw	high _motorL
  5725   004C26  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  5726   004C28  0EC0               	movlw	low _motorR
  5727   004C2A  6E1C               	movwf	ForwardOneBlock@mR^0,c
  5728   004C2C  0E01               	movlw	high _motorR
  5729   004C2E  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  5730   004C30  EC98  F022         	call	_ForwardOneBlock	;wreg free
  5731   004C34  0012               	return		;funcret
  5732   004C36                     __end_of_ReversePink:
  5733                           	callstack 0
  5734                           
  5735 ;; *************** function _ForwardOneBlock *****************
  5736 ;; Defined at:
  5737 ;;		line 238 in file "dc_motor.c"
  5738 ;; Parameters:    Size  Location     Type
  5739 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  5740 ;;		 -> motorL(9), 
  5741 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  5742 ;;		 -> motorR(9), 
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5756 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5757 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5758 ;;Total ram usage:        6 bytes
  5759 ;; Hardware stack levels used: 1
  5760 ;; Hardware stack levels required when called: 4
  5761 ;; This function calls:
  5762 ;;		_fullSpeedAhead
  5763 ;;		_stop
  5764 ;; This function is called by:
  5765 ;;		_ReverseYellow
  5766 ;;		_ReversePink
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text29
  5771   004530                     __ptext29:
  5772                           	callstack 0
  5773   004530                     _ForwardOneBlock:
  5774                           	callstack 24
  5775   004530                     
  5776                           ;dc_motor.c: 239:     fullSpeedAhead(mL,mR);
  5777   004530  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  5778   004534  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  5779   004538  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  5780   00453C  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  5781   004540  EC6E  F020         	call	_fullSpeedAhead	;wreg free
  5782   004544                     
  5783                           ;dc_motor.c: 240:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  5784   004544  0EA3               	movlw	163
  5785   004546  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5786   004548  0E57               	movlw	87
  5787   00454A  6E1E               	movwf	??_ForwardOneBlock^0,c
  5788   00454C  0E02               	movlw	2
  5789   00454E                     u5057:
  5790   00454E  2EE8               	decfsz	wreg,f,c
  5791   004550  D7FE               	bra	u5057
  5792   004552  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5793   004554  D7FC               	bra	u5057
  5794   004556  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5795   004558  D7FA               	bra	u5057
  5796   00455A  D000               	nop2	
  5797   00455C                     
  5798                           ;dc_motor.c: 241:     stop(&motorL, &motorR);
  5799   00455C  0EF3               	movlw	low _motorL
  5800   00455E  6E14               	movwf	stop@mL^0,c
  5801   004560  0E00               	movlw	high _motorL
  5802   004562  6E15               	movwf	(stop@mL+1)^0,c
  5803   004564  0EC0               	movlw	low _motorR
  5804   004566  6E16               	movwf	stop@mR^0,c
  5805   004568  0E01               	movlw	high _motorR
  5806   00456A  6E17               	movwf	(stop@mR+1)^0,c
  5807   00456C  EC42  F021         	call	_stop	;wreg free
  5808                           
  5809                           ;dc_motor.c: 242:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  5810   004570  0E52               	movlw	82
  5811   004572  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  5812   004574  0E2B               	movlw	43
  5813   004576  6E1E               	movwf	??_ForwardOneBlock^0,c
  5814   004578  0E00               	movlw	0
  5815   00457A                     u5067:
  5816   00457A  2EE8               	decfsz	wreg,f,c
  5817   00457C  D7FE               	bra	u5067
  5818   00457E  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  5819   004580  D7FC               	bra	u5067
  5820   004582  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  5821   004584  D7FA               	bra	u5067
  5822   004586  D000               	nop2	
  5823   004588  0012               	return		;funcret
  5824   00458A                     __end_of_ForwardOneBlock:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function _RedMove *****************
  5828 ;; Defined at:
  5829 ;;		line 262 in file "dc_motor.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5832 ;;		 -> motorL(9), 
  5833 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5834 ;;		 -> motorR(9), 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1    wreg      void 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;Total ram usage:        4 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 5
  5853 ;; This function calls:
  5854 ;;		_reverseDetect
  5855 ;;		_turnRight45
  5856 ;; This function is called by:
  5857 ;;		_main
  5858 ;;		_go_Home
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           	psect	text30
  5863   004C36                     __ptext30:
  5864                           	callstack 0
  5865   004C36                     _RedMove:
  5866                           	callstack 24
  5867   004C36                     
  5868                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  5869   004C36  0EF3               	movlw	low _motorL
  5870   004C38  6E1A               	movwf	reverseDetect@mL^0,c
  5871   004C3A  0E00               	movlw	high _motorL
  5872   004C3C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5873   004C3E  0EC0               	movlw	low _motorR
  5874   004C40  6E1C               	movwf	reverseDetect@mR^0,c
  5875   004C42  0E01               	movlw	high _motorR
  5876   004C44  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5877   004C46  ECF2  F022         	call	_reverseDetect	;wreg free
  5878                           
  5879                           ;dc_motor.c: 265:     turnRight45(&motorL, &motorR);
  5880   004C4A  0EF3               	movlw	low _motorL
  5881   004C4C  6E1A               	movwf	turnRight45@mL^0,c
  5882   004C4E  0E00               	movlw	high _motorL
  5883   004C50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5884   004C52  0EC0               	movlw	low _motorR
  5885   004C54  6E1C               	movwf	turnRight45@mR^0,c
  5886   004C56  0E01               	movlw	high _motorR
  5887   004C58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5888   004C5A  EC09  F025         	call	_turnRight45	;wreg free
  5889                           
  5890                           ;dc_motor.c: 266:     turnRight45(&motorL, &motorR);
  5891   004C5E  0EF3               	movlw	low _motorL
  5892   004C60  6E1A               	movwf	turnRight45@mL^0,c
  5893   004C62  0E00               	movlw	high _motorL
  5894   004C64  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5895   004C66  0EC0               	movlw	low _motorR
  5896   004C68  6E1C               	movwf	turnRight45@mR^0,c
  5897   004C6A  0E01               	movlw	high _motorR
  5898   004C6C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5899   004C6E  EC09  F025         	call	_turnRight45	;wreg free
  5900   004C72  0012               	return		;funcret
  5901   004C74                     __end_of_RedMove:
  5902                           	callstack 0
  5903                           
  5904 ;; *************** function _OrangeMove *****************
  5905 ;; Defined at:
  5906 ;;		line 308 in file "dc_motor.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5909 ;;		 -> motorL(9), 
  5910 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5911 ;;		 -> motorR(9), 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;		None
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  1    wreg      void 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5926 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5927 ;;Total ram usage:        4 bytes
  5928 ;; Hardware stack levels used: 1
  5929 ;; Hardware stack levels required when called: 5
  5930 ;; This function calls:
  5931 ;;		_reverseDetect
  5932 ;;		_turnRight45
  5933 ;; This function is called by:
  5934 ;;		_main
  5935 ;;		_go_Home
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text31
  5940   0046EA                     __ptext31:
  5941                           	callstack 0
  5942   0046EA                     _OrangeMove:
  5943                           	callstack 24
  5944   0046EA                     
  5945                           ;dc_motor.c: 309:     reverseDetect(&motorL, &motorR);
  5946   0046EA  0EF3               	movlw	low _motorL
  5947   0046EC  6E1A               	movwf	reverseDetect@mL^0,c
  5948   0046EE  0E00               	movlw	high _motorL
  5949   0046F0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  5950   0046F2  0EC0               	movlw	low _motorR
  5951   0046F4  6E1C               	movwf	reverseDetect@mR^0,c
  5952   0046F6  0E01               	movlw	high _motorR
  5953   0046F8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  5954   0046FA  ECF2  F022         	call	_reverseDetect	;wreg free
  5955                           
  5956                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  5957   0046FE  0EF3               	movlw	low _motorL
  5958   004700  6E1A               	movwf	turnRight45@mL^0,c
  5959   004702  0E00               	movlw	high _motorL
  5960   004704  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5961   004706  0EC0               	movlw	low _motorR
  5962   004708  6E1C               	movwf	turnRight45@mR^0,c
  5963   00470A  0E01               	movlw	high _motorR
  5964   00470C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5965   00470E  EC09  F025         	call	_turnRight45	;wreg free
  5966                           
  5967                           ;dc_motor.c: 312:     turnRight45(&motorL, &motorR);
  5968   004712  0EF3               	movlw	low _motorL
  5969   004714  6E1A               	movwf	turnRight45@mL^0,c
  5970   004716  0E00               	movlw	high _motorL
  5971   004718  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5972   00471A  0EC0               	movlw	low _motorR
  5973   00471C  6E1C               	movwf	turnRight45@mR^0,c
  5974   00471E  0E01               	movlw	high _motorR
  5975   004720  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5976   004722  EC09  F025         	call	_turnRight45	;wreg free
  5977                           
  5978                           ;dc_motor.c: 313:     turnRight45(&motorL, &motorR);
  5979   004726  0EF3               	movlw	low _motorL
  5980   004728  6E1A               	movwf	turnRight45@mL^0,c
  5981   00472A  0E00               	movlw	high _motorL
  5982   00472C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  5983   00472E  0EC0               	movlw	low _motorR
  5984   004730  6E1C               	movwf	turnRight45@mR^0,c
  5985   004732  0E01               	movlw	high _motorR
  5986   004734  6E1D               	movwf	(turnRight45@mR+1)^0,c
  5987   004736  EC09  F025         	call	_turnRight45	;wreg free
  5988   00473A  0012               	return		;funcret
  5989   00473C                     __end_of_OrangeMove:
  5990                           	callstack 0
  5991                           
  5992 ;; *************** function _LightBlueMove *****************
  5993 ;; Defined at:
  5994 ;;		line 317 in file "dc_motor.c"
  5995 ;; Parameters:    Size  Location     Type
  5996 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  5997 ;;		 -> motorL(9), 
  5998 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  5999 ;;		 -> motorR(9), 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;		None
  6002 ;; Return value:  Size  Location     Type
  6003 ;;                  1    wreg      void 
  6004 ;; Registers used:
  6005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6006 ;; Tracked objects:
  6007 ;;		On entry : 0/0
  6008 ;;		On exit  : 0/0
  6009 ;;		Unchanged: 0/0
  6010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;Total ram usage:        4 bytes
  6016 ;; Hardware stack levels used: 1
  6017 ;; Hardware stack levels required when called: 5
  6018 ;; This function calls:
  6019 ;;		_reverseDetect
  6020 ;;		_turnLeft45
  6021 ;; This function is called by:
  6022 ;;		_main
  6023 ;;		_go_Home
  6024 ;; This function uses a non-reentrant model
  6025 ;;
  6026                           
  6027                           	psect	text32
  6028   00473C                     __ptext32:
  6029                           	callstack 0
  6030   00473C                     _LightBlueMove:
  6031                           	callstack 24
  6032   00473C                     
  6033                           ;dc_motor.c: 318:     reverseDetect(&motorL, &motorR);
  6034   00473C  0EF3               	movlw	low _motorL
  6035   00473E  6E1A               	movwf	reverseDetect@mL^0,c
  6036   004740  0E00               	movlw	high _motorL
  6037   004742  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6038   004744  0EC0               	movlw	low _motorR
  6039   004746  6E1C               	movwf	reverseDetect@mR^0,c
  6040   004748  0E01               	movlw	high _motorR
  6041   00474A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6042   00474C  ECF2  F022         	call	_reverseDetect	;wreg free
  6043                           
  6044                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  6045   004750  0EF3               	movlw	low _motorL
  6046   004752  6E1A               	movwf	turnLeft45@mL^0,c
  6047   004754  0E00               	movlw	high _motorL
  6048   004756  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6049   004758  0EC0               	movlw	low _motorR
  6050   00475A  6E1C               	movwf	turnLeft45@mR^0,c
  6051   00475C  0E01               	movlw	high _motorR
  6052   00475E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6053   004760  EC30  F025         	call	_turnLeft45	;wreg free
  6054                           
  6055                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  6056   004764  0EF3               	movlw	low _motorL
  6057   004766  6E1A               	movwf	turnLeft45@mL^0,c
  6058   004768  0E00               	movlw	high _motorL
  6059   00476A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6060   00476C  0EC0               	movlw	low _motorR
  6061   00476E  6E1C               	movwf	turnLeft45@mR^0,c
  6062   004770  0E01               	movlw	high _motorR
  6063   004772  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6064   004774  EC30  F025         	call	_turnLeft45	;wreg free
  6065                           
  6066                           ;dc_motor.c: 322:     turnLeft45(&motorL, &motorR);
  6067   004778  0EF3               	movlw	low _motorL
  6068   00477A  6E1A               	movwf	turnLeft45@mL^0,c
  6069   00477C  0E00               	movlw	high _motorL
  6070   00477E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6071   004780  0EC0               	movlw	low _motorR
  6072   004782  6E1C               	movwf	turnLeft45@mR^0,c
  6073   004784  0E01               	movlw	high _motorR
  6074   004786  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6075   004788  EC30  F025         	call	_turnLeft45	;wreg free
  6076   00478C  0012               	return		;funcret
  6077   00478E                     __end_of_LightBlueMove:
  6078                           	callstack 0
  6079                           
  6080 ;; *************** function _GreenMove *****************
  6081 ;; Defined at:
  6082 ;;		line 270 in file "dc_motor.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6085 ;;		 -> motorL(9), 
  6086 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6087 ;;		 -> motorR(9), 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;                  1    wreg      void 
  6092 ;; Registers used:
  6093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6099 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6102 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6103 ;;Total ram usage:        4 bytes
  6104 ;; Hardware stack levels used: 1
  6105 ;; Hardware stack levels required when called: 5
  6106 ;; This function calls:
  6107 ;;		_reverseDetect
  6108 ;;		_turnLeft45
  6109 ;; This function is called by:
  6110 ;;		_main
  6111 ;;		_go_Home
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text33
  6116   004C74                     __ptext33:
  6117                           	callstack 0
  6118   004C74                     _GreenMove:
  6119                           	callstack 24
  6120   004C74                     
  6121                           ;dc_motor.c: 271:     reverseDetect(&motorL, &motorR);
  6122   004C74  0EF3               	movlw	low _motorL
  6123   004C76  6E1A               	movwf	reverseDetect@mL^0,c
  6124   004C78  0E00               	movlw	high _motorL
  6125   004C7A  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6126   004C7C  0EC0               	movlw	low _motorR
  6127   004C7E  6E1C               	movwf	reverseDetect@mR^0,c
  6128   004C80  0E01               	movlw	high _motorR
  6129   004C82  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6130   004C84  ECF2  F022         	call	_reverseDetect	;wreg free
  6131                           
  6132                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  6133   004C88  0EF3               	movlw	low _motorL
  6134   004C8A  6E1A               	movwf	turnLeft45@mL^0,c
  6135   004C8C  0E00               	movlw	high _motorL
  6136   004C8E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6137   004C90  0EC0               	movlw	low _motorR
  6138   004C92  6E1C               	movwf	turnLeft45@mR^0,c
  6139   004C94  0E01               	movlw	high _motorR
  6140   004C96  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6141   004C98  EC30  F025         	call	_turnLeft45	;wreg free
  6142                           
  6143                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  6144   004C9C  0EF3               	movlw	low _motorL
  6145   004C9E  6E1A               	movwf	turnLeft45@mL^0,c
  6146   004CA0  0E00               	movlw	high _motorL
  6147   004CA2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  6148   004CA4  0EC0               	movlw	low _motorR
  6149   004CA6  6E1C               	movwf	turnLeft45@mR^0,c
  6150   004CA8  0E01               	movlw	high _motorR
  6151   004CAA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  6152   004CAC  EC30  F025         	call	_turnLeft45	;wreg free
  6153   004CB0  0012               	return		;funcret
  6154   004CB2                     __end_of_GreenMove:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _BlueMove *****************
  6158 ;; Defined at:
  6159 ;;		line 278 in file "dc_motor.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  6162 ;;		 -> motorL(9), 
  6163 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  6164 ;;		 -> motorR(9), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;Total ram usage:        4 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; Hardware stack levels required when called: 5
  6183 ;; This function calls:
  6184 ;;		_reverseDetect
  6185 ;;		_turnRight45
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;;		_go_Home
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text34
  6193   00446C                     __ptext34:
  6194                           	callstack 0
  6195   00446C                     _BlueMove:
  6196                           	callstack 24
  6197   00446C                     
  6198                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  6199   00446C  0EF3               	movlw	low _motorL
  6200   00446E  6E1A               	movwf	reverseDetect@mL^0,c
  6201   004470  0E00               	movlw	high _motorL
  6202   004472  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  6203   004474  0EC0               	movlw	low _motorR
  6204   004476  6E1C               	movwf	reverseDetect@mR^0,c
  6205   004478  0E01               	movlw	high _motorR
  6206   00447A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  6207   00447C  ECF2  F022         	call	_reverseDetect	;wreg free
  6208                           
  6209                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  6210   004480  0EF3               	movlw	low _motorL
  6211   004482  6E1A               	movwf	turnRight45@mL^0,c
  6212   004484  0E00               	movlw	high _motorL
  6213   004486  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6214   004488  0EC0               	movlw	low _motorR
  6215   00448A  6E1C               	movwf	turnRight45@mR^0,c
  6216   00448C  0E01               	movlw	high _motorR
  6217   00448E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6218   004490  EC09  F025         	call	_turnRight45	;wreg free
  6219                           
  6220                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  6221   004494  0EF3               	movlw	low _motorL
  6222   004496  6E1A               	movwf	turnRight45@mL^0,c
  6223   004498  0E00               	movlw	high _motorL
  6224   00449A  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6225   00449C  0EC0               	movlw	low _motorR
  6226   00449E  6E1C               	movwf	turnRight45@mR^0,c
  6227   0044A0  0E01               	movlw	high _motorR
  6228   0044A2  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6229   0044A4  EC09  F025         	call	_turnRight45	;wreg free
  6230                           
  6231                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  6232   0044A8  0EF3               	movlw	low _motorL
  6233   0044AA  6E1A               	movwf	turnRight45@mL^0,c
  6234   0044AC  0E00               	movlw	high _motorL
  6235   0044AE  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6236   0044B0  0EC0               	movlw	low _motorR
  6237   0044B2  6E1C               	movwf	turnRight45@mR^0,c
  6238   0044B4  0E01               	movlw	high _motorR
  6239   0044B6  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6240   0044B8  EC09  F025         	call	_turnRight45	;wreg free
  6241                           
  6242                           ;dc_motor.c: 284:     turnRight45(&motorL, &motorR);
  6243   0044BC  0EF3               	movlw	low _motorL
  6244   0044BE  6E1A               	movwf	turnRight45@mL^0,c
  6245   0044C0  0E00               	movlw	high _motorL
  6246   0044C2  6E1B               	movwf	(turnRight45@mL+1)^0,c
  6247   0044C4  0EC0               	movlw	low _motorR
  6248   0044C6  6E1C               	movwf	turnRight45@mR^0,c
  6249   0044C8  0E01               	movlw	high _motorR
  6250   0044CA  6E1D               	movwf	(turnRight45@mR+1)^0,c
  6251   0044CC  EC09  F025         	call	_turnRight45	;wreg free
  6252   0044D0  0012               	return		;funcret
  6253   0044D2                     __end_of_BlueMove:
  6254                           	callstack 0
  6255                           
  6256 ;; *************** function _getTMR0val *****************
  6257 ;; Defined at:
  6258 ;;		line 28 in file "timers.c"
  6259 ;; Parameters:    Size  Location     Type
  6260 ;;		None
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  moving          2    0[COMRAM] int 
  6263 ;;  temp            2    0        unsigned int 
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6277 ;;Total ram usage:        2 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 1
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_main
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text35
  6288   004DA2                     __ptext35:
  6289                           	callstack 0
  6290   004DA2                     _getTMR0val:
  6291                           	callstack 29
  6292   004DA2  50D3               	movf	211,w,c	;volatile
  6293   004DA4                     
  6294                           ;timers.c: 32:     int moving=TMR0H<<8;
  6295   004DA4  50D4               	movf	212,w,c	;volatile
  6296   004DA6  6E02               	movwf	(getTMR0val@moving+1)^0,c
  6297   004DA8  6A01               	clrf	getTMR0val@moving^0,c
  6298   004DAA                     
  6299                           ;timers.c: 33:     Time_forward[move_count]=moving;
  6300   004DAA  90D8               	bcf	status,0,c
  6301   004DAC  0100               	movlb	0	; () banked
  6302   004DAE  35F0               	rlcf	_move_count& (0+255),w,b	;volatile
  6303   004DB0  6ED9               	movwf	fsr2l,c
  6304   004DB2  35F1               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  6305   004DB4  6EDA               	movwf	fsr2h,c
  6306   004DB6  0E00               	movlw	low _Time_forward
  6307   004DB8  26D9               	addwf	fsr2l,f,c
  6308   004DBA  0E02               	movlw	high _Time_forward
  6309   004DBC  22DA               	addwfc	fsr2h,f,c
  6310   004DBE  C001  FFDE         	movff	getTMR0val@moving,postinc2
  6311   004DC2  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  6312   004DC6                     
  6313                           ; BSR set to: 0
  6314   004DC6  0012               	return		;funcret
  6315   004DC8                     __end_of_getTMR0val:
  6316                           	callstack 0
  6317                           
  6318 ;; *************** function _colour_rel *****************
  6319 ;; Defined at:
  6320 ;;		line 114 in file "color.c"
  6321 ;; Parameters:    Size  Location     Type
  6322 ;;  vals            2   49[COMRAM] PTR struct RGB
  6323 ;;		 -> vals(8), 
  6324 ;;  rel             2   51[COMRAM] PTR struct RGB_rel
  6325 ;;		 -> rel(12), 
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  B               4   73[COMRAM] float 
  6328 ;;  G               4   69[COMRAM] float 
  6329 ;;  R               4   65[COMRAM] float 
  6330 ;;  L               4   53[COMRAM] float 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;      Locals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;Total ram usage:       28 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 2
  6347 ;; This function calls:
  6348 ;;		___fladd
  6349 ;;		___fldiv
  6350 ;;		___xxtofl
  6351 ;; This function is called by:
  6352 ;;		_main
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text36
  6357   002AE4                     __ptext36:
  6358                           	callstack 0
  6359   002AE4                     _colour_rel:
  6360                           	callstack 28
  6361   002AE4                     
  6362                           ;color.c: 115:     float R = vals->R;
  6363   002AE4  C032  FFD9         	movff	colour_rel@vals,fsr2l
  6364   002AE8  C033  FFDA         	movff	colour_rel@vals+1,fsr2h
  6365   002AEC  CFDE F001          	movff	postinc2,___xxtofl@val
  6366   002AF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6367   002AF4  0E00               	movlw	0
  6368   002AF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6369   002AF8  0EFF               	movlw	-1
  6370   002AFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  6371   002AFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  6372   002AFE  0E01               	movlw	1
  6373   002B00  EC43  F01A         	call	___xxtofl
  6374   002B04  C001  F042         	movff	?___xxtofl,colour_rel@R
  6375   002B08  C002  F043         	movff	?___xxtofl+1,colour_rel@R+1
  6376   002B0C  C003  F044         	movff	?___xxtofl+2,colour_rel@R+2
  6377   002B10  C004  F045         	movff	?___xxtofl+3,colour_rel@R+3
  6378                           
  6379                           ;color.c: 116:     float G = vals->G;
  6380   002B14  EE20 F002          	lfsr	2,2
  6381   002B18  5032               	movf	colour_rel@vals^0,w,c
  6382   002B1A  26D9               	addwf	fsr2l,f,c
  6383   002B1C  5033               	movf	(colour_rel@vals+1)^0,w,c
  6384   002B1E  22DA               	addwfc	fsr2h,f,c
  6385   002B20  CFDE F001          	movff	postinc2,___xxtofl@val
  6386   002B24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6387   002B28  0E00               	movlw	0
  6388   002B2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6389   002B2C  0EFF               	movlw	-1
  6390   002B2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  6391   002B30  6E04               	movwf	(___xxtofl@val+3)^0,c
  6392   002B32  0E01               	movlw	1
  6393   002B34  EC43  F01A         	call	___xxtofl
  6394   002B38  C001  F046         	movff	?___xxtofl,colour_rel@G
  6395   002B3C  C002  F047         	movff	?___xxtofl+1,colour_rel@G+1
  6396   002B40  C003  F048         	movff	?___xxtofl+2,colour_rel@G+2
  6397   002B44  C004  F049         	movff	?___xxtofl+3,colour_rel@G+3
  6398                           
  6399                           ;color.c: 117:     float B = vals->B;
  6400   002B48  EE20 F004          	lfsr	2,4
  6401   002B4C  5032               	movf	colour_rel@vals^0,w,c
  6402   002B4E  26D9               	addwf	fsr2l,f,c
  6403   002B50  5033               	movf	(colour_rel@vals+1)^0,w,c
  6404   002B52  22DA               	addwfc	fsr2h,f,c
  6405   002B54  CFDE F001          	movff	postinc2,___xxtofl@val
  6406   002B58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6407   002B5C  0E00               	movlw	0
  6408   002B5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6409   002B60  0EFF               	movlw	-1
  6410   002B62  6E03               	movwf	(___xxtofl@val+2)^0,c
  6411   002B64  6E04               	movwf	(___xxtofl@val+3)^0,c
  6412   002B66  0E01               	movlw	1
  6413   002B68  EC43  F01A         	call	___xxtofl
  6414   002B6C  C001  F04A         	movff	?___xxtofl,colour_rel@B
  6415   002B70  C002  F04B         	movff	?___xxtofl+1,colour_rel@B+1
  6416   002B74  C003  F04C         	movff	?___xxtofl+2,colour_rel@B+2
  6417   002B78  C004  F04D         	movff	?___xxtofl+3,colour_rel@B+3
  6418                           
  6419                           ;color.c: 118:     float L = vals->L;
  6420   002B7C  EE20 F006          	lfsr	2,6
  6421   002B80  5032               	movf	colour_rel@vals^0,w,c
  6422   002B82  26D9               	addwf	fsr2l,f,c
  6423   002B84  5033               	movf	(colour_rel@vals+1)^0,w,c
  6424   002B86  22DA               	addwfc	fsr2h,f,c
  6425   002B88  CFDE F001          	movff	postinc2,___xxtofl@val
  6426   002B8C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6427   002B90  0E00               	movlw	0
  6428   002B92  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6429   002B94  0EFF               	movlw	-1
  6430   002B96  6E03               	movwf	(___xxtofl@val+2)^0,c
  6431   002B98  6E04               	movwf	(___xxtofl@val+3)^0,c
  6432   002B9A  0E01               	movlw	1
  6433   002B9C  EC43  F01A         	call	___xxtofl
  6434   002BA0  C001  F036         	movff	?___xxtofl,colour_rel@L
  6435   002BA4  C002  F037         	movff	?___xxtofl+1,colour_rel@L+1
  6436   002BA8  C003  F038         	movff	?___xxtofl+2,colour_rel@L+2
  6437   002BAC  C004  F039         	movff	?___xxtofl+3,colour_rel@L+3
  6438   002BB0                     
  6439                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6440   002BB0  C046  F005         	movff	colour_rel@G,___fladd@a
  6441   002BB4  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6442   002BB8  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6443   002BBC  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6444   002BC0  C042  F001         	movff	colour_rel@R,___fladd@b
  6445   002BC4  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6446   002BC8  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6447   002BCC  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6448   002BD0  EC30  F00F         	call	___fladd	;wreg free
  6449   002BD4  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6450   002BD8  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6451   002BDC  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6452   002BE0  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6453   002BE4                     
  6454                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6455   002BE4  C04A  F005         	movff	colour_rel@B,___fladd@a
  6456   002BE8  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6457   002BEC  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6458   002BF0  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6459   002BF4  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6460   002BF8  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6461   002BFC  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6462   002C00  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6463   002C04  EC30  F00F         	call	___fladd	;wreg free
  6464   002C08  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6465   002C0C  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6466   002C10  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6467   002C14  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6468                           
  6469                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  6470   002C18  C042  F019         	movff	colour_rel@R,___fldiv@b
  6471   002C1C  C043  F01A         	movff	colour_rel@R+1,___fldiv@b+1
  6472   002C20  C044  F01B         	movff	colour_rel@R+2,___fldiv@b+2
  6473   002C24  C045  F01C         	movff	colour_rel@R+3,___fldiv@b+3
  6474   002C28  C036  F005         	movff	colour_rel@L,___fladd@a
  6475   002C2C  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6476   002C30  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6477   002C34  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6478   002C38  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6479   002C3C  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6480   002C40  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6481   002C44  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6482   002C48  EC30  F00F         	call	___fladd	;wreg free
  6483   002C4C  C001  F01D         	movff	?___fladd,___fldiv@a
  6484   002C50  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6485   002C54  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6486   002C58  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6487   002C5C  ECA5  F013         	call	___fldiv	;wreg free
  6488   002C60  C034  FFD9         	movff	colour_rel@rel,fsr2l
  6489   002C64  C035  FFDA         	movff	colour_rel@rel+1,fsr2h
  6490   002C68  C019  FFDE         	movff	?___fldiv,postinc2
  6491   002C6C  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6492   002C70  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6493   002C74  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6494   002C78                     
  6495                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6496   002C78  C046  F005         	movff	colour_rel@G,___fladd@a
  6497   002C7C  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6498   002C80  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6499   002C84  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6500   002C88  C042  F001         	movff	colour_rel@R,___fladd@b
  6501   002C8C  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6502   002C90  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6503   002C94  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6504   002C98  EC30  F00F         	call	___fladd	;wreg free
  6505   002C9C  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6506   002CA0  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6507   002CA4  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6508   002CA8  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6509   002CAC                     
  6510                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6511   002CAC  C04A  F005         	movff	colour_rel@B,___fladd@a
  6512   002CB0  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6513   002CB4  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6514   002CB8  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6515   002CBC  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6516   002CC0  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6517   002CC4  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6518   002CC8  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6519   002CCC  EC30  F00F         	call	___fladd	;wreg free
  6520   002CD0  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6521   002CD4  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6522   002CD8  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6523   002CDC  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6524                           
  6525                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  6526   002CE0  C04A  F019         	movff	colour_rel@B,___fldiv@b
  6527   002CE4  C04B  F01A         	movff	colour_rel@B+1,___fldiv@b+1
  6528   002CE8  C04C  F01B         	movff	colour_rel@B+2,___fldiv@b+2
  6529   002CEC  C04D  F01C         	movff	colour_rel@B+3,___fldiv@b+3
  6530   002CF0  C036  F005         	movff	colour_rel@L,___fladd@a
  6531   002CF4  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6532   002CF8  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6533   002CFC  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6534   002D00  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6535   002D04  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6536   002D08  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6537   002D0C  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6538   002D10  EC30  F00F         	call	___fladd	;wreg free
  6539   002D14  C001  F01D         	movff	?___fladd,___fldiv@a
  6540   002D18  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6541   002D1C  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6542   002D20  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6543   002D24  ECA5  F013         	call	___fldiv	;wreg free
  6544   002D28  EE20 F008          	lfsr	2,8
  6545   002D2C  5034               	movf	colour_rel@rel^0,w,c
  6546   002D2E  26D9               	addwf	fsr2l,f,c
  6547   002D30  5035               	movf	(colour_rel@rel+1)^0,w,c
  6548   002D32  22DA               	addwfc	fsr2h,f,c
  6549   002D34  C019  FFDE         	movff	?___fldiv,postinc2
  6550   002D38  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6551   002D3C  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6552   002D40  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6553   002D44                     
  6554                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6555   002D44  C046  F005         	movff	colour_rel@G,___fladd@a
  6556   002D48  C047  F006         	movff	colour_rel@G+1,___fladd@a+1
  6557   002D4C  C048  F007         	movff	colour_rel@G+2,___fladd@a+2
  6558   002D50  C049  F008         	movff	colour_rel@G+3,___fladd@a+3
  6559   002D54  C042  F001         	movff	colour_rel@R,___fladd@b
  6560   002D58  C043  F002         	movff	colour_rel@R+1,___fladd@b+1
  6561   002D5C  C044  F003         	movff	colour_rel@R+2,___fladd@b+2
  6562   002D60  C045  F004         	movff	colour_rel@R+3,___fladd@b+3
  6563   002D64  EC30  F00F         	call	___fladd	;wreg free
  6564   002D68  C001  F03A         	movff	?___fladd,_colour_rel$3047
  6565   002D6C  C002  F03B         	movff	?___fladd+1,_colour_rel$3047+1
  6566   002D70  C003  F03C         	movff	?___fladd+2,_colour_rel$3047+2
  6567   002D74  C004  F03D         	movff	?___fladd+3,_colour_rel$3047+3
  6568   002D78                     
  6569                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6570   002D78  C04A  F005         	movff	colour_rel@B,___fladd@a
  6571   002D7C  C04B  F006         	movff	colour_rel@B+1,___fladd@a+1
  6572   002D80  C04C  F007         	movff	colour_rel@B+2,___fladd@a+2
  6573   002D84  C04D  F008         	movff	colour_rel@B+3,___fladd@a+3
  6574   002D88  C03A  F001         	movff	_colour_rel$3047,___fladd@b
  6575   002D8C  C03B  F002         	movff	_colour_rel$3047+1,___fladd@b+1
  6576   002D90  C03C  F003         	movff	_colour_rel$3047+2,___fladd@b+2
  6577   002D94  C03D  F004         	movff	_colour_rel$3047+3,___fladd@b+3
  6578   002D98  EC30  F00F         	call	___fladd	;wreg free
  6579   002D9C  C001  F03E         	movff	?___fladd,_colour_rel$3048
  6580   002DA0  C002  F03F         	movff	?___fladd+1,_colour_rel$3048+1
  6581   002DA4  C003  F040         	movff	?___fladd+2,_colour_rel$3048+2
  6582   002DA8  C004  F041         	movff	?___fladd+3,_colour_rel$3048+3
  6583                           
  6584                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  6585   002DAC  C046  F019         	movff	colour_rel@G,___fldiv@b
  6586   002DB0  C047  F01A         	movff	colour_rel@G+1,___fldiv@b+1
  6587   002DB4  C048  F01B         	movff	colour_rel@G+2,___fldiv@b+2
  6588   002DB8  C049  F01C         	movff	colour_rel@G+3,___fldiv@b+3
  6589   002DBC  C036  F005         	movff	colour_rel@L,___fladd@a
  6590   002DC0  C037  F006         	movff	colour_rel@L+1,___fladd@a+1
  6591   002DC4  C038  F007         	movff	colour_rel@L+2,___fladd@a+2
  6592   002DC8  C039  F008         	movff	colour_rel@L+3,___fladd@a+3
  6593   002DCC  C03E  F001         	movff	_colour_rel$3048,___fladd@b
  6594   002DD0  C03F  F002         	movff	_colour_rel$3048+1,___fladd@b+1
  6595   002DD4  C040  F003         	movff	_colour_rel$3048+2,___fladd@b+2
  6596   002DD8  C041  F004         	movff	_colour_rel$3048+3,___fladd@b+3
  6597   002DDC  EC30  F00F         	call	___fladd	;wreg free
  6598   002DE0  C001  F01D         	movff	?___fladd,___fldiv@a
  6599   002DE4  C002  F01E         	movff	?___fladd+1,___fldiv@a+1
  6600   002DE8  C003  F01F         	movff	?___fladd+2,___fldiv@a+2
  6601   002DEC  C004  F020         	movff	?___fladd+3,___fldiv@a+3
  6602   002DF0  ECA5  F013         	call	___fldiv	;wreg free
  6603   002DF4  EE20 F004          	lfsr	2,4
  6604   002DF8  5034               	movf	colour_rel@rel^0,w,c
  6605   002DFA  26D9               	addwf	fsr2l,f,c
  6606   002DFC  5035               	movf	(colour_rel@rel+1)^0,w,c
  6607   002DFE  22DA               	addwfc	fsr2h,f,c
  6608   002E00  C019  FFDE         	movff	?___fldiv,postinc2
  6609   002E04  C01A  FFDE         	movff	?___fldiv+1,postinc2
  6610   002E08  C01B  FFDE         	movff	?___fldiv+2,postinc2
  6611   002E0C  C01C  FFDE         	movff	?___fldiv+3,postinc2
  6612   002E10  0012               	return		;funcret
  6613   002E12                     __end_of_colour_rel:
  6614                           	callstack 0
  6615                           
  6616 ;; *************** function _color_click_init *****************
  6617 ;; Defined at:
  6618 ;;		line 7 in file "color.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      void 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6636 ;;Total ram usage:        1 bytes
  6637 ;; Hardware stack levels used: 1
  6638 ;; Hardware stack levels required when called: 4
  6639 ;; This function calls:
  6640 ;;		_I2C_2_Master_Init
  6641 ;;		_color_writetoaddr
  6642 ;; This function is called by:
  6643 ;;		_main
  6644 ;; This function uses a non-reentrant model
  6645 ;;
  6646                           
  6647                           	psect	text37
  6648   00478E                     __ptext37:
  6649                           	callstack 0
  6650   00478E                     _color_click_init:
  6651                           	callstack 26
  6652   00478E                     
  6653                           ;color.c: 10:     I2C_2_Master_Init();
  6654   00478E  ECA8  F026         	call	_I2C_2_Master_Init	;wreg free
  6655   004792                     
  6656                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  6657   004792  0E01               	movlw	1
  6658   004794  6E03               	movwf	color_writetoaddr@value^0,c
  6659   004796  0E00               	movlw	0
  6660   004798  ECF7  F026         	call	_color_writetoaddr
  6661   00479C                     
  6662                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6663   00479C  0E3F               	movlw	63
  6664   00479E  6E05               	movwf	??_color_click_init^0,c
  6665   0047A0  0E55               	movlw	85
  6666   0047A2                     u5077:
  6667   0047A2  2EE8               	decfsz	wreg,f,c
  6668   0047A4  D7FE               	bra	u5077
  6669   0047A6  2E05               	decfsz	??_color_click_init^0,f,c
  6670   0047A8  D7FC               	bra	u5077
  6671   0047AA  F000               	nop	
  6672   0047AC                     
  6673                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  6674   0047AC  0E03               	movlw	3
  6675   0047AE  6E03               	movwf	color_writetoaddr@value^0,c
  6676   0047B0  0E00               	movlw	0
  6677   0047B2  ECF7  F026         	call	_color_writetoaddr
  6678   0047B6                     
  6679                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  6680   0047B6  0ED5               	movlw	213
  6681   0047B8  6E03               	movwf	color_writetoaddr@value^0,c
  6682   0047BA  0E01               	movlw	1
  6683   0047BC  ECF7  F026         	call	_color_writetoaddr
  6684   0047C0                     
  6685                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  6686   0047C0  0E00               	movlw	0
  6687   0047C2  6E03               	movwf	color_writetoaddr@value^0,c
  6688   0047C4  0E0F               	movlw	15
  6689   0047C6  ECF7  F026         	call	_color_writetoaddr
  6690   0047CA                     
  6691                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  6692   0047CA  9287               	bcf	135,1,c	;volatile
  6693   0047CC                     
  6694                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  6695   0047CC  9881               	bcf	129,4,c	;volatile
  6696   0047CE                     
  6697                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  6698   0047CE  9E86               	bcf	134,7,c	;volatile
  6699   0047D0                     
  6700                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  6701   0047D0  9684               	bcf	132,3,c	;volatile
  6702   0047D2                     
  6703                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  6704   0047D2  9884               	bcf	132,4,c	;volatile
  6705   0047D4                     
  6706                           ;color.c: 28:     LATGbits.LATG1=0;
  6707   0047D4  927F               	bcf	127,1,c	;volatile
  6708   0047D6                     
  6709                           ;color.c: 29:     LATFbits.LATF7=0;
  6710   0047D6  9E7E               	bcf	126,7,c	;volatile
  6711   0047D8                     
  6712                           ;color.c: 30:     LATAbits.LATA4=0;
  6713   0047D8  9879               	bcf	121,4,c	;volatile
  6714   0047DA                     
  6715                           ;color.c: 32:     LATDbits.LATD3=0;
  6716   0047DA  967C               	bcf	124,3,c	;volatile
  6717   0047DC                     
  6718                           ;color.c: 33:     LATDbits.LATD4=0;
  6719   0047DC  987C               	bcf	124,4,c	;volatile
  6720   0047DE  0012               	return		;funcret
  6721   0047E0                     __end_of_color_click_init:
  6722                           	callstack 0
  6723                           
  6724 ;; *************** function _color_writetoaddr *****************
  6725 ;; Defined at:
  6726 ;;		line 41 in file "color.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  address         1    wreg     unsigned char 
  6729 ;;  value           1    2[COMRAM] unsigned char 
  6730 ;; Auto vars:     Size  Location     Type
  6731 ;;  address         1    3[COMRAM] unsigned char 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  1    wreg      void 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0, cstack
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6741 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6745 ;;Total ram usage:        2 bytes
  6746 ;; Hardware stack levels used: 1
  6747 ;; Hardware stack levels required when called: 3
  6748 ;; This function calls:
  6749 ;;		_I2C_2_Master_Start
  6750 ;;		_I2C_2_Master_Stop
  6751 ;;		_I2C_2_Master_Write
  6752 ;; This function is called by:
  6753 ;;		_color_click_init
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text38
  6758   004DEE                     __ptext38:
  6759                           	callstack 0
  6760   004DEE                     _color_writetoaddr:
  6761                           	callstack 26
  6762                           
  6763                           ;incstack = 0
  6764                           ;color_writetoaddr@address stored from wreg
  6765   004DEE  6E04               	movwf	color_writetoaddr@address^0,c
  6766   004DF0                     
  6767                           ;color.c: 42:     I2C_2_Master_Start();
  6768   004DF0  EC42  F027         	call	_I2C_2_Master_Start	;wreg free
  6769                           
  6770                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  6771   004DF4  0E52               	movlw	82
  6772   004DF6  EC32  F027         	call	_I2C_2_Master_Write
  6773                           
  6774                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  6775   004DFA  5004               	movf	color_writetoaddr@address^0,w,c
  6776   004DFC  0980               	iorlw	128
  6777   004DFE  EC32  F027         	call	_I2C_2_Master_Write
  6778                           
  6779                           ;color.c: 45:     I2C_2_Master_Write(value);
  6780   004E02  5003               	movf	color_writetoaddr@value^0,w,c
  6781   004E04  EC32  F027         	call	_I2C_2_Master_Write
  6782                           
  6783                           ;color.c: 46:     I2C_2_Master_Stop();
  6784   004E08  EC3D  F027         	call	_I2C_2_Master_Stop	;wreg free
  6785   004E0C  0012               	return		;funcret
  6786   004E0E                     __end_of_color_writetoaddr:
  6787                           	callstack 0
  6788                           
  6789 ;; *************** function _I2C_2_Master_Write *****************
  6790 ;; Defined at:
  6791 ;;		line 45 in file "i2c.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  data_byte       1    wreg     unsigned char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  data_byte       1    1[COMRAM] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;                  1    wreg      void 
  6798 ;; Registers used:
  6799 ;;		wreg, status,2, status,0, cstack
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;Total ram usage:        1 bytes
  6810 ;; Hardware stack levels used: 1
  6811 ;; Hardware stack levels required when called: 2
  6812 ;; This function calls:
  6813 ;;		_I2C_2_Master_Idle
  6814 ;; This function is called by:
  6815 ;;		_color_writetoaddr
  6816 ;;		_color_read_lum
  6817 ;;		_color_read_Red
  6818 ;;		_color_read_Green
  6819 ;;		_color_read_Blue
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text39
  6824   004E64                     __ptext39:
  6825                           	callstack 0
  6826   004E64                     _I2C_2_Master_Write:
  6827                           	callstack 26
  6828                           
  6829                           ;incstack = 0
  6830                           ;I2C_2_Master_Write@data_byte stored from wreg
  6831   004E64  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  6832   004E66                     
  6833                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6834   004E66  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  6835   004E6A                     
  6836                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6837   004E6A  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6838   004E6E  0012               	return		;funcret
  6839   004E70                     __end_of_I2C_2_Master_Write:
  6840                           	callstack 0
  6841                           
  6842 ;; *************** function _I2C_2_Master_Stop *****************
  6843 ;; Defined at:
  6844 ;;		line 39 in file "i2c.c"
  6845 ;; Parameters:    Size  Location     Type
  6846 ;;		None
  6847 ;; Auto vars:     Size  Location     Type
  6848 ;;		None
  6849 ;; Return value:  Size  Location     Type
  6850 ;;                  1    wreg      void 
  6851 ;; Registers used:
  6852 ;;		wreg, status,2, status,0, cstack
  6853 ;; Tracked objects:
  6854 ;;		On entry : 0/0
  6855 ;;		On exit  : 0/0
  6856 ;;		Unchanged: 0/0
  6857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6862 ;;Total ram usage:        0 bytes
  6863 ;; Hardware stack levels used: 1
  6864 ;; Hardware stack levels required when called: 2
  6865 ;; This function calls:
  6866 ;;		_I2C_2_Master_Idle
  6867 ;; This function is called by:
  6868 ;;		_color_writetoaddr
  6869 ;;		_color_read_lum
  6870 ;;		_color_read_Red
  6871 ;;		_color_read_Green
  6872 ;;		_color_read_Blue
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text40
  6877   004E7A                     __ptext40:
  6878                           	callstack 0
  6879   004E7A                     _I2C_2_Master_Stop:
  6880                           	callstack 26
  6881   004E7A                     
  6882                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6883   004E7A  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  6884   004E7E                     
  6885                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6886   004E7E  010E               	movlb	14	; () banked
  6887   004E80  85DA               	bsf	218,2,b	;volatile
  6888   004E82                     
  6889                           ; BSR set to: 14
  6890   004E82  0012               	return		;funcret
  6891   004E84                     __end_of_I2C_2_Master_Stop:
  6892                           	callstack 0
  6893                           
  6894 ;; *************** function _I2C_2_Master_Start *****************
  6895 ;; Defined at:
  6896 ;;		line 27 in file "i2c.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;		None
  6899 ;; Auto vars:     Size  Location     Type
  6900 ;;		None
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  1    wreg      void 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;Total ram usage:        0 bytes
  6915 ;; Hardware stack levels used: 1
  6916 ;; Hardware stack levels required when called: 2
  6917 ;; This function calls:
  6918 ;;		_I2C_2_Master_Idle
  6919 ;; This function is called by:
  6920 ;;		_color_writetoaddr
  6921 ;;		_color_read_lum
  6922 ;;		_color_read_Red
  6923 ;;		_color_read_Green
  6924 ;;		_color_read_Blue
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text41
  6929   004E84                     __ptext41:
  6930                           	callstack 0
  6931   004E84                     _I2C_2_Master_Start:
  6932                           	callstack 26
  6933   004E84                     
  6934                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6935   004E84  ECBD  F026         	call	_I2C_2_Master_Idle	;wreg free
  6936   004E88                     
  6937                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6938   004E88  010E               	movlb	14	; () banked
  6939   004E8A  81DA               	bsf	218,0,b	;volatile
  6940   004E8C                     
  6941                           ; BSR set to: 14
  6942   004E8C  0012               	return		;funcret
  6943   004E8E                     __end_of_I2C_2_Master_Start:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function _I2C_2_Master_Idle *****************
  6947 ;; Defined at:
  6948 ;;		line 22 in file "i2c.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 1
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_I2C_2_Master_Start
  6973 ;;		_I2C_2_Master_RepStart
  6974 ;;		_I2C_2_Master_Stop
  6975 ;;		_I2C_2_Master_Write
  6976 ;;		_I2C_2_Master_Read
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text42
  6981   004D7A                     __ptext42:
  6982                           	callstack 0
  6983   004D7A                     _I2C_2_Master_Idle:
  6984                           	callstack 26
  6985   004D7A                     l143:
  6986   004D7A  010E               	movlb	14	; () banked
  6987   004D7C  B5D8               	btfsc	216,2,b	;volatile
  6988   004D7E  EFC3  F026         	goto	u2731
  6989   004D82  EFC5  F026         	goto	u2730
  6990   004D86                     u2731:
  6991   004D86  EFBD  F026         	goto	l143
  6992   004D8A                     u2730:
  6993   004D8A                     
  6994                           ; BSR set to: 14
  6995   004D8A  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6996   004D8E  0E1F               	movlw	31
  6997   004D90  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  6998   004D92  A4D8               	btfss	status,2,c
  6999   004D94  EFCE  F026         	goto	u2741
  7000   004D98  EFD0  F026         	goto	u2740
  7001   004D9C                     u2741:
  7002   004D9C  EFBD  F026         	goto	l143
  7003   004DA0                     u2740:
  7004   004DA0                     
  7005                           ; BSR set to: 14
  7006   004DA0  0012               	return		;funcret
  7007   004DA2                     __end_of_I2C_2_Master_Idle:
  7008                           	callstack 0
  7009                           
  7010 ;; *************** function _I2C_2_Master_Init *****************
  7011 ;; Defined at:
  7012 ;;		line 4 in file "i2c.c"
  7013 ;; Parameters:    Size  Location     Type
  7014 ;;		None
  7015 ;; Auto vars:     Size  Location     Type
  7016 ;;		None
  7017 ;; Return value:  Size  Location     Type
  7018 ;;                  1    wreg      void 
  7019 ;; Registers used:
  7020 ;;		wreg, status,2
  7021 ;; Tracked objects:
  7022 ;;		On entry : 0/0
  7023 ;;		On exit  : 0/0
  7024 ;;		Unchanged: 0/0
  7025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;Total ram usage:        0 bytes
  7031 ;; Hardware stack levels used: 1
  7032 ;; Hardware stack levels required when called: 1
  7033 ;; This function calls:
  7034 ;;		Nothing
  7035 ;; This function is called by:
  7036 ;;		_color_click_init
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text43
  7042   004D50                     __ptext43:
  7043                           	callstack 0
  7044   004D50                     _I2C_2_Master_Init:
  7045                           	callstack 28
  7046   004D50                     
  7047                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7048   004D50  010E               	movlb	14	; () banked
  7049   004D52  51D9               	movf	217,w,b	;volatile
  7050   004D54  0BF0               	andlw	-16
  7051   004D56  0908               	iorlw	8
  7052   004D58  6FD9               	movwf	217,b	;volatile
  7053   004D5A                     
  7054                           ; BSR set to: 14
  7055                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7056   004D5A  8BD9               	bsf	217,5,b	;volatile
  7057                           
  7058                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7059   004D5C  0E9F               	movlw	159
  7060   004D5E  6FD6               	movwf	214,b	;volatile
  7061   004D60                     
  7062                           ; BSR set to: 14
  7063                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7064   004D60  8A84               	bsf	132,5,c	;volatile
  7065   004D62                     
  7066                           ; BSR set to: 14
  7067                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7068   004D62  8C84               	bsf	132,6,c	;volatile
  7069   004D64                     
  7070                           ; BSR set to: 14
  7071                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7072   004D64  9BA7               	bcf	167,5,b	;volatile
  7073   004D66                     
  7074                           ; BSR set to: 14
  7075                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7076   004D66  9DA7               	bcf	167,6,b	;volatile
  7077                           
  7078                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7079   004D68  0E1D               	movlw	29
  7080   004D6A  6F1D               	movwf	29,b	;volatile
  7081                           
  7082                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7083   004D6C  0E1E               	movlw	30
  7084   004D6E  6F1C               	movwf	28,b	;volatile
  7085                           
  7086                           ;i2c.c: 18:   RD5PPS=0x1C;
  7087   004D70  0E1C               	movlw	28
  7088   004D72  6F6F               	movwf	111,b	;volatile
  7089                           
  7090                           ;i2c.c: 19:   RD6PPS=0x1B;
  7091   004D74  0E1B               	movlw	27
  7092   004D76  6F70               	movwf	112,b	;volatile
  7093   004D78                     
  7094                           ; BSR set to: 14
  7095   004D78  0012               	return		;funcret
  7096   004D7A                     __end_of_I2C_2_Master_Init:
  7097                           	callstack 0
  7098                           
  7099 ;; *************** function _YellowMove *****************
  7100 ;; Defined at:
  7101 ;;		line 288 in file "dc_motor.c"
  7102 ;; Parameters:    Size  Location     Type
  7103 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7104 ;;		 -> motorL(9), 
  7105 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7106 ;;		 -> motorR(9), 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  1    wreg      void 
  7111 ;; Registers used:
  7112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;Total ram usage:        4 bytes
  7123 ;; Hardware stack levels used: 1
  7124 ;; Hardware stack levels required when called: 5
  7125 ;; This function calls:
  7126 ;;		_reverseDetect
  7127 ;;		_reverseOneBlock
  7128 ;;		_turnRight45
  7129 ;; This function is called by:
  7130 ;;		_main
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text44
  7135   0047E0                     __ptext44:
  7136                           	callstack 0
  7137   0047E0                     _YellowMove:
  7138                           	callstack 25
  7139   0047E0                     
  7140                           ;dc_motor.c: 289:     reverseDetect(&motorL, &motorR);
  7141   0047E0  0EF3               	movlw	low _motorL
  7142   0047E2  6E1A               	movwf	reverseDetect@mL^0,c
  7143   0047E4  0E00               	movlw	high _motorL
  7144   0047E6  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7145   0047E8  0EC0               	movlw	low _motorR
  7146   0047EA  6E1C               	movwf	reverseDetect@mR^0,c
  7147   0047EC  0E01               	movlw	high _motorR
  7148   0047EE  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7149   0047F0  ECF2  F022         	call	_reverseDetect	;wreg free
  7150                           
  7151                           ;dc_motor.c: 291:     reverseOneBlock(&motorL, &motorR);
  7152   0047F4  0EF3               	movlw	low _motorL
  7153   0047F6  6E1A               	movwf	reverseOneBlock@mL^0,c
  7154   0047F8  0E00               	movlw	high _motorL
  7155   0047FA  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7156   0047FC  0EC0               	movlw	low _motorR
  7157   0047FE  6E1C               	movwf	reverseOneBlock@mR^0,c
  7158   004800  0E01               	movlw	high _motorR
  7159   004802  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7160   004804  ECC5  F022         	call	_reverseOneBlock	;wreg free
  7161                           
  7162                           ;dc_motor.c: 293:     turnRight45(&motorL, &motorR);
  7163   004808  0EF3               	movlw	low _motorL
  7164   00480A  6E1A               	movwf	turnRight45@mL^0,c
  7165   00480C  0E00               	movlw	high _motorL
  7166   00480E  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7167   004810  0EC0               	movlw	low _motorR
  7168   004812  6E1C               	movwf	turnRight45@mR^0,c
  7169   004814  0E01               	movlw	high _motorR
  7170   004816  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7171   004818  EC09  F025         	call	_turnRight45	;wreg free
  7172                           
  7173                           ;dc_motor.c: 294:     turnRight45(&motorL, &motorR);
  7174   00481C  0EF3               	movlw	low _motorL
  7175   00481E  6E1A               	movwf	turnRight45@mL^0,c
  7176   004820  0E00               	movlw	high _motorL
  7177   004822  6E1B               	movwf	(turnRight45@mL+1)^0,c
  7178   004824  0EC0               	movlw	low _motorR
  7179   004826  6E1C               	movwf	turnRight45@mR^0,c
  7180   004828  0E01               	movlw	high _motorR
  7181   00482A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  7182   00482C  EC09  F025         	call	_turnRight45	;wreg free
  7183   004830  0012               	return		;funcret
  7184   004832                     __end_of_YellowMove:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _turnRight45 *****************
  7188 ;; Defined at:
  7189 ;;		line 211 in file "dc_motor.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7192 ;;		 -> motorL(9), 
  7193 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7194 ;;		 -> motorR(9), 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      void 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7209 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;Total ram usage:        6 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 4
  7213 ;; This function calls:
  7214 ;;		_TurnDelay
  7215 ;;		_stop
  7216 ;;		_turnRight
  7217 ;; This function is called by:
  7218 ;;		_RedMove
  7219 ;;		_BlueMove
  7220 ;;		_YellowMove
  7221 ;;		_OrangeMove
  7222 ;;		_ReversePink
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text45
  7227   004A12                     __ptext45:
  7228                           	callstack 0
  7229   004A12                     _turnRight45:
  7230                           	callstack 24
  7231   004A12                     
  7232                           ;dc_motor.c: 212:     turnRight(mL,mR);
  7233   004A12  C01A  F014         	movff	turnRight45@mL,turnRight@mL
  7234   004A16  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  7235   004A1A  C01C  F016         	movff	turnRight45@mR,turnRight@mR
  7236   004A1E  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  7237   004A22  EC81  F01F         	call	_turnRight	;wreg free
  7238   004A26                     
  7239                           ;dc_motor.c: 213:     TurnDelay(Turn45Delay);
  7240   004A26  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7241   004A2A  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7242   004A2E  EC75  F026         	call	_TurnDelay	;wreg free
  7243   004A32                     
  7244                           ;dc_motor.c: 214:     stop(&motorL, &motorR);
  7245   004A32  0EF3               	movlw	low _motorL
  7246   004A34  6E14               	movwf	stop@mL^0,c
  7247   004A36  0E00               	movlw	high _motorL
  7248   004A38  6E15               	movwf	(stop@mL+1)^0,c
  7249   004A3A  0EC0               	movlw	low _motorR
  7250   004A3C  6E16               	movwf	stop@mR^0,c
  7251   004A3E  0E01               	movlw	high _motorR
  7252   004A40  6E17               	movwf	(stop@mR+1)^0,c
  7253   004A42  EC42  F021         	call	_stop	;wreg free
  7254   004A46                     
  7255                           ;dc_motor.c: 215:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7256   004A46  0E52               	movlw	82
  7257   004A48  6E1F               	movwf	(??_turnRight45+1)^0,c
  7258   004A4A  0E2B               	movlw	43
  7259   004A4C  6E1E               	movwf	??_turnRight45^0,c
  7260   004A4E  0E00               	movlw	0
  7261   004A50                     u5087:
  7262   004A50  2EE8               	decfsz	wreg,f,c
  7263   004A52  D7FE               	bra	u5087
  7264   004A54  2E1E               	decfsz	??_turnRight45^0,f,c
  7265   004A56  D7FC               	bra	u5087
  7266   004A58  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
  7267   004A5A  D7FA               	bra	u5087
  7268   004A5C  D000               	nop2	
  7269   004A5E  0012               	return		;funcret
  7270   004A60                     __end_of_turnRight45:
  7271                           	callstack 0
  7272                           
  7273 ;; *************** function _turnRight *****************
  7274 ;; Defined at:
  7275 ;;		line 129 in file "dc_motor.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7278 ;;		 -> motorL(9), 
  7279 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7280 ;;		 -> motorR(9), 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;		None
  7283 ;; Return value:  Size  Location     Type
  7284 ;;                  1    wreg      void 
  7285 ;; Registers used:
  7286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7287 ;; Tracked objects:
  7288 ;;		On entry : 0/0
  7289 ;;		On exit  : 0/0
  7290 ;;		Unchanged: 0/0
  7291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;Total ram usage:        6 bytes
  7297 ;; Hardware stack levels used: 1
  7298 ;; Hardware stack levels required when called: 3
  7299 ;; This function calls:
  7300 ;;		_setMotorPWM
  7301 ;; This function is called by:
  7302 ;;		_turnRight45
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           	psect	text46
  7307   003F02                     __ptext46:
  7308                           	callstack 0
  7309   003F02                     _turnRight:
  7310                           	callstack 24
  7311   003F02                     
  7312                           ;dc_motor.c: 129: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          0: {;dc_motor.c: 131:     mL->direction =1;
  7313   003F02  EE20 F001          	lfsr	2,1
  7314   003F06  5014               	movf	turnRight@mL^0,w,c
  7315   003F08  26D9               	addwf	fsr2l,f,c
  7316   003F0A  5015               	movf	(turnRight@mL+1)^0,w,c
  7317   003F0C  22DA               	addwfc	fsr2h,f,c
  7318   003F0E  0E01               	movlw	1
  7319   003F10  6EDF               	movwf	indf2,c
  7320                           
  7321                           ;dc_motor.c: 132:     mR->direction =0;
  7322   003F12  EE20 F001          	lfsr	2,1
  7323   003F16  5016               	movf	turnRight@mR^0,w,c
  7324   003F18  26D9               	addwf	fsr2l,f,c
  7325   003F1A  5017               	movf	(turnRight@mR+1)^0,w,c
  7326   003F1C  22DA               	addwfc	fsr2h,f,c
  7327   003F1E  0E00               	movlw	0
  7328   003F20  6EDF               	movwf	indf2,c
  7329                           
  7330                           ;dc_motor.c: 134:     while(mL->power<power && mR->power<power){
  7331   003F22  EFB7  F01F         	goto	l3537
  7332   003F26                     l3529:
  7333                           
  7334                           ;dc_motor.c: 136:         mL->power+=10;
  7335   003F26  C014  FFD9         	movff	turnRight@mL,fsr2l
  7336   003F2A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7337   003F2E  0E0A               	movlw	10
  7338   003F30  26DF               	addwf	indf2,f,c
  7339                           
  7340                           ;dc_motor.c: 137:         mR->power+=10;
  7341   003F32  C016  FFD9         	movff	turnRight@mR,fsr2l
  7342   003F36  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7343   003F3A  0E0A               	movlw	10
  7344   003F3C  26DF               	addwf	indf2,f,c
  7345   003F3E                     
  7346                           ;dc_motor.c: 139:         setMotorPWM(mL);
  7347   003F3E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  7348   003F42  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  7349   003F46  ECE1  F01B         	call	_setMotorPWM	;wreg free
  7350   003F4A                     
  7351                           ;dc_motor.c: 140:         setMotorPWM(mR);
  7352   003F4A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  7353   003F4E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  7354   003F52  ECE1  F01B         	call	_setMotorPWM	;wreg free
  7355   003F56                     
  7356                           ;dc_motor.c: 142:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7357   003F56  0E02               	movlw	2
  7358   003F58  6E19               	movwf	(??_turnRight+1)^0,c
  7359   003F5A  0EA0               	movlw	160
  7360   003F5C  6E18               	movwf	??_turnRight^0,c
  7361   003F5E  0E92               	movlw	146
  7362   003F60                     u5097:
  7363   003F60  2EE8               	decfsz	wreg,f,c
  7364   003F62  D7FE               	bra	u5097
  7365   003F64  2E18               	decfsz	??_turnRight^0,f,c
  7366   003F66  D7FC               	bra	u5097
  7367   003F68  2E19               	decfsz	(??_turnRight+1)^0,f,c
  7368   003F6A  D7FA               	bra	u5097
  7369   003F6C  D000               	nop2	
  7370   003F6E                     l3537:
  7371   003F6E  C014  FFD9         	movff	turnRight@mL,fsr2l
  7372   003F72  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  7373   003F76  0E1E               	movlw	30
  7374   003F78  60DF               	cpfslt	indf2,c
  7375   003F7A  EFC1  F01F         	goto	u2811
  7376   003F7E  EFC3  F01F         	goto	u2810
  7377   003F82                     u2811:
  7378   003F82  EFCF  F01F         	goto	l534
  7379   003F86                     u2810:
  7380   003F86  C016  FFD9         	movff	turnRight@mR,fsr2l
  7381   003F8A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  7382   003F8E  0E1D               	movlw	29
  7383   003F90  64DF               	cpfsgt	indf2,c
  7384   003F92  EFCD  F01F         	goto	u2821
  7385   003F96  EFCF  F01F         	goto	u2820
  7386   003F9A                     u2821:
  7387   003F9A  EF93  F01F         	goto	l3529
  7388   003F9E                     u2820:
  7389   003F9E                     l534:
  7390   003F9E  0012               	return		;funcret
  7391   003FA0                     __end_of_turnRight:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _Timer0_init *****************
  7395 ;; Defined at:
  7396 ;;		line 8 in file "timers.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;		None
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;		None
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;Total ram usage:        0 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 1
  7417 ;; This function calls:
  7418 ;;		Nothing
  7419 ;; This function is called by:
  7420 ;;		_main
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           	psect	text47
  7425   004E0E                     __ptext47:
  7426                           	callstack 0
  7427   004E0E                     _Timer0_init:
  7428                           	callstack 29
  7429   004E0E                     
  7430                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  7431   004E0E  50D6               	movf	214,w,c	;volatile
  7432   004E10  0B1F               	andlw	-225
  7433   004E12  0940               	iorlw	64
  7434   004E14  6ED6               	movwf	214,c	;volatile
  7435   004E16                     
  7436                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  7437   004E16  88D6               	bsf	214,4,c	;volatile
  7438                           
  7439                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  7440   004E18  50D6               	movf	214,w,c	;volatile
  7441   004E1A  0BF0               	andlw	-16
  7442   004E1C  090E               	iorlw	14
  7443   004E1E  6ED6               	movwf	214,c	;volatile
  7444   004E20                     
  7445                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  7446   004E20  88D5               	bsf	213,4,c	;volatile
  7447                           
  7448                           ;timers.c: 16:     TMR0H=0;
  7449   004E22  0E00               	movlw	0
  7450   004E24  6ED4               	movwf	212,c	;volatile
  7451                           
  7452                           ;timers.c: 17:     TMR0L=0;
  7453   004E26  0E00               	movlw	0
  7454   004E28  6ED3               	movwf	211,c	;volatile
  7455   004E2A                     
  7456                           ;timers.c: 18:     T0CON0bits.T0EN=1;
  7457   004E2A  8ED5               	bsf	213,7,c	;volatile
  7458   004E2C  0012               	return		;funcret
  7459   004E2E                     __end_of_Timer0_init:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _RetryMove *****************
  7463 ;; Defined at:
  7464 ;;		line 325 in file "dc_motor.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7467 ;;		 -> motorL(9), 
  7468 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7469 ;;		 -> motorR(9), 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;		None
  7472 ;; Return value:  Size  Location     Type
  7473 ;;                  1    wreg      void 
  7474 ;; Registers used:
  7475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7476 ;; Tracked objects:
  7477 ;;		On entry : 0/0
  7478 ;;		On exit  : 0/0
  7479 ;;		Unchanged: 0/0
  7480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;Total ram usage:        6 bytes
  7486 ;; Hardware stack levels used: 1
  7487 ;; Hardware stack levels required when called: 4
  7488 ;; This function calls:
  7489 ;;		_fullSpeedAhead
  7490 ;;		_fullSpeedBack
  7491 ;;		_stop
  7492 ;; This function is called by:
  7493 ;;		_main
  7494 ;; This function uses a non-reentrant model
  7495 ;;
  7496                           
  7497                           	psect	text48
  7498   004202                     __ptext48:
  7499                           	callstack 0
  7500   004202                     _RetryMove:
  7501                           	callstack 26
  7502   004202                     
  7503                           ;dc_motor.c: 326:     fullSpeedBack(mL,mR);
  7504   004202  C01A  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7505   004206  C01B  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7506   00420A  C01C  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7507   00420E  C01D  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7508   004212  EC1F  F020         	call	_fullSpeedBack	;wreg free
  7509   004216                     
  7510                           ;dc_motor.c: 327:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7511   004216  0E29               	movlw	41
  7512   004218  6E1F               	movwf	(??_RetryMove+1)^0,c
  7513   00421A  0E96               	movlw	150
  7514   00421C  6E1E               	movwf	??_RetryMove^0,c
  7515   00421E  0E7F               	movlw	127
  7516   004220                     u5107:
  7517   004220  2EE8               	decfsz	wreg,f,c
  7518   004222  D7FE               	bra	u5107
  7519   004224  2E1E               	decfsz	??_RetryMove^0,f,c
  7520   004226  D7FC               	bra	u5107
  7521   004228  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7522   00422A  D7FA               	bra	u5107
  7523   00422C  F000               	nop	
  7524   00422E                     
  7525                           ;dc_motor.c: 328:     stop(&motorL, &motorR);
  7526   00422E  0EF3               	movlw	low _motorL
  7527   004230  6E14               	movwf	stop@mL^0,c
  7528   004232  0E00               	movlw	high _motorL
  7529   004234  6E15               	movwf	(stop@mL+1)^0,c
  7530   004236  0EC0               	movlw	low _motorR
  7531   004238  6E16               	movwf	stop@mR^0,c
  7532   00423A  0E01               	movlw	high _motorR
  7533   00423C  6E17               	movwf	(stop@mR+1)^0,c
  7534   00423E  EC42  F021         	call	_stop	;wreg free
  7535   004242                     
  7536                           ;dc_motor.c: 329:     fullSpeedAhead(mL,mR);
  7537   004242  C01A  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7538   004246  C01B  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7539   00424A  C01C  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7540   00424E  C01D  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7541   004252  EC6E  F020         	call	_fullSpeedAhead	;wreg free
  7542   004256                     
  7543                           ;dc_motor.c: 330:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7544   004256  0E29               	movlw	41
  7545   004258  6E1F               	movwf	(??_RetryMove+1)^0,c
  7546   00425A  0E96               	movlw	150
  7547   00425C  6E1E               	movwf	??_RetryMove^0,c
  7548   00425E  0E7F               	movlw	127
  7549   004260                     u5117:
  7550   004260  2EE8               	decfsz	wreg,f,c
  7551   004262  D7FE               	bra	u5117
  7552   004264  2E1E               	decfsz	??_RetryMove^0,f,c
  7553   004266  D7FC               	bra	u5117
  7554   004268  2E1F               	decfsz	(??_RetryMove+1)^0,f,c
  7555   00426A  D7FA               	bra	u5117
  7556   00426C  F000               	nop	
  7557                           
  7558                           ;dc_motor.c: 331:     stop(&motorL, &motorR);
  7559   00426E  0EF3               	movlw	low _motorL
  7560   004270  6E14               	movwf	stop@mL^0,c
  7561   004272  0E00               	movlw	high _motorL
  7562   004274  6E15               	movwf	(stop@mL+1)^0,c
  7563   004276  0EC0               	movlw	low _motorR
  7564   004278  6E16               	movwf	stop@mR^0,c
  7565   00427A  0E01               	movlw	high _motorR
  7566   00427C  6E17               	movwf	(stop@mR+1)^0,c
  7567   00427E  EC42  F021         	call	_stop	;wreg free
  7568   004282  0012               	return		;funcret
  7569   004284                     __end_of_RetryMove:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _PinkMove *****************
  7573 ;; Defined at:
  7574 ;;		line 298 in file "dc_motor.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  7577 ;;		 -> motorL(9), 
  7578 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  7579 ;;		 -> motorR(9), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 5
  7598 ;; This function calls:
  7599 ;;		_reverseDetect
  7600 ;;		_reverseOneBlock
  7601 ;;		_turnLeft45
  7602 ;; This function is called by:
  7603 ;;		_main
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text49
  7608   004832                     __ptext49:
  7609                           	callstack 0
  7610   004832                     _PinkMove:
  7611                           	callstack 25
  7612   004832                     
  7613                           ;dc_motor.c: 299:     reverseDetect(&motorL, &motorR);
  7614   004832  0EF3               	movlw	low _motorL
  7615   004834  6E1A               	movwf	reverseDetect@mL^0,c
  7616   004836  0E00               	movlw	high _motorL
  7617   004838  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  7618   00483A  0EC0               	movlw	low _motorR
  7619   00483C  6E1C               	movwf	reverseDetect@mR^0,c
  7620   00483E  0E01               	movlw	high _motorR
  7621   004840  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  7622   004842  ECF2  F022         	call	_reverseDetect	;wreg free
  7623                           
  7624                           ;dc_motor.c: 301:     reverseOneBlock(&motorL, &motorR);
  7625   004846  0EF3               	movlw	low _motorL
  7626   004848  6E1A               	movwf	reverseOneBlock@mL^0,c
  7627   00484A  0E00               	movlw	high _motorL
  7628   00484C  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  7629   00484E  0EC0               	movlw	low _motorR
  7630   004850  6E1C               	movwf	reverseOneBlock@mR^0,c
  7631   004852  0E01               	movlw	high _motorR
  7632   004854  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  7633   004856  ECC5  F022         	call	_reverseOneBlock	;wreg free
  7634                           
  7635                           ;dc_motor.c: 303:     turnLeft45(&motorL, &motorR);
  7636   00485A  0EF3               	movlw	low _motorL
  7637   00485C  6E1A               	movwf	turnLeft45@mL^0,c
  7638   00485E  0E00               	movlw	high _motorL
  7639   004860  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7640   004862  0EC0               	movlw	low _motorR
  7641   004864  6E1C               	movwf	turnLeft45@mR^0,c
  7642   004866  0E01               	movlw	high _motorR
  7643   004868  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7644   00486A  EC30  F025         	call	_turnLeft45	;wreg free
  7645                           
  7646                           ;dc_motor.c: 304:     turnLeft45(&motorL, &motorR);
  7647   00486E  0EF3               	movlw	low _motorL
  7648   004870  6E1A               	movwf	turnLeft45@mL^0,c
  7649   004872  0E00               	movlw	high _motorL
  7650   004874  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  7651   004876  0EC0               	movlw	low _motorR
  7652   004878  6E1C               	movwf	turnLeft45@mR^0,c
  7653   00487A  0E01               	movlw	high _motorR
  7654   00487C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  7655   00487E  EC30  F025         	call	_turnLeft45	;wreg free
  7656   004882  0012               	return		;funcret
  7657   004884                     __end_of_PinkMove:
  7658                           	callstack 0
  7659                           
  7660 ;; *************** function _turnLeft45 *****************
  7661 ;; Defined at:
  7662 ;;		line 218 in file "dc_motor.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7665 ;;		 -> motorL(9), 
  7666 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7667 ;;		 -> motorR(9), 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  1    wreg      void 
  7672 ;; Registers used:
  7673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7683 ;;Total ram usage:        6 bytes
  7684 ;; Hardware stack levels used: 1
  7685 ;; Hardware stack levels required when called: 4
  7686 ;; This function calls:
  7687 ;;		_TurnDelay
  7688 ;;		_stop
  7689 ;;		_turnLeft
  7690 ;; This function is called by:
  7691 ;;		_GreenMove
  7692 ;;		_PinkMove
  7693 ;;		_LightBlueMove
  7694 ;;		_ReverseYellow
  7695 ;;		_turnCalibration
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           	psect	text50
  7700   004A60                     __ptext50:
  7701                           	callstack 0
  7702   004A60                     _turnLeft45:
  7703                           	callstack 25
  7704   004A60                     
  7705                           ;dc_motor.c: 219:     turnLeft(mL,mR);
  7706   004A60  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  7707   004A64  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  7708   004A68  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  7709   004A6C  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  7710   004A70  ECD0  F01F         	call	_turnLeft	;wreg free
  7711   004A74                     
  7712                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
  7713   004A74  C0FC  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  7714   004A78  C0FD  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  7715   004A7C  EC75  F026         	call	_TurnDelay	;wreg free
  7716   004A80                     
  7717                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
  7718   004A80  0EF3               	movlw	low _motorL
  7719   004A82  6E14               	movwf	stop@mL^0,c
  7720   004A84  0E00               	movlw	high _motorL
  7721   004A86  6E15               	movwf	(stop@mL+1)^0,c
  7722   004A88  0EC0               	movlw	low _motorR
  7723   004A8A  6E16               	movwf	stop@mR^0,c
  7724   004A8C  0E01               	movlw	high _motorR
  7725   004A8E  6E17               	movwf	(stop@mR+1)^0,c
  7726   004A90  EC42  F021         	call	_stop	;wreg free
  7727   004A94                     
  7728                           ;dc_motor.c: 222:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7729   004A94  0E52               	movlw	82
  7730   004A96  6E1F               	movwf	(??_turnLeft45+1)^0,c
  7731   004A98  0E2B               	movlw	43
  7732   004A9A  6E1E               	movwf	??_turnLeft45^0,c
  7733   004A9C  0E00               	movlw	0
  7734   004A9E                     u5127:
  7735   004A9E  2EE8               	decfsz	wreg,f,c
  7736   004AA0  D7FE               	bra	u5127
  7737   004AA2  2E1E               	decfsz	??_turnLeft45^0,f,c
  7738   004AA4  D7FC               	bra	u5127
  7739   004AA6  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  7740   004AA8  D7FA               	bra	u5127
  7741   004AAA  D000               	nop2	
  7742   004AAC  0012               	return		;funcret
  7743   004AAE                     __end_of_turnLeft45:
  7744                           	callstack 0
  7745                           
  7746 ;; *************** function _turnLeft *****************
  7747 ;; Defined at:
  7748 ;;		line 111 in file "dc_motor.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  7751 ;;		 -> motorL(9), 
  7752 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  7753 ;;		 -> motorR(9), 
  7754 ;; Auto vars:     Size  Location     Type
  7755 ;;		None
  7756 ;; Return value:  Size  Location     Type
  7757 ;;                  1    wreg      void 
  7758 ;; Registers used:
  7759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7760 ;; Tracked objects:
  7761 ;;		On entry : 0/0
  7762 ;;		On exit  : 0/0
  7763 ;;		Unchanged: 0/0
  7764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7765 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7767 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;Total ram usage:        6 bytes
  7770 ;; Hardware stack levels used: 1
  7771 ;; Hardware stack levels required when called: 3
  7772 ;; This function calls:
  7773 ;;		_setMotorPWM
  7774 ;; This function is called by:
  7775 ;;		_turnLeft45
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           	psect	text51
  7780   003FA0                     __ptext51:
  7781                           	callstack 0
  7782   003FA0                     _turnLeft:
  7783                           	callstack 25
  7784   003FA0                     
  7785                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
  7786   003FA0  EE20 F001          	lfsr	2,1
  7787   003FA4  5014               	movf	turnLeft@mL^0,w,c
  7788   003FA6  26D9               	addwf	fsr2l,f,c
  7789   003FA8  5015               	movf	(turnLeft@mL+1)^0,w,c
  7790   003FAA  22DA               	addwfc	fsr2h,f,c
  7791   003FAC  0E00               	movlw	0
  7792   003FAE  6EDF               	movwf	indf2,c
  7793                           
  7794                           ;dc_motor.c: 114:     mR->direction =1;
  7795   003FB0  EE20 F001          	lfsr	2,1
  7796   003FB4  5016               	movf	turnLeft@mR^0,w,c
  7797   003FB6  26D9               	addwf	fsr2l,f,c
  7798   003FB8  5017               	movf	(turnLeft@mR+1)^0,w,c
  7799   003FBA  22DA               	addwfc	fsr2h,f,c
  7800   003FBC  0E01               	movlw	1
  7801   003FBE  6EDF               	movwf	indf2,c
  7802                           
  7803                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
  7804   003FC0  EF06  F020         	goto	l3523
  7805   003FC4                     l3515:
  7806                           
  7807                           ;dc_motor.c: 118:         mL->power+=10;
  7808   003FC4  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7809   003FC8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7810   003FCC  0E0A               	movlw	10
  7811   003FCE  26DF               	addwf	indf2,f,c
  7812                           
  7813                           ;dc_motor.c: 119:         mR->power+=10;
  7814   003FD0  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7815   003FD4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7816   003FD8  0E0A               	movlw	10
  7817   003FDA  26DF               	addwf	indf2,f,c
  7818   003FDC                     
  7819                           ;dc_motor.c: 121:         setMotorPWM(mL);
  7820   003FDC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  7821   003FE0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  7822   003FE4  ECE1  F01B         	call	_setMotorPWM	;wreg free
  7823   003FE8                     
  7824                           ;dc_motor.c: 122:         setMotorPWM(mR);
  7825   003FE8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  7826   003FEC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  7827   003FF0  ECE1  F01B         	call	_setMotorPWM	;wreg free
  7828   003FF4                     
  7829                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
  7830   003FF4  0E02               	movlw	2
  7831   003FF6  6E19               	movwf	(??_turnLeft+1)^0,c
  7832   003FF8  0EA0               	movlw	160
  7833   003FFA  6E18               	movwf	??_turnLeft^0,c
  7834   003FFC  0E92               	movlw	146
  7835   003FFE                     u5137:
  7836   003FFE  2EE8               	decfsz	wreg,f,c
  7837   004000  D7FE               	bra	u5137
  7838   004002  2E18               	decfsz	??_turnLeft^0,f,c
  7839   004004  D7FC               	bra	u5137
  7840   004006  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  7841   004008  D7FA               	bra	u5137
  7842   00400A  D000               	nop2	
  7843   00400C                     l3523:
  7844   00400C  C014  FFD9         	movff	turnLeft@mL,fsr2l
  7845   004010  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  7846   004014  0E1E               	movlw	30
  7847   004016  60DF               	cpfslt	indf2,c
  7848   004018  EF10  F020         	goto	u2791
  7849   00401C  EF12  F020         	goto	u2790
  7850   004020                     u2791:
  7851   004020  EF1E  F020         	goto	l526
  7852   004024                     u2790:
  7853   004024  C016  FFD9         	movff	turnLeft@mR,fsr2l
  7854   004028  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  7855   00402C  0E1D               	movlw	29
  7856   00402E  64DF               	cpfsgt	indf2,c
  7857   004030  EF1C  F020         	goto	u2801
  7858   004034  EF1E  F020         	goto	u2800
  7859   004038                     u2801:
  7860   004038  EFE2  F01F         	goto	l3515
  7861   00403C                     u2800:
  7862   00403C                     l526:
  7863   00403C  0012               	return		;funcret
  7864   00403E                     __end_of_turnLeft:
  7865                           	callstack 0
  7866                           
  7867 ;; *************** function _TurnDelay *****************
  7868 ;; Defined at:
  7869 ;;		line 204 in file "dc_motor.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  Turn45Delay     2    0[COMRAM] int 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1    wreg      void 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;Total ram usage:        3 bytes
  7888 ;; Hardware stack levels used: 1
  7889 ;; Hardware stack levels required when called: 1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_turnRight45
  7894 ;;		_turnLeft45
  7895 ;; This function uses a non-reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text52
  7899   004CEA                     __ptext52:
  7900                           	callstack 0
  7901   004CEA                     _TurnDelay:
  7902                           	callstack 27
  7903   004CEA                     
  7904                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7905   004CEA  EF82  F026         	goto	l561
  7906   004CEE                     l3557:
  7907                           
  7908                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
  7909   004CEE  0E15               	movlw	21
  7910   004CF0  6E03               	movwf	??_TurnDelay^0,c
  7911   004CF2  0EC6               	movlw	198
  7912   004CF4                     u5147:
  7913   004CF4  2EE8               	decfsz	wreg,f,c
  7914   004CF6  D7FE               	bra	u5147
  7915   004CF8  2E03               	decfsz	??_TurnDelay^0,f,c
  7916   004CFA  D7FC               	bra	u5147
  7917   004CFC  D000               	nop2	
  7918   004CFE                     
  7919                           ;dc_motor.c: 207:         Turn45Delay--;
  7920   004CFE  0601               	decf	TurnDelay@Turn45Delay^0,f,c
  7921   004D00  A0D8               	btfss	status,0,c
  7922   004D02  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
  7923   004D04                     l561:
  7924                           
  7925                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  7926   004D04  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
  7927   004D06  EF8F  F026         	goto	u2850
  7928   004D0A  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
  7929   004D0C  E106               	bnz	u2851
  7930   004D0E  0401               	decf	TurnDelay@Turn45Delay^0,w,c
  7931   004D10  B0D8               	btfsc	status,0,c
  7932   004D12  EF8D  F026         	goto	u2851
  7933   004D16  EF8F  F026         	goto	u2850
  7934   004D1A                     u2851:
  7935   004D1A  EF77  F026         	goto	l3557
  7936   004D1E                     u2850:
  7937   004D1E  0012               	return		;funcret
  7938   004D20                     __end_of_TurnDelay:
  7939                           	callstack 0
  7940                           
  7941 ;; *************** function _reverseOneBlock *****************
  7942 ;; Defined at:
  7943 ;;		line 232 in file "dc_motor.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  7946 ;;		 -> motorL(9), 
  7947 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  7948 ;;		 -> motorR(9), 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;		None
  7951 ;; Return value:  Size  Location     Type
  7952 ;;                  1    wreg      void 
  7953 ;; Registers used:
  7954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7955 ;; Tracked objects:
  7956 ;;		On entry : 0/0
  7957 ;;		On exit  : 0/0
  7958 ;;		Unchanged: 0/0
  7959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;Total ram usage:        6 bytes
  7965 ;; Hardware stack levels used: 1
  7966 ;; Hardware stack levels required when called: 4
  7967 ;; This function calls:
  7968 ;;		_fullSpeedBack
  7969 ;;		_stop
  7970 ;; This function is called by:
  7971 ;;		_YellowMove
  7972 ;;		_PinkMove
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text53
  7977   00458A                     __ptext53:
  7978                           	callstack 0
  7979   00458A                     _reverseOneBlock:
  7980                           	callstack 25
  7981   00458A                     
  7982                           ;dc_motor.c: 233:     fullSpeedBack(mL,mR);
  7983   00458A  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  7984   00458E  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  7985   004592  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  7986   004596  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  7987   00459A  EC1F  F020         	call	_fullSpeedBack	;wreg free
  7988   00459E                     
  7989                           ;dc_motor.c: 234:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  7990   00459E  0EA3               	movlw	163
  7991   0045A0  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  7992   0045A2  0E57               	movlw	87
  7993   0045A4  6E1E               	movwf	??_reverseOneBlock^0,c
  7994   0045A6  0E02               	movlw	2
  7995   0045A8                     u5157:
  7996   0045A8  2EE8               	decfsz	wreg,f,c
  7997   0045AA  D7FE               	bra	u5157
  7998   0045AC  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  7999   0045AE  D7FC               	bra	u5157
  8000   0045B0  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8001   0045B2  D7FA               	bra	u5157
  8002   0045B4  D000               	nop2	
  8003   0045B6                     
  8004                           ;dc_motor.c: 235:     stop(&motorL, &motorR);
  8005   0045B6  0EF3               	movlw	low _motorL
  8006   0045B8  6E14               	movwf	stop@mL^0,c
  8007   0045BA  0E00               	movlw	high _motorL
  8008   0045BC  6E15               	movwf	(stop@mL+1)^0,c
  8009   0045BE  0EC0               	movlw	low _motorR
  8010   0045C0  6E16               	movwf	stop@mR^0,c
  8011   0045C2  0E01               	movlw	high _motorR
  8012   0045C4  6E17               	movwf	(stop@mR+1)^0,c
  8013   0045C6  EC42  F021         	call	_stop	;wreg free
  8014                           
  8015                           ;dc_motor.c: 236:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8016   0045CA  0E52               	movlw	82
  8017   0045CC  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  8018   0045CE  0E2B               	movlw	43
  8019   0045D0  6E1E               	movwf	??_reverseOneBlock^0,c
  8020   0045D2  0E00               	movlw	0
  8021   0045D4                     u5167:
  8022   0045D4  2EE8               	decfsz	wreg,f,c
  8023   0045D6  D7FE               	bra	u5167
  8024   0045D8  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  8025   0045DA  D7FC               	bra	u5167
  8026   0045DC  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8027   0045DE  D7FA               	bra	u5167
  8028   0045E0  D000               	nop2	
  8029   0045E2  0012               	return		;funcret
  8030   0045E4                     __end_of_reverseOneBlock:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function _reverseDetect *****************
  8034 ;; Defined at:
  8035 ;;		line 225 in file "dc_motor.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8038 ;;		 -> motorL(9), 
  8039 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8040 ;;		 -> motorR(9), 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;Total ram usage:        6 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 4
  8059 ;; This function calls:
  8060 ;;		_fullSpeedBack
  8061 ;;		_stop
  8062 ;; This function is called by:
  8063 ;;		_RedMove
  8064 ;;		_GreenMove
  8065 ;;		_BlueMove
  8066 ;;		_YellowMove
  8067 ;;		_PinkMove
  8068 ;;		_OrangeMove
  8069 ;;		_LightBlueMove
  8070 ;; This function uses a non-reentrant model
  8071 ;;
  8072                           
  8073                           	psect	text54
  8074   0045E4                     __ptext54:
  8075                           	callstack 0
  8076   0045E4                     _reverseDetect:
  8077                           	callstack 24
  8078   0045E4                     
  8079                           ;dc_motor.c: 226:     fullSpeedBack(mL,mR);
  8080   0045E4  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
  8081   0045E8  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
  8082   0045EC  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
  8083   0045F0  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
  8084   0045F4  EC1F  F020         	call	_fullSpeedBack	;wreg free
  8085   0045F8                     
  8086                           ;dc_motor.c: 227:     _delay((unsigned long)((200)*(64000000/4000.0)));
  8087   0045F8  0E11               	movlw	17
  8088   0045FA  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8089   0045FC  0E3C               	movlw	60
  8090   0045FE  6E1E               	movwf	??_reverseDetect^0,c
  8091   004600  0ECB               	movlw	203
  8092   004602                     u5177:
  8093   004602  2EE8               	decfsz	wreg,f,c
  8094   004604  D7FE               	bra	u5177
  8095   004606  2E1E               	decfsz	??_reverseDetect^0,f,c
  8096   004608  D7FC               	bra	u5177
  8097   00460A  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8098   00460C  D7FA               	bra	u5177
  8099   00460E  F000               	nop	
  8100   004610                     
  8101                           ;dc_motor.c: 228:     stop(&motorL, &motorR);
  8102   004610  0EF3               	movlw	low _motorL
  8103   004612  6E14               	movwf	stop@mL^0,c
  8104   004614  0E00               	movlw	high _motorL
  8105   004616  6E15               	movwf	(stop@mL+1)^0,c
  8106   004618  0EC0               	movlw	low _motorR
  8107   00461A  6E16               	movwf	stop@mR^0,c
  8108   00461C  0E01               	movlw	high _motorR
  8109   00461E  6E17               	movwf	(stop@mR+1)^0,c
  8110   004620  EC42  F021         	call	_stop	;wreg free
  8111                           
  8112                           ;dc_motor.c: 229:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8113   004624  0E52               	movlw	82
  8114   004626  6E1F               	movwf	(??_reverseDetect+1)^0,c
  8115   004628  0E2B               	movlw	43
  8116   00462A  6E1E               	movwf	??_reverseDetect^0,c
  8117   00462C  0E00               	movlw	0
  8118   00462E                     u5187:
  8119   00462E  2EE8               	decfsz	wreg,f,c
  8120   004630  D7FE               	bra	u5187
  8121   004632  2E1E               	decfsz	??_reverseDetect^0,f,c
  8122   004634  D7FC               	bra	u5187
  8123   004636  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
  8124   004638  D7FA               	bra	u5187
  8125   00463A  D000               	nop2	
  8126   00463C  0012               	return		;funcret
  8127   00463E                     __end_of_reverseDetect:
  8128                           	callstack 0
  8129                           
  8130 ;; *************** function _fullSpeedBack *****************
  8131 ;; Defined at:
  8132 ;;		line 185 in file "dc_motor.c"
  8133 ;; Parameters:    Size  Location     Type
  8134 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8135 ;;		 -> motorL(9), 
  8136 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8137 ;;		 -> motorR(9), 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;		None
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  1    wreg      void 
  8142 ;; Registers used:
  8143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8153 ;;Total ram usage:        6 bytes
  8154 ;; Hardware stack levels used: 1
  8155 ;; Hardware stack levels required when called: 3
  8156 ;; This function calls:
  8157 ;;		_setMotorPWM
  8158 ;; This function is called by:
  8159 ;;		_reverseDetect
  8160 ;;		_reverseOneBlock
  8161 ;;		_RetryMove
  8162 ;;		_Backhalfblock
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           	psect	text55
  8167   00403E                     __ptext55:
  8168                           	callstack 0
  8169   00403E                     _fullSpeedBack:
  8170                           	callstack 24
  8171   00403E                     
  8172                           ;dc_motor.c: 185: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 186: {;dc_motor.c: 188:     mL->direction =0;
  8173   00403E  EE20 F001          	lfsr	2,1
  8174   004042  5014               	movf	fullSpeedBack@mL^0,w,c
  8175   004044  26D9               	addwf	fsr2l,f,c
  8176   004046  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
  8177   004048  22DA               	addwfc	fsr2h,f,c
  8178   00404A  0E00               	movlw	0
  8179   00404C  6EDF               	movwf	indf2,c
  8180                           
  8181                           ;dc_motor.c: 189:     mR->direction =0;
  8182   00404E  EE20 F001          	lfsr	2,1
  8183   004052  5016               	movf	fullSpeedBack@mR^0,w,c
  8184   004054  26D9               	addwf	fsr2l,f,c
  8185   004056  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
  8186   004058  22DA               	addwfc	fsr2h,f,c
  8187   00405A  0E00               	movlw	0
  8188   00405C  6EDF               	movwf	indf2,c
  8189                           
  8190                           ;dc_motor.c: 190:     while (mL->power < power && mR->power < power){
  8191   00405E  EF55  F020         	goto	l3551
  8192   004062                     l3543:
  8193                           
  8194                           ;dc_motor.c: 192:         mL->power+=10;
  8195   004062  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8196   004066  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8197   00406A  0E0A               	movlw	10
  8198   00406C  26DF               	addwf	indf2,f,c
  8199                           
  8200                           ;dc_motor.c: 193:         mR->power+=10;
  8201   00406E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8202   004072  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8203   004076  0E0A               	movlw	10
  8204   004078  26DF               	addwf	indf2,f,c
  8205   00407A                     
  8206                           ;dc_motor.c: 195:         setMotorPWM(mL);
  8207   00407A  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
  8208   00407E  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
  8209   004082  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8210   004086                     
  8211                           ;dc_motor.c: 196:         setMotorPWM(mR);
  8212   004086  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
  8213   00408A  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
  8214   00408E  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8215   004092                     
  8216                           ;dc_motor.c: 198:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8217   004092  0E02               	movlw	2
  8218   004094  6E19               	movwf	(??_fullSpeedBack+1)^0,c
  8219   004096  0EA0               	movlw	160
  8220   004098  6E18               	movwf	??_fullSpeedBack^0,c
  8221   00409A  0E92               	movlw	146
  8222   00409C                     u5197:
  8223   00409C  2EE8               	decfsz	wreg,f,c
  8224   00409E  D7FE               	bra	u5197
  8225   0040A0  2E18               	decfsz	??_fullSpeedBack^0,f,c
  8226   0040A2  D7FC               	bra	u5197
  8227   0040A4  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
  8228   0040A6  D7FA               	bra	u5197
  8229   0040A8  D000               	nop2	
  8230   0040AA                     l3551:
  8231   0040AA  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
  8232   0040AE  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
  8233   0040B2  0E1E               	movlw	30
  8234   0040B4  60DF               	cpfslt	indf2,c
  8235   0040B6  EF5F  F020         	goto	u2831
  8236   0040BA  EF61  F020         	goto	u2830
  8237   0040BE                     u2831:
  8238   0040BE  EF6D  F020         	goto	l558
  8239   0040C2                     u2830:
  8240   0040C2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
  8241   0040C6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
  8242   0040CA  0E1D               	movlw	29
  8243   0040CC  64DF               	cpfsgt	indf2,c
  8244   0040CE  EF6B  F020         	goto	u2841
  8245   0040D2  EF6D  F020         	goto	u2840
  8246   0040D6                     u2841:
  8247   0040D6  EF31  F020         	goto	l3543
  8248   0040DA                     u2840:
  8249   0040DA                     l558:
  8250   0040DA  0012               	return		;funcret
  8251   0040DC                     __end_of_fullSpeedBack:
  8252                           	callstack 0
  8253                           
  8254 ;; *************** function _Interrupts_init *****************
  8255 ;; Defined at:
  8256 ;;		line 12 in file "interrupts.c"
  8257 ;; Parameters:    Size  Location     Type
  8258 ;;		None
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;		None
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		None
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8274 ;;Total ram usage:        0 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; Hardware stack levels required when called: 1
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;; This function uses a non-reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text56
  8285   004E9A                     __ptext56:
  8286                           	callstack 0
  8287   004E9A                     _Interrupts_init:
  8288                           	callstack 29
  8289   004E9A  0012               	return		;funcret
  8290   004E9C                     __end_of_Interrupts_init:
  8291                           	callstack 0
  8292                           
  8293 ;; *************** function _Forwardhalfblock *****************
  8294 ;; Defined at:
  8295 ;;		line 245 in file "dc_motor.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8298 ;;		 -> motorL(9), 
  8299 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8300 ;;		 -> motorR(9), 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;Total ram usage:        6 bytes
  8317 ;; Hardware stack levels used: 1
  8318 ;; Hardware stack levels required when called: 4
  8319 ;; This function calls:
  8320 ;;		_fullSpeedAhead
  8321 ;;		_stop
  8322 ;; This function is called by:
  8323 ;;		_main
  8324 ;; This function uses a non-reentrant model
  8325 ;;
  8326                           
  8327                           	psect	text57
  8328   00463E                     __ptext57:
  8329                           	callstack 0
  8330   00463E                     _Forwardhalfblock:
  8331                           	callstack 26
  8332   00463E                     
  8333                           ;dc_motor.c: 246:     fullSpeedAhead(mL,mR);
  8334   00463E  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8335   004642  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8336   004646  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8337   00464A  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8338   00464E  EC6E  F020         	call	_fullSpeedAhead	;wreg free
  8339   004652                     
  8340                           ;dc_motor.c: 247:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  8341   004652  0E52               	movlw	82
  8342   004654  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8343   004656  0E2B               	movlw	43
  8344   004658  6E1E               	movwf	??_Forwardhalfblock^0,c
  8345   00465A  0E00               	movlw	0
  8346   00465C                     u5207:
  8347   00465C  2EE8               	decfsz	wreg,f,c
  8348   00465E  D7FE               	bra	u5207
  8349   004660  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8350   004662  D7FC               	bra	u5207
  8351   004664  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8352   004666  D7FA               	bra	u5207
  8353   004668  D000               	nop2	
  8354   00466A                     
  8355                           ;dc_motor.c: 248:     stop(&motorL, &motorR);
  8356   00466A  0EF3               	movlw	low _motorL
  8357   00466C  6E14               	movwf	stop@mL^0,c
  8358   00466E  0E00               	movlw	high _motorL
  8359   004670  6E15               	movwf	(stop@mL+1)^0,c
  8360   004672  0EC0               	movlw	low _motorR
  8361   004674  6E16               	movwf	stop@mR^0,c
  8362   004676  0E01               	movlw	high _motorR
  8363   004678  6E17               	movwf	(stop@mR+1)^0,c
  8364   00467A  EC42  F021         	call	_stop	;wreg free
  8365                           
  8366                           ;dc_motor.c: 249:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8367   00467E  0E52               	movlw	82
  8368   004680  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
  8369   004682  0E2B               	movlw	43
  8370   004684  6E1E               	movwf	??_Forwardhalfblock^0,c
  8371   004686  0E00               	movlw	0
  8372   004688                     u5217:
  8373   004688  2EE8               	decfsz	wreg,f,c
  8374   00468A  D7FE               	bra	u5217
  8375   00468C  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
  8376   00468E  D7FC               	bra	u5217
  8377   004690  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8378   004692  D7FA               	bra	u5217
  8379   004694  D000               	nop2	
  8380   004696  0012               	return		;funcret
  8381   004698                     __end_of_Forwardhalfblock:
  8382                           	callstack 0
  8383                           
  8384 ;; *************** function _stop *****************
  8385 ;; Defined at:
  8386 ;;		line 93 in file "dc_motor.c"
  8387 ;; Parameters:    Size  Location     Type
  8388 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8389 ;;		 -> motorL(9), 
  8390 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8391 ;;		 -> motorR(9), 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;Total ram usage:        6 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 3
  8410 ;; This function calls:
  8411 ;;		_setMotorPWM
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;;		_turnRight45
  8415 ;;		_turnLeft45
  8416 ;;		_reverseDetect
  8417 ;;		_reverseOneBlock
  8418 ;;		_ForwardOneBlock
  8419 ;;		_Forwardhalfblock
  8420 ;;		_RetryMove
  8421 ;;		_Backhalfblock
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text58
  8426   004284                     __ptext58:
  8427                           	callstack 0
  8428   004284                     _stop:
  8429                           	callstack 25
  8430   004284                     
  8431                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
  8432   004284  EF68  F021         	goto	l3509
  8433   004288                     l3501:
  8434                           
  8435                           ;dc_motor.c: 97:         mL->power-=10;
  8436   004288  C014  FFD9         	movff	stop@mL,fsr2l
  8437   00428C  C015  FFDA         	movff	stop@mL+1,fsr2h
  8438   004290  0E0A               	movlw	10
  8439   004292  5EDF               	subwf	indf2,f,c
  8440                           
  8441                           ;dc_motor.c: 98:         mR->power-=10;
  8442   004294  C016  FFD9         	movff	stop@mR,fsr2l
  8443   004298  C017  FFDA         	movff	stop@mR+1,fsr2h
  8444   00429C  0E0A               	movlw	10
  8445   00429E  5EDF               	subwf	indf2,f,c
  8446   0042A0                     
  8447                           ;dc_motor.c: 103:         setMotorPWM(mL);
  8448   0042A0  C014  F00E         	movff	stop@mL,setMotorPWM@m
  8449   0042A4  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  8450   0042A8  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8451   0042AC                     
  8452                           ;dc_motor.c: 104:         setMotorPWM(mR);
  8453   0042AC  C016  F00E         	movff	stop@mR,setMotorPWM@m
  8454   0042B0  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  8455   0042B4  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8456   0042B8                     
  8457                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8458   0042B8  0E02               	movlw	2
  8459   0042BA  6E19               	movwf	(??_stop+1)^0,c
  8460   0042BC  0EA0               	movlw	160
  8461   0042BE  6E18               	movwf	??_stop^0,c
  8462   0042C0  0E92               	movlw	146
  8463   0042C2                     u5227:
  8464   0042C2  2EE8               	decfsz	wreg,f,c
  8465   0042C4  D7FE               	bra	u5227
  8466   0042C6  2E18               	decfsz	??_stop^0,f,c
  8467   0042C8  D7FC               	bra	u5227
  8468   0042CA  2E19               	decfsz	(??_stop+1)^0,f,c
  8469   0042CC  D7FA               	bra	u5227
  8470   0042CE  D000               	nop2	
  8471   0042D0                     l3509:
  8472                           
  8473                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
  8474   0042D0  C014  FFD9         	movff	stop@mL,fsr2l
  8475   0042D4  C015  FFDA         	movff	stop@mL+1,fsr2h
  8476   0042D8  50DF               	movf	indf2,w,c
  8477   0042DA  A4D8               	btfss	status,2,c
  8478   0042DC  EF72  F021         	goto	u2771
  8479   0042E0  EF74  F021         	goto	u2770
  8480   0042E4                     u2771:
  8481   0042E4  EF44  F021         	goto	l3501
  8482   0042E8                     u2770:
  8483   0042E8  C016  FFD9         	movff	stop@mR,fsr2l
  8484   0042EC  C017  FFDA         	movff	stop@mR+1,fsr2h
  8485   0042F0  50DF               	movf	indf2,w,c
  8486   0042F2  A4D8               	btfss	status,2,c
  8487   0042F4  EF7E  F021         	goto	u2781
  8488   0042F8  EF80  F021         	goto	u2780
  8489   0042FC                     u2781:
  8490   0042FC  EF44  F021         	goto	l3501
  8491   004300                     u2780:
  8492   004300  0012               	return		;funcret
  8493   004302                     __end_of_stop:
  8494                           	callstack 0
  8495                           
  8496 ;; *************** function _fullSpeedAhead *****************
  8497 ;; Defined at:
  8498 ;;		line 147 in file "dc_motor.c"
  8499 ;; Parameters:    Size  Location     Type
  8500 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8501 ;;		 -> motorL(9), 
  8502 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8503 ;;		 -> motorR(9), 
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8518 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;Total ram usage:        6 bytes
  8520 ;; Hardware stack levels used: 1
  8521 ;; Hardware stack levels required when called: 3
  8522 ;; This function calls:
  8523 ;;		_setMotorPWM
  8524 ;; This function is called by:
  8525 ;;		_main
  8526 ;;		_ForwardOneBlock
  8527 ;;		_Forwardhalfblock
  8528 ;;		_RetryMove
  8529 ;; This function uses a non-reentrant model
  8530 ;;
  8531                           
  8532                           	psect	text59
  8533   0040DC                     __ptext59:
  8534                           	callstack 0
  8535   0040DC                     _fullSpeedAhead:
  8536                           	callstack 24
  8537   0040DC                     
  8538                           ;dc_motor.c: 147: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 148: {;dc_motor.c: 150:     mL->direction =1;
  8539   0040DC  EE20 F001          	lfsr	2,1
  8540   0040E0  5014               	movf	fullSpeedAhead@mL^0,w,c
  8541   0040E2  26D9               	addwf	fsr2l,f,c
  8542   0040E4  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8543   0040E6  22DA               	addwfc	fsr2h,f,c
  8544   0040E8  0E01               	movlw	1
  8545   0040EA  6EDF               	movwf	indf2,c
  8546                           
  8547                           ;dc_motor.c: 151:     mR->direction =1;
  8548   0040EC  EE20 F001          	lfsr	2,1
  8549   0040F0  5016               	movf	fullSpeedAhead@mR^0,w,c
  8550   0040F2  26D9               	addwf	fsr2l,f,c
  8551   0040F4  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8552   0040F6  22DA               	addwfc	fsr2h,f,c
  8553   0040F8  0E01               	movlw	1
  8554   0040FA  6EDF               	movwf	indf2,c
  8555                           
  8556                           ;dc_motor.c: 152:     while (mL->power < power && mR->power < power){
  8557   0040FC  EFA4  F020         	goto	l3495
  8558   004100                     l3487:
  8559                           
  8560                           ;dc_motor.c: 154:         mL->power+=10;
  8561   004100  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8562   004104  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8563   004108  0E0A               	movlw	10
  8564   00410A  26DF               	addwf	indf2,f,c
  8565                           
  8566                           ;dc_motor.c: 155:         mR->power+=10;
  8567   00410C  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8568   004110  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8569   004114  0E0A               	movlw	10
  8570   004116  26DF               	addwf	indf2,f,c
  8571   004118                     
  8572                           ;dc_motor.c: 157:         setMotorPWM(mL);
  8573   004118  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8574   00411C  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8575   004120  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8576   004124                     
  8577                           ;dc_motor.c: 158:         setMotorPWM(mR);
  8578   004124  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8579   004128  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8580   00412C  ECE1  F01B         	call	_setMotorPWM	;wreg free
  8581   004130                     
  8582                           ;dc_motor.c: 161:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8583   004130  0E02               	movlw	2
  8584   004132  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
  8585   004134  0EA0               	movlw	160
  8586   004136  6E18               	movwf	??_fullSpeedAhead^0,c
  8587   004138  0E92               	movlw	146
  8588   00413A                     u5237:
  8589   00413A  2EE8               	decfsz	wreg,f,c
  8590   00413C  D7FE               	bra	u5237
  8591   00413E  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8592   004140  D7FC               	bra	u5237
  8593   004142  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  8594   004144  D7FA               	bra	u5237
  8595   004146  D000               	nop2	
  8596   004148                     l3495:
  8597   004148  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8598   00414C  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8599   004150  0E1E               	movlw	30
  8600   004152  60DF               	cpfslt	indf2,c
  8601   004154  EFAE  F020         	goto	u2751
  8602   004158  EFB0  F020         	goto	u2750
  8603   00415C                     u2751:
  8604   00415C  EFBC  F020         	goto	l542
  8605   004160                     u2750:
  8606   004160  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8607   004164  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8608   004168  0E1D               	movlw	29
  8609   00416A  64DF               	cpfsgt	indf2,c
  8610   00416C  EFBA  F020         	goto	u2761
  8611   004170  EFBC  F020         	goto	u2760
  8612   004174                     u2761:
  8613   004174  EF80  F020         	goto	l3487
  8614   004178                     u2760:
  8615   004178                     l542:
  8616   004178  0012               	return		;funcret
  8617   00417A                     __end_of_fullSpeedAhead:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _setMotorPWM *****************
  8621 ;; Defined at:
  8622 ;;		line 68 in file "dc_motor.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  m               2   13[COMRAM] PTR struct DC_motor
  8625 ;;		 -> motorR(9), motorL(9), 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  negDuty         1   18[COMRAM] unsigned char 
  8628 ;;  posDuty         1   17[COMRAM] unsigned char 
  8629 ;; Return value:  Size  Location     Type
  8630 ;;                  1    wreg      void 
  8631 ;; Registers used:
  8632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8633 ;; Tracked objects:
  8634 ;;		On entry : 0/0
  8635 ;;		On exit  : 0/0
  8636 ;;		Unchanged: 0/0
  8637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8641 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8642 ;;Total ram usage:        6 bytes
  8643 ;; Hardware stack levels used: 1
  8644 ;; Hardware stack levels required when called: 2
  8645 ;; This function calls:
  8646 ;;		___lwdiv
  8647 ;;		___wmul
  8648 ;; This function is called by:
  8649 ;;		_stop
  8650 ;;		_turnLeft
  8651 ;;		_turnRight
  8652 ;;		_fullSpeedAhead
  8653 ;;		_timed_forward
  8654 ;;		_fullSpeedBack
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text60
  8659   0037C2                     __ptext60:
  8660                           	callstack 0
  8661   0037C2                     _setMotorPWM:
  8662                           	callstack 25
  8663   0037C2                     
  8664                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  8665   0037C2  EE20 F002          	lfsr	2,2
  8666   0037C6  500E               	movf	setMotorPWM@m^0,w,c
  8667   0037C8  26D9               	addwf	fsr2l,f,c
  8668   0037CA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8669   0037CC  22DA               	addwfc	fsr2h,f,c
  8670   0037CE  50DF               	movf	indf2,w,c
  8671   0037D0  B4D8               	btfsc	status,2,c
  8672   0037D2  EFED  F01B         	goto	u2551
  8673   0037D6  EFEF  F01B         	goto	u2550
  8674   0037DA                     u2551:
  8675   0037DA  EF23  F01C         	goto	l3373
  8676   0037DE                     u2550:
  8677   0037DE                     
  8678                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  8679   0037DE  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8680   0037E2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8681   0037E6  50DF               	movf	indf2,w,c
  8682   0037E8  6E10               	movwf	??_setMotorPWM^0,c
  8683   0037EA  5010               	movf	??_setMotorPWM^0,w,c
  8684   0037EC  6E01               	movwf	___wmul@multiplier^0,c
  8685   0037EE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8686   0037F0  EE20 F003          	lfsr	2,3
  8687   0037F4  500E               	movf	setMotorPWM@m^0,w,c
  8688   0037F6  26D9               	addwf	fsr2l,f,c
  8689   0037F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8690   0037FA  22DA               	addwfc	fsr2h,f,c
  8691   0037FC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8692   003800  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8693   003804  ECE4  F026         	call	___wmul	;wreg free
  8694   003808  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8695   00380C  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8696   003810  0E00               	movlw	0
  8697   003812  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8698   003814  0E64               	movlw	100
  8699   003816  6E09               	movwf	___lwdiv@divisor^0,c
  8700   003818  ECFC  F021         	call	___lwdiv	;wreg free
  8701   00381C  EE20 F003          	lfsr	2,3
  8702   003820  500E               	movf	setMotorPWM@m^0,w,c
  8703   003822  26D9               	addwf	fsr2l,f,c
  8704   003824  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8705   003826  22DA               	addwfc	fsr2h,f,c
  8706   003828  50DF               	movf	indf2,w,c
  8707   00382A  6E11               	movwf	(??_setMotorPWM+1)^0,c
  8708   00382C  5007               	movf	?___lwdiv^0,w,c
  8709   00382E  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  8710   003830  6E12               	movwf	setMotorPWM@posDuty^0,c
  8711   003832                     
  8712                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  8713   003832  EE20 F003          	lfsr	2,3
  8714   003836  500E               	movf	setMotorPWM@m^0,w,c
  8715   003838  26D9               	addwf	fsr2l,f,c
  8716   00383A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8717   00383C  22DA               	addwfc	fsr2h,f,c
  8718   00383E  50DF               	movf	indf2,w,c
  8719   003840  6E13               	movwf	setMotorPWM@negDuty^0,c
  8720                           
  8721                           ;dc_motor.c: 75:     }
  8722   003842  EF46  F01C         	goto	l3377
  8723   003846                     l3373:
  8724                           
  8725                           ;dc_motor.c: 77:         posDuty=0;
  8726   003846  0E00               	movlw	0
  8727   003848  6E12               	movwf	setMotorPWM@posDuty^0,c
  8728   00384A                     
  8729                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  8730   00384A  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  8731   00384E  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  8732   003852  50DF               	movf	indf2,w,c
  8733   003854  6E10               	movwf	??_setMotorPWM^0,c
  8734   003856  5010               	movf	??_setMotorPWM^0,w,c
  8735   003858  6E01               	movwf	___wmul@multiplier^0,c
  8736   00385A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  8737   00385C  EE20 F003          	lfsr	2,3
  8738   003860  500E               	movf	setMotorPWM@m^0,w,c
  8739   003862  26D9               	addwf	fsr2l,f,c
  8740   003864  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8741   003866  22DA               	addwfc	fsr2h,f,c
  8742   003868  CFDE F003          	movff	postinc2,___wmul@multiplicand
  8743   00386C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  8744   003870  ECE4  F026         	call	___wmul	;wreg free
  8745   003874  C001  F007         	movff	?___wmul,___lwdiv@dividend
  8746   003878  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  8747   00387C  0E00               	movlw	0
  8748   00387E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8749   003880  0E64               	movlw	100
  8750   003882  6E09               	movwf	___lwdiv@divisor^0,c
  8751   003884  ECFC  F021         	call	___lwdiv	;wreg free
  8752   003888  5007               	movf	?___lwdiv^0,w,c
  8753   00388A  6E13               	movwf	setMotorPWM@negDuty^0,c
  8754   00388C                     l3377:
  8755                           
  8756                           ;dc_motor.c: 81:     if (m->direction) {
  8757   00388C  EE20 F001          	lfsr	2,1
  8758   003890  500E               	movf	setMotorPWM@m^0,w,c
  8759   003892  26D9               	addwf	fsr2l,f,c
  8760   003894  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8761   003896  22DA               	addwfc	fsr2h,f,c
  8762   003898  50DF               	movf	indf2,w,c
  8763   00389A  B4D8               	btfsc	status,2,c
  8764   00389C  EF52  F01C         	goto	u2561
  8765   0038A0  EF54  F01C         	goto	u2560
  8766   0038A4                     u2561:
  8767   0038A4  EF76  F01C         	goto	l3381
  8768   0038A8                     u2560:
  8769   0038A8                     
  8770                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=negDuty;
  8771   0038A8  EE20 F005          	lfsr	2,5
  8772   0038AC  500E               	movf	setMotorPWM@m^0,w,c
  8773   0038AE  26D9               	addwf	fsr2l,f,c
  8774   0038B0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8775   0038B2  22DA               	addwfc	fsr2h,f,c
  8776   0038B4  CFDE F010          	movff	postinc2,??_setMotorPWM
  8777   0038B8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8778   0038BC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8779   0038C0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8780   0038C4  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8781                           
  8782                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=posDuty;
  8783   0038C8  EE20 F007          	lfsr	2,7
  8784   0038CC  500E               	movf	setMotorPWM@m^0,w,c
  8785   0038CE  26D9               	addwf	fsr2l,f,c
  8786   0038D0  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8787   0038D2  22DA               	addwfc	fsr2h,f,c
  8788   0038D4  CFDE F010          	movff	postinc2,??_setMotorPWM
  8789   0038D8  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8790   0038DC  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8791   0038E0  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8792   0038E4  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8793                           
  8794                           ;dc_motor.c: 86:     } else {
  8795   0038E8  EF96  F01C         	goto	l512
  8796   0038EC                     l3381:
  8797                           
  8798                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=posDuty;
  8799   0038EC  EE20 F005          	lfsr	2,5
  8800   0038F0  500E               	movf	setMotorPWM@m^0,w,c
  8801   0038F2  26D9               	addwf	fsr2l,f,c
  8802   0038F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8803   0038F6  22DA               	addwfc	fsr2h,f,c
  8804   0038F8  CFDE F010          	movff	postinc2,??_setMotorPWM
  8805   0038FC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8806   003900  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8807   003904  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8808   003908  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  8809                           
  8810                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=negDuty;
  8811   00390C  EE20 F007          	lfsr	2,7
  8812   003910  500E               	movf	setMotorPWM@m^0,w,c
  8813   003912  26D9               	addwf	fsr2l,f,c
  8814   003914  500F               	movf	(setMotorPWM@m+1)^0,w,c
  8815   003916  22DA               	addwfc	fsr2h,f,c
  8816   003918  CFDE F010          	movff	postinc2,??_setMotorPWM
  8817   00391C  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  8818   003920  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  8819   003924  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  8820   003928  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  8821   00392C                     l512:
  8822   00392C  0012               	return		;funcret
  8823   00392E                     __end_of_setMotorPWM:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function ___wmul *****************
  8827 ;; Defined at:
  8828 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  multiplier      2    0[COMRAM] unsigned int 
  8831 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  product         2    4[COMRAM] unsigned int 
  8834 ;; Return value:  Size  Location     Type
  8835 ;;                  2    0[COMRAM] unsigned int 
  8836 ;; Registers used:
  8837 ;;		wreg, status,2, status,0, prodl, prodh
  8838 ;; Tracked objects:
  8839 ;;		On entry : 0/0
  8840 ;;		On exit  : 0/0
  8841 ;;		Unchanged: 0/0
  8842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;Total ram usage:        6 bytes
  8848 ;; Hardware stack levels used: 1
  8849 ;; Hardware stack levels required when called: 1
  8850 ;; This function calls:
  8851 ;;		Nothing
  8852 ;; This function is called by:
  8853 ;;		_setMotorPWM
  8854 ;; This function uses a non-reentrant model
  8855 ;;
  8856                           
  8857                           	psect	text61
  8858   004DC8                     __ptext61:
  8859                           	callstack 0
  8860   004DC8                     ___wmul:
  8861                           	callstack 25
  8862   004DC8  5001               	movf	___wmul@multiplier^0,w,c
  8863   004DCA  0203               	mulwf	___wmul@multiplicand^0,c
  8864   004DCC  CFF3 F005          	movff	prodl,___wmul@product
  8865   004DD0  CFF4 F006          	movff	prodh,___wmul@product+1
  8866   004DD4  5001               	movf	___wmul@multiplier^0,w,c
  8867   004DD6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8868   004DD8  50F3               	movf	243,w,c
  8869   004DDA  2606               	addwf	(___wmul@product+1)^0,f,c
  8870   004DDC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8871   004DDE  0203               	mulwf	___wmul@multiplicand^0,c
  8872   004DE0  50F3               	movf	243,w,c
  8873   004DE2  2606               	addwf	(___wmul@product+1)^0,f,c
  8874   004DE4  C005  F001         	movff	___wmul@product,?___wmul
  8875   004DE8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8876   004DEC  0012               	return		;funcret
  8877   004DEE                     __end_of___wmul:
  8878                           	callstack 0
  8879                           
  8880 ;; *************** function ___lwdiv *****************
  8881 ;; Defined at:
  8882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  dividend        2    6[COMRAM] unsigned int 
  8885 ;;  divisor         2    8[COMRAM] unsigned int 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  quotient        2   10[COMRAM] unsigned int 
  8888 ;;  counter         1   12[COMRAM] unsigned char 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  2    6[COMRAM] unsigned int 
  8891 ;; Registers used:
  8892 ;;		wreg, status,2, status,0
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;Total ram usage:        7 bytes
  8903 ;; Hardware stack levels used: 1
  8904 ;; Hardware stack levels required when called: 1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_setMotorPWM
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911                           
  8912                           	psect	text62
  8913   0043F8                     __ptext62:
  8914                           	callstack 0
  8915   0043F8                     ___lwdiv:
  8916                           	callstack 25
  8917   0043F8  0E00               	movlw	0
  8918   0043FA  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  8919   0043FC  0E00               	movlw	0
  8920   0043FE  6E0B               	movwf	___lwdiv@quotient^0,c
  8921   004400  5009               	movf	___lwdiv@divisor^0,w,c
  8922   004402  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8923   004404  B4D8               	btfsc	status,2,c
  8924   004406  EF07  F022         	goto	u2511
  8925   00440A  EF09  F022         	goto	u2510
  8926   00440E                     u2511:
  8927   00440E  EF31  F022         	goto	l1206
  8928   004412                     u2510:
  8929   004412  0E01               	movlw	1
  8930   004414  6E0D               	movwf	___lwdiv@counter^0,c
  8931   004416  EF11  F022         	goto	l3345
  8932   00441A                     l3343:
  8933   00441A  90D8               	bcf	status,0,c
  8934   00441C  3609               	rlcf	___lwdiv@divisor^0,f,c
  8935   00441E  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8936   004420  2A0D               	incf	___lwdiv@counter^0,f,c
  8937   004422                     l3345:
  8938   004422  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8939   004424  EF16  F022         	goto	u2521
  8940   004428  EF18  F022         	goto	u2520
  8941   00442C                     u2521:
  8942   00442C  EF0D  F022         	goto	l3343
  8943   004430                     u2520:
  8944   004430                     l3347:
  8945   004430  90D8               	bcf	status,0,c
  8946   004432  360B               	rlcf	___lwdiv@quotient^0,f,c
  8947   004434  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8948   004436  5009               	movf	___lwdiv@divisor^0,w,c
  8949   004438  5C07               	subwf	___lwdiv@dividend^0,w,c
  8950   00443A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8951   00443C  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8952   00443E  A0D8               	btfss	status,0,c
  8953   004440  EF24  F022         	goto	u2531
  8954   004444  EF26  F022         	goto	u2530
  8955   004448                     u2531:
  8956   004448  EF2B  F022         	goto	l3355
  8957   00444C                     u2530:
  8958   00444C  5009               	movf	___lwdiv@divisor^0,w,c
  8959   00444E  5E07               	subwf	___lwdiv@dividend^0,f,c
  8960   004450  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8961   004452  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8962   004454  800B               	bsf	___lwdiv@quotient^0,0,c
  8963   004456                     l3355:
  8964   004456  90D8               	bcf	status,0,c
  8965   004458  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8966   00445A  3209               	rrcf	___lwdiv@divisor^0,f,c
  8967   00445C  2E0D               	decfsz	___lwdiv@counter^0,f,c
  8968   00445E  EF18  F022         	goto	l3347
  8969   004462                     l1206:
  8970   004462  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  8971   004466  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8972   00446A  0012               	return		;funcret
  8973   00446C                     __end_of___lwdiv:
  8974                           	callstack 0
  8975                           
  8976 ;; *************** function _Colour_decider *****************
  8977 ;; Defined at:
  8978 ;;		line 125 in file "color.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  vals            2   74[COMRAM] PTR struct RGB
  8981 ;;		 -> vals(8), 
  8982 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8983 ;;		 -> rel(12), 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  RGB_col        12    6[BANK0 ] float [3]
  8986 ;;  Hue             4   28[BANK0 ] float 
  8987 ;;  Cmin            4   22[BANK0 ] float 
  8988 ;;  Cmax            4   18[BANK0 ] float 
  8989 ;;  i               2   26[BANK0 ] int 
  8990 ;;  Cmax_i          2    4[BANK0 ] int 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  2   74[COMRAM] int 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9004 ;;Total ram usage:       38 bytes
  9005 ;; Hardware stack levels used: 1
  9006 ;; Hardware stack levels required when called: 3
  9007 ;; This function calls:
  9008 ;;		___fladd
  9009 ;;		___fldiv
  9010 ;;		___fleq
  9011 ;;		___flge
  9012 ;;		___flmul
  9013 ;;		___flsub
  9014 ;;		___xxtofl
  9015 ;; This function is called by:
  9016 ;;		_main
  9017 ;; This function uses a non-reentrant model
  9018 ;;
  9019                           
  9020                           	psect	text63
  9021   000E26                     __ptext63:
  9022                           	callstack 0
  9023   000E26                     _Colour_decider:
  9024                           	callstack 27
  9025   000E26                     
  9026                           ;color.c: 126:     float Cmax = 0;
  9027   000E26  0E00               	movlw	0
  9028   000E28  0100               	movlb	0	; () banked
  9029   000E2A  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  9030   000E2C  0E00               	movlw	0
  9031   000E2E  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  9032   000E30  0E00               	movlw	0
  9033   000E32  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  9034   000E34  0E00               	movlw	0
  9035   000E36  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  9036                           
  9037                           ;color.c: 127:     float Cmin= 100000;
  9038   000E38  0E00               	movlw	0
  9039   000E3A  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  9040   000E3C  0E50               	movlw	80
  9041   000E3E  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  9042   000E40  0EC3               	movlw	195
  9043   000E42  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  9044   000E44  0E47               	movlw	71
  9045   000E46  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  9046                           
  9047                           ;color.c: 128:     int Cmax_i =4;
  9048   000E48  0E00               	movlw	0
  9049   000E4A  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  9050   000E4C  0E04               	movlw	4
  9051   000E4E  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  9052   000E50                     
  9053                           ; BSR set to: 0
  9054                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  9055   000E50  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  9056   000E54  0E0B               	movlw	11
  9057   000E56                     u4051:
  9058   000E56  6ADE               	clrf	postinc2,c
  9059   000E58  06E8               	decf	wreg,f,c
  9060   000E5A  E2FD               	bc	u4051
  9061   000E5C                     
  9062                           ; BSR set to: 0
  9063   000E5C  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  9064   000E60  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  9065   000E64  CFDE F001          	movff	postinc2,___xxtofl@val
  9066   000E68  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9067   000E6C  0E00               	movlw	0
  9068   000E6E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9069   000E70  0EFF               	movlw	-1
  9070   000E72  6E03               	movwf	(___xxtofl@val+2)^0,c
  9071   000E74  6E04               	movwf	(___xxtofl@val+3)^0,c
  9072   000E76  0E01               	movlw	1
  9073   000E78  EC43  F01A         	call	___xxtofl
  9074   000E7C  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  9075   000E80  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  9076   000E84  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  9077   000E88  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  9078   000E8C  EE20 F002          	lfsr	2,2
  9079   000E90  504B               	movf	Colour_decider@vals^0,w,c
  9080   000E92  26D9               	addwf	fsr2l,f,c
  9081   000E94  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9082   000E96  22DA               	addwfc	fsr2h,f,c
  9083   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  9084   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9085   000EA0  0E00               	movlw	0
  9086   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9087   000EA4  0EFF               	movlw	-1
  9088   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  9089   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  9090   000EAA  0E01               	movlw	1
  9091   000EAC  EC43  F01A         	call	___xxtofl
  9092   000EB0  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  9093   000EB4  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  9094   000EB8  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  9095   000EBC  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  9096   000EC0  EE20 F004          	lfsr	2,4
  9097   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  9098   000EC6  26D9               	addwf	fsr2l,f,c
  9099   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  9100   000ECA  22DA               	addwfc	fsr2h,f,c
  9101   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  9102   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  9103   000ED4  0E00               	movlw	0
  9104   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  9105   000ED8  0EFF               	movlw	-1
  9106   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  9107   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  9108   000EDE  0E01               	movlw	1
  9109   000EE0  EC43  F01A         	call	___xxtofl
  9110   000EE4  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  9111   000EE8  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  9112   000EEC  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  9113   000EF0  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  9114   000EF4                     
  9115                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  9116   000EF4  0E00               	movlw	0
  9117   000EF6  0100               	movlb	0	; () banked
  9118   000EF8  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  9119   000EFA  0E00               	movlw	0
  9120   000EFC  6F7A               	movwf	Colour_decider@i& (0+255),b
  9121   000EFE                     l4419:
  9122                           
  9123                           ; BSR set to: 0
  9124                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  9125   000EFE  C072  F001         	movff	Colour_decider@Cmax,___flge@ff1
  9126   000F02  C073  F002         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  9127   000F06  C074  F003         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  9128   000F0A  C075  F004         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  9129   000F0E  0E66               	movlw	low Colour_decider@RGB_col
  9130   000F10  6E4F               	movwf	??_Colour_decider^0,c
  9131   000F12  0E00               	movlw	high Colour_decider@RGB_col
  9132   000F14  6E50               	movwf	(??_Colour_decider+1)^0,c
  9133   000F16  90D8               	bcf	status,0,c
  9134   000F18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9135   000F1A  6ED9               	movwf	fsr2l,c
  9136   000F1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9137   000F1E  6EDA               	movwf	fsr2h,c
  9138   000F20  90D8               	bcf	status,0,c
  9139   000F22  36D9               	rlcf	fsr2l,f,c
  9140   000F24  36DA               	rlcf	fsr2h,f,c
  9141   000F26  504F               	movf	??_Colour_decider^0,w,c
  9142   000F28  26D9               	addwf	fsr2l,f,c
  9143   000F2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  9144   000F2C  22DA               	addwfc	fsr2h,f,c
  9145   000F2E  CFDE F005          	movff	postinc2,___flge@ff2
  9146   000F32  CFDE F006          	movff	postinc2,___flge@ff2+1
  9147   000F36  CFDE F007          	movff	postinc2,___flge@ff2+2
  9148   000F3A  CFDE F008          	movff	postinc2,___flge@ff2+3
  9149   000F3E  ECF0  F01D         	call	___flge	;wreg free
  9150   000F42  B0D8               	btfsc	status,0,c
  9151   000F44  EFA6  F007         	goto	u4061
  9152   000F48  EFA8  F007         	goto	u4060
  9153   000F4C                     u4061:
  9154   000F4C  EFC5  F007         	goto	l4425
  9155   000F50                     u4060:
  9156   000F50                     
  9157                           ;color.c: 137:             Cmax=RGB_col[i];
  9158   000F50  0E66               	movlw	low Colour_decider@RGB_col
  9159   000F52  6E4F               	movwf	??_Colour_decider^0,c
  9160   000F54  0E00               	movlw	high Colour_decider@RGB_col
  9161   000F56  6E50               	movwf	(??_Colour_decider+1)^0,c
  9162   000F58  90D8               	bcf	status,0,c
  9163   000F5A  0100               	movlb	0	; () banked
  9164   000F5C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9165   000F5E  6ED9               	movwf	fsr2l,c
  9166   000F60  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9167   000F62  6EDA               	movwf	fsr2h,c
  9168   000F64  90D8               	bcf	status,0,c
  9169   000F66  36D9               	rlcf	fsr2l,f,c
  9170   000F68  36DA               	rlcf	fsr2h,f,c
  9171   000F6A  504F               	movf	??_Colour_decider^0,w,c
  9172   000F6C  26D9               	addwf	fsr2l,f,c
  9173   000F6E  5050               	movf	(??_Colour_decider+1)^0,w,c
  9174   000F70  22DA               	addwfc	fsr2h,f,c
  9175   000F72  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  9176   000F76  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  9177   000F7A  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  9178   000F7E  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  9179   000F82                     
  9180                           ; BSR set to: 0
  9181                           ;color.c: 138:             Cmax_i=i;
  9182   000F82  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  9183   000F86  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  9184   000F8A                     l4425:
  9185                           
  9186                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  9187   000F8A  0E66               	movlw	low Colour_decider@RGB_col
  9188   000F8C  6E4F               	movwf	??_Colour_decider^0,c
  9189   000F8E  0E00               	movlw	high Colour_decider@RGB_col
  9190   000F90  6E50               	movwf	(??_Colour_decider+1)^0,c
  9191   000F92  90D8               	bcf	status,0,c
  9192   000F94  0100               	movlb	0	; () banked
  9193   000F96  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9194   000F98  6ED9               	movwf	fsr2l,c
  9195   000F9A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9196   000F9C  6EDA               	movwf	fsr2h,c
  9197   000F9E  90D8               	bcf	status,0,c
  9198   000FA0  36D9               	rlcf	fsr2l,f,c
  9199   000FA2  36DA               	rlcf	fsr2h,f,c
  9200   000FA4  504F               	movf	??_Colour_decider^0,w,c
  9201   000FA6  26D9               	addwf	fsr2l,f,c
  9202   000FA8  5050               	movf	(??_Colour_decider+1)^0,w,c
  9203   000FAA  22DA               	addwfc	fsr2h,f,c
  9204   000FAC  CFDE F001          	movff	postinc2,___flge@ff1
  9205   000FB0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9206   000FB4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9207   000FB8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9208   000FBC  C076  F005         	movff	Colour_decider@Cmin,___flge@ff2
  9209   000FC0  C077  F006         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9210   000FC4  C078  F007         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9211   000FC8  C079  F008         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9212   000FCC  ECF0  F01D         	call	___flge	;wreg free
  9213   000FD0  B0D8               	btfsc	status,0,c
  9214   000FD2  EFED  F007         	goto	u4071
  9215   000FD6  EFEF  F007         	goto	u4070
  9216   000FDA                     u4071:
  9217   000FDA  EF08  F008         	goto	l4429
  9218   000FDE                     u4070:
  9219   000FDE  0E66               	movlw	low Colour_decider@RGB_col
  9220   000FE0  6E4F               	movwf	??_Colour_decider^0,c
  9221   000FE2  0E00               	movlw	high Colour_decider@RGB_col
  9222   000FE4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9223   000FE6  90D8               	bcf	status,0,c
  9224   000FE8  0100               	movlb	0	; () banked
  9225   000FEA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9226   000FEC  6ED9               	movwf	fsr2l,c
  9227   000FEE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9228   000FF0  6EDA               	movwf	fsr2h,c
  9229   000FF2  90D8               	bcf	status,0,c
  9230   000FF4  36D9               	rlcf	fsr2l,f,c
  9231   000FF6  36DA               	rlcf	fsr2h,f,c
  9232   000FF8  504F               	movf	??_Colour_decider^0,w,c
  9233   000FFA  26D9               	addwf	fsr2l,f,c
  9234   000FFC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9235   000FFE  22DA               	addwfc	fsr2h,f,c
  9236   001000  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9237   001004  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9238   001008  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9239   00100C  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9240   001010                     l4429:
  9241                           
  9242                           ;color.c: 141:     }
  9243   001010  0100               	movlb	0	; () banked
  9244   001012  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9245   001014  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9246   001016                     
  9247                           ; BSR set to: 0
  9248   001016  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9249   001018  EF17  F008         	goto	u4081
  9250   00101C  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9251   00101E  E109               	bnz	u4080
  9252   001020  0E03               	movlw	3
  9253   001022  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9254   001024  A0D8               	btfss	status,0,c
  9255   001026  EF17  F008         	goto	u4081
  9256   00102A  EF19  F008         	goto	u4080
  9257   00102E                     u4081:
  9258   00102E  EF7F  F007         	goto	l4419
  9259   001032                     u4080:
  9260   001032                     
  9261                           ; BSR set to: 0
  9262                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9263   001032  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9264   001036  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9265   00103A  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9266   00103E  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9267   001042  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9268   001046  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9269   00104A  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9270   00104E  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9271   001052  EC57  F025         	call	___flsub	;wreg free
  9272   001056  C011  F019         	movff	?___flsub,___fleq@ff1
  9273   00105A  C012  F01A         	movff	?___flsub+1,___fleq@ff1+1
  9274   00105E  C013  F01B         	movff	?___flsub+2,___fleq@ff1+2
  9275   001062  C014  F01C         	movff	?___flsub+3,___fleq@ff1+3
  9276   001066  0E00               	movlw	0
  9277   001068  6E1D               	movwf	___fleq@ff2^0,c
  9278   00106A  0E00               	movlw	0
  9279   00106C  6E1E               	movwf	(___fleq@ff2+1)^0,c
  9280   00106E  0E00               	movlw	0
  9281   001070  6E1F               	movwf	(___fleq@ff2+2)^0,c
  9282   001072  0E00               	movlw	0
  9283   001074  6E20               	movwf	(___fleq@ff2+3)^0,c
  9284   001076  EC2C  F01F         	call	___fleq	;wreg free
  9285   00107A  A0D8               	btfss	status,0,c
  9286   00107C  EF42  F008         	goto	u4091
  9287   001080  EF44  F008         	goto	u4090
  9288   001084                     u4091:
  9289   001084  EF4A  F008         	goto	l4439
  9290   001088                     u4090:
  9291   001088                     l4435:
  9292   001088  0E00               	movlw	0
  9293   00108A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9294   00108C  0E00               	movlw	0
  9295   00108E  6E4B               	movwf	?_Colour_decider^0,c
  9296   001090  EF80  F00C         	goto	l76
  9297   001094                     l4439:
  9298                           
  9299                           ;color.c: 146:     if (Cmax_i==0){
  9300   001094  0100               	movlb	0	; () banked
  9301   001096  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9302   001098  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9303   00109A  A4D8               	btfss	status,2,c
  9304   00109C  EF52  F008         	goto	u4101
  9305   0010A0  EF54  F008         	goto	u4100
  9306   0010A4                     u4101:
  9307   0010A4  EFC8  F008         	goto	l4447
  9308   0010A8                     u4100:
  9309   0010A8                     
  9310                           ; BSR set to: 0
  9311                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9312   0010A8  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9313   0010AC  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9314   0010B0  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9315   0010B4  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9316   0010B8  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9317   0010BC  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9318   0010C0  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9319   0010C4  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9320   0010C8  EC57  F025         	call	___flsub	;wreg free
  9321   0010CC  C011  F01D         	movff	?___flsub,___fldiv@a
  9322   0010D0  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9323   0010D4  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9324   0010D8  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9325   0010DC  C06E  F015         	movff	Colour_decider@RGB_col+8,___flsub@a
  9326   0010E0  C06F  F016         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9327   0010E4  C070  F017         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9328   0010E8  C071  F018         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9329   0010EC  C06A  F011         	movff	Colour_decider@RGB_col+4,___flsub@b
  9330   0010F0  C06B  F012         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9331   0010F4  C06C  F013         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9332   0010F8  C06D  F014         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9333   0010FC  EC57  F025         	call	___flsub	;wreg free
  9334   001100  C011  F019         	movff	?___flsub,___fldiv@b
  9335   001104  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9336   001108  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9337   00110C  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9338   001110  ECA5  F013         	call	___fldiv	;wreg free
  9339   001114  C019  F032         	movff	?___fldiv,___flmul@b
  9340   001118  C01A  F033         	movff	?___fldiv+1,___flmul@b+1
  9341   00111C  C01B  F034         	movff	?___fldiv+2,___flmul@b+2
  9342   001120  C01C  F035         	movff	?___fldiv+3,___flmul@b+3
  9343   001124  0E00               	movlw	0
  9344   001126  6E36               	movwf	___flmul@a^0,c
  9345   001128  0E00               	movlw	0
  9346   00112A  6E37               	movwf	(___flmul@a+1)^0,c
  9347   00112C  0E70               	movlw	112
  9348   00112E  6E38               	movwf	(___flmul@a+2)^0,c
  9349   001130  0E42               	movlw	66
  9350   001132  6E39               	movwf	(___flmul@a+3)^0,c
  9351   001134  EC90  F011         	call	___flmul	;wreg free
  9352   001138  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9353   00113C  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9354   001140  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9355   001144  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9356   001148                     
  9357                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9358   001148  0100               	movlb	0	; () banked
  9359   00114A  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9360   00114C  EFAC  F008         	goto	u4110
  9361   001150  EFAA  F008         	goto	u4111
  9362   001154                     u4111:
  9363   001154  EFA7  F009         	goto	l4457
  9364   001158                     u4110:
  9365   001158                     
  9366                           ; BSR set to: 0
  9367   001158  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9368   00115C  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9369   001160  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9370   001164  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9371   001168  0E00               	movlw	0
  9372   00116A  6E05               	movwf	___fladd@a^0,c
  9373   00116C  0E00               	movlw	0
  9374   00116E  6E06               	movwf	(___fladd@a+1)^0,c
  9375   001170  0EB4               	movlw	180
  9376   001172  6E07               	movwf	(___fladd@a+2)^0,c
  9377   001174  0E43               	movlw	67
  9378   001176  6E08               	movwf	(___fladd@a+3)^0,c
  9379   001178  EC30  F00F         	call	___fladd	;wreg free
  9380   00117C  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9381   001180  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9382   001184  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9383   001188  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9384   00118C  EFA7  F009         	goto	l4457
  9385   001190                     l4447:
  9386                           
  9387                           ; BSR set to: 0
  9388   001190  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9389   001192  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9390   001194  A4D8               	btfss	status,2,c
  9391   001196  EFCF  F008         	goto	u4121
  9392   00119A  EFD1  F008         	goto	u4120
  9393   00119E                     u4121:
  9394   00119E  EF3D  F009         	goto	l4453
  9395   0011A2                     u4120:
  9396   0011A2                     
  9397                           ; BSR set to: 0
  9398                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9399   0011A2  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9400   0011A6  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9401   0011AA  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9402   0011AE  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9403   0011B2  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9404   0011B6  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9405   0011BA  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9406   0011BE  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9407   0011C2  EC57  F025         	call	___flsub	;wreg free
  9408   0011C6  C011  F01D         	movff	?___flsub,___fldiv@a
  9409   0011CA  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9410   0011CE  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9411   0011D2  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9412   0011D6  C066  F015         	movff	Colour_decider@RGB_col,___flsub@a
  9413   0011DA  C067  F016         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9414   0011DE  C068  F017         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9415   0011E2  C069  F018         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9416   0011E6  C06E  F011         	movff	Colour_decider@RGB_col+8,___flsub@b
  9417   0011EA  C06F  F012         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9418   0011EE  C070  F013         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9419   0011F2  C071  F014         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9420   0011F6  EC57  F025         	call	___flsub	;wreg free
  9421   0011FA  C011  F019         	movff	?___flsub,___fldiv@b
  9422   0011FE  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9423   001202  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9424   001206  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9425   00120A  ECA5  F013         	call	___fldiv	;wreg free
  9426   00120E  C019  F060         	movff	?___fldiv,_Colour_decider$3049
  9427   001212  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3049+1
  9428   001216  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3049+2
  9429   00121A  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3049+3
  9430   00121E                     
  9431                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9432   00121E  0E00               	movlw	0
  9433   001220  6E05               	movwf	___fladd@a^0,c
  9434   001222  0E00               	movlw	0
  9435   001224  6E06               	movwf	(___fladd@a+1)^0,c
  9436   001226  0E00               	movlw	0
  9437   001228  6E07               	movwf	(___fladd@a+2)^0,c
  9438   00122A  0E40               	movlw	64
  9439   00122C  6E08               	movwf	(___fladd@a+3)^0,c
  9440   00122E  C060  F001         	movff	_Colour_decider$3049,___fladd@b
  9441   001232  C061  F002         	movff	_Colour_decider$3049+1,___fladd@b+1
  9442   001236  C062  F003         	movff	_Colour_decider$3049+2,___fladd@b+2
  9443   00123A  C063  F004         	movff	_Colour_decider$3049+3,___fladd@b+3
  9444   00123E  EC30  F00F         	call	___fladd	;wreg free
  9445   001242  C001  F032         	movff	?___fladd,___flmul@b
  9446   001246  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9447   00124A  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9448   00124E  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9449   001252  0E00               	movlw	0
  9450   001254  6E36               	movwf	___flmul@a^0,c
  9451   001256  0E00               	movlw	0
  9452   001258  6E37               	movwf	(___flmul@a+1)^0,c
  9453   00125A  0E70               	movlw	112
  9454   00125C  6E38               	movwf	(___flmul@a+2)^0,c
  9455   00125E  0E42               	movlw	66
  9456   001260  6E39               	movwf	(___flmul@a+3)^0,c
  9457   001262  EC90  F011         	call	___flmul	;wreg free
  9458   001266  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9459   00126A  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9460   00126E  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9461   001272  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9462                           
  9463                           ;color.c: 155:     }
  9464   001276  EFA7  F009         	goto	l4457
  9465   00127A                     l4453:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9469   00127A  C076  F015         	movff	Colour_decider@Cmin,___flsub@a
  9470   00127E  C077  F016         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9471   001282  C078  F017         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9472   001286  C079  F018         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9473   00128A  C072  F011         	movff	Colour_decider@Cmax,___flsub@b
  9474   00128E  C073  F012         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9475   001292  C074  F013         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9476   001296  C075  F014         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9477   00129A  EC57  F025         	call	___flsub	;wreg free
  9478   00129E  C011  F01D         	movff	?___flsub,___fldiv@a
  9479   0012A2  C012  F01E         	movff	?___flsub+1,___fldiv@a+1
  9480   0012A6  C013  F01F         	movff	?___flsub+2,___fldiv@a+2
  9481   0012AA  C014  F020         	movff	?___flsub+3,___fldiv@a+3
  9482   0012AE  C06A  F015         	movff	Colour_decider@RGB_col+4,___flsub@a
  9483   0012B2  C06B  F016         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9484   0012B6  C06C  F017         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9485   0012BA  C06D  F018         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9486   0012BE  C066  F011         	movff	Colour_decider@RGB_col,___flsub@b
  9487   0012C2  C067  F012         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9488   0012C6  C068  F013         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9489   0012CA  C069  F014         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9490   0012CE  EC57  F025         	call	___flsub	;wreg free
  9491   0012D2  C011  F019         	movff	?___flsub,___fldiv@b
  9492   0012D6  C012  F01A         	movff	?___flsub+1,___fldiv@b+1
  9493   0012DA  C013  F01B         	movff	?___flsub+2,___fldiv@b+2
  9494   0012DE  C014  F01C         	movff	?___flsub+3,___fldiv@b+3
  9495   0012E2  ECA5  F013         	call	___fldiv	;wreg free
  9496   0012E6  C019  F060         	movff	?___fldiv,_Colour_decider$3049
  9497   0012EA  C01A  F061         	movff	?___fldiv+1,_Colour_decider$3049+1
  9498   0012EE  C01B  F062         	movff	?___fldiv+2,_Colour_decider$3049+2
  9499   0012F2  C01C  F063         	movff	?___fldiv+3,_Colour_decider$3049+3
  9500   0012F6                     
  9501                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9502   0012F6  0E00               	movlw	0
  9503   0012F8  6E05               	movwf	___fladd@a^0,c
  9504   0012FA  0E00               	movlw	0
  9505   0012FC  6E06               	movwf	(___fladd@a+1)^0,c
  9506   0012FE  0E80               	movlw	128
  9507   001300  6E07               	movwf	(___fladd@a+2)^0,c
  9508   001302  0E40               	movlw	64
  9509   001304  6E08               	movwf	(___fladd@a+3)^0,c
  9510   001306  C060  F001         	movff	_Colour_decider$3049,___fladd@b
  9511   00130A  C061  F002         	movff	_Colour_decider$3049+1,___fladd@b+1
  9512   00130E  C062  F003         	movff	_Colour_decider$3049+2,___fladd@b+2
  9513   001312  C063  F004         	movff	_Colour_decider$3049+3,___fladd@b+3
  9514   001316  EC30  F00F         	call	___fladd	;wreg free
  9515   00131A  C001  F032         	movff	?___fladd,___flmul@b
  9516   00131E  C002  F033         	movff	?___fladd+1,___flmul@b+1
  9517   001322  C003  F034         	movff	?___fladd+2,___flmul@b+2
  9518   001326  C004  F035         	movff	?___fladd+3,___flmul@b+3
  9519   00132A  0E00               	movlw	0
  9520   00132C  6E36               	movwf	___flmul@a^0,c
  9521   00132E  0E00               	movlw	0
  9522   001330  6E37               	movwf	(___flmul@a+1)^0,c
  9523   001332  0E70               	movlw	112
  9524   001334  6E38               	movwf	(___flmul@a+2)^0,c
  9525   001336  0E42               	movlw	66
  9526   001338  6E39               	movwf	(___flmul@a+3)^0,c
  9527   00133A  EC90  F011         	call	___flmul	;wreg free
  9528   00133E  C032  F07C         	movff	?___flmul,Colour_decider@Hue
  9529   001342  C033  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9530   001346  C034  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9531   00134A  C035  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9532   00134E                     l4457:
  9533                           
  9534                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9535   00134E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9536   001352  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9537   001356  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9538   00135A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9539   00135E  0E00               	movlw	0
  9540   001360  6E05               	movwf	___flge@ff2^0,c
  9541   001362  0E00               	movlw	0
  9542   001364  6E06               	movwf	(___flge@ff2+1)^0,c
  9543   001366  0EA5               	movlw	165
  9544   001368  6E07               	movwf	(___flge@ff2+2)^0,c
  9545   00136A  0E43               	movlw	67
  9546   00136C  6E08               	movwf	(___flge@ff2+3)^0,c
  9547   00136E  ECF0  F01D         	call	___flge	;wreg free
  9548   001372  A0D8               	btfss	status,0,c
  9549   001374  EFBE  F009         	goto	u4131
  9550   001378  EFC0  F009         	goto	u4130
  9551   00137C                     u4131:
  9552   00137C  EFDF  F009         	goto	l4467
  9553   001380                     u4130:
  9554   001380  0E00               	movlw	0
  9555   001382  6E01               	movwf	___flge@ff1^0,c
  9556   001384  0E00               	movlw	0
  9557   001386  6E02               	movwf	(___flge@ff1+1)^0,c
  9558   001388  0EB4               	movlw	180
  9559   00138A  6E03               	movwf	(___flge@ff1+2)^0,c
  9560   00138C  0E43               	movlw	67
  9561   00138E  6E04               	movwf	(___flge@ff1+3)^0,c
  9562   001390  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9563   001394  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9564   001398  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9565   00139C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9566   0013A0  ECF0  F01D         	call	___flge	;wreg free
  9567   0013A4  A0D8               	btfss	status,0,c
  9568   0013A6  EFD7  F009         	goto	u4141
  9569   0013AA  EFD9  F009         	goto	u4140
  9570   0013AE                     u4141:
  9571   0013AE  EFDF  F009         	goto	l4467
  9572   0013B2                     u4140:
  9573   0013B2                     
  9574                           ;color.c: 164:         return 1;
  9575   0013B2  0E00               	movlw	0
  9576   0013B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9577   0013B6  0E01               	movlw	1
  9578   0013B8  6E4B               	movwf	?_Colour_decider^0,c
  9579   0013BA  EF80  F00C         	goto	l76
  9580   0013BE                     l4467:
  9581   0013BE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9582   0013C2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9583   0013C6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9584   0013CA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9585   0013CE  0E00               	movlw	0
  9586   0013D0  6E05               	movwf	___flge@ff2^0,c
  9587   0013D2  0E00               	movlw	0
  9588   0013D4  6E06               	movwf	(___flge@ff2+1)^0,c
  9589   0013D6  0EA0               	movlw	160
  9590   0013D8  6E07               	movwf	(___flge@ff2+2)^0,c
  9591   0013DA  0E40               	movlw	64
  9592   0013DC  6E08               	movwf	(___flge@ff2+3)^0,c
  9593   0013DE  ECF0  F01D         	call	___flge	;wreg free
  9594   0013E2  A0D8               	btfss	status,0,c
  9595   0013E4  EFF6  F009         	goto	u4151
  9596   0013E8  EFF8  F009         	goto	u4150
  9597   0013EC                     u4151:
  9598   0013EC  EF17  F00A         	goto	l4477
  9599   0013F0                     u4150:
  9600   0013F0  0E00               	movlw	0
  9601   0013F2  6E01               	movwf	___flge@ff1^0,c
  9602   0013F4  0E00               	movlw	0
  9603   0013F6  6E02               	movwf	(___flge@ff1+1)^0,c
  9604   0013F8  0E40               	movlw	64
  9605   0013FA  6E03               	movwf	(___flge@ff1+2)^0,c
  9606   0013FC  0E41               	movlw	65
  9607   0013FE  6E04               	movwf	(___flge@ff1+3)^0,c
  9608   001400  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9609   001404  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9610   001408  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9611   00140C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9612   001410  ECF0  F01D         	call	___flge	;wreg free
  9613   001414  A0D8               	btfss	status,0,c
  9614   001416  EF0F  F00A         	goto	u4161
  9615   00141A  EF11  F00A         	goto	u4160
  9616   00141E                     u4161:
  9617   00141E  EF17  F00A         	goto	l4477
  9618   001422                     u4160:
  9619   001422                     
  9620                           ;color.c: 168:         return 2;
  9621   001422  0E00               	movlw	0
  9622   001424  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9623   001426  0E02               	movlw	2
  9624   001428  6E4B               	movwf	?_Colour_decider^0,c
  9625   00142A  EF80  F00C         	goto	l76
  9626   00142E                     l4477:
  9627   00142E  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9628   001432  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9629   001436  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9630   00143A  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9631   00143E  0E00               	movlw	0
  9632   001440  6E05               	movwf	___flge@ff2^0,c
  9633   001442  0E00               	movlw	0
  9634   001444  6E06               	movwf	(___flge@ff2+1)^0,c
  9635   001446  0EA0               	movlw	160
  9636   001448  6E07               	movwf	(___flge@ff2+2)^0,c
  9637   00144A  0E41               	movlw	65
  9638   00144C  6E08               	movwf	(___flge@ff2+3)^0,c
  9639   00144E  ECF0  F01D         	call	___flge	;wreg free
  9640   001452  A0D8               	btfss	status,0,c
  9641   001454  EF2E  F00A         	goto	u4171
  9642   001458  EF30  F00A         	goto	u4170
  9643   00145C                     u4171:
  9644   00145C  EFB0  F00A         	goto	l4503
  9645   001460                     u4170:
  9646   001460  0E00               	movlw	0
  9647   001462  6E01               	movwf	___flge@ff1^0,c
  9648   001464  0E00               	movlw	0
  9649   001466  6E02               	movwf	(___flge@ff1+1)^0,c
  9650   001468  0EE8               	movlw	232
  9651   00146A  6E03               	movwf	(___flge@ff1+2)^0,c
  9652   00146C  0E41               	movlw	65
  9653   00146E  6E04               	movwf	(___flge@ff1+3)^0,c
  9654   001470  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9655   001474  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9656   001478  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9657   00147C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9658   001480  ECF0  F01D         	call	___flge	;wreg free
  9659   001484  A0D8               	btfss	status,0,c
  9660   001486  EF47  F00A         	goto	u4181
  9661   00148A  EF49  F00A         	goto	u4180
  9662   00148E                     u4181:
  9663   00148E  EFB0  F00A         	goto	l4503
  9664   001492                     u4180:
  9665   001492                     
  9666                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.25)){
  9667   001492  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9668   001496  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9669   00149A  CFDE F001          	movff	postinc2,___flge@ff1
  9670   00149E  CFDE F002          	movff	postinc2,___flge@ff1+1
  9671   0014A2  CFDE F003          	movff	postinc2,___flge@ff1+2
  9672   0014A6  CFDE F004          	movff	postinc2,___flge@ff1+3
  9673   0014AA  0ECD               	movlw	205
  9674   0014AC  6E05               	movwf	___flge@ff2^0,c
  9675   0014AE  0ECC               	movlw	204
  9676   0014B0  6E06               	movwf	(___flge@ff2+1)^0,c
  9677   0014B2  0E4C               	movlw	76
  9678   0014B4  6E07               	movwf	(___flge@ff2+2)^0,c
  9679   0014B6  0E3E               	movlw	62
  9680   0014B8  6E08               	movwf	(___flge@ff2+3)^0,c
  9681   0014BA  ECF0  F01D         	call	___flge	;wreg free
  9682   0014BE  A0D8               	btfss	status,0,c
  9683   0014C0  EF64  F00A         	goto	u4191
  9684   0014C4  EF66  F00A         	goto	u4190
  9685   0014C8                     u4191:
  9686   0014C8  EF85  F00A         	goto	l4491
  9687   0014CC                     u4190:
  9688   0014CC  0E00               	movlw	0
  9689   0014CE  6E01               	movwf	___flge@ff1^0,c
  9690   0014D0  0E00               	movlw	0
  9691   0014D2  6E02               	movwf	(___flge@ff1+1)^0,c
  9692   0014D4  0E80               	movlw	128
  9693   0014D6  6E03               	movwf	(___flge@ff1+2)^0,c
  9694   0014D8  0E3E               	movlw	62
  9695   0014DA  6E04               	movwf	(___flge@ff1+3)^0,c
  9696   0014DC  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9697   0014E0  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9698   0014E4  CFDE F005          	movff	postinc2,___flge@ff2
  9699   0014E8  CFDE F006          	movff	postinc2,___flge@ff2+1
  9700   0014EC  CFDE F007          	movff	postinc2,___flge@ff2+2
  9701   0014F0  CFDE F008          	movff	postinc2,___flge@ff2+3
  9702   0014F4  ECF0  F01D         	call	___flge	;wreg free
  9703   0014F8  A0D8               	btfss	status,0,c
  9704   0014FA  EF81  F00A         	goto	u4201
  9705   0014FE  EF83  F00A         	goto	u4200
  9706   001502                     u4201:
  9707   001502  EF85  F00A         	goto	l4491
  9708   001506                     u4200:
  9709   001506  EF44  F008         	goto	l4435
  9710   00150A                     l4491:
  9711   00150A  EE20 F008          	lfsr	2,8
  9712   00150E  504D               	movf	Colour_decider@rel^0,w,c
  9713   001510  26D9               	addwf	fsr2l,f,c
  9714   001512  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9715   001514  22DA               	addwfc	fsr2h,f,c
  9716   001516  CFDE F001          	movff	postinc2,___flge@ff1
  9717   00151A  CFDE F002          	movff	postinc2,___flge@ff1+1
  9718   00151E  CFDE F003          	movff	postinc2,___flge@ff1+2
  9719   001522  CFDE F004          	movff	postinc2,___flge@ff1+3
  9720   001526  0E29               	movlw	41
  9721   001528  6E05               	movwf	___flge@ff2^0,c
  9722   00152A  0E5C               	movlw	92
  9723   00152C  6E06               	movwf	(___flge@ff2+1)^0,c
  9724   00152E  0E0F               	movlw	15
  9725   001530  6E07               	movwf	(___flge@ff2+2)^0,c
  9726   001532  0E3E               	movlw	62
  9727   001534  6E08               	movwf	(___flge@ff2+3)^0,c
  9728   001536  ECF0  F01D         	call	___flge	;wreg free
  9729   00153A  A0D8               	btfss	status,0,c
  9730   00153C  EFA2  F00A         	goto	u4211
  9731   001540  EFA4  F00A         	goto	u4210
  9732   001544                     u4211:
  9733   001544  EFAA  F00A         	goto	l4499
  9734   001548                     u4210:
  9735   001548                     l4493:
  9736                           
  9737                           ;color.c: 179:             return 4;
  9738   001548  0E00               	movlw	0
  9739   00154A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9740   00154C  0E04               	movlw	4
  9741   00154E  6E4B               	movwf	?_Colour_decider^0,c
  9742   001550  EF80  F00C         	goto	l76
  9743   001554                     l4499:
  9744                           
  9745                           ;color.c: 182:             return 3;
  9746   001554  0E00               	movlw	0
  9747   001556  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9748   001558  0E03               	movlw	3
  9749   00155A  6E4B               	movwf	?_Colour_decider^0,c
  9750   00155C  EF80  F00C         	goto	l76
  9751   001560                     l4503:
  9752   001560  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9753   001564  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9754   001568  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9755   00156C  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9756   001570  0E00               	movlw	0
  9757   001572  6E05               	movwf	___flge@ff2^0,c
  9758   001574  0E00               	movlw	0
  9759   001576  6E06               	movwf	(___flge@ff2+1)^0,c
  9760   001578  0E34               	movlw	52
  9761   00157A  6E07               	movwf	(___flge@ff2+2)^0,c
  9762   00157C  0E42               	movlw	66
  9763   00157E  6E08               	movwf	(___flge@ff2+3)^0,c
  9764   001580  ECF0  F01D         	call	___flge	;wreg free
  9765   001584  A0D8               	btfss	status,0,c
  9766   001586  EFC7  F00A         	goto	u4221
  9767   00158A  EFC9  F00A         	goto	u4220
  9768   00158E                     u4221:
  9769   00158E  EF2E  F00B         	goto	l4527
  9770   001592                     u4220:
  9771   001592  0E00               	movlw	0
  9772   001594  6E01               	movwf	___flge@ff1^0,c
  9773   001596  0E00               	movlw	0
  9774   001598  6E02               	movwf	(___flge@ff1+1)^0,c
  9775   00159A  0EA0               	movlw	160
  9776   00159C  6E03               	movwf	(___flge@ff1+2)^0,c
  9777   00159E  0E42               	movlw	66
  9778   0015A0  6E04               	movwf	(___flge@ff1+3)^0,c
  9779   0015A2  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9780   0015A6  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9781   0015AA  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9782   0015AE  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9783   0015B2  ECF0  F01D         	call	___flge	;wreg free
  9784   0015B6  A0D8               	btfss	status,0,c
  9785   0015B8  EFE0  F00A         	goto	u4231
  9786   0015BC  EFE2  F00A         	goto	u4230
  9787   0015C0                     u4231:
  9788   0015C0  EF2E  F00B         	goto	l4527
  9789   0015C4                     u4230:
  9790   0015C4                     
  9791                           ;color.c: 188:         if(0.15<=rel->B){
  9792   0015C4  EE20 F008          	lfsr	2,8
  9793   0015C8  504D               	movf	Colour_decider@rel^0,w,c
  9794   0015CA  26D9               	addwf	fsr2l,f,c
  9795   0015CC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9796   0015CE  22DA               	addwfc	fsr2h,f,c
  9797   0015D0  CFDE F001          	movff	postinc2,___flge@ff1
  9798   0015D4  CFDE F002          	movff	postinc2,___flge@ff1+1
  9799   0015D8  CFDE F003          	movff	postinc2,___flge@ff1+2
  9800   0015DC  CFDE F004          	movff	postinc2,___flge@ff1+3
  9801   0015E0  0E9A               	movlw	154
  9802   0015E2  6E05               	movwf	___flge@ff2^0,c
  9803   0015E4  0E99               	movlw	153
  9804   0015E6  6E06               	movwf	(___flge@ff2+1)^0,c
  9805   0015E8  0E19               	movlw	25
  9806   0015EA  6E07               	movwf	(___flge@ff2+2)^0,c
  9807   0015EC  0E3E               	movlw	62
  9808   0015EE  6E08               	movwf	(___flge@ff2+3)^0,c
  9809   0015F0  ECF0  F01D         	call	___flge	;wreg free
  9810   0015F4  A0D8               	btfss	status,0,c
  9811   0015F6  EFFF  F00A         	goto	u4241
  9812   0015FA  EF01  F00B         	goto	u4240
  9813   0015FE                     u4241:
  9814   0015FE  EF03  F00B         	goto	l4515
  9815   001602                     u4240:
  9816   001602  EFA4  F00A         	goto	l4493
  9817   001606                     l4515:
  9818   001606  EE20 F008          	lfsr	2,8
  9819   00160A  504D               	movf	Colour_decider@rel^0,w,c
  9820   00160C  26D9               	addwf	fsr2l,f,c
  9821   00160E  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9822   001610  22DA               	addwfc	fsr2h,f,c
  9823   001612  CFDE F001          	movff	postinc2,___flge@ff1
  9824   001616  CFDE F002          	movff	postinc2,___flge@ff1+1
  9825   00161A  CFDE F003          	movff	postinc2,___flge@ff1+2
  9826   00161E  CFDE F004          	movff	postinc2,___flge@ff1+3
  9827   001622  0E8F               	movlw	143
  9828   001624  6E05               	movwf	___flge@ff2^0,c
  9829   001626  0EC2               	movlw	194
  9830   001628  6E06               	movwf	(___flge@ff2+1)^0,c
  9831   00162A  0EF5               	movlw	245
  9832   00162C  6E07               	movwf	(___flge@ff2+2)^0,c
  9833   00162E  0E3D               	movlw	61
  9834   001630  6E08               	movwf	(___flge@ff2+3)^0,c
  9835   001632  ECF0  F01D         	call	___flge	;wreg free
  9836   001636  A0D8               	btfss	status,0,c
  9837   001638  EF20  F00B         	goto	u4251
  9838   00163C  EF22  F00B         	goto	u4250
  9839   001640                     u4251:
  9840   001640  EF28  F00B         	goto	l4523
  9841   001644                     u4250:
  9842   001644                     l4517:
  9843                           
  9844                           ;color.c: 192:             return 6;
  9845   001644  0E00               	movlw	0
  9846   001646  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9847   001648  0E06               	movlw	6
  9848   00164A  6E4B               	movwf	?_Colour_decider^0,c
  9849   00164C  EF80  F00C         	goto	l76
  9850   001650                     l4523:
  9851                           
  9852                           ;color.c: 195:             return 5;
  9853   001650  0E00               	movlw	0
  9854   001652  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9855   001654  0E05               	movlw	5
  9856   001656  6E4B               	movwf	?_Colour_decider^0,c
  9857   001658  EF80  F00C         	goto	l76
  9858   00165C                     l4527:
  9859   00165C  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9860   001660  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9861   001664  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9862   001668  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9863   00166C  0E00               	movlw	0
  9864   00166E  6E05               	movwf	___flge@ff2^0,c
  9865   001670  0E00               	movlw	0
  9866   001672  6E06               	movwf	(___flge@ff2+1)^0,c
  9867   001674  0EA2               	movlw	162
  9868   001676  6E07               	movwf	(___flge@ff2+2)^0,c
  9869   001678  0E42               	movlw	66
  9870   00167A  6E08               	movwf	(___flge@ff2+3)^0,c
  9871   00167C  ECF0  F01D         	call	___flge	;wreg free
  9872   001680  A0D8               	btfss	status,0,c
  9873   001682  EF45  F00B         	goto	u4261
  9874   001686  EF47  F00B         	goto	u4260
  9875   00168A                     u4261:
  9876   00168A  EF81  F00B         	goto	l4543
  9877   00168E                     u4260:
  9878   00168E  0E00               	movlw	0
  9879   001690  6E01               	movwf	___flge@ff1^0,c
  9880   001692  0E00               	movlw	0
  9881   001694  6E02               	movwf	(___flge@ff1+1)^0,c
  9882   001696  0EE6               	movlw	230
  9883   001698  6E03               	movwf	(___flge@ff1+2)^0,c
  9884   00169A  0E42               	movlw	66
  9885   00169C  6E04               	movwf	(___flge@ff1+3)^0,c
  9886   00169E  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9887   0016A2  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9888   0016A6  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9889   0016AA  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9890   0016AE  ECF0  F01D         	call	___flge	;wreg free
  9891   0016B2  A0D8               	btfss	status,0,c
  9892   0016B4  EF5E  F00B         	goto	u4271
  9893   0016B8  EF60  F00B         	goto	u4270
  9894   0016BC                     u4271:
  9895   0016BC  EF81  F00B         	goto	l4543
  9896   0016C0                     u4270:
  9897   0016C0                     
  9898                           ;color.c: 201:         if(0.15<=rel->B){
  9899   0016C0  EE20 F008          	lfsr	2,8
  9900   0016C4  504D               	movf	Colour_decider@rel^0,w,c
  9901   0016C6  26D9               	addwf	fsr2l,f,c
  9902   0016C8  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9903   0016CA  22DA               	addwfc	fsr2h,f,c
  9904   0016CC  CFDE F001          	movff	postinc2,___flge@ff1
  9905   0016D0  CFDE F002          	movff	postinc2,___flge@ff1+1
  9906   0016D4  CFDE F003          	movff	postinc2,___flge@ff1+2
  9907   0016D8  CFDE F004          	movff	postinc2,___flge@ff1+3
  9908   0016DC  0E9A               	movlw	154
  9909   0016DE  6E05               	movwf	___flge@ff2^0,c
  9910   0016E0  0E99               	movlw	153
  9911   0016E2  6E06               	movwf	(___flge@ff2+1)^0,c
  9912   0016E4  0E19               	movlw	25
  9913   0016E6  6E07               	movwf	(___flge@ff2+2)^0,c
  9914   0016E8  0E3E               	movlw	62
  9915   0016EA  6E08               	movwf	(___flge@ff2+3)^0,c
  9916   0016EC  ECF0  F01D         	call	___flge	;wreg free
  9917   0016F0  A0D8               	btfss	status,0,c
  9918   0016F2  EF7D  F00B         	goto	u4281
  9919   0016F6  EF7F  F00B         	goto	u4280
  9920   0016FA                     u4281:
  9921   0016FA  EF22  F00B         	goto	l4517
  9922   0016FE                     u4280:
  9923   0016FE  EFA4  F00A         	goto	l4493
  9924   001702                     l4543:
  9925   001702  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9926   001706  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9927   00170A  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9928   00170E  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9929   001712  0E00               	movlw	0
  9930   001714  6E05               	movwf	___flge@ff2^0,c
  9931   001716  0E00               	movlw	0
  9932   001718  6E06               	movwf	(___flge@ff2+1)^0,c
  9933   00171A  0EF0               	movlw	240
  9934   00171C  6E07               	movwf	(___flge@ff2+2)^0,c
  9935   00171E  0E41               	movlw	65
  9936   001720  6E08               	movwf	(___flge@ff2+3)^0,c
  9937   001722  ECF0  F01D         	call	___flge	;wreg free
  9938   001726  A0D8               	btfss	status,0,c
  9939   001728  EF98  F00B         	goto	u4291
  9940   00172C  EF9A  F00B         	goto	u4290
  9941   001730                     u4291:
  9942   001730  EFB3  F00B         	goto	l4547
  9943   001734                     u4290:
  9944   001734  0E00               	movlw	0
  9945   001736  6E01               	movwf	___flge@ff1^0,c
  9946   001738  0E00               	movlw	0
  9947   00173A  6E02               	movwf	(___flge@ff1+1)^0,c
  9948   00173C  0E68               	movlw	104
  9949   00173E  6E03               	movwf	(___flge@ff1+2)^0,c
  9950   001740  0E42               	movlw	66
  9951   001742  6E04               	movwf	(___flge@ff1+3)^0,c
  9952   001744  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9953   001748  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9954   00174C  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9955   001750  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9956   001754  ECF0  F01D         	call	___flge	;wreg free
  9957   001758  B0D8               	btfsc	status,0,c
  9958   00175A  EFB1  F00B         	goto	u4301
  9959   00175E  EFB3  F00B         	goto	u4300
  9960   001762                     u4301:
  9961   001762  EFA4  F00A         	goto	l4493
  9962   001766                     u4300:
  9963   001766                     l4547:
  9964   001766  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
  9965   00176A  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9966   00176E  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9967   001772  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9968   001776  0E00               	movlw	0
  9969   001778  6E05               	movwf	___flge@ff2^0,c
  9970   00177A  0E00               	movlw	0
  9971   00177C  6E06               	movwf	(___flge@ff2+1)^0,c
  9972   00177E  0EF0               	movlw	240
  9973   001780  6E07               	movwf	(___flge@ff2+2)^0,c
  9974   001782  0E42               	movlw	66
  9975   001784  6E08               	movwf	(___flge@ff2+3)^0,c
  9976   001786  ECF0  F01D         	call	___flge	;wreg free
  9977   00178A  A0D8               	btfss	status,0,c
  9978   00178C  EFCA  F00B         	goto	u4311
  9979   001790  EFCC  F00B         	goto	u4310
  9980   001794                     u4311:
  9981   001794  EFE7  F00B         	goto	l4557
  9982   001798                     u4310:
  9983   001798  0E00               	movlw	0
  9984   00179A  6E01               	movwf	___flge@ff1^0,c
  9985   00179C  0E00               	movlw	0
  9986   00179E  6E02               	movwf	(___flge@ff1+1)^0,c
  9987   0017A0  0E5C               	movlw	92
  9988   0017A2  6E03               	movwf	(___flge@ff1+2)^0,c
  9989   0017A4  0E43               	movlw	67
  9990   0017A6  6E04               	movwf	(___flge@ff1+3)^0,c
  9991   0017A8  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
  9992   0017AC  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9993   0017B0  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9994   0017B4  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9995   0017B8  ECF0  F01D         	call	___flge	;wreg free
  9996   0017BC  A0D8               	btfss	status,0,c
  9997   0017BE  EFE3  F00B         	goto	u4321
  9998   0017C2  EFE5  F00B         	goto	u4320
  9999   0017C6                     u4321:
 10000   0017C6  EFE7  F00B         	goto	l4557
 10001   0017CA                     u4320:
 10002   0017CA  EFA4  F00A         	goto	l4493
 10003   0017CE                     l4557:
 10004   0017CE  C07C  F001         	movff	Colour_decider@Hue,___flge@ff1
 10005   0017D2  C07D  F002         	movff	Colour_decider@Hue+1,___flge@ff1+1
 10006   0017D6  C07E  F003         	movff	Colour_decider@Hue+2,___flge@ff1+2
 10007   0017DA  C07F  F004         	movff	Colour_decider@Hue+3,___flge@ff1+3
 10008   0017DE  0E00               	movlw	0
 10009   0017E0  6E05               	movwf	___flge@ff2^0,c
 10010   0017E2  0E00               	movlw	0
 10011   0017E4  6E06               	movwf	(___flge@ff2+1)^0,c
 10012   0017E6  0E60               	movlw	96
 10013   0017E8  6E07               	movwf	(___flge@ff2+2)^0,c
 10014   0017EA  0E41               	movlw	65
 10015   0017EC  6E08               	movwf	(___flge@ff2+3)^0,c
 10016   0017EE  ECF0  F01D         	call	___flge	;wreg free
 10017   0017F2  A0D8               	btfss	status,0,c
 10018   0017F4  EFFE  F00B         	goto	u4331
 10019   0017F8  EF00  F00C         	goto	u4330
 10020   0017FC                     u4331:
 10021   0017FC  EF7C  F00C         	goto	l4583
 10022   001800                     u4330:
 10023   001800  0E00               	movlw	0
 10024   001802  6E01               	movwf	___flge@ff1^0,c
 10025   001804  0E00               	movlw	0
 10026   001806  6E02               	movwf	(___flge@ff1+1)^0,c
 10027   001808  0E98               	movlw	152
 10028   00180A  6E03               	movwf	(___flge@ff1+2)^0,c
 10029   00180C  0E41               	movlw	65
 10030   00180E  6E04               	movwf	(___flge@ff1+3)^0,c
 10031   001810  C07C  F005         	movff	Colour_decider@Hue,___flge@ff2
 10032   001814  C07D  F006         	movff	Colour_decider@Hue+1,___flge@ff2+1
 10033   001818  C07E  F007         	movff	Colour_decider@Hue+2,___flge@ff2+2
 10034   00181C  C07F  F008         	movff	Colour_decider@Hue+3,___flge@ff2+3
 10035   001820  ECF0  F01D         	call	___flge	;wreg free
 10036   001824  A0D8               	btfss	status,0,c
 10037   001826  EF17  F00C         	goto	u4341
 10038   00182A  EF19  F00C         	goto	u4340
 10039   00182E                     u4341:
 10040   00182E  EF7C  F00C         	goto	l4583
 10041   001832                     u4340:
 10042   001832                     
 10043                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 10044   001832  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10045   001836  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10046   00183A  CFDE F001          	movff	postinc2,___flge@ff1
 10047   00183E  CFDE F002          	movff	postinc2,___flge@ff1+1
 10048   001842  CFDE F003          	movff	postinc2,___flge@ff1+2
 10049   001846  CFDE F004          	movff	postinc2,___flge@ff1+3
 10050   00184A  0ECD               	movlw	205
 10051   00184C  6E05               	movwf	___flge@ff2^0,c
 10052   00184E  0ECC               	movlw	204
 10053   001850  6E06               	movwf	(___flge@ff2+1)^0,c
 10054   001852  0E4C               	movlw	76
 10055   001854  6E07               	movwf	(___flge@ff2+2)^0,c
 10056   001856  0E3E               	movlw	62
 10057   001858  6E08               	movwf	(___flge@ff2+3)^0,c
 10058   00185A  ECF0  F01D         	call	___flge	;wreg free
 10059   00185E  A0D8               	btfss	status,0,c
 10060   001860  EF34  F00C         	goto	u4351
 10061   001864  EF36  F00C         	goto	u4350
 10062   001868                     u4351:
 10063   001868  EF55  F00C         	goto	l4571
 10064   00186C                     u4350:
 10065   00186C  0E1F               	movlw	31
 10066   00186E  6E01               	movwf	___flge@ff1^0,c
 10067   001870  0E85               	movlw	133
 10068   001872  6E02               	movwf	(___flge@ff1+1)^0,c
 10069   001874  0E6B               	movlw	107
 10070   001876  6E03               	movwf	(___flge@ff1+2)^0,c
 10071   001878  0E3E               	movlw	62
 10072   00187A  6E04               	movwf	(___flge@ff1+3)^0,c
 10073   00187C  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 10074   001880  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 10075   001884  CFDE F005          	movff	postinc2,___flge@ff2
 10076   001888  CFDE F006          	movff	postinc2,___flge@ff2+1
 10077   00188C  CFDE F007          	movff	postinc2,___flge@ff2+2
 10078   001890  CFDE F008          	movff	postinc2,___flge@ff2+3
 10079   001894  ECF0  F01D         	call	___flge	;wreg free
 10080   001898  A0D8               	btfss	status,0,c
 10081   00189A  EF51  F00C         	goto	u4361
 10082   00189E  EF53  F00C         	goto	u4360
 10083   0018A2                     u4361:
 10084   0018A2  EF55  F00C         	goto	l4571
 10085   0018A6                     u4360:
 10086   0018A6  EF44  F008         	goto	l4435
 10087   0018AA                     l4571:
 10088   0018AA  EE20 F008          	lfsr	2,8
 10089   0018AE  504D               	movf	Colour_decider@rel^0,w,c
 10090   0018B0  26D9               	addwf	fsr2l,f,c
 10091   0018B2  504E               	movf	(Colour_decider@rel+1)^0,w,c
 10092   0018B4  22DA               	addwfc	fsr2h,f,c
 10093   0018B6  CFDE F001          	movff	postinc2,___flge@ff1
 10094   0018BA  CFDE F002          	movff	postinc2,___flge@ff1+1
 10095   0018BE  CFDE F003          	movff	postinc2,___flge@ff1+2
 10096   0018C2  CFDE F004          	movff	postinc2,___flge@ff1+3
 10097   0018C6  0E9A               	movlw	154
 10098   0018C8  6E05               	movwf	___flge@ff2^0,c
 10099   0018CA  0E99               	movlw	153
 10100   0018CC  6E06               	movwf	(___flge@ff2+1)^0,c
 10101   0018CE  0E19               	movlw	25
 10102   0018D0  6E07               	movwf	(___flge@ff2+2)^0,c
 10103   0018D2  0E3E               	movlw	62
 10104   0018D4  6E08               	movwf	(___flge@ff2+3)^0,c
 10105   0018D6  ECF0  F01D         	call	___flge	;wreg free
 10106   0018DA  A0D8               	btfss	status,0,c
 10107   0018DC  EF72  F00C         	goto	u4371
 10108   0018E0  EF74  F00C         	goto	u4370
 10109   0018E4                     u4371:
 10110   0018E4  EF76  F00C         	goto	l4579
 10111   0018E8                     u4370:
 10112   0018E8  EFA4  F00A         	goto	l4493
 10113   0018EC                     l4579:
 10114                           
 10115                           ;color.c: 223:             return 7;
 10116   0018EC  0E00               	movlw	0
 10117   0018EE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10118   0018F0  0E07               	movlw	7
 10119   0018F2  6E4B               	movwf	?_Colour_decider^0,c
 10120   0018F4  EF80  F00C         	goto	l76
 10121   0018F8                     l4583:
 10122                           
 10123                           ;color.c: 227:         return 10;
 10124   0018F8  0E00               	movlw	0
 10125   0018FA  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10126   0018FC  0E0A               	movlw	10
 10127   0018FE  6E4B               	movwf	?_Colour_decider^0,c
 10128   001900                     l76:
 10129   001900  0012               	return		;funcret
 10130   001902                     __end_of_Colour_decider:
 10131                           	callstack 0
 10132                           
 10133 ;; *************** function ___xxtofl *****************
 10134 ;; Defined at:
 10135 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;  sign            1    wreg     unsigned char 
 10138 ;;  val             4    0[COMRAM] long 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  sign            1    8[COMRAM] unsigned char 
 10141 ;;  arg             4   10[COMRAM] unsigned long 
 10142 ;;  exp             1    9[COMRAM] unsigned char 
 10143 ;; Return value:  Size  Location     Type
 10144 ;;                  4    0[COMRAM] unsigned char 
 10145 ;; Registers used:
 10146 ;;		wreg, status,2, status,0
 10147 ;; Tracked objects:
 10148 ;;		On entry : 0/0
 10149 ;;		On exit  : 0/0
 10150 ;;		Unchanged: 0/0
 10151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10153 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10154 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10155 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10156 ;;Total ram usage:       14 bytes
 10157 ;; Hardware stack levels used: 1
 10158 ;; Hardware stack levels required when called: 1
 10159 ;; This function calls:
 10160 ;;		Nothing
 10161 ;; This function is called by:
 10162 ;;		_colour_rel
 10163 ;;		_Colour_decider
 10164 ;;		_reverseOneBlock
 10165 ;;		_ForwardOneBlock
 10166 ;;		_Forwardhalfblock
 10167 ;;		_Backhalfblock
 10168 ;; This function uses a non-reentrant model
 10169 ;;
 10170                           
 10171                           	psect	text64
 10172   003486                     __ptext64:
 10173                           	callstack 0
 10174   003486                     ___xxtofl:
 10175                           	callstack 28
 10176                           
 10177                           ;incstack = 0
 10178                           ;___xxtofl@sign stored from wreg
 10179   003486  6E09               	movwf	___xxtofl@sign^0,c
 10180   003488  5009               	movf	___xxtofl@sign^0,w,c
 10181   00348A  B4D8               	btfsc	status,2,c
 10182   00348C  EF4A  F01A         	goto	u3941
 10183   003490  EF4C  F01A         	goto	u3940
 10184   003494                     u3941:
 10185   003494  EF6E  F01A         	goto	l1370
 10186   003498                     u3940:
 10187   003498  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10188   00349A  EF53  F01A         	goto	u3950
 10189   00349E  EF51  F01A         	goto	u3951
 10190   0034A2                     u3951:
 10191   0034A2  EF6E  F01A         	goto	l1370
 10192   0034A6                     u3950:
 10193   0034A6  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10194   0034AA  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10195   0034AE  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10196   0034B2  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10197   0034B6  1E05               	comf	??___xxtofl^0,f,c
 10198   0034B8  1E06               	comf	(??___xxtofl+1)^0,f,c
 10199   0034BA  1E07               	comf	(??___xxtofl+2)^0,f,c
 10200   0034BC  1E08               	comf	(??___xxtofl+3)^0,f,c
 10201   0034BE  2A05               	incf	??___xxtofl^0,f,c
 10202   0034C0  0E00               	movlw	0
 10203   0034C2  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10204   0034C4  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10205   0034C6  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10206   0034C8  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10207   0034CC  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10208   0034D0  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10209   0034D4  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10210   0034D8  EF76  F01A         	goto	l4305
 10211   0034DC                     l1370:
 10212   0034DC  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10213   0034E0  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10214   0034E4  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10215   0034E8  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10216   0034EC                     l4305:
 10217   0034EC  5001               	movf	___xxtofl@val^0,w,c
 10218   0034EE  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10219   0034F0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10220   0034F2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10221   0034F4  A4D8               	btfss	status,2,c
 10222   0034F6  EF7F  F01A         	goto	u3961
 10223   0034FA  EF81  F01A         	goto	u3960
 10224   0034FE                     u3961:
 10225   0034FE  EF8B  F01A         	goto	l4311
 10226   003502                     u3960:
 10227   003502  0E00               	movlw	0
 10228   003504  6E01               	movwf	?___xxtofl^0,c
 10229   003506  0E00               	movlw	0
 10230   003508  6E02               	movwf	(?___xxtofl+1)^0,c
 10231   00350A  0E00               	movlw	0
 10232   00350C  6E03               	movwf	(?___xxtofl+2)^0,c
 10233   00350E  0E00               	movlw	0
 10234   003510  6E04               	movwf	(?___xxtofl+3)^0,c
 10235   003512  EF1C  F01B         	goto	l1373
 10236   003516                     l4311:
 10237   003516  0E96               	movlw	150
 10238   003518  6E0A               	movwf	___xxtofl@exp^0,c
 10239   00351A  EF95  F01A         	goto	l4315
 10240   00351E                     l4313:
 10241   00351E  2A0A               	incf	___xxtofl@exp^0,f,c
 10242   003520  90D8               	bcf	status,0,c
 10243   003522  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10244   003524  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10245   003526  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10246   003528  320B               	rrcf	___xxtofl@arg^0,f,c
 10247   00352A                     l4315:
 10248   00352A  0E00               	movlw	0
 10249   00352C  140B               	andwf	___xxtofl@arg^0,w,c
 10250   00352E  6E05               	movwf	??___xxtofl^0,c
 10251   003530  0E00               	movlw	0
 10252   003532  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10253   003534  6E06               	movwf	(??___xxtofl+1)^0,c
 10254   003536  0E00               	movlw	0
 10255   003538  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10256   00353A  6E07               	movwf	(??___xxtofl+2)^0,c
 10257   00353C  0EFE               	movlw	254
 10258   00353E  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10259   003540  6E08               	movwf	(??___xxtofl+3)^0,c
 10260   003542  5005               	movf	??___xxtofl^0,w,c
 10261   003544  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10262   003546  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10263   003548  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10264   00354A  A4D8               	btfss	status,2,c
 10265   00354C  EFAA  F01A         	goto	u3971
 10266   003550  EFAC  F01A         	goto	u3970
 10267   003554                     u3971:
 10268   003554  EF8F  F01A         	goto	l4313
 10269   003558                     u3970:
 10270   003558  EFBA  F01A         	goto	l1377
 10271   00355C                     l4317:
 10272   00355C  2A0A               	incf	___xxtofl@exp^0,f,c
 10273   00355E  0E01               	movlw	1
 10274   003560  260B               	addwf	___xxtofl@arg^0,f,c
 10275   003562  0E00               	movlw	0
 10276   003564  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10277   003566  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10278   003568  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10279   00356A  90D8               	bcf	status,0,c
 10280   00356C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10281   00356E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10282   003570  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10283   003572  320B               	rrcf	___xxtofl@arg^0,f,c
 10284   003574                     l1377:
 10285   003574  0E00               	movlw	0
 10286   003576  140B               	andwf	___xxtofl@arg^0,w,c
 10287   003578  6E05               	movwf	??___xxtofl^0,c
 10288   00357A  0E00               	movlw	0
 10289   00357C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10290   00357E  6E06               	movwf	(??___xxtofl+1)^0,c
 10291   003580  0E00               	movlw	0
 10292   003582  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10293   003584  6E07               	movwf	(??___xxtofl+2)^0,c
 10294   003586  0EFF               	movlw	255
 10295   003588  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10296   00358A  6E08               	movwf	(??___xxtofl+3)^0,c
 10297   00358C  5005               	movf	??___xxtofl^0,w,c
 10298   00358E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10299   003590  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10300   003592  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10301   003594  A4D8               	btfss	status,2,c
 10302   003596  EFCF  F01A         	goto	u3981
 10303   00359A  EFD1  F01A         	goto	u3980
 10304   00359E                     u3981:
 10305   00359E  EFAE  F01A         	goto	l4317
 10306   0035A2                     u3980:
 10307   0035A2  EFD9  F01A         	goto	l4325
 10308   0035A6                     l4323:
 10309   0035A6  060A               	decf	___xxtofl@exp^0,f,c
 10310   0035A8  90D8               	bcf	status,0,c
 10311   0035AA  360B               	rlcf	___xxtofl@arg^0,f,c
 10312   0035AC  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10313   0035AE  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10314   0035B0  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10315   0035B2                     l4325:
 10316   0035B2  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10317   0035B4  EFDE  F01A         	goto	u3991
 10318   0035B8  EFE0  F01A         	goto	u3990
 10319   0035BC                     u3991:
 10320   0035BC  EFE8  F01A         	goto	l1384
 10321   0035C0                     u3990:
 10322   0035C0  0E02               	movlw	2
 10323   0035C2  600A               	cpfslt	___xxtofl@exp^0,c
 10324   0035C4  EFE6  F01A         	goto	u4001
 10325   0035C8  EFE8  F01A         	goto	u4000
 10326   0035CC                     u4001:
 10327   0035CC  EFD3  F01A         	goto	l4323
 10328   0035D0                     u4000:
 10329   0035D0                     l1384:
 10330   0035D0  B00A               	btfsc	___xxtofl@exp^0,0,c
 10331   0035D2  EFED  F01A         	goto	u4011
 10332   0035D6  EFEF  F01A         	goto	u4010
 10333   0035DA                     u4011:
 10334   0035DA  EFF0  F01A         	goto	l4331
 10335   0035DE                     u4010:
 10336   0035DE  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10337   0035E0                     l4331:
 10338   0035E0  90D8               	bcf	status,0,c
 10339   0035E2  320A               	rrcf	___xxtofl@exp^0,f,c
 10340   0035E4  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10341   0035E8  6A06               	clrf	(??___xxtofl+1)^0,c
 10342   0035EA  6A07               	clrf	(??___xxtofl+2)^0,c
 10343   0035EC  6A08               	clrf	(??___xxtofl+3)^0,c
 10344   0035EE  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10345   0035F2  6A07               	clrf	(??___xxtofl+2)^0,c
 10346   0035F4  6A06               	clrf	(??___xxtofl+1)^0,c
 10347   0035F6  6A05               	clrf	??___xxtofl^0,c
 10348   0035F8  5005               	movf	??___xxtofl^0,w,c
 10349   0035FA  120B               	iorwf	___xxtofl@arg^0,f,c
 10350   0035FC  5006               	movf	(??___xxtofl+1)^0,w,c
 10351   0035FE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10352   003600  5007               	movf	(??___xxtofl+2)^0,w,c
 10353   003602  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10354   003604  5008               	movf	(??___xxtofl+3)^0,w,c
 10355   003606  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10356   003608  5009               	movf	___xxtofl@sign^0,w,c
 10357   00360A  B4D8               	btfsc	status,2,c
 10358   00360C  EF0A  F01B         	goto	u4021
 10359   003610  EF0C  F01B         	goto	u4020
 10360   003614                     u4021:
 10361   003614  EF14  F01B         	goto	l4341
 10362   003618                     u4020:
 10363   003618  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10364   00361A  EF13  F01B         	goto	u4030
 10365   00361E  EF11  F01B         	goto	u4031
 10366   003622                     u4031:
 10367   003622  EF14  F01B         	goto	l4341
 10368   003626                     u4030:
 10369   003626  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10370   003628                     l4341:
 10371   003628  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10372   00362C  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10373   003630  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10374   003634  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10375   003638                     l1373:
 10376   003638  0012               	return		;funcret
 10377   00363A                     __end_of___xxtofl:
 10378                           	callstack 0
 10379                           
 10380 ;; *************** function ___flsub *****************
 10381 ;; Defined at:
 10382 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  b               4   16[COMRAM] unsigned char 
 10385 ;;  a               4   20[COMRAM] unsigned char 
 10386 ;; Auto vars:     Size  Location     Type
 10387 ;;		None
 10388 ;; Return value:  Size  Location     Type
 10389 ;;                  4   16[COMRAM] unsigned char 
 10390 ;; Registers used:
 10391 ;;		wreg, status,2, status,0, cstack
 10392 ;; Tracked objects:
 10393 ;;		On entry : 0/0
 10394 ;;		On exit  : 0/0
 10395 ;;		Unchanged: 0/0
 10396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10397 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10400 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10401 ;;Total ram usage:        8 bytes
 10402 ;; Hardware stack levels used: 1
 10403 ;; Hardware stack levels required when called: 2
 10404 ;; This function calls:
 10405 ;;		___fladd
 10406 ;; This function is called by:
 10407 ;;		_Colour_decider
 10408 ;; This function uses a non-reentrant model
 10409 ;;
 10410                           
 10411                           	psect	text65
 10412   004AAE                     __ptext65:
 10413                           	callstack 0
 10414   004AAE                     ___flsub:
 10415                           	callstack 27
 10416   004AAE  0E00               	movlw	0
 10417   004AB0  1A15               	xorwf	___flsub@a^0,f,c
 10418   004AB2  0E00               	movlw	0
 10419   004AB4  1A16               	xorwf	(___flsub@a+1)^0,f,c
 10420   004AB6  0E00               	movlw	0
 10421   004AB8  1A17               	xorwf	(___flsub@a+2)^0,f,c
 10422   004ABA  0E80               	movlw	128
 10423   004ABC  1A18               	xorwf	(___flsub@a+3)^0,f,c
 10424   004ABE  C011  F001         	movff	___flsub@b,___fladd@b
 10425   004AC2  C012  F002         	movff	___flsub@b+1,___fladd@b+1
 10426   004AC6  C013  F003         	movff	___flsub@b+2,___fladd@b+2
 10427   004ACA  C014  F004         	movff	___flsub@b+3,___fladd@b+3
 10428   004ACE  C015  F005         	movff	___flsub@a,___fladd@a
 10429   004AD2  C016  F006         	movff	___flsub@a+1,___fladd@a+1
 10430   004AD6  C017  F007         	movff	___flsub@a+2,___fladd@a+2
 10431   004ADA  C018  F008         	movff	___flsub@a+3,___fladd@a+3
 10432   004ADE  EC30  F00F         	call	___fladd	;wreg free
 10433   004AE2  C001  F011         	movff	?___fladd,?___flsub
 10434   004AE6  C002  F012         	movff	?___fladd+1,?___flsub+1
 10435   004AEA  C003  F013         	movff	?___fladd+2,?___flsub+2
 10436   004AEE  C004  F014         	movff	?___fladd+3,?___flsub+3
 10437   004AF2  0012               	return		;funcret
 10438   004AF4                     __end_of___flsub:
 10439                           	callstack 0
 10440                           
 10441 ;; *************** function ___fladd *****************
 10442 ;; Defined at:
 10443 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  b               4    0[COMRAM] unsigned char 
 10446 ;;  a               4    4[COMRAM] unsigned char 
 10447 ;; Auto vars:     Size  Location     Type
 10448 ;;  grs             1   15[COMRAM] unsigned char 
 10449 ;;  bexp            1   14[COMRAM] unsigned char 
 10450 ;;  aexp            1   13[COMRAM] unsigned char 
 10451 ;;  signs           1   12[COMRAM] unsigned char 
 10452 ;; Return value:  Size  Location     Type
 10453 ;;                  4    0[COMRAM] unsigned char 
 10454 ;; Registers used:
 10455 ;;		wreg, status,2, status,0
 10456 ;; Tracked objects:
 10457 ;;		On entry : 0/0
 10458 ;;		On exit  : 0/0
 10459 ;;		Unchanged: 0/0
 10460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10461 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10462 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10464 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10465 ;;Total ram usage:       16 bytes
 10466 ;; Hardware stack levels used: 1
 10467 ;; Hardware stack levels required when called: 1
 10468 ;; This function calls:
 10469 ;;		Nothing
 10470 ;; This function is called by:
 10471 ;;		_colour_rel
 10472 ;;		_Colour_decider
 10473 ;;		___flsub
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text66
 10478   001E60                     __ptext66:
 10479                           	callstack 0
 10480   001E60                     ___fladd:
 10481                           	callstack 28
 10482   001E60  5004               	movf	(___fladd@b+3)^0,w,c
 10483   001E62  0B80               	andlw	128
 10484   001E64  6E0D               	movwf	___fladd@signs^0,c
 10485   001E66  5004               	movf	(___fladd@b+3)^0,w,c
 10486   001E68  2404               	addwf	(___fladd@b+3)^0,w,c
 10487   001E6A  6E0F               	movwf	___fladd@bexp^0,c
 10488   001E6C  AE03               	btfss	(___fladd@b+2)^0,7,c
 10489   001E6E  EF3B  F00F         	goto	u2991
 10490   001E72  EF3D  F00F         	goto	u2990
 10491   001E76                     u2991:
 10492   001E76  EF3E  F00F         	goto	l3683
 10493   001E7A                     u2990:
 10494   001E7A  800F               	bsf	___fladd@bexp^0,0,c
 10495   001E7C                     l3683:
 10496   001E7C  500F               	movf	___fladd@bexp^0,w,c
 10497   001E7E  B4D8               	btfsc	status,2,c
 10498   001E80  EF44  F00F         	goto	u3001
 10499   001E84  EF46  F00F         	goto	u3000
 10500   001E88                     u3001:
 10501   001E88  EF5B  F00F         	goto	l3693
 10502   001E8C                     u3000:
 10503   001E8C  280F               	incf	___fladd@bexp^0,w,c
 10504   001E8E  A4D8               	btfss	status,2,c
 10505   001E90  EF4C  F00F         	goto	u3011
 10506   001E94  EF4E  F00F         	goto	u3010
 10507   001E98                     u3011:
 10508   001E98  EF56  F00F         	goto	l3689
 10509   001E9C                     u3010:
 10510   001E9C  0E00               	movlw	0
 10511   001E9E  6E01               	movwf	___fladd@b^0,c
 10512   001EA0  0E00               	movlw	0
 10513   001EA2  6E02               	movwf	(___fladd@b+1)^0,c
 10514   001EA4  0E00               	movlw	0
 10515   001EA6  6E03               	movwf	(___fladd@b+2)^0,c
 10516   001EA8  0E00               	movlw	0
 10517   001EAA  6E04               	movwf	(___fladd@b+3)^0,c
 10518   001EAC                     l3689:
 10519   001EAC  8E03               	bsf	(___fladd@b+2)^0,7,c
 10520   001EAE  0E00               	movlw	0
 10521   001EB0  6E04               	movwf	(___fladd@b+3)^0,c
 10522   001EB2  EF63  F00F         	goto	l3695
 10523   001EB6                     l3693:
 10524   001EB6  0E00               	movlw	0
 10525   001EB8  6E01               	movwf	___fladd@b^0,c
 10526   001EBA  0E00               	movlw	0
 10527   001EBC  6E02               	movwf	(___fladd@b+1)^0,c
 10528   001EBE  0E00               	movlw	0
 10529   001EC0  6E03               	movwf	(___fladd@b+2)^0,c
 10530   001EC2  0E00               	movlw	0
 10531   001EC4  6E04               	movwf	(___fladd@b+3)^0,c
 10532   001EC6                     l3695:
 10533   001EC6  5008               	movf	(___fladd@a+3)^0,w,c
 10534   001EC8  0B80               	andlw	128
 10535   001ECA  6E0E               	movwf	___fladd@aexp^0,c
 10536   001ECC  500D               	movf	___fladd@signs^0,w,c
 10537   001ECE  180E               	xorwf	___fladd@aexp^0,w,c
 10538   001ED0  B4D8               	btfsc	status,2,c
 10539   001ED2  EF6D  F00F         	goto	u3021
 10540   001ED6  EF6F  F00F         	goto	u3020
 10541   001EDA                     u3021:
 10542   001EDA  EF70  F00F         	goto	l3701
 10543   001EDE                     u3020:
 10544   001EDE  8C0D               	bsf	___fladd@signs^0,6,c
 10545   001EE0                     l3701:
 10546   001EE0  5008               	movf	(___fladd@a+3)^0,w,c
 10547   001EE2  2408               	addwf	(___fladd@a+3)^0,w,c
 10548   001EE4  6E0E               	movwf	___fladd@aexp^0,c
 10549   001EE6  AE07               	btfss	(___fladd@a+2)^0,7,c
 10550   001EE8  EF78  F00F         	goto	u3031
 10551   001EEC  EF7A  F00F         	goto	u3030
 10552   001EF0                     u3031:
 10553   001EF0  EF7B  F00F         	goto	l3707
 10554   001EF4                     u3030:
 10555   001EF4  800E               	bsf	___fladd@aexp^0,0,c
 10556   001EF6                     l3707:
 10557   001EF6  500E               	movf	___fladd@aexp^0,w,c
 10558   001EF8  B4D8               	btfsc	status,2,c
 10559   001EFA  EF81  F00F         	goto	u3041
 10560   001EFE  EF83  F00F         	goto	u3040
 10561   001F02                     u3041:
 10562   001F02  EF98  F00F         	goto	l3717
 10563   001F06                     u3040:
 10564   001F06  280E               	incf	___fladd@aexp^0,w,c
 10565   001F08  A4D8               	btfss	status,2,c
 10566   001F0A  EF89  F00F         	goto	u3051
 10567   001F0E  EF8B  F00F         	goto	u3050
 10568   001F12                     u3051:
 10569   001F12  EF93  F00F         	goto	l3713
 10570   001F16                     u3050:
 10571   001F16  0E00               	movlw	0
 10572   001F18  6E05               	movwf	___fladd@a^0,c
 10573   001F1A  0E00               	movlw	0
 10574   001F1C  6E06               	movwf	(___fladd@a+1)^0,c
 10575   001F1E  0E00               	movlw	0
 10576   001F20  6E07               	movwf	(___fladd@a+2)^0,c
 10577   001F22  0E00               	movlw	0
 10578   001F24  6E08               	movwf	(___fladd@a+3)^0,c
 10579   001F26                     l3713:
 10580   001F26  8E07               	bsf	(___fladd@a+2)^0,7,c
 10581   001F28  0E00               	movlw	0
 10582   001F2A  6E08               	movwf	(___fladd@a+3)^0,c
 10583   001F2C  EFA0  F00F         	goto	l3719
 10584   001F30                     l3717:
 10585   001F30  0E00               	movlw	0
 10586   001F32  6E05               	movwf	___fladd@a^0,c
 10587   001F34  0E00               	movlw	0
 10588   001F36  6E06               	movwf	(___fladd@a+1)^0,c
 10589   001F38  0E00               	movlw	0
 10590   001F3A  6E07               	movwf	(___fladd@a+2)^0,c
 10591   001F3C  0E00               	movlw	0
 10592   001F3E  6E08               	movwf	(___fladd@a+3)^0,c
 10593   001F40                     l3719:
 10594   001F40  500F               	movf	___fladd@bexp^0,w,c
 10595   001F42  5C0E               	subwf	___fladd@aexp^0,w,c
 10596   001F44  B0D8               	btfsc	status,0,c
 10597   001F46  EFA7  F00F         	goto	u3061
 10598   001F4A  EFA9  F00F         	goto	u3060
 10599   001F4E                     u3061:
 10600   001F4E  EFD0  F00F         	goto	l3755
 10601   001F52                     u3060:
 10602   001F52  AC0D               	btfss	___fladd@signs^0,6,c
 10603   001F54  EFAE  F00F         	goto	u3071
 10604   001F58  EFB0  F00F         	goto	u3070
 10605   001F5C                     u3071:
 10606   001F5C  EFB2  F00F         	goto	l3725
 10607   001F60                     u3070:
 10608   001F60  0E80               	movlw	128
 10609   001F62  1A0D               	xorwf	___fladd@signs^0,f,c
 10610   001F64                     l3725:
 10611   001F64  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10612   001F68  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10613   001F6C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10614   001F70  C001  F010         	movff	___fladd@b,___fladd@grs
 10615   001F74  C005  F001         	movff	___fladd@a,___fladd@b
 10616   001F78  C010  F005         	movff	___fladd@grs,___fladd@a
 10617   001F7C  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10618   001F80  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10619   001F84  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10620   001F88  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10621   001F8C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10622   001F90  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10623   001F94  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10624   001F98  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10625   001F9C  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10626   001FA0                     l3755:
 10627   001FA0  0E00               	movlw	0
 10628   001FA2  6E10               	movwf	___fladd@grs^0,c
 10629   001FA4  500F               	movf	___fladd@bexp^0,w,c
 10630   001FA6  C00E  F009         	movff	___fladd@aexp,??___fladd
 10631   001FAA  6A0A               	clrf	(??___fladd+1)^0,c
 10632   001FAC  5E09               	subwf	??___fladd^0,f,c
 10633   001FAE  0E00               	movlw	0
 10634   001FB0  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10635   001FB2  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10636   001FB4  EFE5  F00F         	goto	u3081
 10637   001FB8  500A               	movf	(??___fladd+1)^0,w,c
 10638   001FBA  E109               	bnz	u3080
 10639   001FBC  0E1A               	movlw	26
 10640   001FBE  5C09               	subwf	??___fladd^0,w,c
 10641   001FC0  A0D8               	btfss	status,0,c
 10642   001FC2  EFE5  F00F         	goto	u3081
 10643   001FC6  EFE7  F00F         	goto	u3080
 10644   001FCA                     u3081:
 10645   001FCA  EF1E  F010         	goto	l1244
 10646   001FCE                     u3080:
 10647   001FCE  5001               	movf	___fladd@b^0,w,c
 10648   001FD0  1002               	iorwf	(___fladd@b+1)^0,w,c
 10649   001FD2  1003               	iorwf	(___fladd@b+2)^0,w,c
 10650   001FD4  1004               	iorwf	(___fladd@b+3)^0,w,c
 10651   001FD6  A4D8               	btfss	status,2,c
 10652   001FD8  EFF0  F00F         	goto	u3091
 10653   001FDC  EFF3  F00F         	goto	u3090
 10654   001FE0                     u3091:
 10655   001FE0  0E01               	movlw	1
 10656   001FE2  EFF4  F00F         	goto	u3100
 10657   001FE6                     u3090:
 10658   001FE6  0E00               	movlw	0
 10659   001FE8                     u3100:
 10660   001FE8  6E10               	movwf	___fladd@grs^0,c
 10661   001FEA  0E00               	movlw	0
 10662   001FEC  6E01               	movwf	___fladd@b^0,c
 10663   001FEE  0E00               	movlw	0
 10664   001FF0  6E02               	movwf	(___fladd@b+1)^0,c
 10665   001FF2  0E00               	movlw	0
 10666   001FF4  6E03               	movwf	(___fladd@b+2)^0,c
 10667   001FF6  0E00               	movlw	0
 10668   001FF8  6E04               	movwf	(___fladd@b+3)^0,c
 10669   001FFA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10670   001FFE  EF27  F010         	goto	l1243
 10671   002002                     l1245:
 10672   002002  A010               	btfss	___fladd@grs^0,0,c
 10673   002004  EF06  F010         	goto	u3111
 10674   002008  EF08  F010         	goto	u3110
 10675   00200C                     u3111:
 10676   00200C  EF0E  F010         	goto	l3767
 10677   002010                     u3110:
 10678   002010  90D8               	bcf	status,0,c
 10679   002012  3010               	rrcf	___fladd@grs^0,w,c
 10680   002014  0901               	iorlw	1
 10681   002016  6E10               	movwf	___fladd@grs^0,c
 10682   002018  EF10  F010         	goto	l3769
 10683   00201C                     l3767:
 10684   00201C  90D8               	bcf	status,0,c
 10685   00201E  3210               	rrcf	___fladd@grs^0,f,c
 10686   002020                     l3769:
 10687   002020  A001               	btfss	___fladd@b^0,0,c
 10688   002022  EF15  F010         	goto	u3121
 10689   002026  EF17  F010         	goto	u3120
 10690   00202A                     u3121:
 10691   00202A  EF18  F010         	goto	l3773
 10692   00202E                     u3120:
 10693   00202E  8E10               	bsf	___fladd@grs^0,7,c
 10694   002030                     l3773:
 10695   002030  3404               	rlcf	(___fladd@b+3)^0,w,c
 10696   002032  3204               	rrcf	(___fladd@b+3)^0,f,c
 10697   002034  3203               	rrcf	(___fladd@b+2)^0,f,c
 10698   002036  3202               	rrcf	(___fladd@b+1)^0,f,c
 10699   002038  3201               	rrcf	___fladd@b^0,f,c
 10700   00203A  2A0F               	incf	___fladd@bexp^0,f,c
 10701   00203C                     l1244:
 10702   00203C  500E               	movf	___fladd@aexp^0,w,c
 10703   00203E  5C0F               	subwf	___fladd@bexp^0,w,c
 10704   002040  A0D8               	btfss	status,0,c
 10705   002042  EF25  F010         	goto	u3131
 10706   002046  EF27  F010         	goto	u3130
 10707   00204A                     u3131:
 10708   00204A  EF01  F010         	goto	l1245
 10709   00204E                     u3130:
 10710   00204E                     l1243:
 10711   00204E  BC0D               	btfsc	___fladd@signs^0,6,c
 10712   002050  EF2C  F010         	goto	u3141
 10713   002054  EF2E  F010         	goto	u3140
 10714   002058                     u3141:
 10715   002058  EF6E  F010         	goto	l3801
 10716   00205C                     u3140:
 10717   00205C  500F               	movf	___fladd@bexp^0,w,c
 10718   00205E  A4D8               	btfss	status,2,c
 10719   002060  EF34  F010         	goto	u3151
 10720   002064  EF36  F010         	goto	u3150
 10721   002068                     u3151:
 10722   002068  EF40  F010         	goto	l3783
 10723   00206C                     u3150:
 10724   00206C  0E00               	movlw	0
 10725   00206E  6E01               	movwf	?___fladd^0,c
 10726   002070  0E00               	movlw	0
 10727   002072  6E02               	movwf	(?___fladd+1)^0,c
 10728   002074  0E00               	movlw	0
 10729   002076  6E03               	movwf	(?___fladd+2)^0,c
 10730   002078  0E00               	movlw	0
 10731   00207A  6E04               	movwf	(?___fladd+3)^0,c
 10732   00207C  EF8F  F011         	goto	l1252
 10733   002080                     l3783:
 10734   002080  5005               	movf	___fladd@a^0,w,c
 10735   002082  2601               	addwf	___fladd@b^0,f,c
 10736   002084  5006               	movf	(___fladd@a+1)^0,w,c
 10737   002086  2202               	addwfc	(___fladd@b+1)^0,f,c
 10738   002088  5007               	movf	(___fladd@a+2)^0,w,c
 10739   00208A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10740   00208C  5008               	movf	(___fladd@a+3)^0,w,c
 10741   00208E  2204               	addwfc	(___fladd@b+3)^0,f,c
 10742   002090  A004               	btfss	(___fladd@b+3)^0,0,c
 10743   002092  EF4D  F010         	goto	u3161
 10744   002096  EF4F  F010         	goto	u3160
 10745   00209A                     u3161:
 10746   00209A  EFFB  F010         	goto	l3837
 10747   00209E                     u3160:
 10748   00209E  A010               	btfss	___fladd@grs^0,0,c
 10749   0020A0  EF54  F010         	goto	u3171
 10750   0020A4  EF56  F010         	goto	u3170
 10751   0020A8                     u3171:
 10752   0020A8  EF5C  F010         	goto	l3791
 10753   0020AC                     u3170:
 10754   0020AC  90D8               	bcf	status,0,c
 10755   0020AE  3010               	rrcf	___fladd@grs^0,w,c
 10756   0020B0  0901               	iorlw	1
 10757   0020B2  6E10               	movwf	___fladd@grs^0,c
 10758   0020B4  EF5E  F010         	goto	l3793
 10759   0020B8                     l3791:
 10760   0020B8  90D8               	bcf	status,0,c
 10761   0020BA  3210               	rrcf	___fladd@grs^0,f,c
 10762   0020BC                     l3793:
 10763   0020BC  A001               	btfss	___fladd@b^0,0,c
 10764   0020BE  EF63  F010         	goto	u3181
 10765   0020C2  EF65  F010         	goto	u3180
 10766   0020C6                     u3181:
 10767   0020C6  EF66  F010         	goto	l3797
 10768   0020CA                     u3180:
 10769   0020CA  8E10               	bsf	___fladd@grs^0,7,c
 10770   0020CC                     l3797:
 10771   0020CC  3404               	rlcf	(___fladd@b+3)^0,w,c
 10772   0020CE  3204               	rrcf	(___fladd@b+3)^0,f,c
 10773   0020D0  3203               	rrcf	(___fladd@b+2)^0,f,c
 10774   0020D2  3202               	rrcf	(___fladd@b+1)^0,f,c
 10775   0020D4  3201               	rrcf	___fladd@b^0,f,c
 10776   0020D6  2A0F               	incf	___fladd@bexp^0,f,c
 10777   0020D8  EFFB  F010         	goto	l3837
 10778   0020DC                     l3801:
 10779   0020DC  5005               	movf	___fladd@a^0,w,c
 10780   0020DE  5C01               	subwf	___fladd@b^0,w,c
 10781   0020E0  5006               	movf	(___fladd@a+1)^0,w,c
 10782   0020E2  5802               	subwfb	(___fladd@b+1)^0,w,c
 10783   0020E4  5007               	movf	(___fladd@a+2)^0,w,c
 10784   0020E6  5803               	subwfb	(___fladd@b+2)^0,w,c
 10785   0020E8  5004               	movf	(___fladd@b+3)^0,w,c
 10786   0020EA  0A80               	xorlw	128
 10787   0020EC  6E09               	movwf	??___fladd^0,c
 10788   0020EE  5008               	movf	(___fladd@a+3)^0,w,c
 10789   0020F0  0A80               	xorlw	128
 10790   0020F2  5809               	subwfb	??___fladd^0,w,c
 10791   0020F4  B0D8               	btfsc	status,0,c
 10792   0020F6  EF7F  F010         	goto	u3191
 10793   0020FA  EF81  F010         	goto	u3190
 10794   0020FE                     u3191:
 10795   0020FE  EFAC  F010         	goto	l3811
 10796   002102                     u3190:
 10797   002102  5001               	movf	___fladd@b^0,w,c
 10798   002104  5C05               	subwf	___fladd@a^0,w,c
 10799   002106  6E09               	movwf	??___fladd^0,c
 10800   002108  5002               	movf	(___fladd@b+1)^0,w,c
 10801   00210A  5806               	subwfb	(___fladd@a+1)^0,w,c
 10802   00210C  6E0A               	movwf	(??___fladd+1)^0,c
 10803   00210E  5003               	movf	(___fladd@b+2)^0,w,c
 10804   002110  5807               	subwfb	(___fladd@a+2)^0,w,c
 10805   002112  6E0B               	movwf	(??___fladd+2)^0,c
 10806   002114  5004               	movf	(___fladd@b+3)^0,w,c
 10807   002116  5808               	subwfb	(___fladd@a+3)^0,w,c
 10808   002118  6E0C               	movwf	(??___fladd+3)^0,c
 10809   00211A  0EFF               	movlw	255
 10810   00211C  2409               	addwf	??___fladd^0,w,c
 10811   00211E  6E01               	movwf	___fladd@b^0,c
 10812   002120  0EFF               	movlw	255
 10813   002122  200A               	addwfc	(??___fladd+1)^0,w,c
 10814   002124  6E02               	movwf	(___fladd@b+1)^0,c
 10815   002126  0EFF               	movlw	255
 10816   002128  200B               	addwfc	(??___fladd+2)^0,w,c
 10817   00212A  6E03               	movwf	(___fladd@b+2)^0,c
 10818   00212C  0EFF               	movlw	255
 10819   00212E  200C               	addwfc	(??___fladd+3)^0,w,c
 10820   002130  6E04               	movwf	(___fladd@b+3)^0,c
 10821   002132  0E80               	movlw	128
 10822   002134  1A0D               	xorwf	___fladd@signs^0,f,c
 10823   002136  6C10               	negf	___fladd@grs^0,c
 10824   002138  5010               	movf	___fladd@grs^0,w,c
 10825   00213A  A4D8               	btfss	status,2,c
 10826   00213C  EFA2  F010         	goto	u3201
 10827   002140  EFA4  F010         	goto	u3200
 10828   002144                     u3201:
 10829   002144  EFB4  F010         	goto	l1260
 10830   002148                     u3200:
 10831   002148  0E01               	movlw	1
 10832   00214A  2601               	addwf	___fladd@b^0,f,c
 10833   00214C  0E00               	movlw	0
 10834   00214E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10835   002150  2203               	addwfc	(___fladd@b+2)^0,f,c
 10836   002152  2204               	addwfc	(___fladd@b+3)^0,f,c
 10837   002154  EFB4  F010         	goto	l1260
 10838   002158                     l3811:
 10839   002158  5005               	movf	___fladd@a^0,w,c
 10840   00215A  5E01               	subwf	___fladd@b^0,f,c
 10841   00215C  5006               	movf	(___fladd@a+1)^0,w,c
 10842   00215E  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10843   002160  5007               	movf	(___fladd@a+2)^0,w,c
 10844   002162  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10845   002164  5008               	movf	(___fladd@a+3)^0,w,c
 10846   002166  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10847   002168                     l1260:
 10848   002168  5001               	movf	___fladd@b^0,w,c
 10849   00216A  1002               	iorwf	(___fladd@b+1)^0,w,c
 10850   00216C  1003               	iorwf	(___fladd@b+2)^0,w,c
 10851   00216E  1004               	iorwf	(___fladd@b+3)^0,w,c
 10852   002170  A4D8               	btfss	status,2,c
 10853   002172  EFBD  F010         	goto	u3211
 10854   002176  EFBF  F010         	goto	u3210
 10855   00217A                     u3211:
 10856   00217A  EFF4  F010         	goto	l3835
 10857   00217E                     u3210:
 10858   00217E  5010               	movf	___fladd@grs^0,w,c
 10859   002180  A4D8               	btfss	status,2,c
 10860   002182  EFC5  F010         	goto	u3221
 10861   002186  EFC7  F010         	goto	u3220
 10862   00218A                     u3221:
 10863   00218A  EFF4  F010         	goto	l3835
 10864   00218E                     u3220:
 10865   00218E  0E00               	movlw	0
 10866   002190  6E01               	movwf	?___fladd^0,c
 10867   002192  0E00               	movlw	0
 10868   002194  6E02               	movwf	(?___fladd+1)^0,c
 10869   002196  0E00               	movlw	0
 10870   002198  6E03               	movwf	(?___fladd+2)^0,c
 10871   00219A  0E00               	movlw	0
 10872   00219C  6E04               	movwf	(?___fladd+3)^0,c
 10873   00219E  EF8F  F011         	goto	l1252
 10874   0021A2                     l3819:
 10875   0021A2  90D8               	bcf	status,0,c
 10876   0021A4  3601               	rlcf	___fladd@b^0,f,c
 10877   0021A6  3602               	rlcf	(___fladd@b+1)^0,f,c
 10878   0021A8  3603               	rlcf	(___fladd@b+2)^0,f,c
 10879   0021AA  3604               	rlcf	(___fladd@b+3)^0,f,c
 10880   0021AC  AE10               	btfss	___fladd@grs^0,7,c
 10881   0021AE  EFDB  F010         	goto	u3231
 10882   0021B2  EFDD  F010         	goto	u3230
 10883   0021B6                     u3231:
 10884   0021B6  EFDE  F010         	goto	l3825
 10885   0021BA                     u3230:
 10886   0021BA  8001               	bsf	___fladd@b^0,0,c
 10887   0021BC                     l3825:
 10888   0021BC  A010               	btfss	___fladd@grs^0,0,c
 10889   0021BE  EFE3  F010         	goto	u3241
 10890   0021C2  EFE5  F010         	goto	u3240
 10891   0021C6                     u3241:
 10892   0021C6  EFE9  F010         	goto	l3829
 10893   0021CA                     u3240:
 10894   0021CA  80D8               	bsf	status,0,c
 10895   0021CC  3610               	rlcf	___fladd@grs^0,f,c
 10896   0021CE  EFEB  F010         	goto	l3831
 10897   0021D2                     l3829:
 10898   0021D2  90D8               	bcf	status,0,c
 10899   0021D4  3610               	rlcf	___fladd@grs^0,f,c
 10900   0021D6                     l3831:
 10901   0021D6  500F               	movf	___fladd@bexp^0,w,c
 10902   0021D8  B4D8               	btfsc	status,2,c
 10903   0021DA  EFF1  F010         	goto	u3251
 10904   0021DE  EFF3  F010         	goto	u3250
 10905   0021E2                     u3251:
 10906   0021E2  EFF4  F010         	goto	l3835
 10907   0021E6                     u3250:
 10908   0021E6  060F               	decf	___fladd@bexp^0,f,c
 10909   0021E8                     l3835:
 10910   0021E8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10911   0021EA  EFF9  F010         	goto	u3261
 10912   0021EE  EFFB  F010         	goto	u3260
 10913   0021F2                     u3261:
 10914   0021F2  EFD1  F010         	goto	l3819
 10915   0021F6                     u3260:
 10916   0021F6                     l3837:
 10917   0021F6  0E00               	movlw	0
 10918   0021F8  6E0E               	movwf	___fladd@aexp^0,c
 10919   0021FA  AE10               	btfss	___fladd@grs^0,7,c
 10920   0021FC  EF02  F011         	goto	u3271
 10921   002200  EF04  F011         	goto	u3270
 10922   002204                     u3271:
 10923   002204  EF1C  F011         	goto	l1269
 10924   002208                     u3270:
 10925   002208  C010  F009         	movff	___fladd@grs,??___fladd
 10926   00220C  0E7F               	movlw	127
 10927   00220E  1609               	andwf	??___fladd^0,f,c
 10928   002210  B4D8               	btfsc	status,2,c
 10929   002212  EF0D  F011         	goto	u3281
 10930   002216  EF0F  F011         	goto	u3280
 10931   00221A                     u3281:
 10932   00221A  EF13  F011         	goto	l1270
 10933   00221E                     u3280:
 10934   00221E                     l3843:
 10935   00221E  0E01               	movlw	1
 10936   002220  6E0E               	movwf	___fladd@aexp^0,c
 10937   002222  EF1C  F011         	goto	l1269
 10938   002226                     l1270:
 10939   002226  A001               	btfss	___fladd@b^0,0,c
 10940   002228  EF18  F011         	goto	u3291
 10941   00222C  EF1A  F011         	goto	u3290
 10942   002230                     u3291:
 10943   002230  EF1C  F011         	goto	l1269
 10944   002234                     u3290:
 10945   002234  EF0F  F011         	goto	l3843
 10946   002238                     l1269:
 10947   002238  500E               	movf	___fladd@aexp^0,w,c
 10948   00223A  B4D8               	btfsc	status,2,c
 10949   00223C  EF22  F011         	goto	u3301
 10950   002240  EF24  F011         	goto	u3300
 10951   002244                     u3301:
 10952   002244  EF4F  F011         	goto	l3855
 10953   002248                     u3300:
 10954   002248  0E01               	movlw	1
 10955   00224A  2601               	addwf	___fladd@b^0,f,c
 10956   00224C  0E00               	movlw	0
 10957   00224E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10958   002250  2203               	addwfc	(___fladd@b+2)^0,f,c
 10959   002252  2204               	addwfc	(___fladd@b+3)^0,f,c
 10960   002254  A004               	btfss	(___fladd@b+3)^0,0,c
 10961   002256  EF2F  F011         	goto	u3311
 10962   00225A  EF31  F011         	goto	u3310
 10963   00225E                     u3311:
 10964   00225E  EF4F  F011         	goto	l3855
 10965   002262                     u3310:
 10966   002262  C001  F009         	movff	___fladd@b,??___fladd
 10967   002266  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10968   00226A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10969   00226E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10970   002272  340C               	rlcf	(??___fladd+3)^0,w,c
 10971   002274  320C               	rrcf	(??___fladd+3)^0,f,c
 10972   002276  320B               	rrcf	(??___fladd+2)^0,f,c
 10973   002278  320A               	rrcf	(??___fladd+1)^0,f,c
 10974   00227A  3209               	rrcf	??___fladd^0,f,c
 10975   00227C  C009  F001         	movff	??___fladd,___fladd@b
 10976   002280  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10977   002284  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10978   002288  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10979   00228C  280F               	incf	___fladd@bexp^0,w,c
 10980   00228E  B4D8               	btfsc	status,2,c
 10981   002290  EF4C  F011         	goto	u3321
 10982   002294  EF4E  F011         	goto	u3320
 10983   002298                     u3321:
 10984   002298  EF4F  F011         	goto	l3855
 10985   00229C                     u3320:
 10986   00229C  2A0F               	incf	___fladd@bexp^0,f,c
 10987   00229E                     l3855:
 10988   00229E  280F               	incf	___fladd@bexp^0,w,c
 10989   0022A0  B4D8               	btfsc	status,2,c
 10990   0022A2  EF55  F011         	goto	u3331
 10991   0022A6  EF57  F011         	goto	u3330
 10992   0022AA                     u3331:
 10993   0022AA  EF5F  F011         	goto	l3859
 10994   0022AE                     u3330:
 10995   0022AE  500F               	movf	___fladd@bexp^0,w,c
 10996   0022B0  A4D8               	btfss	status,2,c
 10997   0022B2  EF5D  F011         	goto	u3341
 10998   0022B6  EF5F  F011         	goto	u3340
 10999   0022BA                     u3341:
 11000   0022BA  EF71  F011         	goto	l3863
 11001   0022BE                     u3340:
 11002   0022BE                     l3859:
 11003   0022BE  0E00               	movlw	0
 11004   0022C0  6E01               	movwf	___fladd@b^0,c
 11005   0022C2  0E00               	movlw	0
 11006   0022C4  6E02               	movwf	(___fladd@b+1)^0,c
 11007   0022C6  0E00               	movlw	0
 11008   0022C8  6E03               	movwf	(___fladd@b+2)^0,c
 11009   0022CA  0E00               	movlw	0
 11010   0022CC  6E04               	movwf	(___fladd@b+3)^0,c
 11011   0022CE  500F               	movf	___fladd@bexp^0,w,c
 11012   0022D0  A4D8               	btfss	status,2,c
 11013   0022D2  EF6D  F011         	goto	u3351
 11014   0022D6  EF6F  F011         	goto	u3350
 11015   0022DA                     u3351:
 11016   0022DA  EF71  F011         	goto	l3863
 11017   0022DE                     u3350:
 11018   0022DE  0E00               	movlw	0
 11019   0022E0  6E0D               	movwf	___fladd@signs^0,c
 11020   0022E2                     l3863:
 11021   0022E2  A00F               	btfss	___fladd@bexp^0,0,c
 11022   0022E4  EF76  F011         	goto	u3361
 11023   0022E8  EF78  F011         	goto	u3360
 11024   0022EC                     u3361:
 11025   0022EC  EF7B  F011         	goto	l3867
 11026   0022F0                     u3360:
 11027   0022F0  8E03               	bsf	(___fladd@b+2)^0,7,c
 11028   0022F2  EF7C  F011         	goto	l3869
 11029   0022F6                     l3867:
 11030   0022F6  9E03               	bcf	(___fladd@b+2)^0,7,c
 11031   0022F8                     l3869:
 11032   0022F8  90D8               	bcf	status,0,c
 11033   0022FA  300F               	rrcf	___fladd@bexp^0,w,c
 11034   0022FC  6E04               	movwf	(___fladd@b+3)^0,c
 11035   0022FE  AE0D               	btfss	___fladd@signs^0,7,c
 11036   002300  EF84  F011         	goto	u3371
 11037   002304  EF86  F011         	goto	u3370
 11038   002308                     u3371:
 11039   002308  EF87  F011         	goto	l3875
 11040   00230C                     u3370:
 11041   00230C  8E04               	bsf	(___fladd@b+3)^0,7,c
 11042   00230E                     l3875:
 11043   00230E  C001  F001         	movff	___fladd@b,?___fladd
 11044   002312  C002  F002         	movff	___fladd@b+1,?___fladd+1
 11045   002316  C003  F003         	movff	___fladd@b+2,?___fladd+2
 11046   00231A  C004  F004         	movff	___fladd@b+3,?___fladd+3
 11047   00231E                     l1252:
 11048   00231E  0012               	return		;funcret
 11049   002320                     __end_of___fladd:
 11050                           	callstack 0
 11051                           
 11052 ;; *************** function ___flmul *****************
 11053 ;; Defined at:
 11054 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  b               4   49[COMRAM] unsigned char 
 11057 ;;  a               4   53[COMRAM] unsigned char 
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;  prod            4   68[COMRAM] struct .
 11060 ;;  grs             4   62[COMRAM] unsigned long 
 11061 ;;  temp            2   72[COMRAM] struct .
 11062 ;;  bexp            1   67[COMRAM] unsigned char 
 11063 ;;  aexp            1   66[COMRAM] unsigned char 
 11064 ;;  sign            1   61[COMRAM] unsigned char 
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  4   49[COMRAM] unsigned char 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2, status,0, prodl, prodh
 11069 ;; Tracked objects:
 11070 ;;		On entry : 0/0
 11071 ;;		On exit  : 0/0
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11075 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11077 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11078 ;;Total ram usage:       25 bytes
 11079 ;; Hardware stack levels used: 1
 11080 ;; Hardware stack levels required when called: 1
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_Colour_decider
 11085 ;;		_reverseOneBlock
 11086 ;;		_ForwardOneBlock
 11087 ;;		_Forwardhalfblock
 11088 ;;		_Backhalfblock
 11089 ;; This function uses a non-reentrant model
 11090 ;;
 11091                           
 11092                           	psect	text67
 11093   002320                     __ptext67:
 11094                           	callstack 0
 11095   002320                     ___flmul:
 11096                           	callstack 28
 11097   002320  5035               	movf	(___flmul@b+3)^0,w,c
 11098   002322  0B80               	andlw	128
 11099   002324  6E3E               	movwf	___flmul@sign^0,c
 11100   002326  5035               	movf	(___flmul@b+3)^0,w,c
 11101   002328  2435               	addwf	(___flmul@b+3)^0,w,c
 11102   00232A  6E44               	movwf	___flmul@bexp^0,c
 11103   00232C  AE34               	btfss	(___flmul@b+2)^0,7,c
 11104   00232E  EF9B  F011         	goto	u3671
 11105   002332  EF9D  F011         	goto	u3670
 11106   002336                     u3671:
 11107   002336  EF9E  F011         	goto	l4131
 11108   00233A                     u3670:
 11109   00233A  8044               	bsf	___flmul@bexp^0,0,c
 11110   00233C                     l4131:
 11111   00233C  5044               	movf	___flmul@bexp^0,w,c
 11112   00233E  B4D8               	btfsc	status,2,c
 11113   002340  EFA4  F011         	goto	u3681
 11114   002344  EFA6  F011         	goto	u3680
 11115   002348                     u3681:
 11116   002348  EFB9  F011         	goto	l4139
 11117   00234C                     u3680:
 11118   00234C  2844               	incf	___flmul@bexp^0,w,c
 11119   00234E  A4D8               	btfss	status,2,c
 11120   002350  EFAC  F011         	goto	u3691
 11121   002354  EFAE  F011         	goto	u3690
 11122   002358                     u3691:
 11123   002358  EFB6  F011         	goto	l4137
 11124   00235C                     u3690:
 11125   00235C  0E00               	movlw	0
 11126   00235E  6E32               	movwf	___flmul@b^0,c
 11127   002360  0E00               	movlw	0
 11128   002362  6E33               	movwf	(___flmul@b+1)^0,c
 11129   002364  0E00               	movlw	0
 11130   002366  6E34               	movwf	(___flmul@b+2)^0,c
 11131   002368  0E00               	movlw	0
 11132   00236A  6E35               	movwf	(___flmul@b+3)^0,c
 11133   00236C                     l4137:
 11134   00236C  8E34               	bsf	(___flmul@b+2)^0,7,c
 11135   00236E  EFC1  F011         	goto	l4141
 11136   002372                     l4139:
 11137   002372  0E00               	movlw	0
 11138   002374  6E32               	movwf	___flmul@b^0,c
 11139   002376  0E00               	movlw	0
 11140   002378  6E33               	movwf	(___flmul@b+1)^0,c
 11141   00237A  0E00               	movlw	0
 11142   00237C  6E34               	movwf	(___flmul@b+2)^0,c
 11143   00237E  0E00               	movlw	0
 11144   002380  6E35               	movwf	(___flmul@b+3)^0,c
 11145   002382                     l4141:
 11146   002382  5039               	movf	(___flmul@a+3)^0,w,c
 11147   002384  0B80               	andlw	128
 11148   002386  1A3E               	xorwf	___flmul@sign^0,f,c
 11149   002388  5039               	movf	(___flmul@a+3)^0,w,c
 11150   00238A  2439               	addwf	(___flmul@a+3)^0,w,c
 11151   00238C  6E43               	movwf	___flmul@aexp^0,c
 11152   00238E  AE38               	btfss	(___flmul@a+2)^0,7,c
 11153   002390  EFCC  F011         	goto	u3701
 11154   002394  EFCE  F011         	goto	u3700
 11155   002398                     u3701:
 11156   002398  EFCF  F011         	goto	l4149
 11157   00239C                     u3700:
 11158   00239C  8043               	bsf	___flmul@aexp^0,0,c
 11159   00239E                     l4149:
 11160   00239E  5043               	movf	___flmul@aexp^0,w,c
 11161   0023A0  B4D8               	btfsc	status,2,c
 11162   0023A2  EFD5  F011         	goto	u3711
 11163   0023A6  EFD7  F011         	goto	u3710
 11164   0023AA                     u3711:
 11165   0023AA  EFEA  F011         	goto	l4157
 11166   0023AE                     u3710:
 11167   0023AE  2843               	incf	___flmul@aexp^0,w,c
 11168   0023B0  A4D8               	btfss	status,2,c
 11169   0023B2  EFDD  F011         	goto	u3721
 11170   0023B6  EFDF  F011         	goto	u3720
 11171   0023BA                     u3721:
 11172   0023BA  EFE7  F011         	goto	l4155
 11173   0023BE                     u3720:
 11174   0023BE  0E00               	movlw	0
 11175   0023C0  6E36               	movwf	___flmul@a^0,c
 11176   0023C2  0E00               	movlw	0
 11177   0023C4  6E37               	movwf	(___flmul@a+1)^0,c
 11178   0023C6  0E00               	movlw	0
 11179   0023C8  6E38               	movwf	(___flmul@a+2)^0,c
 11180   0023CA  0E00               	movlw	0
 11181   0023CC  6E39               	movwf	(___flmul@a+3)^0,c
 11182   0023CE                     l4155:
 11183   0023CE  8E38               	bsf	(___flmul@a+2)^0,7,c
 11184   0023D0  EFF2  F011         	goto	l1329
 11185   0023D4                     l4157:
 11186   0023D4  0E00               	movlw	0
 11187   0023D6  6E36               	movwf	___flmul@a^0,c
 11188   0023D8  0E00               	movlw	0
 11189   0023DA  6E37               	movwf	(___flmul@a+1)^0,c
 11190   0023DC  0E00               	movlw	0
 11191   0023DE  6E38               	movwf	(___flmul@a+2)^0,c
 11192   0023E0  0E00               	movlw	0
 11193   0023E2  6E39               	movwf	(___flmul@a+3)^0,c
 11194   0023E4                     l1329:
 11195   0023E4  5043               	movf	___flmul@aexp^0,w,c
 11196   0023E6  B4D8               	btfsc	status,2,c
 11197   0023E8  EFF8  F011         	goto	u3731
 11198   0023EC  EFFA  F011         	goto	u3730
 11199   0023F0                     u3731:
 11200   0023F0  EF02  F012         	goto	l4161
 11201   0023F4                     u3730:
 11202   0023F4  5044               	movf	___flmul@bexp^0,w,c
 11203   0023F6  A4D8               	btfss	status,2,c
 11204   0023F8  EF00  F012         	goto	u3741
 11205   0023FC  EF02  F012         	goto	u3740
 11206   002400                     u3741:
 11207   002400  EF0C  F012         	goto	l4165
 11208   002404                     u3740:
 11209   002404                     l4161:
 11210   002404  0E00               	movlw	0
 11211   002406  6E32               	movwf	?___flmul^0,c
 11212   002408  0E00               	movlw	0
 11213   00240A  6E33               	movwf	(?___flmul+1)^0,c
 11214   00240C  0E00               	movlw	0
 11215   00240E  6E34               	movwf	(?___flmul+2)^0,c
 11216   002410  0E00               	movlw	0
 11217   002412  6E35               	movwf	(?___flmul+3)^0,c
 11218   002414  EFA4  F013         	goto	l1333
 11219   002418                     l4165:
 11220   002418  5038               	movf	(___flmul@a+2)^0,w,c
 11221   00241A  0232               	mulwf	___flmul@b^0,c
 11222   00241C  CFF3 F049          	movff	prodl,___flmul@temp
 11223   002420  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11224   002424  5049               	movf	___flmul@temp^0,w,c
 11225   002426  6E3F               	movwf	___flmul@grs^0,c
 11226   002428  6A40               	clrf	(___flmul@grs+1)^0,c
 11227   00242A  6A41               	clrf	(___flmul@grs+2)^0,c
 11228   00242C  6A42               	clrf	(___flmul@grs+3)^0,c
 11229   00242E  504A               	movf	(___flmul@temp+1)^0,w,c
 11230   002430  6E45               	movwf	___flmul@prod^0,c
 11231   002432  6A46               	clrf	(___flmul@prod+1)^0,c
 11232   002434  6A47               	clrf	(___flmul@prod+2)^0,c
 11233   002436  6A48               	clrf	(___flmul@prod+3)^0,c
 11234   002438  5037               	movf	(___flmul@a+1)^0,w,c
 11235   00243A  0233               	mulwf	(___flmul@b+1)^0,c
 11236   00243C  CFF3 F049          	movff	prodl,___flmul@temp
 11237   002440  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11238   002444  5049               	movf	___flmul@temp^0,w,c
 11239   002446  263F               	addwf	___flmul@grs^0,f,c
 11240   002448  0E00               	movlw	0
 11241   00244A  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11242   00244C  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11243   00244E  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11244   002450  504A               	movf	(___flmul@temp+1)^0,w,c
 11245   002452  2645               	addwf	___flmul@prod^0,f,c
 11246   002454  0E00               	movlw	0
 11247   002456  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11248   002458  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11249   00245A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11250   00245C  5036               	movf	___flmul@a^0,w,c
 11251   00245E  0234               	mulwf	(___flmul@b+2)^0,c
 11252   002460  CFF3 F049          	movff	prodl,___flmul@temp
 11253   002464  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11254   002468  5049               	movf	___flmul@temp^0,w,c
 11255   00246A  263F               	addwf	___flmul@grs^0,f,c
 11256   00246C  0E00               	movlw	0
 11257   00246E  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11258   002470  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11259   002472  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11260   002474  504A               	movf	(___flmul@temp+1)^0,w,c
 11261   002476  2645               	addwf	___flmul@prod^0,f,c
 11262   002478  0E00               	movlw	0
 11263   00247A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11264   00247C  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11265   00247E  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11266   002480  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11267   002484  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11268   002488  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11269   00248C  6A3F               	clrf	___flmul@grs^0,c
 11270   00248E  5036               	movf	___flmul@a^0,w,c
 11271   002490  0233               	mulwf	(___flmul@b+1)^0,c
 11272   002492  CFF3 F049          	movff	prodl,___flmul@temp
 11273   002496  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11274   00249A  5049               	movf	___flmul@temp^0,w,c
 11275   00249C  263F               	addwf	___flmul@grs^0,f,c
 11276   00249E  504A               	movf	(___flmul@temp+1)^0,w,c
 11277   0024A0  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11278   0024A2  0E00               	movlw	0
 11279   0024A4  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11280   0024A6  0E00               	movlw	0
 11281   0024A8  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11282   0024AA  5037               	movf	(___flmul@a+1)^0,w,c
 11283   0024AC  0232               	mulwf	___flmul@b^0,c
 11284   0024AE  CFF3 F049          	movff	prodl,___flmul@temp
 11285   0024B2  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11286   0024B6  5049               	movf	___flmul@temp^0,w,c
 11287   0024B8  263F               	addwf	___flmul@grs^0,f,c
 11288   0024BA  504A               	movf	(___flmul@temp+1)^0,w,c
 11289   0024BC  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11290   0024BE  0E00               	movlw	0
 11291   0024C0  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11292   0024C2  0E00               	movlw	0
 11293   0024C4  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11294   0024C6  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11295   0024CA  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11296   0024CE  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11297   0024D2  6A3F               	clrf	___flmul@grs^0,c
 11298   0024D4  5036               	movf	___flmul@a^0,w,c
 11299   0024D6  0232               	mulwf	___flmul@b^0,c
 11300   0024D8  CFF3 F049          	movff	prodl,___flmul@temp
 11301   0024DC  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11302   0024E0  5049               	movf	___flmul@temp^0,w,c
 11303   0024E2  263F               	addwf	___flmul@grs^0,f,c
 11304   0024E4  504A               	movf	(___flmul@temp+1)^0,w,c
 11305   0024E6  2240               	addwfc	(___flmul@grs+1)^0,f,c
 11306   0024E8  0E00               	movlw	0
 11307   0024EA  2241               	addwfc	(___flmul@grs+2)^0,f,c
 11308   0024EC  0E00               	movlw	0
 11309   0024EE  2242               	addwfc	(___flmul@grs+3)^0,f,c
 11310   0024F0  5038               	movf	(___flmul@a+2)^0,w,c
 11311   0024F2  0233               	mulwf	(___flmul@b+1)^0,c
 11312   0024F4  CFF3 F049          	movff	prodl,___flmul@temp
 11313   0024F8  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11314   0024FC  5049               	movf	___flmul@temp^0,w,c
 11315   0024FE  2645               	addwf	___flmul@prod^0,f,c
 11316   002500  504A               	movf	(___flmul@temp+1)^0,w,c
 11317   002502  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11318   002504  0E00               	movlw	0
 11319   002506  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11320   002508  0E00               	movlw	0
 11321   00250A  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11322   00250C  5037               	movf	(___flmul@a+1)^0,w,c
 11323   00250E  0234               	mulwf	(___flmul@b+2)^0,c
 11324   002510  CFF3 F049          	movff	prodl,___flmul@temp
 11325   002514  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11326   002518  5049               	movf	___flmul@temp^0,w,c
 11327   00251A  2645               	addwf	___flmul@prod^0,f,c
 11328   00251C  504A               	movf	(___flmul@temp+1)^0,w,c
 11329   00251E  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11330   002520  0E00               	movlw	0
 11331   002522  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11332   002524  0E00               	movlw	0
 11333   002526  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11334   002528  5038               	movf	(___flmul@a+2)^0,w,c
 11335   00252A  0234               	mulwf	(___flmul@b+2)^0,c
 11336   00252C  CFF3 F049          	movff	prodl,___flmul@temp
 11337   002530  CFF4 F04A          	movff	prodh,___flmul@temp+1
 11338   002534  5049               	movf	___flmul@temp^0,w,c
 11339   002536  6E3A               	movwf	??___flmul^0,c
 11340   002538  504A               	movf	(___flmul@temp+1)^0,w,c
 11341   00253A  6E3B               	movwf	(??___flmul+1)^0,c
 11342   00253C  6A3C               	clrf	(??___flmul+2)^0,c
 11343   00253E  6A3D               	clrf	(??___flmul+3)^0,c
 11344   002540  C03C  F03D         	movff	??___flmul+2,??___flmul+3
 11345   002544  C03B  F03C         	movff	??___flmul+1,??___flmul+2
 11346   002548  C03A  F03B         	movff	??___flmul,??___flmul+1
 11347   00254C  6A3A               	clrf	??___flmul^0,c
 11348   00254E  503A               	movf	??___flmul^0,w,c
 11349   002550  2645               	addwf	___flmul@prod^0,f,c
 11350   002552  503B               	movf	(??___flmul+1)^0,w,c
 11351   002554  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11352   002556  503C               	movf	(??___flmul+2)^0,w,c
 11353   002558  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11354   00255A  503D               	movf	(??___flmul+3)^0,w,c
 11355   00255C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11356   00255E  C03F  F03A         	movff	___flmul@grs,??___flmul
 11357   002562  C040  F03B         	movff	___flmul@grs+1,??___flmul+1
 11358   002566  C041  F03C         	movff	___flmul@grs+2,??___flmul+2
 11359   00256A  C042  F03D         	movff	___flmul@grs+3,??___flmul+3
 11360   00256E  0E19               	movlw	25
 11361   002570  EFBF  F012         	goto	u3750
 11362   002574                     u3755:
 11363   002574  90D8               	bcf	status,0,c
 11364   002576  323D               	rrcf	(??___flmul+3)^0,f,c
 11365   002578  323C               	rrcf	(??___flmul+2)^0,f,c
 11366   00257A  323B               	rrcf	(??___flmul+1)^0,f,c
 11367   00257C  323A               	rrcf	??___flmul^0,f,c
 11368   00257E                     u3750:
 11369   00257E  2EE8               	decfsz	wreg,f,c
 11370   002580  EFBA  F012         	goto	u3755
 11371   002584  503A               	movf	??___flmul^0,w,c
 11372   002586  2645               	addwf	___flmul@prod^0,f,c
 11373   002588  503B               	movf	(??___flmul+1)^0,w,c
 11374   00258A  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11375   00258C  503C               	movf	(??___flmul+2)^0,w,c
 11376   00258E  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11377   002590  503D               	movf	(??___flmul+3)^0,w,c
 11378   002592  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11379   002594  C041  F042         	movff	___flmul@grs+2,___flmul@grs+3
 11380   002598  C040  F041         	movff	___flmul@grs+1,___flmul@grs+2
 11381   00259C  C03F  F040         	movff	___flmul@grs,___flmul@grs+1
 11382   0025A0  6A3F               	clrf	___flmul@grs^0,c
 11383   0025A2  5043               	movf	___flmul@aexp^0,w,c
 11384   0025A4  C044  F03A         	movff	___flmul@bexp,??___flmul
 11385   0025A8  6A3B               	clrf	(??___flmul+1)^0,c
 11386   0025AA  263A               	addwf	??___flmul^0,f,c
 11387   0025AC  0E00               	movlw	0
 11388   0025AE  223B               	addwfc	(??___flmul+1)^0,f,c
 11389   0025B0  0E82               	movlw	130
 11390   0025B2  243A               	addwf	??___flmul^0,w,c
 11391   0025B4  6E49               	movwf	___flmul@temp^0,c
 11392   0025B6  0EFF               	movlw	255
 11393   0025B8  203B               	addwfc	(??___flmul+1)^0,w,c
 11394   0025BA  6E4A               	movwf	(___flmul@temp+1)^0,c
 11395   0025BC  EFF5  F012         	goto	l4213
 11396   0025C0                     l4207:
 11397   0025C0  90D8               	bcf	status,0,c
 11398   0025C2  3645               	rlcf	___flmul@prod^0,f,c
 11399   0025C4  3646               	rlcf	(___flmul@prod+1)^0,f,c
 11400   0025C6  3647               	rlcf	(___flmul@prod+2)^0,f,c
 11401   0025C8  3648               	rlcf	(___flmul@prod+3)^0,f,c
 11402   0025CA  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11403   0025CC  EFEA  F012         	goto	u3761
 11404   0025D0  EFEC  F012         	goto	u3760
 11405   0025D4                     u3761:
 11406   0025D4  EFED  F012         	goto	l1336
 11407   0025D8                     u3760:
 11408   0025D8  8045               	bsf	___flmul@prod^0,0,c
 11409   0025DA                     l1336:
 11410   0025DA  90D8               	bcf	status,0,c
 11411   0025DC  363F               	rlcf	___flmul@grs^0,f,c
 11412   0025DE  3640               	rlcf	(___flmul@grs+1)^0,f,c
 11413   0025E0  3641               	rlcf	(___flmul@grs+2)^0,f,c
 11414   0025E2  3642               	rlcf	(___flmul@grs+3)^0,f,c
 11415   0025E4  0649               	decf	___flmul@temp^0,f,c
 11416   0025E6  A0D8               	btfss	status,0,c
 11417   0025E8  064A               	decf	(___flmul@temp+1)^0,f,c
 11418   0025EA                     l4213:
 11419   0025EA  AE47               	btfss	(___flmul@prod+2)^0,7,c
 11420   0025EC  EFFA  F012         	goto	u3771
 11421   0025F0  EFFC  F012         	goto	u3770
 11422   0025F4                     u3771:
 11423   0025F4  EFE0  F012         	goto	l4207
 11424   0025F8                     u3770:
 11425   0025F8  0E00               	movlw	0
 11426   0025FA  6E43               	movwf	___flmul@aexp^0,c
 11427   0025FC  AE42               	btfss	(___flmul@grs+3)^0,7,c
 11428   0025FE  EF03  F013         	goto	u3781
 11429   002602  EF05  F013         	goto	u3780
 11430   002606                     u3781:
 11431   002606  EF29  F013         	goto	l1338
 11432   00260A                     u3780:
 11433   00260A  0EFF               	movlw	255
 11434   00260C  143F               	andwf	___flmul@grs^0,w,c
 11435   00260E  6E3A               	movwf	??___flmul^0,c
 11436   002610  0EFF               	movlw	255
 11437   002612  1440               	andwf	(___flmul@grs+1)^0,w,c
 11438   002614  6E3B               	movwf	(??___flmul+1)^0,c
 11439   002616  0EFF               	movlw	255
 11440   002618  1441               	andwf	(___flmul@grs+2)^0,w,c
 11441   00261A  6E3C               	movwf	(??___flmul+2)^0,c
 11442   00261C  0E7F               	movlw	127
 11443   00261E  1442               	andwf	(___flmul@grs+3)^0,w,c
 11444   002620  6E3D               	movwf	(??___flmul+3)^0,c
 11445   002622  503A               	movf	??___flmul^0,w,c
 11446   002624  103B               	iorwf	(??___flmul+1)^0,w,c
 11447   002626  103C               	iorwf	(??___flmul+2)^0,w,c
 11448   002628  103D               	iorwf	(??___flmul+3)^0,w,c
 11449   00262A  B4D8               	btfsc	status,2,c
 11450   00262C  EF1A  F013         	goto	u3791
 11451   002630  EF1C  F013         	goto	u3790
 11452   002634                     u3791:
 11453   002634  EF20  F013         	goto	l1339
 11454   002638                     u3790:
 11455   002638                     l4221:
 11456   002638  0E01               	movlw	1
 11457   00263A  6E43               	movwf	___flmul@aexp^0,c
 11458   00263C  EF29  F013         	goto	l1338
 11459   002640                     l1339:
 11460   002640  A045               	btfss	___flmul@prod^0,0,c
 11461   002642  EF25  F013         	goto	u3801
 11462   002646  EF27  F013         	goto	u3800
 11463   00264A                     u3801:
 11464   00264A  EF29  F013         	goto	l1338
 11465   00264E                     u3800:
 11466   00264E  EF1C  F013         	goto	l4221
 11467   002652                     l1338:
 11468   002652  5043               	movf	___flmul@aexp^0,w,c
 11469   002654  B4D8               	btfsc	status,2,c
 11470   002656  EF2F  F013         	goto	u3811
 11471   00265A  EF31  F013         	goto	u3810
 11472   00265E                     u3811:
 11473   00265E  EF55  F013         	goto	l4233
 11474   002662                     u3810:
 11475   002662  0E01               	movlw	1
 11476   002664  2645               	addwf	___flmul@prod^0,f,c
 11477   002666  0E00               	movlw	0
 11478   002668  2246               	addwfc	(___flmul@prod+1)^0,f,c
 11479   00266A  2247               	addwfc	(___flmul@prod+2)^0,f,c
 11480   00266C  2248               	addwfc	(___flmul@prod+3)^0,f,c
 11481   00266E  A048               	btfss	(___flmul@prod+3)^0,0,c
 11482   002670  EF3C  F013         	goto	u3821
 11483   002674  EF3E  F013         	goto	u3820
 11484   002678                     u3821:
 11485   002678  EF55  F013         	goto	l4233
 11486   00267C                     u3820:
 11487   00267C  C045  F03A         	movff	___flmul@prod,??___flmul
 11488   002680  C046  F03B         	movff	___flmul@prod+1,??___flmul+1
 11489   002684  C047  F03C         	movff	___flmul@prod+2,??___flmul+2
 11490   002688  C048  F03D         	movff	___flmul@prod+3,??___flmul+3
 11491   00268C  343D               	rlcf	(??___flmul+3)^0,w,c
 11492   00268E  323D               	rrcf	(??___flmul+3)^0,f,c
 11493   002690  323C               	rrcf	(??___flmul+2)^0,f,c
 11494   002692  323B               	rrcf	(??___flmul+1)^0,f,c
 11495   002694  323A               	rrcf	??___flmul^0,f,c
 11496   002696  C03A  F045         	movff	??___flmul,___flmul@prod
 11497   00269A  C03B  F046         	movff	??___flmul+1,___flmul@prod+1
 11498   00269E  C03C  F047         	movff	??___flmul+2,___flmul@prod+2
 11499   0026A2  C03D  F048         	movff	??___flmul+3,___flmul@prod+3
 11500   0026A6  4A49               	infsnz	___flmul@temp^0,f,c
 11501   0026A8  2A4A               	incf	(___flmul@temp+1)^0,f,c
 11502   0026AA                     l4233:
 11503   0026AA  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11504   0026AC  EF60  F013         	goto	u3831
 11505   0026B0  504A               	movf	(___flmul@temp+1)^0,w,c
 11506   0026B2  E108               	bnz	u3830
 11507   0026B4  2849               	incf	___flmul@temp^0,w,c
 11508   0026B6  A0D8               	btfss	status,0,c
 11509   0026B8  EF60  F013         	goto	u3831
 11510   0026BC  EF62  F013         	goto	u3830
 11511   0026C0                     u3831:
 11512   0026C0  EF6C  F013         	goto	l4237
 11513   0026C4                     u3830:
 11514   0026C4  0E00               	movlw	0
 11515   0026C6  6E45               	movwf	___flmul@prod^0,c
 11516   0026C8  0E00               	movlw	0
 11517   0026CA  6E46               	movwf	(___flmul@prod+1)^0,c
 11518   0026CC  0E80               	movlw	128
 11519   0026CE  6E47               	movwf	(___flmul@prod+2)^0,c
 11520   0026D0  0E7F               	movlw	127
 11521   0026D2  6E48               	movwf	(___flmul@prod+3)^0,c
 11522   0026D4  EF9A  F013         	goto	l4249
 11523   0026D8                     l4237:
 11524   0026D8  BE4A               	btfsc	(___flmul@temp+1)^0,7,c
 11525   0026DA  EF79  F013         	goto	u3840
 11526   0026DE  504A               	movf	(___flmul@temp+1)^0,w,c
 11527   0026E0  E106               	bnz	u3841
 11528   0026E2  0449               	decf	___flmul@temp^0,w,c
 11529   0026E4  B0D8               	btfsc	status,0,c
 11530   0026E6  EF77  F013         	goto	u3841
 11531   0026EA  EF79  F013         	goto	u3840
 11532   0026EE                     u3841:
 11533   0026EE  EF85  F013         	goto	l1346
 11534   0026F2                     u3840:
 11535   0026F2  0E00               	movlw	0
 11536   0026F4  6E45               	movwf	___flmul@prod^0,c
 11537   0026F6  0E00               	movlw	0
 11538   0026F8  6E46               	movwf	(___flmul@prod+1)^0,c
 11539   0026FA  0E00               	movlw	0
 11540   0026FC  6E47               	movwf	(___flmul@prod+2)^0,c
 11541   0026FE  0E00               	movlw	0
 11542   002700  6E48               	movwf	(___flmul@prod+3)^0,c
 11543   002702  0E00               	movlw	0
 11544   002704  6E3E               	movwf	___flmul@sign^0,c
 11545   002706  EF9A  F013         	goto	l4249
 11546   00270A                     l1346:
 11547   00270A  C049  F044         	movff	___flmul@temp,___flmul@bexp
 11548   00270E  0EFF               	movlw	255
 11549   002710  1645               	andwf	___flmul@prod^0,f,c
 11550   002712  0EFF               	movlw	255
 11551   002714  1646               	andwf	(___flmul@prod+1)^0,f,c
 11552   002716  0E7F               	movlw	127
 11553   002718  1647               	andwf	(___flmul@prod+2)^0,f,c
 11554   00271A  0E00               	movlw	0
 11555   00271C  1648               	andwf	(___flmul@prod+3)^0,f,c
 11556   00271E  A044               	btfss	___flmul@bexp^0,0,c
 11557   002720  EF94  F013         	goto	u3851
 11558   002724  EF96  F013         	goto	u3850
 11559   002728                     u3851:
 11560   002728  EF97  F013         	goto	l4247
 11561   00272C                     u3850:
 11562   00272C  8E47               	bsf	(___flmul@prod+2)^0,7,c
 11563   00272E                     l4247:
 11564   00272E  90D8               	bcf	status,0,c
 11565   002730  3044               	rrcf	___flmul@bexp^0,w,c
 11566   002732  6E48               	movwf	(___flmul@prod+3)^0,c
 11567   002734                     l4249:
 11568   002734  503E               	movf	___flmul@sign^0,w,c
 11569   002736  1248               	iorwf	(___flmul@prod+3)^0,f,c
 11570   002738  C045  F032         	movff	___flmul@prod,?___flmul
 11571   00273C  C046  F033         	movff	___flmul@prod+1,?___flmul+1
 11572   002740  C047  F034         	movff	___flmul@prod+2,?___flmul+2
 11573   002744  C048  F035         	movff	___flmul@prod+3,?___flmul+3
 11574   002748                     l1333:
 11575   002748  0012               	return		;funcret
 11576   00274A                     __end_of___flmul:
 11577                           	callstack 0
 11578                           
 11579 ;; *************** function ___flge *****************
 11580 ;; Defined at:
 11581 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  ff1             4    0[COMRAM] unsigned char 
 11584 ;;  ff2             4    4[COMRAM] unsigned char 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;		None
 11587 ;; Return value:  Size  Location     Type
 11588 ;;		None               void
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11596 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11599 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11600 ;;Total ram usage:       12 bytes
 11601 ;; Hardware stack levels used: 1
 11602 ;; Hardware stack levels required when called: 1
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_Colour_decider
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           	psect	text68
 11611   003BE0                     __ptext68:
 11612                           	callstack 0
 11613   003BE0                     ___flge:
 11614                           	callstack 28
 11615   003BE0  0E00               	movlw	0
 11616   003BE2  1401               	andwf	___flge@ff1^0,w,c
 11617   003BE4  6E09               	movwf	??___flge^0,c
 11618   003BE6  0E00               	movlw	0
 11619   003BE8  1402               	andwf	(___flge@ff1+1)^0,w,c
 11620   003BEA  6E0A               	movwf	(??___flge+1)^0,c
 11621   003BEC  0E80               	movlw	128
 11622   003BEE  1403               	andwf	(___flge@ff1+2)^0,w,c
 11623   003BF0  6E0B               	movwf	(??___flge+2)^0,c
 11624   003BF2  0E7F               	movlw	127
 11625   003BF4  1404               	andwf	(___flge@ff1+3)^0,w,c
 11626   003BF6  6E0C               	movwf	(??___flge+3)^0,c
 11627   003BF8  5009               	movf	??___flge^0,w,c
 11628   003BFA  100A               	iorwf	(??___flge+1)^0,w,c
 11629   003BFC  100B               	iorwf	(??___flge+2)^0,w,c
 11630   003BFE  100C               	iorwf	(??___flge+3)^0,w,c
 11631   003C00  A4D8               	btfss	status,2,c
 11632   003C02  EF05  F01E         	goto	u3891
 11633   003C06  EF07  F01E         	goto	u3890
 11634   003C0A                     u3891:
 11635   003C0A  EF0F  F01E         	goto	l4281
 11636   003C0E                     u3890:
 11637   003C0E  0E00               	movlw	0
 11638   003C10  6E01               	movwf	___flge@ff1^0,c
 11639   003C12  0E00               	movlw	0
 11640   003C14  6E02               	movwf	(___flge@ff1+1)^0,c
 11641   003C16  0E00               	movlw	0
 11642   003C18  6E03               	movwf	(___flge@ff1+2)^0,c
 11643   003C1A  0E00               	movlw	0
 11644   003C1C  6E04               	movwf	(___flge@ff1+3)^0,c
 11645   003C1E                     l4281:
 11646   003C1E  0E00               	movlw	0
 11647   003C20  1405               	andwf	___flge@ff2^0,w,c
 11648   003C22  6E09               	movwf	??___flge^0,c
 11649   003C24  0E00               	movlw	0
 11650   003C26  1406               	andwf	(___flge@ff2+1)^0,w,c
 11651   003C28  6E0A               	movwf	(??___flge+1)^0,c
 11652   003C2A  0E80               	movlw	128
 11653   003C2C  1407               	andwf	(___flge@ff2+2)^0,w,c
 11654   003C2E  6E0B               	movwf	(??___flge+2)^0,c
 11655   003C30  0E7F               	movlw	127
 11656   003C32  1408               	andwf	(___flge@ff2+3)^0,w,c
 11657   003C34  6E0C               	movwf	(??___flge+3)^0,c
 11658   003C36  5009               	movf	??___flge^0,w,c
 11659   003C38  100A               	iorwf	(??___flge+1)^0,w,c
 11660   003C3A  100B               	iorwf	(??___flge+2)^0,w,c
 11661   003C3C  100C               	iorwf	(??___flge+3)^0,w,c
 11662   003C3E  A4D8               	btfss	status,2,c
 11663   003C40  EF24  F01E         	goto	u3901
 11664   003C44  EF26  F01E         	goto	u3900
 11665   003C48                     u3901:
 11666   003C48  EF2E  F01E         	goto	l4285
 11667   003C4C                     u3900:
 11668   003C4C  0E00               	movlw	0
 11669   003C4E  6E05               	movwf	___flge@ff2^0,c
 11670   003C50  0E00               	movlw	0
 11671   003C52  6E06               	movwf	(___flge@ff2+1)^0,c
 11672   003C54  0E00               	movlw	0
 11673   003C56  6E07               	movwf	(___flge@ff2+2)^0,c
 11674   003C58  0E00               	movlw	0
 11675   003C5A  6E08               	movwf	(___flge@ff2+3)^0,c
 11676   003C5C                     l4285:
 11677   003C5C  AE04               	btfss	(___flge@ff1+3)^0,7,c
 11678   003C5E  EF33  F01E         	goto	u3911
 11679   003C62  EF35  F01E         	goto	u3910
 11680   003C66                     u3911:
 11681   003C66  EF3E  F01E         	goto	l4289
 11682   003C6A                     u3910:
 11683   003C6A  6C01               	negf	___flge@ff1^0,c
 11684   003C6C  1E02               	comf	(___flge@ff1+1)^0,f,c
 11685   003C6E  B0D8               	btfsc	status,0,c
 11686   003C70  2A02               	incf	(___flge@ff1+1)^0,f,c
 11687   003C72  1E03               	comf	(___flge@ff1+2)^0,f,c
 11688   003C74  B0D8               	btfsc	status,0,c
 11689   003C76  2A03               	incf	(___flge@ff1+2)^0,f,c
 11690   003C78  0E80               	movlw	128
 11691   003C7A  5604               	subfwb	(___flge@ff1+3)^0,f,c
 11692   003C7C                     l4289:
 11693   003C7C  AE08               	btfss	(___flge@ff2+3)^0,7,c
 11694   003C7E  EF43  F01E         	goto	u3921
 11695   003C82  EF45  F01E         	goto	u3920
 11696   003C86                     u3921:
 11697   003C86  EF4E  F01E         	goto	l980
 11698   003C8A                     u3920:
 11699   003C8A  6C05               	negf	___flge@ff2^0,c
 11700   003C8C  1E06               	comf	(___flge@ff2+1)^0,f,c
 11701   003C8E  B0D8               	btfsc	status,0,c
 11702   003C90  2A06               	incf	(___flge@ff2+1)^0,f,c
 11703   003C92  1E07               	comf	(___flge@ff2+2)^0,f,c
 11704   003C94  B0D8               	btfsc	status,0,c
 11705   003C96  2A07               	incf	(___flge@ff2+2)^0,f,c
 11706   003C98  0E80               	movlw	128
 11707   003C9A  5608               	subfwb	(___flge@ff2+3)^0,f,c
 11708   003C9C                     l980:
 11709   003C9C  0E00               	movlw	0
 11710   003C9E  1A01               	xorwf	___flge@ff1^0,f,c
 11711   003CA0  0E00               	movlw	0
 11712   003CA2  1A02               	xorwf	(___flge@ff1+1)^0,f,c
 11713   003CA4  0E00               	movlw	0
 11714   003CA6  1A03               	xorwf	(___flge@ff1+2)^0,f,c
 11715   003CA8  0E80               	movlw	128
 11716   003CAA  1A04               	xorwf	(___flge@ff1+3)^0,f,c
 11717   003CAC  0E00               	movlw	0
 11718   003CAE  1A05               	xorwf	___flge@ff2^0,f,c
 11719   003CB0  0E00               	movlw	0
 11720   003CB2  1A06               	xorwf	(___flge@ff2+1)^0,f,c
 11721   003CB4  0E00               	movlw	0
 11722   003CB6  1A07               	xorwf	(___flge@ff2+2)^0,f,c
 11723   003CB8  0E80               	movlw	128
 11724   003CBA  1A08               	xorwf	(___flge@ff2+3)^0,f,c
 11725   003CBC  5005               	movf	___flge@ff2^0,w,c
 11726   003CBE  5C01               	subwf	___flge@ff1^0,w,c
 11727   003CC0  5006               	movf	(___flge@ff2+1)^0,w,c
 11728   003CC2  5802               	subwfb	(___flge@ff1+1)^0,w,c
 11729   003CC4  5007               	movf	(___flge@ff2+2)^0,w,c
 11730   003CC6  5803               	subwfb	(___flge@ff1+2)^0,w,c
 11731   003CC8  5008               	movf	(___flge@ff2+3)^0,w,c
 11732   003CCA  5804               	subwfb	(___flge@ff1+3)^0,w,c
 11733   003CCC  B0D8               	btfsc	status,0,c
 11734   003CCE  EF6B  F01E         	goto	u3931
 11735   003CD2  EF6D  F01E         	goto	u3930
 11736   003CD6                     u3931:
 11737   003CD6  EF70  F01E         	goto	l4295
 11738   003CDA                     u3930:
 11739   003CDA  90D8               	bcf	status,0,c
 11740   003CDC  EF71  F01E         	goto	l985
 11741   003CE0                     l4295:
 11742   003CE0  80D8               	bsf	status,0,c
 11743   003CE2                     l985:
 11744   003CE2  0012               	return		;funcret
 11745   003CE4                     __end_of___flge:
 11746                           	callstack 0
 11747                           
 11748 ;; *************** function ___fleq *****************
 11749 ;; Defined at:
 11750 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  ff1             4   24[COMRAM] unsigned char 
 11753 ;;  ff2             4   28[COMRAM] unsigned char 
 11754 ;; Auto vars:     Size  Location     Type
 11755 ;;		None
 11756 ;; Return value:  Size  Location     Type
 11757 ;;		None               void
 11758 ;; Registers used:
 11759 ;;		wreg, status,2, status,0
 11760 ;; Tracked objects:
 11761 ;;		On entry : 0/0
 11762 ;;		On exit  : 0/0
 11763 ;;		Unchanged: 0/0
 11764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11767 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11768 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11769 ;;Total ram usage:       12 bytes
 11770 ;; Hardware stack levels used: 1
 11771 ;; Hardware stack levels required when called: 1
 11772 ;; This function calls:
 11773 ;;		Nothing
 11774 ;; This function is called by:
 11775 ;;		_Colour_decider
 11776 ;; This function uses a non-reentrant model
 11777 ;;
 11778                           
 11779                           	psect	text69
 11780   003E58                     __ptext69:
 11781                           	callstack 0
 11782   003E58                     ___fleq:
 11783                           	callstack 28
 11784   003E58  0E00               	movlw	0
 11785   003E5A  1419               	andwf	___fleq@ff1^0,w,c
 11786   003E5C  6E21               	movwf	??___fleq^0,c
 11787   003E5E  0E00               	movlw	0
 11788   003E60  141A               	andwf	(___fleq@ff1+1)^0,w,c
 11789   003E62  6E22               	movwf	(??___fleq+1)^0,c
 11790   003E64  0E80               	movlw	128
 11791   003E66  141B               	andwf	(___fleq@ff1+2)^0,w,c
 11792   003E68  6E23               	movwf	(??___fleq+2)^0,c
 11793   003E6A  0E7F               	movlw	127
 11794   003E6C  141C               	andwf	(___fleq@ff1+3)^0,w,c
 11795   003E6E  6E24               	movwf	(??___fleq+3)^0,c
 11796   003E70  5021               	movf	??___fleq^0,w,c
 11797   003E72  1022               	iorwf	(??___fleq+1)^0,w,c
 11798   003E74  1023               	iorwf	(??___fleq+2)^0,w,c
 11799   003E76  1024               	iorwf	(??___fleq+3)^0,w,c
 11800   003E78  A4D8               	btfss	status,2,c
 11801   003E7A  EF41  F01F         	goto	u3861
 11802   003E7E  EF43  F01F         	goto	u3860
 11803   003E82                     u3861:
 11804   003E82  EF4B  F01F         	goto	l4265
 11805   003E86                     u3860:
 11806   003E86  0E00               	movlw	0
 11807   003E88  6E19               	movwf	___fleq@ff1^0,c
 11808   003E8A  0E00               	movlw	0
 11809   003E8C  6E1A               	movwf	(___fleq@ff1+1)^0,c
 11810   003E8E  0E00               	movlw	0
 11811   003E90  6E1B               	movwf	(___fleq@ff1+2)^0,c
 11812   003E92  0E00               	movlw	0
 11813   003E94  6E1C               	movwf	(___fleq@ff1+3)^0,c
 11814   003E96                     l4265:
 11815   003E96  0E00               	movlw	0
 11816   003E98  141D               	andwf	___fleq@ff2^0,w,c
 11817   003E9A  6E21               	movwf	??___fleq^0,c
 11818   003E9C  0E00               	movlw	0
 11819   003E9E  141E               	andwf	(___fleq@ff2+1)^0,w,c
 11820   003EA0  6E22               	movwf	(??___fleq+1)^0,c
 11821   003EA2  0E80               	movlw	128
 11822   003EA4  141F               	andwf	(___fleq@ff2+2)^0,w,c
 11823   003EA6  6E23               	movwf	(??___fleq+2)^0,c
 11824   003EA8  0E7F               	movlw	127
 11825   003EAA  1420               	andwf	(___fleq@ff2+3)^0,w,c
 11826   003EAC  6E24               	movwf	(??___fleq+3)^0,c
 11827   003EAE  5021               	movf	??___fleq^0,w,c
 11828   003EB0  1022               	iorwf	(??___fleq+1)^0,w,c
 11829   003EB2  1023               	iorwf	(??___fleq+2)^0,w,c
 11830   003EB4  1024               	iorwf	(??___fleq+3)^0,w,c
 11831   003EB6  A4D8               	btfss	status,2,c
 11832   003EB8  EF60  F01F         	goto	u3871
 11833   003EBC  EF62  F01F         	goto	u3870
 11834   003EC0                     u3871:
 11835   003EC0  EF6A  F01F         	goto	l4269
 11836   003EC4                     u3870:
 11837   003EC4  0E00               	movlw	0
 11838   003EC6  6E1D               	movwf	___fleq@ff2^0,c
 11839   003EC8  0E00               	movlw	0
 11840   003ECA  6E1E               	movwf	(___fleq@ff2+1)^0,c
 11841   003ECC  0E00               	movlw	0
 11842   003ECE  6E1F               	movwf	(___fleq@ff2+2)^0,c
 11843   003ED0  0E00               	movlw	0
 11844   003ED2  6E20               	movwf	(___fleq@ff2+3)^0,c
 11845   003ED4                     l4269:
 11846   003ED4  501D               	movf	___fleq@ff2^0,w,c
 11847   003ED6  1819               	xorwf	___fleq@ff1^0,w,c
 11848   003ED8  E10F               	bnz	u3880
 11849   003EDA  501E               	movf	(___fleq@ff2+1)^0,w,c
 11850   003EDC  181A               	xorwf	(___fleq@ff1+1)^0,w,c
 11851   003EDE  E10C               	bnz	u3880
 11852   003EE0  501F               	movf	(___fleq@ff2+2)^0,w,c
 11853   003EE2  181B               	xorwf	(___fleq@ff1+2)^0,w,c
 11854   003EE4  E109               	bnz	u3880
 11855   003EE6  5020               	movf	(___fleq@ff2+3)^0,w,c
 11856   003EE8  181C               	xorwf	(___fleq@ff1+3)^0,w,c
 11857   003EEA  B4D8               	btfsc	status,2,c
 11858   003EEC  EF7A  F01F         	goto	u3881
 11859   003EF0  EF7C  F01F         	goto	u3880
 11860   003EF4                     u3881:
 11861   003EF4  EF7F  F01F         	goto	l4273
 11862   003EF8                     u3880:
 11863   003EF8  90D8               	bcf	status,0,c
 11864   003EFA  EF80  F01F         	goto	l974
 11865   003EFE                     l4273:
 11866   003EFE  80D8               	bsf	status,0,c
 11867   003F00                     l974:
 11868   003F00  0012               	return		;funcret
 11869   003F02                     __end_of___fleq:
 11870                           	callstack 0
 11871                           
 11872 ;; *************** function ___fldiv *****************
 11873 ;; Defined at:
 11874 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  b               4   24[COMRAM] unsigned char 
 11877 ;;  a               4   28[COMRAM] unsigned char 
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;  grs             4   43[COMRAM] unsigned long 
 11880 ;;  rem             4   36[COMRAM] unsigned long 
 11881 ;;  new_exp         2   41[COMRAM] short 
 11882 ;;  aexp            1   48[COMRAM] unsigned char 
 11883 ;;  bexp            1   47[COMRAM] unsigned char 
 11884 ;;  sign            1   40[COMRAM] unsigned char 
 11885 ;; Return value:  Size  Location     Type
 11886 ;;                  4   24[COMRAM] unsigned char 
 11887 ;; Registers used:
 11888 ;;		wreg, status,2, status,0
 11889 ;; Tracked objects:
 11890 ;;		On entry : 0/0
 11891 ;;		On exit  : 0/0
 11892 ;;		Unchanged: 0/0
 11893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11894 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11896 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11897 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;Total ram usage:       25 bytes
 11899 ;; Hardware stack levels used: 1
 11900 ;; Hardware stack levels required when called: 1
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		_colour_rel
 11905 ;;		_Colour_decider
 11906 ;; This function uses a non-reentrant model
 11907 ;;
 11908                           
 11909                           	psect	text70
 11910   00274A                     __ptext70:
 11911                           	callstack 0
 11912   00274A                     ___fldiv:
 11913                           	callstack 28
 11914   00274A  501C               	movf	(___fldiv@b+3)^0,w,c
 11915   00274C  0B80               	andlw	128
 11916   00274E  6E29               	movwf	___fldiv@sign^0,c
 11917   002750  501C               	movf	(___fldiv@b+3)^0,w,c
 11918   002752  241C               	addwf	(___fldiv@b+3)^0,w,c
 11919   002754  6E30               	movwf	___fldiv@bexp^0,c
 11920   002756  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 11921   002758  EFB0  F013         	goto	u3441
 11922   00275C  EFB2  F013         	goto	u3440
 11923   002760                     u3441:
 11924   002760  EFB3  F013         	goto	l3993
 11925   002764                     u3440:
 11926   002764  8030               	bsf	___fldiv@bexp^0,0,c
 11927   002766                     l3993:
 11928   002766  5030               	movf	___fldiv@bexp^0,w,c
 11929   002768  B4D8               	btfsc	status,2,c
 11930   00276A  EFB9  F013         	goto	u3451
 11931   00276E  EFBB  F013         	goto	u3450
 11932   002772                     u3451:
 11933   002772  EFD0  F013         	goto	l4003
 11934   002776                     u3450:
 11935   002776  2830               	incf	___fldiv@bexp^0,w,c
 11936   002778  A4D8               	btfss	status,2,c
 11937   00277A  EFC1  F013         	goto	u3461
 11938   00277E  EFC3  F013         	goto	u3460
 11939   002782                     u3461:
 11940   002782  EFCB  F013         	goto	l3999
 11941   002786                     u3460:
 11942   002786  0E00               	movlw	0
 11943   002788  6E19               	movwf	___fldiv@b^0,c
 11944   00278A  0E00               	movlw	0
 11945   00278C  6E1A               	movwf	(___fldiv@b+1)^0,c
 11946   00278E  0E00               	movlw	0
 11947   002790  6E1B               	movwf	(___fldiv@b+2)^0,c
 11948   002792  0E00               	movlw	0
 11949   002794  6E1C               	movwf	(___fldiv@b+3)^0,c
 11950   002796                     l3999:
 11951   002796  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 11952   002798  0E00               	movlw	0
 11953   00279A  6E1C               	movwf	(___fldiv@b+3)^0,c
 11954   00279C  EFD8  F013         	goto	l4005
 11955   0027A0                     l4003:
 11956   0027A0  0E00               	movlw	0
 11957   0027A2  6E19               	movwf	___fldiv@b^0,c
 11958   0027A4  0E00               	movlw	0
 11959   0027A6  6E1A               	movwf	(___fldiv@b+1)^0,c
 11960   0027A8  0E00               	movlw	0
 11961   0027AA  6E1B               	movwf	(___fldiv@b+2)^0,c
 11962   0027AC  0E00               	movlw	0
 11963   0027AE  6E1C               	movwf	(___fldiv@b+3)^0,c
 11964   0027B0                     l4005:
 11965   0027B0  5020               	movf	(___fldiv@a+3)^0,w,c
 11966   0027B2  0B80               	andlw	128
 11967   0027B4  1A29               	xorwf	___fldiv@sign^0,f,c
 11968   0027B6  5020               	movf	(___fldiv@a+3)^0,w,c
 11969   0027B8  2420               	addwf	(___fldiv@a+3)^0,w,c
 11970   0027BA  6E31               	movwf	___fldiv@aexp^0,c
 11971   0027BC  AE1F               	btfss	(___fldiv@a+2)^0,7,c
 11972   0027BE  EFE3  F013         	goto	u3471
 11973   0027C2  EFE5  F013         	goto	u3470
 11974   0027C6                     u3471:
 11975   0027C6  EFE6  F013         	goto	l4013
 11976   0027CA                     u3470:
 11977   0027CA  8031               	bsf	___fldiv@aexp^0,0,c
 11978   0027CC                     l4013:
 11979   0027CC  5031               	movf	___fldiv@aexp^0,w,c
 11980   0027CE  B4D8               	btfsc	status,2,c
 11981   0027D0  EFEC  F013         	goto	u3481
 11982   0027D4  EFEE  F013         	goto	u3480
 11983   0027D8                     u3481:
 11984   0027D8  EF03  F014         	goto	l4023
 11985   0027DC                     u3480:
 11986   0027DC  2831               	incf	___fldiv@aexp^0,w,c
 11987   0027DE  A4D8               	btfss	status,2,c
 11988   0027E0  EFF4  F013         	goto	u3491
 11989   0027E4  EFF6  F013         	goto	u3490
 11990   0027E8                     u3491:
 11991   0027E8  EFFE  F013         	goto	l4019
 11992   0027EC                     u3490:
 11993   0027EC  0E00               	movlw	0
 11994   0027EE  6E1D               	movwf	___fldiv@a^0,c
 11995   0027F0  0E00               	movlw	0
 11996   0027F2  6E1E               	movwf	(___fldiv@a+1)^0,c
 11997   0027F4  0E00               	movlw	0
 11998   0027F6  6E1F               	movwf	(___fldiv@a+2)^0,c
 11999   0027F8  0E00               	movlw	0
 12000   0027FA  6E20               	movwf	(___fldiv@a+3)^0,c
 12001   0027FC                     l4019:
 12002   0027FC  8E1F               	bsf	(___fldiv@a+2)^0,7,c
 12003   0027FE  0E00               	movlw	0
 12004   002800  6E20               	movwf	(___fldiv@a+3)^0,c
 12005   002802  EF0B  F014         	goto	l4025
 12006   002806                     l4023:
 12007   002806  0E00               	movlw	0
 12008   002808  6E1D               	movwf	___fldiv@a^0,c
 12009   00280A  0E00               	movlw	0
 12010   00280C  6E1E               	movwf	(___fldiv@a+1)^0,c
 12011   00280E  0E00               	movlw	0
 12012   002810  6E1F               	movwf	(___fldiv@a+2)^0,c
 12013   002812  0E00               	movlw	0
 12014   002814  6E20               	movwf	(___fldiv@a+3)^0,c
 12015   002816                     l4025:
 12016   002816  501D               	movf	___fldiv@a^0,w,c
 12017   002818  101E               	iorwf	(___fldiv@a+1)^0,w,c
 12018   00281A  101F               	iorwf	(___fldiv@a+2)^0,w,c
 12019   00281C  1020               	iorwf	(___fldiv@a+3)^0,w,c
 12020   00281E  A4D8               	btfss	status,2,c
 12021   002820  EF14  F014         	goto	u3501
 12022   002824  EF16  F014         	goto	u3500
 12023   002828                     u3501:
 12024   002828  EF2E  F014         	goto	l4037
 12025   00282C                     u3500:
 12026   00282C  0E00               	movlw	0
 12027   00282E  6E19               	movwf	___fldiv@b^0,c
 12028   002830  0E00               	movlw	0
 12029   002832  6E1A               	movwf	(___fldiv@b+1)^0,c
 12030   002834  0E00               	movlw	0
 12031   002836  6E1B               	movwf	(___fldiv@b+2)^0,c
 12032   002838  0E00               	movlw	0
 12033   00283A  6E1C               	movwf	(___fldiv@b+3)^0,c
 12034   00283C  0E80               	movlw	128
 12035   00283E  121B               	iorwf	(___fldiv@b+2)^0,f,c
 12036   002840  0E7F               	movlw	127
 12037   002842  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12038   002844                     l4031:
 12039   002844  5029               	movf	___fldiv@sign^0,w,c
 12040   002846  121C               	iorwf	(___fldiv@b+3)^0,f,c
 12041   002848  C019  F019         	movff	___fldiv@b,?___fldiv
 12042   00284C  C01A  F01A         	movff	___fldiv@b+1,?___fldiv+1
 12043   002850  C01B  F01B         	movff	___fldiv@b+2,?___fldiv+2
 12044   002854  C01C  F01C         	movff	___fldiv@b+3,?___fldiv+3
 12045   002858  EF71  F015         	goto	l1297
 12046   00285C                     l4037:
 12047   00285C  5030               	movf	___fldiv@bexp^0,w,c
 12048   00285E  A4D8               	btfss	status,2,c
 12049   002860  EF34  F014         	goto	u3511
 12050   002864  EF36  F014         	goto	u3510
 12051   002868                     u3511:
 12052   002868  EF40  F014         	goto	l4045
 12053   00286C                     u3510:
 12054   00286C  0E00               	movlw	0
 12055   00286E  6E19               	movwf	?___fldiv^0,c
 12056   002870  0E00               	movlw	0
 12057   002872  6E1A               	movwf	(?___fldiv+1)^0,c
 12058   002874  0E00               	movlw	0
 12059   002876  6E1B               	movwf	(?___fldiv+2)^0,c
 12060   002878  0E00               	movlw	0
 12061   00287A  6E1C               	movwf	(?___fldiv+3)^0,c
 12062   00287C  EF71  F015         	goto	l1297
 12063   002880                     l4045:
 12064   002880  5031               	movf	___fldiv@aexp^0,w,c
 12065   002882  C030  F021         	movff	___fldiv@bexp,??___fldiv
 12066   002886  6A22               	clrf	(??___fldiv+1)^0,c
 12067   002888  5E21               	subwf	??___fldiv^0,f,c
 12068   00288A  0E00               	movlw	0
 12069   00288C  5A22               	subwfb	(??___fldiv+1)^0,f,c
 12070   00288E  0E7F               	movlw	127
 12071   002890  2421               	addwf	??___fldiv^0,w,c
 12072   002892  6E2A               	movwf	___fldiv@new_exp^0,c
 12073   002894  0E00               	movlw	0
 12074   002896  2022               	addwfc	(??___fldiv+1)^0,w,c
 12075   002898  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12076   00289A  C019  F025         	movff	___fldiv@b,___fldiv@rem
 12077   00289E  C01A  F026         	movff	___fldiv@b+1,___fldiv@rem+1
 12078   0028A2  C01B  F027         	movff	___fldiv@b+2,___fldiv@rem+2
 12079   0028A6  C01C  F028         	movff	___fldiv@b+3,___fldiv@rem+3
 12080   0028AA  0E00               	movlw	0
 12081   0028AC  6E19               	movwf	___fldiv@b^0,c
 12082   0028AE  0E00               	movlw	0
 12083   0028B0  6E1A               	movwf	(___fldiv@b+1)^0,c
 12084   0028B2  0E00               	movlw	0
 12085   0028B4  6E1B               	movwf	(___fldiv@b+2)^0,c
 12086   0028B6  0E00               	movlw	0
 12087   0028B8  6E1C               	movwf	(___fldiv@b+3)^0,c
 12088   0028BA  0E00               	movlw	0
 12089   0028BC  6E2C               	movwf	___fldiv@grs^0,c
 12090   0028BE  0E00               	movlw	0
 12091   0028C0  6E2D               	movwf	(___fldiv@grs+1)^0,c
 12092   0028C2  0E00               	movlw	0
 12093   0028C4  6E2E               	movwf	(___fldiv@grs+2)^0,c
 12094   0028C6  0E00               	movlw	0
 12095   0028C8  6E2F               	movwf	(___fldiv@grs+3)^0,c
 12096   0028CA  0E00               	movlw	0
 12097   0028CC  6E31               	movwf	___fldiv@aexp^0,c
 12098   0028CE  EFA1  F014         	goto	l1299
 12099   0028D2                     l4055:
 12100   0028D2  5031               	movf	___fldiv@aexp^0,w,c
 12101   0028D4  B4D8               	btfsc	status,2,c
 12102   0028D6  EF6F  F014         	goto	u3521
 12103   0028DA  EF71  F014         	goto	u3520
 12104   0028DE                     u3521:
 12105   0028DE  EF88  F014         	goto	l4063
 12106   0028E2                     u3520:
 12107   0028E2  90D8               	bcf	status,0,c
 12108   0028E4  3625               	rlcf	___fldiv@rem^0,f,c
 12109   0028E6  3626               	rlcf	(___fldiv@rem+1)^0,f,c
 12110   0028E8  3627               	rlcf	(___fldiv@rem+2)^0,f,c
 12111   0028EA  3628               	rlcf	(___fldiv@rem+3)^0,f,c
 12112   0028EC  90D8               	bcf	status,0,c
 12113   0028EE  3619               	rlcf	___fldiv@b^0,f,c
 12114   0028F0  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12115   0028F2  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12116   0028F4  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12117   0028F6  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12118   0028F8  EF80  F014         	goto	u3531
 12119   0028FC  EF82  F014         	goto	u3530
 12120   002900                     u3531:
 12121   002900  EF83  F014         	goto	l1302
 12122   002904                     u3530:
 12123   002904  8019               	bsf	___fldiv@b^0,0,c
 12124   002906                     l1302:
 12125   002906  90D8               	bcf	status,0,c
 12126   002908  362C               	rlcf	___fldiv@grs^0,f,c
 12127   00290A  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12128   00290C  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12129   00290E  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12130   002910                     l4063:
 12131   002910  501D               	movf	___fldiv@a^0,w,c
 12132   002912  5C25               	subwf	___fldiv@rem^0,w,c
 12133   002914  501E               	movf	(___fldiv@a+1)^0,w,c
 12134   002916  5826               	subwfb	(___fldiv@rem+1)^0,w,c
 12135   002918  501F               	movf	(___fldiv@a+2)^0,w,c
 12136   00291A  5827               	subwfb	(___fldiv@rem+2)^0,w,c
 12137   00291C  5020               	movf	(___fldiv@a+3)^0,w,c
 12138   00291E  5828               	subwfb	(___fldiv@rem+3)^0,w,c
 12139   002920  A0D8               	btfss	status,0,c
 12140   002922  EF95  F014         	goto	u3541
 12141   002926  EF97  F014         	goto	u3540
 12142   00292A                     u3541:
 12143   00292A  EFA0  F014         	goto	l4069
 12144   00292E                     u3540:
 12145   00292E  8C2F               	bsf	(___fldiv@grs+3)^0,6,c
 12146   002930  501D               	movf	___fldiv@a^0,w,c
 12147   002932  5E25               	subwf	___fldiv@rem^0,f,c
 12148   002934  501E               	movf	(___fldiv@a+1)^0,w,c
 12149   002936  5A26               	subwfb	(___fldiv@rem+1)^0,f,c
 12150   002938  501F               	movf	(___fldiv@a+2)^0,w,c
 12151   00293A  5A27               	subwfb	(___fldiv@rem+2)^0,f,c
 12152   00293C  5020               	movf	(___fldiv@a+3)^0,w,c
 12153   00293E  5A28               	subwfb	(___fldiv@rem+3)^0,f,c
 12154   002940                     l4069:
 12155   002940  2A31               	incf	___fldiv@aexp^0,f,c
 12156   002942                     l1299:
 12157   002942  0E19               	movlw	25
 12158   002944  6431               	cpfsgt	___fldiv@aexp^0,c
 12159   002946  EFA7  F014         	goto	u3551
 12160   00294A  EFA9  F014         	goto	u3550
 12161   00294E                     u3551:
 12162   00294E  EF69  F014         	goto	l4055
 12163   002952                     u3550:
 12164   002952  5025               	movf	___fldiv@rem^0,w,c
 12165   002954  1026               	iorwf	(___fldiv@rem+1)^0,w,c
 12166   002956  1027               	iorwf	(___fldiv@rem+2)^0,w,c
 12167   002958  1028               	iorwf	(___fldiv@rem+3)^0,w,c
 12168   00295A  B4D8               	btfsc	status,2,c
 12169   00295C  EFB2  F014         	goto	u3561
 12170   002960  EFB4  F014         	goto	u3560
 12171   002964                     u3561:
 12172   002964  EFCC  F014         	goto	l4081
 12173   002968                     u3560:
 12174   002968  802C               	bsf	___fldiv@grs^0,0,c
 12175   00296A  EFCC  F014         	goto	l4081
 12176   00296E                     l4075:
 12177   00296E  90D8               	bcf	status,0,c
 12178   002970  3619               	rlcf	___fldiv@b^0,f,c
 12179   002972  361A               	rlcf	(___fldiv@b+1)^0,f,c
 12180   002974  361B               	rlcf	(___fldiv@b+2)^0,f,c
 12181   002976  361C               	rlcf	(___fldiv@b+3)^0,f,c
 12182   002978  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12183   00297A  EFC1  F014         	goto	u3571
 12184   00297E  EFC3  F014         	goto	u3570
 12185   002982                     u3571:
 12186   002982  EFC4  F014         	goto	l1308
 12187   002986                     u3570:
 12188   002986  8019               	bsf	___fldiv@b^0,0,c
 12189   002988                     l1308:
 12190   002988  90D8               	bcf	status,0,c
 12191   00298A  362C               	rlcf	___fldiv@grs^0,f,c
 12192   00298C  362D               	rlcf	(___fldiv@grs+1)^0,f,c
 12193   00298E  362E               	rlcf	(___fldiv@grs+2)^0,f,c
 12194   002990  362F               	rlcf	(___fldiv@grs+3)^0,f,c
 12195   002992  062A               	decf	___fldiv@new_exp^0,f,c
 12196   002994  A0D8               	btfss	status,0,c
 12197   002996  062B               	decf	(___fldiv@new_exp+1)^0,f,c
 12198   002998                     l4081:
 12199   002998  AE1B               	btfss	(___fldiv@b+2)^0,7,c
 12200   00299A  EFD1  F014         	goto	u3581
 12201   00299E  EFD3  F014         	goto	u3580
 12202   0029A2                     u3581:
 12203   0029A2  EFB7  F014         	goto	l4075
 12204   0029A6                     u3580:
 12205   0029A6  0E00               	movlw	0
 12206   0029A8  6E31               	movwf	___fldiv@aexp^0,c
 12207   0029AA  AE2F               	btfss	(___fldiv@grs+3)^0,7,c
 12208   0029AC  EFDA  F014         	goto	u3591
 12209   0029B0  EFDC  F014         	goto	u3590
 12210   0029B4                     u3591:
 12211   0029B4  EF00  F015         	goto	l1310
 12212   0029B8                     u3590:
 12213   0029B8  0EFF               	movlw	255
 12214   0029BA  142C               	andwf	___fldiv@grs^0,w,c
 12215   0029BC  6E21               	movwf	??___fldiv^0,c
 12216   0029BE  0EFF               	movlw	255
 12217   0029C0  142D               	andwf	(___fldiv@grs+1)^0,w,c
 12218   0029C2  6E22               	movwf	(??___fldiv+1)^0,c
 12219   0029C4  0EFF               	movlw	255
 12220   0029C6  142E               	andwf	(___fldiv@grs+2)^0,w,c
 12221   0029C8  6E23               	movwf	(??___fldiv+2)^0,c
 12222   0029CA  0E7F               	movlw	127
 12223   0029CC  142F               	andwf	(___fldiv@grs+3)^0,w,c
 12224   0029CE  6E24               	movwf	(??___fldiv+3)^0,c
 12225   0029D0  5021               	movf	??___fldiv^0,w,c
 12226   0029D2  1022               	iorwf	(??___fldiv+1)^0,w,c
 12227   0029D4  1023               	iorwf	(??___fldiv+2)^0,w,c
 12228   0029D6  1024               	iorwf	(??___fldiv+3)^0,w,c
 12229   0029D8  B4D8               	btfsc	status,2,c
 12230   0029DA  EFF1  F014         	goto	u3601
 12231   0029DE  EFF3  F014         	goto	u3600
 12232   0029E2                     u3601:
 12233   0029E2  EFF7  F014         	goto	l1311
 12234   0029E6                     u3600:
 12235   0029E6                     l4089:
 12236   0029E6  0E01               	movlw	1
 12237   0029E8  6E31               	movwf	___fldiv@aexp^0,c
 12238   0029EA  EF00  F015         	goto	l1310
 12239   0029EE                     l1311:
 12240   0029EE  A019               	btfss	___fldiv@b^0,0,c
 12241   0029F0  EFFC  F014         	goto	u3611
 12242   0029F4  EFFE  F014         	goto	u3610
 12243   0029F8                     u3611:
 12244   0029F8  EF00  F015         	goto	l1310
 12245   0029FC                     u3610:
 12246   0029FC  EFF3  F014         	goto	l4089
 12247   002A00                     l1310:
 12248   002A00  5031               	movf	___fldiv@aexp^0,w,c
 12249   002A02  B4D8               	btfsc	status,2,c
 12250   002A04  EF06  F015         	goto	u3621
 12251   002A08  EF08  F015         	goto	u3620
 12252   002A0C                     u3621:
 12253   002A0C  EF2C  F015         	goto	l4101
 12254   002A10                     u3620:
 12255   002A10  0E01               	movlw	1
 12256   002A12  2619               	addwf	___fldiv@b^0,f,c
 12257   002A14  0E00               	movlw	0
 12258   002A16  221A               	addwfc	(___fldiv@b+1)^0,f,c
 12259   002A18  221B               	addwfc	(___fldiv@b+2)^0,f,c
 12260   002A1A  221C               	addwfc	(___fldiv@b+3)^0,f,c
 12261   002A1C  A01C               	btfss	(___fldiv@b+3)^0,0,c
 12262   002A1E  EF13  F015         	goto	u3631
 12263   002A22  EF15  F015         	goto	u3630
 12264   002A26                     u3631:
 12265   002A26  EF2C  F015         	goto	l4101
 12266   002A2A                     u3630:
 12267   002A2A  C019  F021         	movff	___fldiv@b,??___fldiv
 12268   002A2E  C01A  F022         	movff	___fldiv@b+1,??___fldiv+1
 12269   002A32  C01B  F023         	movff	___fldiv@b+2,??___fldiv+2
 12270   002A36  C01C  F024         	movff	___fldiv@b+3,??___fldiv+3
 12271   002A3A  3424               	rlcf	(??___fldiv+3)^0,w,c
 12272   002A3C  3224               	rrcf	(??___fldiv+3)^0,f,c
 12273   002A3E  3223               	rrcf	(??___fldiv+2)^0,f,c
 12274   002A40  3222               	rrcf	(??___fldiv+1)^0,f,c
 12275   002A42  3221               	rrcf	??___fldiv^0,f,c
 12276   002A44  C021  F019         	movff	??___fldiv,___fldiv@b
 12277   002A48  C022  F01A         	movff	??___fldiv+1,___fldiv@b+1
 12278   002A4C  C023  F01B         	movff	??___fldiv+2,___fldiv@b+2
 12279   002A50  C024  F01C         	movff	??___fldiv+3,___fldiv@b+3
 12280   002A54  4A2A               	infsnz	___fldiv@new_exp^0,f,c
 12281   002A56  2A2B               	incf	(___fldiv@new_exp+1)^0,f,c
 12282   002A58                     l4101:
 12283   002A58  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12284   002A5A  EF37  F015         	goto	u3641
 12285   002A5E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12286   002A60  E108               	bnz	u3640
 12287   002A62  282A               	incf	___fldiv@new_exp^0,w,c
 12288   002A64  A0D8               	btfss	status,0,c
 12289   002A66  EF37  F015         	goto	u3641
 12290   002A6A  EF39  F015         	goto	u3640
 12291   002A6E                     u3641:
 12292   002A6E  EF44  F015         	goto	l4105
 12293   002A72                     u3640:
 12294   002A72  0E00               	movlw	0
 12295   002A74  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12296   002A76  682A               	setf	___fldiv@new_exp^0,c
 12297   002A78  0E00               	movlw	0
 12298   002A7A  6E19               	movwf	___fldiv@b^0,c
 12299   002A7C  0E00               	movlw	0
 12300   002A7E  6E1A               	movwf	(___fldiv@b+1)^0,c
 12301   002A80  0E00               	movlw	0
 12302   002A82  6E1B               	movwf	(___fldiv@b+2)^0,c
 12303   002A84  0E00               	movlw	0
 12304   002A86  6E1C               	movwf	(___fldiv@b+3)^0,c
 12305   002A88                     l4105:
 12306   002A88  BE2B               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12307   002A8A  EF51  F015         	goto	u3650
 12308   002A8E  502B               	movf	(___fldiv@new_exp+1)^0,w,c
 12309   002A90  E106               	bnz	u3651
 12310   002A92  042A               	decf	___fldiv@new_exp^0,w,c
 12311   002A94  B0D8               	btfsc	status,0,c
 12312   002A96  EF4F  F015         	goto	u3651
 12313   002A9A  EF51  F015         	goto	u3650
 12314   002A9E                     u3651:
 12315   002A9E  EF5F  F015         	goto	l4109
 12316   002AA2                     u3650:
 12317   002AA2  0E00               	movlw	0
 12318   002AA4  6E2B               	movwf	(___fldiv@new_exp+1)^0,c
 12319   002AA6  0E00               	movlw	0
 12320   002AA8  6E2A               	movwf	___fldiv@new_exp^0,c
 12321   002AAA  0E00               	movlw	0
 12322   002AAC  6E19               	movwf	___fldiv@b^0,c
 12323   002AAE  0E00               	movlw	0
 12324   002AB0  6E1A               	movwf	(___fldiv@b+1)^0,c
 12325   002AB2  0E00               	movlw	0
 12326   002AB4  6E1B               	movwf	(___fldiv@b+2)^0,c
 12327   002AB6  0E00               	movlw	0
 12328   002AB8  6E1C               	movwf	(___fldiv@b+3)^0,c
 12329   002ABA  0E00               	movlw	0
 12330   002ABC  6E29               	movwf	___fldiv@sign^0,c
 12331   002ABE                     l4109:
 12332   002ABE  C02A  F030         	movff	___fldiv@new_exp,___fldiv@bexp
 12333   002AC2  A030               	btfss	___fldiv@bexp^0,0,c
 12334   002AC4  EF66  F015         	goto	u3661
 12335   002AC8  EF68  F015         	goto	u3660
 12336   002ACC                     u3661:
 12337   002ACC  EF6B  F015         	goto	l4115
 12338   002AD0                     u3660:
 12339   002AD0  8E1B               	bsf	(___fldiv@b+2)^0,7,c
 12340   002AD2  EF6C  F015         	goto	l4117
 12341   002AD6                     l4115:
 12342   002AD6  9E1B               	bcf	(___fldiv@b+2)^0,7,c
 12343   002AD8                     l4117:
 12344   002AD8  90D8               	bcf	status,0,c
 12345   002ADA  3030               	rrcf	___fldiv@bexp^0,w,c
 12346   002ADC  6E1C               	movwf	(___fldiv@b+3)^0,c
 12347   002ADE  EF22  F014         	goto	l4031
 12348   002AE2                     l1297:
 12349   002AE2  0012               	return		;funcret
 12350   002AE4                     __end_of___fldiv:
 12351                           	callstack 0
 12352                           
 12353 ;; *************** function _HighISR *****************
 12354 ;; Defined at:
 12355 ;;		line 59 in file "interrupts.c"
 12356 ;; Parameters:    Size  Location     Type
 12357 ;;		None
 12358 ;; Auto vars:     Size  Location     Type
 12359 ;;		None
 12360 ;; Return value:  Size  Location     Type
 12361 ;;                  1    wreg      void 
 12362 ;; Registers used:
 12363 ;;		None
 12364 ;; Tracked objects:
 12365 ;;		On entry : 0/0
 12366 ;;		On exit  : 0/0
 12367 ;;		Unchanged: 0/0
 12368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12373 ;;Total ram usage:        0 bytes
 12374 ;; Hardware stack levels used: 1
 12375 ;; This function calls:
 12376 ;;		Nothing
 12377 ;; This function is called by:
 12378 ;;		Interrupt level 2
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           
 12382                           	psect	intcode
 12383   000008                     __pintcode:
 12384                           	callstack 0
 12385   000008                     _HighISR:
 12386                           	callstack 22
 12387                           
 12388                           ;incstack = 0
 12389   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12390   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12391   00000C  0011               	retfie		f
 12392   00000E                     __end_of_HighISR:
 12393                           	callstack 0
 12394                           
 12395                           	psect	rparam
 12396   000000                     
 12397                           	psect	temp
 12398   00005F                     btemp:
 12399                           	callstack 0
 12400   00005F                     	ds	1
 12401   000000                     int$flags	set	btemp
 12402   000000                     wtemp8	set	btemp+1
 12403   000000                     ttemp5	set	btemp+1
 12404   000000                     ttemp6	set	btemp+4
 12405   000000                     ttemp7	set	btemp+8
 12406                           
 12407                           	psect	idloc
 12408                           
 12409                           ;Config register IDLOC0 @ 0x200000
 12410                           ;	unspecified, using default values
 12411   200000                     	org	2097152
 12412   200000  0FFF               	dw	4095
 12413                           
 12414                           ;Config register IDLOC1 @ 0x200002
 12415                           ;	unspecified, using default values
 12416   200002                     	org	2097154
 12417   200002  0FFF               	dw	4095
 12418                           
 12419                           ;Config register IDLOC2 @ 0x200004
 12420                           ;	unspecified, using default values
 12421   200004                     	org	2097156
 12422   200004  0FFF               	dw	4095
 12423                           
 12424                           ;Config register IDLOC3 @ 0x200006
 12425                           ;	unspecified, using default values
 12426   200006                     	org	2097158
 12427   200006  0FFF               	dw	4095
 12428                           
 12429                           ;Config register IDLOC4 @ 0x200008
 12430                           ;	unspecified, using default values
 12431   200008                     	org	2097160
 12432   200008  0FFF               	dw	4095
 12433                           
 12434                           ;Config register IDLOC5 @ 0x20000A
 12435                           ;	unspecified, using default values
 12436   20000A                     	org	2097162
 12437   20000A  0FFF               	dw	4095
 12438                           
 12439                           ;Config register IDLOC6 @ 0x20000C
 12440                           ;	unspecified, using default values
 12441   20000C                     	org	2097164
 12442   20000C  0FFF               	dw	4095
 12443                           
 12444                           ;Config register IDLOC7 @ 0x20000E
 12445                           ;	unspecified, using default values
 12446   20000E                     	org	2097166
 12447   20000E  0FFF               	dw	4095
 12448                           
 12449                           	psect	config
 12450                           
 12451                           ;Config register CONFIG1L @ 0x300000
 12452                           ;	External Oscillator mode Selection bits
 12453                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 12454                           ;	Power-up default value for COSC bits
 12455                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 12456   300000                     	org	3145728
 12457   300000  AA                 	db	170
 12458                           
 12459                           ;Config register CONFIG1H @ 0x300001
 12460                           ;	unspecified, using default values
 12461                           ;	Clock Out Enable bit
 12462                           ;	CLKOUTEN = 0x1, unprogrammed default
 12463                           ;	Clock Switch Enable bit
 12464                           ;	CSWEN = 0x1, unprogrammed default
 12465                           ;	Fail-Safe Clock Monitor Enable bit
 12466                           ;	FCMEN = 0x1, unprogrammed default
 12467   300001                     	org	3145729
 12468   300001  FF                 	db	255
 12469                           
 12470                           ;Config register CONFIG2L @ 0x300002
 12471                           ;	unspecified, using default values
 12472                           ;	Master Clear Enable bit
 12473                           ;	MCLRE = 0x1, unprogrammed default
 12474                           ;	Power-up Timer Enable bit
 12475                           ;	PWRTE = 0x1, unprogrammed default
 12476                           ;	Low-power BOR enable bit
 12477                           ;	LPBOREN = 0x1, unprogrammed default
 12478                           ;	Brown-out Reset Enable bits
 12479                           ;	BOREN = 0x3, unprogrammed default
 12480   300002                     	org	3145730
 12481   300002  FF                 	db	255
 12482                           
 12483                           ;Config register CONFIG2H @ 0x300003
 12484                           ;	unspecified, using default values
 12485                           ;	Brown Out Reset Voltage selection bits
 12486                           ;	BORV = 0x3, unprogrammed default
 12487                           ;	ZCD Disable bit
 12488                           ;	ZCD = 0x1, unprogrammed default
 12489                           ;	PPSLOCK bit One-Way Set Enable bit
 12490                           ;	PPS1WAY = 0x1, unprogrammed default
 12491                           ;	Stack Full/Underflow Reset Enable bit
 12492                           ;	STVREN = 0x1, unprogrammed default
 12493                           ;	Debugger Enable bit
 12494                           ;	DEBUG = 0x1, unprogrammed default
 12495                           ;	Extended Instruction Set Enable bit
 12496                           ;	XINST = 0x1, unprogrammed default
 12497   300003                     	org	3145731
 12498   300003  FF                 	db	255
 12499                           
 12500                           ;Config register CONFIG3L @ 0x300004
 12501                           ;	WDT Period Select bits
 12502                           ;	WDTCPS = 0x1F, unprogrammed default
 12503                           ;	WDT operating mode
 12504                           ;	WDTE = OFF, WDT Disabled
 12505   300004                     	org	3145732
 12506   300004  9F                 	db	159
 12507                           
 12508                           ;Config register CONFIG3H @ 0x300005
 12509                           ;	unspecified, using default values
 12510                           ;	WDT Window Select bits
 12511                           ;	WDTCWS = 0x7, unprogrammed default
 12512                           ;	WDT input clock selector
 12513                           ;	WDTCCS = 0x7, unprogrammed default
 12514   300005                     	org	3145733
 12515   300005  FF                 	db	255
 12516                           
 12517                           ;Config register CONFIG4L @ 0x300006
 12518                           ;	unspecified, using default values
 12519                           ;	Write Protection Block 0
 12520                           ;	WRT0 = 0x1, unprogrammed default
 12521                           ;	Write Protection Block 1
 12522                           ;	WRT1 = 0x1, unprogrammed default
 12523                           ;	Write Protection Block 2
 12524                           ;	WRT2 = 0x1, unprogrammed default
 12525                           ;	Write Protection Block 3
 12526                           ;	WRT3 = 0x1, unprogrammed default
 12527                           ;	Write Protection Block 3
 12528                           ;	WRT4 = 0x1, unprogrammed default
 12529                           ;	Write Protection Block 3
 12530                           ;	WRT5 = 0x1, unprogrammed default
 12531                           ;	Write Protection Block 3
 12532                           ;	WRT6 = 0x1, unprogrammed default
 12533                           ;	Write Protection Block 3
 12534                           ;	WRT7 = 0x1, unprogrammed default
 12535   300006                     	org	3145734
 12536   300006  FF                 	db	255
 12537                           
 12538                           ;Config register CONFIG4H @ 0x300007
 12539                           ;	unspecified, using default values
 12540                           ;	Configuration Register Write Protection bit
 12541                           ;	WRTC = 0x1, unprogrammed default
 12542                           ;	Boot Block Write Protection bit
 12543                           ;	WRTB = 0x1, unprogrammed default
 12544                           ;	Data EEPROM Write Protection bit
 12545                           ;	WRTD = 0x1, unprogrammed default
 12546                           ;	Scanner Enable bit
 12547                           ;	SCANE = 0x1, unprogrammed default
 12548                           ;	Low Voltage Programming Enable bit
 12549                           ;	LVP = 0x1, unprogrammed default
 12550   300007                     	org	3145735
 12551   300007  FF                 	db	255
 12552                           
 12553                           ;Config register CONFIG5L @ 0x300008
 12554                           ;	unspecified, using default values
 12555                           ;	UserNVM Program Memory Code Protection bit
 12556                           ;	CP = 0x1, unprogrammed default
 12557                           ;	DataNVM Memory Code Protection bit
 12558                           ;	CPD = 0x1, unprogrammed default
 12559   300008                     	org	3145736
 12560   300008  FF                 	db	255
 12561                           
 12562                           ;Config register CONFIG5H @ 0x300009
 12563                           ;	unspecified, using default values
 12564   300009                     	org	3145737
 12565   300009  FF                 	db	255
 12566                           
 12567                           ;Config register CONFIG6L @ 0x30000A
 12568                           ;	unspecified, using default values
 12569                           ;	Table Read Protection Block 0
 12570                           ;	EBTR0 = 0x1, unprogrammed default
 12571                           ;	Table Read Protection Block 1
 12572                           ;	EBTR1 = 0x1, unprogrammed default
 12573                           ;	Table Read Protection Block 2
 12574                           ;	EBTR2 = 0x1, unprogrammed default
 12575                           ;	Table Read Protection Block 3
 12576                           ;	EBTR3 = 0x1, unprogrammed default
 12577                           ;	Table Read Protection Block 4
 12578                           ;	EBTR4 = 0x1, unprogrammed default
 12579                           ;	Table Read Protection Block 5
 12580                           ;	EBTR5 = 0x1, unprogrammed default
 12581                           ;	Table Read Protection Block 6
 12582                           ;	EBTR6 = 0x1, unprogrammed default
 12583                           ;	Table Read Protection Block 7
 12584                           ;	EBTR7 = 0x1, unprogrammed default
 12585   30000A                     	org	3145738
 12586   30000A  FF                 	db	255
 12587                           
 12588                           ;Config register CONFIG6H @ 0x30000B
 12589                           ;	unspecified, using default values
 12590                           ;	Boot Block Table Read Protection bit
 12591                           ;	EBTRB = 0x1, unprogrammed default
 12592   30000B                     	org	3145739
 12593   30000B  FF                 	db	255
 12594                           tosu	equ	0xFFF
 12595                           tosh	equ	0xFFE
 12596                           tosl	equ	0xFFD
 12597                           stkptr	equ	0xFFC
 12598                           pclatu	equ	0xFFB
 12599                           pclath	equ	0xFFA
 12600                           pcl	equ	0xFF9
 12601                           tblptru	equ	0xFF8
 12602                           tblptrh	equ	0xFF7
 12603                           tblptrl	equ	0xFF6
 12604                           tablat	equ	0xFF5
 12605                           prodh	equ	0xFF4
 12606                           prodl	equ	0xFF3
 12607                           indf0	equ	0xFEF
 12608                           postinc0	equ	0xFEE
 12609                           postdec0	equ	0xFED
 12610                           preinc0	equ	0xFEC
 12611                           plusw0	equ	0xFEB
 12612                           fsr0h	equ	0xFEA
 12613                           fsr0l	equ	0xFE9
 12614                           wreg	equ	0xFE8
 12615                           indf1	equ	0xFE7
 12616                           postinc1	equ	0xFE6
 12617                           postdec1	equ	0xFE5
 12618                           preinc1	equ	0xFE4
 12619                           plusw1	equ	0xFE3
 12620                           fsr1h	equ	0xFE2
 12621                           fsr1l	equ	0xFE1
 12622                           bsr	equ	0xFE0
 12623                           indf2	equ	0xFDF
 12624                           postinc2	equ	0xFDE
 12625                           postdec2	equ	0xFDD
 12626                           preinc2	equ	0xFDC
 12627                           plusw2	equ	0xFDB
 12628                           fsr2h	equ	0xFDA
 12629                           fsr2l	equ	0xFD9
 12630                           status	equ	0xFD8

Data Sizes:
    Strings     36
    Constant    0
    Data        9
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      94
    BANK0           160    144     159
    BANK1           256      0     215
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2695$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_2(CODE[36]), STR_1(CODE[36]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2642$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2642$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___flmul
    ___flsub->___fladd
    ___flmul->___fldiv
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Colour_decider

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               114   114      0  310234
                                             88 COMRAM     2     2      0
                                             32 BANK0    112   112      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                        _Timer0_init
                         _YellowMove
                   _color_click_init
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    8441
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    5722
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  115164
                                             35 COMRAM     9     5      4
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   15339
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   16251
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   16403
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    7960
                                             49 COMRAM    28    24      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    9555
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   22997
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8289
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6898
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7658
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    6746
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   20955
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5321
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    4086
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    2592
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3800
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2159
                                             24 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _TurnDelay
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___fleq
       ___flsub (ARG)
     ___flge
     ___flmul
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flsub (ARG)
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _Timer0_init
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
     _BlueMove
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
     _timed_forward
       _delayed_ms
       _setMotorPWM
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _stop
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      64       9       39.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D7       7       84.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      60        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Mar 12 13:12:44 2023

               _color_read_Red 48D4                   ___fldiv@aexp 0031                   ___fldiv@bexp 0030  
               _color_read_lum 4884                   ___fldiv@sign 0029                _color_read_Blue 4974  
                           l51 48D2                             l60 49C2                             l45 47DE  
                           l54 4922                             l63 452E                             l48 4E0C  
                           l57 4972                             l66 2E10                             l76 1900  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 32AE  
             _color_read_Green 4924                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 4E4A                            l140 4D78                            l212 4E62  
                          l143 4D7A                            l152 4E78                            l161 4B78  
                          l209 4E4E                            l146 4DA0                            l218 4D4E  
                          l410 19E8                            l155 4E82                            l149 4E8C  
                          l158 4E6E                            l415 1E02                            l512 392C  
                          l272 4E9A                            l600 4882                            l440 1E5C  
                          l432 1DFE                            l505 4200                            l603 473A  
                          l612 4BF6                            l621 3322                            l542 4178  
                          l518 4300                            l526 403C                            l534 3F9E  
                          l606 478C                            l550 3E56                            l630 3484  
                          l703 4E2C                            l615 4C34                            l623 33CA  
                          l712 4CE8                            l561 4D04                            l609 4282  
                          l570 4AAC                            l706 4DC6                            l618 3434  
                          l715 4DEC                            l619 32CC                            l564 4D1E  
                          l628 341A                            l573 463C                            l709 4CD2  
                          l629 346A                            l582 4696                            l558 40DA  
                          l567 4A5E                            l591 4CB0                            l576 45E2  
                          l680 32AC                            l594 44D0                            l674 32A2  
                          l842 3A90                            l579 4588                            l588 4C72  
                          l597 4830                            l829 37C0                            l980 3C9C  
                          l974 3F00                            l985 3CE2                            _abs 4B7A  
                          _pad 437E                            _rel 01B4                            wreg 000FE8  
                 ___flmul@aexp 0043                   ___flmul@bexp 0044                   ___flmul@sign 003E  
                 ___flmul@temp 0049                   ___flmul@prod 0045                Colour_decider@i 007A  
                         ?_abs 0013                           l1213 446A                           l1310 2A00  
                         l1302 2906                           l1206 4462                           l1311 29EE  
                         l1243 204E                           l1308 2988                           l1260 2168  
                         l1252 231E                           l1244 203C                           l1333 2748  
                         l1245 2002                           l1270 2226                           l1415 43A0  
                         l1336 25DA                           l1424 2E9E                           l4001 2798  
                         l1329 23E4                           l1346 270A                           l1338 2652  
                         l1370 34DC                           l1426 2EA6                           l4011 27CA  
                         l4003 27A0                           l1339 2640                           l1419 43F6  
                         l1427 2EEC                           l1451 4A10                           l4101 2A58  
                         l4021 27FE                           l4013 27CC                           l4005 27B0  
                         l1269 2238                           l1285 4AF2                           l1373 3638  
                         l1445 3BDE                           l1470 3DAC                           l1438 308C  
                         l4111 2AC2                           l4103 2A72                           l4031 2844  
                         l4015 27DC                           l4023 2806                           l4007 27B6  
                         l1455 4BB0                           l1384 35D0                           l4113 2AD0  
                         l4105 2A88                           l4041 286C                           l1297 2AE2  
                         l4033 2848                           l4025 2816                           l4017 27EC  
                         l4009 27BC                           l4201 255E                           l1377 3574  
                         l3401 36CC                           l1481 4E98                           l3321 3D08  
                         l1393 46E8                           l5001 1CA2                           l1458 4BB8  
                         l4115 2AD6                           l4107 2AA2                           l1299 2942  
                         l4051 28BA                           l4027 282C                           l4019 27FC  
                         l4211 25D8                           l4203 2594                           l4131 233C  
                         l3331 4DC8                           l3411 3736                           l3403 36D4  
                         l3323 3D12                           l5003 1CB6                           l5011 1CE8  
                         l4117 2AD8                           l4109 2ABE                           l4061 2904  
                         l4053 28CA                           l4045 2880                           l4029 283C  
                         l4037 285C                           l4221 2638                           l4213 25EA  
                         l4205 25A2                           l4141 2382                           l4133 234C  
                         l4125 2320                           l4301 3498                           l3341 4412  
                         l3333 4DE4                           l3501 4288                           l3421 3780  
                         l3413 3756                           l3405 36E8                           l3325 3D30  
                         l3317 3CE4                           l5013 1CFC                           l5021 1D2E  
                         l5005 1CCA                           l1478 4B36                           l4071 2952  
                         l4063 2910                           l4055 28D2                           l4047 289A  
                         l4039 286C                           l4231 26A6                           l4215 25F8  
                         l4207 25C0                           l4151 23AE                           l4143 2388  
                         l4135 235C                           l4127 232C                           l4311 3516  
                         l4303 34A6                           l3351 444C                           l3343 441A  
                         l3511 42E8                           l3503 42A0                           l3423 37A0  
                         l3415 3758                           l3407 36F6                           l3431 3940  
                         l3327 3D66                           l3319 3CF6                           l5023 1D42  
                         l5031 1D74                           l5015 1D10                           l5007 1CCE  
                         l4073 2968                           l4081 2998                           l4065 292E  
                         l4057 28E2                           l4049 28AA                           l4241 270E  
                         l4225 2662                           l4233 26AA                           l4217 25FC  
                         l4209 25CA                           l4161 2404                           l4153 23BE  
                         l4145 238E                           l4137 236C                           l4129 233A  
                         l4321 356A                           l4313 351E                           l4305 34EC  
                         l3353 4454                           l3345 4422                           l3337 43F8  
                         l3505 42AC                           l3521 3FF4                           l3513 3FA0  
                         l4401 2D78                           l3417 376A                           l3409 3708  
                         l3441 39B0                           l3433 3960                           l3361 4B00  
                         l3601 302C                           l5041 1DF0                           l5033 1D88  
                         l5025 1D56                           l5017 1D14                           l5009 1CD2  
                         l4083 29A6                           l4075 296E                           l4067 2930  
                         l4059 28F6                           l4251 2738                           l4243 271E  
                         l4235 26C4                           l4227 266E                           l4219 260A  
                         l4171 2444                           l4155 23CE                           l4147 239C  
                         l4139 2372                           l4331 35E0                           l4323 35A6  
                         l4315 352A                           l4307 3502                           l4411 0EC0  
                         l4403 0E26                           l3355 4456                           l3347 4430  
                         l3339 4400                           l3371 3832                           l3507 42B8  
                         l3515 3FC4                           l3523 400C                           l3531 3F3E  
                         l3419 3770                           l3451 3A28                           l3443 39B8  
                         l3435 3964                           l3427 392E                           l3363 4B12  
                         l3603 3046                           l5043 1E0A                           l5035 1DA0  
                         l5027 1D5A                           l5019 1D18                           l4093 2A10  
                         l4085 29AA                           l4077 2978                           l4069 2940  
                         l4261 3E58                           l4245 272C                           l4237 26D8  
                         l4229 267C                           l4181 248E                           l4173 2450  
                         l4165 2418                           l4157 23D4                           l4149 239E  
                         l3701 1EE0                           l4341 3628                           l4333 35E4  
                         l4325 35B2                           l4317 355C                           l4421 0F50  
                         l4413 0EF4                           l4405 0E50                           l3357 445C  
                         l3349 4436                           l3381 38EC                           l3373 3846  
                         l3509 42D0                           l3541 403E                           l3525 4024  
                         l3517 3FDC                           l3533 3F4A                           l3613 4E84  
                         l3621 4E7A                           l3453 3A3A                           l3445 39CC  
                         l3437 3972                           l3429 3932                           l3365 4B16  
                         l3605 3056                           l5045 1E3C                           l5037 1DB2  
                         l5029 1D5E                           l4095 2A1C                           l4087 29B8  
                         l4079 2986                           l4271 3EF8                           l4263 3E86  
                         l4247 272E                           l4239 26F2                           l4191 24E0  
                         l4183 249A                           l4175 2468                           l4167 2424  
                         l4159 23F4                           l3711 1F16                           l3703 1EE6  
                         l4255 4AAE                           l4335 3608                           l4327 35C0  
                         l4319 355E                           l4503 1560                           l4431 1016  
                         l4423 0F82                           l4407 0E5C                           l3375 384A  
                         l3367 37C2                           l3543 4062                           l3551 40AA  
                         l3519 3FE8                           l3535 3F56                           l3527 3F02  
                         l3615 4E88                           l3623 4E7E                           l3631 4B3E  
                         l3391 3670                           l3383 363A                           l3447 39DA  
                         l3455 3A40                           l3439 3992                           l3359 4AF4  
                         l3471 43C0                           l3463 437E                           l3607 305C  
                         l4351 4A08                           l5039 1DC6                           l5047 1E48  
                         l4097 2A2A                           l4089 29E6                           l4273 3EFE  
                         l4265 3E96                           l4281 3C1E                           l4249 2734  
                         l4193 24F0                           l4185 24AA                           l4177 2474  
                         l4169 242E                           l3801 20DC                           l3721 1F52  
                         l3713 1F26                           l3705 1EF4                           l4257 4ABE  
                         l4337 3618                           l4329 35DE                           l4505 1592  
                         l4441 10A8                           l4433 1032                           l4425 0F8A  
                         l4409 0E8C                           l3377 388C                           l3369 37DE  
                         l3553 40C2                           l3545 407A                           l3529 3F26  
                         l3537 3F6E                           l3481 4D7A                           l3617 4E66  
                         l4361 47AC                           l3633 4B46                           l3625 4E70  
                         l4601 4D24                           l3393 367E                           l3385 363E  
                         l3457 3A50                           l3449 3A08                           l3473 43C4  
                         l3465 438C                           l3609 306C                           l3561 2E12  
                         l4345 49C4                           l4099 2A54                           l4267 3EC4  
                         l4291 3C8A                           l4283 3C4C                           l4195 250C  
                         l4187 24B6                           l4179 2480                           l3803 2102  
                         l3811 2158                           l3731 1F70                           l3723 1F60  
                         l3715 1F28                           l3707 1EF6                           l4339 3626  
                         l4531 16C0                           l4523 1650                           l4515 1606  
                         l4507 15C4                           l4451 121E                           l4443 1148  
                         l4435 1088                           l4427 0FDE                           l4419 0EFE  
                         l3379 38A8                           l3491 4124                           l3547 4086  
                         l3555 4CEA                           l3539 3F86                           l3651 4A26  
                         l3483 4D8A                           l3619 4E6A                           l4371 47CE  
                         l4363 47B6                           l4355 478E                           l3643 4CB2  
                         l3635 4B4E                           l3627 4E74                           l4603 4D32  
                         l3395 369E                           l3387 364C                           l3459 3A70  
                         l3475 43E2                           l3467 4398                           l3571 2E92  
                         l3563 2E32                           l4347 49D0                           l4269 3ED4  
                         l4293 3CDA                           l4285 3C5C                           l4277 3BE0  
                         l4197 2518                           l4189 24C6                           l3821 21AC  
                         l3813 217E                           l3805 2136                           l3741 1F84  
                         l3733 1F74                           l3725 1F64                           l3709 1F06  
                         l3717 1F30                           l4517 1644                           l4461 13B2  
                         l4453 127A                           l4445 1158                           l4429 1010  
                         l3493 4130                           l3485 40DC                           l3549 4092  
                         l3557 4CEE                           l3661 4A80                           l4621 4E16  
                         l3653 4A32                           l4381 47D8                           l4373 47D0  
                         l4365 47C0                           l4357 4792                           l4701 4DA4  
                         l3645 4CBE                           l3637 4B74                           l3629 4B3A  
                         l4605 4D36                           l3397 36A2                           l3389 366C  
                         l3477 4B7A                           l3469 43AC                           l3581 2EE0  
                         l3573 2EAE                           l3565 2E46                           l4349 49EC  
                         ?_pad 0011                           l4295 3CE0                           l4287 3C6A  
                         l4279 3C0E                           l4199 2534                           l3831 21D6  
                         l3823 21BA                           l3815 218E                           l3807 2138  
                         l3751 1F98                           l3743 1F88                           l3735 1F78  
                         l3727 1F68                           l3719 1F40                           l4543 1702  
                         l4527 165C                           l4471 1422                           l4455 12F6  
                         l4447 1190                           l4439 1094                           l3487 4100  
                         l3495 4148                           l3559 4CFE                           l3663 4A94  
                         l4623 4E20                           l3655 4A46                           l3911 4D5A  
                         l4383 47DA                           l4375 47D2                           l4367 47CA  
                         l4359 479C                           l4391 2BB0                           l4703 4DAA  
                         l3671 4530                           l3647 4CCE                           l4631 418E  
                         l3639 4B76                           l3399 36AE                           l3479 4B94  
                         l3591 2F84                           l3583 2EE8                           l3575 2EBE  
                         l3567 2E56                           l3903 3BB6                           l4711 4698  
                         l4289 3C7C                           l3841 2208                           l3833 21E6  
                         l3825 21BC                           l3809 2148                           l3761 1FEA  
                         l3753 1F9C                           l3745 1F8C                           l3737 1F7C  
                         l3729 1F6C                           l3681 1E7A                           l4561 1832  
                         l4545 1734                           l4529 168E                           l4481 1492  
                         l4449 11A2                           l4457 134E                           l3497 4160  
                         l3489 4118                           l4705 463E                           l3665 45E4  
                         l3657 4A60                           l4625 4E2A                           l3649 4A12  
                         l3913 4D60                           l3921 4DF0                           l4385 47DC  
                         l4377 47D4                           l4369 47CC                           l4393 2BE4  
                         l3673 4544                           l4641 41D0                           l4633 4190  
                         l3593 2F8A                           l3585 2EF4                           l3577 2EC4  
                         l3569 2E76                           l4713 46AA                           l3851 2262  
                         l3843 221E                           l3827 21CA                           l3819 21A2  
                         l3835 21E8                           l3771 202E                           l3763 1FFA  
                         l3747 1F90                           l3739 1F80                           l3755 1FA0  
                         l3691 1EAE                           l3683 1E7C                           l4299 3488  
                         l4563 186C                           l4571 18AA                           l4547 1766  
                         l4483 14CC                           l4491 150A                           l4459 1380  
                         l4467 13BE                           l3499 4284                           l4707 4652  
                         l3667 45F8                           l3659 4A74                           l4731 422E  
                         l4619 4E0E                           l4723 47E0                           l3915 4D62  
                         l4379 47D6                           l4395 2C78                           l3675 455C  
                         l4651 41F2                           l4643 41DA                           l4635 4192  
                         l4627 417A                           l3931 491A                           l3923 4884  
                         l4387 44D2                           l3595 2F90                           l3587 2EFC  
                         l3579 2ED4                           l4715 46B2                           l3861 22DE  
                         l3853 229C                           l3829 21D2                           l3837 21F6  
                         l3773 2030                           l3765 2010                           l3757 1FA4  
                         l3749 1F94                           l3685 1E8C                           l3693 1EB6  
                         l3677 1E60                           l4549 1798                           l4557 17CE  
                         l4493 1548                           l4469 13F0                           l4477 142E  
                         l4709 466A                           l3669 4610                           l4725 4832  
                         l4733 4242                           l3917 4D64                           l3909 4D50  
                         l4397 2CAC                           l4389 2AE4                           l4653 41F4  
                         l4645 41DC                           l4637 41A8                           l4629 418C  
                         l3941 4974                           l3925 48CA                           l3589 2F02  
                         l3597 2FF4                           l4717 46BA                           l4661 32CE  
                         l4901 199C                           l4821 1902                           l3871 22FE  
                         l3863 22E2                           l3847 2248                           l3855 229E  
                         l3839 21FA                           l3791 20B8                           l3783 2080  
                         l3775 203A                           l3767 201C                           l3759 1FCE  
                         l3695 1EC6                           l3687 1E9C                           l3679 1E6C  
                         l4559 1800                           l4583 18F8                           l4479 1460  
                         l4735 4256                           l4727 4202                           l3919 4D66  
                         l4399 2D44                           l3951 4C36                           l4751 3140  
                         l4743 30A8                           l4655 41FE                           l4647 41E6  
                         l4639 41AC                           l4591 4E3A                           l3943 49BA  
                         l3935 4924                           l3599 300E                           l4719 46D6  
                         l4671 3390                           l4663 3324                           l4911 19CE  
                         l4903 19A6                           l4831 1916                           l4823 1906  
                         l3873 230C                           l3865 22F0                           l3857 22AE  
                         l3849 2254                           l3793 20BC                           l3785 2090  
                         l3777 205C                           l3769 2020                           l3697 1ECC  
                         l3689 1EAC                           l4729 4216                           l3953 46EA  
                         l3961 3DAE                           l4761 31DC                           l4753 3158  
                         l4745 30D6                           l4737 308E                           l4649 41E8  
                         l4593 4E44                           l3937 496A                           l3929 48D4  
                         l3881 3AB6                           l4681 33C4                           l4665 3372  
                         l4673 3392                           l4657 32AE                           l4921 1A1A  
                         l4913 19D0                           l4905 19AE                           l4841 192A  
                         l4833 1922                           l4825 190A                           l3875 230E  
                         l3867 22F6                           l3859 22BE                           l3795 20CA  
                         l3787 209E                           l3779 206C                           l3699 1EDE  
                         l4579 18EC                           l4499 1554                           l3955 446C  
                         l3963 3DD2                           l3971 3E1A                           l4771 328A  
                         l4763 3206                           l4755 3182                           l4747 30FE  
                         l4739 3096                           l4595 4E46                           l4587 4E2E  
                         l3947 4E4E                           l3891 3B02                           l3883 3AC4  
                         l4683 33D8                           l4675 33A0                           l4667 3376  
                         l4691 33FE                           l4659 32B0                           l4931 1A72  
                         l4923 1A2E                           l4915 19F6                           l4907 19B6  
                         l4851 1936                           l4843 192E                           l4835 1924  
                         l4827 190E                           l3869 22F8                           l3797 20CC  
                         l3789 20AC                           l3981 45B6                           l3957 4C74  
                         l3973 3E32                           l3965 3DEA                           l4765 321E  
                         l4757 319A                           l4773 32A2                           l4749 3116  
                         l4597 4E48                           l4589 4E38                           l3949 4E5E  
                         l3893 3B1E                           l3885 3AD2                           l4693 340C  
                         l4685 33E2                           l4677 33AA                           l4669 338E  
                         l4941 1AD6                           l4933 1A76                           l4925 1A3A  
                         l4917 1A0E                           l4909 19BA                           l4861 1940  
                         l4853 1938                           l4845 1930                           l4837 1926  
                         l4829 1912                           l3991 2764                           l3799 20D6  
                         l3959 473C                           l3983 4BBA                           l3975 3E4A  
                         l3967 3DF6                           l4767 3248                           l4759 31C4  
                         l4599 4D20                           l3895 3B74                           l3887 3AD6  
                         l3879 3A92                           l4695 341C                           l4687 33E4  
                         l4679 33AC                           l4943 1AF0                           l4951 1B20  
                         l4935 1A8A                           l4927 1A4E                           l4919 1A12  
                         l4871 194A                           l4863 1942                           l4855 193A  
                         l4847 1932                           l4839 1928                           l3993 2766  
                         l3977 458A                           l3985 4BF8                           l3969 3E02  
                         l4769 3260                           l3889 3AE6                           l4697 346C  
                         l4689 33FC                           l4961 1B8A                           l4953 1B3E  
                         l4945 1AF8                           l4937 1A9E                           l4929 1A6C  
                         l4881 195A                           l4873 194C                           l4865 1944  
                         l4857 193C                           l4849 1934                           l3995 2776  
                         l3987 274A                           l3979 459E                           l4699 4DA2  
                         l3899 3BA4                           l4963 1B9E                           l4971 1BD0  
                         l4955 1B46                           l4947 1B00                           l4939 1ABA  
                         l4891 197C                           l4883 195E                           l4875 194E  
                         l4867 1946                           l4859 193E                           l3997 2786  
                         l3989 2756                           l4973 1BE4                           l4981 1C16  
                         l4965 1BB2                           l4957 1B4C                           l4949 1B08  
                         l4893 1980                           l4885 1966                           l4877 1950  
                         l4869 1948                           l3999 2796                           l4983 1C2A  
                         l4991 1C5C                           l4975 1BF8                           l4967 1BB6  
                         l4959 1B7E                           l4895 1984                           l4887 196E  
                         l4879 1956                           l4993 1C70                           l4985 1C3E  
                         l4977 1BFC                           l4969 1BBA                           l4897 198C  
                         l4889 1976                           l4995 1C84                           l4987 1C42  
                         l4979 1C00                           l4899 1994                           l4997 1C88  
                         l4989 1C46                           l4999 1C8C                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E01  
                         u3000 1E8C                           u3001 1E88                           u3010 1E9C  
                         u3011 1E98                           u3100 1FE8                           u3020 1EDE  
                         u3021 1EDA                           u3110 2010                           u3030 1EF4  
                         u3111 200C                           u3031 1EF0                           u3200 2148  
                         u3120 202E                           u3040 1F06                           u4000 35D0  
                 _BAUD4CONbits 000EE9                           u3201 2144                           u3121 202A  
                         u3041 1F02                           u4001 35CC                           u3210 217E  
                         u3130 204E                           u3050 1F16                           u4010 35DE  
                         u3211 217A                           u3131 204A                           u3051 1F12  
                         u4011 35DA                           u3300 2248                           u3220 218E  
                         u3140 205C                           u3060 1F52                           u4020 3618  
                         u4100 10A8                           u2500 3D66                           u3301 2244  
                         u3221 218A                           u3141 2058                           u3061 1F4E  
                         u4021 3614                           u4101 10A4                           u2501 3D62  
                         u3310 2262                           u3230 21BA                           u3150 206C  
                         u3070 1F60                           u4030 3626                           u4110 1158  
                         u2510 4412                           u3311 225E                           u3231 21B6  
                         u3151 2068                           u3071 1F5C                           u4031 3622  
                         u4111 1154                           u2511 440E                           u3320 229C  
                         u3240 21CA                           u3160 209E                           u3080 1FCE  
                         u4200 1506                           u4120 11A2                           u2520 4430  
                         u2600 36CC                           u3400 3B1E                           u4040 4A08  
                         u3321 2298                           u3241 21C6                           u3161 209A  
                         u3081 1FCA                           u4201 1502                           u4121 119E  
                         u2521 442C                           u2601 36C8                           u3401 3B1A  
                         u4041 4A04                           u3330 22AE                           u3250 21E6  
                         u3170 20AC                           u3090 1FE6                           u4210 1548  
                         u4130 1380                           u2530 444C                           u3410 4E5E  
                         u2610 36F6                           _T2PR 000FBC                           u3331 22AA  
                         u3251 21E2                           u3171 20A8                           u3091 1FE0  
                         u4211 1544                           u4131 137C                           u4051 0E56  
                         u2531 4448                           u3411 4E5A                           u2611 36F2  
                         u3500 282C                           u3340 22BE                           u3260 21F6  
                         u3180 20CA                           u4300 1766                           u4220 1592  
                         u4140 13B2                           u4060 0F50                           u3420 3E32  
                         u2620 3736                           u2540 4B36                           u2700 438C  
                         u3501 2828                           u3341 22BA                           u3261 21F2  
                         u3181 20C6                           u4301 1762                           u4221 158E  
                         u4141 13AE                           u4061 0F4C                           u3421 3E2E  
                         u2621 3732                           u2541 4B32                           u2701 4388  
                         u3510 286C                           u3350 22DE                           u3270 2208  
                         u3190 2102                           u4310 1798                           u4230 15C4  
                         u4150 13F0                           u4070 0FDE                           u2550 37DE  
                         u3430 3E4A                           u2630 3780                           u2470 3CF6  
                         u2710 43E2                           u3511 2868                           u3351 22DA  
                         u3271 2204                           u3191 20FE                           u4311 1794  
                         u4231 15C0                           u4151 13EC                           u4071 0FDA  
                         u2551 37DA                           u3431 3E46                           u2631 377C  
                         u2471 3CF2                           u2711 43DE                           u5007 33EE  
                         u3600 29E6                           u3520 28E2                           u3440 2764  
                         u3360 22F0                           u3280 221E                           u4320 17CA  
                         u4240 1602                           u4160 1422                           u4080 1032  
                         u2560 38A8                           u2800 403C                           u2640 3940  
                         u2720 4B94                           u2480 3D08                           u3601 29E2  
                         u3521 28DE                           u3441 2760                           u3361 22EC  
                         u3281 221A                           u4321 17C6                           u4241 15FE  
                         u4161 141E                           u4081 102E                           u2561 38A4  
                         u2801 4038                           u2641 393C                           u2721 4B90  
                         u2481 3D04                           u5017 3426                           u3610 29FC  
                         u3530 2904                           u3450 2776                           u3370 230C  
                         u3290 2234                           u4330 1800                           u4250 1644  
                         u4170 1460                           u4090 1088                           u2810 3F86  
                         u2730 4D8A                           u2570 364C                           u2650 3972  
                         u2490 3D30                           u3611 29F8                           u3531 2900  
                         u3451 2772                           u3371 2308                           u3291 2230  
                         u4331 17FC                           u4251 1640                           u4171 145C  
                         u4091 1084                           u5107 4220                           u2811 3F82  
                         u2731 4D86                           u2571 3648                           u2651 396E  
                         u2491 3D2C                           u5027 3476                           u3620 2A10  
                         u3540 292E                           u3460 2786                           u3700 239C  
                         u4340 1832                           u4260 168E                           u4180 1492  
                         u2820 3F9E                           u2740 4DA0                           u2580 367E  
                         u2660 39B0                           u2900 2EBE                           u3380 3AB6  
                         u4500 3458                           u4420 334C                           u3621 2A0C  
                         u3541 292A                           u3461 2782                           u3701 2398  
                         u4341 182E                           u4261 168A                           u4181 148E  
                         u5117 4260                           u2821 3F9A                           u2741 4D9C  
                         u5037 3E0C                           u2581 367A                           u2661 39AC  
                         u2901 2EBA                           u3381 3AB2                           u4501 3452  
                         u4421 3346                           u3630 2A2A                           u3550 2952  
                         u3470 27CA                           u3710 23AE                           u4350 186C  
                         u4270 16C0                           u4190 14CC                           u2750 4160  
                         u2830 40C2                           u2670 39DA                           u2910 2ED4  
                         u3390 3B02                           u4510 346A                           u4502 345A  
                         u4430 3360                           u4422 334E                           u3631 2A26  
                         u3551 294E                           u3471 27C6                           u3711 23AA  
                         u4351 1868                           u4271 16BC                           u4191 14C8  
                         u2751 415C                           u5207 465C                           u2831 40BE  
                         u5127 4A9E                           u5047 4CC4                           u2591 36A8  
                         u2671 39D6                           u2911 2ED0                           u3391 3AFE  
                         u4511 3466                           u4431 335A                           u3640 2A72  
                         u3560 2968                           u3480 27DC                           u3800 264E  
                         u3720 23BE                           u4360 18A6                           u4280 16FE  
                         u2760 4178                           u2840 40DA                           u4520 30A4  
                         u2680 3A08                           u2920 300E                           u4440 3372  
                         u4432 3362                           u3641 2A6E                           u3561 2964  
                         u3481 27D8                           u3801 264A                           u3721 23BA  
                         u4361 18A2                           u4281 16FA                           u2761 4174  
                         u5217 4688                           u2841 40D6                           u5137 3FFE  
                         u5057 454E                           u4521 30A0                           u2681 3A04  
                         u2921 300A                           u4441 336E                           u3650 2AA2  
                         u3570 2986                           u3490 27EC                           u3810 2662  
                         u3730 23F4                           u4370 18E8                           u4290 1734  
                         u2770 42E8                           u2850 4D1E                           u4530 30FE  
                         u2690 3A50                           u2930 302C                           u4450 33A0  
                         u3651 2A9E                           u3571 2982                           u3491 27E8  
                         u3811 265E                           u3731 23F0                           u4371 18E4  
                         u4291 1730                           u2771 42E4                           u5227 42C2  
                         u2851 4D1A                           u5147 4CF4                           u5067 457A  
                         u4531 30FA                           u2691 3A4C                           u2931 3028  
                         u4451 339C                           u3660 2AD0                           u3580 29A6  
                         u3900 3C4C                           u3820 267C                           u3740 2404  
                         u2780 4300                           u4540 3140                           u4380 4D4E  
                         u2940 3046                           u2860 2E42                           u4460 33D8  
                         u4700 1BE4                           u3661 2ACC                           u3581 29A2  
                         u3901 3C48                           u3821 2678                           u3741 2400  
                         u5237 413A                           u2781 42FC                           u5157 45A8  
                         u5077 47A2                           u4541 313C                           u4381 4D4A  
                         u2941 3042                           u2861 2E3C                           u4461 33D4  
                         u4701 1BE0                           u3590 29B8                           u3910 3C6A  
                         u3830 26C4                           u3750 257E                           u3670 233A  
                         u2790 4024                           u4550 3182                           u2950 3056  
                         u2870 2E44                           u4470 340C                           u4710 1C2A  
                         u3591 29B4                           u3911 3C66                           u3831 26C0  
                         u3671 2336                           u5167 45D4                           u2791 4020  
                         u5087 4A50                           u4551 317E                           u2951 3052  
                         u4471 3408                           u4711 1C26                           u3920 3C8A  
                         u3840 26F2                           u3760 25D8                           u3680 234C  
                         u4560 31C4                           u2960 4B62                           u2880 2E56  
                         u4480 341A                           u4720 1C70                           u3921 3C86  
                         u3841 26EE                           u3761 25D4                           u3681 2348  
                         u5177 4602                           u5097 3F60                           u4561 31C0  
                         u2961 4B5A                           u2881 2E52                           u4481 3416  
                         u4721 1C6C                           u3930 3CDA                           u3850 272C  
                         u3770 25F8                           u3690 235C                           u4570 3206  
                         u2890 2E92                           u4490 3444                           u4730 1CB6  
                         u4650 19F6                           u3931 3CD6                           u3851 2728  
                         u3771 25F4                           u3755 2574                           u3691 2358  
                         u5187 462E                           u4571 3202                           u2891 2E8E  
                         u4491 343E                           u4731 1CB2                           u4651 19F2  
                         u3860 3E86                           u3780 260A                           u3940 3498  
                         u2980 4CE8                           u4580 3248                           u4492 3446  
                         u4740 1CFC                           u4660 1A6C                           u3861 3E82  
                         u3781 2606                           u3941 3494                           u5197 409C  
                         u2981 4CE4                           u4581 3244                           u4741 1CF8  
                         u4661 1A68                           u3870 3EC4                           u3790 2638  
                         u2990 1E7A                           u3950 34A6                           u4590 328A  
                         u4750 1D42                           u4670 1AF0                           u3871 3EC0  
                         u3791 2634                           u2991 1E76                           u3951 34A2  
                         u4591 3286                           u4751 1D3E                           u4671 1AEC  
                         u3880 3EF8                           u3960 3502                           u4760 1D88  
                         u4680 1B3E                           u3881 3EF4                           u3961 34FE  
                         u4761 1D84                           u4681 1B3A                           u3890 3C0E  
                         u3970 3558                           u2978 4B64                           u4770 1DB2  
                         u4690 1B9E                           u3891 3C0A                           u3971 3554  
                         u4771 1DAE                           u4691 1B9A                           u3980 35A2  
                         u4780 1E5C                           u3981 359E                           u4781 1E58  
                         u3990 35C0                           u3991 35BC                           u4927 19DA  
                         u4937 1A00                           u4947 1AA8                           u4957 1B12  
                         u4967 32BA                           u4977 332E                           u4987 3380  
                         u4997 33B6                  _LightBlueMove 473C                           abs@a 0013  
                         _dbuf 0194                           _main 1902                           _dtoa 2E12  
                         _prec 015E                           _vals 01C9                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4284  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
              ___fldiv@new_exp 002A         __end_of_color_read_Red 4924                __end_of_HighISR 000E  
       __end_of_color_read_lum 48D4                   ___param_bank 000000                ReverseYellow@mL 0020  
              ReverseYellow@mR 0022                __end_of_RedMove 4C74                          ??_abs 0015  
                        ??_pad 0017                   ?_readColours 000C                    _turnRight45 4A12  
              _RunOneBlockTime 01D3                __end_of___aodiv 37C2                __end_of___fladd 2320  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 3A92  
              __end_of___fldiv 2AE4                __end_of___flmul 274A                __end_of___flsub 4AF4  
                  colour_rel@B 004A                    colour_rel@G 0046                          ?_stop 0014  
                  colour_rel@L 0036                    colour_rel@R 0042                __end_of___lwdiv 446C  
                        i2l277 000A                   vfpfcnvrt@fmt 0041                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 32AE        __end_of_sendCharSerial4 4E64  
   __end_of_I2C_2_Master_Start 4E8E     __end_of_I2C_2_Master_Write 4E70                   YellowMove@mL 0020  
                        _flags 00F2                   YellowMove@mR 0022                          _fputc 3CE4  
                        _fputs 4AF4                 delayed_ms@time 0001                          pad@fp 0011  
                        _power 01D5                          _width 015C                          _putch 4E98  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
               ?_LightBlueMove 0020                          tablat 000FF5               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                 main@run_flag 00E8                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 46EA        __end_of_color_read_Blue 49C4          _I2C_2_Master_RepStart 4E70  
             __end_of_BlueMove 44D2                     PinkMove@mL 0020                     PinkMove@mR 0022  
              ?_color_read_Red 0005                ?_color_read_lum 0005                __initialization 4302  
      __end_of_turnCalibration 3486                _reverseOneBlock 458A                   __end_of_main 1E60  
                 __end_of_dtoa 308E                   __end_of_stop 4302                _colour_rel$3047 003A  
              _colour_rel$3048 003E                         ??_main 0059                         ??_dtoa 0026  
        __end_of_ReverseYellow 4BF8               __end_of_PinkMove 4884                         ??_stop 0018  
                __activetblptr 000001              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 47E0  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 46EA  
             __end_of___xxtofl 363A                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0057                  ??_ReversePink 0024  
                       ___flge 3BE0                         ___fleq 3E58                  main@temp_1304 00E6  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 4DC8              ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C  
                    ??___fldiv 0021                      ??___flmul 003A                      ??___flsub 0019  
                    ??___lwdiv 000B                         clear_0 4346                         clear_1 4352  
                       clear_2 435E                         _motorL 00F3                         _motorR 01C0  
                       isa$std 000001                      ??_go_Home 0028                         pad@buf 0013  
                       dtoa@fp 001C                         fputc@c 0001                         fputs@c 000E  
                       fputs@i 000F                         fputs@s 000A                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001             Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C  
                       putch@c 0001                ??_LightBlueMove 0024               __end_of_vfprintf 4A12  
                       stop@mL 0014                         stop@mR 0016              ??_initDCmotorsPWM 0003  
                    ??_sprintf 0059               __end_of_turnLeft 403E                     ___flge@ff1 0001  
                   _YellowMove 47E0                     ___flge@ff2 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0019  
                   ___fleq@ff2 001D                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 436C        __end_of_reverseOneBlock 45E4  
     __end_of_color_read_Green 4974         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
             ?_color_read_Blue 0005                _Interrupts_init 4E9A                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                  _fullSpeedBack 403E                   __pidataBANK0 4E94  
                 __pidataBANK1 4E8E                  __end_of_fputc 3DAE                  __end_of_fputs 4B38  
                __end_of_putch 4E9A              __end_of_GreenMove 4CB2            __end_of_Timer0_init 4E2E  
          __end_of_ReversePink 4C36                      ?_BlueMove 0020                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14357 0150          __end_of_reverseDetect 463E  
                      ??_putch 0001                     __pbssBANK0 00F0                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 001A                reverseDetect@mR 001C  
                  ?_OrangeMove 0020               _Forwardhalfblock 463E                     _getTMR0val 4DA2  
            __end_of_RetryMove 4284                      ?_PinkMove 0020              _color_writetoaddr 4DEE  
                   _delayed_ms 4CB2                   _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072  
           Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064  
                      ?___flge 0001                        ?___fleq 0019             ?_color_writetoaddr 0003  
                      ?___wmul 0001             Colour_decider@vals 004B                   ?_turnRight45 001A  
            __end_of_TurnDelay 4D20          __end_of_timed_forward 3E58            ??_color_writetoaddr 0004  
                colour_rel@rel 0034                 go_Home@WayBack 0024                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001E  
                   ??_BlueMove 0024                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 0020                     _colour_rel 2AE4        __end_of_Interrupts_init 4E9C  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 00EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 4E0E                        _RedMove 4C36             _I2C_2_Master_Start 4E84  
                   ??_PinkMove 0024                     _initUSART4 4E2E             _I2C_2_Master_Write 4E64  
                      __Hparam 0000                        _WayBack 0162                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4E0E                    RetryMove@mL 001A  
                  RetryMove@mR 001C        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4BF8                        ___aodiv 363A  
                      ___fladd 1E60                        ___aomod 392E                        ___fldiv 274A  
                      ___flmul 2320                        ___flsub 4AAE            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 43F8            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0051  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 4302                        __ramtop 0E00                      ?_turnLeft 0014  
                      _go_Home 308E                        __ptext0 1902                        __ptext1 32AE  
                      __ptext2 4698                        __ptext3 49C4                        __ptext4 3A92  
                      __ptext5 2E12                        __ptext6 437E                        __ptext7 4AF4  
                      __ptext8 3CE4                        __ptext9 4E98                      _T2CONbits 000FBD  
                   ??___xxtofl 0005                      _T2HLTbits 000FBE                  _RxBufWriteCnt 005E  
            color_read_lum@tmp 000A                        main@buf 0080                        _sprintf 4698  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 436C  
                      fputc@fp 0003                        fputs@fp 000C              ?_color_click_init 0001  
                  ?_getTMR0val 0001                LightBlueMove@mL 0020                LightBlueMove@mR 0022  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 00F0  
                  ?_delayed_ms 0001              turnCalibration@mL 0020              turnCalibration@mR 0022  
            __end_of_vfpfcnvrt 3BE0                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00FC                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 0047                     ??_vfprintf 0057  
              _initDCmotorsPWM 417A                     ??_turnLeft 0018                      _PORTFbits 000F8E  
           setMotorPWM@negDuty 0013              __end_of_turnRight 3FA0                    ___fladd@grs 0010  
                ___xxtofl@sign 0009                      _TRISAbits 000F81             setMotorPWM@posDuty 0012  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                      _TRISHbits 000F88  
                  ___fldiv@grs 002C                    ___fldiv@rem 0025               fullSpeedAhead@mL 0014  
             fullSpeedAhead@mR 0016                  ReversePink@mL 0020                  ReversePink@mR 0022  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 0032  
             ?_Interrupts_init 0001                    ___flmul@grs 003F                    _CCP1CONbits 000FAB  
                   main@colour 00EC                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 4A60                 __end_of___flge 3CE4                 __end_of___fleq 3F02  
               _fullSpeedAhead 40DC                    vfpfcnvrt@ap 0043                    vfpfcnvrt@cp 004F  
                  vfpfcnvrt@fp 003F                 __end_of___wmul 4DEE       __end_of_Forwardhalfblock 4698  
                    _GreenMove 4C74            start_initialization 4302                    __end_of_abs 4BBA  
                  __end_of_pad 43F8                  _TxBufWriteCnt 005C          __end_of_LightBlueMove 478E  
                 ??_OrangeMove 0024            color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4202  
                  vfprintf@fmt 0053         __end_of_fullSpeedAhead 417A                       ??___flge 0009  
                     ??___fleq 0021                      _RetryMove 4202                       ??___wmul 0005  
          go_Home@Time_forward 0026                  ??_readColours 000E                    __pdataBANK0 00FC  
                  __pdataBANK1 01D1                _ForwardOneBlock 4530                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 4BBA                      ___fldiv@a 001D  
                    ___fldiv@b 0019                     ?_GreenMove 0020                   OrangeMove@mL 0020  
                 OrangeMove@mR 0022             __end_of_OrangeMove 473C                      ___flmul@a 0036  
                    ___flmul@b 0032                    __pbssCOMRAM 005B                      ___flsub@a 0015  
                    ___flsub@b 0011                      _TurnDelay 4CEA                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                   ??_YellowMove 0024                       ?_HighISR 0001  
        Colour_decider@RGB_col 0066                       ?_RedMove 0020               ___lwdiv@dividend 0007  
                    _dtoa$2723 002E                   ?_Timer0_init 0001                    ?_turnLeft45 001A  
              ?_fullSpeedAhead 0014                      __pintcode 0008                   ?_ReversePink 0020  
                   ?_RetryMove 001A                timed_forward@mL 0014                       ?___aodiv 0001  
              timed_forward@mR 0016                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0019               ___aodiv@quotient 0013                       ?___flmul 0032  
                     ?___flsub 0011            _Colour_decider$3049 0060                       ?___lwdiv 0007  
                     ?_go_Home 0024           I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 0020  
           __end_of_YellowMove 4832           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
            timed_forward@time 0018            __end_of_readColours 4530              _I2C_2_Master_Idle 4D7A  
            _I2C_2_Master_Init 4D50              _I2C_2_Master_Read 4B38              _I2C_2_Master_Stop 4E7A  
                _low_threshold 0160                     ?_TurnDelay 0001                   _RxBufReadCnt 005D  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 0060               getTMR0val@moving 0001  
               colour_rel@vals 0032              _sendStringSerial4 4D20            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 458A                   ??_delayed_ms 0003                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E26  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 3A92  
    __end_of_I2C_2_Master_Idle 4DA2      __end_of_I2C_2_Master_Init 4D7A      __end_of_I2C_2_Master_Read 4B7A  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4E84                   setMotorPWM@m 000E  
                     _DataFlag 00FE    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4DC8                   _TxBufReadCnt 005B  
                     _BlueMove 446C                      _turnRight 3F02             __end_of_delayed_ms 4CEA  
            ??_turnCalibration 0024                      copy_data0 4316      __end_of_sendStringSerial4 4D50  
                 ??_colour_rel 0036                  _reverseDetect 45E4  __end_of_I2C_2_Master_RepStart 4E7A  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 392E                   ??_initUSART4 0001  
                     _PinkMove 4832                       __Hrparam 0000         __end_of_Colour_decider 1902  
                   vfprintf@ap 0055                       __Lrparam 0000                     vfprintf@fp 0051  
        __end_of_fullSpeedBack 40DC                   __Lsmallconst 0E00                    ??_RetryMove 001E  
         TurnDelay@Turn45Delay 0001                    _readColours 44D2                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 003F                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 2E12                     _ANSELDbits 000EA7                     _ANSELFbits 000EB4  
                _timed_forward 3DAE                     sprintf@fmt 0062              ?_Forwardhalfblock 001A  
                     ___xxtofl 3486                     _T0CON0bits 000FD5                     _T0CON1bits 000FD6  
                  ??_TurnDelay 0003                   _Time_forward 0200                ___lwdiv@divisor 0009  
           __end_of_initUSART4 4E4C                ___lwdiv@counter 000D             ??_Forwardhalfblock 001E  
                   ?_turnRight 0014                       __ptext10 4B7A                       __ptext11 392E  
                     __ptext20 4E70                       __ptext12 363A                       __ptext21 4B38  
                     __ptext13 4D20                       __ptext30 4C36                       __ptext22 4E2E  
                     __ptext14 4E4C                       __ptext31 46EA                       __ptext23 417A  
                     __ptext15 44D2                       __ptext40 4E7A                       __ptext32 473C  
                     __ptext24 308E                       __ptext16 4884                       __ptext41 4E84  
                     __ptext33 4C74                       __ptext25 3DAE                       __ptext17 48D4  
                     __ptext50 4A60                       __ptext42 4D7A                       __ptext34 446C  
                     __ptext26 4CB2                       __ptext18 4924                       __ptext51 3FA0  
                     __ptext43 4D50                       __ptext35 4DA2                       __ptext27 4BBA  
                     __ptext19 4974                       __ptext60 37C2                       __ptext52 4CEA  
                     __ptext44 47E0                       __ptext36 2AE4                       __ptext28 4BF8  
                     __ptext61 4DC8                       __ptext53 458A                       __ptext45 4A12  
                     __ptext37 478E                       __ptext29 4530                       __ptext70 274A  
                     __ptext62 43F8                       __ptext54 45E4                       __ptext46 3F02  
                     __ptext38 4DEE                       __ptext63 0E26                       __ptext55 403E  
                     __ptext47 4E0E                       __ptext39 4E64                       __ptext64 3486  
                     __ptext56 4E9A                       __ptext48 4202                       __ptext65 4AAE  
                     __ptext57 463E                       __ptext49 4832                       __ptext66 1E60  
                     __ptext58 4284                       __ptext67 2320                       __ptext59 40DC  
                     __ptext68 3BE0                       __ptext69 3E58                 ?_reverseDetect 001A  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 001A                       go_Home@i 002B  
              ?_Colour_decider 004B                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 49C4                  ??_turnRight45 001E  
                     main@temp 00E4                       _turnLeft 3FA0               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
              main@prev_colour 00EE                    _setMotorPWM 37C2                  turnRight45@mL 001A  
                turnRight45@mR 001C                       intlevel2 0000                      sprintf@ap 006C  
               _high_threshold 01D1               ??_fullSpeedAhead 0018                   ??_turnLeft45 001E  
                   BlueMove@mL 0020                     BlueMove@mR 0022                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0045                ___aomod@counter 0011               _color_click_init 478E  
                     sprintf@f 006E                       sprintf@s 0060                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C            __end_of_turnRight45 4A60                ??_reverseDetect 001E  
                  ??_turnRight 0018                  ___fladd@signs 000D             __end_of_turnLeft45 4AAE  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 4E4C  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
