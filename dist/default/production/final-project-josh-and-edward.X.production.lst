

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 19:39:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    89                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    90   000000                     
    91                           ; Generated 06/04/2022 GMT
    92                           ; 
    93                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    94                           ; All rights reserved.
    95                           ; 
    96                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    97                           ; 
    98                           ; Redistribution and use in source and binary forms, with or without modification, are
    99                           ; permitted provided that the following conditions are met:
   100                           ; 
   101                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   102                           ;        conditions and the following disclaimer.
   103                           ; 
   104                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   105                           ;        of conditions and the following disclaimer in the documentation and/or other
   106                           ;        materials provided with the distribution. Publication is not required when
   107                           ;        this file is used in an embedded application.
   108                           ; 
   109                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   110                           ;        software without specific prior written permission.
   111                           ; 
   112                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   113                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   114                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   115                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   116                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   117                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   118                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   119                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   120                           ; 
   121                           ; 
   122                           ; Code-generator required, PIC18F67K40 Definitions
   123                           ; 
   124                           ; SFR Addresses
   125   000000                     
   126                           	psect	idataBANK0
   127   0057C4                     __pidataBANK0:
   128                           	callstack 0
   129                           
   130                           ;initializer for _high_threshold
   131   0057C4  03E8               	dw	1000
   132                           
   133                           ;initializer for _DataFlag
   134   0057C6  01                 	db	1
   135   000000                     _TRISEbits	set	3973
   136   000000                     _TX4REG	set	3812
   137   000000                     _RC4STAbits	set	3815
   138   000000                     _SP4BRGH	set	3814
   139   000000                     _SSP2CON2bits	set	3802
   140   000000                     _RX4PPS	set	3605
   141   000000                     _SSP2CLKPPS	set	3612
   142   000000                     _SSP2DATPPS	set	3613
   143   000000                     _ANSELDbits	set	3751
   144   000000                     _SSP2ADD	set	3798
   145   000000                     _SSP2CON1bits	set	3801
   146   000000                     _LATAbits	set	3961
   147   000000                     _LATFbits	set	3966
   148   000000                     _LATGbits	set	3967
   149   000000                     _TRISAbits	set	3969
   150   000000                     _TRISGbits	set	3975
   151   000000                     _PORTFbits	set	3982
   152   000000                     _CCPR2H	set	4006
   153   000000                     _CCPR1H	set	4010
   154   000000                     _TRISCbits	set	3971
   155   000000                     _TRISDbits	set	3972
   156   000000                     _TRISFbits	set	3974
   157   000000                     _LATDbits	set	3964
   158   000000                     _RC4REG	set	3811
   159   000000                     _SP4BRGL	set	3813
   160   000000                     _TX4STAbits	set	3816
   161   000000                     _BAUD4CONbits	set	3817
   162   000000                     _SSP2CON2	set	3802
   163   000000                     _SSP2STAT	set	3800
   164   000000                     _ANSELFbits	set	3764
   165   000000                     _SSP2BUF	set	3797
   166   000000                     _PIE4bits	set	3629
   167   000000                     _PIR4bits	set	3639
   168   000000                     _RC0PPS	set	3682
   169   000000                     _RD5PPS	set	3695
   170   000000                     _RE2PPS	set	3700
   171   000000                     _RD6PPS	set	3696
   172   000000                     _RC7PPS	set	3689
   173   000000                     _CCPR4H	set	3873
   174   000000                     _CCPR3H	set	3877
   175   000000                     _CCP1CONbits	set	4011
   176   000000                     _CCPTMRS0bits	set	4013
   177   000000                     _T2PR	set	4028
   178   000000                     _T2CONbits	set	4029
   179   000000                     _CCP2CONbits	set	4007
   180   000000                     _CCP3CONbits	set	3878
   181   000000                     _CCP4CONbits	set	3874
   182   000000                     _RE4PPS	set	3702
   183   000000                     _RG6PPS	set	3720
   184   000000                     _T2CLKCONbits	set	4031
   185   000000                     _T2HLTbits	set	4030
   186                           
   187                           	psect	smallconst
   188   000E00                     __psmallconst:
   189                           	callstack 0
   190   000E00  00                 	db	0
   191   000E01                     STR_1:
   192   000E01  72                 	db	114	;'r'
   193   000E02  65                 	db	101	;'e'
   194   000E03  64                 	db	100	;'d'
   195   000E04  3D                 	db	61	;'='
   196   000E05  25                 	db	37
   197   000E06  66                 	db	102	;'f'
   198   000E07  20                 	db	32
   199   000E08  67                 	db	103	;'g'
   200   000E09  72                 	db	114	;'r'
   201   000E0A  65                 	db	101	;'e'
   202   000E0B  65                 	db	101	;'e'
   203   000E0C  6E                 	db	110	;'n'
   204   000E0D  3D                 	db	61	;'='
   205   000E0E  25                 	db	37
   206   000E0F  66                 	db	102	;'f'
   207   000E10  20                 	db	32
   208   000E11  62                 	db	98	;'b'
   209   000E12  6C                 	db	108	;'l'
   210   000E13  75                 	db	117	;'u'
   211   000E14  65                 	db	101	;'e'
   212   000E15  3D                 	db	61	;'='
   213   000E16  25                 	db	37
   214   000E17  66                 	db	102	;'f'
   215   000E18  20                 	db	32
   216   000E19  6C                 	db	108	;'l'
   217   000E1A  75                 	db	117	;'u'
   218   000E1B  6D                 	db	109	;'m'
   219   000E1C  3D                 	db	61	;'='
   220   000E1D  25                 	db	37
   221   000E1E  64                 	db	100	;'d'
   222   000E1F  20                 	db	32
   223   000E20  63                 	db	99	;'c'
   224   000E21  6F                 	db	111	;'o'
   225   000E22  6C                 	db	108	;'l'
   226   000E23  6F                 	db	111	;'o'
   227   000E24  75                 	db	117	;'u'
   228   000E25  72                 	db	114	;'r'
   229   000E26  31                 	db	49	;'1'
   230   000E27  3D                 	db	61	;'='
   231   000E28  25                 	db	37
   232   000E29  64                 	db	100	;'d'
   233   000E2A  20                 	db	32
   234   000E2B  0D                 	db	13
   235   000E2C  0A                 	db	10
   236   000E2D  00                 	db	0
   237   000E2E                     STR_2:
   238   000E2E  72                 	db	114	;'r'
   239   000E2F  65                 	db	101	;'e'
   240   000E30  64                 	db	100	;'d'
   241   000E31  3D                 	db	61	;'='
   242   000E32  25                 	db	37
   243   000E33  64                 	db	100	;'d'
   244   000E34  20                 	db	32
   245   000E35  67                 	db	103	;'g'
   246   000E36  72                 	db	114	;'r'
   247   000E37  65                 	db	101	;'e'
   248   000E38  65                 	db	101	;'e'
   249   000E39  6E                 	db	110	;'n'
   250   000E3A  3D                 	db	61	;'='
   251   000E3B  25                 	db	37
   252   000E3C  64                 	db	100	;'d'
   253   000E3D  20                 	db	32
   254   000E3E  62                 	db	98	;'b'
   255   000E3F  6C                 	db	108	;'l'
   256   000E40  75                 	db	117	;'u'
   257   000E41  65                 	db	101	;'e'
   258   000E42  3D                 	db	61	;'='
   259   000E43  25                 	db	37
   260   000E44  64                 	db	100	;'d'
   261   000E45  20                 	db	32
   262   000E46  6C                 	db	108	;'l'
   263   000E47  75                 	db	117	;'u'
   264   000E48  6D                 	db	109	;'m'
   265   000E49  3D                 	db	61	;'='
   266   000E4A  25                 	db	37
   267   000E4B  64                 	db	100	;'d'
   268   000E4C  20                 	db	32
   269   000E4D  0D                 	db	13
   270   000E4E  0A                 	db	10
   271   000E4F  00                 	db	0
   272   000E50                     STR_3:
   273   000E50  69                 	db	105	;'i'
   274   000E51  6E                 	db	110	;'n'
   275   000E52  66                 	db	102	;'f'
   276   000E53  00                 	db	0
   277   000E54                     STR_6:
   278   000E54  6E                 	db	110	;'n'
   279   000E55  61                 	db	97	;'a'
   280   000E56  6E                 	db	110	;'n'
   281   000E57  00                 	db	0
   282   000E58  00                 	db	0	; dummy byte at the end
   283   000000                     
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287   00544C                     __pcinit:
   288                           	callstack 0
   289   00544C                     start_initialization:
   290                           	callstack 0
   291   00544C                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to BANK0 (3 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296   00544C  0EC4               	movlw	low __pidataBANK0
   297   00544E  6EF6               	movwf	tblptrl,c
   298   005450  0E57               	movlw	high __pidataBANK0
   299   005452  6EF7               	movwf	tblptrh,c
   300   005454  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301   005456  6EF8               	movwf	tblptru,c
   302   005458  0009               	tblrd		*+	;fetch initializer
   303   00545A  CFF5 F0FA          	movff	tablat,__pdataBANK0
   304   00545E  0009               	tblrd		*+	;fetch initializer
   305   005460  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   306   005464  0009               	tblrd		*+	;fetch initializer
   307   005466  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   308                           
   309                           ; Clear objects allocated to BANK2 (60 bytes)
   310   00546A  EE02  F000         	lfsr	0,__pbssBANK2
   311   00546E  0E3C               	movlw	60
   312   005470                     clear_0:
   313   005470  6AEE               	clrf	postinc0,c
   314   005472  06E8               	decf	wreg,f,c
   315   005474  E1FD               	bnz	clear_0
   316                           
   317                           ; Clear objects allocated to BANK1 (130 bytes)
   318   005476  EE01  F000         	lfsr	0,__pbssBANK1
   319   00547A  0E82               	movlw	130
   320   00547C                     clear_1:
   321   00547C  6AEE               	clrf	postinc0,c
   322   00547E  06E8               	decf	wreg,f,c
   323   005480  E1FD               	bnz	clear_1
   324                           
   325                           ; Clear objects allocated to BANK0 (39 bytes)
   326   005482  EE00  F0D3         	lfsr	0,__pbssBANK0
   327   005486  0E27               	movlw	39
   328   005488                     clear_2:
   329   005488  6AEE               	clrf	postinc0,c
   330   00548A  06E8               	decf	wreg,f,c
   331   00548C  E1FD               	bnz	clear_2
   332   00548E                     end_of_initialization:
   333                           	callstack 0
   334   00548E                     __end_of__initialization:
   335                           	callstack 0
   336   00548E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   337   005490  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   338   005492  0100               	movlb	0
   339   005494  EF0D  F016         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342   0000D3                     __pbssBANK0:
   343                           	callstack 0
   344   0000D3                     _EUSART4RXbuf:
   345                           	callstack 0
   346   0000D3                     	ds	20
   347   0000E7                     floorf@F526:
   348                           	callstack 0
   349   0000E7                     	ds	4
   350   0000EB                     ___fpclassifyf@F465:
   351                           	callstack 0
   352   0000EB                     	ds	4
   353   0000EF                     _width:
   354                           	callstack 0
   355   0000EF                     	ds	2
   356   0000F1                     _prec:
   357                           	callstack 0
   358   0000F1                     	ds	2
   359   0000F3                     _low_threshold:
   360                           	callstack 0
   361   0000F3                     	ds	2
   362   0000F5                     _flags:
   363                           	callstack 0
   364   0000F5                     	ds	1
   365   0000F6                     _TxBufReadCnt:
   366                           	callstack 0
   367   0000F6                     	ds	1
   368   0000F7                     _TxBufWriteCnt:
   369                           	callstack 0
   370   0000F7                     	ds	1
   371   0000F8                     _RxBufReadCnt:
   372                           	callstack 0
   373   0000F8                     	ds	1
   374   0000F9                     _RxBufWriteCnt:
   375                           	callstack 0
   376   0000F9                     	ds	1
   377                           
   378                           	psect	dataBANK0
   379   0000FA                     __pdataBANK0:
   380                           	callstack 0
   381   0000FA                     _high_threshold:
   382                           	callstack 0
   383   0000FA                     	ds	2
   384   0000FC                     _DataFlag:
   385                           	callstack 0
   386   0000FC                     	ds	1
   387                           
   388                           	psect	bssBANK1
   389   000100                     __pbssBANK1:
   390                           	callstack 0
   391   000100                     	ds	12
   392   00010C                     _dbuf:
   393                           	callstack 0
   394   00010C                     	ds	80
   395   00015C                     _rel:
   396                           	callstack 0
   397   00015C                     	ds	12
   398   000168                     _motorR:
   399                           	callstack 0
   400   000168                     	ds	9
   401   000171                     _motorL:
   402                           	callstack 0
   403   000171                     	ds	9
   404   00017A                     _vals:
   405                           	callstack 0
   406   00017A                     	ds	8
   407                           
   408                           	psect	bssBANK2
   409   000200                     __pbssBANK2:
   410                           	callstack 0
   411   000200                     _EUSART4TXbuf:
   412                           	callstack 0
   413   000200                     	ds	60
   414                           
   415                           	psect	cstackBANK1
   416   000182                     __pcstackBANK1:
   417                           	callstack 0
   418   000182                     main@buf:
   419                           	callstack 0
   420                           
   421                           ; 100 bytes @ 0x0
   422   000182                     	ds	100
   423   0001E6                     main@consecuitive:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x64
   427   0001E6                     	ds	2
   428   0001E8                     main@colour:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x66
   432   0001E8                     	ds	2
   433   0001EA                     main@prev_colour:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x68
   437   0001EA                     	ds	2
   438                           
   439                           	psect	cstackBANK0
   440   000060                     __pcstackBANK0:
   441                           	callstack 0
   442   000060                     efgtoa@fp:
   443                           	callstack 0
   444   000060                     colour_rel@L:
   445                           	callstack 0
   446   000060                     _Colour_decider$2734:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x0
   450   000060                     	ds	2
   451   000062                     efgtoa@f:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x2
   455   000062                     	ds	2
   456   000064                     Colour_decider@Cmax_i:
   457                           	callstack 0
   458   000064                     _colour_rel$2732:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0x4
   462   000064                     	ds	2
   463   000066                     efgtoa@c:
   464                           	callstack 0
   465   000066                     Colour_decider@RGB_col:
   466                           	callstack 0
   467                           
   468                           ; 12 bytes @ 0x6
   469   000066                     	ds	1
   470   000067                     ??_efgtoa:
   471                           
   472                           ; 1 bytes @ 0x7
   473   000067                     	ds	1
   474   000068                     _colour_rel$2733:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x8
   478   000068                     	ds	1
   479   000069                     efgtoa@ne:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x9
   483   000069                     	ds	2
   484   00006B                     efgtoa@p:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xB
   488   00006B                     	ds	1
   489   00006C                     colour_rel@R:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0xC
   493   00006C                     	ds	1
   494   00006D                     efgtoa@t:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xD
   498   00006D                     	ds	2
   499   00006F                     _efgtoa$2367:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xF
   503   00006F                     	ds	1
   504   000070                     colour_rel@G:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0x10
   508   000070                     	ds	1
   509   000071                     efgtoa@pp:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x11
   513   000071                     	ds	1
   514   000072                     efgtoa@mode:
   515                           	callstack 0
   516   000072                     Colour_decider@Cmax:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x12
   520   000072                     	ds	1
   521   000073                     efgtoa@nmode:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x13
   525   000073                     	ds	1
   526   000074                     efgtoa@d:
   527                           	callstack 0
   528   000074                     colour_rel@B:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x14
   532   000074                     	ds	2
   533   000076                     efgtoa@m:
   534                           	callstack 0
   535   000076                     Colour_decider@Cmin:
   536                           	callstack 0
   537                           
   538                           ; 4 bytes @ 0x16
   539   000076                     	ds	2
   540   000078                     efgtoa@e:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x18
   544   000078                     	ds	2
   545   00007A                     Colour_decider@i:
   546                           	callstack 0
   547   00007A                     efgtoa@w:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x1A
   551   00007A                     	ds	2
   552   00007C                     Colour_decider@Hue:
   553                           	callstack 0
   554   00007C                     efgtoa@ou:
   555                           	callstack 0
   556                           
   557                           ; 4 bytes @ 0x1C
   558   00007C                     	ds	4
   559   000080                     efgtoa@i:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x20
   563   000080                     	ds	2
   564   000082                     efgtoa@h:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x22
   568   000082                     	ds	4
   569   000086                     efgtoa@l:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x26
   573   000086                     	ds	4
   574   00008A                     efgtoa@sign:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x2A
   578   00008A                     	ds	1
   579   00008B                     efgtoa@n:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x2B
   583   00008B                     	ds	2
   584   00008D                     efgtoa@g:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x2D
   588   00008D                     	ds	4
   589   000091                     efgtoa@u:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x31
   593   000091                     	ds	4
   594   000095                     vfpfcnvrt@fp:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x35
   598   000095                     	ds	2
   599   000097                     vfpfcnvrt@fmt:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x37
   603   000097                     	ds	2
   604   000099                     vfpfcnvrt@ap:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x39
   608   000099                     	ds	2
   609   00009B                     ??_vfpfcnvrt:
   610                           
   611                           ; 1 bytes @ 0x3B
   612   00009B                     	ds	2
   613   00009D                     vfpfcnvrt@convarg:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x3D
   617   00009D                     	ds	8
   618   0000A5                     vfpfcnvrt@c:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x45
   622   0000A5                     	ds	1
   623   0000A6                     vfpfcnvrt@cp:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x46
   627   0000A6                     	ds	2
   628   0000A8                     ?_vfprintf:
   629                           	callstack 0
   630   0000A8                     vfprintf@fp:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x48
   634   0000A8                     	ds	2
   635   0000AA                     vfprintf@fmt:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x4A
   639   0000AA                     	ds	2
   640   0000AC                     vfprintf@ap:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x4C
   644   0000AC                     	ds	2
   645   0000AE                     vfprintf@cfmt:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x4E
   649   0000AE                     	ds	2
   650   0000B0                     ?_sprintf:
   651                           	callstack 0
   652   0000B0                     sprintf@s:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x50
   656   0000B0                     	ds	2
   657   0000B2                     sprintf@fmt:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x52
   661   0000B2                     	ds	18
   662   0000C4                     sprintf@ap:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x64
   666   0000C4                     	ds	2
   667   0000C6                     sprintf@f:
   668                           	callstack 0
   669                           
   670                           ; 11 bytes @ 0x66
   671   0000C6                     	ds	11
   672   0000D1                     ??_main:
   673                           
   674                           ; 1 bytes @ 0x71
   675   0000D1                     	ds	2
   676                           
   677                           	psect	cstackCOMRAM
   678   000001                     __pcstackCOMRAM:
   679                           	callstack 0
   680   000001                     ??_I2C_2_Master_Idle:
   681   000001                     ?___fpclassifyf:
   682                           	callstack 0
   683   000001                     ?___wmul:
   684                           	callstack 0
   685   000001                     ?___fladd:
   686                           	callstack 0
   687   000001                     ?_labs:
   688                           	callstack 0
   689   000001                     ?___flneg:
   690                           	callstack 0
   691   000001                     ?___fltol:
   692                           	callstack 0
   693   000001                     ?___xxtofl:
   694                           	callstack 0
   695   000001                     ?___aodiv:
   696                           	callstack 0
   697   000001                     ?___aomod:
   698                           	callstack 0
   699   000001                     sendCharSerial4@charToSend:
   700                           	callstack 0
   701   000001                     initDCmotorsPWM@PWMperiod:
   702                           	callstack 0
   703   000001                     ___wmul@multiplier:
   704                           	callstack 0
   705   000001                     memcpy@d1:
   706                           	callstack 0
   707   000001                     fputc@c:
   708                           	callstack 0
   709   000001                     strcpy@dest:
   710                           	callstack 0
   711   000001                     ___flneg@f1:
   712                           	callstack 0
   713   000001                     ___fltol@f1:
   714                           	callstack 0
   715   000001                     ___fladd@b:
   716                           	callstack 0
   717   000001                     ___xxtofl@val:
   718                           	callstack 0
   719   000001                     ___fpclassifyf@x:
   720                           	callstack 0
   721   000001                     labs@a:
   722                           	callstack 0
   723   000001                     ___aodiv@dividend:
   724                           	callstack 0
   725   000001                     ___aomod@dividend:
   726                           	callstack 0
   727                           
   728                           ; 8 bytes @ 0x0
   729   000001                     	ds	1
   730   000002                     ??_I2C_2_Master_Read:
   731   000002                     I2C_2_Master_Write@data_byte:
   732                           	callstack 0
   733   000002                     sendStringSerial4@string:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x1
   737   000002                     	ds	1
   738   000003                     color_writetoaddr@value:
   739                           	callstack 0
   740   000003                     I2C_2_Master_Read@ack:
   741                           	callstack 0
   742   000003                     ___wmul@multiplicand:
   743                           	callstack 0
   744   000003                     memcpy@s1:
   745                           	callstack 0
   746   000003                     fputc@fp:
   747                           	callstack 0
   748   000003                     strcpy@src:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x2
   752   000003                     	ds	1
   753   000004                     color_writetoaddr@address:
   754                           	callstack 0
   755   000004                     I2C_2_Master_Read@tmp:
   756                           	callstack 0
   757                           
   758                           ; 1 bytes @ 0x3
   759   000004                     	ds	1
   760   000005                     ??_fputc:
   761   000005                     ??___fpclassifyf:
   762   000005                     ??_labs:
   763   000005                     ??_color_click_init:
   764   000005                     ??___fltol:
   765   000005                     ??___xxtofl:
   766   000005                     ?_color_read_lum:
   767                           	callstack 0
   768   000005                     ?_color_read_Red:
   769                           	callstack 0
   770   000005                     ?_color_read_Green:
   771                           	callstack 0
   772   000005                     ?_color_read_Blue:
   773                           	callstack 0
   774   000005                     ___wmul@product:
   775                           	callstack 0
   776   000005                     memcpy@n:
   777                           	callstack 0
   778   000005                     strcpy@s:
   779                           	callstack 0
   780   000005                     ___fladd@a:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x4
   784   000005                     	ds	2
   785   000007                     ??_color_read_lum:
   786   000007                     ??_color_read_Red:
   787   000007                     ??_color_read_Green:
   788   000007                     ??_color_read_Blue:
   789   000007                     ?___lwdiv:
   790                           	callstack 0
   791   000007                     ___lwdiv@dividend:
   792                           	callstack 0
   793   000007                     memcpy@d:
   794                           	callstack 0
   795   000007                     strcpy@d:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x6
   799   000007                     	ds	2
   800   000009                     ??___fladd:
   801   000009                     ___fltol@sign1:
   802                           	callstack 0
   803   000009                     ___xxtofl@sign:
   804                           	callstack 0
   805   000009                     ___lwdiv@divisor:
   806                           	callstack 0
   807   000009                     ___fpclassifyf@e:
   808                           	callstack 0
   809   000009                     memcpy@s:
   810                           	callstack 0
   811   000009                     ___aodiv@divisor:
   812                           	callstack 0
   813   000009                     ___aomod@divisor:
   814                           	callstack 0
   815                           
   816                           ; 8 bytes @ 0x8
   817   000009                     	ds	1
   818   00000A                     ___fltol@exp1:
   819                           	callstack 0
   820   00000A                     ___xxtofl@exp:
   821                           	callstack 0
   822   00000A                     color_read_lum@tmp:
   823                           	callstack 0
   824   00000A                     color_read_Red@tmp:
   825                           	callstack 0
   826   00000A                     color_read_Green@tmp:
   827                           	callstack 0
   828   00000A                     color_read_Blue@tmp:
   829                           	callstack 0
   830   00000A                     fputs@s:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x9
   834   00000A                     	ds	1
   835   00000B                     memcpy@tmp:
   836                           	callstack 0
   837   00000B                     ___lwdiv@quotient:
   838                           	callstack 0
   839   00000B                     ___xxtofl@arg:
   840                           	callstack 0
   841   00000B                     ___fpclassifyf@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0xA
   845   00000B                     	ds	1
   846   00000C                     readColours@vals:
   847                           	callstack 0
   848   00000C                     fputs@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0xB
   852   00000C                     	ds	1
   853   00000D                     ___lwdiv@counter:
   854                           	callstack 0
   855   00000D                     ___fladd@signs:
   856                           	callstack 0
   857                           
   858                           ; 1 bytes @ 0xC
   859   00000D                     	ds	1
   860   00000E                     ___fladd@aexp:
   861                           	callstack 0
   862   00000E                     fputs@c:
   863                           	callstack 0
   864   00000E                     setMotorPWM@m:
   865                           	callstack 0
   866                           
   867                           ; 2 bytes @ 0xD
   868   00000E                     	ds	1
   869   00000F                     ___fladd@bexp:
   870                           	callstack 0
   871   00000F                     fputs@i:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0xE
   875   00000F                     	ds	1
   876   000010                     ??_setMotorPWM:
   877   000010                     ___fladd@grs:
   878                           	callstack 0
   879                           
   880                           ; 1 bytes @ 0xF
   881   000010                     	ds	1
   882   000011                     ?___flmul:
   883                           	callstack 0
   884   000011                     ___aodiv@counter:
   885                           	callstack 0
   886   000011                     ___aomod@counter:
   887                           	callstack 0
   888   000011                     pad@fp:
   889                           	callstack 0
   890   000011                     ___flmul@b:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x10
   894   000011                     	ds	1
   895   000012                     setMotorPWM@posDuty:
   896                           	callstack 0
   897   000012                     ___aodiv@sign:
   898                           	callstack 0
   899   000012                     ___aomod@sign:
   900                           	callstack 0
   901                           
   902                           ; 1 bytes @ 0x11
   903   000012                     	ds	1
   904   000013                     ?_abs:
   905                           	callstack 0
   906   000013                     setMotorPWM@negDuty:
   907                           	callstack 0
   908   000013                     pad@buf:
   909                           	callstack 0
   910   000013                     abs@a:
   911                           	callstack 0
   912   000013                     ___aodiv@quotient:
   913                           	callstack 0
   914                           
   915                           ; 8 bytes @ 0x12
   916   000013                     	ds	1
   917   000014                     stop@mL:
   918                           	callstack 0
   919   000014                     turnLeft@mL:
   920                           	callstack 0
   921   000014                     turnRight@mL:
   922                           	callstack 0
   923   000014                     fullSpeedAhead@mL:
   924                           	callstack 0
   925   000014                     fullSpeedBack@mL:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x13
   929   000014                     	ds	1
   930   000015                     ??_abs:
   931   000015                     pad@p:
   932                           	callstack 0
   933   000015                     ___flmul@a:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x14
   937   000015                     	ds	1
   938   000016                     stop@mR:
   939                           	callstack 0
   940   000016                     turnLeft@mR:
   941                           	callstack 0
   942   000016                     turnRight@mR:
   943                           	callstack 0
   944   000016                     fullSpeedAhead@mR:
   945                           	callstack 0
   946   000016                     fullSpeedBack@mR:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0x15
   950   000016                     	ds	1
   951   000017                     ??_pad:
   952                           
   953                           ; 1 bytes @ 0x16
   954   000017                     	ds	1
   955   000018                     ??_stop:
   956   000018                     ??_turnLeft:
   957   000018                     ??_turnRight:
   958   000018                     ??_fullSpeedAhead:
   959   000018                     ??_fullSpeedBack:
   960   000018                     pad@i:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x17
   964   000018                     	ds	1
   965   000019                     ??___flmul:
   966   000019                     turnRight45@mL:
   967                           	callstack 0
   968   000019                     turnLeft45@mL:
   969                           	callstack 0
   970   000019                     reverseDetect@mL:
   971                           	callstack 0
   972   000019                     reverseOneBlock@mL:
   973                           	callstack 0
   974   000019                     Forwardhalfblock@mL:
   975                           	callstack 0
   976   000019                     RetryMove@mL:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x18
   980   000019                     	ds	1
   981   00001A                     pad@w:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x19
   985   00001A                     	ds	1
   986   00001B                     turnRight45@mR:
   987                           	callstack 0
   988   00001B                     turnLeft45@mR:
   989                           	callstack 0
   990   00001B                     reverseDetect@mR:
   991                           	callstack 0
   992   00001B                     reverseOneBlock@mR:
   993                           	callstack 0
   994   00001B                     Forwardhalfblock@mR:
   995                           	callstack 0
   996   00001B                     RetryMove@mR:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1A
  1000   00001B                     	ds	1
  1001   00001C                     dtoa@fp:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x1B
  1005   00001C                     	ds	1
  1006   00001D                     ??_Forwardhalfblock:
  1007   00001D                     ??_RetryMove:
  1008   00001D                     ??_turnRight45:
  1009   00001D                     ??_turnLeft45:
  1010   00001D                     ??_reverseDetect:
  1011   00001D                     ??_reverseOneBlock:
  1012   00001D                     ___flmul@sign:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x1C
  1016   00001D                     	ds	1
  1017   00001E                     ___flmul@grs:
  1018                           	callstack 0
  1019   00001E                     dtoa@d:
  1020                           	callstack 0
  1021                           
  1022                           ; 8 bytes @ 0x1D
  1023   00001E                     	ds	1
  1024   00001F                     RedMove@mL:
  1025                           	callstack 0
  1026   00001F                     GreenMove@mL:
  1027                           	callstack 0
  1028   00001F                     BlueMove@mL:
  1029                           	callstack 0
  1030   00001F                     YellowMove@mL:
  1031                           	callstack 0
  1032   00001F                     PinkMove@mL:
  1033                           	callstack 0
  1034   00001F                     OrangeMove@mL:
  1035                           	callstack 0
  1036   00001F                     LightBlueMove@mL:
  1037                           	callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x1E
  1040   00001F                     	ds	2
  1041   000021                     RedMove@mR:
  1042                           	callstack 0
  1043   000021                     GreenMove@mR:
  1044                           	callstack 0
  1045   000021                     BlueMove@mR:
  1046                           	callstack 0
  1047   000021                     YellowMove@mR:
  1048                           	callstack 0
  1049   000021                     PinkMove@mR:
  1050                           	callstack 0
  1051   000021                     OrangeMove@mR:
  1052                           	callstack 0
  1053   000021                     LightBlueMove@mR:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x20
  1057   000021                     	ds	1
  1058   000022                     ___flmul@aexp:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x21
  1062   000022                     	ds	1
  1063   000023                     ___flmul@bexp:
  1064                           	callstack 0
  1065                           
  1066                           ; 1 bytes @ 0x22
  1067   000023                     	ds	1
  1068   000024                     ___flmul@prod:
  1069                           	callstack 0
  1070                           
  1071                           ; 4 bytes @ 0x23
  1072   000024                     	ds	2
  1073   000026                     ??_dtoa:
  1074                           
  1075                           ; 1 bytes @ 0x25
  1076   000026                     	ds	2
  1077   000028                     ___flmul@temp:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x27
  1081   000028                     	ds	2
  1082   00002A                     ?___flsub:
  1083                           	callstack 0
  1084   00002A                     ___flge@ff1:
  1085                           	callstack 0
  1086   00002A                     ___flsub@b:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x29
  1090   00002A                     	ds	4
  1091   00002E                     _dtoa$2336:
  1092                           	callstack 0
  1093   00002E                     ___flge@ff2:
  1094                           	callstack 0
  1095   00002E                     ___flsub@a:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0x2D
  1099   00002E                     	ds	2
  1100   000030                     dtoa@p:
  1101                           	callstack 0
  1102                           
  1103                           ; 2 bytes @ 0x2F
  1104   000030                     	ds	2
  1105   000032                     ??___flge:
  1106   000032                     ?___fldiv:
  1107                           	callstack 0
  1108   000032                     dtoa@w:
  1109                           	callstack 0
  1110   000032                     ___fleq@ff1:
  1111                           	callstack 0
  1112   000032                     ___fldiv@b:
  1113                           	callstack 0
  1114                           
  1115                           ; 4 bytes @ 0x31
  1116   000032                     	ds	2
  1117   000034                     dtoa@n:
  1118                           	callstack 0
  1119                           
  1120                           ; 8 bytes @ 0x33
  1121   000034                     	ds	2
  1122   000036                     ___fleq@ff2:
  1123                           	callstack 0
  1124   000036                     ___fldiv@a:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x35
  1128   000036                     	ds	4
  1129   00003A                     ??___fldiv:
  1130   00003A                     ??___fleq:
  1131                           
  1132                           ; 1 bytes @ 0x39
  1133   00003A                     	ds	2
  1134   00003C                     dtoa@i:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x3B
  1138   00003C                     	ds	2
  1139   00003E                     dtoa@s:
  1140                           	callstack 0
  1141   00003E                     ___fldiv@rem:
  1142                           	callstack 0
  1143                           
  1144                           ; 4 bytes @ 0x3D
  1145   00003E                     	ds	4
  1146   000042                     ___fldiv@sign:
  1147                           	callstack 0
  1148                           
  1149                           ; 1 bytes @ 0x41
  1150   000042                     	ds	1
  1151   000043                     ___fldiv@new_exp:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x42
  1155   000043                     	ds	2
  1156   000045                     ___fldiv@grs:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x44
  1160   000045                     	ds	4
  1161   000049                     ___fldiv@bexp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x48
  1165   000049                     	ds	1
  1166   00004A                     ___fldiv@aexp:
  1167                           	callstack 0
  1168                           
  1169                           ; 1 bytes @ 0x49
  1170   00004A                     	ds	1
  1171   00004B                     ?_Colour_decider:
  1172                           	callstack 0
  1173   00004B                     ?_floorf:
  1174                           	callstack 0
  1175   00004B                     colour_rel@vals:
  1176                           	callstack 0
  1177   00004B                     Colour_decider@vals:
  1178                           	callstack 0
  1179   00004B                     floorf@x:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x4A
  1183   00004B                     	ds	2
  1184   00004D                     colour_rel@rel:
  1185                           	callstack 0
  1186   00004D                     Colour_decider@rel:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x4C
  1190   00004D                     	ds	2
  1191   00004F                     ??_floorf:
  1192   00004F                     ??_Colour_decider:
  1193                           
  1194                           ; 1 bytes @ 0x4E
  1195   00004F                     	ds	6
  1196   000055                     floorf@m:
  1197                           	callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x54
  1200   000055                     	ds	4
  1201   000059                     floorf@e:
  1202                           	callstack 0
  1203                           
  1204                           ; 2 bytes @ 0x58
  1205   000059                     	ds	2
  1206   00005B                     floorf@u:
  1207                           	callstack 0
  1208                           
  1209                           ; 4 bytes @ 0x5A
  1210   00005B                     	ds	4
  1211   00005F                     
  1212                           ; 1 bytes @ 0x5E
  1213 ;;
  1214 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1215 ;;
  1216 ;; *************** function _main *****************
  1217 ;; Defined at:
  1218 ;;		line 29 in file "main.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;  colour          2  102[BANK1 ] int 
  1223 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1224 ;;  prev_colour     2  104[BANK1 ] int 
  1225 ;;  consecuitive    2  100[BANK1 ] int 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;      Locals:         0       0     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1238 ;;      Totals:         0       2     106       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;Total ram usage:      108 bytes
  1240 ;; Hardware stack levels required when called: 9
  1241 ;; This function calls:
  1242 ;;		_BlueMove
  1243 ;;		_Colour_decider
  1244 ;;		_Forwardhalfblock
  1245 ;;		_GreenMove
  1246 ;;		_I2C_2_Master_Init
  1247 ;;		_Interrupts_init
  1248 ;;		_LightBlueMove
  1249 ;;		_OrangeMove
  1250 ;;		_PinkMove
  1251 ;;		_RedMove
  1252 ;;		_RetryMove
  1253 ;;		_YellowMove
  1254 ;;		_color_click_init
  1255 ;;		_colour_rel
  1256 ;;		_initDCmotorsPWM
  1257 ;;		_initUSART4
  1258 ;;		_readColours
  1259 ;;		_sendStringSerial4
  1260 ;;		_sprintf
  1261 ;;		_stop
  1262 ;; This function is called by:
  1263 ;;		Startup code after reset
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text0
  1268   002C1A                     __ptext0:
  1269                           	callstack 0
  1270   002C1A                     _main:
  1271                           	callstack 22
  1272   002C1A                     
  1273                           ;main.c: 30:     initUSART4();
  1274   002C1A  ECB2  F02B         	call	_initUSART4	;wreg free
  1275   002C1E                     
  1276                           ;main.c: 31:     Interrupts_init();
  1277   002C1E  ECE5  F02B         	call	_Interrupts_init	;wreg free
  1278   002C22                     
  1279                           ;main.c: 32:     color_click_init();
  1280   002C22  EC91  F028         	call	_color_click_init	;wreg free
  1281   002C26                     
  1282                           ;main.c: 33:     I2C_2_Master_Init();
  1283   002C26  EC66  F02B         	call	_I2C_2_Master_Init	;wreg free
  1284   002C2A                     
  1285                           ;main.c: 34:     initDCmotorsPWM(200);
  1286   002C2A  0E00               	movlw	0
  1287   002C2C  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1288   002C2E  0EC8               	movlw	200
  1289   002C30  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1290   002C32  EC90  F025         	call	_initDCmotorsPWM	;wreg free
  1291   002C36                     
  1292                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1293   002C36  9287               	bcf	135,1,c	;volatile
  1294   002C38                     
  1295                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1296   002C38  9881               	bcf	129,4,c	;volatile
  1297   002C3A                     
  1298                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1299   002C3A  9E86               	bcf	134,7,c	;volatile
  1300   002C3C                     
  1301                           ;main.c: 39:     TRISFbits.TRISF2 = 1;
  1302   002C3C  8486               	bsf	134,2,c	;volatile
  1303   002C3E                     
  1304                           ;main.c: 40:     ANSELFbits.ANSELF2=0;
  1305   002C3E  010E               	movlb	14	; () banked
  1306   002C40  95B4               	bcf	180,2,b	;volatile
  1307   002C42                     
  1308                           ; BSR set to: 14
  1309                           ;main.c: 41:     LATGbits.LATG1=1;
  1310   002C42  827F               	bsf	127,1,c	;volatile
  1311   002C44                     
  1312                           ; BSR set to: 14
  1313                           ;main.c: 42:     LATAbits.LATA4=1;
  1314   002C44  8879               	bsf	121,4,c	;volatile
  1315   002C46                     
  1316                           ; BSR set to: 14
  1317                           ;main.c: 43:     LATFbits.LATF7=1;
  1318   002C46  8E7E               	bsf	126,7,c	;volatile
  1319   002C48                     
  1320                           ; BSR set to: 14
  1321                           ;main.c: 47:     motorL.power=0;
  1322   002C48  0E00               	movlw	0
  1323   002C4A  0101               	movlb	1	; () banked
  1324   002C4C  6F71               	movwf	_motorL& (0+255),b
  1325   002C4E                     
  1326                           ; BSR set to: 1
  1327                           ;main.c: 48:     motorL.direction=1;
  1328   002C4E  0E01               	movlw	1
  1329   002C50  6F72               	movwf	(_motorL+1)& (0+255),b
  1330   002C52                     
  1331                           ; BSR set to: 1
  1332                           ;main.c: 49:     motorL.brakemode=1;
  1333   002C52  0E01               	movlw	1
  1334   002C54  6F73               	movwf	(_motorL+2)& (0+255),b
  1335   002C56                     
  1336                           ; BSR set to: 1
  1337                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1338   002C56  0EAA               	movlw	170
  1339   002C58  6F76               	movwf	(_motorL+5)& (0+255),b
  1340   002C5A  0E0F               	movlw	15
  1341   002C5C  6F77               	movwf	(_motorL+6)& (0+255),b
  1342   002C5E                     
  1343                           ; BSR set to: 1
  1344                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1345   002C5E  0EA6               	movlw	166
  1346   002C60  6F78               	movwf	(_motorL+7)& (0+255),b
  1347   002C62  0E0F               	movlw	15
  1348   002C64  6F79               	movwf	(_motorL+8)& (0+255),b
  1349   002C66                     
  1350                           ; BSR set to: 1
  1351                           ;main.c: 52:     motorL.PWMperiod=200;
  1352   002C66  0E00               	movlw	0
  1353   002C68  6F75               	movwf	(_motorL+4)& (0+255),b
  1354   002C6A  0EC8               	movlw	200
  1355   002C6C  6F74               	movwf	(_motorL+3)& (0+255),b
  1356   002C6E                     
  1357                           ; BSR set to: 1
  1358                           ;main.c: 53:     motorR.power=0;
  1359   002C6E  0E00               	movlw	0
  1360   002C70  6F68               	movwf	_motorR& (0+255),b
  1361   002C72                     
  1362                           ; BSR set to: 1
  1363                           ;main.c: 54:     motorR.direction=1;
  1364   002C72  0E01               	movlw	1
  1365   002C74  6F69               	movwf	(_motorR+1)& (0+255),b
  1366   002C76                     
  1367                           ; BSR set to: 1
  1368                           ;main.c: 55:     motorR.brakemode=1;
  1369   002C76  0E01               	movlw	1
  1370   002C78  6F6A               	movwf	(_motorR+2)& (0+255),b
  1371   002C7A                     
  1372                           ; BSR set to: 1
  1373                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1374   002C7A  0E25               	movlw	37
  1375   002C7C  6F6D               	movwf	(_motorR+5)& (0+255),b
  1376   002C7E  0E0F               	movlw	15
  1377   002C80  6F6E               	movwf	(_motorR+6)& (0+255),b
  1378   002C82                     
  1379                           ; BSR set to: 1
  1380                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1381   002C82  0E21               	movlw	33
  1382   002C84  6F6F               	movwf	(_motorR+7)& (0+255),b
  1383   002C86  0E0F               	movlw	15
  1384   002C88  6F70               	movwf	(_motorR+8)& (0+255),b
  1385   002C8A                     
  1386                           ; BSR set to: 1
  1387                           ;main.c: 58:     motorR.PWMperiod=200;
  1388   002C8A  0E00               	movlw	0
  1389   002C8C  6F6C               	movwf	(_motorR+4)& (0+255),b
  1390   002C8E  0EC8               	movlw	200
  1391   002C90  6F6B               	movwf	(_motorR+3)& (0+255),b
  1392   002C92                     
  1393                           ; BSR set to: 1
  1394                           ;main.c: 59:     int consecuitive=0;
  1395   002C92  0E00               	movlw	0
  1396   002C94  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1397   002C96  0E00               	movlw	0
  1398   002C98  6FE6               	movwf	main@consecuitive& (0+255),b
  1399   002C9A                     
  1400                           ; BSR set to: 1
  1401                           ;main.c: 60:     int prev_colour =0;
  1402   002C9A  0E00               	movlw	0
  1403   002C9C  6FEB               	movwf	(main@prev_colour+1)& (0+255),b
  1404   002C9E  0E00               	movlw	0
  1405   002CA0  6FEA               	movwf	main@prev_colour& (0+255),b
  1406   002CA2                     l368:
  1407   002CA2  B48E               	btfsc	142,2,c	;volatile
  1408   002CA4  EF56  F016         	goto	u5281
  1409   002CA8  EF58  F016         	goto	u5280
  1410   002CAC                     u5281:
  1411   002CAC  EF51  F016         	goto	l368
  1412   002CB0                     u5280:
  1413   002CB0                     l5228:
  1414                           
  1415                           ;main.c: 64:     {;main.c: 66:         Forwardhalfblock(&motorL,&motorR);
  1416   002CB0  0E71               	movlw	low _motorL
  1417   002CB2  6E19               	movwf	Forwardhalfblock@mL^0,c
  1418   002CB4  0E01               	movlw	high _motorL
  1419   002CB6  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  1420   002CB8  0E68               	movlw	low _motorR
  1421   002CBA  6E1B               	movwf	Forwardhalfblock@mR^0,c
  1422   002CBC  0E01               	movlw	high _motorR
  1423   002CBE  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  1424   002CC0  ECB6  F027         	call	_Forwardhalfblock	;wreg free
  1425   002CC4                     
  1426                           ;main.c: 70:         readColours(&vals);
  1427   002CC4  0E7A               	movlw	low _vals
  1428   002CC6  6E0C               	movwf	readColours@vals^0,c
  1429   002CC8  0E01               	movlw	high _vals
  1430   002CCA  6E0D               	movwf	(readColours@vals+1)^0,c
  1431   002CCC  EC2D  F027         	call	_readColours	;wreg free
  1432   002CD0                     
  1433                           ;main.c: 73:         colour_rel(&vals, &rel);
  1434   002CD0  0E7A               	movlw	low _vals
  1435   002CD2  6E4B               	movwf	colour_rel@vals^0,c
  1436   002CD4  0E01               	movlw	high _vals
  1437   002CD6  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1438   002CD8  0E5C               	movlw	low _rel
  1439   002CDA  6E4D               	movwf	colour_rel@rel^0,c
  1440   002CDC  0E01               	movlw	high _rel
  1441   002CDE  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1442   002CE0  ECBE  F019         	call	_colour_rel	;wreg free
  1443   002CE4                     
  1444                           ;main.c: 76:         if (vals.L>=2200){
  1445   002CE4  0101               	movlb	1	; () banked
  1446   002CE6  BF81               	btfsc	(_vals+7)& (0+255),7,b
  1447   002CE8  EF7F  F016         	goto	u5291
  1448   002CEC  0E98               	movlw	152
  1449   002CEE  5D80               	subwf	(_vals+6)& (0+255),w,b
  1450   002CF0  0E08               	movlw	8
  1451   002CF2  5981               	subwfb	(_vals+7)& (0+255),w,b
  1452   002CF4  A0D8               	btfss	status,0,c
  1453   002CF6  EF7F  F016         	goto	u5291
  1454   002CFA  EF81  F016         	goto	u5290
  1455   002CFE                     u5291:
  1456   002CFE  EFCC  F017         	goto	l5292
  1457   002D02                     u5290:
  1458   002D02                     
  1459                           ; BSR set to: 1
  1460                           ;main.c: 77:             Forwardhalfblock(&motorL,&motorR);
  1461   002D02  0E71               	movlw	low _motorL
  1462   002D04  6E19               	movwf	Forwardhalfblock@mL^0,c
  1463   002D06  0E01               	movlw	high _motorL
  1464   002D08  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  1465   002D0A  0E68               	movlw	low _motorR
  1466   002D0C  6E1B               	movwf	Forwardhalfblock@mR^0,c
  1467   002D0E  0E01               	movlw	high _motorR
  1468   002D10  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  1469   002D12  ECB6  F027         	call	_Forwardhalfblock	;wreg free
  1470                           
  1471                           ;main.c: 79:             stop(&motorL, &motorR);
  1472   002D16  0E71               	movlw	low _motorL
  1473   002D18  6E14               	movwf	stop@mL^0,c
  1474   002D1A  0E01               	movlw	high _motorL
  1475   002D1C  6E15               	movwf	(stop@mL+1)^0,c
  1476   002D1E  0E68               	movlw	low _motorR
  1477   002D20  6E16               	movwf	stop@mR^0,c
  1478   002D22  0E01               	movlw	high _motorR
  1479   002D24  6E17               	movwf	(stop@mR+1)^0,c
  1480   002D26  EC52  F026         	call	_stop	;wreg free
  1481   002D2A                     
  1482                           ;main.c: 80:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1483   002D2A  0E11               	movlw	17
  1484   002D2C  0100               	movlb	0	; () banked
  1485   002D2E  6FD2               	movwf	(??_main+1)& (0+255),b
  1486   002D30  0E3C               	movlw	60
  1487   002D32  6FD1               	movwf	??_main& (0+255),b
  1488   002D34  0ECB               	movlw	203
  1489   002D36                     u5407:
  1490   002D36  2EE8               	decfsz	wreg,f,c
  1491   002D38  D7FE               	bra	u5407
  1492   002D3A  2FD1               	decfsz	??_main& (0+255),f,b
  1493   002D3C  D7FC               	bra	u5407
  1494   002D3E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1495   002D40  D7FA               	bra	u5407
  1496                           
  1497                           ;main.c: 85:             while (consecuitive<20){
  1498   002D42  EFD6  F016         	goto	l5252
  1499   002D46                     l5240:
  1500                           
  1501                           ; BSR set to: 1
  1502                           ;main.c: 86:                 int colour = Colour_decider(&vals, &rel);
  1503   002D46  0E7A               	movlw	low _vals
  1504   002D48  6E4B               	movwf	Colour_decider@vals^0,c
  1505   002D4A  0E01               	movlw	high _vals
  1506   002D4C  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1507   002D4E  0E5C               	movlw	low _rel
  1508   002D50  6E4D               	movwf	Colour_decider@rel^0,c
  1509   002D52  0E01               	movlw	high _rel
  1510   002D54  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1511   002D56  EC2D  F007         	call	_Colour_decider	;wreg free
  1512   002D5A  C04B  F1E8         	movff	?_Colour_decider,main@colour
  1513   002D5E  C04C  F1E9         	movff	?_Colour_decider+1,main@colour+1
  1514   002D62                     
  1515                           ;main.c: 87:                 if (colour==prev_colour){
  1516   002D62  0101               	movlb	1	; () banked
  1517   002D64  51EA               	movf	main@prev_colour& (0+255),w,b
  1518   002D66  19E8               	xorwf	main@colour& (0+255),w,b
  1519   002D68  E107               	bnz	u5301
  1520   002D6A  51EB               	movf	(main@prev_colour+1)& (0+255),w,b
  1521   002D6C  19E9               	xorwf	(main@colour+1)& (0+255),w,b
  1522   002D6E  A4D8               	btfss	status,2,c
  1523   002D70  EFBC  F016         	goto	u5301
  1524   002D74  EFBE  F016         	goto	u5300
  1525   002D78                     u5301:
  1526   002D78  EFC2  F016         	goto	l5246
  1527   002D7C                     u5300:
  1528   002D7C                     
  1529                           ; BSR set to: 1
  1530                           ;main.c: 88:                     consecuitive++;
  1531   002D7C  4BE6               	infsnz	main@consecuitive& (0+255),f,b
  1532   002D7E  2BE7               	incf	(main@consecuitive+1)& (0+255),f,b
  1533                           
  1534                           ;main.c: 89:                 }
  1535   002D80  EFC6  F016         	goto	l5248
  1536   002D84                     l5246:
  1537                           
  1538                           ; BSR set to: 1
  1539                           ;main.c: 91:                     consecuitive=0;
  1540   002D84  0E00               	movlw	0
  1541   002D86  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1542   002D88  0E00               	movlw	0
  1543   002D8A  6FE6               	movwf	main@consecuitive& (0+255),b
  1544   002D8C                     l5248:
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;main.c: 93:                 prev_colour=colour;
  1548   002D8C  C1E8  F1EA         	movff	main@colour,main@prev_colour
  1549   002D90  C1E9  F1EB         	movff	main@colour+1,main@prev_colour+1
  1550   002D94                     
  1551                           ; BSR set to: 1
  1552                           ;main.c: 94:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1553   002D94  0E05               	movlw	5
  1554   002D96  0100               	movlb	0	; () banked
  1555   002D98  6FD2               	movwf	(??_main+1)& (0+255),b
  1556   002D9A  0E0F               	movlw	15
  1557   002D9C  6FD1               	movwf	??_main& (0+255),b
  1558   002D9E  0EF1               	movlw	241
  1559   002DA0                     u5417:
  1560   002DA0  2EE8               	decfsz	wreg,f,c
  1561   002DA2  D7FE               	bra	u5417
  1562   002DA4  2FD1               	decfsz	??_main& (0+255),f,b
  1563   002DA6  D7FC               	bra	u5417
  1564   002DA8  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1565   002DAA  D7FA               	bra	u5417
  1566   002DAC                     l5252:
  1567                           
  1568                           ;main.c: 85:             while (consecuitive<20){
  1569   002DAC  0101               	movlb	1	; () banked
  1570   002DAE  BFE7               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1571   002DB0  EFE3  F016         	goto	u5311
  1572   002DB4  51E7               	movf	(main@consecuitive+1)& (0+255),w,b
  1573   002DB6  E109               	bnz	u5310
  1574   002DB8  0E14               	movlw	20
  1575   002DBA  5DE6               	subwf	main@consecuitive& (0+255),w,b
  1576   002DBC  A0D8               	btfss	status,0,c
  1577   002DBE  EFE3  F016         	goto	u5311
  1578   002DC2  EFE5  F016         	goto	u5310
  1579   002DC6                     u5311:
  1580   002DC6  EFA3  F016         	goto	l5240
  1581   002DCA                     u5310:
  1582   002DCA                     
  1583                           ; BSR set to: 1
  1584                           ;main.c: 96:             consecuitive=0;
  1585   002DCA  0E00               	movlw	0
  1586   002DCC  6FE7               	movwf	(main@consecuitive+1)& (0+255),b
  1587   002DCE  0E00               	movlw	0
  1588   002DD0  6FE6               	movwf	main@consecuitive& (0+255),b
  1589   002DD2                     
  1590                           ; BSR set to: 1
  1591                           ;main.c: 98:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",re
      +                          l.R, rel.G,rel.B,vals.L, prev_colour);
  1592   002DD2  0E82               	movlw	low main@buf
  1593   002DD4  0100               	movlb	0	; () banked
  1594   002DD6  6FB0               	movwf	sprintf@s& (0+255),b
  1595   002DD8  0E01               	movlw	high main@buf
  1596   002DDA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1597   002DDC  0E01               	movlw	low STR_1
  1598   002DDE  6FB2               	movwf	sprintf@fmt& (0+255),b
  1599   002DE0  0E0E               	movlw	high STR_1
  1600   002DE2  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1601   002DE4  C15C  F0B4         	movff	_rel,?_sprintf+4
  1602   002DE8  C15D  F0B5         	movff	_rel+1,?_sprintf+5
  1603   002DEC  C15E  F0B6         	movff	_rel+2,?_sprintf+6
  1604   002DF0  C15F  F0B7         	movff	_rel+3,?_sprintf+7
  1605   002DF4  C160  F0B8         	movff	_rel+4,?_sprintf+8
  1606   002DF8  C161  F0B9         	movff	_rel+5,?_sprintf+9
  1607   002DFC  C162  F0BA         	movff	_rel+6,?_sprintf+10
  1608   002E00  C163  F0BB         	movff	_rel+7,?_sprintf+11
  1609   002E04  C164  F0BC         	movff	_rel+8,?_sprintf+12
  1610   002E08  C165  F0BD         	movff	_rel+9,?_sprintf+13
  1611   002E0C  C166  F0BE         	movff	_rel+10,?_sprintf+14
  1612   002E10  C167  F0BF         	movff	_rel+11,?_sprintf+15
  1613   002E14  C180  F0C0         	movff	_vals+6,?_sprintf+16
  1614   002E18  C181  F0C1         	movff	_vals+7,?_sprintf+17
  1615   002E1C  C1EA  F0C2         	movff	main@prev_colour,?_sprintf+18
  1616   002E20  C1EB  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1617   002E24  EC68  F028         	call	_sprintf	;wreg free
  1618   002E28                     
  1619                           ;main.c: 99:             sendStringSerial4(buf);
  1620   002E28  0E82               	movlw	low main@buf
  1621   002E2A  6E02               	movwf	sendStringSerial4@string^0,c
  1622   002E2C  0E01               	movlw	high main@buf
  1623   002E2E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1624   002E30  EC4E  F02B         	call	_sendStringSerial4	;wreg free
  1625   002E34                     
  1626                           ;main.c: 101:             if (prev_colour==1){
  1627   002E34  0101               	movlb	1	; () banked
  1628   002E36  05EA               	decf	main@prev_colour& (0+255),w,b
  1629   002E38  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1630   002E3A  A4D8               	btfss	status,2,c
  1631   002E3C  EF22  F017         	goto	u5321
  1632   002E40  EF24  F017         	goto	u5320
  1633   002E44                     u5321:
  1634   002E44  EF30  F017         	goto	l5264
  1635   002E48                     u5320:
  1636   002E48                     
  1637                           ; BSR set to: 1
  1638                           ;main.c: 102:                 RedMove(&motorL, &motorR);
  1639   002E48  0E71               	movlw	low _motorL
  1640   002E4A  6E1F               	movwf	RedMove@mL^0,c
  1641   002E4C  0E01               	movlw	high _motorL
  1642   002E4E  6E20               	movwf	(RedMove@mL+1)^0,c
  1643   002E50  0E68               	movlw	low _motorR
  1644   002E52  6E21               	movwf	RedMove@mR^0,c
  1645   002E54  0E01               	movlw	high _motorR
  1646   002E56  6E22               	movwf	(RedMove@mR+1)^0,c
  1647   002E58  ECF4  F02A         	call	_RedMove	;wreg free
  1648                           
  1649                           ;main.c: 103:             }
  1650   002E5C  EF58  F016         	goto	l5228
  1651   002E60                     l5264:
  1652                           
  1653                           ; BSR set to: 1
  1654   002E60  0E02               	movlw	2
  1655   002E62  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1656   002E64  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1657   002E66  A4D8               	btfss	status,2,c
  1658   002E68  EF38  F017         	goto	u5331
  1659   002E6C  EF3A  F017         	goto	u5330
  1660   002E70                     u5331:
  1661   002E70  EF46  F017         	goto	l5268
  1662   002E74                     u5330:
  1663   002E74                     
  1664                           ; BSR set to: 1
  1665                           ;main.c: 105:                 OrangeMove(&motorL, &motorR);
  1666   002E74  0E71               	movlw	low _motorL
  1667   002E76  6E1F               	movwf	OrangeMove@mL^0,c
  1668   002E78  0E01               	movlw	high _motorL
  1669   002E7A  6E20               	movwf	(OrangeMove@mL+1)^0,c
  1670   002E7C  0E68               	movlw	low _motorR
  1671   002E7E  6E21               	movwf	OrangeMove@mR^0,c
  1672   002E80  0E01               	movlw	high _motorR
  1673   002E82  6E22               	movwf	(OrangeMove@mR+1)^0,c
  1674   002E84  EC0C  F029         	call	_OrangeMove	;wreg free
  1675                           
  1676                           ;main.c: 106:             }
  1677   002E88  EF58  F016         	goto	l5228
  1678   002E8C                     l5268:
  1679                           
  1680                           ; BSR set to: 1
  1681   002E8C  0E03               	movlw	3
  1682   002E8E  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1683   002E90  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1684   002E92  A4D8               	btfss	status,2,c
  1685   002E94  EF4E  F017         	goto	u5341
  1686   002E98  EF50  F017         	goto	u5340
  1687   002E9C                     u5341:
  1688   002E9C  EF5C  F017         	goto	l5272
  1689   002EA0                     u5340:
  1690   002EA0                     
  1691                           ; BSR set to: 1
  1692                           ;main.c: 108:                 YellowMove(&motorL, &motorR);
  1693   002EA0  0E71               	movlw	low _motorL
  1694   002EA2  6E1F               	movwf	YellowMove@mL^0,c
  1695   002EA4  0E01               	movlw	high _motorL
  1696   002EA6  6E20               	movwf	(YellowMove@mL+1)^0,c
  1697   002EA8  0E68               	movlw	low _motorR
  1698   002EAA  6E21               	movwf	YellowMove@mR^0,c
  1699   002EAC  0E01               	movlw	high _motorR
  1700   002EAE  6E22               	movwf	(YellowMove@mR+1)^0,c
  1701   002EB0  ECBA  F028         	call	_YellowMove	;wreg free
  1702                           
  1703                           ;main.c: 109:             }
  1704   002EB4  EF58  F016         	goto	l5228
  1705   002EB8                     l5272:
  1706                           
  1707                           ; BSR set to: 1
  1708   002EB8  0E04               	movlw	4
  1709   002EBA  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1710   002EBC  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1711   002EBE  A4D8               	btfss	status,2,c
  1712   002EC0  EF64  F017         	goto	u5351
  1713   002EC4  EF66  F017         	goto	u5350
  1714   002EC8                     u5351:
  1715   002EC8  EF72  F017         	goto	l5276
  1716   002ECC                     u5350:
  1717   002ECC                     
  1718                           ; BSR set to: 1
  1719                           ;main.c: 111:                 BlueMove(&motorL, &motorR);
  1720   002ECC  0E71               	movlw	low _motorL
  1721   002ECE  6E1F               	movwf	BlueMove@mL^0,c
  1722   002ED0  0E01               	movlw	high _motorL
  1723   002ED2  6E20               	movwf	(BlueMove@mL+1)^0,c
  1724   002ED4  0E68               	movlw	low _motorR
  1725   002ED6  6E21               	movwf	BlueMove@mR^0,c
  1726   002ED8  0E01               	movlw	high _motorR
  1727   002EDA  6E22               	movwf	(BlueMove@mR+1)^0,c
  1728   002EDC  ECFA  F026         	call	_BlueMove	;wreg free
  1729                           
  1730                           ;main.c: 112:             }
  1731   002EE0  EF58  F016         	goto	l5228
  1732   002EE4                     l5276:
  1733                           
  1734                           ; BSR set to: 1
  1735   002EE4  0E05               	movlw	5
  1736   002EE6  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1737   002EE8  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1738   002EEA  A4D8               	btfss	status,2,c
  1739   002EEC  EF7A  F017         	goto	u5361
  1740   002EF0  EF7C  F017         	goto	u5360
  1741   002EF4                     u5361:
  1742   002EF4  EF88  F017         	goto	l5280
  1743   002EF8                     u5360:
  1744   002EF8                     
  1745                           ; BSR set to: 1
  1746                           ;main.c: 114:                 GreenMove(&motorL, &motorR);
  1747   002EF8  0E71               	movlw	low _motorL
  1748   002EFA  6E1F               	movwf	GreenMove@mL^0,c
  1749   002EFC  0E01               	movlw	high _motorL
  1750   002EFE  6E20               	movwf	(GreenMove@mL+1)^0,c
  1751   002F00  0E68               	movlw	low _motorR
  1752   002F02  6E21               	movwf	GreenMove@mR^0,c
  1753   002F04  0E01               	movlw	high _motorR
  1754   002F06  6E22               	movwf	(GreenMove@mR+1)^0,c
  1755   002F08  EC13  F02B         	call	_GreenMove	;wreg free
  1756                           
  1757                           ;main.c: 115:             }
  1758   002F0C  EF58  F016         	goto	l5228
  1759   002F10                     l5280:
  1760                           
  1761                           ; BSR set to: 1
  1762   002F10  0E06               	movlw	6
  1763   002F12  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1764   002F14  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1765   002F16  A4D8               	btfss	status,2,c
  1766   002F18  EF90  F017         	goto	u5371
  1767   002F1C  EF92  F017         	goto	u5370
  1768   002F20                     u5371:
  1769   002F20  EF9E  F017         	goto	l5284
  1770   002F24                     u5370:
  1771   002F24                     
  1772                           ; BSR set to: 1
  1773                           ;main.c: 117:                 LightBlueMove(&motorL, &motorR);
  1774   002F24  0E71               	movlw	low _motorL
  1775   002F26  6E1F               	movwf	LightBlueMove@mL^0,c
  1776   002F28  0E01               	movlw	high _motorL
  1777   002F2A  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  1778   002F2C  0E68               	movlw	low _motorR
  1779   002F2E  6E21               	movwf	LightBlueMove@mR^0,c
  1780   002F30  0E01               	movlw	high _motorR
  1781   002F32  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  1782   002F34  EC35  F029         	call	_LightBlueMove	;wreg free
  1783                           
  1784                           ;main.c: 118:             }
  1785   002F38  EF58  F016         	goto	l5228
  1786   002F3C                     l5284:
  1787                           
  1788                           ; BSR set to: 1
  1789   002F3C  0E07               	movlw	7
  1790   002F3E  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1791   002F40  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1792   002F42  A4D8               	btfss	status,2,c
  1793   002F44  EFA6  F017         	goto	u5381
  1794   002F48  EFA8  F017         	goto	u5380
  1795   002F4C                     u5381:
  1796   002F4C  EFB4  F017         	goto	l5288
  1797   002F50                     u5380:
  1798   002F50                     
  1799                           ; BSR set to: 1
  1800                           ;main.c: 120:                 PinkMove(&motorL, &motorR);
  1801   002F50  0E71               	movlw	low _motorL
  1802   002F52  6E1F               	movwf	PinkMove@mL^0,c
  1803   002F54  0E01               	movlw	high _motorL
  1804   002F56  6E20               	movwf	(PinkMove@mL+1)^0,c
  1805   002F58  0E68               	movlw	low _motorR
  1806   002F5A  6E21               	movwf	PinkMove@mR^0,c
  1807   002F5C  0E01               	movlw	high _motorR
  1808   002F5E  6E22               	movwf	(PinkMove@mR+1)^0,c
  1809   002F60  ECE3  F028         	call	_PinkMove	;wreg free
  1810                           
  1811                           ;main.c: 121:             }
  1812   002F64  EF58  F016         	goto	l5228
  1813   002F68                     l5288:
  1814                           
  1815                           ; BSR set to: 1
  1816   002F68  0E0A               	movlw	10
  1817   002F6A  19EA               	xorwf	main@prev_colour& (0+255),w,b
  1818   002F6C  11EB               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1819   002F6E  A4D8               	btfss	status,2,c
  1820   002F70  EFBC  F017         	goto	u5391
  1821   002F74  EFBE  F017         	goto	u5390
  1822   002F78                     u5391:
  1823   002F78  EFCA  F017         	goto	l387
  1824   002F7C                     u5390:
  1825   002F7C                     
  1826                           ; BSR set to: 1
  1827                           ;main.c: 123:                 RetryMove(&motorL, &motorR);
  1828   002F7C  0E71               	movlw	low _motorL
  1829   002F7E  6E19               	movwf	RetryMove@mL^0,c
  1830   002F80  0E01               	movlw	high _motorL
  1831   002F82  6E1A               	movwf	(RetryMove@mL+1)^0,c
  1832   002F84  0E68               	movlw	low _motorR
  1833   002F86  6E1B               	movwf	RetryMove@mR^0,c
  1834   002F88  0E01               	movlw	high _motorR
  1835   002F8A  6E1C               	movwf	(RetryMove@mR+1)^0,c
  1836   002F8C  ECD4  F025         	call	_RetryMove	;wreg free
  1837   002F90  EF58  F016         	goto	l5228
  1838   002F94                     l387:
  1839                           
  1840                           ; BSR set to: 1
  1841   002F94  EF58  F016         	goto	l5228
  1842   002F98                     l5292:
  1843                           
  1844                           ; BSR set to: 1
  1845                           ;main.c: 129:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  1846   002F98  0E82               	movlw	low main@buf
  1847   002F9A  0100               	movlb	0	; () banked
  1848   002F9C  6FB0               	movwf	sprintf@s& (0+255),b
  1849   002F9E  0E01               	movlw	high main@buf
  1850   002FA0  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1851   002FA2  0E2E               	movlw	low STR_2
  1852   002FA4  6FB2               	movwf	sprintf@fmt& (0+255),b
  1853   002FA6  0E0E               	movlw	high STR_2
  1854   002FA8  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1855   002FAA  C17A  F0B4         	movff	_vals,?_sprintf+4
  1856   002FAE  C17B  F0B5         	movff	_vals+1,?_sprintf+5
  1857   002FB2  C17C  F0B6         	movff	_vals+2,?_sprintf+6
  1858   002FB6  C17D  F0B7         	movff	_vals+3,?_sprintf+7
  1859   002FBA  C17E  F0B8         	movff	_vals+4,?_sprintf+8
  1860   002FBE  C17F  F0B9         	movff	_vals+5,?_sprintf+9
  1861   002FC2  C180  F0BA         	movff	_vals+6,?_sprintf+10
  1862   002FC6  C181  F0BB         	movff	_vals+7,?_sprintf+11
  1863   002FCA  EC68  F028         	call	_sprintf	;wreg free
  1864   002FCE                     
  1865                           ;main.c: 130:             sendStringSerial4(buf);
  1866   002FCE  0E82               	movlw	low main@buf
  1867   002FD0  6E02               	movwf	sendStringSerial4@string^0,c
  1868   002FD2  0E01               	movlw	high main@buf
  1869   002FD4  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1870   002FD6  EC4E  F02B         	call	_sendStringSerial4	;wreg free
  1871   002FDA  EF58  F016         	goto	l5228
  1872   002FDE  EF07  F000         	goto	start
  1873   002FE2                     __end_of_main:
  1874                           	callstack 0
  1875                           
  1876 ;; *************** function _sprintf *****************
  1877 ;; Defined at:
  1878 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;  s               2   80[BANK0 ] PTR unsigned char 
  1881 ;;		 -> main@buf(100), 
  1882 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1883 ;;		 -> STR_2(34), STR_1(45), 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  f              11  102[BANK0 ] struct _IO_FILE
  1886 ;;  ap              2  100[BANK0 ] PTR void [1]
  1887 ;;		 -> ?_sprintf(2), 
  1888 ;;  ret             2    0        int 
  1889 ;; Return value:  Size  Location     Type
  1890 ;;                  2   80[BANK0 ] int 
  1891 ;; Registers used:
  1892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1893 ;; Tracked objects:
  1894 ;;		On entry : 0/0
  1895 ;;		On exit  : 0/0
  1896 ;;		Unchanged: 0/0
  1897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1898 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1899 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1901 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1902 ;;Total ram usage:       33 bytes
  1903 ;; Hardware stack levels used: 1
  1904 ;; Hardware stack levels required when called: 8
  1905 ;; This function calls:
  1906 ;;		_vfprintf
  1907 ;; This function is called by:
  1908 ;;		_main
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           	psect	text1
  1913   0050D0                     __ptext1:
  1914                           	callstack 0
  1915   0050D0                     _sprintf:
  1916                           	callstack 22
  1917   0050D0  0EB4               	movlw	low (?_sprintf+4)
  1918   0050D2  0100               	movlb	0	; () banked
  1919   0050D4  6FC4               	movwf	sprintf@ap& (0+255),b
  1920   0050D6  0E00               	movlw	high (?_sprintf+4)
  1921   0050D8  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  1922   0050DA  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  1923   0050DE  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  1924   0050E2                     
  1925                           ; BSR set to: 0
  1926   0050E2  0E00               	movlw	0
  1927   0050E4  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  1928   0050E6  0E00               	movlw	0
  1929   0050E8  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  1930   0050EA                     
  1931                           ; BSR set to: 0
  1932   0050EA  0E00               	movlw	0
  1933   0050EC  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  1934   0050EE  0E00               	movlw	0
  1935   0050F0  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  1936   0050F2                     
  1937                           ; BSR set to: 0
  1938   0050F2  0EC6               	movlw	low sprintf@f
  1939   0050F4  6FA8               	movwf	vfprintf@fp& (0+255),b
  1940   0050F6  0E00               	movlw	high sprintf@f
  1941   0050F8  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  1942   0050FA  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  1943   0050FE  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1944   005102  0EC4               	movlw	low sprintf@ap
  1945   005104  6FAC               	movwf	vfprintf@ap& (0+255),b
  1946   005106  0E00               	movlw	high sprintf@ap
  1947   005108  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  1948   00510A  EC3D  F028         	call	_vfprintf	;wreg free
  1949   00510E  0100               	movlb	0	; () banked
  1950   005110  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  1951   005112  25B0               	addwf	sprintf@s& (0+255),w,b
  1952   005114  6ED9               	movwf	fsr2l,c
  1953   005116  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  1954   005118  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1955   00511A  6EDA               	movwf	fsr2h,c
  1956   00511C  0E00               	movlw	0
  1957   00511E  6EDF               	movwf	indf2,c
  1958   005120                     
  1959                           ; BSR set to: 0
  1960   005120  0012               	return		;funcret
  1961   005122                     __end_of_sprintf:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _vfprintf *****************
  1965 ;; Defined at:
  1966 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  1969 ;;		 -> sprintf@f(11), 
  1970 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  1971 ;;		 -> STR_2(34), STR_1(45), 
  1972 ;;  ap              2   76[BANK0 ] PTR PTR void 
  1973 ;;		 -> sprintf@ap(2), 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  1976 ;;		 -> STR_2(34), STR_1(45), 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  2   72[BANK0 ] int 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1986 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;Total ram usage:        8 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 7
  1993 ;; This function calls:
  1994 ;;		_vfpfcnvrt
  1995 ;; This function is called by:
  1996 ;;		_sprintf
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text2
  2001   00507A                     __ptext2:
  2002                           	callstack 0
  2003   00507A                     _vfprintf:
  2004                           	callstack 22
  2005   00507A                     
  2006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2007   00507A  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2008   00507E  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2011   005082  EF52  F028         	goto	l4788
  2012   005086                     l4786:
  2013                           
  2014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2015   005086  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2016   00508A  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2017   00508E  0EAE               	movlw	low vfprintf@cfmt
  2018   005090  0100               	movlb	0	; () banked
  2019   005092  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2020   005094  0E00               	movlw	high vfprintf@cfmt
  2021   005096  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2022   005098  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2023   00509C  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2024   0050A0  EC55  F01B         	call	_vfpfcnvrt	;wreg free
  2025   0050A4                     l4788:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2028   0050A4  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2029   0050A8  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2030   0050AC                     	if	0	;tblptru may be non-zero
  2031   0050AC                     	endif
  2032   0050AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2033   0050AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2034   0050AE  6EF8               	movwf	tblptru,c
  2035   0050B0                     	endif
  2036   0050B0  0008               	tblrd		*
  2037   0050B2  50F5               	movf	tablat,w,c
  2038   0050B4  0900               	iorlw	0
  2039   0050B6  A4D8               	btfss	status,2,c
  2040   0050B8  EF60  F028         	goto	u4851
  2041   0050BC  EF62  F028         	goto	u4850
  2042   0050C0                     u4851:
  2043   0050C0  EF43  F028         	goto	l4786
  2044   0050C4                     u4850:
  2045   0050C4                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2047   0050C4  0E00               	movlw	0
  2048   0050C6  0100               	movlb	0	; () banked
  2049   0050C8  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2050   0050CA  0E00               	movlw	0
  2051   0050CC  6FA8               	movwf	?_vfprintf& (0+255),b
  2052   0050CE                     
  2053                           ; BSR set to: 0
  2054   0050CE  0012               	return		;funcret
  2055   0050D0                     __end_of_vfprintf:
  2056                           	callstack 0
  2057                           
  2058 ;; *************** function _vfpfcnvrt *****************
  2059 ;; Defined at:
  2060 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2063 ;;		 -> sprintf@f(11), 
  2064 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2065 ;;		 -> vfprintf@cfmt(2), 
  2066 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2067 ;;		 -> sprintf@ap(2), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  convarg         8   61[BANK0 ] struct .
  2070 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2071 ;;		 -> STR_2(34), STR_1(45), 
  2072 ;;  i               2    0        int 
  2073 ;;  done            2    0        int 
  2074 ;;  c               1   69[BANK0 ] unsigned char 
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2084 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2085 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2086 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2087 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2088 ;;Total ram usage:       19 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; Hardware stack levels required when called: 6
  2091 ;; This function calls:
  2092 ;;		_dtoa
  2093 ;;		_efgtoa
  2094 ;;		_fputc
  2095 ;; This function is called by:
  2096 ;;		_vfprintf
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           	psect	text3
  2101   0036AA                     __ptext3:
  2102                           	callstack 0
  2103   0036AA                     _vfpfcnvrt:
  2104                           	callstack 22
  2105   0036AA                     
  2106                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2107   0036AA  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2108   0036AE  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2109   0036B2  CFDE FFF6          	movff	postinc2,tblptrl
  2110   0036B6  CFDD FFF7          	movff	postdec2,tblptrh
  2111   0036BA                     	if	0	;tblptru may be non-zero
  2112   0036BA                     	endif
  2113   0036BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2114   0036BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2115   0036BC  6EF8               	movwf	tblptru,c
  2116   0036BE                     	endif
  2117   0036BE  0008               	tblrd		*
  2118   0036C0  50F5               	movf	tablat,w,c
  2119   0036C2  0A25               	xorlw	37
  2120   0036C4  A4D8               	btfss	status,2,c
  2121   0036C6  EF67  F01B         	goto	u4681
  2122   0036CA  EF69  F01B         	goto	u4680
  2123   0036CE                     u4681:
  2124   0036CE  EFC1  F01C         	goto	l4634
  2125   0036D2                     u4680:
  2126   0036D2                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2128   0036D2  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2129   0036D6  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2130   0036DA  2ADE               	incf	postinc2,f,c
  2131   0036DC  0E00               	movlw	0
  2132   0036DE  22DD               	addwfc	postdec2,f,c
  2133   0036E0                     
  2134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2135   0036E0  0E00               	movlw	0
  2136   0036E2  0100               	movlb	0	; () banked
  2137   0036E4  6FF0               	movwf	(_width+1)& (0+255),b
  2138   0036E6  0E00               	movlw	0
  2139   0036E8  6FEF               	movwf	_width& (0+255),b
  2140   0036EA  C0EF  F0F5         	movff	_width,_flags
  2141   0036EE                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2144   0036EE  69F1               	setf	_prec& (0+255),b
  2145   0036F0  69F2               	setf	(_prec+1)& (0+255),b
  2146   0036F2                     
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2149   0036F2  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2150   0036F6  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2151   0036FA  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2152   0036FE  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2153   003702                     
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2156   003702  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2157   003706  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2158   00370A                     	if	0	;tblptru may be non-zero
  2159   00370A                     	endif
  2160   00370A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2161   00370A  0E00               	movlw	low (__mediumconst shr (0+16))
  2162   00370C  6EF8               	movwf	tblptru,c
  2163   00370E                     	endif
  2164   00370E  0008               	tblrd		*
  2165   003710  50F5               	movf	tablat,w,c
  2166   003712  0A64               	xorlw	100
  2167   003714  B4D8               	btfsc	status,2,c
  2168   003716  EF8F  F01B         	goto	u4691
  2169   00371A  EF91  F01B         	goto	u4690
  2170   00371E                     u4691:
  2171   00371E  EFA1  F01B         	goto	l4590
  2172   003722                     u4690:
  2173   003722                     
  2174                           ; BSR set to: 0
  2175   003722  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2176   003726  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2177   00372A                     	if	0	;tblptru may be non-zero
  2178   00372A                     	endif
  2179   00372A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2180   00372A  0E00               	movlw	low (__mediumconst shr (0+16))
  2181   00372C  6EF8               	movwf	tblptru,c
  2182   00372E                     	endif
  2183   00372E  0008               	tblrd		*
  2184   003730  50F5               	movf	tablat,w,c
  2185   003732  0A69               	xorlw	105
  2186   003734  A4D8               	btfss	status,2,c
  2187   003736  EF9F  F01B         	goto	u4701
  2188   00373A  EFA1  F01B         	goto	u4700
  2189   00373E                     u4701:
  2190   00373E  EFE4  F01B         	goto	l4596
  2191   003742                     u4700:
  2192   003742                     l4590:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2196   003742  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2197   003746  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2198   00374A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2199   00374E  0E02               	movlw	2
  2200   003750  26DE               	addwf	postinc2,f,c
  2201   003752  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2202   003756  0E00               	movlw	0
  2203   003758  22DD               	addwfc	postdec2,f,c
  2204   00375A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2205   00375E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2206   003762  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2207   003766  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2208   00376A  0E00               	movlw	0
  2209   00376C  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2210   00376E  0EFF               	movlw	-1
  2211   003770  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2212   003772  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2213   003774  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2214   003776  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2215   003778  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2216   00377A  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2217                           
  2218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2219   00377C  0E01               	movlw	1
  2220   00377E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2221   003780  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2222   003782  0E00               	movlw	0
  2223   003784  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2224   003786  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2225   003788  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226   00378C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227   003790  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2228   003794  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2229   003798                     
  2230                           ; BSR set to: 0
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2232   003798  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2233   00379C  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2234   0037A0  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2235   0037A4  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2236   0037A8  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2237   0037AC  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2238   0037B0  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2239   0037B4  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2240   0037B8  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2241   0037BC  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2242   0037C0  ECD8  F01C         	call	_dtoa	;wreg free
  2243   0037C4  EFD7  F01C         	goto	l1327
  2244   0037C8                     l4596:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2248   0037C8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2249   0037CC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2250   0037D0  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2251   0037D4  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2252   0037D8                     
  2253                           ; BSR set to: 0
  2254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2255   0037D8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2256   0037DC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2257   0037E0                     	if	0	;tblptru may be non-zero
  2258   0037E0                     	endif
  2259   0037E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2260   0037E0  0E00               	movlw	low (__mediumconst shr (0+16))
  2261   0037E2  6EF8               	movwf	tblptru,c
  2262   0037E4                     	endif
  2263   0037E4  0008               	tblrd		*
  2264   0037E6  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2267   0037EA  EF03  F01C         	goto	l4608
  2268   0037EE                     l4600:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2272   0037EE  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2273   0037F0  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2276   0037F2  EF1C  F01C         	goto	l4610
  2277   0037F6                     l4602:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2281   0037F6  0E6C               	movlw	108
  2282   0037F8  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2283                           
  2284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2285   0037FA  EF1C  F01C         	goto	l4610
  2286   0037FE                     l4604:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2290   0037FE  0E00               	movlw	0
  2291   003800  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2292                           
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2294   003802  EF1C  F01C         	goto	l4610
  2295   003806                     l4608:
  2296                           
  2297                           ; BSR set to: 0
  2298   003806  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2299   003808  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2300   00380A  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2301                           
  2302                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2303                           ; Switch size 1, requested type "simple"
  2304                           ; Number of cases is 1, Range of values is 0 to 0
  2305                           ; switch strategies available:
  2306                           ; Name         Instructions Cycles
  2307                           ; simple_byte            4     3 (average)
  2308                           ;	Chosen strategy is simple_byte
  2309   00380C  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2310   00380E  0A00               	xorlw	0	; case 0
  2311   003810  B4D8               	btfsc	status,2,c
  2312   003812  EF0D  F01C         	goto	l5392
  2313   003816  EFFF  F01B         	goto	l4604
  2314   00381A                     l5392:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ; Switch size 1, requested type "simple"
  2318                           ; Number of cases is 3, Range of values is 76 to 108
  2319                           ; switch strategies available:
  2320                           ; Name         Instructions Cycles
  2321                           ; simple_byte           10     6 (average)
  2322                           ;	Chosen strategy is simple_byte
  2323   00381A  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2324   00381C  0A4C               	xorlw	76	; case 76
  2325   00381E  B4D8               	btfsc	status,2,c
  2326   003820  EFF7  F01B         	goto	l4600
  2327   003824  0A2A               	xorlw	42	; case 102
  2328   003826  B4D8               	btfsc	status,2,c
  2329   003828  EFFB  F01B         	goto	l4602
  2330   00382C  0A0A               	xorlw	10	; case 108
  2331   00382E  B4D8               	btfsc	status,2,c
  2332   003830  EFF7  F01B         	goto	l4600
  2333   003834  EFFF  F01B         	goto	l4604
  2334   003838                     l4610:
  2335                           
  2336                           ; BSR set to: 0
  2337   003838  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2338   00383C  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2339   003840                     	if	0	;tblptru may be non-zero
  2340   003840                     	endif
  2341   003840                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2342   003840  0E00               	movlw	low (__mediumconst shr (0+16))
  2343   003842  6EF8               	movwf	tblptru,c
  2344   003844                     	endif
  2345   003844  0008               	tblrd		*
  2346   003846  50F5               	movf	tablat,w,c
  2347   003848  0A66               	xorlw	102
  2348   00384A  A4D8               	btfss	status,2,c
  2349   00384C  EF2A  F01C         	goto	u4711
  2350   003850  EF2C  F01C         	goto	u4710
  2351   003854                     u4711:
  2352   003854  EFB8  F01C         	goto	l4630
  2353   003858                     u4710:
  2354   003858  EF62  F01C         	goto	l4618
  2355   00385C                     l4612:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2359   00385C  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2360   003860  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2361   003864  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2362   003868  0E04               	movlw	4
  2363   00386A  26DE               	addwf	postinc2,f,c
  2364   00386C  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2365   003870  0E00               	movlw	0
  2366   003872  22DD               	addwfc	postdec2,f,c
  2367   003874  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2368   003878  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2369   00387C  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2370   003880  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2371   003884  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2372   003888  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2375   00388C  EF77  F01C         	goto	l4620
  2376   003890                     l4614:
  2377                           
  2378                           ; BSR set to: 0
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2380   003890  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2381   003894  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2382   003898  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2383   00389C  0E04               	movlw	4
  2384   00389E  26DE               	addwf	postinc2,f,c
  2385   0038A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2386   0038A4  0E00               	movlw	0
  2387   0038A6  22DD               	addwfc	postdec2,f,c
  2388   0038A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2389   0038AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2390   0038B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2391   0038B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2392   0038B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2393   0038BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2396   0038C0  EF77  F01C         	goto	l4620
  2397   0038C4                     l4618:
  2398                           
  2399                           ; BSR set to: 0
  2400   0038C4  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2401   0038C6  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2402   0038C8  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2403                           
  2404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2405                           ; Switch size 1, requested type "simple"
  2406                           ; Number of cases is 1, Range of values is 0 to 0
  2407                           ; switch strategies available:
  2408                           ; Name         Instructions Cycles
  2409                           ; simple_byte            4     3 (average)
  2410                           ;	Chosen strategy is simple_byte
  2411   0038CA  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2412   0038CC  0A00               	xorlw	0	; case 0
  2413   0038CE  B4D8               	btfsc	status,2,c
  2414   0038D0  EF6C  F01C         	goto	l5394
  2415   0038D4  EF77  F01C         	goto	l4620
  2416   0038D8                     l5394:
  2417                           
  2418                           ; BSR set to: 0
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 2, Range of values is 76 to 108
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte            7     4 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425   0038D8  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2426   0038DA  0A4C               	xorlw	76	; case 76
  2427   0038DC  B4D8               	btfsc	status,2,c
  2428   0038DE  EF48  F01C         	goto	l4614
  2429   0038E2  0A20               	xorlw	32	; case 108
  2430   0038E4  B4D8               	btfsc	status,2,c
  2431   0038E6  EF2E  F01C         	goto	l4612
  2432   0038EA  EF77  F01C         	goto	l4620
  2433   0038EE                     l4620:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2437   0038EE  0E01               	movlw	1
  2438   0038F0  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2439   0038F2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2440   0038F4  0E00               	movlw	0
  2441   0038F6  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2442   0038F8  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2443   0038FA  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2444   0038FE  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2445   003902  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2446   003906  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2449   00390A  EFA0  F01C         	goto	l4628
  2450   00390E                     l4622:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2454   00390E  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2455   003912  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2456   003916  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2457   00391A  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2458   00391E  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2459   003922  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2460   003926  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2461   00392A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2462   00392E                     	if	0	;tblptru may be non-zero
  2463   00392E                     	endif
  2464   00392E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2465   00392E  0E00               	movlw	low (__mediumconst shr (0+16))
  2466   003930  6EF8               	movwf	tblptru,c
  2467   003932                     	endif
  2468   003932  0008               	tblrd		*
  2469   003934  CFF5 F066          	movff	tablat,efgtoa@c
  2470   003938  EC9B  F00C         	call	_efgtoa	;wreg free
  2471   00393C  EFD7  F01C         	goto	l1327
  2472   003940                     l4628:
  2473                           
  2474                           ; BSR set to: 0
  2475   003940  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2476   003944  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2477   003948                     	if	0	;tblptru may be non-zero
  2478   003948                     	endif
  2479   003948                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2480   003948  0E00               	movlw	low (__mediumconst shr (0+16))
  2481   00394A  6EF8               	movwf	tblptru,c
  2482   00394C                     	endif
  2483   00394C  0008               	tblrd		*
  2484   00394E  50F5               	movf	tablat,w,c
  2485   003950  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2486   003952  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2487                           
  2488                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2489                           ; Switch size 1, requested type "simple"
  2490                           ; Number of cases is 1, Range of values is 0 to 0
  2491                           ; switch strategies available:
  2492                           ; Name         Instructions Cycles
  2493                           ; simple_byte            4     3 (average)
  2494                           ;	Chosen strategy is simple_byte
  2495   003954  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2496   003956  0A00               	xorlw	0	; case 0
  2497   003958  B4D8               	btfsc	status,2,c
  2498   00395A  EFB1  F01C         	goto	l5396
  2499   00395E  EFB8  F01C         	goto	l4630
  2500   003962                     l5396:
  2501                           
  2502                           ; BSR set to: 0
  2503                           ; Switch size 1, requested type "simple"
  2504                           ; Number of cases is 1, Range of values is 102 to 102
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte            4     3 (average)
  2508                           ;	Chosen strategy is simple_byte
  2509   003962  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2510   003964  0A66               	xorlw	102	; case 102
  2511   003966  B4D8               	btfsc	status,2,c
  2512   003968  EF87  F01C         	goto	l4622
  2513   00396C  EFB8  F01C         	goto	l4630
  2514   003970                     l4630:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2517   003970  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2518   003974  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2519   003978  2ADE               	incf	postinc2,f,c
  2520   00397A  0E00               	movlw	0
  2521   00397C  22DD               	addwfc	postdec2,f,c
  2522   00397E  EFD7  F01C         	goto	l1327
  2523   003982                     l4634:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2526   003982  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2527   003986  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2528   00398A  CFDE FFF6          	movff	postinc2,tblptrl
  2529   00398E  CFDD FFF7          	movff	postdec2,tblptrh
  2530   003992                     	if	0	;tblptru may be non-zero
  2531   003992                     	endif
  2532   003992                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2533   003992  0E00               	movlw	low (__mediumconst shr (0+16))
  2534   003994  6EF8               	movwf	tblptru,c
  2535   003996                     	endif
  2536   003996  0008               	tblrd		*
  2537   003998  50F5               	movf	tablat,w,c
  2538   00399A  6E01               	movwf	fputc@c^0,c
  2539   00399C  6A02               	clrf	(fputc@c+1)^0,c
  2540   00399E  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2541   0039A2  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2542   0039A6  ECAA  F023         	call	_fputc	;wreg free
  2543   0039AA  EFB8  F01C         	goto	l4630
  2544   0039AE                     l1327:
  2545   0039AE  0012               	return		;funcret
  2546   0039B0                     __end_of_vfpfcnvrt:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _efgtoa *****************
  2550 ;; Defined at:
  2551 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2554 ;;		 -> sprintf@f(11), 
  2555 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2556 ;;  c               1    6[BANK0 ] unsigned char 
  2557 ;; Auto vars:     Size  Location     Type
  2558 ;;  u               4   49[BANK0 ] struct flui
  2559 ;;  g               4   45[BANK0 ] struct flui
  2560 ;;  l               4   38[BANK0 ] struct flui
  2561 ;;  h               4   34[BANK0 ] struct flui
  2562 ;;  ou              4   28[BANK0 ] struct flui
  2563 ;;  n               2   43[BANK0 ] int 
  2564 ;;  i               2   32[BANK0 ] int 
  2565 ;;  w               2   26[BANK0 ] int 
  2566 ;;  e               2   24[BANK0 ] int 
  2567 ;;  m               2   22[BANK0 ] int 
  2568 ;;  d               2   20[BANK0 ] int 
  2569 ;;  t               2   13[BANK0 ] int 
  2570 ;;  p               2   11[BANK0 ] int 
  2571 ;;  ne              2    9[BANK0 ] int 
  2572 ;;  sign            1   42[BANK0 ] unsigned char 
  2573 ;;  nmode           1   19[BANK0 ] unsigned char 
  2574 ;;  mode            1   18[BANK0 ] unsigned char 
  2575 ;;  pp              1   17[BANK0 ] unsigned char 
  2576 ;;  esign           1    0        unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2586 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;Total ram usage:       53 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		___fladd
  2595 ;;		___fldiv
  2596 ;;		___fleq
  2597 ;;		___flge
  2598 ;;		___flmul
  2599 ;;		___flneg
  2600 ;;		___flsub
  2601 ;;		___fltol
  2602 ;;		___fpclassifyf
  2603 ;;		_floorf
  2604 ;;		_labs
  2605 ;;		_memcpy
  2606 ;;		_pad
  2607 ;;		_strcpy
  2608 ;; This function is called by:
  2609 ;;		_vfpfcnvrt
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text4
  2614   001936                     __ptext4:
  2615                           	callstack 0
  2616   001936                     _efgtoa:
  2617                           	callstack 22
  2618   001936                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2620   001936  0E00               	movlw	0
  2621   001938  0100               	movlb	0	; () banked
  2622   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2623   00193C                     
  2624                           ; BSR set to: 0
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2626   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2627   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2628   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2629   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2630   00194C                     
  2631                           ; BSR set to: 0
  2632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2633   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2634   00194E  EFAD  F00C         	goto	u4260
  2635   001952  EFAB  F00C         	goto	u4261
  2636   001956                     u4261:
  2637   001956  EFC1  F00C         	goto	l4278
  2638   00195A                     u4260:
  2639   00195A                     
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2642   00195A  0E01               	movlw	1
  2643   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2644   00195E                     
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2647   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2648   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2649   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2650   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2651   00196E  EC32  F02B         	call	___flneg	;wreg free
  2652   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2653   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2654   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2655   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2656   001982                     l4278:
  2657                           
  2658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2659   001982  0E00               	movlw	0
  2660   001984  0100               	movlb	0	; () banked
  2661   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2662   001988  0E00               	movlw	0
  2663   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2664   00198C                     
  2665                           ; BSR set to: 0
  2666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2667   00198C  C0EF  F07A         	movff	_width,efgtoa@w
  2668   001990  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  2669   001994                     
  2670                           ; BSR set to: 0
  2671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2672   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2673   001996  B4D8               	btfsc	status,2,c
  2674   001998  EFD0  F00C         	goto	u4271
  2675   00199C  EFD2  F00C         	goto	u4270
  2676   0019A0                     u4271:
  2677   0019A0  EFE6  F00C         	goto	l4292
  2678   0019A4                     u4270:
  2679   0019A4                     
  2680                           ; BSR set to: 0
  2681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2682   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2683   0019A6  A4D8               	btfss	status,2,c
  2684   0019A8  EFD8  F00C         	goto	u4281
  2685   0019AC  EFDA  F00C         	goto	u4280
  2686   0019B0                     u4281:
  2687   0019B0  EFE0  F00C         	goto	l4288
  2688   0019B4                     u4280:
  2689   0019B4                     
  2690                           ; BSR set to: 0
  2691   0019B4  0E00               	movlw	0
  2692   0019B6  6F70               	movwf	(_efgtoa$2367+1)& (0+255),b
  2693   0019B8  0E2B               	movlw	43
  2694   0019BA  6F6F               	movwf	_efgtoa$2367& (0+255),b
  2695   0019BC  EFE4  F00C         	goto	l4290
  2696   0019C0                     l4288:
  2697                           
  2698                           ; BSR set to: 0
  2699   0019C0  0E00               	movlw	0
  2700   0019C2  6F70               	movwf	(_efgtoa$2367+1)& (0+255),b
  2701   0019C4  0E2D               	movlw	45
  2702   0019C6  6F6F               	movwf	_efgtoa$2367& (0+255),b
  2703   0019C8                     l4290:
  2704                           
  2705                           ; BSR set to: 0
  2706   0019C8  C06F  F08A         	movff	_efgtoa$2367,efgtoa@sign
  2707   0019CC                     l4292:
  2708                           
  2709                           ; BSR set to: 0
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2711   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2712   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2713   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2714   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2715   0019DC  EC2B  F023         	call	___fpclassifyf	;wreg free
  2716   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  2717   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2718   0019E4  A4D8               	btfss	status,2,c
  2719   0019E6  EFF7  F00C         	goto	u4291
  2720   0019EA  EFF9  F00C         	goto	u4290
  2721   0019EE                     u4291:
  2722   0019EE  EF2C  F00D         	goto	l4310
  2723   0019F2                     u4290:
  2724   0019F2                     
  2725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  2726   0019F2  0100               	movlb	0	; () banked
  2727   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  2728   0019F6  B4D8               	btfsc	status,2,c
  2729   0019F8  EF00  F00D         	goto	u4301
  2730   0019FC  EF02  F00D         	goto	u4300
  2731   001A00                     u4301:
  2732   001A00  EF0B  F00D         	goto	l4302
  2733   001A04                     u4300:
  2734   001A04                     
  2735                           ; BSR set to: 0
  2736                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  2737   001A04  C08A  F10C         	movff	efgtoa@sign,_dbuf
  2738   001A08                     
  2739                           ; BSR set to: 0
  2740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2741   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  2742   001A0A  A0D8               	btfss	status,0,c
  2743   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  2744   001A0E                     
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2747   001A0E  0E00               	movlw	0
  2748   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2749   001A12  0E01               	movlw	1
  2750   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  2751   001A16                     l4302:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2755   001A16  0E0C               	movlw	low _dbuf
  2756   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  2757   001A1A  6E01               	movwf	strcpy@dest^0,c
  2758   001A1C  0E01               	movlw	high _dbuf
  2759   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2760   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  2761   001A22  0E50               	movlw	low STR_3
  2762   001A24  6E03               	movwf	strcpy@src^0,c
  2763   001A26  0E0E               	movlw	high STR_3
  2764   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  2765   001A2A  EC6F  F02A         	call	_strcpy	;wreg free
  2766   001A2E                     l4304:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2769   001A2E  0100               	movlb	0	; () banked
  2770   001A30  0EFD               	movlw	253
  2771   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  2772   001A34  0EFF               	movlw	255
  2773   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2774   001A38                     
  2775                           ; BSR set to: 0
  2776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2777   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  2778   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  2779   001A40  0E0C               	movlw	low _dbuf
  2780   001A42  6E13               	movwf	pad@buf^0,c
  2781   001A44  0E01               	movlw	high _dbuf
  2782   001A46  6E14               	movwf	(pad@buf+1)^0,c
  2783   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  2784   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  2785   001A50  EC15  F026         	call	_pad	;wreg free
  2786   001A54  EF97  F011         	goto	l1279
  2787   001A58                     l4310:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2790   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2791   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2792   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2793   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2794   001A68  EC2B  F023         	call	___fpclassifyf	;wreg free
  2795   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  2796   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2797   001A70  A4D8               	btfss	status,2,c
  2798   001A72  EF3D  F00D         	goto	u4311
  2799   001A76  EF3F  F00D         	goto	u4310
  2800   001A7A                     u4311:
  2801   001A7A  EF5F  F00D         	goto	l4328
  2802   001A7E                     u4310:
  2803   001A7E                     
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2805   001A7E  0100               	movlb	0	; () banked
  2806   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  2807   001A82  B4D8               	btfsc	status,2,c
  2808   001A84  EF46  F00D         	goto	u4321
  2809   001A88  EF48  F00D         	goto	u4320
  2810   001A8C                     u4321:
  2811   001A8C  EF51  F00D         	goto	l4320
  2812   001A90                     u4320:
  2813   001A90                     
  2814                           ; BSR set to: 0
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2816   001A90  C08A  F10C         	movff	efgtoa@sign,_dbuf
  2817   001A94                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2820   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  2821   001A96  A0D8               	btfss	status,0,c
  2822   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  2823   001A9A                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2826   001A9A  0E00               	movlw	0
  2827   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2828   001A9E  0E01               	movlw	1
  2829   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  2830   001AA2                     l4320:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2834   001AA2  0E0C               	movlw	low _dbuf
  2835   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  2836   001AA6  6E01               	movwf	strcpy@dest^0,c
  2837   001AA8  0E01               	movlw	high _dbuf
  2838   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2839   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  2840   001AAE  0E54               	movlw	low STR_6
  2841   001AB0  6E03               	movwf	strcpy@src^0,c
  2842   001AB2  0E0E               	movlw	high STR_6
  2843   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  2844   001AB6  EC6F  F02A         	call	_strcpy	;wreg free
  2845   001ABA  EF17  F00D         	goto	l4304
  2846   001ABE                     l4328:
  2847                           
  2848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2849   001ABE  0E00               	movlw	0
  2850   001AC0  0100               	movlb	0	; () banked
  2851   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  2852   001AC4  0E00               	movlw	0
  2853   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  2854   001AC8  0E80               	movlw	128
  2855   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  2856   001ACC  0E3F               	movlw	63
  2857   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  2858                           
  2859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2860   001AD0  0E00               	movlw	0
  2861   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  2862   001AD4  0E00               	movlw	0
  2863   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  2864   001AD8                     
  2865                           ; BSR set to: 0
  2866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2867   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  2868   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  2869   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  2870   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  2871   001AE8  0E00               	movlw	0
  2872   001AEA  6E36               	movwf	___fleq@ff2^0,c
  2873   001AEC  0E00               	movlw	0
  2874   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  2875   001AF0  0E00               	movlw	0
  2876   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  2877   001AF4  0E00               	movlw	0
  2878   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  2879   001AF8  EC0F  F024         	call	___fleq	;wreg free
  2880   001AFC  B0D8               	btfsc	status,0,c
  2881   001AFE  EF83  F00D         	goto	u4331
  2882   001B02  EF85  F00D         	goto	u4330
  2883   001B06                     u4331:
  2884   001B06  EF64  F00E         	goto	l1282
  2885   001B0A                     u4330:
  2886   001B0A  EF92  F00D         	goto	l4336
  2887   001B0E                     l1284:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2890   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  2891   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  2892   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  2893   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  2894   001B1E                     
  2895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2896   001B1E  0100               	movlb	0	; () banked
  2897   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  2898   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  2899   001B24                     l4336:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2902   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  2903   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  2904   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  2905   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  2906   001B34  0E00               	movlw	0
  2907   001B36  6E15               	movwf	___flmul@a^0,c
  2908   001B38  0E00               	movlw	0
  2909   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  2910   001B3C  0E20               	movlw	32
  2911   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  2912   001B40  0E41               	movlw	65
  2913   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  2914   001B44  ECF8  F013         	call	___flmul	;wreg free
  2915   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  2916   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  2917   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  2918   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  2919   001B58  0100               	movlb	0	; () banked
  2920   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  2921   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  2922   001B5E  6E01               	movwf	labs@a^0,c
  2923   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  2924   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2925   001B64  6E02               	movwf	(labs@a+1)^0,c
  2926   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  2927   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2928   001B6A  6E03               	movwf	(labs@a+2)^0,c
  2929   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  2930   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2931   001B70  6E04               	movwf	(labs@a+3)^0,c
  2932   001B72  ECC7  F026         	call	_labs	;wreg free
  2933   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  2934   001B78  EFC9  F00D         	goto	u4341
  2935   001B7C  5004               	movf	(?_labs+3)^0,w,c
  2936   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  2937   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  2938   001B82  E109               	bnz	u4340
  2939   001B84  0E02               	movlw	2
  2940   001B86  5C01               	subwf	?_labs^0,w,c
  2941   001B88  A0D8               	btfss	status,0,c
  2942   001B8A  EFC9  F00D         	goto	u4341
  2943   001B8E  EFCB  F00D         	goto	u4340
  2944   001B92                     u4341:
  2945   001B92  EF87  F00D         	goto	l1284
  2946   001B96                     u4340:
  2947   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  2948   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  2949   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  2950   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  2951   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  2952   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  2953   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  2954   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  2955   001BB6  ECA9  F022         	call	___flge	;wreg free
  2956   001BBA  A0D8               	btfss	status,0,c
  2957   001BBC  EFE2  F00D         	goto	u4351
  2958   001BC0  EFE4  F00D         	goto	u4350
  2959   001BC4                     u4351:
  2960   001BC4  EF87  F00D         	goto	l1284
  2961   001BC8                     u4350:
  2962   001BC8                     
  2963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2964   001BC8  0100               	movlb	0	; () banked
  2965   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  2966   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  2967   001BCE  6E01               	movwf	labs@a^0,c
  2968   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  2969   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2970   001BD4  6E02               	movwf	(labs@a+1)^0,c
  2971   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  2972   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2973   001BDA  6E03               	movwf	(labs@a+2)^0,c
  2974   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  2975   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2976   001BE0  6E04               	movwf	(labs@a+3)^0,c
  2977   001BE2  ECC7  F026         	call	_labs	;wreg free
  2978   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  2979   001BE8  EF03  F00E         	goto	u4360
  2980   001BEC  5004               	movf	(?_labs+3)^0,w,c
  2981   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  2982   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  2983   001BF2  E107               	bnz	u4361
  2984   001BF4  0E02               	movlw	2
  2985   001BF6  5C01               	subwf	?_labs^0,w,c
  2986   001BF8  B0D8               	btfsc	status,0,c
  2987   001BFA  EF01  F00E         	goto	u4361
  2988   001BFE  EF03  F00E         	goto	u4360
  2989   001C02                     u4361:
  2990   001C02  EF4B  F00E         	goto	l4354
  2991   001C06                     u4360:
  2992   001C06                     l4344:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2995   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  2996   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  2997   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  2998   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3001   001C16  EF64  F00E         	goto	l1282
  3002   001C1A                     l4346:
  3003                           
  3004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3005   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3006   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3007   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3008   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3009   001C2A  0E00               	movlw	0
  3010   001C2C  6E36               	movwf	___fldiv@a^0,c
  3011   001C2E  0E00               	movlw	0
  3012   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3013   001C32  0E20               	movlw	32
  3014   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3015   001C36  0E41               	movlw	65
  3016   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3017   001C3A  ECF1  F017         	call	___fldiv	;wreg free
  3018   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3019   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3020   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3021   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3022   001C4E                     
  3023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3024   001C4E  0100               	movlb	0	; () banked
  3025   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3026   001C52  A0D8               	btfss	status,0,c
  3027   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3028   001C56                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3031   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3032   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3033   001C5A  6E01               	movwf	labs@a^0,c
  3034   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3035   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3036   001C60  6E02               	movwf	(labs@a+1)^0,c
  3037   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3038   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3039   001C66  6E03               	movwf	(labs@a+2)^0,c
  3040   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3041   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3042   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3043   001C6E  ECC7  F026         	call	_labs	;wreg free
  3044   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3045   001C74  EF49  F00E         	goto	u4370
  3046   001C78  5004               	movf	(?_labs+3)^0,w,c
  3047   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3048   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3049   001C7E  E107               	bnz	u4371
  3050   001C80  0E02               	movlw	2
  3051   001C82  5C01               	subwf	?_labs^0,w,c
  3052   001C84  B0D8               	btfsc	status,0,c
  3053   001C86  EF47  F00E         	goto	u4371
  3054   001C8A  EF49  F00E         	goto	u4370
  3055   001C8E                     u4371:
  3056   001C8E  EF4B  F00E         	goto	l4354
  3057   001C92                     u4370:
  3058   001C92  EF03  F00E         	goto	l4344
  3059   001C96                     l4354:
  3060                           
  3061                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3062   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3063   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3064   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3065   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3066   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3067   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3068   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3069   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3070   001CB6  ECA9  F022         	call	___flge	;wreg free
  3071   001CBA  A0D8               	btfss	status,0,c
  3072   001CBC  EF62  F00E         	goto	u4381
  3073   001CC0  EF64  F00E         	goto	u4380
  3074   001CC4                     u4381:
  3075   001CC4  EF0D  F00E         	goto	l4346
  3076   001CC8                     u4380:
  3077   001CC8                     l1282:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3080   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3083   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3084   001CD0                     
  3085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3086   001CD0  0100               	movlb	0	; () banked
  3087   001CD2  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3088   001CD4  EF6E  F00E         	goto	u4391
  3089   001CD8  EF70  F00E         	goto	u4390
  3090   001CDC                     u4391:
  3091   001CDC  EF76  F00E         	goto	l4360
  3092   001CE0                     u4390:
  3093   001CE0                     
  3094                           ; BSR set to: 0
  3095   001CE0  C0F1  F06B         	movff	_prec,efgtoa@p
  3096   001CE4  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3097   001CE8  EF7A  F00E         	goto	l4362
  3098   001CEC                     l4360:
  3099                           
  3100                           ; BSR set to: 0
  3101   001CEC  0E00               	movlw	0
  3102   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3103   001CF0  0E06               	movlw	6
  3104   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3105   001CF4                     l4362:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3109   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3110   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3111   001CFC                     
  3112                           ; BSR set to: 0
  3113                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3114   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3115   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3116   001D00                     
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3119   001D00  0E66               	movlw	102
  3120   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3121   001D04  A4D8               	btfss	status,2,c
  3122   001D06  EF87  F00E         	goto	u4401
  3123   001D0A  EF89  F00E         	goto	u4400
  3124   001D0E                     u4401:
  3125   001D0E  EFA9  F00E         	goto	l4376
  3126   001D12                     u4400:
  3127   001D12                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3130   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3131   001D14  EF90  F00E         	goto	u4410
  3132   001D18  EF8E  F00E         	goto	u4411
  3133   001D1C                     u4411:
  3134   001D1C  EF9C  F00E         	goto	l4372
  3135   001D20                     u4410:
  3136   001D20                     
  3137                           ; BSR set to: 0
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3139   001D20  0E00               	movlw	0
  3140   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3141   001D24  0E00               	movlw	0
  3142   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3143   001D28  0E80               	movlw	128
  3144   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3145   001D2C  0E3F               	movlw	63
  3146   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3149   001D30  0E00               	movlw	0
  3150   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3151   001D34  0E00               	movlw	0
  3152   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3153   001D38                     l4372:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3157   001D38  0E67               	movlw	103
  3158   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3159   001D3C  B4D8               	btfsc	status,2,c
  3160   001D3E  EFA3  F00E         	goto	u4421
  3161   001D42  EFA5  F00E         	goto	u4420
  3162   001D46                     u4421:
  3163   001D46  EFA9  F00E         	goto	l4376
  3164   001D4A                     u4420:
  3165   001D4A                     
  3166                           ; BSR set to: 0
  3167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3168   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3169   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3170   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3171   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3172   001D52                     l4376:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3176   001D52  0E00               	movlw	0
  3177   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3178   001D56  0E00               	movlw	0
  3179   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3180   001D5A                     
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3183   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3184   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3185   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3186   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3187   001D6A                     
  3188                           ; BSR set to: 0
  3189                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3190   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3191   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3192   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3193   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3194                           
  3195                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3196   001D7A  EF3A  F00F         	goto	l4390
  3197   001D7E                     l4382:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3201   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3202   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3203   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3204   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3205   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3206   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3207   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3208   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3209   001D9E  ECF1  F017         	call	___fldiv	;wreg free
  3210   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3211   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3212   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3213   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3214   001DB2  EC17  F01E         	call	_floorf	;wreg free
  3215   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3216   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3217   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3218   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3221   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3222   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3223   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3224   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3225   001DD6  EC26  F022         	call	___fltol	;wreg free
  3226   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3227   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3228   001DE2                     
  3229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3230   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3231   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3232   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3233   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3234   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3235   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3236   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3237   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3238   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3239   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3240   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3241   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3242   001E12  ECF8  F013         	call	___flmul	;wreg free
  3243   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3244   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3245   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3246   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3247   001E26  EC4C  F02A         	call	___flsub	;wreg free
  3248   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3249   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3250   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3251   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3252   001E3A                     
  3253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3254   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3255   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3256   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3257   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3258   001E4A  0E00               	movlw	0
  3259   001E4C  6E36               	movwf	___fldiv@a^0,c
  3260   001E4E  0E00               	movlw	0
  3261   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3262   001E52  0E20               	movlw	32
  3263   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3264   001E56  0E41               	movlw	65
  3265   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3266   001E5A  ECF1  F017         	call	___fldiv	;wreg free
  3267   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3268   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3269   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3270   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3271   001E6E                     
  3272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3273   001E6E  0100               	movlb	0	; () banked
  3274   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3275   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3276   001E74                     l4390:
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3280   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3281   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3282   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3283   001E7A  0A80               	xorlw	128
  3284   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3285   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3286   001E80  0A80               	xorlw	128
  3287   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3288   001E84  A0D8               	btfss	status,0,c
  3289   001E86  EF47  F00F         	goto	u4431
  3290   001E8A  EF49  F00F         	goto	u4430
  3291   001E8E                     u4431:
  3292   001E8E  EFBF  F00E         	goto	l4382
  3293   001E92                     u4430:
  3294   001E92                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3297   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3298   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3299   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3300   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3301   001EA2  0E00               	movlw	0
  3302   001EA4  6E15               	movwf	___flmul@a^0,c
  3303   001EA6  0E00               	movlw	0
  3304   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3305   001EAA  0EA0               	movlw	160
  3306   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3307   001EAE  0E40               	movlw	64
  3308   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3309   001EB2  ECF8  F013         	call	___flmul	;wreg free
  3310   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3311   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3312   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3313   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3314   001EC6                     
  3315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3316   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3317   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3318   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3319   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3320   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3321   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3322   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3323   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3324   001EE6  ECA9  F022         	call	___flge	;wreg free
  3325   001EEA  B0D8               	btfsc	status,0,c
  3326   001EEC  EF7A  F00F         	goto	u4441
  3327   001EF0  EF7C  F00F         	goto	u4440
  3328   001EF4                     u4441:
  3329   001EF4  EF87  F00F         	goto	l4398
  3330   001EF8                     u4440:
  3331   001EF8                     
  3332                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3333   001EF8  0E00               	movlw	0
  3334   001EFA  0100               	movlb	0	; () banked
  3335   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3336   001EFE  0E00               	movlw	0
  3337   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3338   001F02  0E00               	movlw	0
  3339   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3340   001F06  0E00               	movlw	0
  3341   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3342                           
  3343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3344   001F0A  EFB0  F00F         	goto	l4404
  3345   001F0E                     l4398:
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3348   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3349   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3350   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3351   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3352   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3353   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3354   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3355   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3356   001F2E  EC0F  F024         	call	___fleq	;wreg free
  3357   001F32  A0D8               	btfss	status,0,c
  3358   001F34  EF9E  F00F         	goto	u4451
  3359   001F38  EFA0  F00F         	goto	u4450
  3360   001F3C                     u4451:
  3361   001F3C  EFB0  F00F         	goto	l4404
  3362   001F40                     u4450:
  3363   001F40  0100               	movlb	0	; () banked
  3364   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3365   001F44  EFA6  F00F         	goto	u4461
  3366   001F48  EFA8  F00F         	goto	u4460
  3367   001F4C                     u4461:
  3368   001F4C  EFB0  F00F         	goto	l4404
  3369   001F50                     u4460:
  3370   001F50                     
  3371                           ; BSR set to: 0
  3372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3373   001F50  0E00               	movlw	0
  3374   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3375   001F54  0E00               	movlw	0
  3376   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3377   001F58  0E00               	movlw	0
  3378   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3379   001F5C  0E00               	movlw	0
  3380   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3381   001F60                     l4404:
  3382                           
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3384   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3385   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3386   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3387   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3388   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3389   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3390   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3391   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3392   001F80  EC98  F011         	call	___fladd	;wreg free
  3393   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3394   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3395   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3396   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3397   001F94                     
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3399   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3400   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3401   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3402   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3403   001FA4  0E00               	movlw	0
  3404   001FA6  6E15               	movwf	___flmul@a^0,c
  3405   001FA8  0E00               	movlw	0
  3406   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3407   001FAC  0E20               	movlw	32
  3408   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3409   001FB0  0E41               	movlw	65
  3410   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3411   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3412   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3413   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3414   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3415   001FC4  ECF8  F013         	call	___flmul	;wreg free
  3416   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3417   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3418   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3419   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3420   001FD8  ECA9  F022         	call	___flge	;wreg free
  3421   001FDC  A0D8               	btfss	status,0,c
  3422   001FDE  EFF3  F00F         	goto	u4471
  3423   001FE2  EFF5  F00F         	goto	u4470
  3424   001FE6                     u4471:
  3425   001FE6  EF1E  F010         	goto	l4416
  3426   001FEA                     u4470:
  3427   001FEA                     
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3429   001FEA  0100               	movlb	0	; () banked
  3430   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3431   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3432   001FF0                     
  3433                           ; BSR set to: 0
  3434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3435   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3436   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3437   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3438   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3439   002000  0E00               	movlw	0
  3440   002002  6E15               	movwf	___flmul@a^0,c
  3441   002004  0E00               	movlw	0
  3442   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3443   002008  0E20               	movlw	32
  3444   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3445   00200C  0E41               	movlw	65
  3446   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3447   002010  ECF8  F013         	call	___flmul	;wreg free
  3448   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3449   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3450   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3451   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3452   002024                     
  3453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3454   002024  0E66               	movlw	102
  3455   002026  0100               	movlb	0	; () banked
  3456   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3457   00202A  A4D8               	btfss	status,2,c
  3458   00202C  EF1A  F010         	goto	u4481
  3459   002030  EF1C  F010         	goto	u4480
  3460   002034                     u4481:
  3461   002034  EF1E  F010         	goto	l4416
  3462   002038                     u4480:
  3463   002038                     
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3466   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3467   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3468   00203C                     l4416:
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3471   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3472   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3473   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3474   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3475   00204C                     
  3476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3477   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3478   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3479   002054                     
  3480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3481   002054  0E00               	movlw	0
  3482   002056  0100               	movlb	0	; () banked
  3483   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3484   00205A                     
  3485                           ; BSR set to: 0
  3486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3487   00205A  0E00               	movlw	0
  3488   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3489   00205E  0E00               	movlw	0
  3490   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3491   002062                     
  3492                           ; BSR set to: 0
  3493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3494   002062  0E00               	movlw	0
  3495   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3496   002066  0E00               	movlw	0
  3497   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3500   00206A  EF1C  F011         	goto	l4466
  3501   00206E                     l4426:
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3505   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3506   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3507   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3508   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3509   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3510   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3511   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3512   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3513   00208E  ECF1  F017         	call	___fldiv	;wreg free
  3514   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3515   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3516   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3517   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3518   0020A2  EC17  F01E         	call	_floorf	;wreg free
  3519   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3520   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3521   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3522   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3523                           
  3524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3525   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3526   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3527   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3528   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3529   0020C6  EC26  F022         	call	___fltol	;wreg free
  3530   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3531   0020CC  EF73  F010         	goto	u4490
  3532   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3533   0020D2  E107               	bnz	u4491
  3534   0020D4  0E0A               	movlw	10
  3535   0020D6  5C01               	subwf	?___fltol^0,w,c
  3536   0020D8  B0D8               	btfsc	status,0,c
  3537   0020DA  EF71  F010         	goto	u4491
  3538   0020DE  EF73  F010         	goto	u4490
  3539   0020E2                     u4491:
  3540   0020E2  EF83  F010         	goto	l4430
  3541   0020E6                     u4490:
  3542   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3543   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3544   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3545   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3546   0020F6  EC26  F022         	call	___fltol	;wreg free
  3547   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3548   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3549   002102  EF88  F010         	goto	l1312
  3550   002106                     l4430:
  3551   002106  0E00               	movlw	0
  3552   002108  0100               	movlb	0	; () banked
  3553   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3554   00210C  0E09               	movlw	9
  3555   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3556   002110                     l1312:
  3557                           
  3558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3559   002110  0100               	movlb	0	; () banked
  3560   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3561   002114  A4D8               	btfss	status,2,c
  3562   002116  EF8F  F010         	goto	u4501
  3563   00211A  EF91  F010         	goto	u4500
  3564   00211E                     u4501:
  3565   00211E  EFB9  F010         	goto	l4450
  3566   002122                     u4500:
  3567   002122                     
  3568                           ; BSR set to: 0
  3569   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3570   002124  EF98  F010         	goto	u4510
  3571   002128  EF96  F010         	goto	u4511
  3572   00212C                     u4511:
  3573   00212C  EFB9  F010         	goto	l4450
  3574   002130                     u4510:
  3575   002130                     
  3576                           ; BSR set to: 0
  3577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3578   002130  0E0C               	movlw	low _dbuf
  3579   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3580   002134  6ED9               	movwf	fsr2l,c
  3581   002136  0E01               	movlw	high _dbuf
  3582   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3583   00213A  6EDA               	movwf	fsr2h,c
  3584   00213C  0E2E               	movlw	46
  3585   00213E  6EDF               	movwf	indf2,c
  3586   002140                     
  3587                           ; BSR set to: 0
  3588   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3589   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3590   002144                     
  3591                           ; BSR set to: 0
  3592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3593   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3594   002146  A0D8               	btfss	status,0,c
  3595   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3596   00214A                     
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3599   00214A  0E01               	movlw	1
  3600   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3601   00214E  EFB9  F010         	goto	l4450
  3602   002152                     l4442:
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3606   002152  0E0C               	movlw	low _dbuf
  3607   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3608   002156  6ED9               	movwf	fsr2l,c
  3609   002158  0E01               	movlw	high _dbuf
  3610   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3611   00215C  6EDA               	movwf	fsr2h,c
  3612   00215E  0E30               	movlw	48
  3613   002160  6EDF               	movwf	indf2,c
  3614   002162                     
  3615                           ; BSR set to: 0
  3616   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3617   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3618   002166                     
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3621   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3622   002168  A0D8               	btfss	status,0,c
  3623   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3624   00216C                     
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3627   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3628   00216E  A0D8               	btfss	status,0,c
  3629   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3630   002172                     l4450:
  3631                           
  3632                           ; BSR set to: 0
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3634   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3635   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3636   002176  A4D8               	btfss	status,2,c
  3637   002178  EFC0  F010         	goto	u4521
  3638   00217C  EFC2  F010         	goto	u4520
  3639   002180                     u4521:
  3640   002180  EFA9  F010         	goto	l4442
  3641   002184                     u4520:
  3642   002184                     
  3643                           ; BSR set to: 0
  3644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3645   002184  0E0C               	movlw	low _dbuf
  3646   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3647   002188  6ED9               	movwf	fsr2l,c
  3648   00218A  0E01               	movlw	high _dbuf
  3649   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3650   00218E  6EDA               	movwf	fsr2h,c
  3651   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3652   002192  0F30               	addlw	48
  3653   002194  6EDF               	movwf	indf2,c
  3654   002196                     
  3655                           ; BSR set to: 0
  3656   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3657   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3658   00219A                     
  3659                           ; BSR set to: 0
  3660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3661   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3662   00219C  A0D8               	btfss	status,0,c
  3663   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3664   0021A0                     
  3665                           ; BSR set to: 0
  3666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3667   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3668   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3669   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3670   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3671   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3672   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3673   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3674   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3675   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3676   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3677   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3678   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3679   0021D0  ECF8  F013         	call	___flmul	;wreg free
  3680   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3681   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3682   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3683   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3684   0021E4  EC4C  F02A         	call	___flsub	;wreg free
  3685   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3686   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3687   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3688   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3689   0021F8                     
  3690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3691   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3692   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3693   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3694   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3695   002208  0E00               	movlw	0
  3696   00220A  6E36               	movwf	___fldiv@a^0,c
  3697   00220C  0E00               	movlw	0
  3698   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  3699   002210  0E20               	movlw	32
  3700   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  3701   002214  0E41               	movlw	65
  3702   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  3703   002218  ECF1  F017         	call	___fldiv	;wreg free
  3704   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  3705   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3706   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3707   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3708   00222C                     
  3709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3710   00222C  0100               	movlb	0	; () banked
  3711   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  3712   002230  A0D8               	btfss	status,0,c
  3713   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3714   002234                     
  3715                           ; BSR set to: 0
  3716                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3717   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3718   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3719   002238                     l4466:
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3723   002238  5176               	movf	efgtoa@m& (0+255),w,b
  3724   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  3725   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3726   00223E  0A80               	xorlw	128
  3727   002240  6F67               	movwf	??_efgtoa& (0+255),b
  3728   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3729   002244  0A80               	xorlw	128
  3730   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  3731   002248  B0D8               	btfsc	status,0,c
  3732   00224A  EF29  F011         	goto	u4531
  3733   00224E  EF2B  F011         	goto	u4530
  3734   002252                     u4531:
  3735   002252  EF39  F011         	goto	l4470
  3736   002256                     u4530:
  3737   002256                     
  3738                           ; BSR set to: 0
  3739   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3740   002258  EF37  F011         	goto	u4541
  3741   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3742   00225E  E109               	bnz	u4540
  3743   002260  0E4B               	movlw	75
  3744   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  3745   002264  A0D8               	btfss	status,0,c
  3746   002266  EF37  F011         	goto	u4541
  3747   00226A  EF39  F011         	goto	u4540
  3748   00226E                     u4541:
  3749   00226E  EF37  F010         	goto	l4426
  3750   002272                     u4540:
  3751   002272                     l4470:
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3755   002272  0E00               	movlw	0
  3756   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3757   002276  0E4F               	movlw	79
  3758   002278  6F80               	movwf	efgtoa@i& (0+255),b
  3759   00227A                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3762   00227A  0E0C               	movlw	low _dbuf
  3763   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  3764   00227E  6ED9               	movwf	fsr2l,c
  3765   002280  0E01               	movlw	high _dbuf
  3766   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3767   002284  6EDA               	movwf	fsr2h,c
  3768   002286  0E00               	movlw	0
  3769   002288  6EDF               	movwf	indf2,c
  3770   00228A                     
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3773   00228A  0E0C               	movlw	low _dbuf
  3774   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  3775   00228E  0E01               	movlw	high _dbuf
  3776   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3777   002292  518B               	movf	efgtoa@n& (0+255),w,b
  3778   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  3779   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3780   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  3781   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  3782   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  3783   00229E  6E01               	movwf	memcpy@d1^0,c
  3784   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3785   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  3786   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  3787   0022A6  0E0C               	movlw	low _dbuf
  3788   0022A8  6E03               	movwf	memcpy@s1^0,c
  3789   0022AA  0E01               	movlw	high _dbuf
  3790   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  3791   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  3792   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  3793   0022B6  EC5E  F029         	call	_memcpy	;wreg free
  3794   0022BA                     
  3795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3796   0022BA  0100               	movlb	0	; () banked
  3797   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  3798   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  3799   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  3800   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  3801   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3802   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3803   0022C8                     
  3804                           ; BSR set to: 0
  3805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3806   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  3807   0022CA  A4D8               	btfss	status,2,c
  3808   0022CC  EF6A  F011         	goto	u4551
  3809   0022D0  EF6D  F011         	goto	u4550
  3810   0022D4                     u4551:
  3811   0022D4  0E01               	movlw	1
  3812   0022D6  EF6E  F011         	goto	u4560
  3813   0022DA                     u4550:
  3814   0022DA  0E00               	movlw	0
  3815   0022DC                     u4560:
  3816   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  3817   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  3818   0022E0                     
  3819                           ; BSR set to: 0
  3820                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3821   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  3822   0022E2  B4D8               	btfsc	status,2,c
  3823   0022E4  EF76  F011         	goto	u4571
  3824   0022E8  EF78  F011         	goto	u4570
  3825   0022EC                     u4571:
  3826   0022EC  EF83  F011         	goto	l4484
  3827   0022F0                     u4570:
  3828   0022F0                     
  3829                           ; BSR set to: 0
  3830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3831   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  3832   0022F2  A0D8               	btfss	status,0,c
  3833   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  3834   0022F6  0E0C               	movlw	low _dbuf
  3835   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  3836   0022FA  6ED9               	movwf	fsr2l,c
  3837   0022FC  0E01               	movlw	high _dbuf
  3838   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3839   002300  6EDA               	movwf	fsr2h,c
  3840   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  3841   002306                     l4484:
  3842                           
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3845   002306  5180               	movf	efgtoa@i& (0+255),w,b
  3846   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  3847   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3848   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3849   00230E                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3852   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  3853   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3854   002316  0E0C               	movlw	low _dbuf
  3855   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  3856   00231A  6E13               	movwf	pad@buf^0,c
  3857   00231C  0E01               	movlw	high _dbuf
  3858   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3859   002320  6E14               	movwf	(pad@buf+1)^0,c
  3860   002322  C07A  F015         	movff	efgtoa@w,pad@p
  3861   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3862   00232A  EC15  F026         	call	_pad	;wreg free
  3863   00232E                     l1279:
  3864   00232E  0012               	return		;funcret
  3865   002330                     __end_of_efgtoa:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _strcpy *****************
  3869 ;; Defined at:
  3870 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3873 ;;		 -> dbuf(80), 
  3874 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3875 ;;		 -> STR_6(4), STR_3(4), 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  d               2    6[COMRAM] PTR unsigned char 
  3878 ;;		 -> dbuf(80), 
  3879 ;;  s               2    4[COMRAM] PTR const unsigned char 
  3880 ;;		 -> STR_6(4), STR_3(4), 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  2    0[COMRAM] PTR unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;Total ram usage:        8 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 1
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_efgtoa
  3901 ;; This function uses a non-reentrant model
  3902 ;;
  3903                           
  3904                           	psect	text5
  3905   0054DE                     __ptext5:
  3906                           	callstack 0
  3907   0054DE                     _strcpy:
  3908                           	callstack 25
  3909   0054DE  C003  F005         	movff	strcpy@src,strcpy@s
  3910   0054E2  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  3911   0054E6  C001  F007         	movff	strcpy@dest,strcpy@d
  3912   0054EA  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  3913   0054EE                     l4150:
  3914   0054EE  C005  FFF6         	movff	strcpy@s,tblptrl
  3915   0054F2  C006  FFF7         	movff	strcpy@s+1,tblptrh
  3916   0054F6  4A05               	infsnz	strcpy@s^0,f,c
  3917   0054F8  2A06               	incf	(strcpy@s+1)^0,f,c
  3918   0054FA                     	if	0	;tblptru may be non-zero
  3919   0054FA                     	endif
  3920   0054FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3921   0054FA  0E00               	movlw	low (__mediumconst shr (0+16))
  3922   0054FC  6EF8               	movwf	tblptru,c
  3923   0054FE                     	endif
  3924   0054FE  C007  FFD9         	movff	strcpy@d,fsr2l
  3925   005502  C008  FFDA         	movff	strcpy@d+1,fsr2h
  3926   005506  4A07               	infsnz	strcpy@d^0,f,c
  3927   005508  2A08               	incf	(strcpy@d+1)^0,f,c
  3928   00550A  0008               	tblrd		*
  3929   00550C  CFF5 FFDF          	movff	tablat,indf2
  3930   005510  50DF               	movf	indf2,w,c
  3931   005512  A4D8               	btfss	status,2,c
  3932   005514  EF8E  F02A         	goto	u3991
  3933   005518  EF90  F02A         	goto	u3990
  3934   00551C                     u3991:
  3935   00551C  EF77  F02A         	goto	l4150
  3936   005520                     u3990:
  3937   005520  0012               	return		;funcret
  3938   005522                     __end_of_strcpy:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _memcpy *****************
  3942 ;; Defined at:
  3943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;  d1              2    0[COMRAM] PTR void 
  3946 ;;		 -> dbuf(80), 
  3947 ;;  s1              2    2[COMRAM] PTR const void 
  3948 ;;		 -> dbuf(80), 
  3949 ;;  n               2    4[COMRAM] unsigned int 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3952 ;;		 -> dbuf(80), 
  3953 ;;  d               2    6[COMRAM] PTR unsigned char 
  3954 ;;		 -> dbuf(80), 
  3955 ;;  tmp             1   10[COMRAM] unsigned char 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  2    0[COMRAM] PTR void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:       11 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_efgtoa
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text6
  3980   0052BC                     __ptext6:
  3981                           	callstack 0
  3982   0052BC                     _memcpy:
  3983                           	callstack 25
  3984   0052BC  C003  F009         	movff	memcpy@s1,memcpy@s
  3985   0052C0  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  3986   0052C4  C001  F007         	movff	memcpy@d1,memcpy@d
  3987   0052C8  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  3988   0052CC  EF78  F029         	goto	l4194
  3989   0052D0                     l4186:
  3990   0052D0  C009  FFD9         	movff	memcpy@s,fsr2l
  3991   0052D4  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  3992   0052D8  50DF               	movf	indf2,w,c
  3993   0052DA  6E0B               	movwf	memcpy@tmp^0,c
  3994   0052DC  4A09               	infsnz	memcpy@s^0,f,c
  3995   0052DE  2A0A               	incf	(memcpy@s+1)^0,f,c
  3996   0052E0  C007  FFD9         	movff	memcpy@d,fsr2l
  3997   0052E4  C008  FFDA         	movff	memcpy@d+1,fsr2h
  3998   0052E8  C00B  FFDF         	movff	memcpy@tmp,indf2
  3999   0052EC  4A07               	infsnz	memcpy@d^0,f,c
  4000   0052EE  2A08               	incf	(memcpy@d+1)^0,f,c
  4001   0052F0                     l4194:
  4002   0052F0  0605               	decf	memcpy@n^0,f,c
  4003   0052F2  A0D8               	btfss	status,0,c
  4004   0052F4  0606               	decf	(memcpy@n+1)^0,f,c
  4005   0052F6  2805               	incf	memcpy@n^0,w,c
  4006   0052F8  E106               	bnz	u4111
  4007   0052FA  2806               	incf	(memcpy@n+1)^0,w,c
  4008   0052FC  A4D8               	btfss	status,2,c
  4009   0052FE  EF83  F029         	goto	u4111
  4010   005302  EF85  F029         	goto	u4110
  4011   005306                     u4111:
  4012   005306  EF68  F029         	goto	l4186
  4013   00530A                     u4110:
  4014   00530A  0012               	return		;funcret
  4015   00530C                     __end_of_memcpy:
  4016                           	callstack 0
  4017                           
  4018 ;; *************** function _labs *****************
  4019 ;; Defined at:
  4020 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;  a               4    0[COMRAM] long 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  4    0[COMRAM] long 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4037 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;Total ram usage:        8 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 1
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_efgtoa
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text7
  4049   004D8E                     __ptext7:
  4050                           	callstack 0
  4051   004D8E                     _labs:
  4052                           	callstack 25
  4053   004D8E  BE04               	btfsc	(labs@a+3)^0,7,c
  4054   004D90  EFD6  F026         	goto	u4000
  4055   004D94  5004               	movf	(labs@a+3)^0,w,c
  4056   004D96  1003               	iorwf	(labs@a+2)^0,w,c
  4057   004D98  1002               	iorwf	(labs@a+1)^0,w,c
  4058   004D9A  E106               	bnz	u4001
  4059   004D9C  0401               	decf	labs@a^0,w,c
  4060   004D9E  B0D8               	btfsc	status,0,c
  4061   004DA0  EFD4  F026         	goto	u4001
  4062   004DA4  EFD6  F026         	goto	u4000
  4063   004DA8                     u4001:
  4064   004DA8  EFF1  F026         	goto	l1384
  4065   004DAC                     u4000:
  4066   004DAC  C001  F005         	movff	labs@a,??_labs
  4067   004DB0  C002  F006         	movff	labs@a+1,??_labs+1
  4068   004DB4  C003  F007         	movff	labs@a+2,??_labs+2
  4069   004DB8  C004  F008         	movff	labs@a+3,??_labs+3
  4070   004DBC  1E05               	comf	??_labs^0,f,c
  4071   004DBE  1E06               	comf	(??_labs+1)^0,f,c
  4072   004DC0  1E07               	comf	(??_labs+2)^0,f,c
  4073   004DC2  1E08               	comf	(??_labs+3)^0,f,c
  4074   004DC4  2A05               	incf	??_labs^0,f,c
  4075   004DC6  0E00               	movlw	0
  4076   004DC8  2206               	addwfc	(??_labs+1)^0,f,c
  4077   004DCA  2207               	addwfc	(??_labs+2)^0,f,c
  4078   004DCC  2208               	addwfc	(??_labs+3)^0,f,c
  4079   004DCE  C005  F001         	movff	??_labs,?_labs
  4080   004DD2  C006  F002         	movff	??_labs+1,?_labs+1
  4081   004DD6  C007  F003         	movff	??_labs+2,?_labs+2
  4082   004DDA  C008  F004         	movff	??_labs+3,?_labs+3
  4083   004DDE  EFF9  F026         	goto	l1387
  4084   004DE2                     l1384:
  4085   004DE2  C001  F001         	movff	labs@a,?_labs
  4086   004DE6  C002  F002         	movff	labs@a+1,?_labs+1
  4087   004DEA  C003  F003         	movff	labs@a+2,?_labs+2
  4088   004DEE  C004  F004         	movff	labs@a+3,?_labs+3
  4089   004DF2                     l1387:
  4090   004DF2  0012               	return		;funcret
  4091   004DF4                     __end_of_labs:
  4092                           	callstack 0
  4093                           
  4094 ;; *************** function _floorf *****************
  4095 ;; Defined at:
  4096 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4097 ;; Parameters:    Size  Location     Type
  4098 ;;  x               4   74[COMRAM] float 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  u               4   90[COMRAM] struct .
  4101 ;;  m               4   84[COMRAM] unsigned long 
  4102 ;;  e               2   88[COMRAM] int 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  4   74[COMRAM] float 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2, status,0
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4112 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4113 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4114 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;Total ram usage:       20 bytes
  4117 ;; Hardware stack levels used: 1
  4118 ;; Hardware stack levels required when called: 1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_efgtoa
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text8
  4127   003C2E                     __ptext8:
  4128                           	callstack 0
  4129   003C2E                     _floorf:
  4130                           	callstack 25
  4131   003C2E  C0E7  F05B         	movff	floorf@F526,floorf@u
  4132   003C32  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  4133   003C36  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  4134   003C3A  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  4135   003C3E  C04B  F05B         	movff	floorf@x,floorf@u
  4136   003C42  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4137   003C46  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4138   003C4A  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4139   003C4E  0E81               	movlw	129
  4140   003C50  6E4F               	movwf	??_floorf^0,c
  4141   003C52  0EFF               	movlw	255
  4142   003C54  6E50               	movwf	(??_floorf+1)^0,c
  4143   003C56  C05B  F051         	movff	floorf@u,??_floorf+2
  4144   003C5A  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4145   003C5E  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4146   003C62  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4147   003C66  0E18               	movlw	24
  4148   003C68  EF3B  F01E         	goto	u4010
  4149   003C6C                     u4015:
  4150   003C6C  90D8               	bcf	status,0,c
  4151   003C6E  3254               	rrcf	(??_floorf+5)^0,f,c
  4152   003C70  3253               	rrcf	(??_floorf+4)^0,f,c
  4153   003C72  3252               	rrcf	(??_floorf+3)^0,f,c
  4154   003C74  3251               	rrcf	(??_floorf+2)^0,f,c
  4155   003C76                     u4010:
  4156   003C76  2EE8               	decfsz	wreg,f,c
  4157   003C78  EF36  F01E         	goto	u4015
  4158   003C7C  5051               	movf	(??_floorf+2)^0,w,c
  4159   003C7E  244F               	addwf	??_floorf^0,w,c
  4160   003C80  6E59               	movwf	floorf@e^0,c
  4161   003C82  0E00               	movlw	0
  4162   003C84  2050               	addwfc	(??_floorf+1)^0,w,c
  4163   003C86  6E5A               	movwf	(floorf@e+1)^0,c
  4164   003C88  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4165   003C8A  EF50  F01E         	goto	u4021
  4166   003C8E  505A               	movf	(floorf@e+1)^0,w,c
  4167   003C90  E109               	bnz	u4020
  4168   003C92  0E17               	movlw	23
  4169   003C94  5C59               	subwf	floorf@e^0,w,c
  4170   003C96  A0D8               	btfss	status,0,c
  4171   003C98  EF50  F01E         	goto	u4021
  4172   003C9C  EF52  F01E         	goto	u4020
  4173   003CA0                     u4021:
  4174   003CA0  EF5C  F01E         	goto	l4162
  4175   003CA4                     u4020:
  4176   003CA4                     l4160:
  4177   003CA4  C04B  F04B         	movff	floorf@x,?_floorf
  4178   003CA8  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4179   003CAC  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4180   003CB0  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4181   003CB4  EF1F  F01F         	goto	l1373
  4182   003CB8                     l4162:
  4183   003CB8  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4184   003CBA  EF61  F01E         	goto	u4031
  4185   003CBE  EF63  F01E         	goto	u4030
  4186   003CC2                     u4031:
  4187   003CC2  EFD3  F01E         	goto	l4172
  4188   003CC6                     u4030:
  4189   003CC6  C059  F04F         	movff	floorf@e,??_floorf
  4190   003CCA  0EFF               	movlw	255
  4191   003CCC  6E50               	movwf	(??_floorf+1)^0,c
  4192   003CCE  0EFF               	movlw	255
  4193   003CD0  6E51               	movwf	(??_floorf+2)^0,c
  4194   003CD2  0E7F               	movlw	127
  4195   003CD4  6E52               	movwf	(??_floorf+3)^0,c
  4196   003CD6  0E00               	movlw	0
  4197   003CD8  6E53               	movwf	(??_floorf+4)^0,c
  4198   003CDA                     u4045:
  4199   003CDA  664F               	tstfsz	??_floorf^0,c
  4200   003CDC  EF72  F01E         	goto	u4046
  4201   003CE0  EF7A  F01E         	goto	u4047
  4202   003CE4                     u4046:
  4203   003CE4  3453               	rlcf	(??_floorf+4)^0,w,c
  4204   003CE6  3253               	rrcf	(??_floorf+4)^0,f,c
  4205   003CE8  3252               	rrcf	(??_floorf+3)^0,f,c
  4206   003CEA  3251               	rrcf	(??_floorf+2)^0,f,c
  4207   003CEC  3250               	rrcf	(??_floorf+1)^0,f,c
  4208   003CEE  2E4F               	decfsz	??_floorf^0,f,c
  4209   003CF0  EF6D  F01E         	goto	u4045
  4210   003CF4                     u4047:
  4211   003CF4  C050  F055         	movff	??_floorf+1,floorf@m
  4212   003CF8  C051  F056         	movff	??_floorf+2,floorf@m+1
  4213   003CFC  C052  F057         	movff	??_floorf+3,floorf@m+2
  4214   003D00  C053  F058         	movff	??_floorf+4,floorf@m+3
  4215   003D04  5055               	movf	floorf@m^0,w,c
  4216   003D06  145B               	andwf	floorf@u^0,w,c
  4217   003D08  6E4F               	movwf	??_floorf^0,c
  4218   003D0A  5056               	movf	(floorf@m+1)^0,w,c
  4219   003D0C  145C               	andwf	(floorf@u+1)^0,w,c
  4220   003D0E  6E50               	movwf	(??_floorf+1)^0,c
  4221   003D10  5057               	movf	(floorf@m+2)^0,w,c
  4222   003D12  145D               	andwf	(floorf@u+2)^0,w,c
  4223   003D14  6E51               	movwf	(??_floorf+2)^0,c
  4224   003D16  5058               	movf	(floorf@m+3)^0,w,c
  4225   003D18  145E               	andwf	(floorf@u+3)^0,w,c
  4226   003D1A  6E52               	movwf	(??_floorf+3)^0,c
  4227   003D1C  504F               	movf	??_floorf^0,w,c
  4228   003D1E  1050               	iorwf	(??_floorf+1)^0,w,c
  4229   003D20  1051               	iorwf	(??_floorf+2)^0,w,c
  4230   003D22  1052               	iorwf	(??_floorf+3)^0,w,c
  4231   003D24  A4D8               	btfss	status,2,c
  4232   003D26  EF97  F01E         	goto	u4051
  4233   003D2A  EF99  F01E         	goto	u4050
  4234   003D2E                     u4051:
  4235   003D2E  EF9B  F01E         	goto	l4168
  4236   003D32                     u4050:
  4237   003D32  EF52  F01E         	goto	l4160
  4238   003D36                     l4168:
  4239   003D36  C05B  F04F         	movff	floorf@u,??_floorf
  4240   003D3A  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4241   003D3E  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4242   003D42  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4243   003D46  0E20               	movlw	32
  4244   003D48  EFAB  F01E         	goto	u4060
  4245   003D4C                     u4065:
  4246   003D4C  90D8               	bcf	status,0,c
  4247   003D4E  3252               	rrcf	(??_floorf+3)^0,f,c
  4248   003D50  3251               	rrcf	(??_floorf+2)^0,f,c
  4249   003D52  3250               	rrcf	(??_floorf+1)^0,f,c
  4250   003D54  324F               	rrcf	??_floorf^0,f,c
  4251   003D56                     u4060:
  4252   003D56  2EE8               	decfsz	wreg,f,c
  4253   003D58  EFA6  F01E         	goto	u4065
  4254   003D5C  504F               	movf	??_floorf^0,w,c
  4255   003D5E  1050               	iorwf	(??_floorf+1)^0,w,c
  4256   003D60  1051               	iorwf	(??_floorf+2)^0,w,c
  4257   003D62  1052               	iorwf	(??_floorf+3)^0,w,c
  4258   003D64  B4D8               	btfsc	status,2,c
  4259   003D66  EFB7  F01E         	goto	u4071
  4260   003D6A  EFB9  F01E         	goto	u4070
  4261   003D6E                     u4071:
  4262   003D6E  EFC1  F01E         	goto	l1376
  4263   003D72                     u4070:
  4264   003D72  5055               	movf	floorf@m^0,w,c
  4265   003D74  265B               	addwf	floorf@u^0,f,c
  4266   003D76  5056               	movf	(floorf@m+1)^0,w,c
  4267   003D78  225C               	addwfc	(floorf@u+1)^0,f,c
  4268   003D7A  5057               	movf	(floorf@m+2)^0,w,c
  4269   003D7C  225D               	addwfc	(floorf@u+2)^0,f,c
  4270   003D7E  5058               	movf	(floorf@m+3)^0,w,c
  4271   003D80  225E               	addwfc	(floorf@u+3)^0,f,c
  4272   003D82                     l1376:
  4273   003D82  1C55               	comf	floorf@m^0,w,c
  4274   003D84  6E4F               	movwf	??_floorf^0,c
  4275   003D86  1C56               	comf	(floorf@m+1)^0,w,c
  4276   003D88  6E50               	movwf	(??_floorf+1)^0,c
  4277   003D8A  1C57               	comf	(floorf@m+2)^0,w,c
  4278   003D8C  6E51               	movwf	(??_floorf+2)^0,c
  4279   003D8E  1C58               	comf	(floorf@m+3)^0,w,c
  4280   003D90  6E52               	movwf	(??_floorf+3)^0,c
  4281   003D92  504F               	movf	??_floorf^0,w,c
  4282   003D94  165B               	andwf	floorf@u^0,f,c
  4283   003D96  5050               	movf	(??_floorf+1)^0,w,c
  4284   003D98  165C               	andwf	(floorf@u+1)^0,f,c
  4285   003D9A  5051               	movf	(??_floorf+2)^0,w,c
  4286   003D9C  165D               	andwf	(floorf@u+2)^0,f,c
  4287   003D9E  5052               	movf	(??_floorf+3)^0,w,c
  4288   003DA0  165E               	andwf	(floorf@u+3)^0,f,c
  4289   003DA2  EF17  F01F         	goto	l4180
  4290   003DA6                     l4172:
  4291   003DA6  C05B  F04F         	movff	floorf@u,??_floorf
  4292   003DAA  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4293   003DAE  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4294   003DB2  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4295   003DB6  0E20               	movlw	32
  4296   003DB8  EFE3  F01E         	goto	u4080
  4297   003DBC                     u4085:
  4298   003DBC  90D8               	bcf	status,0,c
  4299   003DBE  3252               	rrcf	(??_floorf+3)^0,f,c
  4300   003DC0  3251               	rrcf	(??_floorf+2)^0,f,c
  4301   003DC2  3250               	rrcf	(??_floorf+1)^0,f,c
  4302   003DC4  324F               	rrcf	??_floorf^0,f,c
  4303   003DC6                     u4080:
  4304   003DC6  2EE8               	decfsz	wreg,f,c
  4305   003DC8  EFDE  F01E         	goto	u4085
  4306   003DCC  504F               	movf	??_floorf^0,w,c
  4307   003DCE  1050               	iorwf	(??_floorf+1)^0,w,c
  4308   003DD0  1051               	iorwf	(??_floorf+2)^0,w,c
  4309   003DD2  1052               	iorwf	(??_floorf+3)^0,w,c
  4310   003DD4  A4D8               	btfss	status,2,c
  4311   003DD6  EFEF  F01E         	goto	u4091
  4312   003DDA  EFF1  F01E         	goto	u4090
  4313   003DDE                     u4091:
  4314   003DDE  EFFB  F01E         	goto	l4176
  4315   003DE2                     u4090:
  4316   003DE2  0E00               	movlw	0
  4317   003DE4  6E5B               	movwf	floorf@u^0,c
  4318   003DE6  0E00               	movlw	0
  4319   003DE8  6E5C               	movwf	(floorf@u+1)^0,c
  4320   003DEA  0E00               	movlw	0
  4321   003DEC  6E5D               	movwf	(floorf@u+2)^0,c
  4322   003DEE  0E00               	movlw	0
  4323   003DF0  6E5E               	movwf	(floorf@u+3)^0,c
  4324   003DF2  EF17  F01F         	goto	l4180
  4325   003DF6                     l4176:
  4326   003DF6  90D8               	bcf	status,0,c
  4327   003DF8  345B               	rlcf	floorf@u^0,w,c
  4328   003DFA  6E4F               	movwf	??_floorf^0,c
  4329   003DFC  345C               	rlcf	(floorf@u+1)^0,w,c
  4330   003DFE  6E50               	movwf	(??_floorf+1)^0,c
  4331   003E00  345D               	rlcf	(floorf@u+2)^0,w,c
  4332   003E02  6E51               	movwf	(??_floorf+2)^0,c
  4333   003E04  345E               	rlcf	(floorf@u+3)^0,w,c
  4334   003E06  6E52               	movwf	(??_floorf+3)^0,c
  4335   003E08  504F               	movf	??_floorf^0,w,c
  4336   003E0A  1050               	iorwf	(??_floorf+1)^0,w,c
  4337   003E0C  1051               	iorwf	(??_floorf+2)^0,w,c
  4338   003E0E  1052               	iorwf	(??_floorf+3)^0,w,c
  4339   003E10  B4D8               	btfsc	status,2,c
  4340   003E12  EF0D  F01F         	goto	u4101
  4341   003E16  EF0F  F01F         	goto	u4100
  4342   003E1A                     u4101:
  4343   003E1A  EF17  F01F         	goto	l4180
  4344   003E1E                     u4100:
  4345   003E1E  0E00               	movlw	0
  4346   003E20  6E5B               	movwf	floorf@u^0,c
  4347   003E22  0E00               	movlw	0
  4348   003E24  6E5C               	movwf	(floorf@u+1)^0,c
  4349   003E26  0E80               	movlw	128
  4350   003E28  6E5D               	movwf	(floorf@u+2)^0,c
  4351   003E2A  0EBF               	movlw	191
  4352   003E2C  6E5E               	movwf	(floorf@u+3)^0,c
  4353   003E2E                     l4180:
  4354   003E2E  C05B  F04B         	movff	floorf@u,?_floorf
  4355   003E32  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4356   003E36  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4357   003E3A  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4358   003E3E                     l1373:
  4359   003E3E  0012               	return		;funcret
  4360   003E40                     __end_of_floorf:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function ___fpclassifyf *****************
  4364 ;; Defined at:
  4365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;  x               4    0[COMRAM] float 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  u               4   10[COMRAM] struct .
  4370 ;;  e               2    8[COMRAM] int 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  2    0[COMRAM] int 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4380 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4381 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4382 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4383 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4384 ;;Total ram usage:       14 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 1
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_efgtoa
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text9
  4395   004656                     __ptext9:
  4396                           	callstack 0
  4397   004656                     ___fpclassifyf:
  4398                           	callstack 25
  4399   004656  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4400   00465A  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4401   00465E  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4402   004662  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4403   004666  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4404   00466A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4405   00466E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4406   004672  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4407   004676  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4408   00467A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4409   00467E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4410   004682  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4411   004686  0E18               	movlw	24
  4412   004688  EF4B  F023         	goto	u3920
  4413   00468C                     u3925:
  4414   00468C  90D8               	bcf	status,0,c
  4415   00468E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4416   004690  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4417   004692  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4418   004694  3205               	rrcf	??___fpclassifyf^0,f,c
  4419   004696                     u3920:
  4420   004696  2EE8               	decfsz	wreg,f,c
  4421   004698  EF46  F023         	goto	u3925
  4422   00469C  5005               	movf	??___fpclassifyf^0,w,c
  4423   00469E  6E09               	movwf	___fpclassifyf@e^0,c
  4424   0046A0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4425   0046A2  5009               	movf	___fpclassifyf@e^0,w,c
  4426   0046A4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4427   0046A6  A4D8               	btfss	status,2,c
  4428   0046A8  EF58  F023         	goto	u3931
  4429   0046AC  EF5A  F023         	goto	u3930
  4430   0046B0                     u3931:
  4431   0046B0  EF7A  F023         	goto	l4138
  4432   0046B4                     u3930:
  4433   0046B4  90D8               	bcf	status,0,c
  4434   0046B6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4435   0046B8  6E05               	movwf	??___fpclassifyf^0,c
  4436   0046BA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4437   0046BC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4438   0046BE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4439   0046C0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4440   0046C2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4441   0046C4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4442   0046C6  5005               	movf	??___fpclassifyf^0,w,c
  4443   0046C8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4444   0046CA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4445   0046CC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4446   0046CE  A4D8               	btfss	status,2,c
  4447   0046D0  EF6C  F023         	goto	u3941
  4448   0046D4  EF6E  F023         	goto	u3940
  4449   0046D8                     u3941:
  4450   0046D8  EF74  F023         	goto	l4134
  4451   0046DC                     u3940:
  4452   0046DC  0E00               	movlw	0
  4453   0046DE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4454   0046E0  0E02               	movlw	2
  4455   0046E2  6E01               	movwf	?___fpclassifyf^0,c
  4456   0046E4  EFA9  F023         	goto	l1359
  4457   0046E8                     l4134:
  4458   0046E8  0E00               	movlw	0
  4459   0046EA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4460   0046EC  0E03               	movlw	3
  4461   0046EE  6E01               	movwf	?___fpclassifyf^0,c
  4462   0046F0  EFA9  F023         	goto	l1359
  4463   0046F4                     l4138:
  4464   0046F4  2809               	incf	___fpclassifyf@e^0,w,c
  4465   0046F6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4466   0046F8  A4D8               	btfss	status,2,c
  4467   0046FA  EF81  F023         	goto	u3951
  4468   0046FE  EF83  F023         	goto	u3950
  4469   004702                     u3951:
  4470   004702  EFA5  F023         	goto	l4144
  4471   004706                     u3950:
  4472   004706  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4473   00470A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4474   00470E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4475   004712  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4476   004716  0E09               	movlw	9
  4477   004718                     u3965:
  4478   004718  90D8               	bcf	status,0,c
  4479   00471A  3605               	rlcf	??___fpclassifyf^0,f,c
  4480   00471C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4481   00471E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4482   004720  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4483   004722  2EE8               	decfsz	wreg,f,c
  4484   004724  EF8C  F023         	goto	u3965
  4485   004728  5005               	movf	??___fpclassifyf^0,w,c
  4486   00472A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4487   00472C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4488   00472E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4489   004730  B4D8               	btfsc	status,2,c
  4490   004732  EF9D  F023         	goto	u3971
  4491   004736  EFA0  F023         	goto	u3970
  4492   00473A                     u3971:
  4493   00473A  0E01               	movlw	1
  4494   00473C  EFA1  F023         	goto	u3980
  4495   004740                     u3970:
  4496   004740  0E00               	movlw	0
  4497   004742                     u3980:
  4498   004742  6E01               	movwf	?___fpclassifyf^0,c
  4499   004744  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4500   004746  EFA9  F023         	goto	l1359
  4501   00474A                     l4144:
  4502   00474A  0E00               	movlw	0
  4503   00474C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4504   00474E  0E04               	movlw	4
  4505   004750  6E01               	movwf	?___fpclassifyf^0,c
  4506   004752                     l1359:
  4507   004752  0012               	return		;funcret
  4508   004754                     __end_of___fpclassifyf:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function ___fltol *****************
  4512 ;; Defined at:
  4513 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  f1              4    0[COMRAM] int 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  exp1            1    9[COMRAM] unsigned char 
  4518 ;;  sign1           1    8[COMRAM] unsigned char 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  4    0[COMRAM] long 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4532 ;;Total ram usage:       10 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; Hardware stack levels required when called: 1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_efgtoa
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text10
  4543   00444C                     __ptext10:
  4544                           	callstack 0
  4545   00444C                     ___fltol:
  4546                           	callstack 25
  4547   00444C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4548   00444E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4549   004450  6E0A               	movwf	___fltol@exp1^0,c
  4550   004452  500A               	movf	___fltol@exp1^0,w,c
  4551   004454  A4D8               	btfss	status,2,c
  4552   004456  EF2F  F022         	goto	u3791
  4553   00445A  EF31  F022         	goto	u3790
  4554   00445E                     u3791:
  4555   00445E  EF3B  F022         	goto	l4048
  4556   004462                     u3790:
  4557   004462                     l4044:
  4558   004462  0E00               	movlw	0
  4559   004464  6E01               	movwf	?___fltol^0,c
  4560   004466  0E00               	movlw	0
  4561   004468  6E02               	movwf	(?___fltol+1)^0,c
  4562   00446A  0E00               	movlw	0
  4563   00446C  6E03               	movwf	(?___fltol+2)^0,c
  4564   00446E  0E00               	movlw	0
  4565   004470  6E04               	movwf	(?___fltol+3)^0,c
  4566   004472  EFA8  F022         	goto	l832
  4567   004476                     l4048:
  4568   004476  C001  F005         	movff	___fltol@f1,??___fltol
  4569   00447A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4570   00447E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4571   004482  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4572   004486  0E20               	movlw	32
  4573   004488  EF4B  F022         	goto	u3800
  4574   00448C                     u3805:
  4575   00448C  90D8               	bcf	status,0,c
  4576   00448E  3208               	rrcf	(??___fltol+3)^0,f,c
  4577   004490  3207               	rrcf	(??___fltol+2)^0,f,c
  4578   004492  3206               	rrcf	(??___fltol+1)^0,f,c
  4579   004494  3205               	rrcf	??___fltol^0,f,c
  4580   004496                     u3800:
  4581   004496  2EE8               	decfsz	wreg,f,c
  4582   004498  EF46  F022         	goto	u3805
  4583   00449C  5005               	movf	??___fltol^0,w,c
  4584   00449E  6E09               	movwf	___fltol@sign1^0,c
  4585   0044A0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4586   0044A2  0EFF               	movlw	255
  4587   0044A4  1601               	andwf	___fltol@f1^0,f,c
  4588   0044A6  0EFF               	movlw	255
  4589   0044A8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4590   0044AA  0EFF               	movlw	255
  4591   0044AC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4592   0044AE  0E00               	movlw	0
  4593   0044B0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4594   0044B2  0E96               	movlw	150
  4595   0044B4  5E0A               	subwf	___fltol@exp1^0,f,c
  4596   0044B6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4597   0044B8  EF62  F022         	goto	u3810
  4598   0044BC  EF60  F022         	goto	u3811
  4599   0044C0                     u3811:
  4600   0044C0  EF78  F022         	goto	l4068
  4601   0044C4                     u3810:
  4602   0044C4  500A               	movf	___fltol@exp1^0,w,c
  4603   0044C6  0A80               	xorlw	128
  4604   0044C8  0F97               	addlw	151
  4605   0044CA  B0D8               	btfsc	status,0,c
  4606   0044CC  EF6A  F022         	goto	u3821
  4607   0044D0  EF6C  F022         	goto	u3820
  4608   0044D4                     u3821:
  4609   0044D4  EF6E  F022         	goto	l4064
  4610   0044D8                     u3820:
  4611   0044D8  EF31  F022         	goto	l4044
  4612   0044DC                     l4064:
  4613   0044DC  90D8               	bcf	status,0,c
  4614   0044DE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4615   0044E0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4616   0044E2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4617   0044E4  3201               	rrcf	___fltol@f1^0,f,c
  4618   0044E6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4619   0044E8  EF6E  F022         	goto	l4064
  4620   0044EC  EF90  F022         	goto	l4078
  4621   0044F0                     l4068:
  4622   0044F0  0E1F               	movlw	31
  4623   0044F2  640A               	cpfsgt	___fltol@exp1^0,c
  4624   0044F4  EF7E  F022         	goto	u3831
  4625   0044F8  EF80  F022         	goto	u3830
  4626   0044FC                     u3831:
  4627   0044FC  EF88  F022         	goto	l4076
  4628   004500                     u3830:
  4629   004500  EF31  F022         	goto	l4044
  4630   004504                     l4074:
  4631   004504  90D8               	bcf	status,0,c
  4632   004506  3601               	rlcf	___fltol@f1^0,f,c
  4633   004508  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4634   00450A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4635   00450C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4636   00450E  060A               	decf	___fltol@exp1^0,f,c
  4637   004510                     l4076:
  4638   004510  500A               	movf	___fltol@exp1^0,w,c
  4639   004512  A4D8               	btfss	status,2,c
  4640   004514  EF8E  F022         	goto	u3841
  4641   004518  EF90  F022         	goto	u3840
  4642   00451C                     u3841:
  4643   00451C  EF82  F022         	goto	l4074
  4644   004520                     u3840:
  4645   004520                     l4078:
  4646   004520  5009               	movf	___fltol@sign1^0,w,c
  4647   004522  B4D8               	btfsc	status,2,c
  4648   004524  EF96  F022         	goto	u3851
  4649   004528  EF98  F022         	goto	u3850
  4650   00452C                     u3851:
  4651   00452C  EFA0  F022         	goto	l4082
  4652   004530                     u3850:
  4653   004530  1E04               	comf	(___fltol@f1+3)^0,f,c
  4654   004532  1E03               	comf	(___fltol@f1+2)^0,f,c
  4655   004534  1E02               	comf	(___fltol@f1+1)^0,f,c
  4656   004536  6C01               	negf	___fltol@f1^0,c
  4657   004538  0E00               	movlw	0
  4658   00453A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4659   00453C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4660   00453E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4661   004540                     l4082:
  4662   004540  C001  F001         	movff	___fltol@f1,?___fltol
  4663   004544  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4664   004548  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4665   00454C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4666   004550                     l832:
  4667   004550  0012               	return		;funcret
  4668   004552                     __end_of___fltol:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function ___flneg *****************
  4672 ;; Defined at:
  4673 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  f1              4    0[COMRAM] long 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  4    0[COMRAM] long 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;Total ram usage:        4 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 1
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_efgtoa
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text11
  4702   005664                     __ptext11:
  4703                           	callstack 0
  4704   005664                     ___flneg:
  4705                           	callstack 25
  4706   005664  5001               	movf	___flneg@f1^0,w,c
  4707   005666  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4708   005668  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4709   00566A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4710   00566C  B4D8               	btfsc	status,2,c
  4711   00566E  EF3B  F02B         	goto	u3781
  4712   005672  EF3D  F02B         	goto	u3780
  4713   005676                     u3781:
  4714   005676  EF45  F02B         	goto	l4038
  4715   00567A                     u3780:
  4716   00567A  0E00               	movlw	0
  4717   00567C  1A01               	xorwf	___flneg@f1^0,f,c
  4718   00567E  0E00               	movlw	0
  4719   005680  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4720   005682  0E00               	movlw	0
  4721   005684  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4722   005686  0E80               	movlw	128
  4723   005688  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4724   00568A                     l4038:
  4725   00568A  C001  F001         	movff	___flneg@f1,?___flneg
  4726   00568E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  4727   005692  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  4728   005696  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  4729   00569A  0012               	return		;funcret
  4730   00569C                     __end_of___flneg:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _dtoa *****************
  4734 ;; Defined at:
  4735 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4738 ;;		 -> sprintf@f(11), 
  4739 ;;  d               8   29[COMRAM] long long 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  n               8   51[COMRAM] long long 
  4742 ;;  i               2   59[COMRAM] int 
  4743 ;;  w               2   49[COMRAM] int 
  4744 ;;  p               2   47[COMRAM] int 
  4745 ;;  s               1   61[COMRAM] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4755 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4757 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4758 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4759 ;;Total ram usage:       35 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 5
  4762 ;; This function calls:
  4763 ;;		___aodiv
  4764 ;;		___aomod
  4765 ;;		_abs
  4766 ;;		_pad
  4767 ;; This function is called by:
  4768 ;;		_vfpfcnvrt
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           	psect	text12
  4773   0039B0                     __ptext12:
  4774                           	callstack 0
  4775   0039B0                     _dtoa:
  4776                           	callstack 22
  4777   0039B0                     
  4778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  4779   0039B0  C01E  F034         	movff	dtoa@d,dtoa@n
  4780   0039B4  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  4781   0039B8  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  4782   0039BC  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  4783   0039C0  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  4784   0039C4  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  4785   0039C8  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  4786   0039CC  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  4787   0039D0                     
  4788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  4789   0039D0  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  4790   0039D2  EFED  F01C         	goto	u4161
  4791   0039D6  EFF0  F01C         	goto	u4160
  4792   0039DA                     u4161:
  4793   0039DA  0E01               	movlw	1
  4794   0039DC  EFF1  F01C         	goto	u4170
  4795   0039E0                     u4160:
  4796   0039E0  0E00               	movlw	0
  4797   0039E2                     u4170:
  4798   0039E2  6E3E               	movwf	dtoa@s^0,c
  4799   0039E4                     
  4800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  4801   0039E4  503E               	movf	dtoa@s^0,w,c
  4802   0039E6  B4D8               	btfsc	status,2,c
  4803   0039E8  EFF8  F01C         	goto	u4181
  4804   0039EC  EFFA  F01C         	goto	u4180
  4805   0039F0                     u4181:
  4806   0039F0  EF0A  F01D         	goto	l4224
  4807   0039F4                     u4180:
  4808   0039F4                     
  4809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  4810   0039F4  1E3B               	comf	(dtoa@n+7)^0,f,c
  4811   0039F6  1E3A               	comf	(dtoa@n+6)^0,f,c
  4812   0039F8  1E39               	comf	(dtoa@n+5)^0,f,c
  4813   0039FA  1E38               	comf	(dtoa@n+4)^0,f,c
  4814   0039FC  1E37               	comf	(dtoa@n+3)^0,f,c
  4815   0039FE  1E36               	comf	(dtoa@n+2)^0,f,c
  4816   003A00  1E35               	comf	(dtoa@n+1)^0,f,c
  4817   003A02  6C34               	negf	dtoa@n^0,c
  4818   003A04  0E00               	movlw	0
  4819   003A06  2235               	addwfc	(dtoa@n+1)^0,f,c
  4820   003A08  2236               	addwfc	(dtoa@n+2)^0,f,c
  4821   003A0A  2237               	addwfc	(dtoa@n+3)^0,f,c
  4822   003A0C  2238               	addwfc	(dtoa@n+4)^0,f,c
  4823   003A0E  2239               	addwfc	(dtoa@n+5)^0,f,c
  4824   003A10  223A               	addwfc	(dtoa@n+6)^0,f,c
  4825   003A12  223B               	addwfc	(dtoa@n+7)^0,f,c
  4826   003A14                     l4224:
  4827                           
  4828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  4829   003A14  0100               	movlb	0	; () banked
  4830   003A16  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  4831   003A18  EF18  F01D         	goto	u4190
  4832   003A1C  51F2               	movf	(_prec+1)& (0+255),w,b
  4833   003A1E  E106               	bnz	u4191
  4834   003A20  05F1               	decf	_prec& (0+255),w,b
  4835   003A22  B0D8               	btfsc	status,0,c
  4836   003A24  EF16  F01D         	goto	u4191
  4837   003A28  EF18  F01D         	goto	u4190
  4838   003A2C                     u4191:
  4839   003A2C  EF1E  F01D         	goto	l1254
  4840   003A30                     u4190:
  4841   003A30                     
  4842                           ; BSR set to: 0
  4843   003A30  0E00               	movlw	0
  4844   003A32  6E31               	movwf	(dtoa@p+1)^0,c
  4845   003A34  0E01               	movlw	1
  4846   003A36  6E30               	movwf	dtoa@p^0,c
  4847   003A38  EF22  F01D         	goto	l1256
  4848   003A3C                     l1254:
  4849                           
  4850                           ; BSR set to: 0
  4851   003A3C  C0F1  F030         	movff	_prec,dtoa@p
  4852   003A40  C0F2  F031         	movff	_prec+1,dtoa@p+1
  4853   003A44                     l1256:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  4857   003A44  C0EF  F032         	movff	_width,dtoa@w
  4858   003A48  C0F0  F033         	movff	_width+1,dtoa@w+1
  4859   003A4C                     
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  4862   003A4C  503E               	movf	dtoa@s^0,w,c
  4863   003A4E  B4D8               	btfsc	status,2,c
  4864   003A50  EF2C  F01D         	goto	u4201
  4865   003A54  EF2E  F01D         	goto	u4200
  4866   003A58                     u4201:
  4867   003A58  EF45  F01D         	goto	l1257
  4868   003A5C                     u4200:
  4869   003A5C                     
  4870                           ; BSR set to: 0
  4871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  4872   003A5C  0632               	decf	dtoa@w^0,f,c
  4873   003A5E  A0D8               	btfss	status,0,c
  4874   003A60  0633               	decf	(dtoa@w+1)^0,f,c
  4875   003A62                     
  4876                           ; BSR set to: 0
  4877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  4878   003A62  503E               	movf	dtoa@s^0,w,c
  4879   003A64  A4D8               	btfss	status,2,c
  4880   003A66  EF37  F01D         	goto	u4211
  4881   003A6A  EF39  F01D         	goto	u4210
  4882   003A6E                     u4211:
  4883   003A6E  EF3F  F01D         	goto	l4236
  4884   003A72                     u4210:
  4885   003A72                     
  4886                           ; BSR set to: 0
  4887   003A72  0E00               	movlw	0
  4888   003A74  6E2F               	movwf	(_dtoa$2336+1)^0,c
  4889   003A76  0E2B               	movlw	43
  4890   003A78  6E2E               	movwf	_dtoa$2336^0,c
  4891   003A7A  EF43  F01D         	goto	l4238
  4892   003A7E                     l4236:
  4893                           
  4894                           ; BSR set to: 0
  4895   003A7E  0E00               	movlw	0
  4896   003A80  6E2F               	movwf	(_dtoa$2336+1)^0,c
  4897   003A82  0E2D               	movlw	45
  4898   003A84  6E2E               	movwf	_dtoa$2336^0,c
  4899   003A86                     l4238:
  4900                           
  4901                           ; BSR set to: 0
  4902   003A86  C02E  F03E         	movff	_dtoa$2336,dtoa@s
  4903   003A8A                     l1257:
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  4907   003A8A  0E00               	movlw	0
  4908   003A8C  6E3D               	movwf	(dtoa@i+1)^0,c
  4909   003A8E  0E4F               	movlw	79
  4910   003A90  6E3C               	movwf	dtoa@i^0,c
  4911   003A92                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  4914   003A92  0E00               	movlw	0
  4915   003A94  0101               	movlb	1	; () banked
  4916   003A96  6F5B               	movwf	(_dbuf+79)& (0+255),b
  4917                           
  4918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  4919   003A98  EFCA  F01D         	goto	l4252
  4920   003A9C                     l4242:
  4921                           
  4922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  4923   003A9C  063C               	decf	dtoa@i^0,f,c
  4924   003A9E  A0D8               	btfss	status,0,c
  4925   003AA0  063D               	decf	(dtoa@i+1)^0,f,c
  4926   003AA2                     
  4927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4928   003AA2  0E0C               	movlw	low _dbuf
  4929   003AA4  243C               	addwf	dtoa@i^0,w,c
  4930   003AA6  6ED9               	movwf	fsr2l,c
  4931   003AA8  0E01               	movlw	high _dbuf
  4932   003AAA  203D               	addwfc	(dtoa@i+1)^0,w,c
  4933   003AAC  6EDA               	movwf	fsr2h,c
  4934   003AAE  C034  F001         	movff	dtoa@n,___aomod@dividend
  4935   003AB2  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4936   003AB6  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4937   003ABA  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4938   003ABE  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4939   003AC2  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4940   003AC6  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4941   003ACA  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4942   003ACE  0E0A               	movlw	10
  4943   003AD0  6E09               	movwf	___aomod@divisor^0,c
  4944   003AD2  0E00               	movlw	0
  4945   003AD4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4946   003AD6  0E00               	movlw	0
  4947   003AD8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4948   003ADA  0E00               	movlw	0
  4949   003ADC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4950   003ADE  0E00               	movlw	0
  4951   003AE0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4952   003AE2  0E00               	movlw	0
  4953   003AE4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4954   003AE6  0E00               	movlw	0
  4955   003AE8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4956   003AEA  0E00               	movlw	0
  4957   003AEC  6E10               	movwf	(___aomod@divisor+7)^0,c
  4958   003AEE  EC74  F021         	call	___aomod	;wreg free
  4959   003AF2  C001  F026         	movff	?___aomod,??_dtoa
  4960   003AF6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4961   003AFA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4962   003AFE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4963   003B02  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4964   003B06  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4965   003B0A  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4966   003B0E  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4967   003B12  C026  F013         	movff	??_dtoa,abs@a
  4968   003B16  C027  F014         	movff	??_dtoa+1,abs@a+1
  4969   003B1A  ECD4  F02A         	call	_abs	;wreg free
  4970   003B1E  5013               	movf	?_abs^0,w,c
  4971   003B20  0F30               	addlw	48
  4972   003B22  6EDF               	movwf	indf2,c
  4973   003B24                     
  4974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  4975   003B24  0630               	decf	dtoa@p^0,f,c
  4976   003B26  A0D8               	btfss	status,0,c
  4977   003B28  0631               	decf	(dtoa@p+1)^0,f,c
  4978   003B2A                     
  4979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  4980   003B2A  0632               	decf	dtoa@w^0,f,c
  4981   003B2C  A0D8               	btfss	status,0,c
  4982   003B2E  0633               	decf	(dtoa@w+1)^0,f,c
  4983   003B30                     
  4984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  4985   003B30  C034  F001         	movff	dtoa@n,___aodiv@dividend
  4986   003B34  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4987   003B38  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4988   003B3C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4989   003B40  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4990   003B44  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4991   003B48  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4992   003B4C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4993   003B50  0E0A               	movlw	10
  4994   003B52  6E09               	movwf	___aodiv@divisor^0,c
  4995   003B54  0E00               	movlw	0
  4996   003B56  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4997   003B58  0E00               	movlw	0
  4998   003B5A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4999   003B5C  0E00               	movlw	0
  5000   003B5E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5001   003B60  0E00               	movlw	0
  5002   003B62  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5003   003B64  0E00               	movlw	0
  5004   003B66  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5005   003B68  0E00               	movlw	0
  5006   003B6A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5007   003B6C  0E00               	movlw	0
  5008   003B6E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5009   003B70  ECFA  F01F         	call	___aodiv	;wreg free
  5010   003B74  C001  F034         	movff	?___aodiv,dtoa@n
  5011   003B78  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5012   003B7C  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5013   003B80  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5014   003B84  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5015   003B88  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5016   003B8C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5017   003B90  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5018   003B94                     l4252:
  5019                           
  5020                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5021   003B94  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5022   003B96  EFD5  F01D         	goto	u4221
  5023   003B9A  503D               	movf	(dtoa@i+1)^0,w,c
  5024   003B9C  E108               	bnz	u4220
  5025   003B9E  043C               	decf	dtoa@i^0,w,c
  5026   003BA0  A0D8               	btfss	status,0,c
  5027   003BA2  EFD5  F01D         	goto	u4221
  5028   003BA6  EFD7  F01D         	goto	u4220
  5029   003BAA                     u4221:
  5030   003BAA  EFF3  F01D         	goto	l4258
  5031   003BAE                     u4220:
  5032   003BAE  5034               	movf	dtoa@n^0,w,c
  5033   003BB0  1035               	iorwf	(dtoa@n+1)^0,w,c
  5034   003BB2  1036               	iorwf	(dtoa@n+2)^0,w,c
  5035   003BB4  1037               	iorwf	(dtoa@n+3)^0,w,c
  5036   003BB6  1038               	iorwf	(dtoa@n+4)^0,w,c
  5037   003BB8  1039               	iorwf	(dtoa@n+5)^0,w,c
  5038   003BBA  103A               	iorwf	(dtoa@n+6)^0,w,c
  5039   003BBC  103B               	iorwf	(dtoa@n+7)^0,w,c
  5040   003BBE  A4D8               	btfss	status,2,c
  5041   003BC0  EFE4  F01D         	goto	u4231
  5042   003BC4  EFE6  F01D         	goto	u4230
  5043   003BC8                     u4231:
  5044   003BC8  EF4E  F01D         	goto	l4242
  5045   003BCC                     u4230:
  5046   003BCC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5047   003BCE  EFF3  F01D         	goto	u4240
  5048   003BD2  5031               	movf	(dtoa@p+1)^0,w,c
  5049   003BD4  E106               	bnz	u4241
  5050   003BD6  0430               	decf	dtoa@p^0,w,c
  5051   003BD8  B0D8               	btfsc	status,0,c
  5052   003BDA  EFF1  F01D         	goto	u4241
  5053   003BDE  EFF3  F01D         	goto	u4240
  5054   003BE2                     u4241:
  5055   003BE2  EF4E  F01D         	goto	l4242
  5056   003BE6                     u4240:
  5057   003BE6                     l4258:
  5058                           
  5059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5060   003BE6  503E               	movf	dtoa@s^0,w,c
  5061   003BE8  B4D8               	btfsc	status,2,c
  5062   003BEA  EFF9  F01D         	goto	u4251
  5063   003BEE  EFFB  F01D         	goto	u4250
  5064   003BF2                     u4251:
  5065   003BF2  EF06  F01E         	goto	l4264
  5066   003BF6                     u4250:
  5067   003BF6                     
  5068                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5069   003BF6  063C               	decf	dtoa@i^0,f,c
  5070   003BF8  A0D8               	btfss	status,0,c
  5071   003BFA  063D               	decf	(dtoa@i+1)^0,f,c
  5072   003BFC                     
  5073                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5074   003BFC  0E0C               	movlw	low _dbuf
  5075   003BFE  243C               	addwf	dtoa@i^0,w,c
  5076   003C00  6ED9               	movwf	fsr2l,c
  5077   003C02  0E01               	movlw	high _dbuf
  5078   003C04  203D               	addwfc	(dtoa@i+1)^0,w,c
  5079   003C06  6EDA               	movwf	fsr2h,c
  5080   003C08  C03E  FFDF         	movff	dtoa@s,indf2
  5081   003C0C                     l4264:
  5082                           
  5083                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5084   003C0C  C01C  F011         	movff	dtoa@fp,pad@fp
  5085   003C10  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5086   003C14  0E0C               	movlw	low _dbuf
  5087   003C16  243C               	addwf	dtoa@i^0,w,c
  5088   003C18  6E13               	movwf	pad@buf^0,c
  5089   003C1A  0E01               	movlw	high _dbuf
  5090   003C1C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5091   003C1E  6E14               	movwf	(pad@buf+1)^0,c
  5092   003C20  C032  F015         	movff	dtoa@w,pad@p
  5093   003C24  C033  F016         	movff	dtoa@w+1,pad@p+1
  5094   003C28  EC15  F026         	call	_pad	;wreg free
  5095   003C2C  0012               	return		;funcret
  5096   003C2E                     __end_of_dtoa:
  5097                           	callstack 0
  5098                           
  5099 ;; *************** function _pad *****************
  5100 ;; Defined at:
  5101 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5104 ;;		 -> sprintf@f(11), 
  5105 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5106 ;;		 -> dbuf(80), 
  5107 ;;  p               2   20[COMRAM] int 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  w               2   25[COMRAM] int 
  5110 ;;  i               2   23[COMRAM] int 
  5111 ;; Return value:  Size  Location     Type
  5112 ;;                  1    wreg      void 
  5113 ;; Registers used:
  5114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5115 ;; Tracked objects:
  5116 ;;		On entry : 0/0
  5117 ;;		On exit  : 0/0
  5118 ;;		Unchanged: 0/0
  5119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5123 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5124 ;;Total ram usage:       11 bytes
  5125 ;; Hardware stack levels used: 1
  5126 ;; Hardware stack levels required when called: 4
  5127 ;; This function calls:
  5128 ;;		_fputc
  5129 ;;		_fputs
  5130 ;; This function is called by:
  5131 ;;		_dtoa
  5132 ;;		_efgtoa
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136                           	psect	text13
  5137   004C2A                     __ptext13:
  5138                           	callstack 0
  5139   004C2A                     _pad:
  5140                           	callstack 22
  5141   004C2A                     
  5142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5143   004C2A  BE16               	btfsc	(pad@p+1)^0,7,c
  5144   004C2C  EF1A  F026         	goto	u3891
  5145   004C30  EF1C  F026         	goto	u3890
  5146   004C34                     u3891:
  5147   004C34  EF22  F026         	goto	l4112
  5148   004C38                     u3890:
  5149   004C38  C015  F01A         	movff	pad@p,pad@w
  5150   004C3C  C016  F01B         	movff	pad@p+1,pad@w+1
  5151   004C40  EF26  F026         	goto	l1245
  5152   004C44                     l4112:
  5153   004C44  0E00               	movlw	0
  5154   004C46  6E1B               	movwf	(pad@w+1)^0,c
  5155   004C48  0E00               	movlw	0
  5156   004C4A  6E1A               	movwf	pad@w^0,c
  5157   004C4C                     l1245:
  5158                           
  5159                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5160   004C4C  0E00               	movlw	0
  5161   004C4E  6E19               	movwf	(pad@i+1)^0,c
  5162   004C50  0E00               	movlw	0
  5163   004C52  6E18               	movwf	pad@i^0,c
  5164                           
  5165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5166   004C54  EF38  F026         	goto	l4118
  5167   004C58                     l4114:
  5168                           
  5169                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5170   004C58  0E00               	movlw	0
  5171   004C5A  6E02               	movwf	(fputc@c+1)^0,c
  5172   004C5C  0E20               	movlw	32
  5173   004C5E  6E01               	movwf	fputc@c^0,c
  5174   004C60  C011  F003         	movff	pad@fp,fputc@fp
  5175   004C64  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5176   004C68  ECAA  F023         	call	_fputc	;wreg free
  5177   004C6C                     
  5178                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5179   004C6C  4A18               	infsnz	pad@i^0,f,c
  5180   004C6E  2A19               	incf	(pad@i+1)^0,f,c
  5181   004C70                     l4118:
  5182                           
  5183                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5184   004C70  501A               	movf	pad@w^0,w,c
  5185   004C72  5C18               	subwf	pad@i^0,w,c
  5186   004C74  5019               	movf	(pad@i+1)^0,w,c
  5187   004C76  0A80               	xorlw	128
  5188   004C78  6E17               	movwf	??_pad^0,c
  5189   004C7A  501B               	movf	(pad@w+1)^0,w,c
  5190   004C7C  0A80               	xorlw	128
  5191   004C7E  5817               	subwfb	??_pad^0,w,c
  5192   004C80  A0D8               	btfss	status,0,c
  5193   004C82  EF45  F026         	goto	u3901
  5194   004C86  EF47  F026         	goto	u3900
  5195   004C8A                     u3901:
  5196   004C8A  EF2C  F026         	goto	l4114
  5197   004C8E                     u3900:
  5198   004C8E                     
  5199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5200   004C8E  C013  F00A         	movff	pad@buf,fputs@s
  5201   004C92  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5202   004C96  C011  F00C         	movff	pad@fp,fputs@fp
  5203   004C9A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5204   004C9E  EC91  F02A         	call	_fputs	;wreg free
  5205   004CA2  0012               	return		;funcret
  5206   004CA4                     __end_of_pad:
  5207                           	callstack 0
  5208                           
  5209 ;; *************** function _fputs *****************
  5210 ;; Defined at:
  5211 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5214 ;;		 -> dbuf(80), 
  5215 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5216 ;;		 -> sprintf@f(11), 
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;  i               2   14[COMRAM] int 
  5219 ;;  c               1   13[COMRAM] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    9[COMRAM] int 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;Total ram usage:        7 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; Hardware stack levels required when called: 3
  5236 ;; This function calls:
  5237 ;;		_fputc
  5238 ;; This function is called by:
  5239 ;;		_pad
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text14
  5244   005522                     __ptext14:
  5245                           	callstack 0
  5246   005522                     _fputs:
  5247                           	callstack 22
  5248   005522  0E00               	movlw	0
  5249   005524  6E10               	movwf	(fputs@i+1)^0,c
  5250   005526  0E00               	movlw	0
  5251   005528  6E0F               	movwf	fputs@i^0,c
  5252   00552A  EFA2  F02A         	goto	l3634
  5253   00552E                     l3630:
  5254   00552E  C00E  F001         	movff	fputs@c,fputc@c
  5255   005532  6A02               	clrf	(fputc@c+1)^0,c
  5256   005534  C00C  F003         	movff	fputs@fp,fputc@fp
  5257   005538  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5258   00553C  ECAA  F023         	call	_fputc	;wreg free
  5259   005540  4A0F               	infsnz	fputs@i^0,f,c
  5260   005542  2A10               	incf	(fputs@i+1)^0,f,c
  5261   005544                     l3634:
  5262   005544  500F               	movf	fputs@i^0,w,c
  5263   005546  240A               	addwf	fputs@s^0,w,c
  5264   005548  6ED9               	movwf	fsr2l,c
  5265   00554A  5010               	movf	(fputs@i+1)^0,w,c
  5266   00554C  200B               	addwfc	(fputs@s+1)^0,w,c
  5267   00554E  6EDA               	movwf	fsr2h,c
  5268   005550  50DF               	movf	indf2,w,c
  5269   005552  6E0E               	movwf	fputs@c^0,c
  5270   005554  500E               	movf	fputs@c^0,w,c
  5271   005556  A4D8               	btfss	status,2,c
  5272   005558  EFB0  F02A         	goto	u3141
  5273   00555C  EFB2  F02A         	goto	u3140
  5274   005560                     u3141:
  5275   005560  EF97  F02A         	goto	l3630
  5276   005564                     u3140:
  5277   005564  0012               	return		;funcret
  5278   005566                     __end_of_fputs:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function _fputc *****************
  5282 ;; Defined at:
  5283 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  c               2    0[COMRAM] int 
  5286 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5287 ;;		 -> sprintf@f(11), 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;		None
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  2    0[COMRAM] int 
  5292 ;; Registers used:
  5293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5299 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5301 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5302 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5303 ;;Total ram usage:        9 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; Hardware stack levels required when called: 2
  5306 ;; This function calls:
  5307 ;;		_putch
  5308 ;; This function is called by:
  5309 ;;		_pad
  5310 ;;		_vfpfcnvrt
  5311 ;;		_fputs
  5312 ;; This function uses a non-reentrant model
  5313 ;;
  5314                           
  5315                           	psect	text15
  5316   004754                     __ptext15:
  5317                           	callstack 0
  5318   004754                     _fputc:
  5319                           	callstack 25
  5320   004754  5003               	movf	fputc@fp^0,w,c
  5321   004756  1004               	iorwf	(fputc@fp+1)^0,w,c
  5322   004758  B4D8               	btfsc	status,2,c
  5323   00475A  EFB1  F023         	goto	u2711
  5324   00475E  EFB3  F023         	goto	u2710
  5325   004762                     u2711:
  5326   004762  EFBC  F023         	goto	l3416
  5327   004766                     u2710:
  5328   004766  5003               	movf	fputc@fp^0,w,c
  5329   004768  1004               	iorwf	(fputc@fp+1)^0,w,c
  5330   00476A  A4D8               	btfss	status,2,c
  5331   00476C  EFBA  F023         	goto	u2721
  5332   004770  EFBC  F023         	goto	u2720
  5333   004774                     u2721:
  5334   004774  EFC1  F023         	goto	l3418
  5335   004778                     u2720:
  5336   004778                     l3416:
  5337   004778  5001               	movf	fputc@c^0,w,c
  5338   00477A  ECE4  F02B         	call	_putch
  5339   00477E  EF0E  F024         	goto	l1405
  5340   004782                     l3418:
  5341   004782  EE20 F009          	lfsr	2,9
  5342   004786  5003               	movf	fputc@fp^0,w,c
  5343   004788  26D9               	addwf	fsr2l,f,c
  5344   00478A  5004               	movf	(fputc@fp+1)^0,w,c
  5345   00478C  22DA               	addwfc	fsr2h,f,c
  5346   00478E  50DE               	movf	postinc2,w,c
  5347   004790  10DE               	iorwf	postinc2,w,c
  5348   004792  B4D8               	btfsc	status,2,c
  5349   004794  EFCE  F023         	goto	u2731
  5350   004798  EFD0  F023         	goto	u2730
  5351   00479C                     u2731:
  5352   00479C  EFEB  F023         	goto	l3422
  5353   0047A0                     u2730:
  5354   0047A0  EE20 F009          	lfsr	2,9
  5355   0047A4  5003               	movf	fputc@fp^0,w,c
  5356   0047A6  26D9               	addwf	fsr2l,f,c
  5357   0047A8  5004               	movf	(fputc@fp+1)^0,w,c
  5358   0047AA  22DA               	addwfc	fsr2h,f,c
  5359   0047AC  EE10 F003          	lfsr	1,3
  5360   0047B0  5003               	movf	fputc@fp^0,w,c
  5361   0047B2  26E1               	addwf	fsr1l,f,c
  5362   0047B4  5004               	movf	(fputc@fp+1)^0,w,c
  5363   0047B6  22E2               	addwfc	fsr1h,f,c
  5364   0047B8  50DE               	movf	postinc2,w,c
  5365   0047BA  5CE6               	subwf	postinc1,w,c
  5366   0047BC  50E6               	movf	postinc1,w,c
  5367   0047BE  0A80               	xorlw	128
  5368   0047C0  6E09               	movwf	(??_fputc+4)^0,c
  5369   0047C2  50DE               	movf	postinc2,w,c
  5370   0047C4  0A80               	xorlw	128
  5371   0047C6  5809               	subwfb	(??_fputc+4)^0,w,c
  5372   0047C8  B0D8               	btfsc	status,0,c
  5373   0047CA  EFE9  F023         	goto	u2741
  5374   0047CE  EFEB  F023         	goto	u2740
  5375   0047D2                     u2741:
  5376   0047D2  EF0E  F024         	goto	l1405
  5377   0047D6                     u2740:
  5378   0047D6                     l3422:
  5379   0047D6  EE20 F003          	lfsr	2,3
  5380   0047DA  5003               	movf	fputc@fp^0,w,c
  5381   0047DC  26D9               	addwf	fsr2l,f,c
  5382   0047DE  5004               	movf	(fputc@fp+1)^0,w,c
  5383   0047E0  22DA               	addwfc	fsr2h,f,c
  5384   0047E2  CFDE F005          	movff	postinc2,??_fputc
  5385   0047E6  CFDD F006          	movff	postdec2,??_fputc+1
  5386   0047EA  C003  FFD9         	movff	fputc@fp,fsr2l
  5387   0047EE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5388   0047F2  CFDE F007          	movff	postinc2,??_fputc+2
  5389   0047F6  CFDD F008          	movff	postdec2,??_fputc+3
  5390   0047FA  5005               	movf	??_fputc^0,w,c
  5391   0047FC  2407               	addwf	(??_fputc+2)^0,w,c
  5392   0047FE  6ED9               	movwf	fsr2l,c
  5393   004800  5006               	movf	(??_fputc+1)^0,w,c
  5394   004802  2008               	addwfc	(??_fputc+3)^0,w,c
  5395   004804  6EDA               	movwf	fsr2h,c
  5396   004806  C001  FFDF         	movff	fputc@c,indf2
  5397   00480A  EE20 F003          	lfsr	2,3
  5398   00480E  5003               	movf	fputc@fp^0,w,c
  5399   004810  26D9               	addwf	fsr2l,f,c
  5400   004812  5004               	movf	(fputc@fp+1)^0,w,c
  5401   004814  22DA               	addwfc	fsr2h,f,c
  5402   004816  2ADE               	incf	postinc2,f,c
  5403   004818  0E00               	movlw	0
  5404   00481A  22DD               	addwfc	postdec2,f,c
  5405   00481C                     l1405:
  5406   00481C  0012               	return		;funcret
  5407   00481E                     __end_of_fputc:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _putch *****************
  5411 ;; Defined at:
  5412 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  c               1    wreg     unsigned char 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  c               1    0[COMRAM] unsigned char 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5430 ;;Total ram usage:        0 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 1
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_fputc
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text16
  5441   0057C8                     __ptext16:
  5442                           	callstack 0
  5443   0057C8                     _putch:
  5444                           	callstack 25
  5445   0057C8  0012               	return		;funcret
  5446   0057CA                     __end_of_putch:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _abs *****************
  5450 ;; Defined at:
  5451 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  a               2   18[COMRAM] int 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;		None
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  2   18[COMRAM] int 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5468 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5469 ;;Total ram usage:        4 bytes
  5470 ;; Hardware stack levels used: 1
  5471 ;; Hardware stack levels required when called: 1
  5472 ;; This function calls:
  5473 ;;		Nothing
  5474 ;; This function is called by:
  5475 ;;		_dtoa
  5476 ;; This function uses a non-reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text17
  5480   0055A8                     __ptext17:
  5481                           	callstack 0
  5482   0055A8                     _abs:
  5483                           	callstack 25
  5484   0055A8  BE14               	btfsc	(abs@a+1)^0,7,c
  5485   0055AA  EFE1  F02A         	goto	u3910
  5486   0055AE  5014               	movf	(abs@a+1)^0,w,c
  5487   0055B0  E106               	bnz	u3911
  5488   0055B2  0413               	decf	abs@a^0,w,c
  5489   0055B4  B0D8               	btfsc	status,0,c
  5490   0055B6  EFDF  F02A         	goto	u3911
  5491   0055BA  EFE1  F02A         	goto	u3910
  5492   0055BE                     u3911:
  5493   0055BE  EFEF  F02A         	goto	l1364
  5494   0055C2                     u3910:
  5495   0055C2  C013  F015         	movff	abs@a,??_abs
  5496   0055C6  C014  F016         	movff	abs@a+1,??_abs+1
  5497   0055CA  1E15               	comf	??_abs^0,f,c
  5498   0055CC  1E16               	comf	(??_abs+1)^0,f,c
  5499   0055CE  4A15               	infsnz	??_abs^0,f,c
  5500   0055D0  2A16               	incf	(??_abs+1)^0,f,c
  5501   0055D2  C015  F013         	movff	??_abs,?_abs
  5502   0055D6  C016  F014         	movff	??_abs+1,?_abs+1
  5503   0055DA  EFF3  F02A         	goto	l1367
  5504   0055DE                     l1364:
  5505   0055DE  C013  F013         	movff	abs@a,?_abs
  5506   0055E2  C014  F014         	movff	abs@a+1,?_abs+1
  5507   0055E6                     l1367:
  5508   0055E6  0012               	return		;funcret
  5509   0055E8                     __end_of_abs:
  5510                           	callstack 0
  5511                           
  5512 ;; *************** function ___aomod *****************
  5513 ;; Defined at:
  5514 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;  dividend        8    0[COMRAM] long long 
  5517 ;;  divisor         8    8[COMRAM] long long 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  sign            1   17[COMRAM] unsigned char 
  5520 ;;  counter         1   16[COMRAM] unsigned char 
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  8    0[COMRAM] long long 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5530 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;Total ram usage:       18 bytes
  5535 ;; Hardware stack levels used: 1
  5536 ;; Hardware stack levels required when called: 1
  5537 ;; This function calls:
  5538 ;;		Nothing
  5539 ;; This function is called by:
  5540 ;;		_dtoa
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text18
  5545   0042E8                     __ptext18:
  5546                           	callstack 0
  5547   0042E8                     ___aomod:
  5548                           	callstack 25
  5549   0042E8  0E00               	movlw	0
  5550   0042EA  6E12               	movwf	___aomod@sign^0,c
  5551   0042EC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5552   0042EE  EF7D  F021         	goto	u3220
  5553   0042F2  EF7B  F021         	goto	u3221
  5554   0042F6                     u3221:
  5555   0042F6  EF8F  F021         	goto	l3694
  5556   0042FA                     u3220:
  5557   0042FA  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5558   0042FC  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5559   0042FE  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5560   004300  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5561   004302  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5562   004304  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5563   004306  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5564   004308  6C01               	negf	___aomod@dividend^0,c
  5565   00430A  0E00               	movlw	0
  5566   00430C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5567   00430E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5568   004310  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5569   004312  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5570   004314  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5571   004316  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5572   004318  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5573   00431A  0E01               	movlw	1
  5574   00431C  6E12               	movwf	___aomod@sign^0,c
  5575   00431E                     l3694:
  5576   00431E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5577   004320  EF96  F021         	goto	u3230
  5578   004324  EF94  F021         	goto	u3231
  5579   004328                     u3231:
  5580   004328  EFA6  F021         	goto	l3698
  5581   00432C                     u3230:
  5582   00432C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5583   00432E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5584   004330  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5585   004332  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5586   004334  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5587   004336  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5588   004338  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5589   00433A  6C09               	negf	___aomod@divisor^0,c
  5590   00433C  0E00               	movlw	0
  5591   00433E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5592   004340  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5593   004342  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5594   004344  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5595   004346  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5596   004348  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5597   00434A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5598   00434C                     l3698:
  5599   00434C  5009               	movf	___aomod@divisor^0,w,c
  5600   00434E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5601   004350  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5602   004352  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5603   004354  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5604   004356  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5605   004358  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5606   00435A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5607   00435C  B4D8               	btfsc	status,2,c
  5608   00435E  EFB3  F021         	goto	u3241
  5609   004362  EFB5  F021         	goto	u3240
  5610   004366                     u3241:
  5611   004366  EFFD  F021         	goto	l3714
  5612   00436A                     u3240:
  5613   00436A  0E01               	movlw	1
  5614   00436C  6E11               	movwf	___aomod@counter^0,c
  5615   00436E  EFC3  F021         	goto	l3704
  5616   004372                     l3702:
  5617   004372  90D8               	bcf	status,0,c
  5618   004374  3609               	rlcf	___aomod@divisor^0,f,c
  5619   004376  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5620   004378  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5621   00437A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5622   00437C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5623   00437E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5624   004380  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5625   004382  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5626   004384  2A11               	incf	___aomod@counter^0,f,c
  5627   004386                     l3704:
  5628   004386  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5629   004388  EFC8  F021         	goto	u3251
  5630   00438C  EFCA  F021         	goto	u3250
  5631   004390                     u3251:
  5632   004390  EFB9  F021         	goto	l3702
  5633   004394                     u3250:
  5634   004394                     l3706:
  5635   004394  5009               	movf	___aomod@divisor^0,w,c
  5636   004396  5C01               	subwf	___aomod@dividend^0,w,c
  5637   004398  500A               	movf	(___aomod@divisor+1)^0,w,c
  5638   00439A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5639   00439C  500B               	movf	(___aomod@divisor+2)^0,w,c
  5640   00439E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5641   0043A0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5642   0043A2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5643   0043A4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5644   0043A6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5645   0043A8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5646   0043AA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5647   0043AC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5648   0043AE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5649   0043B0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5650   0043B2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5651   0043B4  A0D8               	btfss	status,0,c
  5652   0043B6  EFDF  F021         	goto	u3261
  5653   0043BA  EFE1  F021         	goto	u3260
  5654   0043BE                     u3261:
  5655   0043BE  EFF1  F021         	goto	l3710
  5656   0043C2                     u3260:
  5657   0043C2  5009               	movf	___aomod@divisor^0,w,c
  5658   0043C4  5E01               	subwf	___aomod@dividend^0,f,c
  5659   0043C6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5660   0043C8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5661   0043CA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5662   0043CC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5663   0043CE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5664   0043D0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5665   0043D2  500D               	movf	(___aomod@divisor+4)^0,w,c
  5666   0043D4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5667   0043D6  500E               	movf	(___aomod@divisor+5)^0,w,c
  5668   0043D8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5669   0043DA  500F               	movf	(___aomod@divisor+6)^0,w,c
  5670   0043DC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5671   0043DE  5010               	movf	(___aomod@divisor+7)^0,w,c
  5672   0043E0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5673   0043E2                     l3710:
  5674   0043E2  90D8               	bcf	status,0,c
  5675   0043E4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5676   0043E6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5677   0043E8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5678   0043EA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5679   0043EC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5680   0043EE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5681   0043F0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5682   0043F2  3209               	rrcf	___aomod@divisor^0,f,c
  5683   0043F4  2E11               	decfsz	___aomod@counter^0,f,c
  5684   0043F6  EFCA  F021         	goto	l3706
  5685   0043FA                     l3714:
  5686   0043FA  5012               	movf	___aomod@sign^0,w,c
  5687   0043FC  B4D8               	btfsc	status,2,c
  5688   0043FE  EF03  F022         	goto	u3271
  5689   004402  EF05  F022         	goto	u3270
  5690   004406                     u3271:
  5691   004406  EF15  F022         	goto	l3718
  5692   00440A                     u3270:
  5693   00440A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5694   00440C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5695   00440E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5696   004410  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5697   004412  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5698   004414  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5699   004416  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5700   004418  6C01               	negf	___aomod@dividend^0,c
  5701   00441A  0E00               	movlw	0
  5702   00441C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5703   00441E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5704   004420  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5705   004422  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5706   004424  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5707   004426  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5708   004428  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5709   00442A                     l3718:
  5710   00442A  C001  F001         	movff	___aomod@dividend,?___aomod
  5711   00442E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5712   004432  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5713   004436  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5714   00443A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5715   00443E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5716   004442  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5717   004446  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5718   00444A  0012               	return		;funcret
  5719   00444C                     __end_of___aomod:
  5720                           	callstack 0
  5721                           
  5722 ;; *************** function ___aodiv *****************
  5723 ;; Defined at:
  5724 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  dividend        8    0[COMRAM] long long 
  5727 ;;  divisor         8    8[COMRAM] long long 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  quotient        8   18[COMRAM] long long 
  5730 ;;  sign            1   17[COMRAM] unsigned char 
  5731 ;;  counter         1   16[COMRAM] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  8    0[COMRAM] long long 
  5734 ;; Registers used:
  5735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5741 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5745 ;;Total ram usage:       26 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; Hardware stack levels required when called: 1
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		_dtoa
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           	psect	text19
  5756   003FF4                     __ptext19:
  5757                           	callstack 0
  5758   003FF4                     ___aodiv:
  5759                           	callstack 25
  5760   003FF4  0E00               	movlw	0
  5761   003FF6  6E12               	movwf	___aodiv@sign^0,c
  5762   003FF8  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5763   003FFA  EF03  F020         	goto	u3150
  5764   003FFE  EF01  F020         	goto	u3151
  5765   004002                     u3151:
  5766   004002  EF15  F020         	goto	l3650
  5767   004006                     u3150:
  5768   004006  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5769   004008  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5770   00400A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5771   00400C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5772   00400E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5773   004010  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5774   004012  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5775   004014  6C09               	negf	___aodiv@divisor^0,c
  5776   004016  0E00               	movlw	0
  5777   004018  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5778   00401A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5779   00401C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5780   00401E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5781   004020  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5782   004022  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5783   004024  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5784   004026  0E01               	movlw	1
  5785   004028  6E12               	movwf	___aodiv@sign^0,c
  5786   00402A                     l3650:
  5787   00402A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5788   00402C  EF1C  F020         	goto	u3160
  5789   004030  EF1A  F020         	goto	u3161
  5790   004034                     u3161:
  5791   004034  EF2E  F020         	goto	l3656
  5792   004038                     u3160:
  5793   004038  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5794   00403A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5795   00403C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5796   00403E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5797   004040  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5798   004042  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5799   004044  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5800   004046  6C01               	negf	___aodiv@dividend^0,c
  5801   004048  0E00               	movlw	0
  5802   00404A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5803   00404C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5804   00404E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5805   004050  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5806   004052  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5807   004054  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5808   004056  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5809   004058  0E01               	movlw	1
  5810   00405A  1A12               	xorwf	___aodiv@sign^0,f,c
  5811   00405C                     l3656:
  5812   00405C  EE20  F013         	lfsr	2,___aodiv@quotient
  5813   004060  0E07               	movlw	7
  5814   004062                     u3171:
  5815   004062  6ADE               	clrf	postinc2,c
  5816   004064  06E8               	decf	wreg,f,c
  5817   004066  E2FD               	bc	u3171
  5818   004068  5009               	movf	___aodiv@divisor^0,w,c
  5819   00406A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5820   00406C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5821   00406E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5822   004070  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5823   004072  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5824   004074  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5825   004076  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5826   004078  B4D8               	btfsc	status,2,c
  5827   00407A  EF41  F020         	goto	u3181
  5828   00407E  EF43  F020         	goto	u3180
  5829   004082                     u3181:
  5830   004082  EF95  F020         	goto	l3678
  5831   004086                     u3180:
  5832   004086  0E01               	movlw	1
  5833   004088  6E11               	movwf	___aodiv@counter^0,c
  5834   00408A  EF51  F020         	goto	l3664
  5835   00408E                     l3662:
  5836   00408E  90D8               	bcf	status,0,c
  5837   004090  3609               	rlcf	___aodiv@divisor^0,f,c
  5838   004092  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5839   004094  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5840   004096  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5841   004098  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5842   00409A  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5843   00409C  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5844   00409E  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5845   0040A0  2A11               	incf	___aodiv@counter^0,f,c
  5846   0040A2                     l3664:
  5847   0040A2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5848   0040A4  EF56  F020         	goto	u3191
  5849   0040A8  EF58  F020         	goto	u3190
  5850   0040AC                     u3191:
  5851   0040AC  EF47  F020         	goto	l3662
  5852   0040B0                     u3190:
  5853   0040B0                     l3666:
  5854   0040B0  90D8               	bcf	status,0,c
  5855   0040B2  3613               	rlcf	___aodiv@quotient^0,f,c
  5856   0040B4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5857   0040B6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5858   0040B8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5859   0040BA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5860   0040BC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5861   0040BE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5862   0040C0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5863   0040C2  5009               	movf	___aodiv@divisor^0,w,c
  5864   0040C4  5C01               	subwf	___aodiv@dividend^0,w,c
  5865   0040C6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5866   0040C8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5867   0040CA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5868   0040CC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5869   0040CE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5870   0040D0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5871   0040D2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5872   0040D4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5873   0040D6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5874   0040D8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5875   0040DA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5876   0040DC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5877   0040DE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5878   0040E0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5879   0040E2  A0D8               	btfss	status,0,c
  5880   0040E4  EF76  F020         	goto	u3201
  5881   0040E8  EF78  F020         	goto	u3200
  5882   0040EC                     u3201:
  5883   0040EC  EF89  F020         	goto	l3674
  5884   0040F0                     u3200:
  5885   0040F0  5009               	movf	___aodiv@divisor^0,w,c
  5886   0040F2  5E01               	subwf	___aodiv@dividend^0,f,c
  5887   0040F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5888   0040F6  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5889   0040F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5890   0040FA  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5891   0040FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5892   0040FE  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5893   004100  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5894   004102  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5895   004104  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5896   004106  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5897   004108  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5898   00410A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5899   00410C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5900   00410E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5901   004110  8013               	bsf	___aodiv@quotient^0,0,c
  5902   004112                     l3674:
  5903   004112  90D8               	bcf	status,0,c
  5904   004114  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5905   004116  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5906   004118  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5907   00411A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5908   00411C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5909   00411E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5910   004120  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5911   004122  3209               	rrcf	___aodiv@divisor^0,f,c
  5912   004124  2E11               	decfsz	___aodiv@counter^0,f,c
  5913   004126  EF58  F020         	goto	l3666
  5914   00412A                     l3678:
  5915   00412A  5012               	movf	___aodiv@sign^0,w,c
  5916   00412C  B4D8               	btfsc	status,2,c
  5917   00412E  EF9B  F020         	goto	u3211
  5918   004132  EF9D  F020         	goto	u3210
  5919   004136                     u3211:
  5920   004136  EFAD  F020         	goto	l3682
  5921   00413A                     u3210:
  5922   00413A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5923   00413C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5924   00413E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5925   004140  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5926   004142  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5927   004144  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5928   004146  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5929   004148  6C13               	negf	___aodiv@quotient^0,c
  5930   00414A  0E00               	movlw	0
  5931   00414C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5932   00414E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5933   004150  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5934   004152  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5935   004154  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5936   004156  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5937   004158  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5938   00415A                     l3682:
  5939   00415A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5940   00415E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5941   004162  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5942   004166  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5943   00416A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5944   00416E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5945   004172  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5946   004176  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5947   00417A  0012               	return		;funcret
  5948   00417C                     __end_of___aodiv:
  5949                           	callstack 0
  5950                           
  5951 ;; *************** function _sendStringSerial4 *****************
  5952 ;; Defined at:
  5953 ;;		line 33 in file "serial.c"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;  string          2    1[COMRAM] PTR unsigned char 
  5956 ;;		 -> main@buf(100), 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;		None
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  1    wreg      void 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5972 ;;Total ram usage:        2 bytes
  5973 ;; Hardware stack levels used: 1
  5974 ;; Hardware stack levels required when called: 2
  5975 ;; This function calls:
  5976 ;;		_sendCharSerial4
  5977 ;; This function is called by:
  5978 ;;		_main
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text20
  5983   00569C                     __ptext20:
  5984                           	callstack 0
  5985   00569C                     _sendStringSerial4:
  5986                           	callstack 28
  5987   00569C                     
  5988                           ;serial.c: 34:     while (*string!=0){
  5989   00569C  EF59  F02B         	goto	l5044
  5990   0056A0                     l5040:
  5991                           
  5992                           ;serial.c: 35:         sendCharSerial4(*string++);
  5993   0056A0  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  5994   0056A4  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  5995   0056A8  50DF               	movf	indf2,w,c
  5996   0056AA  ECC1  F02B         	call	_sendCharSerial4
  5997   0056AE  4A02               	infsnz	sendStringSerial4@string^0,f,c
  5998   0056B0  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  5999   0056B2                     l5044:
  6000                           
  6001                           ;serial.c: 34:     while (*string!=0){
  6002   0056B2  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6003   0056B6  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6004   0056BA  50DF               	movf	indf2,w,c
  6005   0056BC  A4D8               	btfss	status,2,c
  6006   0056BE  EF63  F02B         	goto	u5191
  6007   0056C2  EF65  F02B         	goto	u5190
  6008   0056C6                     u5191:
  6009   0056C6  EF50  F02B         	goto	l5040
  6010   0056CA                     u5190:
  6011   0056CA  0012               	return		;funcret
  6012   0056CC                     __end_of_sendStringSerial4:
  6013                           	callstack 0
  6014                           
  6015 ;; *************** function _sendCharSerial4 *****************
  6016 ;; Defined at:
  6017 ;;		line 26 in file "serial.c"
  6018 ;; Parameters:    Size  Location     Type
  6019 ;;  charToSend      1    wreg     unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  charToSend      1    0[COMRAM] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6035 ;;Total ram usage:        1 bytes
  6036 ;; Hardware stack levels used: 1
  6037 ;; Hardware stack levels required when called: 1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_sendStringSerial4
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text21
  6046   005782                     __ptext21:
  6047                           	callstack 0
  6048   005782                     _sendCharSerial4:
  6049                           	callstack 28
  6050                           
  6051                           ;incstack = 0
  6052                           ;sendCharSerial4@charToSend stored from wreg
  6053   005782  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6054   005784                     l203:
  6055   005784  010E               	movlb	14	; () banked
  6056   005786  A537               	btfss	55,2,b	;volatile
  6057   005788  EFC8  F02B         	goto	u4721
  6058   00578C  EFCA  F02B         	goto	u4720
  6059   005790                     u4721:
  6060   005790  EFC2  F02B         	goto	l203
  6061   005794                     u4720:
  6062   005794                     
  6063                           ; BSR set to: 14
  6064                           ;serial.c: 28:     TX4REG = charToSend;
  6065   005794  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6066   005798                     
  6067                           ; BSR set to: 14
  6068   005798  0012               	return		;funcret
  6069   00579A                     __end_of_sendCharSerial4:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function _readColours *****************
  6073 ;; Defined at:
  6074 ;;		line 105 in file "color.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;  vals            2   11[COMRAM] PTR struct RGB
  6077 ;;		 -> vals(8), 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;Total ram usage:        2 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 4
  6096 ;; This function calls:
  6097 ;;		_color_read_Blue
  6098 ;;		_color_read_Green
  6099 ;;		_color_read_Red
  6100 ;;		_color_read_lum
  6101 ;; This function is called by:
  6102 ;;		_main
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text22
  6107   004E5A                     __ptext22:
  6108                           	callstack 0
  6109   004E5A                     _readColours:
  6110                           	callstack 26
  6111   004E5A                     
  6112                           ;color.c: 107:     vals ->R = color_read_Red();
  6113   004E5A  ECAE  F029         	call	_color_read_Red	;wreg free
  6114   004E5E  C00C  FFD9         	movff	readColours@vals,fsr2l
  6115   004E62  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6116   004E66  C005  FFDE         	movff	?_color_read_Red,postinc2
  6117   004E6A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6118                           
  6119                           ;color.c: 108:     vals ->B = color_read_Blue();
  6120   004E6E  ECFE  F029         	call	_color_read_Blue	;wreg free
  6121   004E72  EE20 F004          	lfsr	2,4
  6122   004E76  500C               	movf	readColours@vals^0,w,c
  6123   004E78  26D9               	addwf	fsr2l,f,c
  6124   004E7A  500D               	movf	(readColours@vals+1)^0,w,c
  6125   004E7C  22DA               	addwfc	fsr2h,f,c
  6126   004E7E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6127   004E82  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6128                           
  6129                           ;color.c: 109:     vals ->G = color_read_Green();
  6130   004E86  ECD6  F029         	call	_color_read_Green	;wreg free
  6131   004E8A  EE20 F002          	lfsr	2,2
  6132   004E8E  500C               	movf	readColours@vals^0,w,c
  6133   004E90  26D9               	addwf	fsr2l,f,c
  6134   004E92  500D               	movf	(readColours@vals+1)^0,w,c
  6135   004E94  22DA               	addwfc	fsr2h,f,c
  6136   004E96  C005  FFDE         	movff	?_color_read_Green,postinc2
  6137   004E9A  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6138                           
  6139                           ;color.c: 110:     vals ->L = color_read_lum();
  6140   004E9E  EC86  F029         	call	_color_read_lum	;wreg free
  6141   004EA2  EE20 F006          	lfsr	2,6
  6142   004EA6  500C               	movf	readColours@vals^0,w,c
  6143   004EA8  26D9               	addwf	fsr2l,f,c
  6144   004EAA  500D               	movf	(readColours@vals+1)^0,w,c
  6145   004EAC  22DA               	addwfc	fsr2h,f,c
  6146   004EAE  C005  FFDE         	movff	?_color_read_lum,postinc2
  6147   004EB2  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6148   004EB6  0012               	return		;funcret
  6149   004EB8                     __end_of_readColours:
  6150                           	callstack 0
  6151                           
  6152 ;; *************** function _color_read_lum *****************
  6153 ;; Defined at:
  6154 ;;		line 49 in file "color.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;		None
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  tmp             2    9[COMRAM] unsigned int 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;                  2    4[COMRAM] unsigned int 
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6171 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6172 ;;Total ram usage:        7 bytes
  6173 ;; Hardware stack levels used: 1
  6174 ;; Hardware stack levels required when called: 3
  6175 ;; This function calls:
  6176 ;;		_I2C_2_Master_Read
  6177 ;;		_I2C_2_Master_RepStart
  6178 ;;		_I2C_2_Master_Start
  6179 ;;		_I2C_2_Master_Stop
  6180 ;;		_I2C_2_Master_Write
  6181 ;; This function is called by:
  6182 ;;		_readColours
  6183 ;; This function uses a non-reentrant model
  6184 ;;
  6185                           
  6186                           	psect	text23
  6187   00530C                     __ptext23:
  6188                           	callstack 0
  6189   00530C                     _color_read_lum:
  6190                           	callstack 26
  6191   00530C                     
  6192                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6193   00530C  ECDD  F02B         	call	_I2C_2_Master_Start	;wreg free
  6194                           
  6195                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6196   005310  0E52               	movlw	82
  6197   005312  ECCD  F02B         	call	_I2C_2_Master_Write
  6198                           
  6199                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6200   005316  0EB4               	movlw	180
  6201   005318  ECCD  F02B         	call	_I2C_2_Master_Write
  6202                           
  6203                           ;color.c: 55:  I2C_2_Master_RepStart();
  6204   00531C  ECD3  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6205                           
  6206                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6207   005320  0E53               	movlw	83
  6208   005322  ECCD  F02B         	call	_I2C_2_Master_Write
  6209                           
  6210                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6211   005326  0E01               	movlw	1
  6212   005328  ECB3  F02A         	call	_I2C_2_Master_Read
  6213   00532C  6E07               	movwf	??_color_read_lum^0,c
  6214   00532E  5007               	movf	??_color_read_lum^0,w,c
  6215   005330  6E0A               	movwf	color_read_lum@tmp^0,c
  6216   005332  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6217                           
  6218                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6219   005334  0E00               	movlw	0
  6220   005336  ECB3  F02A         	call	_I2C_2_Master_Read
  6221   00533A  6E07               	movwf	??_color_read_lum^0,c
  6222   00533C  5007               	movf	??_color_read_lum^0,w,c
  6223   00533E  6E09               	movwf	(??_color_read_lum+2)^0,c
  6224   005340  6A08               	clrf	(??_color_read_lum+1)^0,c
  6225   005342  500A               	movf	color_read_lum@tmp^0,w,c
  6226   005344  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6227   005346  6E0A               	movwf	color_read_lum@tmp^0,c
  6228   005348  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6229   00534A  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6230   00534C  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6231                           
  6232                           ;color.c: 59:  I2C_2_Master_Stop();
  6233   00534E  ECD8  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6234   005352                     
  6235                           ;color.c: 60:  return tmp;
  6236   005352  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6237   005356  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6238   00535A  0012               	return		;funcret
  6239   00535C                     __end_of_color_read_lum:
  6240                           	callstack 0
  6241                           
  6242 ;; *************** function _color_read_Red *****************
  6243 ;; Defined at:
  6244 ;;		line 63 in file "color.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;  tmp             2    9[COMRAM] unsigned int 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  2    4[COMRAM] unsigned int 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0, cstack
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6258 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;Total ram usage:        7 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 3
  6265 ;; This function calls:
  6266 ;;		_I2C_2_Master_Read
  6267 ;;		_I2C_2_Master_RepStart
  6268 ;;		_I2C_2_Master_Start
  6269 ;;		_I2C_2_Master_Stop
  6270 ;;		_I2C_2_Master_Write
  6271 ;; This function is called by:
  6272 ;;		_readColours
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text24
  6277   00535C                     __ptext24:
  6278                           	callstack 0
  6279   00535C                     _color_read_Red:
  6280                           	callstack 26
  6281   00535C                     
  6282                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6283   00535C  ECDD  F02B         	call	_I2C_2_Master_Start	;wreg free
  6284                           
  6285                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6286   005360  0E52               	movlw	82
  6287   005362  ECCD  F02B         	call	_I2C_2_Master_Write
  6288                           
  6289                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6290   005366  0EB6               	movlw	182
  6291   005368  ECCD  F02B         	call	_I2C_2_Master_Write
  6292                           
  6293                           ;color.c: 69:  I2C_2_Master_RepStart();
  6294   00536C  ECD3  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6295                           
  6296                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6297   005370  0E53               	movlw	83
  6298   005372  ECCD  F02B         	call	_I2C_2_Master_Write
  6299                           
  6300                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6301   005376  0E01               	movlw	1
  6302   005378  ECB3  F02A         	call	_I2C_2_Master_Read
  6303   00537C  6E07               	movwf	??_color_read_Red^0,c
  6304   00537E  5007               	movf	??_color_read_Red^0,w,c
  6305   005380  6E0A               	movwf	color_read_Red@tmp^0,c
  6306   005382  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6307                           
  6308                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6309   005384  0E00               	movlw	0
  6310   005386  ECB3  F02A         	call	_I2C_2_Master_Read
  6311   00538A  6E07               	movwf	??_color_read_Red^0,c
  6312   00538C  5007               	movf	??_color_read_Red^0,w,c
  6313   00538E  6E09               	movwf	(??_color_read_Red+2)^0,c
  6314   005390  6A08               	clrf	(??_color_read_Red+1)^0,c
  6315   005392  500A               	movf	color_read_Red@tmp^0,w,c
  6316   005394  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6317   005396  6E0A               	movwf	color_read_Red@tmp^0,c
  6318   005398  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6319   00539A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6320   00539C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6321                           
  6322                           ;color.c: 73:  I2C_2_Master_Stop();
  6323   00539E  ECD8  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6324   0053A2                     
  6325                           ;color.c: 74:  return tmp;
  6326   0053A2  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6327   0053A6  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6328   0053AA  0012               	return		;funcret
  6329   0053AC                     __end_of_color_read_Red:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _color_read_Green *****************
  6333 ;; Defined at:
  6334 ;;		line 76 in file "color.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  tmp             2    9[COMRAM] unsigned int 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  2    4[COMRAM] unsigned int 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0, cstack
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6348 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6350 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6351 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;Total ram usage:        7 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 3
  6355 ;; This function calls:
  6356 ;;		_I2C_2_Master_Read
  6357 ;;		_I2C_2_Master_RepStart
  6358 ;;		_I2C_2_Master_Start
  6359 ;;		_I2C_2_Master_Stop
  6360 ;;		_I2C_2_Master_Write
  6361 ;; This function is called by:
  6362 ;;		_readColours
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text25
  6367   0053AC                     __ptext25:
  6368                           	callstack 0
  6369   0053AC                     _color_read_Green:
  6370                           	callstack 26
  6371   0053AC                     
  6372                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6373   0053AC  ECDD  F02B         	call	_I2C_2_Master_Start	;wreg free
  6374                           
  6375                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6376   0053B0  0E52               	movlw	82
  6377   0053B2  ECCD  F02B         	call	_I2C_2_Master_Write
  6378                           
  6379                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6380   0053B6  0EB8               	movlw	184
  6381   0053B8  ECCD  F02B         	call	_I2C_2_Master_Write
  6382                           
  6383                           ;color.c: 82:  I2C_2_Master_RepStart();
  6384   0053BC  ECD3  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6385                           
  6386                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6387   0053C0  0E53               	movlw	83
  6388   0053C2  ECCD  F02B         	call	_I2C_2_Master_Write
  6389                           
  6390                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6391   0053C6  0E01               	movlw	1
  6392   0053C8  ECB3  F02A         	call	_I2C_2_Master_Read
  6393   0053CC  6E07               	movwf	??_color_read_Green^0,c
  6394   0053CE  5007               	movf	??_color_read_Green^0,w,c
  6395   0053D0  6E0A               	movwf	color_read_Green@tmp^0,c
  6396   0053D2  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6397                           
  6398                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6399   0053D4  0E00               	movlw	0
  6400   0053D6  ECB3  F02A         	call	_I2C_2_Master_Read
  6401   0053DA  6E07               	movwf	??_color_read_Green^0,c
  6402   0053DC  5007               	movf	??_color_read_Green^0,w,c
  6403   0053DE  6E09               	movwf	(??_color_read_Green+2)^0,c
  6404   0053E0  6A08               	clrf	(??_color_read_Green+1)^0,c
  6405   0053E2  500A               	movf	color_read_Green@tmp^0,w,c
  6406   0053E4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6407   0053E6  6E0A               	movwf	color_read_Green@tmp^0,c
  6408   0053E8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6409   0053EA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6410   0053EC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6411                           
  6412                           ;color.c: 86:  I2C_2_Master_Stop();
  6413   0053EE  ECD8  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6414   0053F2                     
  6415                           ;color.c: 87:  return tmp;
  6416   0053F2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6417   0053F6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6418   0053FA  0012               	return		;funcret
  6419   0053FC                     __end_of_color_read_Green:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function _color_read_Blue *****************
  6423 ;; Defined at:
  6424 ;;		line 90 in file "color.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;		None
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  tmp             2    9[COMRAM] unsigned int 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  2    4[COMRAM] unsigned int 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;Total ram usage:        7 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 3
  6445 ;; This function calls:
  6446 ;;		_I2C_2_Master_Read
  6447 ;;		_I2C_2_Master_RepStart
  6448 ;;		_I2C_2_Master_Start
  6449 ;;		_I2C_2_Master_Stop
  6450 ;;		_I2C_2_Master_Write
  6451 ;; This function is called by:
  6452 ;;		_readColours
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text26
  6457   0053FC                     __ptext26:
  6458                           	callstack 0
  6459   0053FC                     _color_read_Blue:
  6460                           	callstack 26
  6461   0053FC                     
  6462                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6463   0053FC  ECDD  F02B         	call	_I2C_2_Master_Start	;wreg free
  6464                           
  6465                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6466   005400  0E52               	movlw	82
  6467   005402  ECCD  F02B         	call	_I2C_2_Master_Write
  6468                           
  6469                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6470   005406  0EBA               	movlw	186
  6471   005408  ECCD  F02B         	call	_I2C_2_Master_Write
  6472                           
  6473                           ;color.c: 96:  I2C_2_Master_RepStart();
  6474   00540C  ECD3  F02B         	call	_I2C_2_Master_RepStart	;wreg free
  6475                           
  6476                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6477   005410  0E53               	movlw	83
  6478   005412  ECCD  F02B         	call	_I2C_2_Master_Write
  6479                           
  6480                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6481   005416  0E01               	movlw	1
  6482   005418  ECB3  F02A         	call	_I2C_2_Master_Read
  6483   00541C  6E07               	movwf	??_color_read_Blue^0,c
  6484   00541E  5007               	movf	??_color_read_Blue^0,w,c
  6485   005420  6E0A               	movwf	color_read_Blue@tmp^0,c
  6486   005422  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6487                           
  6488                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6489   005424  0E00               	movlw	0
  6490   005426  ECB3  F02A         	call	_I2C_2_Master_Read
  6491   00542A  6E07               	movwf	??_color_read_Blue^0,c
  6492   00542C  5007               	movf	??_color_read_Blue^0,w,c
  6493   00542E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6494   005430  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6495   005432  500A               	movf	color_read_Blue@tmp^0,w,c
  6496   005434  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6497   005436  6E0A               	movwf	color_read_Blue@tmp^0,c
  6498   005438  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6499   00543A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6500   00543C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6501                           
  6502                           ;color.c: 100:  I2C_2_Master_Stop();
  6503   00543E  ECD8  F02B         	call	_I2C_2_Master_Stop	;wreg free
  6504   005442                     
  6505                           ;color.c: 101:  return tmp;
  6506   005442  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6507   005446  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6508   00544A  0012               	return		;funcret
  6509   00544C                     __end_of_color_read_Blue:
  6510                           	callstack 0
  6511                           
  6512 ;; *************** function _I2C_2_Master_RepStart *****************
  6513 ;; Defined at:
  6514 ;;		line 33 in file "i2c.c"
  6515 ;; Parameters:    Size  Location     Type
  6516 ;;		None
  6517 ;; Auto vars:     Size  Location     Type
  6518 ;;		None
  6519 ;; Return value:  Size  Location     Type
  6520 ;;                  1    wreg      void 
  6521 ;; Registers used:
  6522 ;;		wreg, status,2, status,0, cstack
  6523 ;; Tracked objects:
  6524 ;;		On entry : 0/0
  6525 ;;		On exit  : 0/0
  6526 ;;		Unchanged: 0/0
  6527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6532 ;;Total ram usage:        0 bytes
  6533 ;; Hardware stack levels used: 1
  6534 ;; Hardware stack levels required when called: 2
  6535 ;; This function calls:
  6536 ;;		_I2C_2_Master_Idle
  6537 ;; This function is called by:
  6538 ;;		_color_read_lum
  6539 ;;		_color_read_Red
  6540 ;;		_color_read_Green
  6541 ;;		_color_read_Blue
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text27
  6546   0057A6                     __ptext27:
  6547                           	callstack 0
  6548   0057A6                     _I2C_2_Master_RepStart:
  6549                           	callstack 26
  6550   0057A6                     
  6551                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6552   0057A6  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6553   0057AA                     
  6554                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6555   0057AA  010E               	movlb	14	; () banked
  6556   0057AC  83DA               	bsf	218,1,b	;volatile
  6557   0057AE                     
  6558                           ; BSR set to: 14
  6559   0057AE  0012               	return		;funcret
  6560   0057B0                     __end_of_I2C_2_Master_RepStart:
  6561                           	callstack 0
  6562                           
  6563 ;; *************** function _I2C_2_Master_Read *****************
  6564 ;; Defined at:
  6565 ;;		line 51 in file "i2c.c"
  6566 ;; Parameters:    Size  Location     Type
  6567 ;;  ack             1    wreg     unsigned char 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  ack             1    2[COMRAM] unsigned char 
  6570 ;;  tmp             1    3[COMRAM] unsigned char 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  1    wreg      unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6583 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6584 ;;Total ram usage:        3 bytes
  6585 ;; Hardware stack levels used: 1
  6586 ;; Hardware stack levels required when called: 2
  6587 ;; This function calls:
  6588 ;;		_I2C_2_Master_Idle
  6589 ;; This function is called by:
  6590 ;;		_color_read_lum
  6591 ;;		_color_read_Red
  6592 ;;		_color_read_Green
  6593 ;;		_color_read_Blue
  6594 ;; This function uses a non-reentrant model
  6595 ;;
  6596                           
  6597                           	psect	text28
  6598   005566                     __ptext28:
  6599                           	callstack 0
  6600   005566                     _I2C_2_Master_Read:
  6601                           	callstack 26
  6602                           
  6603                           ; BSR set to: 14
  6604                           ;incstack = 0
  6605                           ;I2C_2_Master_Read@ack stored from wreg
  6606   005566  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6607   005568                     
  6608                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6609   005568  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6610   00556C                     
  6611                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6612   00556C  010E               	movlb	14	; () banked
  6613   00556E  87DA               	bsf	218,3,b	;volatile
  6614                           
  6615                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6616   005570  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6617   005574                     
  6618                           ;i2c.c: 57:   tmp = SSP2BUF;
  6619   005574  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6620                           
  6621                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6622   005578  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  6623   00557C                     
  6624                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6625   00557C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6626   00557E  B4D8               	btfsc	status,2,c
  6627   005580  EFC4  F02A         	goto	u4581
  6628   005584  EFC8  F02A         	goto	u4580
  6629   005588                     u4581:
  6630   005588  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6631   00558A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6632   00558C  EFC9  F02A         	goto	u4598
  6633   005590                     u4580:
  6634   005590  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6635   005592                     u4598:
  6636   005592  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6637   005594  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6638   005596  010E               	movlb	14	; () banked
  6639   005598  51DA               	movf	218,w,b	;volatile
  6640   00559A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6641   00559C  0BDF               	andlw	-33
  6642   00559E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6643   0055A0  6FDA               	movwf	218,b	;volatile
  6644   0055A2                     
  6645                           ; BSR set to: 14
  6646                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6647   0055A2  89DA               	bsf	218,4,b	;volatile
  6648   0055A4                     
  6649                           ; BSR set to: 14
  6650                           ;i2c.c: 61:   return tmp;
  6651   0055A4  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6652   0055A6                     
  6653                           ; BSR set to: 14
  6654   0055A6  0012               	return		;funcret
  6655   0055A8                     __end_of_I2C_2_Master_Read:
  6656                           	callstack 0
  6657                           
  6658 ;; *************** function _initUSART4 *****************
  6659 ;; Defined at:
  6660 ;;		line 4 in file "serial.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      void 
  6667 ;; Registers used:
  6668 ;;		wreg, status,2
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used: 1
  6680 ;; Hardware stack levels required when called: 1
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_main
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text29
  6689   005764                     __ptext29:
  6690                           	callstack 0
  6691   005764                     _initUSART4:
  6692                           	callstack 29
  6693   005764                     
  6694                           ;serial.c: 5:     RC0PPS = 0x12;
  6695   005764  0E12               	movlw	18
  6696   005766  010E               	movlb	14	; () banked
  6697   005768  6F62               	movwf	98,b	;volatile
  6698                           
  6699                           ;serial.c: 6:     RX4PPS = 0x11;
  6700   00576A  0E11               	movlw	17
  6701   00576C  6F15               	movwf	21,b	;volatile
  6702   00576E                     
  6703                           ; BSR set to: 14
  6704                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6705   00576E  97E9               	bcf	233,3,b	;volatile
  6706   005770                     
  6707                           ; BSR set to: 14
  6708                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6709   005770  95E8               	bcf	232,2,b	;volatile
  6710                           
  6711                           ;serial.c: 9:     SP4BRGL = 51;
  6712   005772  0E33               	movlw	51
  6713   005774  6FE5               	movwf	229,b	;volatile
  6714                           
  6715                           ;serial.c: 10:     SP4BRGH = 0;
  6716   005776  0E00               	movlw	0
  6717   005778  6FE6               	movwf	230,b	;volatile
  6718   00577A                     
  6719                           ; BSR set to: 14
  6720                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  6721   00577A  89E7               	bsf	231,4,b	;volatile
  6722   00577C                     
  6723                           ; BSR set to: 14
  6724                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  6725   00577C  8BE8               	bsf	232,5,b	;volatile
  6726   00577E                     
  6727                           ; BSR set to: 14
  6728                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  6729   00577E  8FE7               	bsf	231,7,b	;volatile
  6730   005780                     
  6731                           ; BSR set to: 14
  6732   005780  0012               	return		;funcret
  6733   005782                     __end_of_initUSART4:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function _initDCmotorsPWM *****************
  6737 ;; Defined at:
  6738 ;;		line 5 in file "dc_motor.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  1    wreg      void 
  6745 ;; Registers used:
  6746 ;;		wreg, status,2
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;Total ram usage:        2 bytes
  6757 ;; Hardware stack levels used: 1
  6758 ;; Hardware stack levels required when called: 1
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_main
  6763 ;; This function uses a non-reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text30
  6767   004B20                     __ptext30:
  6768                           	callstack 0
  6769   004B20                     _initDCmotorsPWM:
  6770                           	callstack 29
  6771   004B20                     
  6772                           ;dc_motor.c: 9:     RE2PPS=0x05;
  6773   004B20  0E05               	movlw	5
  6774   004B22  010E               	movlb	14	; () banked
  6775   004B24  6F74               	movwf	116,b	;volatile
  6776                           
  6777                           ;dc_motor.c: 10:     RE4PPS=0x06;
  6778   004B26  0E06               	movlw	6
  6779   004B28  6F76               	movwf	118,b	;volatile
  6780                           
  6781                           ;dc_motor.c: 11:     RC7PPS=0x07;
  6782   004B2A  0E07               	movlw	7
  6783   004B2C  6F69               	movwf	105,b	;volatile
  6784                           
  6785                           ;dc_motor.c: 12:     RG6PPS=0x08;
  6786   004B2E  0E08               	movlw	8
  6787   004B30  6F88               	movwf	136,b	;volatile
  6788   004B32                     
  6789                           ; BSR set to: 14
  6790                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  6791   004B32  9485               	bcf	133,2,c	;volatile
  6792   004B34                     
  6793                           ; BSR set to: 14
  6794                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  6795   004B34  9885               	bcf	133,4,c	;volatile
  6796   004B36                     
  6797                           ; BSR set to: 14
  6798                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  6799   004B36  9E83               	bcf	131,7,c	;volatile
  6800   004B38                     
  6801                           ; BSR set to: 14
  6802                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  6803   004B38  9C87               	bcf	135,6,c	;volatile
  6804                           
  6805                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  6806   004B3A  50BD               	movf	189,w,c	;volatile
  6807   004B3C  0B8F               	andlw	-113
  6808   004B3E  0930               	iorlw	48
  6809   004B40  6EBD               	movwf	189,c	;volatile
  6810                           
  6811                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  6812   004B42  0EE0               	movlw	-32
  6813   004B44  16BE               	andwf	190,f,c	;volatile
  6814                           
  6815                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  6816   004B46  50BF               	movf	191,w,c	;volatile
  6817   004B48  0BF0               	andlw	-16
  6818   004B4A  0901               	iorlw	1
  6819   004B4C  6EBF               	movwf	191,c	;volatile
  6820   004B4E                     
  6821                           ; BSR set to: 14
  6822                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  6823   004B4E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  6824   004B52                     
  6825                           ; BSR set to: 14
  6826                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  6827   004B52  8EBD               	bsf	189,7,c	;volatile
  6828                           
  6829                           ;dc_motor.c: 33:     CCPR1H=0;
  6830   004B54  0E00               	movlw	0
  6831   004B56  6EAA               	movwf	170,c	;volatile
  6832                           
  6833                           ;dc_motor.c: 34:     CCPR2H=0;
  6834   004B58  0E00               	movlw	0
  6835   004B5A  6EA6               	movwf	166,c	;volatile
  6836                           
  6837                           ;dc_motor.c: 35:     CCPR3H=0;
  6838   004B5C  0E00               	movlw	0
  6839   004B5E  010F               	movlb	15	; () banked
  6840   004B60  6F25               	movwf	37,b	;volatile
  6841                           
  6842                           ;dc_motor.c: 36:     CCPR4H=0;
  6843   004B62  0E00               	movlw	0
  6844   004B64  6F21               	movwf	33,b	;volatile
  6845                           
  6846                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  6847   004B66  0EFC               	movlw	-4
  6848   004B68  16AD               	andwf	173,f,c	;volatile
  6849                           
  6850                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  6851   004B6A  0EF3               	movlw	-13
  6852   004B6C  16AD               	andwf	173,f,c	;volatile
  6853                           
  6854                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  6855   004B6E  0ECF               	movlw	-49
  6856   004B70  16AD               	andwf	173,f,c	;volatile
  6857                           
  6858                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  6859   004B72  0E3F               	movlw	-193
  6860   004B74  16AD               	andwf	173,f,c	;volatile
  6861   004B76                     
  6862                           ; BSR set to: 15
  6863                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  6864   004B76  88AB               	bsf	171,4,c	;volatile
  6865                           
  6866                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  6867   004B78  50AB               	movf	171,w,c	;volatile
  6868   004B7A  0BF0               	andlw	-16
  6869   004B7C  090C               	iorlw	12
  6870   004B7E  6EAB               	movwf	171,c	;volatile
  6871   004B80                     
  6872                           ; BSR set to: 15
  6873                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  6874   004B80  8EAB               	bsf	171,7,c	;volatile
  6875   004B82                     
  6876                           ; BSR set to: 15
  6877                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  6878   004B82  88A7               	bsf	167,4,c	;volatile
  6879                           
  6880                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  6881   004B84  50A7               	movf	167,w,c	;volatile
  6882   004B86  0BF0               	andlw	-16
  6883   004B88  090C               	iorlw	12
  6884   004B8A  6EA7               	movwf	167,c	;volatile
  6885   004B8C                     
  6886                           ; BSR set to: 15
  6887                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  6888   004B8C  8EA7               	bsf	167,7,c	;volatile
  6889   004B8E                     
  6890                           ; BSR set to: 15
  6891                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  6892   004B8E  8926               	bsf	38,4,b	;volatile
  6893                           
  6894                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  6895   004B90  5126               	movf	38,w,b	;volatile
  6896   004B92  0BF0               	andlw	-16
  6897   004B94  090C               	iorlw	12
  6898   004B96  6F26               	movwf	38,b	;volatile
  6899   004B98                     
  6900                           ; BSR set to: 15
  6901                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  6902   004B98  8F26               	bsf	38,7,b	;volatile
  6903   004B9A                     
  6904                           ; BSR set to: 15
  6905                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  6906   004B9A  8922               	bsf	34,4,b	;volatile
  6907                           
  6908                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  6909   004B9C  5122               	movf	34,w,b	;volatile
  6910   004B9E  0BF0               	andlw	-16
  6911   004BA0  090C               	iorlw	12
  6912   004BA2  6F22               	movwf	34,b	;volatile
  6913   004BA4                     
  6914                           ; BSR set to: 15
  6915                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  6916   004BA4  8F22               	bsf	34,7,b	;volatile
  6917   004BA6                     
  6918                           ; BSR set to: 15
  6919   004BA6  0012               	return		;funcret
  6920   004BA8                     __end_of_initDCmotorsPWM:
  6921                           	callstack 0
  6922                           
  6923 ;; *************** function _colour_rel *****************
  6924 ;; Defined at:
  6925 ;;		line 114 in file "color.c"
  6926 ;; Parameters:    Size  Location     Type
  6927 ;;  vals            2   74[COMRAM] PTR struct RGB
  6928 ;;		 -> vals(8), 
  6929 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  6930 ;;		 -> rel(12), 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  B               4   20[BANK0 ] float 
  6933 ;;  G               4   16[BANK0 ] float 
  6934 ;;  R               4   12[BANK0 ] float 
  6935 ;;  L               4    0[BANK0 ] float 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6946 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6948 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6949 ;;Total ram usage:       28 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 2
  6952 ;; This function calls:
  6953 ;;		___fladd
  6954 ;;		___fldiv
  6955 ;;		___xxtofl
  6956 ;; This function is called by:
  6957 ;;		_main
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text31
  6962   00337C                     __ptext31:
  6963                           	callstack 0
  6964   00337C                     _colour_rel:
  6965                           	callstack 28
  6966   00337C                     
  6967                           ;color.c: 115:     float R = vals->R;
  6968   00337C  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  6969   003380  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  6970   003384  CFDE F001          	movff	postinc2,___xxtofl@val
  6971   003388  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6972   00338C  0E00               	movlw	0
  6973   00338E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6974   003390  0EFF               	movlw	-1
  6975   003392  6E03               	movwf	(___xxtofl@val+2)^0,c
  6976   003394  6E04               	movwf	(___xxtofl@val+3)^0,c
  6977   003396  0E01               	movlw	1
  6978   003398  EC20  F01F         	call	___xxtofl
  6979   00339C  C001  F06C         	movff	?___xxtofl,colour_rel@R
  6980   0033A0  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  6981   0033A4  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  6982   0033A8  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  6983                           
  6984                           ;color.c: 116:     float G = vals->G;
  6985   0033AC  EE20 F002          	lfsr	2,2
  6986   0033B0  504B               	movf	colour_rel@vals^0,w,c
  6987   0033B2  26D9               	addwf	fsr2l,f,c
  6988   0033B4  504C               	movf	(colour_rel@vals+1)^0,w,c
  6989   0033B6  22DA               	addwfc	fsr2h,f,c
  6990   0033B8  CFDE F001          	movff	postinc2,___xxtofl@val
  6991   0033BC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  6992   0033C0  0E00               	movlw	0
  6993   0033C2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  6994   0033C4  0EFF               	movlw	-1
  6995   0033C6  6E03               	movwf	(___xxtofl@val+2)^0,c
  6996   0033C8  6E04               	movwf	(___xxtofl@val+3)^0,c
  6997   0033CA  0E01               	movlw	1
  6998   0033CC  EC20  F01F         	call	___xxtofl
  6999   0033D0  C001  F070         	movff	?___xxtofl,colour_rel@G
  7000   0033D4  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7001   0033D8  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7002   0033DC  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7003                           
  7004                           ;color.c: 117:     float B = vals->B;
  7005   0033E0  EE20 F004          	lfsr	2,4
  7006   0033E4  504B               	movf	colour_rel@vals^0,w,c
  7007   0033E6  26D9               	addwf	fsr2l,f,c
  7008   0033E8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7009   0033EA  22DA               	addwfc	fsr2h,f,c
  7010   0033EC  CFDE F001          	movff	postinc2,___xxtofl@val
  7011   0033F0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7012   0033F4  0E00               	movlw	0
  7013   0033F6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7014   0033F8  0EFF               	movlw	-1
  7015   0033FA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7016   0033FC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7017   0033FE  0E01               	movlw	1
  7018   003400  EC20  F01F         	call	___xxtofl
  7019   003404  C001  F074         	movff	?___xxtofl,colour_rel@B
  7020   003408  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7021   00340C  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7022   003410  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7023                           
  7024                           ;color.c: 118:     float L = vals->L;
  7025   003414  EE20 F006          	lfsr	2,6
  7026   003418  504B               	movf	colour_rel@vals^0,w,c
  7027   00341A  26D9               	addwf	fsr2l,f,c
  7028   00341C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7029   00341E  22DA               	addwfc	fsr2h,f,c
  7030   003420  CFDE F001          	movff	postinc2,___xxtofl@val
  7031   003424  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7032   003428  0E00               	movlw	0
  7033   00342A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7034   00342C  0EFF               	movlw	-1
  7035   00342E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7036   003430  6E04               	movwf	(___xxtofl@val+3)^0,c
  7037   003432  0E01               	movlw	1
  7038   003434  EC20  F01F         	call	___xxtofl
  7039   003438  C001  F060         	movff	?___xxtofl,colour_rel@L
  7040   00343C  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7041   003440  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7042   003444  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7043   003448                     
  7044                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7045   003448  C070  F005         	movff	colour_rel@G,___fladd@a
  7046   00344C  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7047   003450  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7048   003454  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7049   003458  C06C  F001         	movff	colour_rel@R,___fladd@b
  7050   00345C  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7051   003460  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7052   003464  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7053   003468  EC98  F011         	call	___fladd	;wreg free
  7054   00346C  C001  F064         	movff	?___fladd,_colour_rel$2732
  7055   003470  C002  F065         	movff	?___fladd+1,_colour_rel$2732+1
  7056   003474  C003  F066         	movff	?___fladd+2,_colour_rel$2732+2
  7057   003478  C004  F067         	movff	?___fladd+3,_colour_rel$2732+3
  7058   00347C                     
  7059                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7060   00347C  C074  F005         	movff	colour_rel@B,___fladd@a
  7061   003480  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7062   003484  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7063   003488  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7064   00348C  C064  F001         	movff	_colour_rel$2732,___fladd@b
  7065   003490  C065  F002         	movff	_colour_rel$2732+1,___fladd@b+1
  7066   003494  C066  F003         	movff	_colour_rel$2732+2,___fladd@b+2
  7067   003498  C067  F004         	movff	_colour_rel$2732+3,___fladd@b+3
  7068   00349C  EC98  F011         	call	___fladd	;wreg free
  7069   0034A0  C001  F068         	movff	?___fladd,_colour_rel$2733
  7070   0034A4  C002  F069         	movff	?___fladd+1,_colour_rel$2733+1
  7071   0034A8  C003  F06A         	movff	?___fladd+2,_colour_rel$2733+2
  7072   0034AC  C004  F06B         	movff	?___fladd+3,_colour_rel$2733+3
  7073                           
  7074                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7075   0034B0  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7076   0034B4  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7077   0034B8  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7078   0034BC  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7079   0034C0  C060  F005         	movff	colour_rel@L,___fladd@a
  7080   0034C4  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7081   0034C8  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7082   0034CC  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7083   0034D0  C068  F001         	movff	_colour_rel$2733,___fladd@b
  7084   0034D4  C069  F002         	movff	_colour_rel$2733+1,___fladd@b+1
  7085   0034D8  C06A  F003         	movff	_colour_rel$2733+2,___fladd@b+2
  7086   0034DC  C06B  F004         	movff	_colour_rel$2733+3,___fladd@b+3
  7087   0034E0  EC98  F011         	call	___fladd	;wreg free
  7088   0034E4  C001  F036         	movff	?___fladd,___fldiv@a
  7089   0034E8  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7090   0034EC  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7091   0034F0  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7092   0034F4  ECF1  F017         	call	___fldiv	;wreg free
  7093   0034F8  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7094   0034FC  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7095   003500  C032  FFDE         	movff	?___fldiv,postinc2
  7096   003504  C033  FFDE         	movff	?___fldiv+1,postinc2
  7097   003508  C034  FFDE         	movff	?___fldiv+2,postinc2
  7098   00350C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7099   003510                     
  7100                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7101   003510  C070  F005         	movff	colour_rel@G,___fladd@a
  7102   003514  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7103   003518  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7104   00351C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7105   003520  C06C  F001         	movff	colour_rel@R,___fladd@b
  7106   003524  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7107   003528  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7108   00352C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7109   003530  EC98  F011         	call	___fladd	;wreg free
  7110   003534  C001  F064         	movff	?___fladd,_colour_rel$2732
  7111   003538  C002  F065         	movff	?___fladd+1,_colour_rel$2732+1
  7112   00353C  C003  F066         	movff	?___fladd+2,_colour_rel$2732+2
  7113   003540  C004  F067         	movff	?___fladd+3,_colour_rel$2732+3
  7114   003544                     
  7115                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7116   003544  C074  F005         	movff	colour_rel@B,___fladd@a
  7117   003548  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7118   00354C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7119   003550  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7120   003554  C064  F001         	movff	_colour_rel$2732,___fladd@b
  7121   003558  C065  F002         	movff	_colour_rel$2732+1,___fladd@b+1
  7122   00355C  C066  F003         	movff	_colour_rel$2732+2,___fladd@b+2
  7123   003560  C067  F004         	movff	_colour_rel$2732+3,___fladd@b+3
  7124   003564  EC98  F011         	call	___fladd	;wreg free
  7125   003568  C001  F068         	movff	?___fladd,_colour_rel$2733
  7126   00356C  C002  F069         	movff	?___fladd+1,_colour_rel$2733+1
  7127   003570  C003  F06A         	movff	?___fladd+2,_colour_rel$2733+2
  7128   003574  C004  F06B         	movff	?___fladd+3,_colour_rel$2733+3
  7129                           
  7130                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7131   003578  C074  F032         	movff	colour_rel@B,___fldiv@b
  7132   00357C  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7133   003580  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7134   003584  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7135   003588  C060  F005         	movff	colour_rel@L,___fladd@a
  7136   00358C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7137   003590  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7138   003594  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7139   003598  C068  F001         	movff	_colour_rel$2733,___fladd@b
  7140   00359C  C069  F002         	movff	_colour_rel$2733+1,___fladd@b+1
  7141   0035A0  C06A  F003         	movff	_colour_rel$2733+2,___fladd@b+2
  7142   0035A4  C06B  F004         	movff	_colour_rel$2733+3,___fladd@b+3
  7143   0035A8  EC98  F011         	call	___fladd	;wreg free
  7144   0035AC  C001  F036         	movff	?___fladd,___fldiv@a
  7145   0035B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7146   0035B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7147   0035B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7148   0035BC  ECF1  F017         	call	___fldiv	;wreg free
  7149   0035C0  EE20 F008          	lfsr	2,8
  7150   0035C4  504D               	movf	colour_rel@rel^0,w,c
  7151   0035C6  26D9               	addwf	fsr2l,f,c
  7152   0035C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7153   0035CA  22DA               	addwfc	fsr2h,f,c
  7154   0035CC  C032  FFDE         	movff	?___fldiv,postinc2
  7155   0035D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7156   0035D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7157   0035D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7158   0035DC                     
  7159                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7160   0035DC  C070  F005         	movff	colour_rel@G,___fladd@a
  7161   0035E0  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7162   0035E4  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7163   0035E8  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7164   0035EC  C06C  F001         	movff	colour_rel@R,___fladd@b
  7165   0035F0  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7166   0035F4  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7167   0035F8  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7168   0035FC  EC98  F011         	call	___fladd	;wreg free
  7169   003600  C001  F064         	movff	?___fladd,_colour_rel$2732
  7170   003604  C002  F065         	movff	?___fladd+1,_colour_rel$2732+1
  7171   003608  C003  F066         	movff	?___fladd+2,_colour_rel$2732+2
  7172   00360C  C004  F067         	movff	?___fladd+3,_colour_rel$2732+3
  7173   003610                     
  7174                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7175   003610  C074  F005         	movff	colour_rel@B,___fladd@a
  7176   003614  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7177   003618  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7178   00361C  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7179   003620  C064  F001         	movff	_colour_rel$2732,___fladd@b
  7180   003624  C065  F002         	movff	_colour_rel$2732+1,___fladd@b+1
  7181   003628  C066  F003         	movff	_colour_rel$2732+2,___fladd@b+2
  7182   00362C  C067  F004         	movff	_colour_rel$2732+3,___fladd@b+3
  7183   003630  EC98  F011         	call	___fladd	;wreg free
  7184   003634  C001  F068         	movff	?___fladd,_colour_rel$2733
  7185   003638  C002  F069         	movff	?___fladd+1,_colour_rel$2733+1
  7186   00363C  C003  F06A         	movff	?___fladd+2,_colour_rel$2733+2
  7187   003640  C004  F06B         	movff	?___fladd+3,_colour_rel$2733+3
  7188                           
  7189                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7190   003644  C070  F032         	movff	colour_rel@G,___fldiv@b
  7191   003648  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7192   00364C  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7193   003650  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7194   003654  C060  F005         	movff	colour_rel@L,___fladd@a
  7195   003658  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7196   00365C  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7197   003660  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7198   003664  C068  F001         	movff	_colour_rel$2733,___fladd@b
  7199   003668  C069  F002         	movff	_colour_rel$2733+1,___fladd@b+1
  7200   00366C  C06A  F003         	movff	_colour_rel$2733+2,___fladd@b+2
  7201   003670  C06B  F004         	movff	_colour_rel$2733+3,___fladd@b+3
  7202   003674  EC98  F011         	call	___fladd	;wreg free
  7203   003678  C001  F036         	movff	?___fladd,___fldiv@a
  7204   00367C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7205   003680  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7206   003684  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7207   003688  ECF1  F017         	call	___fldiv	;wreg free
  7208   00368C  EE20 F004          	lfsr	2,4
  7209   003690  504D               	movf	colour_rel@rel^0,w,c
  7210   003692  26D9               	addwf	fsr2l,f,c
  7211   003694  504E               	movf	(colour_rel@rel+1)^0,w,c
  7212   003696  22DA               	addwfc	fsr2h,f,c
  7213   003698  C032  FFDE         	movff	?___fldiv,postinc2
  7214   00369C  C033  FFDE         	movff	?___fldiv+1,postinc2
  7215   0036A0  C034  FFDE         	movff	?___fldiv+2,postinc2
  7216   0036A4  C035  FFDE         	movff	?___fldiv+3,postinc2
  7217   0036A8  0012               	return		;funcret
  7218   0036AA                     __end_of_colour_rel:
  7219                           	callstack 0
  7220                           
  7221 ;; *************** function _color_click_init *****************
  7222 ;; Defined at:
  7223 ;;		line 7 in file "color.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;		None
  7226 ;; Auto vars:     Size  Location     Type
  7227 ;;		None
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      void 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0, cstack
  7232 ;; Tracked objects:
  7233 ;;		On entry : 0/0
  7234 ;;		On exit  : 0/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7239 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7240 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7241 ;;Total ram usage:        1 bytes
  7242 ;; Hardware stack levels used: 1
  7243 ;; Hardware stack levels required when called: 4
  7244 ;; This function calls:
  7245 ;;		_I2C_2_Master_Init
  7246 ;;		_color_writetoaddr
  7247 ;; This function is called by:
  7248 ;;		_main
  7249 ;; This function uses a non-reentrant model
  7250 ;;
  7251                           
  7252                           	psect	text32
  7253   005122                     __ptext32:
  7254                           	callstack 0
  7255   005122                     _color_click_init:
  7256                           	callstack 26
  7257   005122                     
  7258                           ;color.c: 10:     I2C_2_Master_Init();
  7259   005122  EC66  F02B         	call	_I2C_2_Master_Init	;wreg free
  7260   005126                     
  7261                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  7262   005126  0E01               	movlw	1
  7263   005128  6E03               	movwf	color_writetoaddr@value^0,c
  7264   00512A  0E00               	movlw	0
  7265   00512C  ECA2  F02B         	call	_color_writetoaddr
  7266   005130                     
  7267                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7268   005130  0E3F               	movlw	63
  7269   005132  6E05               	movwf	??_color_click_init^0,c
  7270   005134  0E55               	movlw	85
  7271   005136                     u5427:
  7272   005136  2EE8               	decfsz	wreg,f,c
  7273   005138  D7FE               	bra	u5427
  7274   00513A  2E05               	decfsz	??_color_click_init^0,f,c
  7275   00513C  D7FC               	bra	u5427
  7276   00513E  F000               	nop	
  7277   005140                     
  7278                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  7279   005140  0E03               	movlw	3
  7280   005142  6E03               	movwf	color_writetoaddr@value^0,c
  7281   005144  0E00               	movlw	0
  7282   005146  ECA2  F02B         	call	_color_writetoaddr
  7283   00514A                     
  7284                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  7285   00514A  0ED5               	movlw	213
  7286   00514C  6E03               	movwf	color_writetoaddr@value^0,c
  7287   00514E  0E01               	movlw	1
  7288   005150  ECA2  F02B         	call	_color_writetoaddr
  7289   005154                     
  7290                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  7291   005154  0E00               	movlw	0
  7292   005156  6E03               	movwf	color_writetoaddr@value^0,c
  7293   005158  0E0F               	movlw	15
  7294   00515A  ECA2  F02B         	call	_color_writetoaddr
  7295   00515E                     
  7296                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  7297   00515E  9287               	bcf	135,1,c	;volatile
  7298   005160                     
  7299                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  7300   005160  9881               	bcf	129,4,c	;volatile
  7301   005162                     
  7302                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  7303   005162  9E86               	bcf	134,7,c	;volatile
  7304   005164                     
  7305                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  7306   005164  9684               	bcf	132,3,c	;volatile
  7307   005166                     
  7308                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  7309   005166  9884               	bcf	132,4,c	;volatile
  7310   005168                     
  7311                           ;color.c: 28:     LATGbits.LATG1=0;
  7312   005168  927F               	bcf	127,1,c	;volatile
  7313   00516A                     
  7314                           ;color.c: 29:     LATFbits.LATF7=0;
  7315   00516A  9E7E               	bcf	126,7,c	;volatile
  7316   00516C                     
  7317                           ;color.c: 30:     LATAbits.LATA4=0;
  7318   00516C  9879               	bcf	121,4,c	;volatile
  7319   00516E                     
  7320                           ;color.c: 32:     LATDbits.LATD3=0;
  7321   00516E  967C               	bcf	124,3,c	;volatile
  7322   005170                     
  7323                           ;color.c: 33:     LATDbits.LATD4=0;
  7324   005170  987C               	bcf	124,4,c	;volatile
  7325   005172  0012               	return		;funcret
  7326   005174                     __end_of_color_click_init:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _color_writetoaddr *****************
  7330 ;; Defined at:
  7331 ;;		line 41 in file "color.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  address         1    wreg     unsigned char 
  7334 ;;  value           1    2[COMRAM] unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  address         1    3[COMRAM] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;Total ram usage:        2 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 3
  7353 ;; This function calls:
  7354 ;;		_I2C_2_Master_Start
  7355 ;;		_I2C_2_Master_Stop
  7356 ;;		_I2C_2_Master_Write
  7357 ;; This function is called by:
  7358 ;;		_color_click_init
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text33
  7363   005744                     __ptext33:
  7364                           	callstack 0
  7365   005744                     _color_writetoaddr:
  7366                           	callstack 26
  7367                           
  7368                           ;incstack = 0
  7369                           ;color_writetoaddr@address stored from wreg
  7370   005744  6E04               	movwf	color_writetoaddr@address^0,c
  7371   005746                     
  7372                           ;color.c: 42:     I2C_2_Master_Start();
  7373   005746  ECDD  F02B         	call	_I2C_2_Master_Start	;wreg free
  7374                           
  7375                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  7376   00574A  0E52               	movlw	82
  7377   00574C  ECCD  F02B         	call	_I2C_2_Master_Write
  7378                           
  7379                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  7380   005750  5004               	movf	color_writetoaddr@address^0,w,c
  7381   005752  0980               	iorlw	128
  7382   005754  ECCD  F02B         	call	_I2C_2_Master_Write
  7383                           
  7384                           ;color.c: 45:     I2C_2_Master_Write(value);
  7385   005758  5003               	movf	color_writetoaddr@value^0,w,c
  7386   00575A  ECCD  F02B         	call	_I2C_2_Master_Write
  7387                           
  7388                           ;color.c: 46:     I2C_2_Master_Stop();
  7389   00575E  ECD8  F02B         	call	_I2C_2_Master_Stop	;wreg free
  7390   005762  0012               	return		;funcret
  7391   005764                     __end_of_color_writetoaddr:
  7392                           	callstack 0
  7393                           
  7394 ;; *************** function _I2C_2_Master_Write *****************
  7395 ;; Defined at:
  7396 ;;		line 45 in file "i2c.c"
  7397 ;; Parameters:    Size  Location     Type
  7398 ;;  data_byte       1    wreg     unsigned char 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  data_byte       1    1[COMRAM] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;                  1    wreg      void 
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0, cstack
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;Total ram usage:        1 bytes
  7415 ;; Hardware stack levels used: 1
  7416 ;; Hardware stack levels required when called: 2
  7417 ;; This function calls:
  7418 ;;		_I2C_2_Master_Idle
  7419 ;; This function is called by:
  7420 ;;		_color_writetoaddr
  7421 ;;		_color_read_lum
  7422 ;;		_color_read_Red
  7423 ;;		_color_read_Green
  7424 ;;		_color_read_Blue
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text34
  7429   00579A                     __ptext34:
  7430                           	callstack 0
  7431   00579A                     _I2C_2_Master_Write:
  7432                           	callstack 26
  7433                           
  7434                           ;incstack = 0
  7435                           ;I2C_2_Master_Write@data_byte stored from wreg
  7436   00579A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  7437   00579C                     
  7438                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7439   00579C  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7440   0057A0                     
  7441                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7442   0057A0  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7443   0057A4  0012               	return		;funcret
  7444   0057A6                     __end_of_I2C_2_Master_Write:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function _I2C_2_Master_Stop *****************
  7448 ;; Defined at:
  7449 ;;		line 39 in file "i2c.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;		None
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;Total ram usage:        0 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 2
  7470 ;; This function calls:
  7471 ;;		_I2C_2_Master_Idle
  7472 ;; This function is called by:
  7473 ;;		_color_writetoaddr
  7474 ;;		_color_read_lum
  7475 ;;		_color_read_Red
  7476 ;;		_color_read_Green
  7477 ;;		_color_read_Blue
  7478 ;; This function uses a non-reentrant model
  7479 ;;
  7480                           
  7481                           	psect	text35
  7482   0057B0                     __ptext35:
  7483                           	callstack 0
  7484   0057B0                     _I2C_2_Master_Stop:
  7485                           	callstack 26
  7486   0057B0                     
  7487                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7488   0057B0  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7489   0057B4                     
  7490                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7491   0057B4  010E               	movlb	14	; () banked
  7492   0057B6  85DA               	bsf	218,2,b	;volatile
  7493   0057B8                     
  7494                           ; BSR set to: 14
  7495   0057B8  0012               	return		;funcret
  7496   0057BA                     __end_of_I2C_2_Master_Stop:
  7497                           	callstack 0
  7498                           
  7499 ;; *************** function _I2C_2_Master_Start *****************
  7500 ;; Defined at:
  7501 ;;		line 27 in file "i2c.c"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;		None
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;Total ram usage:        0 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 2
  7522 ;; This function calls:
  7523 ;;		_I2C_2_Master_Idle
  7524 ;; This function is called by:
  7525 ;;		_color_writetoaddr
  7526 ;;		_color_read_lum
  7527 ;;		_color_read_Red
  7528 ;;		_color_read_Green
  7529 ;;		_color_read_Blue
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           	psect	text36
  7534   0057BA                     __ptext36:
  7535                           	callstack 0
  7536   0057BA                     _I2C_2_Master_Start:
  7537                           	callstack 26
  7538   0057BA                     
  7539                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7540   0057BA  EC7B  F02B         	call	_I2C_2_Master_Idle	;wreg free
  7541   0057BE                     
  7542                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7543   0057BE  010E               	movlb	14	; () banked
  7544   0057C0  81DA               	bsf	218,0,b	;volatile
  7545   0057C2                     
  7546                           ; BSR set to: 14
  7547   0057C2  0012               	return		;funcret
  7548   0057C4                     __end_of_I2C_2_Master_Start:
  7549                           	callstack 0
  7550                           
  7551 ;; *************** function _I2C_2_Master_Idle *****************
  7552 ;; Defined at:
  7553 ;;		line 22 in file "i2c.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;Total ram usage:        1 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 1
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_I2C_2_Master_Start
  7578 ;;		_I2C_2_Master_RepStart
  7579 ;;		_I2C_2_Master_Stop
  7580 ;;		_I2C_2_Master_Write
  7581 ;;		_I2C_2_Master_Read
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text37
  7586   0056F6                     __ptext37:
  7587                           	callstack 0
  7588   0056F6                     _I2C_2_Master_Idle:
  7589                           	callstack 26
  7590   0056F6                     l137:
  7591   0056F6  010E               	movlb	14	; () banked
  7592   0056F8  B5D8               	btfsc	216,2,b	;volatile
  7593   0056FA  EF81  F02B         	goto	u4121
  7594   0056FE  EF83  F02B         	goto	u4120
  7595   005702                     u4121:
  7596   005702  EF7B  F02B         	goto	l137
  7597   005706                     u4120:
  7598   005706                     
  7599                           ; BSR set to: 14
  7600   005706  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7601   00570A  0E1F               	movlw	31
  7602   00570C  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  7603   00570E  A4D8               	btfss	status,2,c
  7604   005710  EF8C  F02B         	goto	u4131
  7605   005714  EF8E  F02B         	goto	u4130
  7606   005718                     u4131:
  7607   005718  EF7B  F02B         	goto	l137
  7608   00571C                     u4130:
  7609   00571C                     
  7610                           ; BSR set to: 14
  7611   00571C  0012               	return		;funcret
  7612   00571E                     __end_of_I2C_2_Master_Idle:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _I2C_2_Master_Init *****************
  7616 ;; Defined at:
  7617 ;;		line 4 in file "i2c.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  1    wreg      void 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;Total ram usage:        0 bytes
  7636 ;; Hardware stack levels used: 1
  7637 ;; Hardware stack levels required when called: 1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		_color_click_init
  7642 ;;		_main
  7643 ;; This function uses a non-reentrant model
  7644 ;;
  7645                           
  7646                           	psect	text38
  7647   0056CC                     __ptext38:
  7648                           	callstack 0
  7649   0056CC                     _I2C_2_Master_Init:
  7650                           	callstack 28
  7651   0056CC                     
  7652                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7653   0056CC  010E               	movlb	14	; () banked
  7654   0056CE  51D9               	movf	217,w,b	;volatile
  7655   0056D0  0BF0               	andlw	-16
  7656   0056D2  0908               	iorlw	8
  7657   0056D4  6FD9               	movwf	217,b	;volatile
  7658   0056D6                     
  7659                           ; BSR set to: 14
  7660                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7661   0056D6  8BD9               	bsf	217,5,b	;volatile
  7662                           
  7663                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7664   0056D8  0E9F               	movlw	159
  7665   0056DA  6FD6               	movwf	214,b	;volatile
  7666   0056DC                     
  7667                           ; BSR set to: 14
  7668                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7669   0056DC  8A84               	bsf	132,5,c	;volatile
  7670   0056DE                     
  7671                           ; BSR set to: 14
  7672                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7673   0056DE  8C84               	bsf	132,6,c	;volatile
  7674   0056E0                     
  7675                           ; BSR set to: 14
  7676                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7677   0056E0  9BA7               	bcf	167,5,b	;volatile
  7678   0056E2                     
  7679                           ; BSR set to: 14
  7680                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7681   0056E2  9DA7               	bcf	167,6,b	;volatile
  7682                           
  7683                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7684   0056E4  0E1D               	movlw	29
  7685   0056E6  6F1D               	movwf	29,b	;volatile
  7686                           
  7687                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7688   0056E8  0E1E               	movlw	30
  7689   0056EA  6F1C               	movwf	28,b	;volatile
  7690                           
  7691                           ;i2c.c: 18:   RD5PPS=0x1C;
  7692   0056EC  0E1C               	movlw	28
  7693   0056EE  6F6F               	movwf	111,b	;volatile
  7694                           
  7695                           ;i2c.c: 19:   RD6PPS=0x1B;
  7696   0056F0  0E1B               	movlw	27
  7697   0056F2  6F70               	movwf	112,b	;volatile
  7698   0056F4                     
  7699                           ; BSR set to: 14
  7700   0056F4  0012               	return		;funcret
  7701   0056F6                     __end_of_I2C_2_Master_Init:
  7702                           	callstack 0
  7703                           
  7704 ;; *************** function _YellowMove *****************
  7705 ;; Defined at:
  7706 ;;		line 252 in file "dc_motor.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7709 ;;		 -> motorL(9), 
  7710 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7711 ;;		 -> motorR(9), 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;                  1    wreg      void 
  7716 ;; Registers used:
  7717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7723 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;Total ram usage:        4 bytes
  7728 ;; Hardware stack levels used: 1
  7729 ;; Hardware stack levels required when called: 5
  7730 ;; This function calls:
  7731 ;;		_reverseDetect
  7732 ;;		_reverseOneBlock
  7733 ;;		_turnRight45
  7734 ;; This function is called by:
  7735 ;;		_main
  7736 ;; This function uses a non-reentrant model
  7737 ;;
  7738                           
  7739                           	psect	text39
  7740   005174                     __ptext39:
  7741                           	callstack 0
  7742   005174                     _YellowMove:
  7743                           	callstack 25
  7744   005174                     
  7745                           ;dc_motor.c: 253:     reverseDetect(&motorL, &motorR);
  7746   005174  0E71               	movlw	low _motorL
  7747   005176  6E19               	movwf	reverseDetect@mL^0,c
  7748   005178  0E01               	movlw	high _motorL
  7749   00517A  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7750   00517C  0E68               	movlw	low _motorR
  7751   00517E  6E1B               	movwf	reverseDetect@mR^0,c
  7752   005180  0E01               	movlw	high _motorR
  7753   005182  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7754   005184  EC10  F028         	call	_reverseDetect	;wreg free
  7755                           
  7756                           ;dc_motor.c: 255:     reverseOneBlock(&motorL, &motorR);
  7757   005188  0E71               	movlw	low _motorL
  7758   00518A  6E19               	movwf	reverseOneBlock@mL^0,c
  7759   00518C  0E01               	movlw	high _motorL
  7760   00518E  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  7761   005190  0E68               	movlw	low _motorR
  7762   005192  6E1B               	movwf	reverseOneBlock@mR^0,c
  7763   005194  0E01               	movlw	high _motorR
  7764   005196  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  7765   005198  EC5C  F027         	call	_reverseOneBlock	;wreg free
  7766                           
  7767                           ;dc_motor.c: 257:     turnRight45(&motorL, &motorR);
  7768   00519C  0E71               	movlw	low _motorL
  7769   00519E  6E19               	movwf	turnRight45@mL^0,c
  7770   0051A0  0E01               	movlw	high _motorL
  7771   0051A2  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7772   0051A4  0E68               	movlw	low _motorR
  7773   0051A6  6E1B               	movwf	turnRight45@mR^0,c
  7774   0051A8  0E01               	movlw	high _motorR
  7775   0051AA  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7776   0051AC  ECE3  F027         	call	_turnRight45	;wreg free
  7777                           
  7778                           ;dc_motor.c: 258:     turnRight45(&motorL, &motorR);
  7779   0051B0  0E71               	movlw	low _motorL
  7780   0051B2  6E19               	movwf	turnRight45@mL^0,c
  7781   0051B4  0E01               	movlw	high _motorL
  7782   0051B6  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7783   0051B8  0E68               	movlw	low _motorR
  7784   0051BA  6E1B               	movwf	turnRight45@mR^0,c
  7785   0051BC  0E01               	movlw	high _motorR
  7786   0051BE  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7787   0051C0  ECE3  F027         	call	_turnRight45	;wreg free
  7788   0051C4  0012               	return		;funcret
  7789   0051C6                     __end_of_YellowMove:
  7790                           	callstack 0
  7791                           
  7792 ;; *************** function _RetryMove *****************
  7793 ;; Defined at:
  7794 ;;		line 289 in file "dc_motor.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  7797 ;;		 -> motorL(9), 
  7798 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  7799 ;;		 -> motorR(9), 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7814 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7815 ;;Total ram usage:        6 bytes
  7816 ;; Hardware stack levels used: 1
  7817 ;; Hardware stack levels required when called: 4
  7818 ;; This function calls:
  7819 ;;		_fullSpeedAhead
  7820 ;;		_fullSpeedBack
  7821 ;;		_stop
  7822 ;; This function is called by:
  7823 ;;		_main
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text40
  7828   004BA8                     __ptext40:
  7829                           	callstack 0
  7830   004BA8                     _RetryMove:
  7831                           	callstack 26
  7832   004BA8                     
  7833                           ;dc_motor.c: 290:     fullSpeedBack(mL,mR);
  7834   004BA8  C019  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  7835   004BAC  C01A  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  7836   004BB0  C01B  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  7837   004BB4  C01C  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  7838   004BB8  EC45  F025         	call	_fullSpeedBack	;wreg free
  7839   004BBC                     
  7840                           ;dc_motor.c: 291:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7841   004BBC  0E29               	movlw	41
  7842   004BBE  6E1E               	movwf	(??_RetryMove+1)^0,c
  7843   004BC0  0E96               	movlw	150
  7844   004BC2  6E1D               	movwf	??_RetryMove^0,c
  7845   004BC4  0E7F               	movlw	127
  7846   004BC6                     u5437:
  7847   004BC6  2EE8               	decfsz	wreg,f,c
  7848   004BC8  D7FE               	bra	u5437
  7849   004BCA  2E1D               	decfsz	??_RetryMove^0,f,c
  7850   004BCC  D7FC               	bra	u5437
  7851   004BCE  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  7852   004BD0  D7FA               	bra	u5437
  7853   004BD2  F000               	nop	
  7854   004BD4                     
  7855                           ;dc_motor.c: 292:     stop(&motorL, &motorR);
  7856   004BD4  0E71               	movlw	low _motorL
  7857   004BD6  6E14               	movwf	stop@mL^0,c
  7858   004BD8  0E01               	movlw	high _motorL
  7859   004BDA  6E15               	movwf	(stop@mL+1)^0,c
  7860   004BDC  0E68               	movlw	low _motorR
  7861   004BDE  6E16               	movwf	stop@mR^0,c
  7862   004BE0  0E01               	movlw	high _motorR
  7863   004BE2  6E17               	movwf	(stop@mR+1)^0,c
  7864   004BE4  EC52  F026         	call	_stop	;wreg free
  7865   004BE8                     
  7866                           ;dc_motor.c: 293:     fullSpeedAhead(mL,mR);
  7867   004BE8  C019  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  7868   004BEC  C01A  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  7869   004BF0  C01B  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  7870   004BF4  C01C  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  7871   004BF8  ECAF  F024         	call	_fullSpeedAhead	;wreg free
  7872   004BFC                     
  7873                           ;dc_motor.c: 294:     _delay((unsigned long)((500)*(64000000/4000.0)));
  7874   004BFC  0E29               	movlw	41
  7875   004BFE  6E1E               	movwf	(??_RetryMove+1)^0,c
  7876   004C00  0E96               	movlw	150
  7877   004C02  6E1D               	movwf	??_RetryMove^0,c
  7878   004C04  0E7F               	movlw	127
  7879   004C06                     u5447:
  7880   004C06  2EE8               	decfsz	wreg,f,c
  7881   004C08  D7FE               	bra	u5447
  7882   004C0A  2E1D               	decfsz	??_RetryMove^0,f,c
  7883   004C0C  D7FC               	bra	u5447
  7884   004C0E  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  7885   004C10  D7FA               	bra	u5447
  7886   004C12  F000               	nop	
  7887                           
  7888                           ;dc_motor.c: 295:     stop(&motorL, &motorR);
  7889   004C14  0E71               	movlw	low _motorL
  7890   004C16  6E14               	movwf	stop@mL^0,c
  7891   004C18  0E01               	movlw	high _motorL
  7892   004C1A  6E15               	movwf	(stop@mL+1)^0,c
  7893   004C1C  0E68               	movlw	low _motorR
  7894   004C1E  6E16               	movwf	stop@mR^0,c
  7895   004C20  0E01               	movlw	high _motorR
  7896   004C22  6E17               	movwf	(stop@mR+1)^0,c
  7897   004C24  EC52  F026         	call	_stop	;wreg free
  7898   004C28  0012               	return		;funcret
  7899   004C2A                     __end_of_RetryMove:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function _RedMove *****************
  7903 ;; Defined at:
  7904 ;;		line 226 in file "dc_motor.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7907 ;;		 -> motorL(9), 
  7908 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7909 ;;		 -> motorR(9), 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;		None
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  1    wreg      void 
  7914 ;; Registers used:
  7915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;Total ram usage:        4 bytes
  7926 ;; Hardware stack levels used: 1
  7927 ;; Hardware stack levels required when called: 5
  7928 ;; This function calls:
  7929 ;;		_reverseDetect
  7930 ;;		_turnRight45
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           	psect	text41
  7937   0055E8                     __ptext41:
  7938                           	callstack 0
  7939   0055E8                     _RedMove:
  7940                           	callstack 25
  7941   0055E8                     
  7942                           ;dc_motor.c: 227:     reverseDetect(&motorL, &motorR);
  7943   0055E8  0E71               	movlw	low _motorL
  7944   0055EA  6E19               	movwf	reverseDetect@mL^0,c
  7945   0055EC  0E01               	movlw	high _motorL
  7946   0055EE  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7947   0055F0  0E68               	movlw	low _motorR
  7948   0055F2  6E1B               	movwf	reverseDetect@mR^0,c
  7949   0055F4  0E01               	movlw	high _motorR
  7950   0055F6  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7951   0055F8  EC10  F028         	call	_reverseDetect	;wreg free
  7952                           
  7953                           ;dc_motor.c: 229:     turnRight45(&motorL, &motorR);
  7954   0055FC  0E71               	movlw	low _motorL
  7955   0055FE  6E19               	movwf	turnRight45@mL^0,c
  7956   005600  0E01               	movlw	high _motorL
  7957   005602  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7958   005604  0E68               	movlw	low _motorR
  7959   005606  6E1B               	movwf	turnRight45@mR^0,c
  7960   005608  0E01               	movlw	high _motorR
  7961   00560A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7962   00560C  ECE3  F027         	call	_turnRight45	;wreg free
  7963                           
  7964                           ;dc_motor.c: 230:     turnRight45(&motorL, &motorR);
  7965   005610  0E71               	movlw	low _motorL
  7966   005612  6E19               	movwf	turnRight45@mL^0,c
  7967   005614  0E01               	movlw	high _motorL
  7968   005616  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7969   005618  0E68               	movlw	low _motorR
  7970   00561A  6E1B               	movwf	turnRight45@mR^0,c
  7971   00561C  0E01               	movlw	high _motorR
  7972   00561E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7973   005620  ECE3  F027         	call	_turnRight45	;wreg free
  7974   005624  0012               	return		;funcret
  7975   005626                     __end_of_RedMove:
  7976                           	callstack 0
  7977                           
  7978 ;; *************** function _PinkMove *****************
  7979 ;; Defined at:
  7980 ;;		line 262 in file "dc_motor.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7983 ;;		 -> motorL(9), 
  7984 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7985 ;;		 -> motorR(9), 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7997 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;Total ram usage:        4 bytes
  8002 ;; Hardware stack levels used: 1
  8003 ;; Hardware stack levels required when called: 5
  8004 ;; This function calls:
  8005 ;;		_reverseDetect
  8006 ;;		_reverseOneBlock
  8007 ;;		_turnLeft45
  8008 ;; This function is called by:
  8009 ;;		_main
  8010 ;; This function uses a non-reentrant model
  8011 ;;
  8012                           
  8013                           	psect	text42
  8014   0051C6                     __ptext42:
  8015                           	callstack 0
  8016   0051C6                     _PinkMove:
  8017                           	callstack 25
  8018   0051C6                     
  8019                           ;dc_motor.c: 263:     reverseDetect(&motorL, &motorR);
  8020   0051C6  0E71               	movlw	low _motorL
  8021   0051C8  6E19               	movwf	reverseDetect@mL^0,c
  8022   0051CA  0E01               	movlw	high _motorL
  8023   0051CC  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8024   0051CE  0E68               	movlw	low _motorR
  8025   0051D0  6E1B               	movwf	reverseDetect@mR^0,c
  8026   0051D2  0E01               	movlw	high _motorR
  8027   0051D4  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8028   0051D6  EC10  F028         	call	_reverseDetect	;wreg free
  8029                           
  8030                           ;dc_motor.c: 265:     reverseOneBlock(&motorL, &motorR);
  8031   0051DA  0E71               	movlw	low _motorL
  8032   0051DC  6E19               	movwf	reverseOneBlock@mL^0,c
  8033   0051DE  0E01               	movlw	high _motorL
  8034   0051E0  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  8035   0051E2  0E68               	movlw	low _motorR
  8036   0051E4  6E1B               	movwf	reverseOneBlock@mR^0,c
  8037   0051E6  0E01               	movlw	high _motorR
  8038   0051E8  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  8039   0051EA  EC5C  F027         	call	_reverseOneBlock	;wreg free
  8040                           
  8041                           ;dc_motor.c: 267:     turnLeft45(&motorL, &motorR);
  8042   0051EE  0E71               	movlw	low _motorL
  8043   0051F0  6E19               	movwf	turnLeft45@mL^0,c
  8044   0051F2  0E01               	movlw	high _motorL
  8045   0051F4  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8046   0051F6  0E68               	movlw	low _motorR
  8047   0051F8  6E1B               	movwf	turnLeft45@mR^0,c
  8048   0051FA  0E01               	movlw	high _motorR
  8049   0051FC  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8050   0051FE  EC89  F027         	call	_turnLeft45	;wreg free
  8051                           
  8052                           ;dc_motor.c: 268:     turnLeft45(&motorL, &motorR);
  8053   005202  0E71               	movlw	low _motorL
  8054   005204  6E19               	movwf	turnLeft45@mL^0,c
  8055   005206  0E01               	movlw	high _motorL
  8056   005208  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8057   00520A  0E68               	movlw	low _motorR
  8058   00520C  6E1B               	movwf	turnLeft45@mR^0,c
  8059   00520E  0E01               	movlw	high _motorR
  8060   005210  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8061   005212  EC89  F027         	call	_turnLeft45	;wreg free
  8062   005216  0012               	return		;funcret
  8063   005218                     __end_of_PinkMove:
  8064                           	callstack 0
  8065                           
  8066 ;; *************** function _reverseOneBlock *****************
  8067 ;; Defined at:
  8068 ;;		line 202 in file "dc_motor.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8071 ;;		 -> motorL(9), 
  8072 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8073 ;;		 -> motorR(9), 
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8089 ;;Total ram usage:        6 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 4
  8092 ;; This function calls:
  8093 ;;		_fullSpeedBack
  8094 ;;		_stop
  8095 ;; This function is called by:
  8096 ;;		_YellowMove
  8097 ;;		_PinkMove
  8098 ;; This function uses a non-reentrant model
  8099 ;;
  8100                           
  8101                           	psect	text43
  8102   004EB8                     __ptext43:
  8103                           	callstack 0
  8104   004EB8                     _reverseOneBlock:
  8105                           	callstack 25
  8106   004EB8                     
  8107                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  8108   004EB8  C019  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  8109   004EBC  C01A  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  8110   004EC0  C01B  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  8111   004EC4  C01C  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  8112   004EC8  EC45  F025         	call	_fullSpeedBack	;wreg free
  8113   004ECC                     
  8114                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8115   004ECC  0E52               	movlw	82
  8116   004ECE  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  8117   004ED0  0E2B               	movlw	43
  8118   004ED2  6E1D               	movwf	??_reverseOneBlock^0,c
  8119   004ED4  0E00               	movlw	0
  8120   004ED6                     u5457:
  8121   004ED6  2EE8               	decfsz	wreg,f,c
  8122   004ED8  D7FE               	bra	u5457
  8123   004EDA  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  8124   004EDC  D7FC               	bra	u5457
  8125   004EDE  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8126   004EE0  D7FA               	bra	u5457
  8127   004EE2  D000               	nop2	
  8128   004EE4                     
  8129                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  8130   004EE4  0E71               	movlw	low _motorL
  8131   004EE6  6E14               	movwf	stop@mL^0,c
  8132   004EE8  0E01               	movlw	high _motorL
  8133   004EEA  6E15               	movwf	(stop@mL+1)^0,c
  8134   004EEC  0E68               	movlw	low _motorR
  8135   004EEE  6E16               	movwf	stop@mR^0,c
  8136   004EF0  0E01               	movlw	high _motorR
  8137   004EF2  6E17               	movwf	(stop@mR+1)^0,c
  8138   004EF4  EC52  F026         	call	_stop	;wreg free
  8139                           
  8140                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8141   004EF8  0E52               	movlw	82
  8142   004EFA  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  8143   004EFC  0E2B               	movlw	43
  8144   004EFE  6E1D               	movwf	??_reverseOneBlock^0,c
  8145   004F00  0E00               	movlw	0
  8146   004F02                     u5467:
  8147   004F02  2EE8               	decfsz	wreg,f,c
  8148   004F04  D7FE               	bra	u5467
  8149   004F06  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  8150   004F08  D7FC               	bra	u5467
  8151   004F0A  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  8152   004F0C  D7FA               	bra	u5467
  8153   004F0E  D000               	nop2	
  8154   004F10  0012               	return		;funcret
  8155   004F12                     __end_of_reverseOneBlock:
  8156                           	callstack 0
  8157                           
  8158 ;; *************** function _OrangeMove *****************
  8159 ;; Defined at:
  8160 ;;		line 272 in file "dc_motor.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8163 ;;		 -> motorL(9), 
  8164 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8165 ;;		 -> motorR(9), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;		None
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      void 
  8170 ;; Registers used:
  8171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8177 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8180 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;Total ram usage:        4 bytes
  8182 ;; Hardware stack levels used: 1
  8183 ;; Hardware stack levels required when called: 5
  8184 ;; This function calls:
  8185 ;;		_reverseDetect
  8186 ;;		_turnRight45
  8187 ;; This function is called by:
  8188 ;;		_main
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           	psect	text44
  8193   005218                     __ptext44:
  8194                           	callstack 0
  8195   005218                     _OrangeMove:
  8196                           	callstack 25
  8197   005218                     
  8198                           ;dc_motor.c: 273:     reverseDetect(&motorL, &motorR);
  8199   005218  0E71               	movlw	low _motorL
  8200   00521A  6E19               	movwf	reverseDetect@mL^0,c
  8201   00521C  0E01               	movlw	high _motorL
  8202   00521E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8203   005220  0E68               	movlw	low _motorR
  8204   005222  6E1B               	movwf	reverseDetect@mR^0,c
  8205   005224  0E01               	movlw	high _motorR
  8206   005226  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8207   005228  EC10  F028         	call	_reverseDetect	;wreg free
  8208                           
  8209                           ;dc_motor.c: 275:     turnRight45(&motorL, &motorR);
  8210   00522C  0E71               	movlw	low _motorL
  8211   00522E  6E19               	movwf	turnRight45@mL^0,c
  8212   005230  0E01               	movlw	high _motorL
  8213   005232  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8214   005234  0E68               	movlw	low _motorR
  8215   005236  6E1B               	movwf	turnRight45@mR^0,c
  8216   005238  0E01               	movlw	high _motorR
  8217   00523A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8218   00523C  ECE3  F027         	call	_turnRight45	;wreg free
  8219                           
  8220                           ;dc_motor.c: 276:     turnRight45(&motorL, &motorR);
  8221   005240  0E71               	movlw	low _motorL
  8222   005242  6E19               	movwf	turnRight45@mL^0,c
  8223   005244  0E01               	movlw	high _motorL
  8224   005246  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8225   005248  0E68               	movlw	low _motorR
  8226   00524A  6E1B               	movwf	turnRight45@mR^0,c
  8227   00524C  0E01               	movlw	high _motorR
  8228   00524E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8229   005250  ECE3  F027         	call	_turnRight45	;wreg free
  8230                           
  8231                           ;dc_motor.c: 277:     turnRight45(&motorL, &motorR);
  8232   005254  0E71               	movlw	low _motorL
  8233   005256  6E19               	movwf	turnRight45@mL^0,c
  8234   005258  0E01               	movlw	high _motorL
  8235   00525A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8236   00525C  0E68               	movlw	low _motorR
  8237   00525E  6E1B               	movwf	turnRight45@mR^0,c
  8238   005260  0E01               	movlw	high _motorR
  8239   005262  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8240   005264  ECE3  F027         	call	_turnRight45	;wreg free
  8241   005268  0012               	return		;funcret
  8242   00526A                     __end_of_OrangeMove:
  8243                           	callstack 0
  8244                           
  8245 ;; *************** function _LightBlueMove *****************
  8246 ;; Defined at:
  8247 ;;		line 281 in file "dc_motor.c"
  8248 ;; Parameters:    Size  Location     Type
  8249 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8250 ;;		 -> motorL(9), 
  8251 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8252 ;;		 -> motorR(9), 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;		None
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  1    wreg      void 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        4 bytes
  8269 ;; Hardware stack levels used: 1
  8270 ;; Hardware stack levels required when called: 5
  8271 ;; This function calls:
  8272 ;;		_reverseDetect
  8273 ;;		_turnLeft45
  8274 ;; This function is called by:
  8275 ;;		_main
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text45
  8280   00526A                     __ptext45:
  8281                           	callstack 0
  8282   00526A                     _LightBlueMove:
  8283                           	callstack 25
  8284   00526A                     
  8285                           ;dc_motor.c: 282:     reverseDetect(&motorL, &motorR);
  8286   00526A  0E71               	movlw	low _motorL
  8287   00526C  6E19               	movwf	reverseDetect@mL^0,c
  8288   00526E  0E01               	movlw	high _motorL
  8289   005270  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8290   005272  0E68               	movlw	low _motorR
  8291   005274  6E1B               	movwf	reverseDetect@mR^0,c
  8292   005276  0E01               	movlw	high _motorR
  8293   005278  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8294   00527A  EC10  F028         	call	_reverseDetect	;wreg free
  8295                           
  8296                           ;dc_motor.c: 284:     turnLeft45(&motorL, &motorR);
  8297   00527E  0E71               	movlw	low _motorL
  8298   005280  6E19               	movwf	turnLeft45@mL^0,c
  8299   005282  0E01               	movlw	high _motorL
  8300   005284  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8301   005286  0E68               	movlw	low _motorR
  8302   005288  6E1B               	movwf	turnLeft45@mR^0,c
  8303   00528A  0E01               	movlw	high _motorR
  8304   00528C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8305   00528E  EC89  F027         	call	_turnLeft45	;wreg free
  8306                           
  8307                           ;dc_motor.c: 285:     turnLeft45(&motorL, &motorR);
  8308   005292  0E71               	movlw	low _motorL
  8309   005294  6E19               	movwf	turnLeft45@mL^0,c
  8310   005296  0E01               	movlw	high _motorL
  8311   005298  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8312   00529A  0E68               	movlw	low _motorR
  8313   00529C  6E1B               	movwf	turnLeft45@mR^0,c
  8314   00529E  0E01               	movlw	high _motorR
  8315   0052A0  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8316   0052A2  EC89  F027         	call	_turnLeft45	;wreg free
  8317                           
  8318                           ;dc_motor.c: 286:     turnLeft45(&motorL, &motorR);
  8319   0052A6  0E71               	movlw	low _motorL
  8320   0052A8  6E19               	movwf	turnLeft45@mL^0,c
  8321   0052AA  0E01               	movlw	high _motorL
  8322   0052AC  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8323   0052AE  0E68               	movlw	low _motorR
  8324   0052B0  6E1B               	movwf	turnLeft45@mR^0,c
  8325   0052B2  0E01               	movlw	high _motorR
  8326   0052B4  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8327   0052B6  EC89  F027         	call	_turnLeft45	;wreg free
  8328   0052BA  0012               	return		;funcret
  8329   0052BC                     __end_of_LightBlueMove:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function _Interrupts_init *****************
  8333 ;; Defined at:
  8334 ;;		line 12 in file "interrupts.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;		None
  8337 ;; Auto vars:     Size  Location     Type
  8338 ;;		None
  8339 ;; Return value:  Size  Location     Type
  8340 ;;                  1    wreg      void 
  8341 ;; Registers used:
  8342 ;;		None
  8343 ;; Tracked objects:
  8344 ;;		On entry : 0/0
  8345 ;;		On exit  : 0/0
  8346 ;;		Unchanged: 0/0
  8347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8352 ;;Total ram usage:        0 bytes
  8353 ;; Hardware stack levels used: 1
  8354 ;; Hardware stack levels required when called: 1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_main
  8359 ;; This function uses a non-reentrant model
  8360 ;;
  8361                           
  8362                           	psect	text46
  8363   0057CA                     __ptext46:
  8364                           	callstack 0
  8365   0057CA                     _Interrupts_init:
  8366                           	callstack 29
  8367   0057CA  0012               	return		;funcret
  8368   0057CC                     __end_of_Interrupts_init:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function _GreenMove *****************
  8372 ;; Defined at:
  8373 ;;		line 234 in file "dc_motor.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8376 ;;		 -> motorL(9), 
  8377 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8378 ;;		 -> motorR(9), 
  8379 ;; Auto vars:     Size  Location     Type
  8380 ;;		None
  8381 ;; Return value:  Size  Location     Type
  8382 ;;                  1    wreg      void 
  8383 ;; Registers used:
  8384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8385 ;; Tracked objects:
  8386 ;;		On entry : 0/0
  8387 ;;		On exit  : 0/0
  8388 ;;		Unchanged: 0/0
  8389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8394 ;;Total ram usage:        4 bytes
  8395 ;; Hardware stack levels used: 1
  8396 ;; Hardware stack levels required when called: 5
  8397 ;; This function calls:
  8398 ;;		_reverseDetect
  8399 ;;		_turnLeft45
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           	psect	text47
  8406   005626                     __ptext47:
  8407                           	callstack 0
  8408   005626                     _GreenMove:
  8409                           	callstack 25
  8410   005626                     
  8411                           ;dc_motor.c: 235:     reverseDetect(&motorL, &motorR);
  8412   005626  0E71               	movlw	low _motorL
  8413   005628  6E19               	movwf	reverseDetect@mL^0,c
  8414   00562A  0E01               	movlw	high _motorL
  8415   00562C  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8416   00562E  0E68               	movlw	low _motorR
  8417   005630  6E1B               	movwf	reverseDetect@mR^0,c
  8418   005632  0E01               	movlw	high _motorR
  8419   005634  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8420   005636  EC10  F028         	call	_reverseDetect	;wreg free
  8421                           
  8422                           ;dc_motor.c: 237:     turnLeft45(&motorL, &motorR);
  8423   00563A  0E71               	movlw	low _motorL
  8424   00563C  6E19               	movwf	turnLeft45@mL^0,c
  8425   00563E  0E01               	movlw	high _motorL
  8426   005640  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8427   005642  0E68               	movlw	low _motorR
  8428   005644  6E1B               	movwf	turnLeft45@mR^0,c
  8429   005646  0E01               	movlw	high _motorR
  8430   005648  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8431   00564A  EC89  F027         	call	_turnLeft45	;wreg free
  8432                           
  8433                           ;dc_motor.c: 238:     turnLeft45(&motorL, &motorR);
  8434   00564E  0E71               	movlw	low _motorL
  8435   005650  6E19               	movwf	turnLeft45@mL^0,c
  8436   005652  0E01               	movlw	high _motorL
  8437   005654  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8438   005656  0E68               	movlw	low _motorR
  8439   005658  6E1B               	movwf	turnLeft45@mR^0,c
  8440   00565A  0E01               	movlw	high _motorR
  8441   00565C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8442   00565E  EC89  F027         	call	_turnLeft45	;wreg free
  8443   005662  0012               	return		;funcret
  8444   005664                     __end_of_GreenMove:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function _turnLeft45 *****************
  8448 ;; Defined at:
  8449 ;;		line 188 in file "dc_motor.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8452 ;;		 -> motorL(9), 
  8453 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8454 ;;		 -> motorR(9), 
  8455 ;; Auto vars:     Size  Location     Type
  8456 ;;		None
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  1    wreg      void 
  8459 ;; Registers used:
  8460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8470 ;;Total ram usage:        6 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; Hardware stack levels required when called: 4
  8473 ;; This function calls:
  8474 ;;		_stop
  8475 ;;		_turnLeft
  8476 ;; This function is called by:
  8477 ;;		_GreenMove
  8478 ;;		_PinkMove
  8479 ;;		_LightBlueMove
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text48
  8484   004F12                     __ptext48:
  8485                           	callstack 0
  8486   004F12                     _turnLeft45:
  8487                           	callstack 25
  8488   004F12                     
  8489                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  8490   004F12  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  8491   004F16  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  8492   004F1A  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  8493   004F1E  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  8494   004F22  EC64  F024         	call	_turnLeft	;wreg free
  8495   004F26                     
  8496                           ;dc_motor.c: 190:     _delay((unsigned long)((130)*(64000000/4000.0)));
  8497   004F26  0E0B               	movlw	11
  8498   004F28  6E1E               	movwf	(??_turnLeft45+1)^0,c
  8499   004F2A  0E8E               	movlw	142
  8500   004F2C  6E1D               	movwf	??_turnLeft45^0,c
  8501   004F2E  0E43               	movlw	67
  8502   004F30                     u5477:
  8503   004F30  2EE8               	decfsz	wreg,f,c
  8504   004F32  D7FE               	bra	u5477
  8505   004F34  2E1D               	decfsz	??_turnLeft45^0,f,c
  8506   004F36  D7FC               	bra	u5477
  8507   004F38  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  8508   004F3A  D7FA               	bra	u5477
  8509   004F3C  F000               	nop	
  8510   004F3E                     
  8511                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  8512   004F3E  0E71               	movlw	low _motorL
  8513   004F40  6E14               	movwf	stop@mL^0,c
  8514   004F42  0E01               	movlw	high _motorL
  8515   004F44  6E15               	movwf	(stop@mL+1)^0,c
  8516   004F46  0E68               	movlw	low _motorR
  8517   004F48  6E16               	movwf	stop@mR^0,c
  8518   004F4A  0E01               	movlw	high _motorR
  8519   004F4C  6E17               	movwf	(stop@mR+1)^0,c
  8520   004F4E  EC52  F026         	call	_stop	;wreg free
  8521                           
  8522                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8523   004F52  0E52               	movlw	82
  8524   004F54  6E1E               	movwf	(??_turnLeft45+1)^0,c
  8525   004F56  0E2B               	movlw	43
  8526   004F58  6E1D               	movwf	??_turnLeft45^0,c
  8527   004F5A  0E00               	movlw	0
  8528   004F5C                     u5487:
  8529   004F5C  2EE8               	decfsz	wreg,f,c
  8530   004F5E  D7FE               	bra	u5487
  8531   004F60  2E1D               	decfsz	??_turnLeft45^0,f,c
  8532   004F62  D7FC               	bra	u5487
  8533   004F64  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  8534   004F66  D7FA               	bra	u5487
  8535   004F68  D000               	nop2	
  8536   004F6A  0012               	return		;funcret
  8537   004F6C                     __end_of_turnLeft45:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function _turnLeft *****************
  8541 ;; Defined at:
  8542 ;;		line 110 in file "dc_motor.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8545 ;;		 -> motorL(9), 
  8546 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8547 ;;		 -> motorR(9), 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;Total ram usage:        5 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 3
  8566 ;; This function calls:
  8567 ;;		_setMotorPWM
  8568 ;; This function is called by:
  8569 ;;		_turnLeft45
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text49
  8574   0048C8                     __ptext49:
  8575                           	callstack 0
  8576   0048C8                     _turnLeft:
  8577                           	callstack 25
  8578   0048C8                     
  8579                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  8580   0048C8  EE20 F001          	lfsr	2,1
  8581   0048CC  5014               	movf	turnLeft@mL^0,w,c
  8582   0048CE  26D9               	addwf	fsr2l,f,c
  8583   0048D0  5015               	movf	(turnLeft@mL+1)^0,w,c
  8584   0048D2  22DA               	addwfc	fsr2h,f,c
  8585   0048D4  0E00               	movlw	0
  8586   0048D6  6EDF               	movwf	indf2,c
  8587                           
  8588                           ;dc_motor.c: 113:     mR->direction =1;
  8589   0048D8  EE20 F001          	lfsr	2,1
  8590   0048DC  5016               	movf	turnLeft@mR^0,w,c
  8591   0048DE  26D9               	addwf	fsr2l,f,c
  8592   0048E0  5017               	movf	(turnLeft@mR+1)^0,w,c
  8593   0048E2  22DA               	addwfc	fsr2h,f,c
  8594   0048E4  0E01               	movlw	1
  8595   0048E6  6EDF               	movwf	indf2,c
  8596                           
  8597                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  8598   0048E8  EF96  F024         	goto	l4544
  8599   0048EC                     l4536:
  8600                           
  8601                           ;dc_motor.c: 117:         mL->power+=10;
  8602   0048EC  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8603   0048F0  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8604   0048F4  0E0A               	movlw	10
  8605   0048F6  26DF               	addwf	indf2,f,c
  8606                           
  8607                           ;dc_motor.c: 118:         mR->power+=10;
  8608   0048F8  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8609   0048FC  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8610   004900  0E0A               	movlw	10
  8611   004902  26DF               	addwf	indf2,f,c
  8612   004904                     
  8613                           ;dc_motor.c: 120:         setMotorPWM(mL);
  8614   004904  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  8615   004908  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  8616   00490C  ECBE  F020         	call	_setMotorPWM	;wreg free
  8617   004910                     
  8618                           ;dc_motor.c: 121:         setMotorPWM(mR);
  8619   004910  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  8620   004914  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  8621   004918  ECBE  F020         	call	_setMotorPWM	;wreg free
  8622   00491C                     
  8623                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8624   00491C  0E15               	movlw	21
  8625   00491E  6E18               	movwf	??_turnLeft^0,c
  8626   004920  0EC6               	movlw	198
  8627   004922                     u5497:
  8628   004922  2EE8               	decfsz	wreg,f,c
  8629   004924  D7FE               	bra	u5497
  8630   004926  2E18               	decfsz	??_turnLeft^0,f,c
  8631   004928  D7FC               	bra	u5497
  8632   00492A  D000               	nop2	
  8633   00492C                     l4544:
  8634                           
  8635                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  8636   00492C  C014  FFD9         	movff	turnLeft@mL,fsr2l
  8637   004930  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  8638   004934  0E46               	movlw	70
  8639   004936  60DF               	cpfslt	indf2,c
  8640   004938  EFA0  F024         	goto	u4621
  8641   00493C  EFA2  F024         	goto	u4620
  8642   004940                     u4621:
  8643   004940  EFAE  F024         	goto	l466
  8644   004944                     u4620:
  8645   004944  C016  FFD9         	movff	turnLeft@mR,fsr2l
  8646   004948  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  8647   00494C  0E45               	movlw	69
  8648   00494E  64DF               	cpfsgt	indf2,c
  8649   004950  EFAC  F024         	goto	u4631
  8650   004954  EFAE  F024         	goto	u4630
  8651   004958                     u4631:
  8652   004958  EF76  F024         	goto	l4536
  8653   00495C                     u4630:
  8654   00495C                     l466:
  8655   00495C  0012               	return		;funcret
  8656   00495E                     __end_of_turnLeft:
  8657                           	callstack 0
  8658                           
  8659 ;; *************** function _Forwardhalfblock *****************
  8660 ;; Defined at:
  8661 ;;		line 209 in file "dc_motor.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8664 ;;		 -> motorL(9), 
  8665 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8666 ;;		 -> motorR(9), 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;Total ram usage:        6 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; Hardware stack levels required when called: 4
  8685 ;; This function calls:
  8686 ;;		_fullSpeedAhead
  8687 ;;		_stop
  8688 ;; This function is called by:
  8689 ;;		_main
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           	psect	text50
  8694   004F6C                     __ptext50:
  8695                           	callstack 0
  8696   004F6C                     _Forwardhalfblock:
  8697                           	callstack 26
  8698   004F6C                     
  8699                           ;dc_motor.c: 210:     fullSpeedAhead(mL,mR);
  8700   004F6C  C019  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8701   004F70  C01A  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8702   004F74  C01B  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8703   004F78  C01C  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8704   004F7C  ECAF  F024         	call	_fullSpeedAhead	;wreg free
  8705   004F80                     
  8706                           ;dc_motor.c: 211:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8707   004F80  0E29               	movlw	41
  8708   004F82  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8709   004F84  0E96               	movlw	150
  8710   004F86  6E1D               	movwf	??_Forwardhalfblock^0,c
  8711   004F88  0E7F               	movlw	127
  8712   004F8A                     u5507:
  8713   004F8A  2EE8               	decfsz	wreg,f,c
  8714   004F8C  D7FE               	bra	u5507
  8715   004F8E  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8716   004F90  D7FC               	bra	u5507
  8717   004F92  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8718   004F94  D7FA               	bra	u5507
  8719   004F96  F000               	nop	
  8720   004F98                     
  8721                           ;dc_motor.c: 212:     stop(&motorL, &motorR);
  8722   004F98  0E71               	movlw	low _motorL
  8723   004F9A  6E14               	movwf	stop@mL^0,c
  8724   004F9C  0E01               	movlw	high _motorL
  8725   004F9E  6E15               	movwf	(stop@mL+1)^0,c
  8726   004FA0  0E68               	movlw	low _motorR
  8727   004FA2  6E16               	movwf	stop@mR^0,c
  8728   004FA4  0E01               	movlw	high _motorR
  8729   004FA6  6E17               	movwf	(stop@mR+1)^0,c
  8730   004FA8  EC52  F026         	call	_stop	;wreg free
  8731                           
  8732                           ;dc_motor.c: 213:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8733   004FAC  0E52               	movlw	82
  8734   004FAE  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8735   004FB0  0E2B               	movlw	43
  8736   004FB2  6E1D               	movwf	??_Forwardhalfblock^0,c
  8737   004FB4  0E00               	movlw	0
  8738   004FB6                     u5517:
  8739   004FB6  2EE8               	decfsz	wreg,f,c
  8740   004FB8  D7FE               	bra	u5517
  8741   004FBA  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8742   004FBC  D7FC               	bra	u5517
  8743   004FBE  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8744   004FC0  D7FA               	bra	u5517
  8745   004FC2  D000               	nop2	
  8746   004FC4  0012               	return		;funcret
  8747   004FC6                     __end_of_Forwardhalfblock:
  8748                           	callstack 0
  8749                           
  8750 ;; *************** function _fullSpeedAhead *****************
  8751 ;; Defined at:
  8752 ;;		line 146 in file "dc_motor.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8755 ;;		 -> motorL(9), 
  8756 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8757 ;;		 -> motorR(9), 
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;Total ram usage:        5 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 3
  8776 ;; This function calls:
  8777 ;;		_setMotorPWM
  8778 ;; This function is called by:
  8779 ;;		_Forwardhalfblock
  8780 ;;		_RetryMove
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           	psect	text51
  8785   00495E                     __ptext51:
  8786                           	callstack 0
  8787   00495E                     _fullSpeedAhead:
  8788                           	callstack 26
  8789   00495E                     
  8790                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  8791   00495E  EE20 F001          	lfsr	2,1
  8792   004962  5014               	movf	fullSpeedAhead@mL^0,w,c
  8793   004964  26D9               	addwf	fsr2l,f,c
  8794   004966  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  8795   004968  22DA               	addwfc	fsr2h,f,c
  8796   00496A  0E01               	movlw	1
  8797   00496C  6EDF               	movwf	indf2,c
  8798                           
  8799                           ;dc_motor.c: 150:     mR->direction =1;
  8800   00496E  EE20 F001          	lfsr	2,1
  8801   004972  5016               	movf	fullSpeedAhead@mR^0,w,c
  8802   004974  26D9               	addwf	fsr2l,f,c
  8803   004976  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  8804   004978  22DA               	addwfc	fsr2h,f,c
  8805   00497A  0E01               	movlw	1
  8806   00497C  6EDF               	movwf	indf2,c
  8807                           
  8808                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  8809   00497E  EFE1  F024         	goto	l4710
  8810   004982                     l4702:
  8811                           
  8812                           ;dc_motor.c: 153:         mL->power+=10;
  8813   004982  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8814   004986  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8815   00498A  0E0A               	movlw	10
  8816   00498C  26DF               	addwf	indf2,f,c
  8817                           
  8818                           ;dc_motor.c: 154:         mR->power+=10;
  8819   00498E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8820   004992  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8821   004996  0E0A               	movlw	10
  8822   004998  26DF               	addwf	indf2,f,c
  8823   00499A                     
  8824                           ;dc_motor.c: 156:         setMotorPWM(mL);
  8825   00499A  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  8826   00499E  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  8827   0049A2  ECBE  F020         	call	_setMotorPWM	;wreg free
  8828   0049A6                     
  8829                           ;dc_motor.c: 157:         setMotorPWM(mR);
  8830   0049A6  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  8831   0049AA  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  8832   0049AE  ECBE  F020         	call	_setMotorPWM	;wreg free
  8833   0049B2                     
  8834                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  8835   0049B2  0E15               	movlw	21
  8836   0049B4  6E18               	movwf	??_fullSpeedAhead^0,c
  8837   0049B6  0EC6               	movlw	198
  8838   0049B8                     u5527:
  8839   0049B8  2EE8               	decfsz	wreg,f,c
  8840   0049BA  D7FE               	bra	u5527
  8841   0049BC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  8842   0049BE  D7FC               	bra	u5527
  8843   0049C0  D000               	nop2	
  8844   0049C2                     l4710:
  8845                           
  8846                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  8847   0049C2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  8848   0049C6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  8849   0049CA  0E32               	movlw	50
  8850   0049CC  60DF               	cpfslt	indf2,c
  8851   0049CE  EFEB  F024         	goto	u4731
  8852   0049D2  EFED  F024         	goto	u4730
  8853   0049D6                     u4731:
  8854   0049D6  EFF9  F024         	goto	l482
  8855   0049DA                     u4730:
  8856   0049DA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  8857   0049DE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  8858   0049E2  0E31               	movlw	49
  8859   0049E4  64DF               	cpfsgt	indf2,c
  8860   0049E6  EFF7  F024         	goto	u4741
  8861   0049EA  EFF9  F024         	goto	u4740
  8862   0049EE                     u4741:
  8863   0049EE  EFC1  F024         	goto	l4702
  8864   0049F2                     u4740:
  8865   0049F2                     l482:
  8866   0049F2  0012               	return		;funcret
  8867   0049F4                     __end_of_fullSpeedAhead:
  8868                           	callstack 0
  8869                           
  8870 ;; *************** function _Colour_decider *****************
  8871 ;; Defined at:
  8872 ;;		line 125 in file "color.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;  vals            2   74[COMRAM] PTR struct RGB
  8875 ;;		 -> vals(8), 
  8876 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8877 ;;		 -> rel(12), 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  RGB_col        12    6[BANK0 ] float [3]
  8880 ;;  Hue             4   28[BANK0 ] float 
  8881 ;;  Cmin            4   22[BANK0 ] float 
  8882 ;;  Cmax            4   18[BANK0 ] float 
  8883 ;;  i               2   26[BANK0 ] int 
  8884 ;;  Cmax_i          2    4[BANK0 ] int 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  2   74[COMRAM] int 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:       38 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; Hardware stack levels required when called: 3
  8901 ;; This function calls:
  8902 ;;		___fladd
  8903 ;;		___fldiv
  8904 ;;		___fleq
  8905 ;;		___flge
  8906 ;;		___flmul
  8907 ;;		___flsub
  8908 ;;		___xxtofl
  8909 ;; This function is called by:
  8910 ;;		_main
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text52
  8915   000E5A                     __ptext52:
  8916                           	callstack 0
  8917   000E5A                     _Colour_decider:
  8918                           	callstack 27
  8919   000E5A                     
  8920                           ;color.c: 126:     float Cmax = 0;
  8921   000E5A  0E00               	movlw	0
  8922   000E5C  0100               	movlb	0	; () banked
  8923   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8924   000E60  0E00               	movlw	0
  8925   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8926   000E64  0E00               	movlw	0
  8927   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8928   000E68  0E00               	movlw	0
  8929   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8930                           
  8931                           ;color.c: 127:     float Cmin= 100000;
  8932   000E6C  0E00               	movlw	0
  8933   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8934   000E70  0E50               	movlw	80
  8935   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8936   000E74  0EC3               	movlw	195
  8937   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8938   000E78  0E47               	movlw	71
  8939   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8940                           
  8941                           ;color.c: 128:     int Cmax_i =4;
  8942   000E7C  0E00               	movlw	0
  8943   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8944   000E80  0E04               	movlw	4
  8945   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8946   000E84                     
  8947                           ; BSR set to: 0
  8948                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8949   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8950   000E88  0E0B               	movlw	11
  8951   000E8A                     u4861:
  8952   000E8A  6ADE               	clrf	postinc2,c
  8953   000E8C  06E8               	decf	wreg,f,c
  8954   000E8E  E2FD               	bc	u4861
  8955   000E90                     
  8956                           ; BSR set to: 0
  8957   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8958   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8959   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
  8960   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8961   000EA0  0E00               	movlw	0
  8962   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8963   000EA4  0EFF               	movlw	-1
  8964   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
  8965   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
  8966   000EAA  0E01               	movlw	1
  8967   000EAC  EC20  F01F         	call	___xxtofl
  8968   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8969   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8970   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8971   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8972   000EC0  EE20 F002          	lfsr	2,2
  8973   000EC4  504B               	movf	Colour_decider@vals^0,w,c
  8974   000EC6  26D9               	addwf	fsr2l,f,c
  8975   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8976   000ECA  22DA               	addwfc	fsr2h,f,c
  8977   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
  8978   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8979   000ED4  0E00               	movlw	0
  8980   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8981   000ED8  0EFF               	movlw	-1
  8982   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
  8983   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
  8984   000EDE  0E01               	movlw	1
  8985   000EE0  EC20  F01F         	call	___xxtofl
  8986   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8987   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8988   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8989   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8990   000EF4  EE20 F004          	lfsr	2,4
  8991   000EF8  504B               	movf	Colour_decider@vals^0,w,c
  8992   000EFA  26D9               	addwf	fsr2l,f,c
  8993   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8994   000EFE  22DA               	addwfc	fsr2h,f,c
  8995   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
  8996   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8997   000F08  0E00               	movlw	0
  8998   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8999   000F0C  0EFF               	movlw	-1
  9000   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
  9001   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
  9002   000F12  0E01               	movlw	1
  9003   000F14  EC20  F01F         	call	___xxtofl
  9004   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  9005   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  9006   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  9007   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  9008   000F28                     
  9009                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  9010   000F28  0E00               	movlw	0
  9011   000F2A  0100               	movlb	0	; () banked
  9012   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  9013   000F2E  0E00               	movlw	0
  9014   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
  9015   000F32                     l4858:
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  9019   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
  9020   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  9021   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  9022   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  9023   000F42  0E66               	movlw	low Colour_decider@RGB_col
  9024   000F44  6E4F               	movwf	??_Colour_decider^0,c
  9025   000F46  0E00               	movlw	high Colour_decider@RGB_col
  9026   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
  9027   000F4A  90D8               	bcf	status,0,c
  9028   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9029   000F4E  6ED9               	movwf	fsr2l,c
  9030   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9031   000F52  6EDA               	movwf	fsr2h,c
  9032   000F54  90D8               	bcf	status,0,c
  9033   000F56  36D9               	rlcf	fsr2l,f,c
  9034   000F58  36DA               	rlcf	fsr2h,f,c
  9035   000F5A  504F               	movf	??_Colour_decider^0,w,c
  9036   000F5C  26D9               	addwf	fsr2l,f,c
  9037   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
  9038   000F60  22DA               	addwfc	fsr2h,f,c
  9039   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
  9040   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
  9041   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
  9042   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
  9043   000F72  ECA9  F022         	call	___flge	;wreg free
  9044   000F76  B0D8               	btfsc	status,0,c
  9045   000F78  EFC0  F007         	goto	u4871
  9046   000F7C  EFC2  F007         	goto	u4870
  9047   000F80                     u4871:
  9048   000F80  EFDF  F007         	goto	l4864
  9049   000F84                     u4870:
  9050   000F84                     
  9051                           ;color.c: 137:             Cmax=RGB_col[i];
  9052   000F84  0E66               	movlw	low Colour_decider@RGB_col
  9053   000F86  6E4F               	movwf	??_Colour_decider^0,c
  9054   000F88  0E00               	movlw	high Colour_decider@RGB_col
  9055   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
  9056   000F8C  90D8               	bcf	status,0,c
  9057   000F8E  0100               	movlb	0	; () banked
  9058   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9059   000F92  6ED9               	movwf	fsr2l,c
  9060   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9061   000F96  6EDA               	movwf	fsr2h,c
  9062   000F98  90D8               	bcf	status,0,c
  9063   000F9A  36D9               	rlcf	fsr2l,f,c
  9064   000F9C  36DA               	rlcf	fsr2h,f,c
  9065   000F9E  504F               	movf	??_Colour_decider^0,w,c
  9066   000FA0  26D9               	addwf	fsr2l,f,c
  9067   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
  9068   000FA4  22DA               	addwfc	fsr2h,f,c
  9069   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  9070   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  9071   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  9072   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  9073   000FB6                     
  9074                           ; BSR set to: 0
  9075                           ;color.c: 138:             Cmax_i=i;
  9076   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  9077   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  9078   000FBE                     l4864:
  9079                           
  9080                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  9081   000FBE  0E66               	movlw	low Colour_decider@RGB_col
  9082   000FC0  6E4F               	movwf	??_Colour_decider^0,c
  9083   000FC2  0E00               	movlw	high Colour_decider@RGB_col
  9084   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
  9085   000FC6  90D8               	bcf	status,0,c
  9086   000FC8  0100               	movlb	0	; () banked
  9087   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9088   000FCC  6ED9               	movwf	fsr2l,c
  9089   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9090   000FD0  6EDA               	movwf	fsr2h,c
  9091   000FD2  90D8               	bcf	status,0,c
  9092   000FD4  36D9               	rlcf	fsr2l,f,c
  9093   000FD6  36DA               	rlcf	fsr2h,f,c
  9094   000FD8  504F               	movf	??_Colour_decider^0,w,c
  9095   000FDA  26D9               	addwf	fsr2l,f,c
  9096   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
  9097   000FDE  22DA               	addwfc	fsr2h,f,c
  9098   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
  9099   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9100   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9101   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9102   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
  9103   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  9104   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  9105   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  9106   001000  ECA9  F022         	call	___flge	;wreg free
  9107   001004  B0D8               	btfsc	status,0,c
  9108   001006  EF07  F008         	goto	u4881
  9109   00100A  EF09  F008         	goto	u4880
  9110   00100E                     u4881:
  9111   00100E  EF22  F008         	goto	l4868
  9112   001012                     u4880:
  9113   001012  0E66               	movlw	low Colour_decider@RGB_col
  9114   001014  6E4F               	movwf	??_Colour_decider^0,c
  9115   001016  0E00               	movlw	high Colour_decider@RGB_col
  9116   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
  9117   00101A  90D8               	bcf	status,0,c
  9118   00101C  0100               	movlb	0	; () banked
  9119   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
  9120   001020  6ED9               	movwf	fsr2l,c
  9121   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  9122   001024  6EDA               	movwf	fsr2h,c
  9123   001026  90D8               	bcf	status,0,c
  9124   001028  36D9               	rlcf	fsr2l,f,c
  9125   00102A  36DA               	rlcf	fsr2h,f,c
  9126   00102C  504F               	movf	??_Colour_decider^0,w,c
  9127   00102E  26D9               	addwf	fsr2l,f,c
  9128   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
  9129   001032  22DA               	addwfc	fsr2h,f,c
  9130   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  9131   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  9132   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  9133   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  9134   001044                     l4868:
  9135                           
  9136                           ;color.c: 141:     }
  9137   001044  0100               	movlb	0	; () banked
  9138   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  9139   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  9140   00104A                     
  9141                           ; BSR set to: 0
  9142   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  9143   00104C  EF31  F008         	goto	u4891
  9144   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  9145   001052  E109               	bnz	u4890
  9146   001054  0E03               	movlw	3
  9147   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  9148   001058  A0D8               	btfss	status,0,c
  9149   00105A  EF31  F008         	goto	u4891
  9150   00105E  EF33  F008         	goto	u4890
  9151   001062                     u4891:
  9152   001062  EF99  F007         	goto	l4858
  9153   001066                     u4890:
  9154   001066                     
  9155                           ; BSR set to: 0
  9156                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  9157   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  9158   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9159   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9160   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9161   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  9162   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9163   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9164   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9165   001086  EC4C  F02A         	call	___flsub	;wreg free
  9166   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
  9167   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
  9168   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
  9169   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
  9170   00109A  0E00               	movlw	0
  9171   00109C  6E36               	movwf	___fleq@ff2^0,c
  9172   00109E  0E00               	movlw	0
  9173   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
  9174   0010A2  0E00               	movlw	0
  9175   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
  9176   0010A6  0E00               	movlw	0
  9177   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
  9178   0010AA  EC0F  F024         	call	___fleq	;wreg free
  9179   0010AE  A0D8               	btfss	status,0,c
  9180   0010B0  EF5C  F008         	goto	u4901
  9181   0010B4  EF5E  F008         	goto	u4900
  9182   0010B8                     u4901:
  9183   0010B8  EF64  F008         	goto	l4878
  9184   0010BC                     u4900:
  9185   0010BC                     l4874:
  9186   0010BC  0E00               	movlw	0
  9187   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9188   0010C0  0E00               	movlw	0
  9189   0010C2  6E4B               	movwf	?_Colour_decider^0,c
  9190   0010C4  EF9A  F00C         	goto	l70
  9191   0010C8                     l4878:
  9192                           
  9193                           ;color.c: 146:     if (Cmax_i==0){
  9194   0010C8  0100               	movlb	0	; () banked
  9195   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  9196   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9197   0010CE  A4D8               	btfss	status,2,c
  9198   0010D0  EF6C  F008         	goto	u4911
  9199   0010D4  EF6E  F008         	goto	u4910
  9200   0010D8                     u4911:
  9201   0010D8  EFE2  F008         	goto	l4886
  9202   0010DC                     u4910:
  9203   0010DC                     
  9204                           ; BSR set to: 0
  9205                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  9206   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  9207   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9208   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9209   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9210   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  9211   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9212   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9213   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9214   0010FC  EC4C  F02A         	call	___flsub	;wreg free
  9215   001100  C02A  F036         	movff	?___flsub,___fldiv@a
  9216   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9217   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9218   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9219   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
  9220   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  9221   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  9222   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  9223   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
  9224   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  9225   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  9226   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  9227   001130  EC4C  F02A         	call	___flsub	;wreg free
  9228   001134  C02A  F032         	movff	?___flsub,___fldiv@b
  9229   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9230   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9231   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9232   001144  ECF1  F017         	call	___fldiv	;wreg free
  9233   001148  C032  F011         	movff	?___fldiv,___flmul@b
  9234   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
  9235   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
  9236   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
  9237   001158  0E00               	movlw	0
  9238   00115A  6E15               	movwf	___flmul@a^0,c
  9239   00115C  0E00               	movlw	0
  9240   00115E  6E16               	movwf	(___flmul@a+1)^0,c
  9241   001160  0E70               	movlw	112
  9242   001162  6E17               	movwf	(___flmul@a+2)^0,c
  9243   001164  0E42               	movlw	66
  9244   001166  6E18               	movwf	(___flmul@a+3)^0,c
  9245   001168  ECF8  F013         	call	___flmul	;wreg free
  9246   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9247   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9248   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9249   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9250   00117C                     
  9251                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  9252   00117C  0100               	movlb	0	; () banked
  9253   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  9254   001180  EFC6  F008         	goto	u4920
  9255   001184  EFC4  F008         	goto	u4921
  9256   001188                     u4921:
  9257   001188  EFC1  F009         	goto	l4896
  9258   00118C                     u4920:
  9259   00118C                     
  9260                           ; BSR set to: 0
  9261   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  9262   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  9263   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  9264   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  9265   00119C  0E00               	movlw	0
  9266   00119E  6E05               	movwf	___fladd@a^0,c
  9267   0011A0  0E00               	movlw	0
  9268   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
  9269   0011A4  0EB4               	movlw	180
  9270   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
  9271   0011A8  0E43               	movlw	67
  9272   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
  9273   0011AC  EC98  F011         	call	___fladd	;wreg free
  9274   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  9275   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  9276   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  9277   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  9278   0011C0  EFC1  F009         	goto	l4896
  9279   0011C4                     l4886:
  9280                           
  9281                           ; BSR set to: 0
  9282   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  9283   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  9284   0011C8  A4D8               	btfss	status,2,c
  9285   0011CA  EFE9  F008         	goto	u4931
  9286   0011CE  EFEB  F008         	goto	u4930
  9287   0011D2                     u4931:
  9288   0011D2  EF57  F009         	goto	l4892
  9289   0011D6                     u4930:
  9290   0011D6                     
  9291                           ; BSR set to: 0
  9292                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9293   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  9294   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9295   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9296   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9297   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  9298   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9299   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9300   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9301   0011F6  EC4C  F02A         	call	___flsub	;wreg free
  9302   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
  9303   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9304   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9305   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9306   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
  9307   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9308   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9309   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9310   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
  9311   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9312   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9313   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9314   00122A  EC4C  F02A         	call	___flsub	;wreg free
  9315   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
  9316   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9317   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9318   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9319   00123E  ECF1  F017         	call	___fldiv	;wreg free
  9320   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2734
  9321   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2734+1
  9322   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2734+2
  9323   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2734+3
  9324   001252                     
  9325                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9326   001252  0E00               	movlw	0
  9327   001254  6E05               	movwf	___fladd@a^0,c
  9328   001256  0E00               	movlw	0
  9329   001258  6E06               	movwf	(___fladd@a+1)^0,c
  9330   00125A  0E00               	movlw	0
  9331   00125C  6E07               	movwf	(___fladd@a+2)^0,c
  9332   00125E  0E40               	movlw	64
  9333   001260  6E08               	movwf	(___fladd@a+3)^0,c
  9334   001262  C060  F001         	movff	_Colour_decider$2734,___fladd@b
  9335   001266  C061  F002         	movff	_Colour_decider$2734+1,___fladd@b+1
  9336   00126A  C062  F003         	movff	_Colour_decider$2734+2,___fladd@b+2
  9337   00126E  C063  F004         	movff	_Colour_decider$2734+3,___fladd@b+3
  9338   001272  EC98  F011         	call	___fladd	;wreg free
  9339   001276  C001  F011         	movff	?___fladd,___flmul@b
  9340   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
  9341   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
  9342   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
  9343   001286  0E00               	movlw	0
  9344   001288  6E15               	movwf	___flmul@a^0,c
  9345   00128A  0E00               	movlw	0
  9346   00128C  6E16               	movwf	(___flmul@a+1)^0,c
  9347   00128E  0E70               	movlw	112
  9348   001290  6E17               	movwf	(___flmul@a+2)^0,c
  9349   001292  0E42               	movlw	66
  9350   001294  6E18               	movwf	(___flmul@a+3)^0,c
  9351   001296  ECF8  F013         	call	___flmul	;wreg free
  9352   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9353   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9354   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9355   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9356                           
  9357                           ;color.c: 155:     }
  9358   0012AA  EFC1  F009         	goto	l4896
  9359   0012AE                     l4892:
  9360                           
  9361                           ; BSR set to: 0
  9362                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9363   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  9364   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9365   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9366   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9367   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  9368   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9369   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9370   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9371   0012CE  EC4C  F02A         	call	___flsub	;wreg free
  9372   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
  9373   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9374   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9375   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9376   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
  9377   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9378   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9379   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9380   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
  9381   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9382   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9383   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9384   001302  EC4C  F02A         	call	___flsub	;wreg free
  9385   001306  C02A  F032         	movff	?___flsub,___fldiv@b
  9386   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9387   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9388   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9389   001316  ECF1  F017         	call	___fldiv	;wreg free
  9390   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2734
  9391   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2734+1
  9392   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2734+2
  9393   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2734+3
  9394   00132A                     
  9395                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9396   00132A  0E00               	movlw	0
  9397   00132C  6E05               	movwf	___fladd@a^0,c
  9398   00132E  0E00               	movlw	0
  9399   001330  6E06               	movwf	(___fladd@a+1)^0,c
  9400   001332  0E80               	movlw	128
  9401   001334  6E07               	movwf	(___fladd@a+2)^0,c
  9402   001336  0E40               	movlw	64
  9403   001338  6E08               	movwf	(___fladd@a+3)^0,c
  9404   00133A  C060  F001         	movff	_Colour_decider$2734,___fladd@b
  9405   00133E  C061  F002         	movff	_Colour_decider$2734+1,___fladd@b+1
  9406   001342  C062  F003         	movff	_Colour_decider$2734+2,___fladd@b+2
  9407   001346  C063  F004         	movff	_Colour_decider$2734+3,___fladd@b+3
  9408   00134A  EC98  F011         	call	___fladd	;wreg free
  9409   00134E  C001  F011         	movff	?___fladd,___flmul@b
  9410   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
  9411   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
  9412   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
  9413   00135E  0E00               	movlw	0
  9414   001360  6E15               	movwf	___flmul@a^0,c
  9415   001362  0E00               	movlw	0
  9416   001364  6E16               	movwf	(___flmul@a+1)^0,c
  9417   001366  0E70               	movlw	112
  9418   001368  6E17               	movwf	(___flmul@a+2)^0,c
  9419   00136A  0E42               	movlw	66
  9420   00136C  6E18               	movwf	(___flmul@a+3)^0,c
  9421   00136E  ECF8  F013         	call	___flmul	;wreg free
  9422   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9423   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9424   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9425   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9426   001382                     l4896:
  9427                           
  9428                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
  9429   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9430   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9431   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9432   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9433   001392  0E00               	movlw	0
  9434   001394  6E2E               	movwf	___flge@ff2^0,c
  9435   001396  0E00               	movlw	0
  9436   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
  9437   00139A  0EA5               	movlw	165
  9438   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
  9439   00139E  0E43               	movlw	67
  9440   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
  9441   0013A2  ECA9  F022         	call	___flge	;wreg free
  9442   0013A6  A0D8               	btfss	status,0,c
  9443   0013A8  EFD8  F009         	goto	u4941
  9444   0013AC  EFDA  F009         	goto	u4940
  9445   0013B0                     u4941:
  9446   0013B0  EFF9  F009         	goto	l4906
  9447   0013B4                     u4940:
  9448   0013B4  0E00               	movlw	0
  9449   0013B6  6E2A               	movwf	___flge@ff1^0,c
  9450   0013B8  0E00               	movlw	0
  9451   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
  9452   0013BC  0EB4               	movlw	180
  9453   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
  9454   0013C0  0E43               	movlw	67
  9455   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
  9456   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9457   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9458   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9459   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9460   0013D4  ECA9  F022         	call	___flge	;wreg free
  9461   0013D8  A0D8               	btfss	status,0,c
  9462   0013DA  EFF1  F009         	goto	u4951
  9463   0013DE  EFF3  F009         	goto	u4950
  9464   0013E2                     u4951:
  9465   0013E2  EFF9  F009         	goto	l4906
  9466   0013E6                     u4950:
  9467   0013E6                     
  9468                           ;color.c: 164:         return 1;
  9469   0013E6  0E00               	movlw	0
  9470   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9471   0013EA  0E01               	movlw	1
  9472   0013EC  6E4B               	movwf	?_Colour_decider^0,c
  9473   0013EE  EF9A  F00C         	goto	l70
  9474   0013F2                     l4906:
  9475   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9476   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9477   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9478   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9479   001402  0E00               	movlw	0
  9480   001404  6E2E               	movwf	___flge@ff2^0,c
  9481   001406  0E00               	movlw	0
  9482   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
  9483   00140A  0EA0               	movlw	160
  9484   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
  9485   00140E  0E40               	movlw	64
  9486   001410  6E31               	movwf	(___flge@ff2+3)^0,c
  9487   001412  ECA9  F022         	call	___flge	;wreg free
  9488   001416  A0D8               	btfss	status,0,c
  9489   001418  EF10  F00A         	goto	u4961
  9490   00141C  EF12  F00A         	goto	u4960
  9491   001420                     u4961:
  9492   001420  EF31  F00A         	goto	l4916
  9493   001424                     u4960:
  9494   001424  0E00               	movlw	0
  9495   001426  6E2A               	movwf	___flge@ff1^0,c
  9496   001428  0E00               	movlw	0
  9497   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9498   00142C  0E40               	movlw	64
  9499   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9500   001430  0E41               	movlw	65
  9501   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
  9502   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9503   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9504   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9505   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9506   001444  ECA9  F022         	call	___flge	;wreg free
  9507   001448  A0D8               	btfss	status,0,c
  9508   00144A  EF29  F00A         	goto	u4971
  9509   00144E  EF2B  F00A         	goto	u4970
  9510   001452                     u4971:
  9511   001452  EF31  F00A         	goto	l4916
  9512   001456                     u4970:
  9513   001456                     
  9514                           ;color.c: 168:         return 2;
  9515   001456  0E00               	movlw	0
  9516   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9517   00145A  0E02               	movlw	2
  9518   00145C  6E4B               	movwf	?_Colour_decider^0,c
  9519   00145E  EF9A  F00C         	goto	l70
  9520   001462                     l4916:
  9521   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9522   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9523   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9524   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9525   001472  0E00               	movlw	0
  9526   001474  6E2E               	movwf	___flge@ff2^0,c
  9527   001476  0E00               	movlw	0
  9528   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
  9529   00147A  0EA0               	movlw	160
  9530   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
  9531   00147E  0E41               	movlw	65
  9532   001480  6E31               	movwf	(___flge@ff2+3)^0,c
  9533   001482  ECA9  F022         	call	___flge	;wreg free
  9534   001486  A0D8               	btfss	status,0,c
  9535   001488  EF48  F00A         	goto	u4981
  9536   00148C  EF4A  F00A         	goto	u4980
  9537   001490                     u4981:
  9538   001490  EFCA  F00A         	goto	l4942
  9539   001494                     u4980:
  9540   001494  0E00               	movlw	0
  9541   001496  6E2A               	movwf	___flge@ff1^0,c
  9542   001498  0E00               	movlw	0
  9543   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9544   00149C  0EE8               	movlw	232
  9545   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9546   0014A0  0E41               	movlw	65
  9547   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
  9548   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9549   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9550   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9551   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9552   0014B4  ECA9  F022         	call	___flge	;wreg free
  9553   0014B8  A0D8               	btfss	status,0,c
  9554   0014BA  EF61  F00A         	goto	u4991
  9555   0014BE  EF63  F00A         	goto	u4990
  9556   0014C2                     u4991:
  9557   0014C2  EFCA  F00A         	goto	l4942
  9558   0014C6                     u4990:
  9559   0014C6                     
  9560                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9561   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9562   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9563   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
  9564   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9565   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9566   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9567   0014DE  0ECD               	movlw	205
  9568   0014E0  6E2E               	movwf	___flge@ff2^0,c
  9569   0014E2  0ECC               	movlw	204
  9570   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
  9571   0014E6  0E4C               	movlw	76
  9572   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
  9573   0014EA  0E3E               	movlw	62
  9574   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
  9575   0014EE  ECA9  F022         	call	___flge	;wreg free
  9576   0014F2  A0D8               	btfss	status,0,c
  9577   0014F4  EF7E  F00A         	goto	u5001
  9578   0014F8  EF80  F00A         	goto	u5000
  9579   0014FC                     u5001:
  9580   0014FC  EF9F  F00A         	goto	l4930
  9581   001500                     u5000:
  9582   001500  0E1F               	movlw	31
  9583   001502  6E2A               	movwf	___flge@ff1^0,c
  9584   001504  0E85               	movlw	133
  9585   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
  9586   001508  0E6B               	movlw	107
  9587   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
  9588   00150C  0E3E               	movlw	62
  9589   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
  9590   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9591   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9592   001518  CFDE F02E          	movff	postinc2,___flge@ff2
  9593   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
  9594   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
  9595   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
  9596   001528  ECA9  F022         	call	___flge	;wreg free
  9597   00152C  A0D8               	btfss	status,0,c
  9598   00152E  EF9B  F00A         	goto	u5011
  9599   001532  EF9D  F00A         	goto	u5010
  9600   001536                     u5011:
  9601   001536  EF9F  F00A         	goto	l4930
  9602   00153A                     u5010:
  9603   00153A  EF5E  F008         	goto	l4874
  9604   00153E                     l4930:
  9605   00153E  EE20 F008          	lfsr	2,8
  9606   001542  504D               	movf	Colour_decider@rel^0,w,c
  9607   001544  26D9               	addwf	fsr2l,f,c
  9608   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9609   001548  22DA               	addwfc	fsr2h,f,c
  9610   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
  9611   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9612   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9613   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9614   00155A  0E29               	movlw	41
  9615   00155C  6E2E               	movwf	___flge@ff2^0,c
  9616   00155E  0E5C               	movlw	92
  9617   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
  9618   001562  0E0F               	movlw	15
  9619   001564  6E30               	movwf	(___flge@ff2+2)^0,c
  9620   001566  0E3E               	movlw	62
  9621   001568  6E31               	movwf	(___flge@ff2+3)^0,c
  9622   00156A  ECA9  F022         	call	___flge	;wreg free
  9623   00156E  A0D8               	btfss	status,0,c
  9624   001570  EFBC  F00A         	goto	u5021
  9625   001574  EFBE  F00A         	goto	u5020
  9626   001578                     u5021:
  9627   001578  EFC4  F00A         	goto	l4938
  9628   00157C                     u5020:
  9629   00157C                     l4932:
  9630                           
  9631                           ;color.c: 179:             return 4;
  9632   00157C  0E00               	movlw	0
  9633   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9634   001580  0E04               	movlw	4
  9635   001582  6E4B               	movwf	?_Colour_decider^0,c
  9636   001584  EF9A  F00C         	goto	l70
  9637   001588                     l4938:
  9638                           
  9639                           ;color.c: 182:             return 3;
  9640   001588  0E00               	movlw	0
  9641   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9642   00158C  0E03               	movlw	3
  9643   00158E  6E4B               	movwf	?_Colour_decider^0,c
  9644   001590  EF9A  F00C         	goto	l70
  9645   001594                     l4942:
  9646   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9647   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9648   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9649   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9650   0015A4  0E00               	movlw	0
  9651   0015A6  6E2E               	movwf	___flge@ff2^0,c
  9652   0015A8  0E00               	movlw	0
  9653   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
  9654   0015AC  0E34               	movlw	52
  9655   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
  9656   0015B0  0E42               	movlw	66
  9657   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
  9658   0015B4  ECA9  F022         	call	___flge	;wreg free
  9659   0015B8  A0D8               	btfss	status,0,c
  9660   0015BA  EFE1  F00A         	goto	u5031
  9661   0015BE  EFE3  F00A         	goto	u5030
  9662   0015C2                     u5031:
  9663   0015C2  EF48  F00B         	goto	l4966
  9664   0015C6                     u5030:
  9665   0015C6  0E00               	movlw	0
  9666   0015C8  6E2A               	movwf	___flge@ff1^0,c
  9667   0015CA  0E00               	movlw	0
  9668   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
  9669   0015CE  0EA0               	movlw	160
  9670   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
  9671   0015D2  0E42               	movlw	66
  9672   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
  9673   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9674   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9675   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9676   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9677   0015E6  ECA9  F022         	call	___flge	;wreg free
  9678   0015EA  A0D8               	btfss	status,0,c
  9679   0015EC  EFFA  F00A         	goto	u5041
  9680   0015F0  EFFC  F00A         	goto	u5040
  9681   0015F4                     u5041:
  9682   0015F4  EF48  F00B         	goto	l4966
  9683   0015F8                     u5040:
  9684   0015F8                     
  9685                           ;color.c: 188:         if(0.15<=rel->B){
  9686   0015F8  EE20 F008          	lfsr	2,8
  9687   0015FC  504D               	movf	Colour_decider@rel^0,w,c
  9688   0015FE  26D9               	addwf	fsr2l,f,c
  9689   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9690   001602  22DA               	addwfc	fsr2h,f,c
  9691   001604  CFDE F02A          	movff	postinc2,___flge@ff1
  9692   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9693   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9694   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9695   001614  0E9A               	movlw	154
  9696   001616  6E2E               	movwf	___flge@ff2^0,c
  9697   001618  0E99               	movlw	153
  9698   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
  9699   00161C  0E19               	movlw	25
  9700   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
  9701   001620  0E3E               	movlw	62
  9702   001622  6E31               	movwf	(___flge@ff2+3)^0,c
  9703   001624  ECA9  F022         	call	___flge	;wreg free
  9704   001628  A0D8               	btfss	status,0,c
  9705   00162A  EF19  F00B         	goto	u5051
  9706   00162E  EF1B  F00B         	goto	u5050
  9707   001632                     u5051:
  9708   001632  EF1D  F00B         	goto	l4954
  9709   001636                     u5050:
  9710   001636  EFBE  F00A         	goto	l4932
  9711   00163A                     l4954:
  9712   00163A  EE20 F008          	lfsr	2,8
  9713   00163E  504D               	movf	Colour_decider@rel^0,w,c
  9714   001640  26D9               	addwf	fsr2l,f,c
  9715   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9716   001644  22DA               	addwfc	fsr2h,f,c
  9717   001646  CFDE F02A          	movff	postinc2,___flge@ff1
  9718   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9719   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9720   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9721   001656  0E8F               	movlw	143
  9722   001658  6E2E               	movwf	___flge@ff2^0,c
  9723   00165A  0EC2               	movlw	194
  9724   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
  9725   00165E  0EF5               	movlw	245
  9726   001660  6E30               	movwf	(___flge@ff2+2)^0,c
  9727   001662  0E3D               	movlw	61
  9728   001664  6E31               	movwf	(___flge@ff2+3)^0,c
  9729   001666  ECA9  F022         	call	___flge	;wreg free
  9730   00166A  A0D8               	btfss	status,0,c
  9731   00166C  EF3A  F00B         	goto	u5061
  9732   001670  EF3C  F00B         	goto	u5060
  9733   001674                     u5061:
  9734   001674  EF42  F00B         	goto	l4962
  9735   001678                     u5060:
  9736   001678                     l4956:
  9737                           
  9738                           ;color.c: 192:             return 6;
  9739   001678  0E00               	movlw	0
  9740   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9741   00167C  0E06               	movlw	6
  9742   00167E  6E4B               	movwf	?_Colour_decider^0,c
  9743   001680  EF9A  F00C         	goto	l70
  9744   001684                     l4962:
  9745                           
  9746                           ;color.c: 195:             return 5;
  9747   001684  0E00               	movlw	0
  9748   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
  9749   001688  0E05               	movlw	5
  9750   00168A  6E4B               	movwf	?_Colour_decider^0,c
  9751   00168C  EF9A  F00C         	goto	l70
  9752   001690                     l4966:
  9753   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9754   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9755   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9756   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9757   0016A0  0E00               	movlw	0
  9758   0016A2  6E2E               	movwf	___flge@ff2^0,c
  9759   0016A4  0E00               	movlw	0
  9760   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
  9761   0016A8  0EA2               	movlw	162
  9762   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
  9763   0016AC  0E42               	movlw	66
  9764   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
  9765   0016B0  ECA9  F022         	call	___flge	;wreg free
  9766   0016B4  A0D8               	btfss	status,0,c
  9767   0016B6  EF5F  F00B         	goto	u5071
  9768   0016BA  EF61  F00B         	goto	u5070
  9769   0016BE                     u5071:
  9770   0016BE  EF9B  F00B         	goto	l4982
  9771   0016C2                     u5070:
  9772   0016C2  0E00               	movlw	0
  9773   0016C4  6E2A               	movwf	___flge@ff1^0,c
  9774   0016C6  0E00               	movlw	0
  9775   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
  9776   0016CA  0EE6               	movlw	230
  9777   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
  9778   0016CE  0E42               	movlw	66
  9779   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
  9780   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9781   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9782   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9783   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9784   0016E2  ECA9  F022         	call	___flge	;wreg free
  9785   0016E6  A0D8               	btfss	status,0,c
  9786   0016E8  EF78  F00B         	goto	u5081
  9787   0016EC  EF7A  F00B         	goto	u5080
  9788   0016F0                     u5081:
  9789   0016F0  EF9B  F00B         	goto	l4982
  9790   0016F4                     u5080:
  9791   0016F4                     
  9792                           ;color.c: 201:         if(0.15<=rel->B){
  9793   0016F4  EE20 F008          	lfsr	2,8
  9794   0016F8  504D               	movf	Colour_decider@rel^0,w,c
  9795   0016FA  26D9               	addwf	fsr2l,f,c
  9796   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9797   0016FE  22DA               	addwfc	fsr2h,f,c
  9798   001700  CFDE F02A          	movff	postinc2,___flge@ff1
  9799   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9800   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9801   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9802   001710  0E9A               	movlw	154
  9803   001712  6E2E               	movwf	___flge@ff2^0,c
  9804   001714  0E99               	movlw	153
  9805   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
  9806   001718  0E19               	movlw	25
  9807   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
  9808   00171C  0E3E               	movlw	62
  9809   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
  9810   001720  ECA9  F022         	call	___flge	;wreg free
  9811   001724  A0D8               	btfss	status,0,c
  9812   001726  EF97  F00B         	goto	u5091
  9813   00172A  EF99  F00B         	goto	u5090
  9814   00172E                     u5091:
  9815   00172E  EF3C  F00B         	goto	l4956
  9816   001732                     u5090:
  9817   001732  EFBE  F00A         	goto	l4932
  9818   001736                     l4982:
  9819   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9820   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9821   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9822   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9823   001746  0E00               	movlw	0
  9824   001748  6E2E               	movwf	___flge@ff2^0,c
  9825   00174A  0E00               	movlw	0
  9826   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
  9827   00174E  0EF0               	movlw	240
  9828   001750  6E30               	movwf	(___flge@ff2+2)^0,c
  9829   001752  0E41               	movlw	65
  9830   001754  6E31               	movwf	(___flge@ff2+3)^0,c
  9831   001756  ECA9  F022         	call	___flge	;wreg free
  9832   00175A  A0D8               	btfss	status,0,c
  9833   00175C  EFB2  F00B         	goto	u5101
  9834   001760  EFB4  F00B         	goto	u5100
  9835   001764                     u5101:
  9836   001764  EFCD  F00B         	goto	l4986
  9837   001768                     u5100:
  9838   001768  0E00               	movlw	0
  9839   00176A  6E2A               	movwf	___flge@ff1^0,c
  9840   00176C  0E00               	movlw	0
  9841   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
  9842   001770  0E68               	movlw	104
  9843   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
  9844   001774  0E42               	movlw	66
  9845   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
  9846   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9847   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9848   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9849   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9850   001788  ECA9  F022         	call	___flge	;wreg free
  9851   00178C  B0D8               	btfsc	status,0,c
  9852   00178E  EFCB  F00B         	goto	u5111
  9853   001792  EFCD  F00B         	goto	u5110
  9854   001796                     u5111:
  9855   001796  EFBE  F00A         	goto	l4932
  9856   00179A                     u5110:
  9857   00179A                     l4986:
  9858   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9859   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9860   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9861   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9862   0017AA  0E00               	movlw	0
  9863   0017AC  6E2E               	movwf	___flge@ff2^0,c
  9864   0017AE  0E00               	movlw	0
  9865   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
  9866   0017B2  0EF0               	movlw	240
  9867   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
  9868   0017B6  0E42               	movlw	66
  9869   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
  9870   0017BA  ECA9  F022         	call	___flge	;wreg free
  9871   0017BE  A0D8               	btfss	status,0,c
  9872   0017C0  EFE4  F00B         	goto	u5121
  9873   0017C4  EFE6  F00B         	goto	u5120
  9874   0017C8                     u5121:
  9875   0017C8  EF01  F00C         	goto	l4996
  9876   0017CC                     u5120:
  9877   0017CC  0E00               	movlw	0
  9878   0017CE  6E2A               	movwf	___flge@ff1^0,c
  9879   0017D0  0E00               	movlw	0
  9880   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
  9881   0017D4  0E5C               	movlw	92
  9882   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
  9883   0017D8  0E43               	movlw	67
  9884   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
  9885   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9886   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9887   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9888   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9889   0017EC  ECA9  F022         	call	___flge	;wreg free
  9890   0017F0  A0D8               	btfss	status,0,c
  9891   0017F2  EFFD  F00B         	goto	u5131
  9892   0017F6  EFFF  F00B         	goto	u5130
  9893   0017FA                     u5131:
  9894   0017FA  EF01  F00C         	goto	l4996
  9895   0017FE                     u5130:
  9896   0017FE  EFBE  F00A         	goto	l4932
  9897   001802                     l4996:
  9898   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
  9899   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
  9900   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
  9901   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
  9902   001812  0E00               	movlw	0
  9903   001814  6E2E               	movwf	___flge@ff2^0,c
  9904   001816  0E00               	movlw	0
  9905   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
  9906   00181A  0E60               	movlw	96
  9907   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
  9908   00181E  0E41               	movlw	65
  9909   001820  6E31               	movwf	(___flge@ff2+3)^0,c
  9910   001822  ECA9  F022         	call	___flge	;wreg free
  9911   001826  A0D8               	btfss	status,0,c
  9912   001828  EF18  F00C         	goto	u5141
  9913   00182C  EF1A  F00C         	goto	u5140
  9914   001830                     u5141:
  9915   001830  EF96  F00C         	goto	l5022
  9916   001834                     u5140:
  9917   001834  0E00               	movlw	0
  9918   001836  6E2A               	movwf	___flge@ff1^0,c
  9919   001838  0E00               	movlw	0
  9920   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
  9921   00183C  0E98               	movlw	152
  9922   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
  9923   001840  0E41               	movlw	65
  9924   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
  9925   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
  9926   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
  9927   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
  9928   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
  9929   001854  ECA9  F022         	call	___flge	;wreg free
  9930   001858  A0D8               	btfss	status,0,c
  9931   00185A  EF31  F00C         	goto	u5151
  9932   00185E  EF33  F00C         	goto	u5150
  9933   001862                     u5151:
  9934   001862  EF96  F00C         	goto	l5022
  9935   001866                     u5150:
  9936   001866                     
  9937                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
  9938   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9939   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9940   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
  9941   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9942   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9943   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9944   00187E  0ECD               	movlw	205
  9945   001880  6E2E               	movwf	___flge@ff2^0,c
  9946   001882  0ECC               	movlw	204
  9947   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
  9948   001886  0E4C               	movlw	76
  9949   001888  6E30               	movwf	(___flge@ff2+2)^0,c
  9950   00188A  0E3E               	movlw	62
  9951   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
  9952   00188E  ECA9  F022         	call	___flge	;wreg free
  9953   001892  A0D8               	btfss	status,0,c
  9954   001894  EF4E  F00C         	goto	u5161
  9955   001898  EF50  F00C         	goto	u5160
  9956   00189C                     u5161:
  9957   00189C  EF6F  F00C         	goto	l5010
  9958   0018A0                     u5160:
  9959   0018A0  0E1F               	movlw	31
  9960   0018A2  6E2A               	movwf	___flge@ff1^0,c
  9961   0018A4  0E85               	movlw	133
  9962   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
  9963   0018A8  0E6B               	movlw	107
  9964   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
  9965   0018AC  0E3E               	movlw	62
  9966   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
  9967   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
  9968   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
  9969   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
  9970   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
  9971   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
  9972   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
  9973   0018C8  ECA9  F022         	call	___flge	;wreg free
  9974   0018CC  A0D8               	btfss	status,0,c
  9975   0018CE  EF6B  F00C         	goto	u5171
  9976   0018D2  EF6D  F00C         	goto	u5170
  9977   0018D6                     u5171:
  9978   0018D6  EF6F  F00C         	goto	l5010
  9979   0018DA                     u5170:
  9980   0018DA  EF5E  F008         	goto	l4874
  9981   0018DE                     l5010:
  9982   0018DE  EE20 F008          	lfsr	2,8
  9983   0018E2  504D               	movf	Colour_decider@rel^0,w,c
  9984   0018E4  26D9               	addwf	fsr2l,f,c
  9985   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
  9986   0018E8  22DA               	addwfc	fsr2h,f,c
  9987   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
  9988   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
  9989   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
  9990   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
  9991   0018FA  0E9A               	movlw	154
  9992   0018FC  6E2E               	movwf	___flge@ff2^0,c
  9993   0018FE  0E99               	movlw	153
  9994   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
  9995   001902  0E19               	movlw	25
  9996   001904  6E30               	movwf	(___flge@ff2+2)^0,c
  9997   001906  0E3E               	movlw	62
  9998   001908  6E31               	movwf	(___flge@ff2+3)^0,c
  9999   00190A  ECA9  F022         	call	___flge	;wreg free
 10000   00190E  A0D8               	btfss	status,0,c
 10001   001910  EF8C  F00C         	goto	u5181
 10002   001914  EF8E  F00C         	goto	u5180
 10003   001918                     u5181:
 10004   001918  EF90  F00C         	goto	l5018
 10005   00191C                     u5180:
 10006   00191C  EFBE  F00A         	goto	l4932
 10007   001920                     l5018:
 10008                           
 10009                           ;color.c: 223:             return 7;
 10010   001920  0E00               	movlw	0
 10011   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10012   001924  0E07               	movlw	7
 10013   001926  6E4B               	movwf	?_Colour_decider^0,c
 10014   001928  EF9A  F00C         	goto	l70
 10015   00192C                     l5022:
 10016                           
 10017                           ;color.c: 227:         return 10;
 10018   00192C  0E00               	movlw	0
 10019   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 10020   001930  0E0A               	movlw	10
 10021   001932  6E4B               	movwf	?_Colour_decider^0,c
 10022   001934                     l70:
 10023   001934  0012               	return		;funcret
 10024   001936                     __end_of_Colour_decider:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function ___xxtofl *****************
 10028 ;; Defined at:
 10029 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;  sign            1    wreg     unsigned char 
 10032 ;;  val             4    0[COMRAM] long 
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  sign            1    8[COMRAM] unsigned char 
 10035 ;;  arg             4   10[COMRAM] unsigned long 
 10036 ;;  exp             1    9[COMRAM] unsigned char 
 10037 ;; Return value:  Size  Location     Type
 10038 ;;                  4    0[COMRAM] unsigned char 
 10039 ;; Registers used:
 10040 ;;		wreg, status,2, status,0
 10041 ;; Tracked objects:
 10042 ;;		On entry : 0/0
 10043 ;;		On exit  : 0/0
 10044 ;;		Unchanged: 0/0
 10045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10047 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10050 ;;Total ram usage:       14 bytes
 10051 ;; Hardware stack levels used: 1
 10052 ;; Hardware stack levels required when called: 1
 10053 ;; This function calls:
 10054 ;;		Nothing
 10055 ;; This function is called by:
 10056 ;;		_colour_rel
 10057 ;;		_Colour_decider
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text53
 10062   003E40                     __ptext53:
 10063                           	callstack 0
 10064   003E40                     ___xxtofl:
 10065                           	callstack 28
 10066                           
 10067                           ;incstack = 0
 10068                           ;___xxtofl@sign stored from wreg
 10069   003E40  6E09               	movwf	___xxtofl@sign^0,c
 10070   003E42  5009               	movf	___xxtofl@sign^0,w,c
 10071   003E44  B4D8               	btfsc	status,2,c
 10072   003E46  EF27  F01F         	goto	u4751
 10073   003E4A  EF29  F01F         	goto	u4750
 10074   003E4E                     u4751:
 10075   003E4E  EF4B  F01F         	goto	l1190
 10076   003E52                     u4750:
 10077   003E52  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10078   003E54  EF30  F01F         	goto	u4760
 10079   003E58  EF2E  F01F         	goto	u4761
 10080   003E5C                     u4761:
 10081   003E5C  EF4B  F01F         	goto	l1190
 10082   003E60                     u4760:
 10083   003E60  C001  F005         	movff	___xxtofl@val,??___xxtofl
 10084   003E64  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 10085   003E68  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 10086   003E6C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 10087   003E70  1E05               	comf	??___xxtofl^0,f,c
 10088   003E72  1E06               	comf	(??___xxtofl+1)^0,f,c
 10089   003E74  1E07               	comf	(??___xxtofl+2)^0,f,c
 10090   003E76  1E08               	comf	(??___xxtofl+3)^0,f,c
 10091   003E78  2A05               	incf	??___xxtofl^0,f,c
 10092   003E7A  0E00               	movlw	0
 10093   003E7C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10094   003E7E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10095   003E80  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10096   003E82  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 10097   003E86  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 10098   003E8A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 10099   003E8E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 10100   003E92  EF53  F01F         	goto	l4744
 10101   003E96                     l1190:
 10102   003E96  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 10103   003E9A  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10104   003E9E  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10105   003EA2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10106   003EA6                     l4744:
 10107   003EA6  5001               	movf	___xxtofl@val^0,w,c
 10108   003EA8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10109   003EAA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10110   003EAC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10111   003EAE  A4D8               	btfss	status,2,c
 10112   003EB0  EF5C  F01F         	goto	u4771
 10113   003EB4  EF5E  F01F         	goto	u4770
 10114   003EB8                     u4771:
 10115   003EB8  EF68  F01F         	goto	l4750
 10116   003EBC                     u4770:
 10117   003EBC  0E00               	movlw	0
 10118   003EBE  6E01               	movwf	?___xxtofl^0,c
 10119   003EC0  0E00               	movlw	0
 10120   003EC2  6E02               	movwf	(?___xxtofl+1)^0,c
 10121   003EC4  0E00               	movlw	0
 10122   003EC6  6E03               	movwf	(?___xxtofl+2)^0,c
 10123   003EC8  0E00               	movlw	0
 10124   003ECA  6E04               	movwf	(?___xxtofl+3)^0,c
 10125   003ECC  EFF9  F01F         	goto	l1193
 10126   003ED0                     l4750:
 10127   003ED0  0E96               	movlw	150
 10128   003ED2  6E0A               	movwf	___xxtofl@exp^0,c
 10129   003ED4  EF72  F01F         	goto	l4754
 10130   003ED8                     l4752:
 10131   003ED8  2A0A               	incf	___xxtofl@exp^0,f,c
 10132   003EDA  90D8               	bcf	status,0,c
 10133   003EDC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10134   003EDE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10135   003EE0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10136   003EE2  320B               	rrcf	___xxtofl@arg^0,f,c
 10137   003EE4                     l4754:
 10138   003EE4  0E00               	movlw	0
 10139   003EE6  140B               	andwf	___xxtofl@arg^0,w,c
 10140   003EE8  6E05               	movwf	??___xxtofl^0,c
 10141   003EEA  0E00               	movlw	0
 10142   003EEC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10143   003EEE  6E06               	movwf	(??___xxtofl+1)^0,c
 10144   003EF0  0E00               	movlw	0
 10145   003EF2  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10146   003EF4  6E07               	movwf	(??___xxtofl+2)^0,c
 10147   003EF6  0EFE               	movlw	254
 10148   003EF8  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10149   003EFA  6E08               	movwf	(??___xxtofl+3)^0,c
 10150   003EFC  5005               	movf	??___xxtofl^0,w,c
 10151   003EFE  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10152   003F00  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10153   003F02  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10154   003F04  A4D8               	btfss	status,2,c
 10155   003F06  EF87  F01F         	goto	u4781
 10156   003F0A  EF89  F01F         	goto	u4780
 10157   003F0E                     u4781:
 10158   003F0E  EF6C  F01F         	goto	l4752
 10159   003F12                     u4780:
 10160   003F12  EF97  F01F         	goto	l1197
 10161   003F16                     l4756:
 10162   003F16  2A0A               	incf	___xxtofl@exp^0,f,c
 10163   003F18  0E01               	movlw	1
 10164   003F1A  260B               	addwf	___xxtofl@arg^0,f,c
 10165   003F1C  0E00               	movlw	0
 10166   003F1E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10167   003F20  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10168   003F22  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10169   003F24  90D8               	bcf	status,0,c
 10170   003F26  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10171   003F28  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10172   003F2A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10173   003F2C  320B               	rrcf	___xxtofl@arg^0,f,c
 10174   003F2E                     l1197:
 10175   003F2E  0E00               	movlw	0
 10176   003F30  140B               	andwf	___xxtofl@arg^0,w,c
 10177   003F32  6E05               	movwf	??___xxtofl^0,c
 10178   003F34  0E00               	movlw	0
 10179   003F36  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10180   003F38  6E06               	movwf	(??___xxtofl+1)^0,c
 10181   003F3A  0E00               	movlw	0
 10182   003F3C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10183   003F3E  6E07               	movwf	(??___xxtofl+2)^0,c
 10184   003F40  0EFF               	movlw	255
 10185   003F42  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10186   003F44  6E08               	movwf	(??___xxtofl+3)^0,c
 10187   003F46  5005               	movf	??___xxtofl^0,w,c
 10188   003F48  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10189   003F4A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10190   003F4C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10191   003F4E  A4D8               	btfss	status,2,c
 10192   003F50  EFAC  F01F         	goto	u4791
 10193   003F54  EFAE  F01F         	goto	u4790
 10194   003F58                     u4791:
 10195   003F58  EF8B  F01F         	goto	l4756
 10196   003F5C                     u4790:
 10197   003F5C  EFB6  F01F         	goto	l4764
 10198   003F60                     l4762:
 10199   003F60  060A               	decf	___xxtofl@exp^0,f,c
 10200   003F62  90D8               	bcf	status,0,c
 10201   003F64  360B               	rlcf	___xxtofl@arg^0,f,c
 10202   003F66  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10203   003F68  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10204   003F6A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10205   003F6C                     l4764:
 10206   003F6C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10207   003F6E  EFBB  F01F         	goto	u4801
 10208   003F72  EFBD  F01F         	goto	u4800
 10209   003F76                     u4801:
 10210   003F76  EFC5  F01F         	goto	l1204
 10211   003F7A                     u4800:
 10212   003F7A  0E02               	movlw	2
 10213   003F7C  600A               	cpfslt	___xxtofl@exp^0,c
 10214   003F7E  EFC3  F01F         	goto	u4811
 10215   003F82  EFC5  F01F         	goto	u4810
 10216   003F86                     u4811:
 10217   003F86  EFB0  F01F         	goto	l4762
 10218   003F8A                     u4810:
 10219   003F8A                     l1204:
 10220   003F8A  B00A               	btfsc	___xxtofl@exp^0,0,c
 10221   003F8C  EFCA  F01F         	goto	u4821
 10222   003F90  EFCC  F01F         	goto	u4820
 10223   003F94                     u4821:
 10224   003F94  EFCD  F01F         	goto	l4770
 10225   003F98                     u4820:
 10226   003F98  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10227   003F9A                     l4770:
 10228   003F9A  90D8               	bcf	status,0,c
 10229   003F9C  320A               	rrcf	___xxtofl@exp^0,f,c
 10230   003F9E  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 10231   003FA2  6A06               	clrf	(??___xxtofl+1)^0,c
 10232   003FA4  6A07               	clrf	(??___xxtofl+2)^0,c
 10233   003FA6  6A08               	clrf	(??___xxtofl+3)^0,c
 10234   003FA8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 10235   003FAC  6A07               	clrf	(??___xxtofl+2)^0,c
 10236   003FAE  6A06               	clrf	(??___xxtofl+1)^0,c
 10237   003FB0  6A05               	clrf	??___xxtofl^0,c
 10238   003FB2  5005               	movf	??___xxtofl^0,w,c
 10239   003FB4  120B               	iorwf	___xxtofl@arg^0,f,c
 10240   003FB6  5006               	movf	(??___xxtofl+1)^0,w,c
 10241   003FB8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10242   003FBA  5007               	movf	(??___xxtofl+2)^0,w,c
 10243   003FBC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10244   003FBE  5008               	movf	(??___xxtofl+3)^0,w,c
 10245   003FC0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10246   003FC2  5009               	movf	___xxtofl@sign^0,w,c
 10247   003FC4  B4D8               	btfsc	status,2,c
 10248   003FC6  EFE7  F01F         	goto	u4831
 10249   003FCA  EFE9  F01F         	goto	u4830
 10250   003FCE                     u4831:
 10251   003FCE  EFF1  F01F         	goto	l4780
 10252   003FD2                     u4830:
 10253   003FD2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10254   003FD4  EFF0  F01F         	goto	u4840
 10255   003FD8  EFEE  F01F         	goto	u4841
 10256   003FDC                     u4841:
 10257   003FDC  EFF1  F01F         	goto	l4780
 10258   003FE0                     u4840:
 10259   003FE0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10260   003FE2                     l4780:
 10261   003FE2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 10262   003FE6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 10263   003FEA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 10264   003FEE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 10265   003FF2                     l1193:
 10266   003FF2  0012               	return		;funcret
 10267   003FF4                     __end_of___xxtofl:
 10268                           	callstack 0
 10269                           
 10270 ;; *************** function ___flsub *****************
 10271 ;; Defined at:
 10272 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  b               4   41[COMRAM] unsigned char 
 10275 ;;  a               4   45[COMRAM] unsigned char 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;		None
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  4   41[COMRAM] unsigned char 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2, status,0, cstack
 10282 ;; Tracked objects:
 10283 ;;		On entry : 0/0
 10284 ;;		On exit  : 0/0
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10287 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10290 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10291 ;;Total ram usage:        8 bytes
 10292 ;; Hardware stack levels used: 1
 10293 ;; Hardware stack levels required when called: 2
 10294 ;; This function calls:
 10295 ;;		___fladd
 10296 ;; This function is called by:
 10297 ;;		_Colour_decider
 10298 ;;		_efgtoa
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           	psect	text54
 10303   005498                     __ptext54:
 10304                           	callstack 0
 10305   005498                     ___flsub:
 10306                           	callstack 24
 10307   005498  0E00               	movlw	0
 10308   00549A  1A2E               	xorwf	___flsub@a^0,f,c
 10309   00549C  0E00               	movlw	0
 10310   00549E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 10311   0054A0  0E00               	movlw	0
 10312   0054A2  1A30               	xorwf	(___flsub@a+2)^0,f,c
 10313   0054A4  0E80               	movlw	128
 10314   0054A6  1A31               	xorwf	(___flsub@a+3)^0,f,c
 10315   0054A8  C02A  F001         	movff	___flsub@b,___fladd@b
 10316   0054AC  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 10317   0054B0  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 10318   0054B4  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 10319   0054B8  C02E  F005         	movff	___flsub@a,___fladd@a
 10320   0054BC  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 10321   0054C0  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 10322   0054C4  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 10323   0054C8  EC98  F011         	call	___fladd	;wreg free
 10324   0054CC  C001  F02A         	movff	?___fladd,?___flsub
 10325   0054D0  C002  F02B         	movff	?___fladd+1,?___flsub+1
 10326   0054D4  C003  F02C         	movff	?___fladd+2,?___flsub+2
 10327   0054D8  C004  F02D         	movff	?___fladd+3,?___flsub+3
 10328   0054DC  0012               	return		;funcret
 10329   0054DE                     __end_of___flsub:
 10330                           	callstack 0
 10331                           
 10332 ;; *************** function ___fladd *****************
 10333 ;; Defined at:
 10334 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  b               4    0[COMRAM] unsigned char 
 10337 ;;  a               4    4[COMRAM] unsigned char 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  grs             1   15[COMRAM] unsigned char 
 10340 ;;  bexp            1   14[COMRAM] unsigned char 
 10341 ;;  aexp            1   13[COMRAM] unsigned char 
 10342 ;;  signs           1   12[COMRAM] unsigned char 
 10343 ;; Return value:  Size  Location     Type
 10344 ;;                  4    0[COMRAM] unsigned char 
 10345 ;; Registers used:
 10346 ;;		wreg, status,2, status,0
 10347 ;; Tracked objects:
 10348 ;;		On entry : 0/0
 10349 ;;		On exit  : 0/0
 10350 ;;		Unchanged: 0/0
 10351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10352 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10353 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10354 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10355 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10356 ;;Total ram usage:       16 bytes
 10357 ;; Hardware stack levels used: 1
 10358 ;; Hardware stack levels required when called: 1
 10359 ;; This function calls:
 10360 ;;		Nothing
 10361 ;; This function is called by:
 10362 ;;		_colour_rel
 10363 ;;		_Colour_decider
 10364 ;;		___flsub
 10365 ;;		_efgtoa
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           	psect	text55
 10370   002330                     __ptext55:
 10371                           	callstack 0
 10372   002330                     ___fladd:
 10373                           	callstack 24
 10374   002330  5004               	movf	(___fladd@b+3)^0,w,c
 10375   002332  0B80               	andlw	128
 10376   002334  6E0D               	movwf	___fladd@signs^0,c
 10377   002336  5004               	movf	(___fladd@b+3)^0,w,c
 10378   002338  2404               	addwf	(___fladd@b+3)^0,w,c
 10379   00233A  6E0F               	movwf	___fladd@bexp^0,c
 10380   00233C  AE03               	btfss	(___fladd@b+2)^0,7,c
 10381   00233E  EFA3  F011         	goto	u2751
 10382   002342  EFA5  F011         	goto	u2750
 10383   002346                     u2751:
 10384   002346  EFA6  F011         	goto	l3432
 10385   00234A                     u2750:
 10386   00234A  800F               	bsf	___fladd@bexp^0,0,c
 10387   00234C                     l3432:
 10388   00234C  500F               	movf	___fladd@bexp^0,w,c
 10389   00234E  B4D8               	btfsc	status,2,c
 10390   002350  EFAC  F011         	goto	u2761
 10391   002354  EFAE  F011         	goto	u2760
 10392   002358                     u2761:
 10393   002358  EFC3  F011         	goto	l3442
 10394   00235C                     u2760:
 10395   00235C  280F               	incf	___fladd@bexp^0,w,c
 10396   00235E  A4D8               	btfss	status,2,c
 10397   002360  EFB4  F011         	goto	u2771
 10398   002364  EFB6  F011         	goto	u2770
 10399   002368                     u2771:
 10400   002368  EFBE  F011         	goto	l3438
 10401   00236C                     u2770:
 10402   00236C  0E00               	movlw	0
 10403   00236E  6E01               	movwf	___fladd@b^0,c
 10404   002370  0E00               	movlw	0
 10405   002372  6E02               	movwf	(___fladd@b+1)^0,c
 10406   002374  0E00               	movlw	0
 10407   002376  6E03               	movwf	(___fladd@b+2)^0,c
 10408   002378  0E00               	movlw	0
 10409   00237A  6E04               	movwf	(___fladd@b+3)^0,c
 10410   00237C                     l3438:
 10411   00237C  8E03               	bsf	(___fladd@b+2)^0,7,c
 10412   00237E  0E00               	movlw	0
 10413   002380  6E04               	movwf	(___fladd@b+3)^0,c
 10414   002382  EFCB  F011         	goto	l3444
 10415   002386                     l3442:
 10416   002386  0E00               	movlw	0
 10417   002388  6E01               	movwf	___fladd@b^0,c
 10418   00238A  0E00               	movlw	0
 10419   00238C  6E02               	movwf	(___fladd@b+1)^0,c
 10420   00238E  0E00               	movlw	0
 10421   002390  6E03               	movwf	(___fladd@b+2)^0,c
 10422   002392  0E00               	movlw	0
 10423   002394  6E04               	movwf	(___fladd@b+3)^0,c
 10424   002396                     l3444:
 10425   002396  5008               	movf	(___fladd@a+3)^0,w,c
 10426   002398  0B80               	andlw	128
 10427   00239A  6E0E               	movwf	___fladd@aexp^0,c
 10428   00239C  500D               	movf	___fladd@signs^0,w,c
 10429   00239E  180E               	xorwf	___fladd@aexp^0,w,c
 10430   0023A0  B4D8               	btfsc	status,2,c
 10431   0023A2  EFD5  F011         	goto	u2781
 10432   0023A6  EFD7  F011         	goto	u2780
 10433   0023AA                     u2781:
 10434   0023AA  EFD8  F011         	goto	l3450
 10435   0023AE                     u2780:
 10436   0023AE  8C0D               	bsf	___fladd@signs^0,6,c
 10437   0023B0                     l3450:
 10438   0023B0  5008               	movf	(___fladd@a+3)^0,w,c
 10439   0023B2  2408               	addwf	(___fladd@a+3)^0,w,c
 10440   0023B4  6E0E               	movwf	___fladd@aexp^0,c
 10441   0023B6  AE07               	btfss	(___fladd@a+2)^0,7,c
 10442   0023B8  EFE0  F011         	goto	u2791
 10443   0023BC  EFE2  F011         	goto	u2790
 10444   0023C0                     u2791:
 10445   0023C0  EFE3  F011         	goto	l3456
 10446   0023C4                     u2790:
 10447   0023C4  800E               	bsf	___fladd@aexp^0,0,c
 10448   0023C6                     l3456:
 10449   0023C6  500E               	movf	___fladd@aexp^0,w,c
 10450   0023C8  B4D8               	btfsc	status,2,c
 10451   0023CA  EFE9  F011         	goto	u2801
 10452   0023CE  EFEB  F011         	goto	u2800
 10453   0023D2                     u2801:
 10454   0023D2  EF00  F012         	goto	l3466
 10455   0023D6                     u2800:
 10456   0023D6  280E               	incf	___fladd@aexp^0,w,c
 10457   0023D8  A4D8               	btfss	status,2,c
 10458   0023DA  EFF1  F011         	goto	u2811
 10459   0023DE  EFF3  F011         	goto	u2810
 10460   0023E2                     u2811:
 10461   0023E2  EFFB  F011         	goto	l3462
 10462   0023E6                     u2810:
 10463   0023E6  0E00               	movlw	0
 10464   0023E8  6E05               	movwf	___fladd@a^0,c
 10465   0023EA  0E00               	movlw	0
 10466   0023EC  6E06               	movwf	(___fladd@a+1)^0,c
 10467   0023EE  0E00               	movlw	0
 10468   0023F0  6E07               	movwf	(___fladd@a+2)^0,c
 10469   0023F2  0E00               	movlw	0
 10470   0023F4  6E08               	movwf	(___fladd@a+3)^0,c
 10471   0023F6                     l3462:
 10472   0023F6  8E07               	bsf	(___fladd@a+2)^0,7,c
 10473   0023F8  0E00               	movlw	0
 10474   0023FA  6E08               	movwf	(___fladd@a+3)^0,c
 10475   0023FC  EF08  F012         	goto	l3468
 10476   002400                     l3466:
 10477   002400  0E00               	movlw	0
 10478   002402  6E05               	movwf	___fladd@a^0,c
 10479   002404  0E00               	movlw	0
 10480   002406  6E06               	movwf	(___fladd@a+1)^0,c
 10481   002408  0E00               	movlw	0
 10482   00240A  6E07               	movwf	(___fladd@a+2)^0,c
 10483   00240C  0E00               	movlw	0
 10484   00240E  6E08               	movwf	(___fladd@a+3)^0,c
 10485   002410                     l3468:
 10486   002410  500F               	movf	___fladd@bexp^0,w,c
 10487   002412  5C0E               	subwf	___fladd@aexp^0,w,c
 10488   002414  B0D8               	btfsc	status,0,c
 10489   002416  EF0F  F012         	goto	u2821
 10490   00241A  EF11  F012         	goto	u2820
 10491   00241E                     u2821:
 10492   00241E  EF38  F012         	goto	l3504
 10493   002422                     u2820:
 10494   002422  AC0D               	btfss	___fladd@signs^0,6,c
 10495   002424  EF16  F012         	goto	u2831
 10496   002428  EF18  F012         	goto	u2830
 10497   00242C                     u2831:
 10498   00242C  EF1A  F012         	goto	l3474
 10499   002430                     u2830:
 10500   002430  0E80               	movlw	128
 10501   002432  1A0D               	xorwf	___fladd@signs^0,f,c
 10502   002434                     l3474:
 10503   002434  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 10504   002438  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10505   00243C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 10506   002440  C001  F010         	movff	___fladd@b,___fladd@grs
 10507   002444  C005  F001         	movff	___fladd@a,___fladd@b
 10508   002448  C010  F005         	movff	___fladd@grs,___fladd@a
 10509   00244C  C002  F010         	movff	___fladd@b+1,___fladd@grs
 10510   002450  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 10511   002454  C010  F006         	movff	___fladd@grs,___fladd@a+1
 10512   002458  C003  F010         	movff	___fladd@b+2,___fladd@grs
 10513   00245C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 10514   002460  C010  F007         	movff	___fladd@grs,___fladd@a+2
 10515   002464  C004  F010         	movff	___fladd@b+3,___fladd@grs
 10516   002468  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 10517   00246C  C010  F008         	movff	___fladd@grs,___fladd@a+3
 10518   002470                     l3504:
 10519   002470  0E00               	movlw	0
 10520   002472  6E10               	movwf	___fladd@grs^0,c
 10521   002474  500F               	movf	___fladd@bexp^0,w,c
 10522   002476  C00E  F009         	movff	___fladd@aexp,??___fladd
 10523   00247A  6A0A               	clrf	(??___fladd+1)^0,c
 10524   00247C  5E09               	subwf	??___fladd^0,f,c
 10525   00247E  0E00               	movlw	0
 10526   002480  5A0A               	subwfb	(??___fladd+1)^0,f,c
 10527   002482  BE0A               	btfsc	(??___fladd+1)^0,7,c
 10528   002484  EF4D  F012         	goto	u2841
 10529   002488  500A               	movf	(??___fladd+1)^0,w,c
 10530   00248A  E109               	bnz	u2840
 10531   00248C  0E1A               	movlw	26
 10532   00248E  5C09               	subwf	??___fladd^0,w,c
 10533   002490  A0D8               	btfss	status,0,c
 10534   002492  EF4D  F012         	goto	u2841
 10535   002496  EF4F  F012         	goto	u2840
 10536   00249A                     u2841:
 10537   00249A  EF86  F012         	goto	l1064
 10538   00249E                     u2840:
 10539   00249E  5001               	movf	___fladd@b^0,w,c
 10540   0024A0  1002               	iorwf	(___fladd@b+1)^0,w,c
 10541   0024A2  1003               	iorwf	(___fladd@b+2)^0,w,c
 10542   0024A4  1004               	iorwf	(___fladd@b+3)^0,w,c
 10543   0024A6  A4D8               	btfss	status,2,c
 10544   0024A8  EF58  F012         	goto	u2851
 10545   0024AC  EF5B  F012         	goto	u2850
 10546   0024B0                     u2851:
 10547   0024B0  0E01               	movlw	1
 10548   0024B2  EF5C  F012         	goto	u2860
 10549   0024B6                     u2850:
 10550   0024B6  0E00               	movlw	0
 10551   0024B8                     u2860:
 10552   0024B8  6E10               	movwf	___fladd@grs^0,c
 10553   0024BA  0E00               	movlw	0
 10554   0024BC  6E01               	movwf	___fladd@b^0,c
 10555   0024BE  0E00               	movlw	0
 10556   0024C0  6E02               	movwf	(___fladd@b+1)^0,c
 10557   0024C2  0E00               	movlw	0
 10558   0024C4  6E03               	movwf	(___fladd@b+2)^0,c
 10559   0024C6  0E00               	movlw	0
 10560   0024C8  6E04               	movwf	(___fladd@b+3)^0,c
 10561   0024CA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 10562   0024CE  EF8F  F012         	goto	l1063
 10563   0024D2                     l1065:
 10564   0024D2  A010               	btfss	___fladd@grs^0,0,c
 10565   0024D4  EF6E  F012         	goto	u2871
 10566   0024D8  EF70  F012         	goto	u2870
 10567   0024DC                     u2871:
 10568   0024DC  EF76  F012         	goto	l3516
 10569   0024E0                     u2870:
 10570   0024E0  90D8               	bcf	status,0,c
 10571   0024E2  3010               	rrcf	___fladd@grs^0,w,c
 10572   0024E4  0901               	iorlw	1
 10573   0024E6  6E10               	movwf	___fladd@grs^0,c
 10574   0024E8  EF78  F012         	goto	l3518
 10575   0024EC                     l3516:
 10576   0024EC  90D8               	bcf	status,0,c
 10577   0024EE  3210               	rrcf	___fladd@grs^0,f,c
 10578   0024F0                     l3518:
 10579   0024F0  A001               	btfss	___fladd@b^0,0,c
 10580   0024F2  EF7D  F012         	goto	u2881
 10581   0024F6  EF7F  F012         	goto	u2880
 10582   0024FA                     u2881:
 10583   0024FA  EF80  F012         	goto	l3522
 10584   0024FE                     u2880:
 10585   0024FE  8E10               	bsf	___fladd@grs^0,7,c
 10586   002500                     l3522:
 10587   002500  3404               	rlcf	(___fladd@b+3)^0,w,c
 10588   002502  3204               	rrcf	(___fladd@b+3)^0,f,c
 10589   002504  3203               	rrcf	(___fladd@b+2)^0,f,c
 10590   002506  3202               	rrcf	(___fladd@b+1)^0,f,c
 10591   002508  3201               	rrcf	___fladd@b^0,f,c
 10592   00250A  2A0F               	incf	___fladd@bexp^0,f,c
 10593   00250C                     l1064:
 10594   00250C  500E               	movf	___fladd@aexp^0,w,c
 10595   00250E  5C0F               	subwf	___fladd@bexp^0,w,c
 10596   002510  A0D8               	btfss	status,0,c
 10597   002512  EF8D  F012         	goto	u2891
 10598   002516  EF8F  F012         	goto	u2890
 10599   00251A                     u2891:
 10600   00251A  EF69  F012         	goto	l1065
 10601   00251E                     u2890:
 10602   00251E                     l1063:
 10603   00251E  BC0D               	btfsc	___fladd@signs^0,6,c
 10604   002520  EF94  F012         	goto	u2901
 10605   002524  EF96  F012         	goto	u2900
 10606   002528                     u2901:
 10607   002528  EFD6  F012         	goto	l3550
 10608   00252C                     u2900:
 10609   00252C  500F               	movf	___fladd@bexp^0,w,c
 10610   00252E  A4D8               	btfss	status,2,c
 10611   002530  EF9C  F012         	goto	u2911
 10612   002534  EF9E  F012         	goto	u2910
 10613   002538                     u2911:
 10614   002538  EFA8  F012         	goto	l3532
 10615   00253C                     u2910:
 10616   00253C  0E00               	movlw	0
 10617   00253E  6E01               	movwf	?___fladd^0,c
 10618   002540  0E00               	movlw	0
 10619   002542  6E02               	movwf	(?___fladd+1)^0,c
 10620   002544  0E00               	movlw	0
 10621   002546  6E03               	movwf	(?___fladd+2)^0,c
 10622   002548  0E00               	movlw	0
 10623   00254A  6E04               	movwf	(?___fladd+3)^0,c
 10624   00254C  EFF7  F013         	goto	l1072
 10625   002550                     l3532:
 10626   002550  5005               	movf	___fladd@a^0,w,c
 10627   002552  2601               	addwf	___fladd@b^0,f,c
 10628   002554  5006               	movf	(___fladd@a+1)^0,w,c
 10629   002556  2202               	addwfc	(___fladd@b+1)^0,f,c
 10630   002558  5007               	movf	(___fladd@a+2)^0,w,c
 10631   00255A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10632   00255C  5008               	movf	(___fladd@a+3)^0,w,c
 10633   00255E  2204               	addwfc	(___fladd@b+3)^0,f,c
 10634   002560  A004               	btfss	(___fladd@b+3)^0,0,c
 10635   002562  EFB5  F012         	goto	u2921
 10636   002566  EFB7  F012         	goto	u2920
 10637   00256A                     u2921:
 10638   00256A  EF63  F013         	goto	l3586
 10639   00256E                     u2920:
 10640   00256E  A010               	btfss	___fladd@grs^0,0,c
 10641   002570  EFBC  F012         	goto	u2931
 10642   002574  EFBE  F012         	goto	u2930
 10643   002578                     u2931:
 10644   002578  EFC4  F012         	goto	l3540
 10645   00257C                     u2930:
 10646   00257C  90D8               	bcf	status,0,c
 10647   00257E  3010               	rrcf	___fladd@grs^0,w,c
 10648   002580  0901               	iorlw	1
 10649   002582  6E10               	movwf	___fladd@grs^0,c
 10650   002584  EFC6  F012         	goto	l3542
 10651   002588                     l3540:
 10652   002588  90D8               	bcf	status,0,c
 10653   00258A  3210               	rrcf	___fladd@grs^0,f,c
 10654   00258C                     l3542:
 10655   00258C  A001               	btfss	___fladd@b^0,0,c
 10656   00258E  EFCB  F012         	goto	u2941
 10657   002592  EFCD  F012         	goto	u2940
 10658   002596                     u2941:
 10659   002596  EFCE  F012         	goto	l3546
 10660   00259A                     u2940:
 10661   00259A  8E10               	bsf	___fladd@grs^0,7,c
 10662   00259C                     l3546:
 10663   00259C  3404               	rlcf	(___fladd@b+3)^0,w,c
 10664   00259E  3204               	rrcf	(___fladd@b+3)^0,f,c
 10665   0025A0  3203               	rrcf	(___fladd@b+2)^0,f,c
 10666   0025A2  3202               	rrcf	(___fladd@b+1)^0,f,c
 10667   0025A4  3201               	rrcf	___fladd@b^0,f,c
 10668   0025A6  2A0F               	incf	___fladd@bexp^0,f,c
 10669   0025A8  EF63  F013         	goto	l3586
 10670   0025AC                     l3550:
 10671   0025AC  5005               	movf	___fladd@a^0,w,c
 10672   0025AE  5C01               	subwf	___fladd@b^0,w,c
 10673   0025B0  5006               	movf	(___fladd@a+1)^0,w,c
 10674   0025B2  5802               	subwfb	(___fladd@b+1)^0,w,c
 10675   0025B4  5007               	movf	(___fladd@a+2)^0,w,c
 10676   0025B6  5803               	subwfb	(___fladd@b+2)^0,w,c
 10677   0025B8  5004               	movf	(___fladd@b+3)^0,w,c
 10678   0025BA  0A80               	xorlw	128
 10679   0025BC  6E09               	movwf	??___fladd^0,c
 10680   0025BE  5008               	movf	(___fladd@a+3)^0,w,c
 10681   0025C0  0A80               	xorlw	128
 10682   0025C2  5809               	subwfb	??___fladd^0,w,c
 10683   0025C4  B0D8               	btfsc	status,0,c
 10684   0025C6  EFE7  F012         	goto	u2951
 10685   0025CA  EFE9  F012         	goto	u2950
 10686   0025CE                     u2951:
 10687   0025CE  EF14  F013         	goto	l3560
 10688   0025D2                     u2950:
 10689   0025D2  5001               	movf	___fladd@b^0,w,c
 10690   0025D4  5C05               	subwf	___fladd@a^0,w,c
 10691   0025D6  6E09               	movwf	??___fladd^0,c
 10692   0025D8  5002               	movf	(___fladd@b+1)^0,w,c
 10693   0025DA  5806               	subwfb	(___fladd@a+1)^0,w,c
 10694   0025DC  6E0A               	movwf	(??___fladd+1)^0,c
 10695   0025DE  5003               	movf	(___fladd@b+2)^0,w,c
 10696   0025E0  5807               	subwfb	(___fladd@a+2)^0,w,c
 10697   0025E2  6E0B               	movwf	(??___fladd+2)^0,c
 10698   0025E4  5004               	movf	(___fladd@b+3)^0,w,c
 10699   0025E6  5808               	subwfb	(___fladd@a+3)^0,w,c
 10700   0025E8  6E0C               	movwf	(??___fladd+3)^0,c
 10701   0025EA  0EFF               	movlw	255
 10702   0025EC  2409               	addwf	??___fladd^0,w,c
 10703   0025EE  6E01               	movwf	___fladd@b^0,c
 10704   0025F0  0EFF               	movlw	255
 10705   0025F2  200A               	addwfc	(??___fladd+1)^0,w,c
 10706   0025F4  6E02               	movwf	(___fladd@b+1)^0,c
 10707   0025F6  0EFF               	movlw	255
 10708   0025F8  200B               	addwfc	(??___fladd+2)^0,w,c
 10709   0025FA  6E03               	movwf	(___fladd@b+2)^0,c
 10710   0025FC  0EFF               	movlw	255
 10711   0025FE  200C               	addwfc	(??___fladd+3)^0,w,c
 10712   002600  6E04               	movwf	(___fladd@b+3)^0,c
 10713   002602  0E80               	movlw	128
 10714   002604  1A0D               	xorwf	___fladd@signs^0,f,c
 10715   002606  6C10               	negf	___fladd@grs^0,c
 10716   002608  5010               	movf	___fladd@grs^0,w,c
 10717   00260A  A4D8               	btfss	status,2,c
 10718   00260C  EF0A  F013         	goto	u2961
 10719   002610  EF0C  F013         	goto	u2960
 10720   002614                     u2961:
 10721   002614  EF1C  F013         	goto	l1080
 10722   002618                     u2960:
 10723   002618  0E01               	movlw	1
 10724   00261A  2601               	addwf	___fladd@b^0,f,c
 10725   00261C  0E00               	movlw	0
 10726   00261E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10727   002620  2203               	addwfc	(___fladd@b+2)^0,f,c
 10728   002622  2204               	addwfc	(___fladd@b+3)^0,f,c
 10729   002624  EF1C  F013         	goto	l1080
 10730   002628                     l3560:
 10731   002628  5005               	movf	___fladd@a^0,w,c
 10732   00262A  5E01               	subwf	___fladd@b^0,f,c
 10733   00262C  5006               	movf	(___fladd@a+1)^0,w,c
 10734   00262E  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10735   002630  5007               	movf	(___fladd@a+2)^0,w,c
 10736   002632  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10737   002634  5008               	movf	(___fladd@a+3)^0,w,c
 10738   002636  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10739   002638                     l1080:
 10740   002638  5001               	movf	___fladd@b^0,w,c
 10741   00263A  1002               	iorwf	(___fladd@b+1)^0,w,c
 10742   00263C  1003               	iorwf	(___fladd@b+2)^0,w,c
 10743   00263E  1004               	iorwf	(___fladd@b+3)^0,w,c
 10744   002640  A4D8               	btfss	status,2,c
 10745   002642  EF25  F013         	goto	u2971
 10746   002646  EF27  F013         	goto	u2970
 10747   00264A                     u2971:
 10748   00264A  EF5C  F013         	goto	l3584
 10749   00264E                     u2970:
 10750   00264E  5010               	movf	___fladd@grs^0,w,c
 10751   002650  A4D8               	btfss	status,2,c
 10752   002652  EF2D  F013         	goto	u2981
 10753   002656  EF2F  F013         	goto	u2980
 10754   00265A                     u2981:
 10755   00265A  EF5C  F013         	goto	l3584
 10756   00265E                     u2980:
 10757   00265E  0E00               	movlw	0
 10758   002660  6E01               	movwf	?___fladd^0,c
 10759   002662  0E00               	movlw	0
 10760   002664  6E02               	movwf	(?___fladd+1)^0,c
 10761   002666  0E00               	movlw	0
 10762   002668  6E03               	movwf	(?___fladd+2)^0,c
 10763   00266A  0E00               	movlw	0
 10764   00266C  6E04               	movwf	(?___fladd+3)^0,c
 10765   00266E  EFF7  F013         	goto	l1072
 10766   002672                     l3568:
 10767   002672  90D8               	bcf	status,0,c
 10768   002674  3601               	rlcf	___fladd@b^0,f,c
 10769   002676  3602               	rlcf	(___fladd@b+1)^0,f,c
 10770   002678  3603               	rlcf	(___fladd@b+2)^0,f,c
 10771   00267A  3604               	rlcf	(___fladd@b+3)^0,f,c
 10772   00267C  AE10               	btfss	___fladd@grs^0,7,c
 10773   00267E  EF43  F013         	goto	u2991
 10774   002682  EF45  F013         	goto	u2990
 10775   002686                     u2991:
 10776   002686  EF46  F013         	goto	l3574
 10777   00268A                     u2990:
 10778   00268A  8001               	bsf	___fladd@b^0,0,c
 10779   00268C                     l3574:
 10780   00268C  A010               	btfss	___fladd@grs^0,0,c
 10781   00268E  EF4B  F013         	goto	u3001
 10782   002692  EF4D  F013         	goto	u3000
 10783   002696                     u3001:
 10784   002696  EF51  F013         	goto	l3578
 10785   00269A                     u3000:
 10786   00269A  80D8               	bsf	status,0,c
 10787   00269C  3610               	rlcf	___fladd@grs^0,f,c
 10788   00269E  EF53  F013         	goto	l3580
 10789   0026A2                     l3578:
 10790   0026A2  90D8               	bcf	status,0,c
 10791   0026A4  3610               	rlcf	___fladd@grs^0,f,c
 10792   0026A6                     l3580:
 10793   0026A6  500F               	movf	___fladd@bexp^0,w,c
 10794   0026A8  B4D8               	btfsc	status,2,c
 10795   0026AA  EF59  F013         	goto	u3011
 10796   0026AE  EF5B  F013         	goto	u3010
 10797   0026B2                     u3011:
 10798   0026B2  EF5C  F013         	goto	l3584
 10799   0026B6                     u3010:
 10800   0026B6  060F               	decf	___fladd@bexp^0,f,c
 10801   0026B8                     l3584:
 10802   0026B8  AE03               	btfss	(___fladd@b+2)^0,7,c
 10803   0026BA  EF61  F013         	goto	u3021
 10804   0026BE  EF63  F013         	goto	u3020
 10805   0026C2                     u3021:
 10806   0026C2  EF39  F013         	goto	l3568
 10807   0026C6                     u3020:
 10808   0026C6                     l3586:
 10809   0026C6  0E00               	movlw	0
 10810   0026C8  6E0E               	movwf	___fladd@aexp^0,c
 10811   0026CA  AE10               	btfss	___fladd@grs^0,7,c
 10812   0026CC  EF6A  F013         	goto	u3031
 10813   0026D0  EF6C  F013         	goto	u3030
 10814   0026D4                     u3031:
 10815   0026D4  EF84  F013         	goto	l1089
 10816   0026D8                     u3030:
 10817   0026D8  C010  F009         	movff	___fladd@grs,??___fladd
 10818   0026DC  0E7F               	movlw	127
 10819   0026DE  1609               	andwf	??___fladd^0,f,c
 10820   0026E0  B4D8               	btfsc	status,2,c
 10821   0026E2  EF75  F013         	goto	u3041
 10822   0026E6  EF77  F013         	goto	u3040
 10823   0026EA                     u3041:
 10824   0026EA  EF7B  F013         	goto	l1090
 10825   0026EE                     u3040:
 10826   0026EE                     l3592:
 10827   0026EE  0E01               	movlw	1
 10828   0026F0  6E0E               	movwf	___fladd@aexp^0,c
 10829   0026F2  EF84  F013         	goto	l1089
 10830   0026F6                     l1090:
 10831   0026F6  A001               	btfss	___fladd@b^0,0,c
 10832   0026F8  EF80  F013         	goto	u3051
 10833   0026FC  EF82  F013         	goto	u3050
 10834   002700                     u3051:
 10835   002700  EF84  F013         	goto	l1089
 10836   002704                     u3050:
 10837   002704  EF77  F013         	goto	l3592
 10838   002708                     l1089:
 10839   002708  500E               	movf	___fladd@aexp^0,w,c
 10840   00270A  B4D8               	btfsc	status,2,c
 10841   00270C  EF8A  F013         	goto	u3061
 10842   002710  EF8C  F013         	goto	u3060
 10843   002714                     u3061:
 10844   002714  EFB7  F013         	goto	l3604
 10845   002718                     u3060:
 10846   002718  0E01               	movlw	1
 10847   00271A  2601               	addwf	___fladd@b^0,f,c
 10848   00271C  0E00               	movlw	0
 10849   00271E  2202               	addwfc	(___fladd@b+1)^0,f,c
 10850   002720  2203               	addwfc	(___fladd@b+2)^0,f,c
 10851   002722  2204               	addwfc	(___fladd@b+3)^0,f,c
 10852   002724  A004               	btfss	(___fladd@b+3)^0,0,c
 10853   002726  EF97  F013         	goto	u3071
 10854   00272A  EF99  F013         	goto	u3070
 10855   00272E                     u3071:
 10856   00272E  EFB7  F013         	goto	l3604
 10857   002732                     u3070:
 10858   002732  C001  F009         	movff	___fladd@b,??___fladd
 10859   002736  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10860   00273A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10861   00273E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10862   002742  340C               	rlcf	(??___fladd+3)^0,w,c
 10863   002744  320C               	rrcf	(??___fladd+3)^0,f,c
 10864   002746  320B               	rrcf	(??___fladd+2)^0,f,c
 10865   002748  320A               	rrcf	(??___fladd+1)^0,f,c
 10866   00274A  3209               	rrcf	??___fladd^0,f,c
 10867   00274C  C009  F001         	movff	??___fladd,___fladd@b
 10868   002750  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10869   002754  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10870   002758  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10871   00275C  280F               	incf	___fladd@bexp^0,w,c
 10872   00275E  B4D8               	btfsc	status,2,c
 10873   002760  EFB4  F013         	goto	u3081
 10874   002764  EFB6  F013         	goto	u3080
 10875   002768                     u3081:
 10876   002768  EFB7  F013         	goto	l3604
 10877   00276C                     u3080:
 10878   00276C  2A0F               	incf	___fladd@bexp^0,f,c
 10879   00276E                     l3604:
 10880   00276E  280F               	incf	___fladd@bexp^0,w,c
 10881   002770  B4D8               	btfsc	status,2,c
 10882   002772  EFBD  F013         	goto	u3091
 10883   002776  EFBF  F013         	goto	u3090
 10884   00277A                     u3091:
 10885   00277A  EFC7  F013         	goto	l3608
 10886   00277E                     u3090:
 10887   00277E  500F               	movf	___fladd@bexp^0,w,c
 10888   002780  A4D8               	btfss	status,2,c
 10889   002782  EFC5  F013         	goto	u3101
 10890   002786  EFC7  F013         	goto	u3100
 10891   00278A                     u3101:
 10892   00278A  EFD9  F013         	goto	l3612
 10893   00278E                     u3100:
 10894   00278E                     l3608:
 10895   00278E  0E00               	movlw	0
 10896   002790  6E01               	movwf	___fladd@b^0,c
 10897   002792  0E00               	movlw	0
 10898   002794  6E02               	movwf	(___fladd@b+1)^0,c
 10899   002796  0E00               	movlw	0
 10900   002798  6E03               	movwf	(___fladd@b+2)^0,c
 10901   00279A  0E00               	movlw	0
 10902   00279C  6E04               	movwf	(___fladd@b+3)^0,c
 10903   00279E  500F               	movf	___fladd@bexp^0,w,c
 10904   0027A0  A4D8               	btfss	status,2,c
 10905   0027A2  EFD5  F013         	goto	u3111
 10906   0027A6  EFD7  F013         	goto	u3110
 10907   0027AA                     u3111:
 10908   0027AA  EFD9  F013         	goto	l3612
 10909   0027AE                     u3110:
 10910   0027AE  0E00               	movlw	0
 10911   0027B0  6E0D               	movwf	___fladd@signs^0,c
 10912   0027B2                     l3612:
 10913   0027B2  A00F               	btfss	___fladd@bexp^0,0,c
 10914   0027B4  EFDE  F013         	goto	u3121
 10915   0027B8  EFE0  F013         	goto	u3120
 10916   0027BC                     u3121:
 10917   0027BC  EFE3  F013         	goto	l3616
 10918   0027C0                     u3120:
 10919   0027C0  8E03               	bsf	(___fladd@b+2)^0,7,c
 10920   0027C2  EFE4  F013         	goto	l3618
 10921   0027C6                     l3616:
 10922   0027C6  9E03               	bcf	(___fladd@b+2)^0,7,c
 10923   0027C8                     l3618:
 10924   0027C8  90D8               	bcf	status,0,c
 10925   0027CA  300F               	rrcf	___fladd@bexp^0,w,c
 10926   0027CC  6E04               	movwf	(___fladd@b+3)^0,c
 10927   0027CE  AE0D               	btfss	___fladd@signs^0,7,c
 10928   0027D0  EFEC  F013         	goto	u3131
 10929   0027D4  EFEE  F013         	goto	u3130
 10930   0027D8                     u3131:
 10931   0027D8  EFEF  F013         	goto	l3624
 10932   0027DC                     u3130:
 10933   0027DC  8E04               	bsf	(___fladd@b+3)^0,7,c
 10934   0027DE                     l3624:
 10935   0027DE  C001  F001         	movff	___fladd@b,?___fladd
 10936   0027E2  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10937   0027E6  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10938   0027EA  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10939   0027EE                     l1072:
 10940   0027EE  0012               	return		;funcret
 10941   0027F0                     __end_of___fladd:
 10942                           	callstack 0
 10943                           
 10944 ;; *************** function ___flmul *****************
 10945 ;; Defined at:
 10946 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  b               4   16[COMRAM] unsigned char 
 10949 ;;  a               4   20[COMRAM] unsigned char 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;  prod            4   35[COMRAM] struct .
 10952 ;;  grs             4   29[COMRAM] unsigned long 
 10953 ;;  temp            2   39[COMRAM] struct .
 10954 ;;  bexp            1   34[COMRAM] unsigned char 
 10955 ;;  aexp            1   33[COMRAM] unsigned char 
 10956 ;;  sign            1   28[COMRAM] unsigned char 
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  4   16[COMRAM] unsigned char 
 10959 ;; Registers used:
 10960 ;;		wreg, status,2, status,0, prodl, prodh
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10967 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10968 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10969 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10970 ;;Total ram usage:       25 bytes
 10971 ;; Hardware stack levels used: 1
 10972 ;; Hardware stack levels required when called: 1
 10973 ;; This function calls:
 10974 ;;		Nothing
 10975 ;; This function is called by:
 10976 ;;		_Colour_decider
 10977 ;;		_efgtoa
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text56
 10982   0027F0                     __ptext56:
 10983                           	callstack 0
 10984   0027F0                     ___flmul:
 10985                           	callstack 25
 10986   0027F0  5014               	movf	(___flmul@b+3)^0,w,c
 10987   0027F2  0B80               	andlw	128
 10988   0027F4  6E1D               	movwf	___flmul@sign^0,c
 10989   0027F6  5014               	movf	(___flmul@b+3)^0,w,c
 10990   0027F8  2414               	addwf	(___flmul@b+3)^0,w,c
 10991   0027FA  6E23               	movwf	___flmul@bexp^0,c
 10992   0027FC  AE13               	btfss	(___flmul@b+2)^0,7,c
 10993   0027FE  EF03  F014         	goto	u3511
 10994   002802  EF05  F014         	goto	u3510
 10995   002806                     u3511:
 10996   002806  EF06  F014         	goto	l3866
 10997   00280A                     u3510:
 10998   00280A  8023               	bsf	___flmul@bexp^0,0,c
 10999   00280C                     l3866:
 11000   00280C  5023               	movf	___flmul@bexp^0,w,c
 11001   00280E  B4D8               	btfsc	status,2,c
 11002   002810  EF0C  F014         	goto	u3521
 11003   002814  EF0E  F014         	goto	u3520
 11004   002818                     u3521:
 11005   002818  EF21  F014         	goto	l3874
 11006   00281C                     u3520:
 11007   00281C  2823               	incf	___flmul@bexp^0,w,c
 11008   00281E  A4D8               	btfss	status,2,c
 11009   002820  EF14  F014         	goto	u3531
 11010   002824  EF16  F014         	goto	u3530
 11011   002828                     u3531:
 11012   002828  EF1E  F014         	goto	l3872
 11013   00282C                     u3530:
 11014   00282C  0E00               	movlw	0
 11015   00282E  6E11               	movwf	___flmul@b^0,c
 11016   002830  0E00               	movlw	0
 11017   002832  6E12               	movwf	(___flmul@b+1)^0,c
 11018   002834  0E00               	movlw	0
 11019   002836  6E13               	movwf	(___flmul@b+2)^0,c
 11020   002838  0E00               	movlw	0
 11021   00283A  6E14               	movwf	(___flmul@b+3)^0,c
 11022   00283C                     l3872:
 11023   00283C  8E13               	bsf	(___flmul@b+2)^0,7,c
 11024   00283E  EF29  F014         	goto	l3876
 11025   002842                     l3874:
 11026   002842  0E00               	movlw	0
 11027   002844  6E11               	movwf	___flmul@b^0,c
 11028   002846  0E00               	movlw	0
 11029   002848  6E12               	movwf	(___flmul@b+1)^0,c
 11030   00284A  0E00               	movlw	0
 11031   00284C  6E13               	movwf	(___flmul@b+2)^0,c
 11032   00284E  0E00               	movlw	0
 11033   002850  6E14               	movwf	(___flmul@b+3)^0,c
 11034   002852                     l3876:
 11035   002852  5018               	movf	(___flmul@a+3)^0,w,c
 11036   002854  0B80               	andlw	128
 11037   002856  1A1D               	xorwf	___flmul@sign^0,f,c
 11038   002858  5018               	movf	(___flmul@a+3)^0,w,c
 11039   00285A  2418               	addwf	(___flmul@a+3)^0,w,c
 11040   00285C  6E22               	movwf	___flmul@aexp^0,c
 11041   00285E  AE17               	btfss	(___flmul@a+2)^0,7,c
 11042   002860  EF34  F014         	goto	u3541
 11043   002864  EF36  F014         	goto	u3540
 11044   002868                     u3541:
 11045   002868  EF37  F014         	goto	l3884
 11046   00286C                     u3540:
 11047   00286C  8022               	bsf	___flmul@aexp^0,0,c
 11048   00286E                     l3884:
 11049   00286E  5022               	movf	___flmul@aexp^0,w,c
 11050   002870  B4D8               	btfsc	status,2,c
 11051   002872  EF3D  F014         	goto	u3551
 11052   002876  EF3F  F014         	goto	u3550
 11053   00287A                     u3551:
 11054   00287A  EF52  F014         	goto	l3892
 11055   00287E                     u3550:
 11056   00287E  2822               	incf	___flmul@aexp^0,w,c
 11057   002880  A4D8               	btfss	status,2,c
 11058   002882  EF45  F014         	goto	u3561
 11059   002886  EF47  F014         	goto	u3560
 11060   00288A                     u3561:
 11061   00288A  EF4F  F014         	goto	l3890
 11062   00288E                     u3560:
 11063   00288E  0E00               	movlw	0
 11064   002890  6E15               	movwf	___flmul@a^0,c
 11065   002892  0E00               	movlw	0
 11066   002894  6E16               	movwf	(___flmul@a+1)^0,c
 11067   002896  0E00               	movlw	0
 11068   002898  6E17               	movwf	(___flmul@a+2)^0,c
 11069   00289A  0E00               	movlw	0
 11070   00289C  6E18               	movwf	(___flmul@a+3)^0,c
 11071   00289E                     l3890:
 11072   00289E  8E17               	bsf	(___flmul@a+2)^0,7,c
 11073   0028A0  EF5A  F014         	goto	l1149
 11074   0028A4                     l3892:
 11075   0028A4  0E00               	movlw	0
 11076   0028A6  6E15               	movwf	___flmul@a^0,c
 11077   0028A8  0E00               	movlw	0
 11078   0028AA  6E16               	movwf	(___flmul@a+1)^0,c
 11079   0028AC  0E00               	movlw	0
 11080   0028AE  6E17               	movwf	(___flmul@a+2)^0,c
 11081   0028B0  0E00               	movlw	0
 11082   0028B2  6E18               	movwf	(___flmul@a+3)^0,c
 11083   0028B4                     l1149:
 11084   0028B4  5022               	movf	___flmul@aexp^0,w,c
 11085   0028B6  B4D8               	btfsc	status,2,c
 11086   0028B8  EF60  F014         	goto	u3571
 11087   0028BC  EF62  F014         	goto	u3570
 11088   0028C0                     u3571:
 11089   0028C0  EF6A  F014         	goto	l3896
 11090   0028C4                     u3570:
 11091   0028C4  5023               	movf	___flmul@bexp^0,w,c
 11092   0028C6  A4D8               	btfss	status,2,c
 11093   0028C8  EF68  F014         	goto	u3581
 11094   0028CC  EF6A  F014         	goto	u3580
 11095   0028D0                     u3581:
 11096   0028D0  EF74  F014         	goto	l3900
 11097   0028D4                     u3580:
 11098   0028D4                     l3896:
 11099   0028D4  0E00               	movlw	0
 11100   0028D6  6E11               	movwf	?___flmul^0,c
 11101   0028D8  0E00               	movlw	0
 11102   0028DA  6E12               	movwf	(?___flmul+1)^0,c
 11103   0028DC  0E00               	movlw	0
 11104   0028DE  6E13               	movwf	(?___flmul+2)^0,c
 11105   0028E0  0E00               	movlw	0
 11106   0028E2  6E14               	movwf	(?___flmul+3)^0,c
 11107   0028E4  EF0C  F016         	goto	l1153
 11108   0028E8                     l3900:
 11109   0028E8  5017               	movf	(___flmul@a+2)^0,w,c
 11110   0028EA  0211               	mulwf	___flmul@b^0,c
 11111   0028EC  CFF3 F028          	movff	prodl,___flmul@temp
 11112   0028F0  CFF4 F029          	movff	prodh,___flmul@temp+1
 11113   0028F4  5028               	movf	___flmul@temp^0,w,c
 11114   0028F6  6E1E               	movwf	___flmul@grs^0,c
 11115   0028F8  6A1F               	clrf	(___flmul@grs+1)^0,c
 11116   0028FA  6A20               	clrf	(___flmul@grs+2)^0,c
 11117   0028FC  6A21               	clrf	(___flmul@grs+3)^0,c
 11118   0028FE  5029               	movf	(___flmul@temp+1)^0,w,c
 11119   002900  6E24               	movwf	___flmul@prod^0,c
 11120   002902  6A25               	clrf	(___flmul@prod+1)^0,c
 11121   002904  6A26               	clrf	(___flmul@prod+2)^0,c
 11122   002906  6A27               	clrf	(___flmul@prod+3)^0,c
 11123   002908  5016               	movf	(___flmul@a+1)^0,w,c
 11124   00290A  0212               	mulwf	(___flmul@b+1)^0,c
 11125   00290C  CFF3 F028          	movff	prodl,___flmul@temp
 11126   002910  CFF4 F029          	movff	prodh,___flmul@temp+1
 11127   002914  5028               	movf	___flmul@temp^0,w,c
 11128   002916  261E               	addwf	___flmul@grs^0,f,c
 11129   002918  0E00               	movlw	0
 11130   00291A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 11131   00291C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 11132   00291E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 11133   002920  5029               	movf	(___flmul@temp+1)^0,w,c
 11134   002922  2624               	addwf	___flmul@prod^0,f,c
 11135   002924  0E00               	movlw	0
 11136   002926  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11137   002928  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11138   00292A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11139   00292C  5015               	movf	___flmul@a^0,w,c
 11140   00292E  0213               	mulwf	(___flmul@b+2)^0,c
 11141   002930  CFF3 F028          	movff	prodl,___flmul@temp
 11142   002934  CFF4 F029          	movff	prodh,___flmul@temp+1
 11143   002938  5028               	movf	___flmul@temp^0,w,c
 11144   00293A  261E               	addwf	___flmul@grs^0,f,c
 11145   00293C  0E00               	movlw	0
 11146   00293E  221F               	addwfc	(___flmul@grs+1)^0,f,c
 11147   002940  2220               	addwfc	(___flmul@grs+2)^0,f,c
 11148   002942  2221               	addwfc	(___flmul@grs+3)^0,f,c
 11149   002944  5029               	movf	(___flmul@temp+1)^0,w,c
 11150   002946  2624               	addwf	___flmul@prod^0,f,c
 11151   002948  0E00               	movlw	0
 11152   00294A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11153   00294C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11154   00294E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11155   002950  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 11156   002954  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 11157   002958  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 11158   00295C  6A1E               	clrf	___flmul@grs^0,c
 11159   00295E  5015               	movf	___flmul@a^0,w,c
 11160   002960  0212               	mulwf	(___flmul@b+1)^0,c
 11161   002962  CFF3 F028          	movff	prodl,___flmul@temp
 11162   002966  CFF4 F029          	movff	prodh,___flmul@temp+1
 11163   00296A  5028               	movf	___flmul@temp^0,w,c
 11164   00296C  261E               	addwf	___flmul@grs^0,f,c
 11165   00296E  5029               	movf	(___flmul@temp+1)^0,w,c
 11166   002970  221F               	addwfc	(___flmul@grs+1)^0,f,c
 11167   002972  0E00               	movlw	0
 11168   002974  2220               	addwfc	(___flmul@grs+2)^0,f,c
 11169   002976  0E00               	movlw	0
 11170   002978  2221               	addwfc	(___flmul@grs+3)^0,f,c
 11171   00297A  5016               	movf	(___flmul@a+1)^0,w,c
 11172   00297C  0211               	mulwf	___flmul@b^0,c
 11173   00297E  CFF3 F028          	movff	prodl,___flmul@temp
 11174   002982  CFF4 F029          	movff	prodh,___flmul@temp+1
 11175   002986  5028               	movf	___flmul@temp^0,w,c
 11176   002988  261E               	addwf	___flmul@grs^0,f,c
 11177   00298A  5029               	movf	(___flmul@temp+1)^0,w,c
 11178   00298C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 11179   00298E  0E00               	movlw	0
 11180   002990  2220               	addwfc	(___flmul@grs+2)^0,f,c
 11181   002992  0E00               	movlw	0
 11182   002994  2221               	addwfc	(___flmul@grs+3)^0,f,c
 11183   002996  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 11184   00299A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 11185   00299E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 11186   0029A2  6A1E               	clrf	___flmul@grs^0,c
 11187   0029A4  5015               	movf	___flmul@a^0,w,c
 11188   0029A6  0211               	mulwf	___flmul@b^0,c
 11189   0029A8  CFF3 F028          	movff	prodl,___flmul@temp
 11190   0029AC  CFF4 F029          	movff	prodh,___flmul@temp+1
 11191   0029B0  5028               	movf	___flmul@temp^0,w,c
 11192   0029B2  261E               	addwf	___flmul@grs^0,f,c
 11193   0029B4  5029               	movf	(___flmul@temp+1)^0,w,c
 11194   0029B6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 11195   0029B8  0E00               	movlw	0
 11196   0029BA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 11197   0029BC  0E00               	movlw	0
 11198   0029BE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 11199   0029C0  5017               	movf	(___flmul@a+2)^0,w,c
 11200   0029C2  0212               	mulwf	(___flmul@b+1)^0,c
 11201   0029C4  CFF3 F028          	movff	prodl,___flmul@temp
 11202   0029C8  CFF4 F029          	movff	prodh,___flmul@temp+1
 11203   0029CC  5028               	movf	___flmul@temp^0,w,c
 11204   0029CE  2624               	addwf	___flmul@prod^0,f,c
 11205   0029D0  5029               	movf	(___flmul@temp+1)^0,w,c
 11206   0029D2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11207   0029D4  0E00               	movlw	0
 11208   0029D6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11209   0029D8  0E00               	movlw	0
 11210   0029DA  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11211   0029DC  5016               	movf	(___flmul@a+1)^0,w,c
 11212   0029DE  0213               	mulwf	(___flmul@b+2)^0,c
 11213   0029E0  CFF3 F028          	movff	prodl,___flmul@temp
 11214   0029E4  CFF4 F029          	movff	prodh,___flmul@temp+1
 11215   0029E8  5028               	movf	___flmul@temp^0,w,c
 11216   0029EA  2624               	addwf	___flmul@prod^0,f,c
 11217   0029EC  5029               	movf	(___flmul@temp+1)^0,w,c
 11218   0029EE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11219   0029F0  0E00               	movlw	0
 11220   0029F2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11221   0029F4  0E00               	movlw	0
 11222   0029F6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11223   0029F8  5017               	movf	(___flmul@a+2)^0,w,c
 11224   0029FA  0213               	mulwf	(___flmul@b+2)^0,c
 11225   0029FC  CFF3 F028          	movff	prodl,___flmul@temp
 11226   002A00  CFF4 F029          	movff	prodh,___flmul@temp+1
 11227   002A04  5028               	movf	___flmul@temp^0,w,c
 11228   002A06  6E19               	movwf	??___flmul^0,c
 11229   002A08  5029               	movf	(___flmul@temp+1)^0,w,c
 11230   002A0A  6E1A               	movwf	(??___flmul+1)^0,c
 11231   002A0C  6A1B               	clrf	(??___flmul+2)^0,c
 11232   002A0E  6A1C               	clrf	(??___flmul+3)^0,c
 11233   002A10  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 11234   002A14  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 11235   002A18  C019  F01A         	movff	??___flmul,??___flmul+1
 11236   002A1C  6A19               	clrf	??___flmul^0,c
 11237   002A1E  5019               	movf	??___flmul^0,w,c
 11238   002A20  2624               	addwf	___flmul@prod^0,f,c
 11239   002A22  501A               	movf	(??___flmul+1)^0,w,c
 11240   002A24  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11241   002A26  501B               	movf	(??___flmul+2)^0,w,c
 11242   002A28  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11243   002A2A  501C               	movf	(??___flmul+3)^0,w,c
 11244   002A2C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11245   002A2E  C01E  F019         	movff	___flmul@grs,??___flmul
 11246   002A32  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 11247   002A36  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 11248   002A3A  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 11249   002A3E  0E19               	movlw	25
 11250   002A40  EF27  F015         	goto	u3590
 11251   002A44                     u3595:
 11252   002A44  90D8               	bcf	status,0,c
 11253   002A46  321C               	rrcf	(??___flmul+3)^0,f,c
 11254   002A48  321B               	rrcf	(??___flmul+2)^0,f,c
 11255   002A4A  321A               	rrcf	(??___flmul+1)^0,f,c
 11256   002A4C  3219               	rrcf	??___flmul^0,f,c
 11257   002A4E                     u3590:
 11258   002A4E  2EE8               	decfsz	wreg,f,c
 11259   002A50  EF22  F015         	goto	u3595
 11260   002A54  5019               	movf	??___flmul^0,w,c
 11261   002A56  2624               	addwf	___flmul@prod^0,f,c
 11262   002A58  501A               	movf	(??___flmul+1)^0,w,c
 11263   002A5A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11264   002A5C  501B               	movf	(??___flmul+2)^0,w,c
 11265   002A5E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11266   002A60  501C               	movf	(??___flmul+3)^0,w,c
 11267   002A62  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11268   002A64  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 11269   002A68  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 11270   002A6C  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 11271   002A70  6A1E               	clrf	___flmul@grs^0,c
 11272   002A72  5022               	movf	___flmul@aexp^0,w,c
 11273   002A74  C023  F019         	movff	___flmul@bexp,??___flmul
 11274   002A78  6A1A               	clrf	(??___flmul+1)^0,c
 11275   002A7A  2619               	addwf	??___flmul^0,f,c
 11276   002A7C  0E00               	movlw	0
 11277   002A7E  221A               	addwfc	(??___flmul+1)^0,f,c
 11278   002A80  0E82               	movlw	130
 11279   002A82  2419               	addwf	??___flmul^0,w,c
 11280   002A84  6E28               	movwf	___flmul@temp^0,c
 11281   002A86  0EFF               	movlw	255
 11282   002A88  201A               	addwfc	(??___flmul+1)^0,w,c
 11283   002A8A  6E29               	movwf	(___flmul@temp+1)^0,c
 11284   002A8C  EF5D  F015         	goto	l3948
 11285   002A90                     l3942:
 11286   002A90  90D8               	bcf	status,0,c
 11287   002A92  3624               	rlcf	___flmul@prod^0,f,c
 11288   002A94  3625               	rlcf	(___flmul@prod+1)^0,f,c
 11289   002A96  3626               	rlcf	(___flmul@prod+2)^0,f,c
 11290   002A98  3627               	rlcf	(___flmul@prod+3)^0,f,c
 11291   002A9A  AE21               	btfss	(___flmul@grs+3)^0,7,c
 11292   002A9C  EF52  F015         	goto	u3601
 11293   002AA0  EF54  F015         	goto	u3600
 11294   002AA4                     u3601:
 11295   002AA4  EF55  F015         	goto	l1156
 11296   002AA8                     u3600:
 11297   002AA8  8024               	bsf	___flmul@prod^0,0,c
 11298   002AAA                     l1156:
 11299   002AAA  90D8               	bcf	status,0,c
 11300   002AAC  361E               	rlcf	___flmul@grs^0,f,c
 11301   002AAE  361F               	rlcf	(___flmul@grs+1)^0,f,c
 11302   002AB0  3620               	rlcf	(___flmul@grs+2)^0,f,c
 11303   002AB2  3621               	rlcf	(___flmul@grs+3)^0,f,c
 11304   002AB4  0628               	decf	___flmul@temp^0,f,c
 11305   002AB6  A0D8               	btfss	status,0,c
 11306   002AB8  0629               	decf	(___flmul@temp+1)^0,f,c
 11307   002ABA                     l3948:
 11308   002ABA  AE26               	btfss	(___flmul@prod+2)^0,7,c
 11309   002ABC  EF62  F015         	goto	u3611
 11310   002AC0  EF64  F015         	goto	u3610
 11311   002AC4                     u3611:
 11312   002AC4  EF48  F015         	goto	l3942
 11313   002AC8                     u3610:
 11314   002AC8  0E00               	movlw	0
 11315   002ACA  6E22               	movwf	___flmul@aexp^0,c
 11316   002ACC  AE21               	btfss	(___flmul@grs+3)^0,7,c
 11317   002ACE  EF6B  F015         	goto	u3621
 11318   002AD2  EF6D  F015         	goto	u3620
 11319   002AD6                     u3621:
 11320   002AD6  EF91  F015         	goto	l1158
 11321   002ADA                     u3620:
 11322   002ADA  0EFF               	movlw	255
 11323   002ADC  141E               	andwf	___flmul@grs^0,w,c
 11324   002ADE  6E19               	movwf	??___flmul^0,c
 11325   002AE0  0EFF               	movlw	255
 11326   002AE2  141F               	andwf	(___flmul@grs+1)^0,w,c
 11327   002AE4  6E1A               	movwf	(??___flmul+1)^0,c
 11328   002AE6  0EFF               	movlw	255
 11329   002AE8  1420               	andwf	(___flmul@grs+2)^0,w,c
 11330   002AEA  6E1B               	movwf	(??___flmul+2)^0,c
 11331   002AEC  0E7F               	movlw	127
 11332   002AEE  1421               	andwf	(___flmul@grs+3)^0,w,c
 11333   002AF0  6E1C               	movwf	(??___flmul+3)^0,c
 11334   002AF2  5019               	movf	??___flmul^0,w,c
 11335   002AF4  101A               	iorwf	(??___flmul+1)^0,w,c
 11336   002AF6  101B               	iorwf	(??___flmul+2)^0,w,c
 11337   002AF8  101C               	iorwf	(??___flmul+3)^0,w,c
 11338   002AFA  B4D8               	btfsc	status,2,c
 11339   002AFC  EF82  F015         	goto	u3631
 11340   002B00  EF84  F015         	goto	u3630
 11341   002B04                     u3631:
 11342   002B04  EF88  F015         	goto	l1159
 11343   002B08                     u3630:
 11344   002B08                     l3956:
 11345   002B08  0E01               	movlw	1
 11346   002B0A  6E22               	movwf	___flmul@aexp^0,c
 11347   002B0C  EF91  F015         	goto	l1158
 11348   002B10                     l1159:
 11349   002B10  A024               	btfss	___flmul@prod^0,0,c
 11350   002B12  EF8D  F015         	goto	u3641
 11351   002B16  EF8F  F015         	goto	u3640
 11352   002B1A                     u3641:
 11353   002B1A  EF91  F015         	goto	l1158
 11354   002B1E                     u3640:
 11355   002B1E  EF84  F015         	goto	l3956
 11356   002B22                     l1158:
 11357   002B22  5022               	movf	___flmul@aexp^0,w,c
 11358   002B24  B4D8               	btfsc	status,2,c
 11359   002B26  EF97  F015         	goto	u3651
 11360   002B2A  EF99  F015         	goto	u3650
 11361   002B2E                     u3651:
 11362   002B2E  EFBD  F015         	goto	l3968
 11363   002B32                     u3650:
 11364   002B32  0E01               	movlw	1
 11365   002B34  2624               	addwf	___flmul@prod^0,f,c
 11366   002B36  0E00               	movlw	0
 11367   002B38  2225               	addwfc	(___flmul@prod+1)^0,f,c
 11368   002B3A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 11369   002B3C  2227               	addwfc	(___flmul@prod+3)^0,f,c
 11370   002B3E  A027               	btfss	(___flmul@prod+3)^0,0,c
 11371   002B40  EFA4  F015         	goto	u3661
 11372   002B44  EFA6  F015         	goto	u3660
 11373   002B48                     u3661:
 11374   002B48  EFBD  F015         	goto	l3968
 11375   002B4C                     u3660:
 11376   002B4C  C024  F019         	movff	___flmul@prod,??___flmul
 11377   002B50  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 11378   002B54  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 11379   002B58  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 11380   002B5C  341C               	rlcf	(??___flmul+3)^0,w,c
 11381   002B5E  321C               	rrcf	(??___flmul+3)^0,f,c
 11382   002B60  321B               	rrcf	(??___flmul+2)^0,f,c
 11383   002B62  321A               	rrcf	(??___flmul+1)^0,f,c
 11384   002B64  3219               	rrcf	??___flmul^0,f,c
 11385   002B66  C019  F024         	movff	??___flmul,___flmul@prod
 11386   002B6A  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 11387   002B6E  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 11388   002B72  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 11389   002B76  4A28               	infsnz	___flmul@temp^0,f,c
 11390   002B78  2A29               	incf	(___flmul@temp+1)^0,f,c
 11391   002B7A                     l3968:
 11392   002B7A  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 11393   002B7C  EFC8  F015         	goto	u3671
 11394   002B80  5029               	movf	(___flmul@temp+1)^0,w,c
 11395   002B82  E108               	bnz	u3670
 11396   002B84  2828               	incf	___flmul@temp^0,w,c
 11397   002B86  A0D8               	btfss	status,0,c
 11398   002B88  EFC8  F015         	goto	u3671
 11399   002B8C  EFCA  F015         	goto	u3670
 11400   002B90                     u3671:
 11401   002B90  EFD4  F015         	goto	l3972
 11402   002B94                     u3670:
 11403   002B94  0E00               	movlw	0
 11404   002B96  6E24               	movwf	___flmul@prod^0,c
 11405   002B98  0E00               	movlw	0
 11406   002B9A  6E25               	movwf	(___flmul@prod+1)^0,c
 11407   002B9C  0E80               	movlw	128
 11408   002B9E  6E26               	movwf	(___flmul@prod+2)^0,c
 11409   002BA0  0E7F               	movlw	127
 11410   002BA2  6E27               	movwf	(___flmul@prod+3)^0,c
 11411   002BA4  EF02  F016         	goto	l3984
 11412   002BA8                     l3972:
 11413   002BA8  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 11414   002BAA  EFE1  F015         	goto	u3680
 11415   002BAE  5029               	movf	(___flmul@temp+1)^0,w,c
 11416   002BB0  E106               	bnz	u3681
 11417   002BB2  0428               	decf	___flmul@temp^0,w,c
 11418   002BB4  B0D8               	btfsc	status,0,c
 11419   002BB6  EFDF  F015         	goto	u3681
 11420   002BBA  EFE1  F015         	goto	u3680
 11421   002BBE                     u3681:
 11422   002BBE  EFED  F015         	goto	l1166
 11423   002BC2                     u3680:
 11424   002BC2  0E00               	movlw	0
 11425   002BC4  6E24               	movwf	___flmul@prod^0,c
 11426   002BC6  0E00               	movlw	0
 11427   002BC8  6E25               	movwf	(___flmul@prod+1)^0,c
 11428   002BCA  0E00               	movlw	0
 11429   002BCC  6E26               	movwf	(___flmul@prod+2)^0,c
 11430   002BCE  0E00               	movlw	0
 11431   002BD0  6E27               	movwf	(___flmul@prod+3)^0,c
 11432   002BD2  0E00               	movlw	0
 11433   002BD4  6E1D               	movwf	___flmul@sign^0,c
 11434   002BD6  EF02  F016         	goto	l3984
 11435   002BDA                     l1166:
 11436   002BDA  C028  F023         	movff	___flmul@temp,___flmul@bexp
 11437   002BDE  0EFF               	movlw	255
 11438   002BE0  1624               	andwf	___flmul@prod^0,f,c
 11439   002BE2  0EFF               	movlw	255
 11440   002BE4  1625               	andwf	(___flmul@prod+1)^0,f,c
 11441   002BE6  0E7F               	movlw	127
 11442   002BE8  1626               	andwf	(___flmul@prod+2)^0,f,c
 11443   002BEA  0E00               	movlw	0
 11444   002BEC  1627               	andwf	(___flmul@prod+3)^0,f,c
 11445   002BEE  A023               	btfss	___flmul@bexp^0,0,c
 11446   002BF0  EFFC  F015         	goto	u3691
 11447   002BF4  EFFE  F015         	goto	u3690
 11448   002BF8                     u3691:
 11449   002BF8  EFFF  F015         	goto	l3982
 11450   002BFC                     u3690:
 11451   002BFC  8E26               	bsf	(___flmul@prod+2)^0,7,c
 11452   002BFE                     l3982:
 11453   002BFE  90D8               	bcf	status,0,c
 11454   002C00  3023               	rrcf	___flmul@bexp^0,w,c
 11455   002C02  6E27               	movwf	(___flmul@prod+3)^0,c
 11456   002C04                     l3984:
 11457   002C04  501D               	movf	___flmul@sign^0,w,c
 11458   002C06  1227               	iorwf	(___flmul@prod+3)^0,f,c
 11459   002C08  C024  F011         	movff	___flmul@prod,?___flmul
 11460   002C0C  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 11461   002C10  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 11462   002C14  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 11463   002C18                     l1153:
 11464   002C18  0012               	return		;funcret
 11465   002C1A                     __end_of___flmul:
 11466                           	callstack 0
 11467                           
 11468 ;; *************** function ___flge *****************
 11469 ;; Defined at:
 11470 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  ff1             4   41[COMRAM] unsigned char 
 11473 ;;  ff2             4   45[COMRAM] unsigned char 
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;		None
 11476 ;; Return value:  Size  Location     Type
 11477 ;;		None               void
 11478 ;; Registers used:
 11479 ;;		wreg, status,2, status,0
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11485 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11487 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11488 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11489 ;;Total ram usage:       12 bytes
 11490 ;; Hardware stack levels used: 1
 11491 ;; Hardware stack levels required when called: 1
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_Colour_decider
 11496 ;;		_efgtoa
 11497 ;; This function uses a non-reentrant model
 11498 ;;
 11499                           
 11500                           	psect	text57
 11501   004552                     __ptext57:
 11502                           	callstack 0
 11503   004552                     ___flge:
 11504                           	callstack 25
 11505   004552  0E00               	movlw	0
 11506   004554  142A               	andwf	___flge@ff1^0,w,c
 11507   004556  6E32               	movwf	??___flge^0,c
 11508   004558  0E00               	movlw	0
 11509   00455A  142B               	andwf	(___flge@ff1+1)^0,w,c
 11510   00455C  6E33               	movwf	(??___flge+1)^0,c
 11511   00455E  0E80               	movlw	128
 11512   004560  142C               	andwf	(___flge@ff1+2)^0,w,c
 11513   004562  6E34               	movwf	(??___flge+2)^0,c
 11514   004564  0E7F               	movlw	127
 11515   004566  142D               	andwf	(___flge@ff1+3)^0,w,c
 11516   004568  6E35               	movwf	(??___flge+3)^0,c
 11517   00456A  5032               	movf	??___flge^0,w,c
 11518   00456C  1033               	iorwf	(??___flge+1)^0,w,c
 11519   00456E  1034               	iorwf	(??___flge+2)^0,w,c
 11520   004570  1035               	iorwf	(??___flge+3)^0,w,c
 11521   004572  A4D8               	btfss	status,2,c
 11522   004574  EFBE  F022         	goto	u3731
 11523   004578  EFC0  F022         	goto	u3730
 11524   00457C                     u3731:
 11525   00457C  EFC8  F022         	goto	l4016
 11526   004580                     u3730:
 11527   004580  0E00               	movlw	0
 11528   004582  6E2A               	movwf	___flge@ff1^0,c
 11529   004584  0E00               	movlw	0
 11530   004586  6E2B               	movwf	(___flge@ff1+1)^0,c
 11531   004588  0E00               	movlw	0
 11532   00458A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11533   00458C  0E00               	movlw	0
 11534   00458E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11535   004590                     l4016:
 11536   004590  0E00               	movlw	0
 11537   004592  142E               	andwf	___flge@ff2^0,w,c
 11538   004594  6E32               	movwf	??___flge^0,c
 11539   004596  0E00               	movlw	0
 11540   004598  142F               	andwf	(___flge@ff2+1)^0,w,c
 11541   00459A  6E33               	movwf	(??___flge+1)^0,c
 11542   00459C  0E80               	movlw	128
 11543   00459E  1430               	andwf	(___flge@ff2+2)^0,w,c
 11544   0045A0  6E34               	movwf	(??___flge+2)^0,c
 11545   0045A2  0E7F               	movlw	127
 11546   0045A4  1431               	andwf	(___flge@ff2+3)^0,w,c
 11547   0045A6  6E35               	movwf	(??___flge+3)^0,c
 11548   0045A8  5032               	movf	??___flge^0,w,c
 11549   0045AA  1033               	iorwf	(??___flge+1)^0,w,c
 11550   0045AC  1034               	iorwf	(??___flge+2)^0,w,c
 11551   0045AE  1035               	iorwf	(??___flge+3)^0,w,c
 11552   0045B0  A4D8               	btfss	status,2,c
 11553   0045B2  EFDD  F022         	goto	u3741
 11554   0045B6  EFDF  F022         	goto	u3740
 11555   0045BA                     u3741:
 11556   0045BA  EFE7  F022         	goto	l4020
 11557   0045BE                     u3740:
 11558   0045BE  0E00               	movlw	0
 11559   0045C0  6E2E               	movwf	___flge@ff2^0,c
 11560   0045C2  0E00               	movlw	0
 11561   0045C4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11562   0045C6  0E00               	movlw	0
 11563   0045C8  6E30               	movwf	(___flge@ff2+2)^0,c
 11564   0045CA  0E00               	movlw	0
 11565   0045CC  6E31               	movwf	(___flge@ff2+3)^0,c
 11566   0045CE                     l4020:
 11567   0045CE  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 11568   0045D0  EFEC  F022         	goto	u3751
 11569   0045D4  EFEE  F022         	goto	u3750
 11570   0045D8                     u3751:
 11571   0045D8  EFF7  F022         	goto	l4024
 11572   0045DC                     u3750:
 11573   0045DC  6C2A               	negf	___flge@ff1^0,c
 11574   0045DE  1E2B               	comf	(___flge@ff1+1)^0,f,c
 11575   0045E0  B0D8               	btfsc	status,0,c
 11576   0045E2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 11577   0045E4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 11578   0045E6  B0D8               	btfsc	status,0,c
 11579   0045E8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 11580   0045EA  0E80               	movlw	128
 11581   0045EC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 11582   0045EE                     l4024:
 11583   0045EE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 11584   0045F0  EFFC  F022         	goto	u3761
 11585   0045F4  EFFE  F022         	goto	u3760
 11586   0045F8                     u3761:
 11587   0045F8  EF07  F023         	goto	l800
 11588   0045FC                     u3760:
 11589   0045FC  6C2E               	negf	___flge@ff2^0,c
 11590   0045FE  1E2F               	comf	(___flge@ff2+1)^0,f,c
 11591   004600  B0D8               	btfsc	status,0,c
 11592   004602  2A2F               	incf	(___flge@ff2+1)^0,f,c
 11593   004604  1E30               	comf	(___flge@ff2+2)^0,f,c
 11594   004606  B0D8               	btfsc	status,0,c
 11595   004608  2A30               	incf	(___flge@ff2+2)^0,f,c
 11596   00460A  0E80               	movlw	128
 11597   00460C  5631               	subfwb	(___flge@ff2+3)^0,f,c
 11598   00460E                     l800:
 11599   00460E  0E00               	movlw	0
 11600   004610  1A2A               	xorwf	___flge@ff1^0,f,c
 11601   004612  0E00               	movlw	0
 11602   004614  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 11603   004616  0E00               	movlw	0
 11604   004618  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 11605   00461A  0E80               	movlw	128
 11606   00461C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 11607   00461E  0E00               	movlw	0
 11608   004620  1A2E               	xorwf	___flge@ff2^0,f,c
 11609   004622  0E00               	movlw	0
 11610   004624  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 11611   004626  0E00               	movlw	0
 11612   004628  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 11613   00462A  0E80               	movlw	128
 11614   00462C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 11615   00462E  502E               	movf	___flge@ff2^0,w,c
 11616   004630  5C2A               	subwf	___flge@ff1^0,w,c
 11617   004632  502F               	movf	(___flge@ff2+1)^0,w,c
 11618   004634  582B               	subwfb	(___flge@ff1+1)^0,w,c
 11619   004636  5030               	movf	(___flge@ff2+2)^0,w,c
 11620   004638  582C               	subwfb	(___flge@ff1+2)^0,w,c
 11621   00463A  5031               	movf	(___flge@ff2+3)^0,w,c
 11622   00463C  582D               	subwfb	(___flge@ff1+3)^0,w,c
 11623   00463E  B0D8               	btfsc	status,0,c
 11624   004640  EF24  F023         	goto	u3771
 11625   004644  EF26  F023         	goto	u3770
 11626   004648                     u3771:
 11627   004648  EF29  F023         	goto	l4030
 11628   00464C                     u3770:
 11629   00464C  90D8               	bcf	status,0,c
 11630   00464E  EF2A  F023         	goto	l805
 11631   004652                     l4030:
 11632   004652  80D8               	bsf	status,0,c
 11633   004654                     l805:
 11634   004654  0012               	return		;funcret
 11635   004656                     __end_of___flge:
 11636                           	callstack 0
 11637                           
 11638 ;; *************** function ___fleq *****************
 11639 ;; Defined at:
 11640 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 11641 ;; Parameters:    Size  Location     Type
 11642 ;;  ff1             4   49[COMRAM] unsigned char 
 11643 ;;  ff2             4   53[COMRAM] unsigned char 
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;		None               void
 11648 ;; Registers used:
 11649 ;;		wreg, status,2, status,0
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11655 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11658 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11659 ;;Total ram usage:       12 bytes
 11660 ;; Hardware stack levels used: 1
 11661 ;; Hardware stack levels required when called: 1
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_Colour_decider
 11666 ;;		_efgtoa
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           	psect	text58
 11671   00481E                     __ptext58:
 11672                           	callstack 0
 11673   00481E                     ___fleq:
 11674                           	callstack 25
 11675   00481E  0E00               	movlw	0
 11676   004820  1432               	andwf	___fleq@ff1^0,w,c
 11677   004822  6E3A               	movwf	??___fleq^0,c
 11678   004824  0E00               	movlw	0
 11679   004826  1433               	andwf	(___fleq@ff1+1)^0,w,c
 11680   004828  6E3B               	movwf	(??___fleq+1)^0,c
 11681   00482A  0E80               	movlw	128
 11682   00482C  1434               	andwf	(___fleq@ff1+2)^0,w,c
 11683   00482E  6E3C               	movwf	(??___fleq+2)^0,c
 11684   004830  0E7F               	movlw	127
 11685   004832  1435               	andwf	(___fleq@ff1+3)^0,w,c
 11686   004834  6E3D               	movwf	(??___fleq+3)^0,c
 11687   004836  503A               	movf	??___fleq^0,w,c
 11688   004838  103B               	iorwf	(??___fleq+1)^0,w,c
 11689   00483A  103C               	iorwf	(??___fleq+2)^0,w,c
 11690   00483C  103D               	iorwf	(??___fleq+3)^0,w,c
 11691   00483E  A4D8               	btfss	status,2,c
 11692   004840  EF24  F024         	goto	u3701
 11693   004844  EF26  F024         	goto	u3700
 11694   004848                     u3701:
 11695   004848  EF2E  F024         	goto	l4000
 11696   00484C                     u3700:
 11697   00484C  0E00               	movlw	0
 11698   00484E  6E32               	movwf	___fleq@ff1^0,c
 11699   004850  0E00               	movlw	0
 11700   004852  6E33               	movwf	(___fleq@ff1+1)^0,c
 11701   004854  0E00               	movlw	0
 11702   004856  6E34               	movwf	(___fleq@ff1+2)^0,c
 11703   004858  0E00               	movlw	0
 11704   00485A  6E35               	movwf	(___fleq@ff1+3)^0,c
 11705   00485C                     l4000:
 11706   00485C  0E00               	movlw	0
 11707   00485E  1436               	andwf	___fleq@ff2^0,w,c
 11708   004860  6E3A               	movwf	??___fleq^0,c
 11709   004862  0E00               	movlw	0
 11710   004864  1437               	andwf	(___fleq@ff2+1)^0,w,c
 11711   004866  6E3B               	movwf	(??___fleq+1)^0,c
 11712   004868  0E80               	movlw	128
 11713   00486A  1438               	andwf	(___fleq@ff2+2)^0,w,c
 11714   00486C  6E3C               	movwf	(??___fleq+2)^0,c
 11715   00486E  0E7F               	movlw	127
 11716   004870  1439               	andwf	(___fleq@ff2+3)^0,w,c
 11717   004872  6E3D               	movwf	(??___fleq+3)^0,c
 11718   004874  503A               	movf	??___fleq^0,w,c
 11719   004876  103B               	iorwf	(??___fleq+1)^0,w,c
 11720   004878  103C               	iorwf	(??___fleq+2)^0,w,c
 11721   00487A  103D               	iorwf	(??___fleq+3)^0,w,c
 11722   00487C  A4D8               	btfss	status,2,c
 11723   00487E  EF43  F024         	goto	u3711
 11724   004882  EF45  F024         	goto	u3710
 11725   004886                     u3711:
 11726   004886  EF4D  F024         	goto	l4004
 11727   00488A                     u3710:
 11728   00488A  0E00               	movlw	0
 11729   00488C  6E36               	movwf	___fleq@ff2^0,c
 11730   00488E  0E00               	movlw	0
 11731   004890  6E37               	movwf	(___fleq@ff2+1)^0,c
 11732   004892  0E00               	movlw	0
 11733   004894  6E38               	movwf	(___fleq@ff2+2)^0,c
 11734   004896  0E00               	movlw	0
 11735   004898  6E39               	movwf	(___fleq@ff2+3)^0,c
 11736   00489A                     l4004:
 11737   00489A  5036               	movf	___fleq@ff2^0,w,c
 11738   00489C  1832               	xorwf	___fleq@ff1^0,w,c
 11739   00489E  E10F               	bnz	u3720
 11740   0048A0  5037               	movf	(___fleq@ff2+1)^0,w,c
 11741   0048A2  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 11742   0048A4  E10C               	bnz	u3720
 11743   0048A6  5038               	movf	(___fleq@ff2+2)^0,w,c
 11744   0048A8  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 11745   0048AA  E109               	bnz	u3720
 11746   0048AC  5039               	movf	(___fleq@ff2+3)^0,w,c
 11747   0048AE  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 11748   0048B0  B4D8               	btfsc	status,2,c
 11749   0048B2  EF5D  F024         	goto	u3721
 11750   0048B6  EF5F  F024         	goto	u3720
 11751   0048BA                     u3721:
 11752   0048BA  EF62  F024         	goto	l4008
 11753   0048BE                     u3720:
 11754   0048BE  90D8               	bcf	status,0,c
 11755   0048C0  EF63  F024         	goto	l794
 11756   0048C4                     l4008:
 11757   0048C4  80D8               	bsf	status,0,c
 11758   0048C6                     l794:
 11759   0048C6  0012               	return		;funcret
 11760   0048C8                     __end_of___fleq:
 11761                           	callstack 0
 11762                           
 11763 ;; *************** function ___fldiv *****************
 11764 ;; Defined at:
 11765 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;  b               4   49[COMRAM] unsigned char 
 11768 ;;  a               4   53[COMRAM] unsigned char 
 11769 ;; Auto vars:     Size  Location     Type
 11770 ;;  grs             4   68[COMRAM] unsigned long 
 11771 ;;  rem             4   61[COMRAM] unsigned long 
 11772 ;;  new_exp         2   66[COMRAM] short 
 11773 ;;  aexp            1   73[COMRAM] unsigned char 
 11774 ;;  bexp            1   72[COMRAM] unsigned char 
 11775 ;;  sign            1   65[COMRAM] unsigned char 
 11776 ;; Return value:  Size  Location     Type
 11777 ;;                  4   49[COMRAM] unsigned char 
 11778 ;; Registers used:
 11779 ;;		wreg, status,2, status,0
 11780 ;; Tracked objects:
 11781 ;;		On entry : 0/0
 11782 ;;		On exit  : 0/0
 11783 ;;		Unchanged: 0/0
 11784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11786 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11788 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;Total ram usage:       25 bytes
 11790 ;; Hardware stack levels used: 1
 11791 ;; Hardware stack levels required when called: 1
 11792 ;; This function calls:
 11793 ;;		Nothing
 11794 ;; This function is called by:
 11795 ;;		_colour_rel
 11796 ;;		_Colour_decider
 11797 ;;		_efgtoa
 11798 ;; This function uses a non-reentrant model
 11799 ;;
 11800                           
 11801                           	psect	text59
 11802   002FE2                     __ptext59:
 11803                           	callstack 0
 11804   002FE2                     ___fldiv:
 11805                           	callstack 25
 11806   002FE2  5035               	movf	(___fldiv@b+3)^0,w,c
 11807   002FE4  0B80               	andlw	128
 11808   002FE6  6E42               	movwf	___fldiv@sign^0,c
 11809   002FE8  5035               	movf	(___fldiv@b+3)^0,w,c
 11810   002FEA  2435               	addwf	(___fldiv@b+3)^0,w,c
 11811   002FEC  6E49               	movwf	___fldiv@bexp^0,c
 11812   002FEE  AE34               	btfss	(___fldiv@b+2)^0,7,c
 11813   002FF0  EFFC  F017         	goto	u3281
 11814   002FF4  EFFE  F017         	goto	u3280
 11815   002FF8                     u3281:
 11816   002FF8  EFFF  F017         	goto	l3728
 11817   002FFC                     u3280:
 11818   002FFC  8049               	bsf	___fldiv@bexp^0,0,c
 11819   002FFE                     l3728:
 11820   002FFE  5049               	movf	___fldiv@bexp^0,w,c
 11821   003000  B4D8               	btfsc	status,2,c
 11822   003002  EF05  F018         	goto	u3291
 11823   003006  EF07  F018         	goto	u3290
 11824   00300A                     u3291:
 11825   00300A  EF1C  F018         	goto	l3738
 11826   00300E                     u3290:
 11827   00300E  2849               	incf	___fldiv@bexp^0,w,c
 11828   003010  A4D8               	btfss	status,2,c
 11829   003012  EF0D  F018         	goto	u3301
 11830   003016  EF0F  F018         	goto	u3300
 11831   00301A                     u3301:
 11832   00301A  EF17  F018         	goto	l3734
 11833   00301E                     u3300:
 11834   00301E  0E00               	movlw	0
 11835   003020  6E32               	movwf	___fldiv@b^0,c
 11836   003022  0E00               	movlw	0
 11837   003024  6E33               	movwf	(___fldiv@b+1)^0,c
 11838   003026  0E00               	movlw	0
 11839   003028  6E34               	movwf	(___fldiv@b+2)^0,c
 11840   00302A  0E00               	movlw	0
 11841   00302C  6E35               	movwf	(___fldiv@b+3)^0,c
 11842   00302E                     l3734:
 11843   00302E  8E34               	bsf	(___fldiv@b+2)^0,7,c
 11844   003030  0E00               	movlw	0
 11845   003032  6E35               	movwf	(___fldiv@b+3)^0,c
 11846   003034  EF24  F018         	goto	l3740
 11847   003038                     l3738:
 11848   003038  0E00               	movlw	0
 11849   00303A  6E32               	movwf	___fldiv@b^0,c
 11850   00303C  0E00               	movlw	0
 11851   00303E  6E33               	movwf	(___fldiv@b+1)^0,c
 11852   003040  0E00               	movlw	0
 11853   003042  6E34               	movwf	(___fldiv@b+2)^0,c
 11854   003044  0E00               	movlw	0
 11855   003046  6E35               	movwf	(___fldiv@b+3)^0,c
 11856   003048                     l3740:
 11857   003048  5039               	movf	(___fldiv@a+3)^0,w,c
 11858   00304A  0B80               	andlw	128
 11859   00304C  1A42               	xorwf	___fldiv@sign^0,f,c
 11860   00304E  5039               	movf	(___fldiv@a+3)^0,w,c
 11861   003050  2439               	addwf	(___fldiv@a+3)^0,w,c
 11862   003052  6E4A               	movwf	___fldiv@aexp^0,c
 11863   003054  AE38               	btfss	(___fldiv@a+2)^0,7,c
 11864   003056  EF2F  F018         	goto	u3311
 11865   00305A  EF31  F018         	goto	u3310
 11866   00305E                     u3311:
 11867   00305E  EF32  F018         	goto	l3748
 11868   003062                     u3310:
 11869   003062  804A               	bsf	___fldiv@aexp^0,0,c
 11870   003064                     l3748:
 11871   003064  504A               	movf	___fldiv@aexp^0,w,c
 11872   003066  B4D8               	btfsc	status,2,c
 11873   003068  EF38  F018         	goto	u3321
 11874   00306C  EF3A  F018         	goto	u3320
 11875   003070                     u3321:
 11876   003070  EF4F  F018         	goto	l3758
 11877   003074                     u3320:
 11878   003074  284A               	incf	___fldiv@aexp^0,w,c
 11879   003076  A4D8               	btfss	status,2,c
 11880   003078  EF40  F018         	goto	u3331
 11881   00307C  EF42  F018         	goto	u3330
 11882   003080                     u3331:
 11883   003080  EF4A  F018         	goto	l3754
 11884   003084                     u3330:
 11885   003084  0E00               	movlw	0
 11886   003086  6E36               	movwf	___fldiv@a^0,c
 11887   003088  0E00               	movlw	0
 11888   00308A  6E37               	movwf	(___fldiv@a+1)^0,c
 11889   00308C  0E00               	movlw	0
 11890   00308E  6E38               	movwf	(___fldiv@a+2)^0,c
 11891   003090  0E00               	movlw	0
 11892   003092  6E39               	movwf	(___fldiv@a+3)^0,c
 11893   003094                     l3754:
 11894   003094  8E38               	bsf	(___fldiv@a+2)^0,7,c
 11895   003096  0E00               	movlw	0
 11896   003098  6E39               	movwf	(___fldiv@a+3)^0,c
 11897   00309A  EF57  F018         	goto	l3760
 11898   00309E                     l3758:
 11899   00309E  0E00               	movlw	0
 11900   0030A0  6E36               	movwf	___fldiv@a^0,c
 11901   0030A2  0E00               	movlw	0
 11902   0030A4  6E37               	movwf	(___fldiv@a+1)^0,c
 11903   0030A6  0E00               	movlw	0
 11904   0030A8  6E38               	movwf	(___fldiv@a+2)^0,c
 11905   0030AA  0E00               	movlw	0
 11906   0030AC  6E39               	movwf	(___fldiv@a+3)^0,c
 11907   0030AE                     l3760:
 11908   0030AE  5036               	movf	___fldiv@a^0,w,c
 11909   0030B0  1037               	iorwf	(___fldiv@a+1)^0,w,c
 11910   0030B2  1038               	iorwf	(___fldiv@a+2)^0,w,c
 11911   0030B4  1039               	iorwf	(___fldiv@a+3)^0,w,c
 11912   0030B6  A4D8               	btfss	status,2,c
 11913   0030B8  EF60  F018         	goto	u3341
 11914   0030BC  EF62  F018         	goto	u3340
 11915   0030C0                     u3341:
 11916   0030C0  EF7A  F018         	goto	l3772
 11917   0030C4                     u3340:
 11918   0030C4  0E00               	movlw	0
 11919   0030C6  6E32               	movwf	___fldiv@b^0,c
 11920   0030C8  0E00               	movlw	0
 11921   0030CA  6E33               	movwf	(___fldiv@b+1)^0,c
 11922   0030CC  0E00               	movlw	0
 11923   0030CE  6E34               	movwf	(___fldiv@b+2)^0,c
 11924   0030D0  0E00               	movlw	0
 11925   0030D2  6E35               	movwf	(___fldiv@b+3)^0,c
 11926   0030D4  0E80               	movlw	128
 11927   0030D6  1234               	iorwf	(___fldiv@b+2)^0,f,c
 11928   0030D8  0E7F               	movlw	127
 11929   0030DA  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11930   0030DC                     l3766:
 11931   0030DC  5042               	movf	___fldiv@sign^0,w,c
 11932   0030DE  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11933   0030E0  C032  F032         	movff	___fldiv@b,?___fldiv
 11934   0030E4  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 11935   0030E8  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 11936   0030EC  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 11937   0030F0  EFBD  F019         	goto	l1117
 11938   0030F4                     l3772:
 11939   0030F4  5049               	movf	___fldiv@bexp^0,w,c
 11940   0030F6  A4D8               	btfss	status,2,c
 11941   0030F8  EF80  F018         	goto	u3351
 11942   0030FC  EF82  F018         	goto	u3350
 11943   003100                     u3351:
 11944   003100  EF8C  F018         	goto	l3780
 11945   003104                     u3350:
 11946   003104  0E00               	movlw	0
 11947   003106  6E32               	movwf	?___fldiv^0,c
 11948   003108  0E00               	movlw	0
 11949   00310A  6E33               	movwf	(?___fldiv+1)^0,c
 11950   00310C  0E00               	movlw	0
 11951   00310E  6E34               	movwf	(?___fldiv+2)^0,c
 11952   003110  0E00               	movlw	0
 11953   003112  6E35               	movwf	(?___fldiv+3)^0,c
 11954   003114  EFBD  F019         	goto	l1117
 11955   003118                     l3780:
 11956   003118  504A               	movf	___fldiv@aexp^0,w,c
 11957   00311A  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 11958   00311E  6A3B               	clrf	(??___fldiv+1)^0,c
 11959   003120  5E3A               	subwf	??___fldiv^0,f,c
 11960   003122  0E00               	movlw	0
 11961   003124  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 11962   003126  0E7F               	movlw	127
 11963   003128  243A               	addwf	??___fldiv^0,w,c
 11964   00312A  6E43               	movwf	___fldiv@new_exp^0,c
 11965   00312C  0E00               	movlw	0
 11966   00312E  203B               	addwfc	(??___fldiv+1)^0,w,c
 11967   003130  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11968   003132  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 11969   003136  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 11970   00313A  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 11971   00313E  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 11972   003142  0E00               	movlw	0
 11973   003144  6E32               	movwf	___fldiv@b^0,c
 11974   003146  0E00               	movlw	0
 11975   003148  6E33               	movwf	(___fldiv@b+1)^0,c
 11976   00314A  0E00               	movlw	0
 11977   00314C  6E34               	movwf	(___fldiv@b+2)^0,c
 11978   00314E  0E00               	movlw	0
 11979   003150  6E35               	movwf	(___fldiv@b+3)^0,c
 11980   003152  0E00               	movlw	0
 11981   003154  6E45               	movwf	___fldiv@grs^0,c
 11982   003156  0E00               	movlw	0
 11983   003158  6E46               	movwf	(___fldiv@grs+1)^0,c
 11984   00315A  0E00               	movlw	0
 11985   00315C  6E47               	movwf	(___fldiv@grs+2)^0,c
 11986   00315E  0E00               	movlw	0
 11987   003160  6E48               	movwf	(___fldiv@grs+3)^0,c
 11988   003162  0E00               	movlw	0
 11989   003164  6E4A               	movwf	___fldiv@aexp^0,c
 11990   003166  EFED  F018         	goto	l1119
 11991   00316A                     l3790:
 11992   00316A  504A               	movf	___fldiv@aexp^0,w,c
 11993   00316C  B4D8               	btfsc	status,2,c
 11994   00316E  EFBB  F018         	goto	u3361
 11995   003172  EFBD  F018         	goto	u3360
 11996   003176                     u3361:
 11997   003176  EFD4  F018         	goto	l3798
 11998   00317A                     u3360:
 11999   00317A  90D8               	bcf	status,0,c
 12000   00317C  363E               	rlcf	___fldiv@rem^0,f,c
 12001   00317E  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 12002   003180  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 12003   003182  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 12004   003184  90D8               	bcf	status,0,c
 12005   003186  3632               	rlcf	___fldiv@b^0,f,c
 12006   003188  3633               	rlcf	(___fldiv@b+1)^0,f,c
 12007   00318A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 12008   00318C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 12009   00318E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 12010   003190  EFCC  F018         	goto	u3371
 12011   003194  EFCE  F018         	goto	u3370
 12012   003198                     u3371:
 12013   003198  EFCF  F018         	goto	l1122
 12014   00319C                     u3370:
 12015   00319C  8032               	bsf	___fldiv@b^0,0,c
 12016   00319E                     l1122:
 12017   00319E  90D8               	bcf	status,0,c
 12018   0031A0  3645               	rlcf	___fldiv@grs^0,f,c
 12019   0031A2  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 12020   0031A4  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 12021   0031A6  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 12022   0031A8                     l3798:
 12023   0031A8  5036               	movf	___fldiv@a^0,w,c
 12024   0031AA  5C3E               	subwf	___fldiv@rem^0,w,c
 12025   0031AC  5037               	movf	(___fldiv@a+1)^0,w,c
 12026   0031AE  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 12027   0031B0  5038               	movf	(___fldiv@a+2)^0,w,c
 12028   0031B2  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 12029   0031B4  5039               	movf	(___fldiv@a+3)^0,w,c
 12030   0031B6  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 12031   0031B8  A0D8               	btfss	status,0,c
 12032   0031BA  EFE1  F018         	goto	u3381
 12033   0031BE  EFE3  F018         	goto	u3380
 12034   0031C2                     u3381:
 12035   0031C2  EFEC  F018         	goto	l3804
 12036   0031C6                     u3380:
 12037   0031C6  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 12038   0031C8  5036               	movf	___fldiv@a^0,w,c
 12039   0031CA  5E3E               	subwf	___fldiv@rem^0,f,c
 12040   0031CC  5037               	movf	(___fldiv@a+1)^0,w,c
 12041   0031CE  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 12042   0031D0  5038               	movf	(___fldiv@a+2)^0,w,c
 12043   0031D2  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 12044   0031D4  5039               	movf	(___fldiv@a+3)^0,w,c
 12045   0031D6  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 12046   0031D8                     l3804:
 12047   0031D8  2A4A               	incf	___fldiv@aexp^0,f,c
 12048   0031DA                     l1119:
 12049   0031DA  0E19               	movlw	25
 12050   0031DC  644A               	cpfsgt	___fldiv@aexp^0,c
 12051   0031DE  EFF3  F018         	goto	u3391
 12052   0031E2  EFF5  F018         	goto	u3390
 12053   0031E6                     u3391:
 12054   0031E6  EFB5  F018         	goto	l3790
 12055   0031EA                     u3390:
 12056   0031EA  503E               	movf	___fldiv@rem^0,w,c
 12057   0031EC  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 12058   0031EE  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 12059   0031F0  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 12060   0031F2  B4D8               	btfsc	status,2,c
 12061   0031F4  EFFE  F018         	goto	u3401
 12062   0031F8  EF00  F019         	goto	u3400
 12063   0031FC                     u3401:
 12064   0031FC  EF18  F019         	goto	l3816
 12065   003200                     u3400:
 12066   003200  8045               	bsf	___fldiv@grs^0,0,c
 12067   003202  EF18  F019         	goto	l3816
 12068   003206                     l3810:
 12069   003206  90D8               	bcf	status,0,c
 12070   003208  3632               	rlcf	___fldiv@b^0,f,c
 12071   00320A  3633               	rlcf	(___fldiv@b+1)^0,f,c
 12072   00320C  3634               	rlcf	(___fldiv@b+2)^0,f,c
 12073   00320E  3635               	rlcf	(___fldiv@b+3)^0,f,c
 12074   003210  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 12075   003212  EF0D  F019         	goto	u3411
 12076   003216  EF0F  F019         	goto	u3410
 12077   00321A                     u3411:
 12078   00321A  EF10  F019         	goto	l1128
 12079   00321E                     u3410:
 12080   00321E  8032               	bsf	___fldiv@b^0,0,c
 12081   003220                     l1128:
 12082   003220  90D8               	bcf	status,0,c
 12083   003222  3645               	rlcf	___fldiv@grs^0,f,c
 12084   003224  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 12085   003226  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 12086   003228  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 12087   00322A  0643               	decf	___fldiv@new_exp^0,f,c
 12088   00322C  A0D8               	btfss	status,0,c
 12089   00322E  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 12090   003230                     l3816:
 12091   003230  AE34               	btfss	(___fldiv@b+2)^0,7,c
 12092   003232  EF1D  F019         	goto	u3421
 12093   003236  EF1F  F019         	goto	u3420
 12094   00323A                     u3421:
 12095   00323A  EF03  F019         	goto	l3810
 12096   00323E                     u3420:
 12097   00323E  0E00               	movlw	0
 12098   003240  6E4A               	movwf	___fldiv@aexp^0,c
 12099   003242  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 12100   003244  EF26  F019         	goto	u3431
 12101   003248  EF28  F019         	goto	u3430
 12102   00324C                     u3431:
 12103   00324C  EF4C  F019         	goto	l1130
 12104   003250                     u3430:
 12105   003250  0EFF               	movlw	255
 12106   003252  1445               	andwf	___fldiv@grs^0,w,c
 12107   003254  6E3A               	movwf	??___fldiv^0,c
 12108   003256  0EFF               	movlw	255
 12109   003258  1446               	andwf	(___fldiv@grs+1)^0,w,c
 12110   00325A  6E3B               	movwf	(??___fldiv+1)^0,c
 12111   00325C  0EFF               	movlw	255
 12112   00325E  1447               	andwf	(___fldiv@grs+2)^0,w,c
 12113   003260  6E3C               	movwf	(??___fldiv+2)^0,c
 12114   003262  0E7F               	movlw	127
 12115   003264  1448               	andwf	(___fldiv@grs+3)^0,w,c
 12116   003266  6E3D               	movwf	(??___fldiv+3)^0,c
 12117   003268  503A               	movf	??___fldiv^0,w,c
 12118   00326A  103B               	iorwf	(??___fldiv+1)^0,w,c
 12119   00326C  103C               	iorwf	(??___fldiv+2)^0,w,c
 12120   00326E  103D               	iorwf	(??___fldiv+3)^0,w,c
 12121   003270  B4D8               	btfsc	status,2,c
 12122   003272  EF3D  F019         	goto	u3441
 12123   003276  EF3F  F019         	goto	u3440
 12124   00327A                     u3441:
 12125   00327A  EF43  F019         	goto	l1131
 12126   00327E                     u3440:
 12127   00327E                     l3824:
 12128   00327E  0E01               	movlw	1
 12129   003280  6E4A               	movwf	___fldiv@aexp^0,c
 12130   003282  EF4C  F019         	goto	l1130
 12131   003286                     l1131:
 12132   003286  A032               	btfss	___fldiv@b^0,0,c
 12133   003288  EF48  F019         	goto	u3451
 12134   00328C  EF4A  F019         	goto	u3450
 12135   003290                     u3451:
 12136   003290  EF4C  F019         	goto	l1130
 12137   003294                     u3450:
 12138   003294  EF3F  F019         	goto	l3824
 12139   003298                     l1130:
 12140   003298  504A               	movf	___fldiv@aexp^0,w,c
 12141   00329A  B4D8               	btfsc	status,2,c
 12142   00329C  EF52  F019         	goto	u3461
 12143   0032A0  EF54  F019         	goto	u3460
 12144   0032A4                     u3461:
 12145   0032A4  EF78  F019         	goto	l3836
 12146   0032A8                     u3460:
 12147   0032A8  0E01               	movlw	1
 12148   0032AA  2632               	addwf	___fldiv@b^0,f,c
 12149   0032AC  0E00               	movlw	0
 12150   0032AE  2233               	addwfc	(___fldiv@b+1)^0,f,c
 12151   0032B0  2234               	addwfc	(___fldiv@b+2)^0,f,c
 12152   0032B2  2235               	addwfc	(___fldiv@b+3)^0,f,c
 12153   0032B4  A035               	btfss	(___fldiv@b+3)^0,0,c
 12154   0032B6  EF5F  F019         	goto	u3471
 12155   0032BA  EF61  F019         	goto	u3470
 12156   0032BE                     u3471:
 12157   0032BE  EF78  F019         	goto	l3836
 12158   0032C2                     u3470:
 12159   0032C2  C032  F03A         	movff	___fldiv@b,??___fldiv
 12160   0032C6  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 12161   0032CA  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 12162   0032CE  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 12163   0032D2  343D               	rlcf	(??___fldiv+3)^0,w,c
 12164   0032D4  323D               	rrcf	(??___fldiv+3)^0,f,c
 12165   0032D6  323C               	rrcf	(??___fldiv+2)^0,f,c
 12166   0032D8  323B               	rrcf	(??___fldiv+1)^0,f,c
 12167   0032DA  323A               	rrcf	??___fldiv^0,f,c
 12168   0032DC  C03A  F032         	movff	??___fldiv,___fldiv@b
 12169   0032E0  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 12170   0032E4  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 12171   0032E8  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 12172   0032EC  4A43               	infsnz	___fldiv@new_exp^0,f,c
 12173   0032EE  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 12174   0032F0                     l3836:
 12175   0032F0  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12176   0032F2  EF83  F019         	goto	u3481
 12177   0032F6  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 12178   0032F8  E108               	bnz	u3480
 12179   0032FA  2843               	incf	___fldiv@new_exp^0,w,c
 12180   0032FC  A0D8               	btfss	status,0,c
 12181   0032FE  EF83  F019         	goto	u3481
 12182   003302  EF85  F019         	goto	u3480
 12183   003306                     u3481:
 12184   003306  EF90  F019         	goto	l3840
 12185   00330A                     u3480:
 12186   00330A  0E00               	movlw	0
 12187   00330C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 12188   00330E  6843               	setf	___fldiv@new_exp^0,c
 12189   003310  0E00               	movlw	0
 12190   003312  6E32               	movwf	___fldiv@b^0,c
 12191   003314  0E00               	movlw	0
 12192   003316  6E33               	movwf	(___fldiv@b+1)^0,c
 12193   003318  0E00               	movlw	0
 12194   00331A  6E34               	movwf	(___fldiv@b+2)^0,c
 12195   00331C  0E00               	movlw	0
 12196   00331E  6E35               	movwf	(___fldiv@b+3)^0,c
 12197   003320                     l3840:
 12198   003320  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12199   003322  EF9D  F019         	goto	u3490
 12200   003326  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 12201   003328  E106               	bnz	u3491
 12202   00332A  0443               	decf	___fldiv@new_exp^0,w,c
 12203   00332C  B0D8               	btfsc	status,0,c
 12204   00332E  EF9B  F019         	goto	u3491
 12205   003332  EF9D  F019         	goto	u3490
 12206   003336                     u3491:
 12207   003336  EFAB  F019         	goto	l3844
 12208   00333A                     u3490:
 12209   00333A  0E00               	movlw	0
 12210   00333C  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 12211   00333E  0E00               	movlw	0
 12212   003340  6E43               	movwf	___fldiv@new_exp^0,c
 12213   003342  0E00               	movlw	0
 12214   003344  6E32               	movwf	___fldiv@b^0,c
 12215   003346  0E00               	movlw	0
 12216   003348  6E33               	movwf	(___fldiv@b+1)^0,c
 12217   00334A  0E00               	movlw	0
 12218   00334C  6E34               	movwf	(___fldiv@b+2)^0,c
 12219   00334E  0E00               	movlw	0
 12220   003350  6E35               	movwf	(___fldiv@b+3)^0,c
 12221   003352  0E00               	movlw	0
 12222   003354  6E42               	movwf	___fldiv@sign^0,c
 12223   003356                     l3844:
 12224   003356  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 12225   00335A  A049               	btfss	___fldiv@bexp^0,0,c
 12226   00335C  EFB2  F019         	goto	u3501
 12227   003360  EFB4  F019         	goto	u3500
 12228   003364                     u3501:
 12229   003364  EFB7  F019         	goto	l3850
 12230   003368                     u3500:
 12231   003368  8E34               	bsf	(___fldiv@b+2)^0,7,c
 12232   00336A  EFB8  F019         	goto	l3852
 12233   00336E                     l3850:
 12234   00336E  9E34               	bcf	(___fldiv@b+2)^0,7,c
 12235   003370                     l3852:
 12236   003370  90D8               	bcf	status,0,c
 12237   003372  3049               	rrcf	___fldiv@bexp^0,w,c
 12238   003374  6E35               	movwf	(___fldiv@b+3)^0,c
 12239   003376  EF6E  F018         	goto	l3766
 12240   00337A                     l1117:
 12241   00337A  0012               	return		;funcret
 12242   00337C                     __end_of___fldiv:
 12243                           	callstack 0
 12244                           
 12245 ;; *************** function _BlueMove *****************
 12246 ;; Defined at:
 12247 ;;		line 242 in file "dc_motor.c"
 12248 ;; Parameters:    Size  Location     Type
 12249 ;;  mL              2   30[COMRAM] PTR struct DC_motor
 12250 ;;		 -> motorL(9), 
 12251 ;;  mR              2   32[COMRAM] PTR struct DC_motor
 12252 ;;		 -> motorR(9), 
 12253 ;; Auto vars:     Size  Location     Type
 12254 ;;		None
 12255 ;; Return value:  Size  Location     Type
 12256 ;;                  1    wreg      void 
 12257 ;; Registers used:
 12258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12259 ;; Tracked objects:
 12260 ;;		On entry : 0/0
 12261 ;;		On exit  : 0/0
 12262 ;;		Unchanged: 0/0
 12263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12268 ;;Total ram usage:        4 bytes
 12269 ;; Hardware stack levels used: 1
 12270 ;; Hardware stack levels required when called: 5
 12271 ;; This function calls:
 12272 ;;		_reverseDetect
 12273 ;;		_turnRight45
 12274 ;; This function is called by:
 12275 ;;		_main
 12276 ;; This function uses a non-reentrant model
 12277 ;;
 12278                           
 12279                           	psect	text60
 12280   004DF4                     __ptext60:
 12281                           	callstack 0
 12282   004DF4                     _BlueMove:
 12283                           	callstack 25
 12284   004DF4                     
 12285                           ;dc_motor.c: 243:     reverseDetect(&motorL, &motorR);
 12286   004DF4  0E71               	movlw	low _motorL
 12287   004DF6  6E19               	movwf	reverseDetect@mL^0,c
 12288   004DF8  0E01               	movlw	high _motorL
 12289   004DFA  6E1A               	movwf	(reverseDetect@mL+1)^0,c
 12290   004DFC  0E68               	movlw	low _motorR
 12291   004DFE  6E1B               	movwf	reverseDetect@mR^0,c
 12292   004E00  0E01               	movlw	high _motorR
 12293   004E02  6E1C               	movwf	(reverseDetect@mR+1)^0,c
 12294   004E04  EC10  F028         	call	_reverseDetect	;wreg free
 12295                           
 12296                           ;dc_motor.c: 245:     turnRight45(&motorL, &motorR);
 12297   004E08  0E71               	movlw	low _motorL
 12298   004E0A  6E19               	movwf	turnRight45@mL^0,c
 12299   004E0C  0E01               	movlw	high _motorL
 12300   004E0E  6E1A               	movwf	(turnRight45@mL+1)^0,c
 12301   004E10  0E68               	movlw	low _motorR
 12302   004E12  6E1B               	movwf	turnRight45@mR^0,c
 12303   004E14  0E01               	movlw	high _motorR
 12304   004E16  6E1C               	movwf	(turnRight45@mR+1)^0,c
 12305   004E18  ECE3  F027         	call	_turnRight45	;wreg free
 12306                           
 12307                           ;dc_motor.c: 246:     turnRight45(&motorL, &motorR);
 12308   004E1C  0E71               	movlw	low _motorL
 12309   004E1E  6E19               	movwf	turnRight45@mL^0,c
 12310   004E20  0E01               	movlw	high _motorL
 12311   004E22  6E1A               	movwf	(turnRight45@mL+1)^0,c
 12312   004E24  0E68               	movlw	low _motorR
 12313   004E26  6E1B               	movwf	turnRight45@mR^0,c
 12314   004E28  0E01               	movlw	high _motorR
 12315   004E2A  6E1C               	movwf	(turnRight45@mR+1)^0,c
 12316   004E2C  ECE3  F027         	call	_turnRight45	;wreg free
 12317                           
 12318                           ;dc_motor.c: 247:     turnRight45(&motorL, &motorR);
 12319   004E30  0E71               	movlw	low _motorL
 12320   004E32  6E19               	movwf	turnRight45@mL^0,c
 12321   004E34  0E01               	movlw	high _motorL
 12322   004E36  6E1A               	movwf	(turnRight45@mL+1)^0,c
 12323   004E38  0E68               	movlw	low _motorR
 12324   004E3A  6E1B               	movwf	turnRight45@mR^0,c
 12325   004E3C  0E01               	movlw	high _motorR
 12326   004E3E  6E1C               	movwf	(turnRight45@mR+1)^0,c
 12327   004E40  ECE3  F027         	call	_turnRight45	;wreg free
 12328                           
 12329                           ;dc_motor.c: 248:     turnRight45(&motorL, &motorR);
 12330   004E44  0E71               	movlw	low _motorL
 12331   004E46  6E19               	movwf	turnRight45@mL^0,c
 12332   004E48  0E01               	movlw	high _motorL
 12333   004E4A  6E1A               	movwf	(turnRight45@mL+1)^0,c
 12334   004E4C  0E68               	movlw	low _motorR
 12335   004E4E  6E1B               	movwf	turnRight45@mR^0,c
 12336   004E50  0E01               	movlw	high _motorR
 12337   004E52  6E1C               	movwf	(turnRight45@mR+1)^0,c
 12338   004E54  ECE3  F027         	call	_turnRight45	;wreg free
 12339   004E58  0012               	return		;funcret
 12340   004E5A                     __end_of_BlueMove:
 12341                           	callstack 0
 12342                           
 12343 ;; *************** function _turnRight45 *****************
 12344 ;; Defined at:
 12345 ;;		line 181 in file "dc_motor.c"
 12346 ;; Parameters:    Size  Location     Type
 12347 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 12348 ;;		 -> motorL(9), 
 12349 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 12350 ;;		 -> motorR(9), 
 12351 ;; Auto vars:     Size  Location     Type
 12352 ;;		None
 12353 ;; Return value:  Size  Location     Type
 12354 ;;                  1    wreg      void 
 12355 ;; Registers used:
 12356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12357 ;; Tracked objects:
 12358 ;;		On entry : 0/0
 12359 ;;		On exit  : 0/0
 12360 ;;		Unchanged: 0/0
 12361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12366 ;;Total ram usage:        6 bytes
 12367 ;; Hardware stack levels used: 1
 12368 ;; Hardware stack levels required when called: 4
 12369 ;; This function calls:
 12370 ;;		_stop
 12371 ;;		_turnRight
 12372 ;; This function is called by:
 12373 ;;		_RedMove
 12374 ;;		_BlueMove
 12375 ;;		_YellowMove
 12376 ;;		_OrangeMove
 12377 ;; This function uses a non-reentrant model
 12378 ;;
 12379                           
 12380                           	psect	text61
 12381   004FC6                     __ptext61:
 12382                           	callstack 0
 12383   004FC6                     _turnRight45:
 12384                           	callstack 25
 12385   004FC6                     
 12386                           ;dc_motor.c: 182:     turnRight(mL,mR);
 12387   004FC6  C019  F014         	movff	turnRight45@mL,turnRight@mL
 12388   004FCA  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 12389   004FCE  C01B  F016         	movff	turnRight45@mR,turnRight@mR
 12390   004FD2  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 12391   004FD6  ECFA  F024         	call	_turnRight	;wreg free
 12392   004FDA                     
 12393                           ;dc_motor.c: 183:     _delay((unsigned long)((130)*(64000000/4000.0)));
 12394   004FDA  0E0B               	movlw	11
 12395   004FDC  6E1E               	movwf	(??_turnRight45+1)^0,c
 12396   004FDE  0E8E               	movlw	142
 12397   004FE0  6E1D               	movwf	??_turnRight45^0,c
 12398   004FE2  0E43               	movlw	67
 12399   004FE4                     u5537:
 12400   004FE4  2EE8               	decfsz	wreg,f,c
 12401   004FE6  D7FE               	bra	u5537
 12402   004FE8  2E1D               	decfsz	??_turnRight45^0,f,c
 12403   004FEA  D7FC               	bra	u5537
 12404   004FEC  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
 12405   004FEE  D7FA               	bra	u5537
 12406   004FF0  F000               	nop	
 12407   004FF2                     
 12408                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
 12409   004FF2  0E71               	movlw	low _motorL
 12410   004FF4  6E14               	movwf	stop@mL^0,c
 12411   004FF6  0E01               	movlw	high _motorL
 12412   004FF8  6E15               	movwf	(stop@mL+1)^0,c
 12413   004FFA  0E68               	movlw	low _motorR
 12414   004FFC  6E16               	movwf	stop@mR^0,c
 12415   004FFE  0E01               	movlw	high _motorR
 12416   005000  6E17               	movwf	(stop@mR+1)^0,c
 12417   005002  EC52  F026         	call	_stop	;wreg free
 12418                           
 12419                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12420   005006  0E52               	movlw	82
 12421   005008  6E1E               	movwf	(??_turnRight45+1)^0,c
 12422   00500A  0E2B               	movlw	43
 12423   00500C  6E1D               	movwf	??_turnRight45^0,c
 12424   00500E  0E00               	movlw	0
 12425   005010                     u5547:
 12426   005010  2EE8               	decfsz	wreg,f,c
 12427   005012  D7FE               	bra	u5547
 12428   005014  2E1D               	decfsz	??_turnRight45^0,f,c
 12429   005016  D7FC               	bra	u5547
 12430   005018  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
 12431   00501A  D7FA               	bra	u5547
 12432   00501C  D000               	nop2	
 12433   00501E  0012               	return		;funcret
 12434   005020                     __end_of_turnRight45:
 12435                           	callstack 0
 12436                           
 12437 ;; *************** function _turnRight *****************
 12438 ;; Defined at:
 12439 ;;		line 128 in file "dc_motor.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12442 ;;		 -> motorL(9), 
 12443 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12444 ;;		 -> motorR(9), 
 12445 ;; Auto vars:     Size  Location     Type
 12446 ;;		None
 12447 ;; Return value:  Size  Location     Type
 12448 ;;                  1    wreg      void 
 12449 ;; Registers used:
 12450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12451 ;; Tracked objects:
 12452 ;;		On entry : 0/0
 12453 ;;		On exit  : 0/0
 12454 ;;		Unchanged: 0/0
 12455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12459 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12460 ;;Total ram usage:        5 bytes
 12461 ;; Hardware stack levels used: 1
 12462 ;; Hardware stack levels required when called: 3
 12463 ;; This function calls:
 12464 ;;		_setMotorPWM
 12465 ;; This function is called by:
 12466 ;;		_turnRight45
 12467 ;; This function uses a non-reentrant model
 12468 ;;
 12469                           
 12470                           	psect	text62
 12471   0049F4                     __ptext62:
 12472                           	callstack 0
 12473   0049F4                     _turnRight:
 12474                           	callstack 25
 12475   0049F4                     
 12476                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
 12477   0049F4  EE20 F001          	lfsr	2,1
 12478   0049F8  5014               	movf	turnRight@mL^0,w,c
 12479   0049FA  26D9               	addwf	fsr2l,f,c
 12480   0049FC  5015               	movf	(turnRight@mL+1)^0,w,c
 12481   0049FE  22DA               	addwfc	fsr2h,f,c
 12482   004A00  0E01               	movlw	1
 12483   004A02  6EDF               	movwf	indf2,c
 12484                           
 12485                           ;dc_motor.c: 131:     mR->direction =0;
 12486   004A04  EE20 F001          	lfsr	2,1
 12487   004A08  5016               	movf	turnRight@mR^0,w,c
 12488   004A0A  26D9               	addwf	fsr2l,f,c
 12489   004A0C  5017               	movf	(turnRight@mR+1)^0,w,c
 12490   004A0E  22DA               	addwfc	fsr2h,f,c
 12491   004A10  0E00               	movlw	0
 12492   004A12  6EDF               	movwf	indf2,c
 12493                           
 12494                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
 12495   004A14  EF2C  F025         	goto	l4558
 12496   004A18                     l4550:
 12497                           
 12498                           ;dc_motor.c: 135:         mL->power+=10;
 12499   004A18  C014  FFD9         	movff	turnRight@mL,fsr2l
 12500   004A1C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 12501   004A20  0E0A               	movlw	10
 12502   004A22  26DF               	addwf	indf2,f,c
 12503                           
 12504                           ;dc_motor.c: 136:         mR->power+=10;
 12505   004A24  C016  FFD9         	movff	turnRight@mR,fsr2l
 12506   004A28  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 12507   004A2C  0E0A               	movlw	10
 12508   004A2E  26DF               	addwf	indf2,f,c
 12509   004A30                     
 12510                           ;dc_motor.c: 138:         setMotorPWM(mL);
 12511   004A30  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 12512   004A34  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 12513   004A38  ECBE  F020         	call	_setMotorPWM	;wreg free
 12514   004A3C                     
 12515                           ;dc_motor.c: 139:         setMotorPWM(mR);
 12516   004A3C  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 12517   004A40  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 12518   004A44  ECBE  F020         	call	_setMotorPWM	;wreg free
 12519   004A48                     
 12520                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12521   004A48  0E15               	movlw	21
 12522   004A4A  6E18               	movwf	??_turnRight^0,c
 12523   004A4C  0EC6               	movlw	198
 12524   004A4E                     u5557:
 12525   004A4E  2EE8               	decfsz	wreg,f,c
 12526   004A50  D7FE               	bra	u5557
 12527   004A52  2E18               	decfsz	??_turnRight^0,f,c
 12528   004A54  D7FC               	bra	u5557
 12529   004A56  D000               	nop2	
 12530   004A58                     l4558:
 12531                           
 12532                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
 12533   004A58  C014  FFD9         	movff	turnRight@mL,fsr2l
 12534   004A5C  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 12535   004A60  0E46               	movlw	70
 12536   004A62  60DF               	cpfslt	indf2,c
 12537   004A64  EF36  F025         	goto	u4641
 12538   004A68  EF38  F025         	goto	u4640
 12539   004A6C                     u4641:
 12540   004A6C  EF44  F025         	goto	l474
 12541   004A70                     u4640:
 12542   004A70  C016  FFD9         	movff	turnRight@mR,fsr2l
 12543   004A74  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 12544   004A78  0E45               	movlw	69
 12545   004A7A  64DF               	cpfsgt	indf2,c
 12546   004A7C  EF42  F025         	goto	u4651
 12547   004A80  EF44  F025         	goto	u4650
 12548   004A84                     u4651:
 12549   004A84  EF0C  F025         	goto	l4550
 12550   004A88                     u4650:
 12551   004A88                     l474:
 12552   004A88  0012               	return		;funcret
 12553   004A8A                     __end_of_turnRight:
 12554                           	callstack 0
 12555                           
 12556 ;; *************** function _reverseDetect *****************
 12557 ;; Defined at:
 12558 ;;		line 195 in file "dc_motor.c"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;  mL              2   24[COMRAM] PTR struct DC_motor
 12561 ;;		 -> motorL(9), 
 12562 ;;  mR              2   26[COMRAM] PTR struct DC_motor
 12563 ;;		 -> motorR(9), 
 12564 ;; Auto vars:     Size  Location     Type
 12565 ;;		None
 12566 ;; Return value:  Size  Location     Type
 12567 ;;                  1    wreg      void 
 12568 ;; Registers used:
 12569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12570 ;; Tracked objects:
 12571 ;;		On entry : 0/0
 12572 ;;		On exit  : 0/0
 12573 ;;		Unchanged: 0/0
 12574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12577 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12578 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12579 ;;Total ram usage:        6 bytes
 12580 ;; Hardware stack levels used: 1
 12581 ;; Hardware stack levels required when called: 4
 12582 ;; This function calls:
 12583 ;;		_fullSpeedBack
 12584 ;;		_stop
 12585 ;; This function is called by:
 12586 ;;		_RedMove
 12587 ;;		_GreenMove
 12588 ;;		_BlueMove
 12589 ;;		_YellowMove
 12590 ;;		_PinkMove
 12591 ;;		_OrangeMove
 12592 ;;		_LightBlueMove
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text63
 12597   005020                     __ptext63:
 12598                           	callstack 0
 12599   005020                     _reverseDetect:
 12600                           	callstack 25
 12601   005020                     
 12602                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 12603   005020  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 12604   005024  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 12605   005028  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 12606   00502C  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 12607   005030  EC45  F025         	call	_fullSpeedBack	;wreg free
 12608   005034                     
 12609                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 12610   005034  0E11               	movlw	17
 12611   005036  6E1E               	movwf	(??_reverseDetect+1)^0,c
 12612   005038  0E3C               	movlw	60
 12613   00503A  6E1D               	movwf	??_reverseDetect^0,c
 12614   00503C  0ECB               	movlw	203
 12615   00503E                     u5567:
 12616   00503E  2EE8               	decfsz	wreg,f,c
 12617   005040  D7FE               	bra	u5567
 12618   005042  2E1D               	decfsz	??_reverseDetect^0,f,c
 12619   005044  D7FC               	bra	u5567
 12620   005046  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 12621   005048  D7FA               	bra	u5567
 12622   00504A  F000               	nop	
 12623   00504C                     
 12624                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 12625   00504C  0E71               	movlw	low _motorL
 12626   00504E  6E14               	movwf	stop@mL^0,c
 12627   005050  0E01               	movlw	high _motorL
 12628   005052  6E15               	movwf	(stop@mL+1)^0,c
 12629   005054  0E68               	movlw	low _motorR
 12630   005056  6E16               	movwf	stop@mR^0,c
 12631   005058  0E01               	movlw	high _motorR
 12632   00505A  6E17               	movwf	(stop@mR+1)^0,c
 12633   00505C  EC52  F026         	call	_stop	;wreg free
 12634                           
 12635                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 12636   005060  0E52               	movlw	82
 12637   005062  6E1E               	movwf	(??_reverseDetect+1)^0,c
 12638   005064  0E2B               	movlw	43
 12639   005066  6E1D               	movwf	??_reverseDetect^0,c
 12640   005068  0E00               	movlw	0
 12641   00506A                     u5577:
 12642   00506A  2EE8               	decfsz	wreg,f,c
 12643   00506C  D7FE               	bra	u5577
 12644   00506E  2E1D               	decfsz	??_reverseDetect^0,f,c
 12645   005070  D7FC               	bra	u5577
 12646   005072  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 12647   005074  D7FA               	bra	u5577
 12648   005076  D000               	nop2	
 12649   005078  0012               	return		;funcret
 12650   00507A                     __end_of_reverseDetect:
 12651                           	callstack 0
 12652                           
 12653 ;; *************** function _stop *****************
 12654 ;; Defined at:
 12655 ;;		line 92 in file "dc_motor.c"
 12656 ;; Parameters:    Size  Location     Type
 12657 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12658 ;;		 -> motorL(9), 
 12659 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12660 ;;		 -> motorR(9), 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      void 
 12665 ;; Registers used:
 12666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12676 ;;Total ram usage:        5 bytes
 12677 ;; Hardware stack levels used: 1
 12678 ;; Hardware stack levels required when called: 3
 12679 ;; This function calls:
 12680 ;;		_setMotorPWM
 12681 ;; This function is called by:
 12682 ;;		_main
 12683 ;;		_turnRight45
 12684 ;;		_turnLeft45
 12685 ;;		_reverseDetect
 12686 ;;		_reverseOneBlock
 12687 ;;		_Forwardhalfblock
 12688 ;;		_RetryMove
 12689 ;;		_Backhalfblock
 12690 ;; This function uses a non-reentrant model
 12691 ;;
 12692                           
 12693                           	psect	text64
 12694   004CA4                     __ptext64:
 12695                           	callstack 0
 12696   004CA4                     _stop:
 12697                           	callstack 27
 12698   004CA4                     
 12699                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 12700   004CA4  EF74  F026         	goto	l4530
 12701   004CA8                     l4522:
 12702                           
 12703                           ;dc_motor.c: 96:         mL->power-=10;
 12704   004CA8  C014  FFD9         	movff	stop@mL,fsr2l
 12705   004CAC  C015  FFDA         	movff	stop@mL+1,fsr2h
 12706   004CB0  0E0A               	movlw	10
 12707   004CB2  5EDF               	subwf	indf2,f,c
 12708                           
 12709                           ;dc_motor.c: 97:         mR->power-=10;
 12710   004CB4  C016  FFD9         	movff	stop@mR,fsr2l
 12711   004CB8  C017  FFDA         	movff	stop@mR+1,fsr2h
 12712   004CBC  0E0A               	movlw	10
 12713   004CBE  5EDF               	subwf	indf2,f,c
 12714   004CC0                     
 12715                           ;dc_motor.c: 102:         setMotorPWM(mL);
 12716   004CC0  C014  F00E         	movff	stop@mL,setMotorPWM@m
 12717   004CC4  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 12718   004CC8  ECBE  F020         	call	_setMotorPWM	;wreg free
 12719   004CCC                     
 12720                           ;dc_motor.c: 103:         setMotorPWM(mR);
 12721   004CCC  C016  F00E         	movff	stop@mR,setMotorPWM@m
 12722   004CD0  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 12723   004CD4  ECBE  F020         	call	_setMotorPWM	;wreg free
 12724   004CD8                     
 12725                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12726   004CD8  0E15               	movlw	21
 12727   004CDA  6E18               	movwf	??_stop^0,c
 12728   004CDC  0EC6               	movlw	198
 12729   004CDE                     u5587:
 12730   004CDE  2EE8               	decfsz	wreg,f,c
 12731   004CE0  D7FE               	bra	u5587
 12732   004CE2  2E18               	decfsz	??_stop^0,f,c
 12733   004CE4  D7FC               	bra	u5587
 12734   004CE6  D000               	nop2	
 12735   004CE8                     l4530:
 12736                           
 12737                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 12738   004CE8  C014  FFD9         	movff	stop@mL,fsr2l
 12739   004CEC  C015  FFDA         	movff	stop@mL+1,fsr2h
 12740   004CF0  50DF               	movf	indf2,w,c
 12741   004CF2  A4D8               	btfss	status,2,c
 12742   004CF4  EF7E  F026         	goto	u4601
 12743   004CF8  EF80  F026         	goto	u4600
 12744   004CFC                     u4601:
 12745   004CFC  EF54  F026         	goto	l4522
 12746   004D00                     u4600:
 12747   004D00  C016  FFD9         	movff	stop@mR,fsr2l
 12748   004D04  C017  FFDA         	movff	stop@mR+1,fsr2h
 12749   004D08  50DF               	movf	indf2,w,c
 12750   004D0A  A4D8               	btfss	status,2,c
 12751   004D0C  EF8A  F026         	goto	u4611
 12752   004D10  EF8C  F026         	goto	u4610
 12753   004D14                     u4611:
 12754   004D14  EF54  F026         	goto	l4522
 12755   004D18                     u4610:
 12756   004D18  0012               	return		;funcret
 12757   004D1A                     __end_of_stop:
 12758                           	callstack 0
 12759                           
 12760 ;; *************** function _fullSpeedBack *****************
 12761 ;; Defined at:
 12762 ;;		line 164 in file "dc_motor.c"
 12763 ;; Parameters:    Size  Location     Type
 12764 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 12765 ;;		 -> motorL(9), 
 12766 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 12767 ;;		 -> motorR(9), 
 12768 ;; Auto vars:     Size  Location     Type
 12769 ;;		None
 12770 ;; Return value:  Size  Location     Type
 12771 ;;                  1    wreg      void 
 12772 ;; Registers used:
 12773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12774 ;; Tracked objects:
 12775 ;;		On entry : 0/0
 12776 ;;		On exit  : 0/0
 12777 ;;		Unchanged: 0/0
 12778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12783 ;;Total ram usage:        5 bytes
 12784 ;; Hardware stack levels used: 1
 12785 ;; Hardware stack levels required when called: 3
 12786 ;; This function calls:
 12787 ;;		_setMotorPWM
 12788 ;; This function is called by:
 12789 ;;		_reverseDetect
 12790 ;;		_reverseOneBlock
 12791 ;;		_RetryMove
 12792 ;;		_Backhalfblock
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           	psect	text65
 12797   004A8A                     __ptext65:
 12798                           	callstack 0
 12799   004A8A                     _fullSpeedBack:
 12800                           	callstack 25
 12801   004A8A                     
 12802                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 12803   004A8A  EE20 F001          	lfsr	2,1
 12804   004A8E  5014               	movf	fullSpeedBack@mL^0,w,c
 12805   004A90  26D9               	addwf	fsr2l,f,c
 12806   004A92  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 12807   004A94  22DA               	addwfc	fsr2h,f,c
 12808   004A96  0E00               	movlw	0
 12809   004A98  6EDF               	movwf	indf2,c
 12810                           
 12811                           ;dc_motor.c: 168:     mR->direction =0;
 12812   004A9A  EE20 F001          	lfsr	2,1
 12813   004A9E  5016               	movf	fullSpeedBack@mR^0,w,c
 12814   004AA0  26D9               	addwf	fsr2l,f,c
 12815   004AA2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 12816   004AA4  22DA               	addwfc	fsr2h,f,c
 12817   004AA6  0E00               	movlw	0
 12818   004AA8  6EDF               	movwf	indf2,c
 12819                           
 12820                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 12821   004AAA  EF77  F025         	goto	l4572
 12822   004AAE                     l4564:
 12823                           
 12824                           ;dc_motor.c: 171:         mL->power+=10;
 12825   004AAE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12826   004AB2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12827   004AB6  0E0A               	movlw	10
 12828   004AB8  26DF               	addwf	indf2,f,c
 12829                           
 12830                           ;dc_motor.c: 172:         mR->power+=10;
 12831   004ABA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12832   004ABE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12833   004AC2  0E0A               	movlw	10
 12834   004AC4  26DF               	addwf	indf2,f,c
 12835   004AC6                     
 12836                           ;dc_motor.c: 174:         setMotorPWM(mL);
 12837   004AC6  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 12838   004ACA  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 12839   004ACE  ECBE  F020         	call	_setMotorPWM	;wreg free
 12840   004AD2                     
 12841                           ;dc_motor.c: 175:         setMotorPWM(mR);
 12842   004AD2  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 12843   004AD6  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 12844   004ADA  ECBE  F020         	call	_setMotorPWM	;wreg free
 12845   004ADE                     
 12846                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
 12847   004ADE  0E15               	movlw	21
 12848   004AE0  6E18               	movwf	??_fullSpeedBack^0,c
 12849   004AE2  0EC6               	movlw	198
 12850   004AE4                     u5597:
 12851   004AE4  2EE8               	decfsz	wreg,f,c
 12852   004AE6  D7FE               	bra	u5597
 12853   004AE8  2E18               	decfsz	??_fullSpeedBack^0,f,c
 12854   004AEA  D7FC               	bra	u5597
 12855   004AEC  D000               	nop2	
 12856   004AEE                     l4572:
 12857                           
 12858                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 12859   004AEE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 12860   004AF2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 12861   004AF6  0E32               	movlw	50
 12862   004AF8  60DF               	cpfslt	indf2,c
 12863   004AFA  EF81  F025         	goto	u4661
 12864   004AFE  EF83  F025         	goto	u4660
 12865   004B02                     u4661:
 12866   004B02  EF8F  F025         	goto	l490
 12867   004B06                     u4660:
 12868   004B06  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 12869   004B0A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 12870   004B0E  0E31               	movlw	49
 12871   004B10  64DF               	cpfsgt	indf2,c
 12872   004B12  EF8D  F025         	goto	u4671
 12873   004B16  EF8F  F025         	goto	u4670
 12874   004B1A                     u4671:
 12875   004B1A  EF57  F025         	goto	l4564
 12876   004B1E                     u4670:
 12877   004B1E                     l490:
 12878   004B1E  0012               	return		;funcret
 12879   004B20                     __end_of_fullSpeedBack:
 12880                           	callstack 0
 12881                           
 12882 ;; *************** function _setMotorPWM *****************
 12883 ;; Defined at:
 12884 ;;		line 67 in file "dc_motor.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;  m               2   13[COMRAM] PTR struct DC_motor
 12887 ;;		 -> motorR(9), motorL(9), 
 12888 ;; Auto vars:     Size  Location     Type
 12889 ;;  negDuty         1   18[COMRAM] unsigned char 
 12890 ;;  posDuty         1   17[COMRAM] unsigned char 
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12903 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12904 ;;Total ram usage:        6 bytes
 12905 ;; Hardware stack levels used: 1
 12906 ;; Hardware stack levels required when called: 2
 12907 ;; This function calls:
 12908 ;;		___lwdiv
 12909 ;;		___wmul
 12910 ;; This function is called by:
 12911 ;;		_stop
 12912 ;;		_turnLeft
 12913 ;;		_turnRight
 12914 ;;		_fullSpeedAhead
 12915 ;;		_fullSpeedBack
 12916 ;; This function uses a non-reentrant model
 12917 ;;
 12918                           
 12919                           	psect	text66
 12920   00417C                     __ptext66:
 12921                           	callstack 0
 12922   00417C                     _setMotorPWM:
 12923                           	callstack 27
 12924   00417C                     
 12925                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 12926   00417C  EE20 F002          	lfsr	2,2
 12927   004180  500E               	movf	setMotorPWM@m^0,w,c
 12928   004182  26D9               	addwf	fsr2l,f,c
 12929   004184  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12930   004186  22DA               	addwfc	fsr2h,f,c
 12931   004188  50DF               	movf	indf2,w,c
 12932   00418A  B4D8               	btfsc	status,2,c
 12933   00418C  EFCA  F020         	goto	u4141
 12934   004190  EFCC  F020         	goto	u4140
 12935   004194                     u4141:
 12936   004194  EF00  F021         	goto	l4206
 12937   004198                     u4140:
 12938   004198                     
 12939                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 12940   004198  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12941   00419C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12942   0041A0  50DF               	movf	indf2,w,c
 12943   0041A2  6E10               	movwf	??_setMotorPWM^0,c
 12944   0041A4  5010               	movf	??_setMotorPWM^0,w,c
 12945   0041A6  6E01               	movwf	___wmul@multiplier^0,c
 12946   0041A8  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12947   0041AA  EE20 F003          	lfsr	2,3
 12948   0041AE  500E               	movf	setMotorPWM@m^0,w,c
 12949   0041B0  26D9               	addwf	fsr2l,f,c
 12950   0041B2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12951   0041B4  22DA               	addwfc	fsr2h,f,c
 12952   0041B6  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12953   0041BA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12954   0041BE  EC8F  F02B         	call	___wmul	;wreg free
 12955   0041C2  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12956   0041C6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12957   0041CA  0E00               	movlw	0
 12958   0041CC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12959   0041CE  0E64               	movlw	100
 12960   0041D0  6E09               	movwf	___lwdiv@divisor^0,c
 12961   0041D2  EC8D  F026         	call	___lwdiv	;wreg free
 12962   0041D6  EE20 F003          	lfsr	2,3
 12963   0041DA  500E               	movf	setMotorPWM@m^0,w,c
 12964   0041DC  26D9               	addwf	fsr2l,f,c
 12965   0041DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12966   0041E0  22DA               	addwfc	fsr2h,f,c
 12967   0041E2  50DF               	movf	indf2,w,c
 12968   0041E4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 12969   0041E6  5007               	movf	?___lwdiv^0,w,c
 12970   0041E8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 12971   0041EA  6E12               	movwf	setMotorPWM@posDuty^0,c
 12972   0041EC                     
 12973                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 12974   0041EC  EE20 F003          	lfsr	2,3
 12975   0041F0  500E               	movf	setMotorPWM@m^0,w,c
 12976   0041F2  26D9               	addwf	fsr2l,f,c
 12977   0041F4  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12978   0041F6  22DA               	addwfc	fsr2h,f,c
 12979   0041F8  50DF               	movf	indf2,w,c
 12980   0041FA  6E13               	movwf	setMotorPWM@negDuty^0,c
 12981                           
 12982                           ;dc_motor.c: 74:     }
 12983   0041FC  EF23  F021         	goto	l4210
 12984   004200                     l4206:
 12985                           
 12986                           ;dc_motor.c: 76:         posDuty=0;
 12987   004200  0E00               	movlw	0
 12988   004202  6E12               	movwf	setMotorPWM@posDuty^0,c
 12989   004204                     
 12990                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12991   004204  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12992   004208  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12993   00420C  50DF               	movf	indf2,w,c
 12994   00420E  6E10               	movwf	??_setMotorPWM^0,c
 12995   004210  5010               	movf	??_setMotorPWM^0,w,c
 12996   004212  6E01               	movwf	___wmul@multiplier^0,c
 12997   004214  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12998   004216  EE20 F003          	lfsr	2,3
 12999   00421A  500E               	movf	setMotorPWM@m^0,w,c
 13000   00421C  26D9               	addwf	fsr2l,f,c
 13001   00421E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13002   004220  22DA               	addwfc	fsr2h,f,c
 13003   004222  CFDE F003          	movff	postinc2,___wmul@multiplicand
 13004   004226  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 13005   00422A  EC8F  F02B         	call	___wmul	;wreg free
 13006   00422E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 13007   004232  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 13008   004236  0E00               	movlw	0
 13009   004238  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 13010   00423A  0E64               	movlw	100
 13011   00423C  6E09               	movwf	___lwdiv@divisor^0,c
 13012   00423E  EC8D  F026         	call	___lwdiv	;wreg free
 13013   004242  5007               	movf	?___lwdiv^0,w,c
 13014   004244  6E13               	movwf	setMotorPWM@negDuty^0,c
 13015   004246                     l4210:
 13016                           
 13017                           ;dc_motor.c: 80:     if (m->direction) {
 13018   004246  EE20 F001          	lfsr	2,1
 13019   00424A  500E               	movf	setMotorPWM@m^0,w,c
 13020   00424C  26D9               	addwf	fsr2l,f,c
 13021   00424E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13022   004250  22DA               	addwfc	fsr2h,f,c
 13023   004252  50DF               	movf	indf2,w,c
 13024   004254  B4D8               	btfsc	status,2,c
 13025   004256  EF2F  F021         	goto	u4151
 13026   00425A  EF31  F021         	goto	u4150
 13027   00425E                     u4151:
 13028   00425E  EF53  F021         	goto	l4214
 13029   004262                     u4150:
 13030   004262                     
 13031                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 13032   004262  EE20 F005          	lfsr	2,5
 13033   004266  500E               	movf	setMotorPWM@m^0,w,c
 13034   004268  26D9               	addwf	fsr2l,f,c
 13035   00426A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13036   00426C  22DA               	addwfc	fsr2h,f,c
 13037   00426E  CFDE F010          	movff	postinc2,??_setMotorPWM
 13038   004272  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 13039   004276  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 13040   00427A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13041   00427E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 13042                           
 13043                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 13044   004282  EE20 F007          	lfsr	2,7
 13045   004286  500E               	movf	setMotorPWM@m^0,w,c
 13046   004288  26D9               	addwf	fsr2l,f,c
 13047   00428A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13048   00428C  22DA               	addwfc	fsr2h,f,c
 13049   00428E  CFDE F010          	movff	postinc2,??_setMotorPWM
 13050   004292  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 13051   004296  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 13052   00429A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13053   00429E  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 13054                           
 13055                           ;dc_motor.c: 85:     } else {
 13056   0042A2  EF73  F021         	goto	l452
 13057   0042A6                     l4214:
 13058                           
 13059                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 13060   0042A6  EE20 F005          	lfsr	2,5
 13061   0042AA  500E               	movf	setMotorPWM@m^0,w,c
 13062   0042AC  26D9               	addwf	fsr2l,f,c
 13063   0042AE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13064   0042B0  22DA               	addwfc	fsr2h,f,c
 13065   0042B2  CFDE F010          	movff	postinc2,??_setMotorPWM
 13066   0042B6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 13067   0042BA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 13068   0042BE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13069   0042C2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 13070                           
 13071                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 13072   0042C6  EE20 F007          	lfsr	2,7
 13073   0042CA  500E               	movf	setMotorPWM@m^0,w,c
 13074   0042CC  26D9               	addwf	fsr2l,f,c
 13075   0042CE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 13076   0042D0  22DA               	addwfc	fsr2h,f,c
 13077   0042D2  CFDE F010          	movff	postinc2,??_setMotorPWM
 13078   0042D6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 13079   0042DA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 13080   0042DE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 13081   0042E2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 13082   0042E6                     l452:
 13083   0042E6  0012               	return		;funcret
 13084   0042E8                     __end_of_setMotorPWM:
 13085                           	callstack 0
 13086                           
 13087 ;; *************** function ___wmul *****************
 13088 ;; Defined at:
 13089 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 13090 ;; Parameters:    Size  Location     Type
 13091 ;;  multiplier      2    0[COMRAM] unsigned int 
 13092 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;  product         2    4[COMRAM] unsigned int 
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  2    0[COMRAM] unsigned int 
 13097 ;; Registers used:
 13098 ;;		wreg, status,2, status,0, prodl, prodh
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13108 ;;Total ram usage:        6 bytes
 13109 ;; Hardware stack levels used: 1
 13110 ;; Hardware stack levels required when called: 1
 13111 ;; This function calls:
 13112 ;;		Nothing
 13113 ;; This function is called by:
 13114 ;;		_setMotorPWM
 13115 ;; This function uses a non-reentrant model
 13116 ;;
 13117                           
 13118                           	psect	text67
 13119   00571E                     __ptext67:
 13120                           	callstack 0
 13121   00571E                     ___wmul:
 13122                           	callstack 27
 13123   00571E  5001               	movf	___wmul@multiplier^0,w,c
 13124   005720  0203               	mulwf	___wmul@multiplicand^0,c
 13125   005722  CFF3 F005          	movff	prodl,___wmul@product
 13126   005726  CFF4 F006          	movff	prodh,___wmul@product+1
 13127   00572A  5001               	movf	___wmul@multiplier^0,w,c
 13128   00572C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13129   00572E  50F3               	movf	243,w,c
 13130   005730  2606               	addwf	(___wmul@product+1)^0,f,c
 13131   005732  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13132   005734  0203               	mulwf	___wmul@multiplicand^0,c
 13133   005736  50F3               	movf	243,w,c
 13134   005738  2606               	addwf	(___wmul@product+1)^0,f,c
 13135   00573A  C005  F001         	movff	___wmul@product,?___wmul
 13136   00573E  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13137   005742  0012               	return		;funcret
 13138   005744                     __end_of___wmul:
 13139                           	callstack 0
 13140                           
 13141 ;; *************** function ___lwdiv *****************
 13142 ;; Defined at:
 13143 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  dividend        2    6[COMRAM] unsigned int 
 13146 ;;  divisor         2    8[COMRAM] unsigned int 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  quotient        2   10[COMRAM] unsigned int 
 13149 ;;  counter         1   12[COMRAM] unsigned char 
 13150 ;; Return value:  Size  Location     Type
 13151 ;;                  2    6[COMRAM] unsigned int 
 13152 ;; Registers used:
 13153 ;;		wreg, status,2, status,0
 13154 ;; Tracked objects:
 13155 ;;		On entry : 0/0
 13156 ;;		On exit  : 0/0
 13157 ;;		Unchanged: 0/0
 13158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13159 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13160 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13162 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13163 ;;Total ram usage:        7 bytes
 13164 ;; Hardware stack levels used: 1
 13165 ;; Hardware stack levels required when called: 1
 13166 ;; This function calls:
 13167 ;;		Nothing
 13168 ;; This function is called by:
 13169 ;;		_setMotorPWM
 13170 ;; This function uses a non-reentrant model
 13171 ;;
 13172                           
 13173                           	psect	text68
 13174   004D1A                     __ptext68:
 13175                           	callstack 0
 13176   004D1A                     ___lwdiv:
 13177                           	callstack 27
 13178   004D1A  0E00               	movlw	0
 13179   004D1C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 13180   004D1E  0E00               	movlw	0
 13181   004D20  6E0B               	movwf	___lwdiv@quotient^0,c
 13182   004D22  5009               	movf	___lwdiv@divisor^0,w,c
 13183   004D24  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 13184   004D26  B4D8               	btfsc	status,2,c
 13185   004D28  EF98  F026         	goto	u3861
 13186   004D2C  EF9A  F026         	goto	u3860
 13187   004D30                     u3861:
 13188   004D30  EFC2  F026         	goto	l1026
 13189   004D34                     u3860:
 13190   004D34  0E01               	movlw	1
 13191   004D36  6E0D               	movwf	___lwdiv@counter^0,c
 13192   004D38  EFA2  F026         	goto	l4094
 13193   004D3C                     l4092:
 13194   004D3C  90D8               	bcf	status,0,c
 13195   004D3E  3609               	rlcf	___lwdiv@divisor^0,f,c
 13196   004D40  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 13197   004D42  2A0D               	incf	___lwdiv@counter^0,f,c
 13198   004D44                     l4094:
 13199   004D44  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 13200   004D46  EFA7  F026         	goto	u3871
 13201   004D4A  EFA9  F026         	goto	u3870
 13202   004D4E                     u3871:
 13203   004D4E  EF9E  F026         	goto	l4092
 13204   004D52                     u3870:
 13205   004D52                     l4096:
 13206   004D52  90D8               	bcf	status,0,c
 13207   004D54  360B               	rlcf	___lwdiv@quotient^0,f,c
 13208   004D56  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 13209   004D58  5009               	movf	___lwdiv@divisor^0,w,c
 13210   004D5A  5C07               	subwf	___lwdiv@dividend^0,w,c
 13211   004D5C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 13212   004D5E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 13213   004D60  A0D8               	btfss	status,0,c
 13214   004D62  EFB5  F026         	goto	u3881
 13215   004D66  EFB7  F026         	goto	u3880
 13216   004D6A                     u3881:
 13217   004D6A  EFBC  F026         	goto	l4104
 13218   004D6E                     u3880:
 13219   004D6E  5009               	movf	___lwdiv@divisor^0,w,c
 13220   004D70  5E07               	subwf	___lwdiv@dividend^0,f,c
 13221   004D72  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 13222   004D74  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 13223   004D76  800B               	bsf	___lwdiv@quotient^0,0,c
 13224   004D78                     l4104:
 13225   004D78  90D8               	bcf	status,0,c
 13226   004D7A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 13227   004D7C  3209               	rrcf	___lwdiv@divisor^0,f,c
 13228   004D7E  2E0D               	decfsz	___lwdiv@counter^0,f,c
 13229   004D80  EFA9  F026         	goto	l4096
 13230   004D84                     l1026:
 13231   004D84  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 13232   004D88  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13233   004D8C  0012               	return		;funcret
 13234   004D8E                     __end_of___lwdiv:
 13235                           	callstack 0
 13236                           
 13237 ;; *************** function _HighISR *****************
 13238 ;; Defined at:
 13239 ;;		line 59 in file "interrupts.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;		None
 13242 ;; Auto vars:     Size  Location     Type
 13243 ;;		None
 13244 ;; Return value:  Size  Location     Type
 13245 ;;                  1    wreg      void 
 13246 ;; Registers used:
 13247 ;;		None
 13248 ;; Tracked objects:
 13249 ;;		On entry : 0/0
 13250 ;;		On exit  : 0/0
 13251 ;;		Unchanged: 0/0
 13252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13257 ;;Total ram usage:        0 bytes
 13258 ;; Hardware stack levels used: 1
 13259 ;; This function calls:
 13260 ;;		Nothing
 13261 ;; This function is called by:
 13262 ;;		Interrupt level 2
 13263 ;; This function uses a non-reentrant model
 13264 ;;
 13265                           
 13266                           	psect	intcode
 13267   000008                     __pintcode:
 13268                           	callstack 0
 13269   000008                     _HighISR:
 13270                           	callstack 22
 13271                           
 13272                           ;incstack = 0
 13273   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13274   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13275   00000C  0011               	retfie		f
 13276   00000E                     __end_of_HighISR:
 13277                           	callstack 0
 13278                           
 13279                           	psect	rparam
 13280   000000                     
 13281                           	psect	temp
 13282   00005F                     btemp:
 13283                           	callstack 0
 13284   00005F                     	ds	1
 13285   000000                     int$flags	set	btemp
 13286   000000                     wtemp8	set	btemp+1
 13287   000000                     ttemp5	set	btemp+1
 13288   000000                     ttemp6	set	btemp+4
 13289   000000                     ttemp7	set	btemp+8
 13290                           
 13291                           	psect	idloc
 13292                           
 13293                           ;Config register IDLOC0 @ 0x200000
 13294                           ;	unspecified, using default values
 13295   200000                     	org	2097152
 13296   200000  0FFF               	dw	4095
 13297                           
 13298                           ;Config register IDLOC1 @ 0x200002
 13299                           ;	unspecified, using default values
 13300   200002                     	org	2097154
 13301   200002  0FFF               	dw	4095
 13302                           
 13303                           ;Config register IDLOC2 @ 0x200004
 13304                           ;	unspecified, using default values
 13305   200004                     	org	2097156
 13306   200004  0FFF               	dw	4095
 13307                           
 13308                           ;Config register IDLOC3 @ 0x200006
 13309                           ;	unspecified, using default values
 13310   200006                     	org	2097158
 13311   200006  0FFF               	dw	4095
 13312                           
 13313                           ;Config register IDLOC4 @ 0x200008
 13314                           ;	unspecified, using default values
 13315   200008                     	org	2097160
 13316   200008  0FFF               	dw	4095
 13317                           
 13318                           ;Config register IDLOC5 @ 0x20000A
 13319                           ;	unspecified, using default values
 13320   20000A                     	org	2097162
 13321   20000A  0FFF               	dw	4095
 13322                           
 13323                           ;Config register IDLOC6 @ 0x20000C
 13324                           ;	unspecified, using default values
 13325   20000C                     	org	2097164
 13326   20000C  0FFF               	dw	4095
 13327                           
 13328                           ;Config register IDLOC7 @ 0x20000E
 13329                           ;	unspecified, using default values
 13330   20000E                     	org	2097166
 13331   20000E  0FFF               	dw	4095
 13332                           
 13333                           	psect	config
 13334                           
 13335                           ;Config register CONFIG1L @ 0x300000
 13336                           ;	External Oscillator mode Selection bits
 13337                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 13338                           ;	Power-up default value for COSC bits
 13339                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 13340   300000                     	org	3145728
 13341   300000  AA                 	db	170
 13342                           
 13343                           ;Config register CONFIG1H @ 0x300001
 13344                           ;	unspecified, using default values
 13345                           ;	Clock Out Enable bit
 13346                           ;	CLKOUTEN = 0x1, unprogrammed default
 13347                           ;	Clock Switch Enable bit
 13348                           ;	CSWEN = 0x1, unprogrammed default
 13349                           ;	Fail-Safe Clock Monitor Enable bit
 13350                           ;	FCMEN = 0x1, unprogrammed default
 13351   300001                     	org	3145729
 13352   300001  FF                 	db	255
 13353                           
 13354                           ;Config register CONFIG2L @ 0x300002
 13355                           ;	unspecified, using default values
 13356                           ;	Master Clear Enable bit
 13357                           ;	MCLRE = 0x1, unprogrammed default
 13358                           ;	Power-up Timer Enable bit
 13359                           ;	PWRTE = 0x1, unprogrammed default
 13360                           ;	Low-power BOR enable bit
 13361                           ;	LPBOREN = 0x1, unprogrammed default
 13362                           ;	Brown-out Reset Enable bits
 13363                           ;	BOREN = 0x3, unprogrammed default
 13364   300002                     	org	3145730
 13365   300002  FF                 	db	255
 13366                           
 13367                           ;Config register CONFIG2H @ 0x300003
 13368                           ;	unspecified, using default values
 13369                           ;	Brown Out Reset Voltage selection bits
 13370                           ;	BORV = 0x3, unprogrammed default
 13371                           ;	ZCD Disable bit
 13372                           ;	ZCD = 0x1, unprogrammed default
 13373                           ;	PPSLOCK bit One-Way Set Enable bit
 13374                           ;	PPS1WAY = 0x1, unprogrammed default
 13375                           ;	Stack Full/Underflow Reset Enable bit
 13376                           ;	STVREN = 0x1, unprogrammed default
 13377                           ;	Debugger Enable bit
 13378                           ;	DEBUG = 0x1, unprogrammed default
 13379                           ;	Extended Instruction Set Enable bit
 13380                           ;	XINST = 0x1, unprogrammed default
 13381   300003                     	org	3145731
 13382   300003  FF                 	db	255
 13383                           
 13384                           ;Config register CONFIG3L @ 0x300004
 13385                           ;	WDT Period Select bits
 13386                           ;	WDTCPS = 0x1F, unprogrammed default
 13387                           ;	WDT operating mode
 13388                           ;	WDTE = OFF, WDT Disabled
 13389   300004                     	org	3145732
 13390   300004  9F                 	db	159
 13391                           
 13392                           ;Config register CONFIG3H @ 0x300005
 13393                           ;	unspecified, using default values
 13394                           ;	WDT Window Select bits
 13395                           ;	WDTCWS = 0x7, unprogrammed default
 13396                           ;	WDT input clock selector
 13397                           ;	WDTCCS = 0x7, unprogrammed default
 13398   300005                     	org	3145733
 13399   300005  FF                 	db	255
 13400                           
 13401                           ;Config register CONFIG4L @ 0x300006
 13402                           ;	unspecified, using default values
 13403                           ;	Write Protection Block 0
 13404                           ;	WRT0 = 0x1, unprogrammed default
 13405                           ;	Write Protection Block 1
 13406                           ;	WRT1 = 0x1, unprogrammed default
 13407                           ;	Write Protection Block 2
 13408                           ;	WRT2 = 0x1, unprogrammed default
 13409                           ;	Write Protection Block 3
 13410                           ;	WRT3 = 0x1, unprogrammed default
 13411                           ;	Write Protection Block 3
 13412                           ;	WRT4 = 0x1, unprogrammed default
 13413                           ;	Write Protection Block 3
 13414                           ;	WRT5 = 0x1, unprogrammed default
 13415                           ;	Write Protection Block 3
 13416                           ;	WRT6 = 0x1, unprogrammed default
 13417                           ;	Write Protection Block 3
 13418                           ;	WRT7 = 0x1, unprogrammed default
 13419   300006                     	org	3145734
 13420   300006  FF                 	db	255
 13421                           
 13422                           ;Config register CONFIG4H @ 0x300007
 13423                           ;	unspecified, using default values
 13424                           ;	Configuration Register Write Protection bit
 13425                           ;	WRTC = 0x1, unprogrammed default
 13426                           ;	Boot Block Write Protection bit
 13427                           ;	WRTB = 0x1, unprogrammed default
 13428                           ;	Data EEPROM Write Protection bit
 13429                           ;	WRTD = 0x1, unprogrammed default
 13430                           ;	Scanner Enable bit
 13431                           ;	SCANE = 0x1, unprogrammed default
 13432                           ;	Low Voltage Programming Enable bit
 13433                           ;	LVP = 0x1, unprogrammed default
 13434   300007                     	org	3145735
 13435   300007  FF                 	db	255
 13436                           
 13437                           ;Config register CONFIG5L @ 0x300008
 13438                           ;	unspecified, using default values
 13439                           ;	UserNVM Program Memory Code Protection bit
 13440                           ;	CP = 0x1, unprogrammed default
 13441                           ;	DataNVM Memory Code Protection bit
 13442                           ;	CPD = 0x1, unprogrammed default
 13443   300008                     	org	3145736
 13444   300008  FF                 	db	255
 13445                           
 13446                           ;Config register CONFIG5H @ 0x300009
 13447                           ;	unspecified, using default values
 13448   300009                     	org	3145737
 13449   300009  FF                 	db	255
 13450                           
 13451                           ;Config register CONFIG6L @ 0x30000A
 13452                           ;	unspecified, using default values
 13453                           ;	Table Read Protection Block 0
 13454                           ;	EBTR0 = 0x1, unprogrammed default
 13455                           ;	Table Read Protection Block 1
 13456                           ;	EBTR1 = 0x1, unprogrammed default
 13457                           ;	Table Read Protection Block 2
 13458                           ;	EBTR2 = 0x1, unprogrammed default
 13459                           ;	Table Read Protection Block 3
 13460                           ;	EBTR3 = 0x1, unprogrammed default
 13461                           ;	Table Read Protection Block 4
 13462                           ;	EBTR4 = 0x1, unprogrammed default
 13463                           ;	Table Read Protection Block 5
 13464                           ;	EBTR5 = 0x1, unprogrammed default
 13465                           ;	Table Read Protection Block 6
 13466                           ;	EBTR6 = 0x1, unprogrammed default
 13467                           ;	Table Read Protection Block 7
 13468                           ;	EBTR7 = 0x1, unprogrammed default
 13469   30000A                     	org	3145738
 13470   30000A  FF                 	db	255
 13471                           
 13472                           ;Config register CONFIG6H @ 0x30000B
 13473                           ;	unspecified, using default values
 13474                           ;	Boot Block Table Read Protection bit
 13475                           ;	EBTRB = 0x1, unprogrammed default
 13476   30000B                     	org	3145739
 13477   30000B  FF                 	db	255
 13478                           tosu	equ	0xFFF
 13479                           tosh	equ	0xFFE
 13480                           tosl	equ	0xFFD
 13481                           stkptr	equ	0xFFC
 13482                           pclatu	equ	0xFFB
 13483                           pclath	equ	0xFFA
 13484                           pcl	equ	0xFF9
 13485                           tblptru	equ	0xFF8
 13486                           tblptrh	equ	0xFF7
 13487                           tblptrl	equ	0xFF6
 13488                           tablat	equ	0xFF5
 13489                           prodh	equ	0xFF4
 13490                           prodl	equ	0xFF3
 13491                           indf0	equ	0xFEF
 13492                           postinc0	equ	0xFEE
 13493                           postdec0	equ	0xFED
 13494                           preinc0	equ	0xFEC
 13495                           plusw0	equ	0xFEB
 13496                           fsr0h	equ	0xFEA
 13497                           fsr0l	equ	0xFE9
 13498                           wreg	equ	0xFE8
 13499                           indf1	equ	0xFE7
 13500                           postinc1	equ	0xFE6
 13501                           postdec1	equ	0xFE5
 13502                           preinc1	equ	0xFE4
 13503                           plusw1	equ	0xFE3
 13504                           fsr1h	equ	0xFE2
 13505                           fsr1l	equ	0xFE1
 13506                           bsr	equ	0xFE0
 13507                           indf2	equ	0xFDF
 13508                           postinc2	equ	0xFDE
 13509                           postdec2	equ	0xFDD
 13510                           preinc2	equ	0xFDC
 13511                           plusw2	equ	0xFDB
 13512                           fsr2h	equ	0xFDA
 13513                           fsr2l	equ	0xFD9
 13514                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        3
    BSS         229
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     157
    BANK1           256    106     236
    BANK2           256      0      60
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2308$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2224$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2224$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _fullSpeedAhead->_setMotorPWM
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               108   108      0  198376
                                            113 BANK0      2     2      0
                                              0 BANK1    106   106      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35365
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34858
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34505
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28659
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8600
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   20694
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    8491
                                             24 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _RedMove                                              4     0      4   14404
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   20086
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6290
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _OrangeMove                                           4     0      4   14404
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _LightBlueMove                                        4     0      4   13796
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GreenMove                                            4     0      4   13796
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    6594
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    5986
                                             24 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    2309
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23331
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _BlueMove                                             4     0      4   14404
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _turnRight45                                          6     2      4    7202
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseDetect                                        6     2      4    7050
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    3329
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBack                                        5     1      4    2613
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6A      EC       7       92.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRhlll        6      0       0      37        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     223      60        0.0%
DATA                 0      0     223       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 19:39:38 2023

               _color_read_Red 535C                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 530C                   ___fldiv@sign 0042                _color_read_Blue 53FC  
                           l42 5762                             l51 53FA                             l60 36A8  
                           l45 535A                             l70 1934                             l54 544A  
                           l39 5172                             l48 53AA                             l57 4EB6  
          ___wmul@multiplicand 0003               _color_read_Green 53AC                readColours@vals 000C  
            ??_Interrupts_init 0001                            l203 5784                            l140 571C  
                          l212 56CA                            l134 56F4                            l206 5798  
                          l143 57C2                            l152 57A4                            l137 56F6  
                          l146 57AE                            l155 55A6                            l149 57B8  
                          l502 4F10                            l511 5624                            l520 51C4  
                          l505 4FC4                            l514 5662                            l266 57CA  
                          l194 5780                            l523 5216                            l452 42E6  
                          l532 4C28                            l517 4E58                            l445 4BA6  
                          l526 5268                            l535 5742                            l800 460E  
                          l368 2CA2                            l529 52BA                            l490 4B1E  
                          l458 4D18                            l474 4A88                            l482 49F2  
                          l466 495C                            l387 2F94                            l493 501E  
                          l805 4654                            l662 444A                            l496 4F6A  
                          l832 4550                            l649 417A                            l809 569A  
                          l499 5078                            l794 48C6                            _abs 55A8  
                          _pad 4C2A                            _rel 015C                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           l1033 4D8C                           l1105 54DC  
                         l1026 4D84                           l1130 3298                           l1122 319E  
                         l1131 3286                           ?_abs 0013                           l1204 3F8A  
                         l1117 337A                           l1213 5120                           l1119 31DA  
                         l1063 251E                           l1128 3220                           l1080 2638  
                         l1072 27EE                           l1064 250C                           l1312 2110  
                         l1153 2C18                           l1065 24D2                           l1090 26F6  
                         l1156 2AAA                           l1149 28B4                           l1405 481C  
                         l1413 5564                           l1245 4C4C                           l1166 2BDA  
                         l1158 2B22                           l1190 3E96                           l1254 3A3C  
                         l1422 5520                           l1159 2B10                           l1327 39AE  
                         l4000 485C                           l1416 57C8                           l1256 3A44  
                         l1089 2708                           l1193 3FF2                           l1249 4CA2  
                         l1257 3A8A                           l4002 488A                           l1282 1CC8  
                         l4100 4D6E                           l4004 489A                           l4020 45CE  
                         l4012 4552                           l1364 55DE                           l1268 3C2C  
                         l1284 1B0E                           l1197 3F2E                           l1373 3E3E  
                         l1349 50CE                           l4102 4D76                           l4006 48BE  
                         l4030 4652                           l4022 45DC                           l4014 4580  
                         l4110 4C38                           l1367 55E6                           l1359 4752  
                         l1279 232E                           l4104 4D78                           l4200 417C  
                         l4008 48C4                           l4024 45EE                           l4016 4590  
                         l5000 1866                           l4120 4C8E                           l4112 4C44  
                         l1376 3D82                           l1384 4DE2                           l1393 530A  
                         l4106 4D7E                           l4210 4246                           l4202 4198  
                         l4026 45FC                           l4018 45BE                           l5002 18A0  
                         l5010 18DE                           l4122 55A8                           l4114 4C58  
                         l4034 5664                           l4050 44A0                           l4042 444C  
                         l4130 46B4                           l1387 4DF2                           l4212 4262  
                         l4204 41EC                           l4028 464C                           l3500 2468  
                         l4124 55C2                           l3420 47A0                           l3412 4754  
                         l4116 4C6C                           l4108 4C2A                           l4220 39E4  
                         l4036 567A                           l4052 44A2                           l4044 4462  
                         l4140 4706                           l4132 46DC                           l4300 1A0E  
                         l5100 50F2                           l4214 42A6                           l4206 4200  
                         l3510 24BA                           l3502 246C                           l3430 234A  
                         l5022 192C                           l5110 5174                           l5030 5770  
                         l3422 47D6                           l3414 4766                           l4118 4C70  
                         l4230 3A5C                           l4222 39F4                           l4038 568A  
                         l4054 44B2                           l4134 46E8                           l4126 4656  
                         l4150 54EE                           l4302 1A16                           l4310 1A58  
                         l5102 510E                           l4208 4204                           l5112 4DF4  
                         l3600 2732                           l3520 24FE                           l3512 24CA  
                         l3504 2470                           l3440 237E                           l3432 234C  
                         l5120 4BA8                           l5032 577A                           l5040 56A0  
                         l3416 4778                           l4240 3A92                           l4232 3A62  
                         l4224 3A14                           l4216 39B0                           l4080 4530  
                         l4064 44DC                           l4056 44B6                           l4048 4476  
                         l4144 474A                           l4128 4676                           l4160 3CA4  
                         l4152 4D8E                           l4400 1F40                           l4320 1AA2  
                         l4312 1A7E                           l4304 1A2E                           l5200 2C48  
                         l4090 4D34                           l3610 27AE                           l3602 276C  
                         l3522 2500                           l3514 24E0                           l3506 2474  
                         l3450 23B0                           l3434 235C                           l3442 2386  
                         l3426 2330                           l5018 1920                           l5114 5626  
                         l5106 55E8                           l5122 4BBC                           l5034 577C  
                         l5026 5764                           l5042 56AE                           l3418 4782  
                         l4250 3B30                           l4242 3A9C                           l4234 3A72  
                         l4226 3A30                           l4218 39D0                           l4082 4540  
                         l4074 4504                           l4066 44E6                           l4058 44C4  
                         l4138 46F4                           l4170 3D72                           l4162 3CB8  
                         l4154 4DAC                           l4410 1FF0                           l4402 1F50  
                         l4330 1AD8                           l4314 1A90                           l4306 1A38  
                         l5210 2C66                           l5202 2C4E                           l4092 4D3C  
                         l3620 27CE                           l3612 27B2                           l3604 276E  
                         l3540 2588                           l3532 2550                           l3524 250A  
                         l3516 24EC                           l3508 249E                           l3460 23E6  
                         l3452 23B6                           l3444 2396                           l3436 236C  
                         l3428 233C                           l5116 526A                           l5108 5218  
                         l5124 4BD4                           l4500 57B4                           l5060 4B32  
                         l5036 577E                           l5028 576E                           l5044 56B2  
                         l3700 436A                           l4260 3BF6                           l4244 3AA2  
                         l4252 3B94                           l4236 3A7E                           l4228 3A4C  
                         l4076 4510                           l4068 44F0                           l4180 3E2E  
                         l4164 3CC6                           l4172 3DA6                           l4156 3C2E  
                         l4148 54DE                           l4420 2054                           l4412 2024  
                         l4404 1F60                           l4340 1B96                           l4316 1A94  
                         l5220 2C82                           l5212 2C6E                           l5204 2C52  
                         l4094 4D44                           l4086 4D1A                           l3622 27DC  
                         l3614 27C0                           l3606 277E                           l3542 258C  
                         l3534 2560                           l3526 252C                           l3550 25AC  
                         l3518 24F0                           l3470 2422                           l3462 23F6  
                         l3454 23C4                           l3446 239C                           l3438 237C  
                         l5118 51C6                           l5126 4BE8                           l5070 4B52  
                         l5062 4B34                           l4510 5574                           l4502 57A6  
                         l5038 569C                           l3710 43E2                           l3702 4372  
                         l3630 552E                           l4262 3BFC                           l4254 3BAE  
                         l4246 3B24                           l4238 3A86                           l4078 4520  
                         l4174 3DE2                           l4158 3C4E                           l4190 52E0  
                         l4430 2106                           l4422 205A                           l4414 2038  
                         l4406 1F94                           l4350 1C56                           l4342 1BC8  
                         l4334 1B1E                           l4318 1A9A                           l4270 193C  
                         l5230 2CC4                           l5222 2C8A                           l5214 2C72  
                         l5206 2C56                           l4096 4D52                           l4088 4D22  
                         l4520 4CA4                           l3800 31C6                           l3624 27DE  
                         l3616 27C6                           l3608 278E                           l3552 25D2  
                         l3560 2628                           l3544 259A                           l3536 256E  
                         l3528 253C                           l3480 2440                           l3472 2430  
                         l3464 23F8                           l3456 23C6                           l3448 23AE  
                         l5128 4BFC                           l5080 4B8E                           l5072 4B76  
                         l5064 4B36                           l4512 557C                           l4504 57AA  
                         l3712 43F4                           l3704 4386                           l3632 5540  
                         l4264 3C0C                           l4256 3BCC                           l4248 3B2A  
                         l4176 3DF6                           l4168 3D36                           l4192 52EC  
                         l4184 52BC                           l4440 214A                           l4432 2122  
                         l4424 2062                           l4408 1FEA                           l4416 203C  
                         l4360 1CEC                           l4344 1C06                           l4336 1B24  
                         l4328 1ABE                           l4280 198C                           l4272 194C  
                         l4600 37EE                           l5240 2D46                           l5232 2CD0  
                         l5224 2C92                           l5216 2C76                           l5208 2C5E  
                         l4098 4D58                           l4522 4CA8                           l4530 4CE8  
                         l3810 3206                           l3802 31C8                           l3730 300E  
                         l3722 2FE2                           l3618 27C8                           l3570 267C  
                         l3562 264E                           l3554 2606                           l3546 259C  
                         l3538 257C                           l3490 2454                           l3482 2444  
                         l3474 2434                           l3458 23D6                           l3466 2400  
                         l5090 4F80                           l5082 4B98                           l5074 4B80  
                         l5066 4B38                           l5058 4B20                           l4514 55A2  
                         l4506 5568                           l3650 402A                           l3642 3FF4  
                         l3706 4394                           l3714 43FA                           l3634 5544  
                         l4258 3BE6                           l4178 3E1E                           l4186 52D0  
                         l4194 52F0                           l4442 2152                           l4434 2130  
                         l4450 2172                           l4426 206E                           l4418 204C  
                         l4370 1D20                           l4362 1CF4                           l4346 1C1A  
                         l4354 1C96                           l4338 1B58                           l4290 19C8  
                         l4282 1994                           l4274 195A                           l4602 37F6  
                         l4610 3838                           l5250 2D94                           l5242 2D62  
                         l5234 2CE4                           l5226 2C9A                           l5218 2C7A  
                         l3636 571E                           l4532 4D00                           l4524 4CC0  
                         l3820 3242                           l3812 3210                           l3804 31D8  
                         l3740 3048                           l3732 301E                           l3724 2FEE  
                         l3900 28E8                           l3580 26A6                           l3572 268A  
                         l3564 265E                           l3556 2608                           l3548 25A6  
                         l3492 2458                           l3484 2448                           l3476 2438  
                         l3468 2410                           l4700 495E                           l5092 4F98  
                         l4540 4910                           l4196 56F6                           l5084 4B9A  
                         l5076 4B82                           l5068 4B4E                           l4516 55A4  
                         l4508 556C                           l3660 4086                           l3652 4038  
                         l3644 3FF8                           l3716 440A                           l3708 43C2  
                         l3628 5522                           l4188 52DC                           l4460 21F8  
                         l4452 2184                           l4444 2162                           l4436 2140  
                         l4428 20E6                           l4380 1D6A                           l4372 1D38  
                         l4364 1CFC                           l4356 1CD0                           l4348 1C4E  
                         l4284 19A4                           l4292 19CC                           l4276 195E  
                         l4268 1936                           l4620 38EE                           l4612 385C  
                         l4604 37FE                           l5260 2E34                           l5244 2D7C  
                         l5252 2DAC                           l5236 2D02                           l5228 2CB0  
                         l5180 2C26                           l3638 573A                           l4526 4CCC  
                         l4550 4A18                           l3830 32B4                           l3822 3250  
                         l3814 321E                           l3806 31EA                           l3750 3074  
                         l3742 304E                           l3734 302E                           l3726 2FFC  
                         l3910 2938                           l3902 28F4                           l3590 26D8  
                         l3582 26B6                           l3574 268C                           l3558 2618  
                         l3494 245C                           l3486 244C                           l3478 243C  
                         l4702 4982                           l4710 49C2                           l4542 491C  
                         l4534 48C8                           l4198 5706                           l5086 4BA4  
                         l5078 4B8C                           l3670 40F0                           l3662 408E  
                         l3654 4058                           l3646 4006                           l3718 442A  
                         l4470 2272                           l4462 222C                           l4454 2196  
                         l4446 2166                           l4438 2144                           l4382 1D7E  
                         l4390 1E74                           l4374 1D4A                           l4366 1D00  
                         l4358 1CE0                           l4294 19F2                           l4286 19B4  
                         l4278 1982                           l4622 390E                           l4614 3890  
                         l4630 3970                           l5094 50D0                           l5270 2EA0  
                         l5262 2E48                           l5254 2DCA                           l5246 2D84  
                         l5238 2D2A                           l5190 2C3C                           l5182 2C2A  
                         l5174 2C1A                           ?_pad 0011                           l4528 4CD8  
                         l4560 4A70                           l4552 4A30                           l3840 3320  
                         l3832 32C2                           l3824 327E                           l3808 3200  
                         l3816 3230                           l3760 30AE                           l3752 3084  
                         l3744 3054                           l3736 3030                           l3728 2FFE  
                         l3920 297A                           l3912 2944                           l3904 28FE  
                         l3592 26EE                           l3576 269A                           l3568 2672  
                         l3584 26B8                           l3496 2460                           l3488 2450  
                         l4712 49DA                           l4704 499A                           l5088 4F6C  
                         l4536 48EC                           l4544 492C                           l4720 4F12  
                         l4800 5140                           l3680 413A                           l3672 4110  
                         l3664 40A2                           l3656 405C                           l3648 4026  
                         l4480 22E0                           l4472 227A                           l4464 2234  
                         l4456 219A                           l4448 216C                           l4392 1E92  
                         l4384 1DE2                           l4368 1D12                           l4376 1D52  
                         l4296 1A04                           l4288 19C0                           l4608 3806  
                         l5096 50E2                           l5280 2F10                           l5272 2EB8  
                         l5264 2E60                           l5256 2DD2                           l5248 2D8C  
                         l5192 2C3E                           l5184 2C36                           l5176 2C1E  
                         l4570 4ADE                           l4562 4A8A                           l4730 504C  
                         l4554 4A3C                           l4714 4FC6                           l3850 336E  
                         l3842 333A                           l3834 32EC                           l3818 323E  
                         l3762 30C4                           l3754 3094                           l3746 3062  
                         l3738 3038                           l3930 29DC                           l3922 2986  
                         l3914 2950                           l3906 2914                           l3578 26A2  
                         l3586 26C6                           l3498 2464                           l4706 49A6  
                         l4546 4944                           l4538 4904                           l4722 4F26  
                         l4490 57BA                           l4810 5162                           l4802 514A  
                         l3682 415A                           l3674 4112                           l3666 40B0  
                         l3658 4068                           l3690 42FA                           l4482 22F0  
                         l4474 228A                           l4458 21A0                           l4466 2238  
                         l4394 1EC6                           l4386 1E3A                           l4378 1D5A  
                         l4298 1A08                           l4618 38C4                           l4634 3982  
                         l5098 50EA                           l5290 2F7C                           l5282 2F24  
                         l5274 2ECC                           l5266 2E74                           l5258 2E28  
                         l5194 2C42                           l5186 2C38                           l5178 2C22  
                         l4564 4AAE                           l4572 4AEE                           l4556 4A48  
                         l4548 49F4                           l4716 4FDA                           l3852 3370  
                         l3844 3356                           l3828 32A8                           l3836 32F0  
                         l3780 3118                           l3764 30D4                           l3772 30F4  
                         l3756 3096                           l3748 3064                           l3940 2A72  
                         l3932 29E8                           l3924 2996                           l3916 295E  
                         l3908 2920                           l3860 27F0                           l3596 2718  
                         l3588 26CA                           l4740 3E52                           l4900 13E6  
                         l4708 49B2                           l4724 4F3E                           l4732 4EB8  
                         l4660 56D6                           l4492 57BE                           l4820 516C  
                         l4812 5164                           l4804 5154                           l3676 4124  
                         l3668 40C2                           l3692 431A                           l4484 2306  
                         l4476 22BA                           l4468 2256                           l4396 1EF8  
                         l4388 1E6E                           l4628 3940                           l4580 36E0  
                         l5284 2F3C                           l5276 2EE4                           l5268 2E8C  
                         l5292 2F98                           l5196 2C44                           l5188 2C3A  
                         l4574 4B06                           l4566 4AC6                           l4726 5020  
                         l4558 4A58                           l4718 4FF2                           l3846 335A  
                         l3838 330A                           l3790 316A                           l3782 3132  
                         l3774 3104                           l3766 30DC                           l3758 309E  
                         l3950 2AC8                           l3942 2A90                           l3934 2A04  
                         l3926 29B0                           l3918 296A                           l3870 282C  
                         l3862 27FC                           l3598 2724                           l4750 3ED0  
                         l4742 3E60                           l4910 1456                           l4734 4ECC  
                         l4662 56DC                           l4494 579C                           l4670 5746  
                         l4822 516E                           l4814 5166                           l4806 515E  
                         l4830 3448                           l3678 412A                           l3694 431E  
                         l3686 42E8                           l4486 230E                           l4478 22C8  
                         l4398 1F0E                           l4590 3742                           l4582 36EE  
                         l5294 2FCE                           l5286 2F50                           l5278 2EF8  
                         l5198 2C46                           l4568 4AD2                           l4728 5034  
                         l3848 3368                           l3792 317A                           l3784 3142  
                         l3776 3104                           l3768 30E0                           l3960 2B32  
                         l3952 2ACC                           l3944 2A9A                           l3936 2A2E  
                         l3928 29C0                           l3880 285E                           l3872 283C  
                         l3864 280A                           l4760 3F24                           l4752 3ED8  
                         l4744 3EA6                           l4920 14C6                           l4736 4EE4  
                         l4664 56DE                           l4496 57A0                           l4824 5170  
                         l4816 5168                           l4808 5160                           l4840 3610  
                         l4832 347C                           l4680 53A2                           l4672 530C  
                         l3696 432C                           l3688 42EC                           l5392 381A  
                         l4592 3798                           l4584 36F2                           l4576 36AA  
                         l5288 2F68                           l3794 318E                           l3786 3152  
                         l3970 2B94                           l3962 2B3E                           l3954 2ADA  
                         l3946 2AA8                           l3938 2A64                           l3890 289E  
                         l3882 286C                           l3874 2842                           l3866 280C  
                         l4770 3F9A                           l4762 3F60                           l4754 3EE4  
                         l4746 3EBC                           l4738 3E42                           l4922 1500  
                         l4930 153E                           l4906 13F2                           l4850 0EF4  
                         l4842 0E5A                           l4666 56E0                           l4658 56CC  
                         l4498 57B0                           l4818 516A                           l4834 3510  
                         l4690 53FC                           l4674 5352                           l4826 4E5A  
                         l3698 434C                           l5394 38D8                           l4586 3702  
                         l4578 36D2                           l3796 319C                           l3788 3162  
                         l3980 2BFC                           l3972 2BA8                           l3964 2B4C  
                         l3956 2B08                           l3948 2ABA                           l3892 28A4  
                         l3884 286E                           l3876 2852                           l3868 281C  
                         l4780 3FE2                           l4772 3F9E                           l4764 3F6C  
                         l4756 3F16                           l4932 157C                           l4908 1424  
                         l4916 1462                           l4860 0F84                           l4852 0F28  
                         l4844 0E84                           l4668 56E2                           l4836 3544  
                         l4828 337C                           l4692 5442                           l4684 53AC  
                         l5396 3962                           l4596 37C8                           l4588 3722  
                         l3798 31A8                           l3982 2BFE                           l3974 2BC2  
                         l3966 2B76                           l3894 28C4                           l3886 287E  
                         l3878 2858                           l3990 5498                           l4774 3FC2  
                         l4766 3F7A                           l4758 3F18                           l4918 1494  
                         l4942 1594                           l4870 104A                           l4862 0FB6  
                         l4846 0E90                           l4838 35DC                           l4686 53F2  
                         l4678 535C                           l4598 37D8                           l4790 50C4  
                         l3976 2BDE                           l3984 2C04                           l3968 2B7A  
                         l3896 28D4                           l3888 288E                           l3992 54A8  
                         l4776 3FD2                           l4768 3F98                           l4944 15C6  
                         l4880 10DC                           l4872 1066                           l4864 0FBE  
                         l4848 0EC0                           l4696 5784                           l4784 507A  
                         l3986 2C08                           l3978 2BEE                           l4778 3FE0  
                         l4970 16F4                           l4962 1684                           l4954 163A  
                         l4946 15F8                           l4938 1588                           l4890 1252  
                         l4882 117C                           l4874 10BC                           l4866 1012  
                         l4858 0F32                           l4794 5122                           l4698 5794  
                         l4786 5086                           l3996 481E                           l4956 1678  
                         l4892 12AE                           l4884 118C                           l4868 1044  
                         l4796 5126                           l4788 50A4                           l3998 484C  
                         l4982 1736                           l4966 1690                           l4894 132A  
                         l4886 11C4                           l4878 10C8                           l4798 5130  
                         l4984 1768                           l4968 16C2                           l4888 11D6  
                         l4896 1382                           l4986 179A                           l4898 13B4  
                         l4988 17CC                           l4996 1802                           l4998 1834  
                  GreenMove@mL 001F                    GreenMove@mR 0021                           STR_1 0E01  
                         STR_2 0E2E                           STR_3 0E50                           STR_6 0E54  
                         u3000 269A                           u3001 2696                           u3010 26B6  
                         u3011 26B2                           u3100 278E                           u3020 26C6  
                         u3101 278A                           u3021 26C2                           u3110 27AE  
                         u3030 26D8                           u3111 27AA                           u3031 26D4  
                         u3120 27C0                           u3040 26EE                           u3200 40F0  
                         u4000 4DAC                   _BAUD4CONbits 000EE9                           u3121 27BC  
                         u3041 26EA                           u3201 40EC                           u4001 4DA8  
                         u3130 27DC                           u3050 2704                           u3210 413A  
                         u4010 3C76                           u3131 27D8                           u3051 2700  
                         u3211 4136                           u3300 301E                           u3060 2718  
                         u3220 42FA                           u3140 5564                           u4100 3E1E  
                         u4020 3CA4                           u3301 301A                           u3061 2714  
                         u3221 42F6                           u3141 5560                           u4101 3E1A  
                         u4021 3CA0                           u3310 3062                           u3070 2732  
                         u3150 4006                           u3230 432C                           u4030 3CC6  
                         u4110 530A                           u3311 305E                           u3071 272E  
                         u3151 4002                           u3231 4328                           u4031 3CC2  
                         u4015 3C6C                           u4111 5306                           u3400 3200  
                         u3320 3074                           u3080 276C                           u5000 1500  
                         u4120 5706                           u3160 4038                           u3240 436A  
                         u4200 3A5C                           u3401 31FC                           u3321 3070  
                         u3081 2768                           u5001 14FC                           u4121 5702  
                         u3161 4034                           u3241 4366                           u4201 3A58  
                         u3410 321E                           u3330 3084                           u3090 277E  
                         u5010 153A                           u4130 571C                           u3250 4394  
                         u4210 3A72                           u4050 3D32                           _T2PR 000FBC  
                         u3411 321A                           u3331 3080                           u3091 277A  
                         u5011 1536                           u4131 5718                           u3171 4062  
                         u3251 4390                           u4211 3A6E                           u4051 3D2E  
                         u4140 4198                           u3500 3368                           u3420 323E  
                         u3340 30C4                           u5100 1768                           u5020 157C  
                         u3180 4086                           u3260 43C2                           u4220 3BAE  
                         u4060 3D56                           u4300 1A04                           u4141 4194  
                         u3501 3364                           u3421 323A                           u3341 30C0  
                         u5101 1764                           u5021 1578                           u3181 4082  
                         u3261 43BE                           u4221 3BAA                           u4045 3CDA  
                         u4301 1A00                           u4150 4262                           u3430 3250  
                         u3350 3104                           u3510 280A                           u5110 179A  
                         u5030 15C6                           u3190 40B0                           u3270 440A  
                         u2710 4766                           u4230 3BCC                           u4070 3D72  
                         u4046 3CE4                           u4310 1A7E                           u4151 425E  
                         u3431 324C                           u3351 3100                           u3511 2806  
                         u5111 1796                           u5031 15C2                           u3191 40AC  
                         u3271 4406                           u2711 4762                           u4231 3BC8  
                         u4071 3D6E                           u4047 3CF4                           u4311 1A7A  
                         u3440 327E                           u3360 317A                           u3280 2FFC  
                         u3600 2AA8                           u3520 281C                           u2800 23D6  
                         u5120 17CC                           u5040 15F8                           u2720 4778  
                         u4240 3BE6                           u4160 39E0                           u4080 3DC6  
                         u4400 1D12                           u4320 1A90                           u3441 327A  
                         u3361 3176                           u3281 2FF8                           u3601 2AA4  
                         u3521 2818                           u2801 23D2                           u5121 17C8  
                         u5041 15F4                           u2721 4774                           u4241 3BE2  
                         u4161 39DA                           u4065 3D4C                           u4401 1D0E  
                         u4321 1A8C                           u3450 3294                           u3370 319C  
                         u3290 300E                           u3610 2AC8                           u3530 282C  
                         u2810 23E6                           u5130 17FE                           u5050 1636  
                         u2730 47A0                           u4250 3BF6                           u4170 39E2  
                         u4090 3DE2                           u4410 1D20                           u4330 1B0A  
                         u3451 3290                           u3371 3198                           u3291 300A  
                         u3611 2AC4                           u3531 2828                           u2811 23E2  
                         u5131 17FA                           u5051 1632                           u2731 479C  
                         u4251 3BF2                           u4091 3DDE                           u4411 1D1C  
                         u4331 1B06                           u3460 32A8                           u3380 31C6  
                         u3700 484C                           u3620 2ADA                           u3540 286C  
                         u2900 252C                           u2820 2422                           u5140 1834  
                         u5060 1678                           u2740 47D6                           u4180 39F4  
                         u4500 2122                           u4420 1D4A                           u4340 1B96  
                         u4260 195A                           u5300 2D7C                           u3461 32A4  
                         u3381 31C2                           u3701 4848                           u3621 2AD6  
                         u3541 2868                           u2901 2528                           u2821 241E  
                         u5141 1830                           u5061 1674                           u2741 47D2  
                         u4181 39F0                           u4085 3DBC                           u4501 211E  
                         u4421 1D46                           u4341 1B92                           u4261 1956  
                         u5301 2D78                           u3470 32C2                           u3390 31EA  
                         u3710 488A                           u3630 2B08                           u3550 287E  
                         u2910 253C                           u2830 2430                           u2750 234A  
                         u5150 1866                           u5070 16C2                           u4190 3A30  
                         u4510 2130                           u4430 1E92                           u4350 1BC8  
                         u4270 19A4                           u5310 2DCA                           u3471 32BE  
                         u3391 31E6                           u3711 4886                           u3631 2B04  
                         u3551 287A                           u2911 2538                           u2831 242C  
                         u2751 2346                           u5151 1862                           u5071 16BE  
                         u4191 3A2C                           u4511 212C                           u4431 1E8E  
                         u4351 1BC4                           u4271 19A0                           u5311 2DC6  
                         u4600 4D00                           u3480 330A                           u3720 48BE  
                         u3640 2B1E                           u3560 288E                           u2920 256E  
                         u2840 249E                           u2760 235C                           u5160 18A0  
                         u5080 16F4                           u3800 4496                           u4520 2184  
                         u4440 1EF8                           u4360 1C06                           u4280 19B4  
                         u5320 2E48                           u4601 4CFC                           u3481 3306  
                         u3721 48BA                           u3641 2B1A                           u3561 288A  
                         u2921 256A                           u2841 249A                           u2761 2358  
                         u5161 189C                           u5081 16F0                           u4521 2180  
                         u4441 1EF4                           u4361 1C02                           u4281 19B0  
                         u5321 2E44                           u4610 4D18                           u3490 333A  
                         u3730 4580                           u3650 2B32                           u3570 28C4  
                         u2930 257C                           u2850 24B6                           u2770 236C  
                         u5170 18DA                           u5090 1732                           u3810 44C4  
                         u4530 2256                           u4450 1F40                           u4370 1C92  
                         u4290 19F2                           u5330 2E74                           u4611 4D14  
                         u3491 3336                           u3731 457C                           u3651 2B2E  
                         u3571 28C0                           u2931 2578                           u2851 24B0  
                         u2771 2368                           u5171 18D6                           u5091 172E  
                         u3811 44C0                           u4531 2252                           u4451 1F3C  
                         u4371 1C8E                           u4291 19EE                           u5331 2E70  
                         u3740 45BE                           u3660 2B4C                           u3580 28D4  
                         u2940 259A                           u2860 24B8                           u2780 23AE  
                         u5180 191C                           u4620 4944                           u3900 4C8E  
                         u3820 44D8                           u4540 2272                           u4460 1F50  
                         u4380 1CC8                           u4700 3742                           u5340 2EA0  
                         u3741 45BA                           u3661 2B48                           u3581 28D0  
                         u2941 2596                           u2781 23AA                           u5181 1918  
                         u4621 4940                           u3901 4C8A                           u3821 44D4  
                         u3805 448C                           u4541 226E                           u4461 1F4C  
                         u4381 1CC4                           u4701 373E                           u5341 2E9C  
                         u3750 45DC                           u3670 2B94                           u3590 2A4E  
                         u2950 25D2                           u2870 24E0                           u2790 23C4  
                         u4630 495C                           u5190 56CA                           u3910 55C2  
                         u3830 4500                           u4550 22DA                           u4470 1FEA  
                         u4390 1CE0                           u4710 3858                           u5350 2ECC  
                         u3751 45D8                           u3671 2B90                           u2951 25CE  
                         u2871 24DC                           u2791 23C0                           u4631 4958  
                         u5191 56C6                           u3911 55BE                           u3831 44FC  
                         u4551 22D4                           u4471 1FE6                           u4391 1CDC  
                         u4711 3854                           u5351 2EC8                           u5407 2D36  
                         u4640 4A70                           u3760 45FC                           u3680 2BC2  
                         u2960 2618                           u2880 24FE                           u4800 3F7A  
                         u4720 5794                           u3840 4520                           u3920 4696  
                         u4560 22DC                           u4480 2038                           u5360 2EF8  
                         u5280 2CB0                           u4641 4A6C                           u3761 45F8  
                         u3681 2BBE                           u2961 2614                           u2881 24FA  
                         u4801 3F76                           u4721 5790                           u3841 451C  
                         u4481 2034                           u5361 2EF4                           u5417 2DA0  
                         u5281 2CAC                           u4650 4A88                           u3770 464C  
                         u3690 2BFC                           u2970 264E                           u2890 251E  
                         u4810 3F8A                           u4730 49DA                           u3850 4530  
                         u3930 46B4                           u4570 22F0                           u4490 20E6  
                         u5370 2F24                           u5290 2D02                           u4651 4A84  
                         u3771 4648                           u3691 2BF8                           u3595 2A44  
                         u2971 264A                           u2891 251A                           u4811 3F86  
                         u4731 49D6                           u5507 4F8A                           u5427 5136  
                         u3851 452C                           u3931 46B0                           u4571 22EC  
                         u4491 20E2                           u5371 2F20                           u5291 2CFE  
                         u3860 4D34                           u4660 4B06                           u2980 265E  
                         u4820 3F98                           u4900 10BC                           u4740 49F2  
                         u4580 5590                           u3780 567A                           u3940 46DC  
                         u5380 2F50                           u3861 4D30                           u4661 4B02  
                         u2981 265A                           u4821 3F94                           u4901 10B8  
                         u4741 49EE                           u5517 4FB6                           u5437 4BC6  
                         u4581 5588                           u3781 5676                           u3941 46D8  
                         u3925 468C                           u5381 2F4C                           u3870 4D52  
                         u4670 4B1E                           u2990 268A                           u4830 3FD2  
                         u4750 3E52                           u4910 10DC                           u3790 4462  
                         u3950 4706                           u5390 2F7C                           u3871 4D4E  
                         u4671 4B1A                           u2991 2686                           u4831 3FCE  
                         u4751 3E4E                           u4911 10D8                           u5527 49B8  
                         u5447 4C06                           u3791 445E                           u3951 4702  
                         u5391 2F78                           u3880 4D6E                           u4840 3FE0  
                         u4760 3E60                           u4920 118C                           u4680 36D2  
                         u3881 4D6A                           u5537 4FE4                           u4841 3FDC  
                         u4761 3E5C                           u4921 1188                           u5457 4ED6  
                         u4681 36CE                           u4770 3EBC                           u4930 11D6  
                         u3890 4C38                           u3970 4740                           u4690 3722  
                         u4850 50C4                           u5547 5010                           u4771 3EB8  
                         u4931 11D2                           u5467 4F02                           u3891 4C34  
                         u3971 473A                           u4691 371E                           u4851 50C0  
                         u4780 3F12                           u4940 13B4                           u3980 4742  
                         u5557 4A4E                           u4781 3F0E                           u4941 13B0  
                         u4861 0E8A                           u5477 4F30                           u3965 4718  
                         u4790 3F5C                           u4950 13E6                           u4870 0F84  
                         u4598 5592                           u3990 5520                           u5567 503E  
                         u4791 3F58                           u4951 13E2                           u4871 0F80  
                         u5487 4F5C                           u3991 551C                           u4960 1424  
                         u4880 1012                           u5577 506A                           u4961 1420  
                         u4881 100E                           u5497 4922                           u4970 1456  
                         u4890 1066                           u5587 4CDE                           u4971 1452  
                         u4891 1062                           u4980 1494                           u5597 4AE4  
                         u4981 1490                           u4990 14C6                           u4991 14C2  
                _LightBlueMove 526A                           abs@a 0013                           _dbuf 010C  
                         _labs 4D8E                           _main 2C1A                           _dtoa 39B0  
                         _prec 00F1                           _vals 017A                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4CA4  
                ___fpclassifyf 4656                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 0043         __end_of_color_read_Red 53AC  
              __end_of_HighISR 000E         __end_of_color_read_lum 535C                   ___param_bank 000000  
              __end_of_RedMove 5626                          ??_abs 0015                          ??_pad 0017  
                 ?_readColours 000C                    _turnRight45 4FC6                  ___fltol@sign1 0009  
              __end_of___aodiv 417C                          ?_labs 0001                __end_of___fladd 27F0  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 444C  
              __end_of___fldiv 337C                __end_of___flneg 569C                __end_of___flmul 2C1A  
              __end_of___flsub 54DE                __end_of___fltol 4552                    colour_rel@B 0074  
                  colour_rel@G 0070                          ?_stop 0014                    colour_rel@L 0060  
                  colour_rel@R 006C                __end_of___lwdiv 4D8E                          i2l271 000A  
                 vfpfcnvrt@fmt 0097        __end_of_sendCharSerial4 579A     __end_of_I2C_2_Master_Start 57C4  
   __end_of_I2C_2_Master_Write 57A6                   YellowMove@mL 001F                          _flags 00F5  
                 YellowMove@mR 0021                          _fputc 4754                          _fputs 5522  
                        labs@a 0001                          pad@fp 0011                          _width 00EF  
                        _putch 57C8                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 001F                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 5122                 ?___fpclassifyf 0001        __end_of_color_read_Blue 544C  
        _I2C_2_Master_RepStart 57A6               __end_of_BlueMove 4E5A                     PinkMove@mL 001F  
                   PinkMove@mR 0021                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 544C                _reverseOneBlock 4EB8                   __end_of_labs 4DF4  
                 __end_of_main 2FE2                   __end_of_dtoa 3C2E                   __end_of_stop 4D1A  
              _colour_rel$2732 0064                _colour_rel$2733 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026               __end_of_PinkMove 5218  
                       ??_stop 0018                  __activetblptr 000003              Colour_decider@Hue 007C  
            Colour_decider@rel 004D                   ?_setMotorPWM 000E                         ?_fputc 0001  
                       ?_fputs 000A                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         _RG6PPS 000E88                      ??_HighISR 0001  
     __end_of_color_click_init 5174                         _RX4PPS 000E15                         _TX4REG 000EE4  
                   _OrangeMove 5218               __end_of___xxtofl 3FF4                      ??_RedMove 0023  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                         ___flge 4552  
                       ___fleq 481E                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 571E                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 1936                      ??___lwdiv 000B  
                       _floorf 3C2E                         _memcpy 52BC                         clear_0 5470  
                       clear_1 547C                         clear_2 5488                         _motorL 0171  
                       _motorR 0168                         isa$std 000001                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 54DE                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001             Forwardhalfblock@mL 0019  
           Forwardhalfblock@mR 001B                         putch@c 0001                ??_LightBlueMove 0023  
             __end_of_vfprintf 50D0                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 495E  
                   ___flge@ff1 002A                     _YellowMove 5174                     ___flge@ff2 002E  
              ??___fpclassifyf 0005                   ___xxtofl@arg 000B                   ___xxtofl@exp 000A  
                 ___xxtofl@val 0001                     ___fleq@ff1 0032                     ___fleq@ff2 0036  
              fullSpeedBack@mL 0014                fullSpeedBack@mR 0016                     __accesstop 0060  
      __end_of__initialization 548E        __end_of_reverseOneBlock 4F12                     ___flneg@f1 0001  
     __end_of_color_read_Green 53FC         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 57CA  
               __pcstackCOMRAM 0001                  _fullSpeedBack 4A8A                   __pidataBANK0 57C4  
                __end_of_fputc 481E                  __end_of_fputs 5566                  __end_of_putch 57CA  
            __end_of_GreenMove 5664                      ?_BlueMove 001F                        ??_fputc 0005  
                      ??_fputs 000E           Colour_decider@F14336 0100          __end_of_reverseDetect 507A  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                reverseDetect@mL 0019                reverseDetect@mR 001B  
                  ?_OrangeMove 001F               _Forwardhalfblock 4F6C              __end_of_RetryMove 4C2A  
                    ?_PinkMove 001F              _color_writetoaddr 5744                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 0019  
                      ?_memcpy 0001            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                     ??_BlueMove 0023                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 001F                     _colour_rel 337C  
      __end_of_Interrupts_init 57CC         color_writetoaddr@value 0003               ??_color_read_Red 0007  
             main@consecuitive 01E6                        _HighISR 0008               ??_color_read_lum 0007  
             ?_reverseOneBlock 0019      __end_of_color_writetoaddr 5764                        _RedMove 55E8  
           _I2C_2_Master_Start 57BA                     ??_PinkMove 0023                     _initUSART4 5764  
           _I2C_2_Master_Write 579A                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000A                    RetryMove@mL 0019                    RetryMove@mR 001B  
      sendStringSerial4@string 0002              reverseOneBlock@mL 0019              reverseOneBlock@mR 001B  
                      ___aodiv 3FF4                        ___fladd 2330                        ___aomod 42E8  
                      ___fldiv 2FE2                        ___flneg 5664                        ___flmul 27F0  
                      ___flsub 5498                        ___fltol 444C            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 4D1A            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 0019                   turnLeft45@mR 001B  
                      __pcinit 544C                        __ramtop 0E00                      ?_turnLeft 0014  
                      __ptext0 2C1A                        __ptext1 50D0                        __ptext2 507A  
                      __ptext3 36AA                        __ptext4 1936                        __ptext5 54DE  
                      __ptext6 52BC                        __ptext7 4D8E                        __ptext8 3C2E  
                      __ptext9 4656                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F9              color_read_lum@tmp 000A                        main@buf 0182  
                      _sprintf 50D0           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 548E                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                LightBlueMove@mL 001F  
              LightBlueMove@mR 0021                ??_fullSpeedBack 0018             ??_color_click_init 0005  
            __end_of_vfpfcnvrt 39B0                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 4B20  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 4A8A                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                    _CCP1CONbits 000FAB                     main@colour 01E8  
                 _EUSART4RXbuf 00D3                   _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7  
            ?_color_read_Green 0005                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001                      RedMove@mL 001F  
                    RedMove@mR 0021             ??_color_read_Green 0007                     _turnLeft45 4F12  
               __end_of___flge 4656                 __end_of___fleq 48C8                 _fullSpeedAhead 495E  
                  vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095  
               __end_of___wmul 5744                 __end_of_efgtoa 2330                 __end_of_floorf 3E40  
               __end_of_memcpy 530C                     floorf@F526 00E7       __end_of_Forwardhalfblock 4FC6  
                    _GreenMove 5626                 __end_of_strcpy 5522            start_initialization 544C  
                  __end_of_abs 55E8                    __end_of_pad 4CA4                  _TxBufWriteCnt 00F7  
        __end_of_LightBlueMove 52BC                   ??_OrangeMove 0023          __end_of___fpclassifyf 4754  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 4BA8                    vfprintf@fmt 00AA  
       __end_of_fullSpeedAhead 49F4                       ??___flge 0032                       ??___fleq 003A  
                    _RetryMove 4BA8                       ??___wmul 0005                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00FA                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                      ___fldiv@a 0036                      ___fldiv@b 0032  
                   ?_GreenMove 001F                   OrangeMove@mL 001F                   OrangeMove@mR 0021  
           __end_of_OrangeMove 526A                      ___flmul@a 0015                      ___flmul@b 0011  
                    ___flsub@a 002E                      ___flsub@b 002A                  __pcstackBANK0 0060  
                __pcstackBANK1 0182               ___aodiv@dividend 0001                   ??_YellowMove 0023  
                     ?_HighISR 0001          Colour_decider@RGB_col 0066                       ?_RedMove 001F  
                  _efgtoa$2367 006F               ___lwdiv@dividend 0007                      _dtoa$2336 002E  
                  ?_turnLeft45 0019                ?_fullSpeedAhead 0014                      __pintcode 0008  
                   ?_RetryMove 0019                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$2734 0060                       ?___lwdiv 0007  
         I2C_2_Master_Read@ack 0003             __end_of_YellowMove 51C6           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00            __end_of_readColours 4EB8              _I2C_2_Master_Idle 56F6  
            _I2C_2_Master_Init 56CC              _I2C_2_Master_Read 5566              _I2C_2_Master_Stop 57B0  
                _low_threshold 00F3                   _RxBufReadCnt 00F8             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010  
           ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001  
                     ?_sprintf 00B0                 colour_rel@vals 004B              _sendStringSerial4 569C  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
           ?_sendStringSerial4 0002                       _PIE4bits 000E2D                    turnRight@mL 0014  
                  turnRight@mR 0016                       _PIR4bits 000E37               ?_initDCmotorsPWM 0001  
            ??_sendCharSerial4 0001                       _SSP2CON2 000EDA                 _Colour_decider 0E5A  
          ??_sendStringSerial4 0004                       _SSP2STAT 000ED8                      _vfpfcnvrt 36AA  
    __end_of_I2C_2_Master_Idle 571E      __end_of_I2C_2_Master_Init 56F6      __end_of_I2C_2_Master_Read 55A8  
            ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 57BA                   setMotorPWM@m 000E  
                     _DataFlag 00FC    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0023  
            ??_color_read_Blue 0007                   _TxBufReadCnt 00F6                       _BlueMove 4DF4  
                    _turnRight 49F4                     vfpfcnvrt@c 00A5      __end_of_sendStringSerial4 56CC  
                 ??_colour_rel 004F                  _reverseDetect 5020  __end_of_I2C_2_Master_RepStart 57B0  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 42E8                   ??_initUSART4 0001  
                     _PinkMove 51C6                       __Hrparam 0000         __end_of_Colour_decider 1936  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 4B20                    ??_RetryMove 001D  
                  _readColours 4E5A                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 36AA                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EB                     _ANSELFbits 000EB4                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 0019                       ___xxtofl 3E40                ___lwdiv@divisor 0009  
           __end_of_initUSART4 5782                ___lwdiv@counter 000D             ??_Forwardhalfblock 001D  
                   ?_turnRight 0014                       __ptext10 444C                       __ptext11 5664  
                     __ptext20 569C                       __ptext12 39B0                       __ptext21 5782  
                     __ptext13 4C2A                       __ptext30 4B20                       __ptext22 4E5A  
                     __ptext14 5522                       __ptext31 337C                       __ptext23 530C  
                     __ptext15 4754                       __ptext40 4BA8                       __ptext32 5122  
                     __ptext24 535C                       __ptext16 57C8                       __ptext41 55E8  
                     __ptext33 5744                       __ptext25 53AC                       __ptext17 55A8  
                     __ptext50 4F6C                       __ptext42 51C6                       __ptext34 579A  
                     __ptext26 53FC                       __ptext18 42E8                       __ptext51 495E  
                     __ptext43 4EB8                       __ptext35 57B0                       __ptext27 57A6  
                     __ptext19 3FF4                       __ptext60 4DF4                       __ptext52 0E5A  
                     __ptext44 5218                       __ptext36 57BA                       __ptext28 5566  
                     __ptext61 4FC6                       __ptext53 3E40                       __ptext45 526A  
                     __ptext37 56F6                       __ptext29 5764                       __ptext62 49F4  
                     __ptext54 5498                       __ptext46 57CA                       __ptext38 56CC  
                     __ptext63 5020                       __ptext55 2330                       __ptext47 5626  
                     __ptext39 5174                       __ptext64 4CA4                       __ptext56 27F0  
                     __ptext48 4F12                       __ptext65 4A8A                       __ptext57 4552  
                     __ptext49 48C8                       __ptext66 417C                       __ptext58 481E  
                     __ptext67 571E                       __ptext59 2FE2                       __ptext68 4D1A  
               ?_reverseDetect 0019                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 507A  
                ??_turnRight45 001D                       _turnLeft 48C8               ___aomod@dividend 0001  
            ??_reverseOneBlock 001D                main@prev_colour 01EA                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 417C                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 00C4  
               _high_threshold 00FA               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001D                     BlueMove@mL 001F                     BlueMove@mR 0021  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5122                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 5020                ??_reverseDetect 001D                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 4F6C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 5782                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
