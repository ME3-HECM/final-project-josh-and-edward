

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 10:11:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 06/04/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataBANK0
   107   003F26                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _DataFlag
   111   003F26  01                 	db	1
   112   000000                     _TX4REG	set	3812
   113   000000                     _RC4STAbits	set	3815
   114   000000                     _SP4BRGH	set	3814
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _RC4REG	set	3811
   123   000000                     _SP4BRGL	set	3813
   124   000000                     _TX4STAbits	set	3816
   125   000000                     _BAUD4CONbits	set	3817
   126   000000                     _SSP2CON2	set	3802
   127   000000                     _TRISDbits	set	3972
   128   000000                     _SSP2STAT	set	3800
   129   000000                     _TRISFbits	set	3974
   130   000000                     _TRISGbits	set	3975
   131   000000                     _INTCONbits	set	4082
   132   000000                     _SSP2BUF	set	3797
   133   000000                     _PIE2bits	set	3627
   134   000000                     _PIE4bits	set	3629
   135   000000                     _PIR4bits	set	3639
   136   000000                     _RC0PPS	set	3682
   137   000000                     _RD5PPS	set	3695
   138   000000                     _RD6PPS	set	3696
   139   000000                     _LATAbits	set	3961
   140   000000                     _LATGbits	set	3967
   141   000000                     _TRISAbits	set	3969
   142   000000                     _LATFbits	set	3966
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149   000E01  72                 	db	114	;'r'
   150   000E02  65                 	db	101	;'e'
   151   000E03  64                 	db	100	;'d'
   152   000E04  3D                 	db	61	;'='
   153   000E05  25                 	db	37
   154   000E06  66                 	db	102	;'f'
   155   000E07  20                 	db	32
   156   000E08  67                 	db	103	;'g'
   157   000E09  72                 	db	114	;'r'
   158   000E0A  65                 	db	101	;'e'
   159   000E0B  65                 	db	101	;'e'
   160   000E0C  6E                 	db	110	;'n'
   161   000E0D  3D                 	db	61	;'='
   162   000E0E  25                 	db	37
   163   000E0F  66                 	db	102	;'f'
   164   000E10  20                 	db	32
   165   000E11  62                 	db	98	;'b'
   166   000E12  6C                 	db	108	;'l'
   167   000E13  75                 	db	117	;'u'
   168   000E14  65                 	db	101	;'e'
   169   000E15  3D                 	db	61	;'='
   170   000E16  25                 	db	37
   171   000E17  66                 	db	102	;'f'
   172   000E18  20                 	db	32
   173   000E19  6C                 	db	108	;'l'
   174   000E1A  75                 	db	117	;'u'
   175   000E1B  6D                 	db	109	;'m'
   176   000E1C  3D                 	db	61	;'='
   177   000E1D  25                 	db	37
   178   000E1E  64                 	db	100	;'d'
   179   000E1F  0D                 	db	13
   180   000E20  0A                 	db	10
   181   000E21  00                 	db	0
   182   000E22                     STR_2:
   183   000E22  69                 	db	105	;'i'
   184   000E23  6E                 	db	110	;'n'
   185   000E24  66                 	db	102	;'f'
   186   000E25  00                 	db	0
   187   000E26                     STR_5:
   188   000E26  6E                 	db	110	;'n'
   189   000E27  61                 	db	97	;'a'
   190   000E28  6E                 	db	110	;'n'
   191   000E29  00                 	db	0
   192   000E2A  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   003CC0                     __pcinit:
   198                           	callstack 0
   199   003CC0                     start_initialization:
   200                           	callstack 0
   201   003CC0                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK0 (1 bytes)
   205                           ; load TBLPTR registers with __pidataBANK0
   206   003CC0  0E26               	movlw	low __pidataBANK0
   207   003CC2  6EF6               	movwf	tblptrl,c
   208   003CC4  0E3F               	movlw	high __pidataBANK0
   209   003CC6  6EF7               	movwf	tblptrh,c
   210   003CC8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   211   003CCA  6EF8               	movwf	tblptru,c
   212   003CCC  0009               	tblrd		*+	;fetch initializer
   213   003CCE  CFF5 F0FB          	movff	tablat,__pdataBANK0
   214                           
   215                           ; Clear objects allocated to BANK1 (176 bytes)
   216   003CD2  EE01  F000         	lfsr	0,__pbssBANK1
   217   003CD6  0EB0               	movlw	176
   218   003CD8                     clear_0:
   219   003CD8  6AEE               	clrf	postinc0,c
   220   003CDA  06E8               	decf	wreg,f,c
   221   003CDC  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (20 bytes)
   224   003CDE  EE00  F0E7         	lfsr	0,__pbssBANK0
   225   003CE2  0E14               	movlw	20
   226   003CE4                     clear_1:
   227   003CE4  6AEE               	clrf	postinc0,c
   228   003CE6  06E8               	decf	wreg,f,c
   229   003CE8  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to COMRAM (5 bytes)
   232   003CEA  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   233   003CEC  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   234   003CEE  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   235   003CF0  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   236   003CF2  6A56               	clrf	__pbssCOMRAM& (0+255),c
   237   003CF4                     end_of_initialization:
   238                           	callstack 0
   239   003CF4                     __end_of__initialization:
   240                           	callstack 0
   241   003CF4  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   003CF6  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   003CF8  0100               	movlb	0
   244   003CFA  EF35  F019         	goto	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMRAM
   247   000056                     __pbssCOMRAM:
   248                           	callstack 0
   249   000056                     _flags:
   250                           	callstack 0
   251   000056                     	ds	1
   252   000057                     _TxBufReadCnt:
   253                           	callstack 0
   254   000057                     	ds	1
   255   000058                     _TxBufWriteCnt:
   256                           	callstack 0
   257   000058                     	ds	1
   258   000059                     _RxBufReadCnt:
   259                           	callstack 0
   260   000059                     	ds	1
   261   00005A                     _RxBufWriteCnt:
   262                           	callstack 0
   263   00005A                     	ds	1
   264                           
   265                           	psect	bssBANK0
   266   0000E7                     __pbssBANK0:
   267                           	callstack 0
   268   0000E7                     floorf@F526:
   269                           	callstack 0
   270   0000E7                     	ds	4
   271   0000EB                     ___fpclassifyf@F465:
   272                           	callstack 0
   273   0000EB                     	ds	4
   274   0000EF                     _width:
   275                           	callstack 0
   276   0000EF                     	ds	2
   277   0000F1                     _prec:
   278                           	callstack 0
   279   0000F1                     	ds	2
   280   0000F3                     _vals:
   281                           	callstack 0
   282   0000F3                     	ds	8
   283                           
   284                           	psect	dataBANK0
   285   0000FB                     __pdataBANK0:
   286                           	callstack 0
   287   0000FB                     _DataFlag:
   288                           	callstack 0
   289   0000FB                     	ds	1
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _EUSART4RXbuf:
   298                           	callstack 0
   299   00013C                     	ds	20
   300   000150                     _dbuf:
   301                           	callstack 0
   302   000150                     	ds	80
   303   0001A0                     _rel:
   304                           	callstack 0
   305   0001A0                     	ds	16
   306                           
   307                           	psect	cstackBANK0
   308   000060                     __pcstackBANK0:
   309                           	callstack 0
   310   000060                     efgtoa@ne:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x0
   314   000060                     	ds	2
   315   000062                     efgtoa@p:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2
   319   000062                     	ds	2
   320   000064                     efgtoa@t:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324   000064                     	ds	2
   325   000066                     _efgtoa$1481:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329   000066                     	ds	2
   330   000068                     efgtoa@pp:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x8
   334   000068                     	ds	1
   335   000069                     efgtoa@mode:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x9
   339   000069                     	ds	1
   340   00006A                     efgtoa@nmode:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xA
   344   00006A                     	ds	1
   345   00006B                     efgtoa@d:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xB
   349   00006B                     	ds	2
   350   00006D                     efgtoa@m:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xD
   354   00006D                     	ds	2
   355   00006F                     efgtoa@e:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xF
   359   00006F                     	ds	2
   360   000071                     efgtoa@w:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x11
   364   000071                     	ds	2
   365   000073                     efgtoa@ou:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x13
   369   000073                     	ds	4
   370   000077                     efgtoa@i:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x17
   374   000077                     	ds	2
   375   000079                     efgtoa@h:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x19
   379   000079                     	ds	4
   380   00007D                     efgtoa@l:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x1D
   384   00007D                     	ds	4
   385   000081                     efgtoa@sign:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x21
   389   000081                     	ds	1
   390   000082                     efgtoa@g:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x22
   394   000082                     	ds	4
   395   000086                     efgtoa@n:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x26
   399   000086                     	ds	2
   400   000088                     efgtoa@u:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x28
   404   000088                     	ds	4
   405   00008C                     ?_vfprintf:
   406                           	callstack 0
   407   00008C                     vfprintf@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x2C
   411   00008C                     	ds	2
   412   00008E                     vfprintf@fmt:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x2E
   416   00008E                     	ds	2
   417   000090                     vfprintf@ap:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x30
   421   000090                     	ds	2
   422   000092                     vfprintf@cfmt:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x32
   426   000092                     	ds	2
   427   000094                     ?_sprintf:
   428                           	callstack 0
   429   000094                     sprintf@s:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x34
   433   000094                     	ds	2
   434   000096                     sprintf@fmt:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x36
   438   000096                     	ds	16
   439   0000A6                     sprintf@ap:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x46
   443   0000A6                     	ds	2
   444   0000A8                     sprintf@f:
   445                           	callstack 0
   446                           
   447                           ; 11 bytes @ 0x48
   448   0000A8                     	ds	11
   449   0000B3                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x53
   452   0000B3                     	ds	2
   453   0000B5                     main@buf:
   454                           	callstack 0
   455                           
   456                           ; 50 bytes @ 0x55
   457   0000B5                     	ds	50
   458                           
   459                           	psect	cstackCOMRAM
   460   000001                     __pcstackCOMRAM:
   461                           	callstack 0
   462   000001                     ??_getCharFromTxBuf:
   463   000001                     putCharToRxBuf@byte:
   464                           	callstack 0
   465   000001                     
   466                           ; 1 bytes @ 0x0
   467   000001                     	ds	2
   468   000003                     ??_HighISR:
   469                           
   470                           ; 1 bytes @ 0x2
   471   000003                     	ds	2
   472   000005                     ??_I2C_2_Master_Idle:
   473   000005                     ?___fpclassifyf:
   474                           	callstack 0
   475   000005                     ?___fladd:
   476                           	callstack 0
   477   000005                     ?___fldiv:
   478                           	callstack 0
   479   000005                     ?___flmul:
   480                           	callstack 0
   481   000005                     ?_labs:
   482                           	callstack 0
   483   000005                     ?___flneg:
   484                           	callstack 0
   485   000005                     ?___fltol:
   486                           	callstack 0
   487   000005                     ?___xxtofl:
   488                           	callstack 0
   489   000005                     ?___aodiv:
   490                           	callstack 0
   491   000005                     ?___aomod:
   492                           	callstack 0
   493   000005                     putCharToTxBuf@byte:
   494                           	callstack 0
   495   000005                     memcpy@d1:
   496                           	callstack 0
   497   000005                     fputc@c:
   498                           	callstack 0
   499   000005                     strcpy@dest:
   500                           	callstack 0
   501   000005                     ___fleq@ff1:
   502                           	callstack 0
   503   000005                     ___flneg@f1:
   504                           	callstack 0
   505   000005                     ___fltol@f1:
   506                           	callstack 0
   507   000005                     ___fladd@b:
   508                           	callstack 0
   509   000005                     ___fldiv@b:
   510                           	callstack 0
   511   000005                     ___flmul@b:
   512                           	callstack 0
   513   000005                     ___xxtofl@val:
   514                           	callstack 0
   515   000005                     ___fpclassifyf@x:
   516                           	callstack 0
   517   000005                     labs@a:
   518                           	callstack 0
   519   000005                     ___aodiv@dividend:
   520                           	callstack 0
   521   000005                     ___aomod@dividend:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x4
   525   000005                     	ds	1
   526   000006                     ??_I2C_2_Master_Read:
   527   000006                     I2C_2_Master_Write@data_byte:
   528                           	callstack 0
   529   000006                     TxBufferedString@string:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x5
   533   000006                     	ds	1
   534   000007                     color_writetoaddr@value:
   535                           	callstack 0
   536   000007                     I2C_2_Master_Read@ack:
   537                           	callstack 0
   538   000007                     memcpy@s1:
   539                           	callstack 0
   540   000007                     fputc@fp:
   541                           	callstack 0
   542   000007                     strcpy@src:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546   000007                     	ds	1
   547   000008                     color_writetoaddr@address:
   548                           	callstack 0
   549   000008                     I2C_2_Master_Read@tmp:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x7
   553   000008                     	ds	1
   554   000009                     ??_fputc:
   555   000009                     ??___fpclassifyf:
   556   000009                     ??_labs:
   557   000009                     ??_color_click_init:
   558   000009                     ??___fltol:
   559   000009                     ??___xxtofl:
   560   000009                     ?_color_read_lum:
   561                           	callstack 0
   562   000009                     ?_color_read_Red:
   563                           	callstack 0
   564   000009                     ?_color_read_Green:
   565                           	callstack 0
   566   000009                     ?_color_read_Blue:
   567                           	callstack 0
   568   000009                     memcpy@n:
   569                           	callstack 0
   570   000009                     strcpy@s:
   571                           	callstack 0
   572   000009                     ___fleq@ff2:
   573                           	callstack 0
   574   000009                     ___fladd@a:
   575                           	callstack 0
   576   000009                     ___fldiv@a:
   577                           	callstack 0
   578   000009                     ___flmul@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x8
   582   000009                     	ds	2
   583   00000B                     ??_color_read_lum:
   584   00000B                     ??_color_read_Red:
   585   00000B                     ??_color_read_Green:
   586   00000B                     ??_color_read_Blue:
   587   00000B                     memcpy@tmp:
   588                           	callstack 0
   589   00000B                     strcpy@d:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0xA
   593   00000B                     	ds	1
   594   00000C                     memcpy@d:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xB
   598   00000C                     	ds	1
   599   00000D                     ??___fladd:
   600   00000D                     ??___fldiv:
   601   00000D                     ??___flmul:
   602   00000D                     ??___fleq:
   603   00000D                     ___fltol@sign1:
   604                           	callstack 0
   605   00000D                     ___xxtofl@sign:
   606                           	callstack 0
   607   00000D                     ___fpclassifyf@e:
   608                           	callstack 0
   609   00000D                     ___aodiv@divisor:
   610                           	callstack 0
   611   00000D                     ___aomod@divisor:
   612                           	callstack 0
   613                           
   614                           ; 8 bytes @ 0xC
   615   00000D                     	ds	1
   616   00000E                     ___fltol@exp1:
   617                           	callstack 0
   618   00000E                     ___xxtofl@exp:
   619                           	callstack 0
   620   00000E                     color_read_lum@tmp:
   621                           	callstack 0
   622   00000E                     color_read_Red@tmp:
   623                           	callstack 0
   624   00000E                     color_read_Green@tmp:
   625                           	callstack 0
   626   00000E                     color_read_Blue@tmp:
   627                           	callstack 0
   628   00000E                     memcpy@s:
   629                           	callstack 0
   630   00000E                     fputs@s:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xD
   634   00000E                     	ds	1
   635   00000F                     ___xxtofl@arg:
   636                           	callstack 0
   637   00000F                     ___fpclassifyf@u:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0xE
   641   00000F                     	ds	1
   642   000010                     readColours@vals:
   643                           	callstack 0
   644   000010                     fputs@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xF
   648   000010                     	ds	1
   649   000011                     ___fladd@signs:
   650                           	callstack 0
   651   000011                     ___flmul@sign:
   652                           	callstack 0
   653   000011                     ___fldiv@rem:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x10
   657   000011                     	ds	1
   658   000012                     ___fladd@aexp:
   659                           	callstack 0
   660   000012                     ___flmul@aexp:
   661                           	callstack 0
   662   000012                     fputs@c:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x11
   666   000012                     	ds	1
   667   000013                     ___fladd@bexp:
   668                           	callstack 0
   669   000013                     fputs@i:
   670                           	callstack 0
   671   000013                     ___flmul@grs:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x12
   675   000013                     	ds	1
   676   000014                     ___fladd@grs:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x13
   680   000014                     	ds	1
   681   000015                     ___aodiv@counter:
   682                           	callstack 0
   683   000015                     ___aomod@counter:
   684                           	callstack 0
   685   000015                     ___fldiv@sign:
   686                           	callstack 0
   687   000015                     pad@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691   000015                     	ds	1
   692   000016                     ___aodiv@sign:
   693                           	callstack 0
   694   000016                     ___aomod@sign:
   695                           	callstack 0
   696   000016                     ___fldiv@new_exp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x15
   700   000016                     	ds	1
   701   000017                     ?_abs:
   702                           	callstack 0
   703   000017                     ___flmul@bexp:
   704                           	callstack 0
   705   000017                     pad@buf:
   706                           	callstack 0
   707   000017                     abs@a:
   708                           	callstack 0
   709   000017                     ___aodiv@quotient:
   710                           	callstack 0
   711                           
   712                           ; 8 bytes @ 0x16
   713   000017                     	ds	1
   714   000018                     ___fldiv@grs:
   715                           	callstack 0
   716   000018                     ___flmul@prod:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x17
   720   000018                     	ds	1
   721   000019                     ??_abs:
   722   000019                     pad@p:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x18
   726   000019                     	ds	2
   727   00001B                     ??_pad:
   728                           
   729                           ; 1 bytes @ 0x1A
   730   00001B                     	ds	1
   731   00001C                     ___fldiv@bexp:
   732                           	callstack 0
   733   00001C                     ___flmul@temp:
   734                           	callstack 0
   735   00001C                     pad@i:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x1B
   739   00001C                     	ds	1
   740   00001D                     ___fldiv@aexp:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x1C
   744   00001D                     	ds	1
   745   00001E                     ?___flsub:
   746                           	callstack 0
   747   00001E                     ?_floorf:
   748                           	callstack 0
   749   00001E                     colour_rel@vals:
   750                           	callstack 0
   751   00001E                     pad@w:
   752                           	callstack 0
   753   00001E                     ___flge@ff1:
   754                           	callstack 0
   755   00001E                     ___flsub@b:
   756                           	callstack 0
   757   00001E                     floorf@x:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x1D
   761   00001E                     	ds	2
   762   000020                     colour_rel@rel:
   763                           	callstack 0
   764   000020                     dtoa@fp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x1F
   768   000020                     	ds	2
   769   000022                     ??_floorf:
   770   000022                     colour_rel@R:
   771                           	callstack 0
   772   000022                     ___flge@ff2:
   773                           	callstack 0
   774   000022                     ___flsub@a:
   775                           	callstack 0
   776   000022                     dtoa@d:
   777                           	callstack 0
   778                           
   779                           ; 8 bytes @ 0x21
   780   000022                     	ds	4
   781   000026                     ??___flge:
   782   000026                     colour_rel@G:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x25
   786   000026                     	ds	2
   787   000028                     floorf@m:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x27
   791   000028                     	ds	2
   792   00002A                     ??_dtoa:
   793   00002A                     colour_rel@B:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x29
   797   00002A                     	ds	2
   798   00002C                     floorf@e:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x2B
   802   00002C                     	ds	2
   803   00002E                     colour_rel@L:
   804                           	callstack 0
   805   00002E                     floorf@u:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x2D
   809   00002E                     	ds	4
   810   000032                     _dtoa$1450:
   811                           	callstack 0
   812   000032                     efgtoa@fp:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x31
   816   000032                     	ds	2
   817   000034                     dtoa@p:
   818                           	callstack 0
   819   000034                     efgtoa@f:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x33
   823   000034                     	ds	2
   824   000036                     dtoa@w:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x35
   828   000036                     	ds	2
   829   000038                     efgtoa@c:
   830                           	callstack 0
   831   000038                     dtoa@n:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x37
   835   000038                     	ds	1
   836   000039                     ??_efgtoa:
   837                           
   838                           ; 1 bytes @ 0x38
   839   000039                     	ds	7
   840   000040                     dtoa@s:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x3F
   844   000040                     	ds	1
   845   000041                     dtoa@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x40
   849   000041                     	ds	2
   850   000043                     vfpfcnvrt@fp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x42
   854   000043                     	ds	2
   855   000045                     vfpfcnvrt@fmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x44
   859   000045                     	ds	2
   860   000047                     vfpfcnvrt@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x46
   864   000047                     	ds	2
   865   000049                     ??_vfpfcnvrt:
   866                           
   867                           ; 1 bytes @ 0x48
   868   000049                     	ds	2
   869   00004B                     vfpfcnvrt@convarg:
   870                           	callstack 0
   871                           
   872                           ; 8 bytes @ 0x4A
   873   00004B                     	ds	8
   874   000053                     vfpfcnvrt@c:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x52
   878   000053                     	ds	1
   879   000054                     vfpfcnvrt@cp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x53
   883   000054                     	ds	2
   884   000056                     
   885                           ; 1 bytes @ 0x55
   886 ;;
   887 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   888 ;;
   889 ;; *************** function _main *****************
   890 ;; Defined at:
   891 ;;		line 28 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  buf            50   85[BANK0 ] unsigned char [50]
   896 ;;  ADC             2    0        unsigned int 
   897 ;;  frac_part       2    0        unsigned int 
   898 ;;  int_part        2    0        unsigned int 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;Total ram usage:       52 bytes
   913 ;; Hardware stack levels required when called: 10
   914 ;; This function calls:
   915 ;;		_I2C_2_Master_Init
   916 ;;		_Interrupts_init
   917 ;;		_TxBufferedString
   918 ;;		_color_click_init
   919 ;;		_color_writetoaddr
   920 ;;		_colour_rel
   921 ;;		_initUSART4
   922 ;;		_readColours
   923 ;;		_sendTxBuf
   924 ;;		_sprintf
   925 ;; This function is called by:
   926 ;;		Startup code after reset
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text0
   931   00326A                     __ptext0:
   932                           	callstack 0
   933   00326A                     _main:
   934                           	callstack 21
   935   00326A                     
   936                           ;main.c: 29:     initUSART4();
   937   00326A  EC5B  F01F         	call	_initUSART4	;wreg free
   938   00326E                     
   939                           ;main.c: 30:     Interrupts_init();
   940   00326E  EC76  F01F         	call	_Interrupts_init	;wreg free
   941   003272                     
   942                           ;main.c: 31:     color_click_init();
   943   003272  EC9B  F01E         	call	_color_click_init	;wreg free
   944   003276                     
   945                           ;main.c: 32:     I2C_2_Master_Init();
   946   003276  ECF8  F01E         	call	_I2C_2_Master_Init	;wreg free
   947   00327A                     
   948                           ;main.c: 33:     char buf[50];;main.c: 34:     unsigned int int_part;;main.c: 35:     un
      +                          signed int frac_part;;main.c: 36:     unsigned int ADC;;main.c: 45:     color_writetoadd
      +                          r(0x00, 0x01);
   949   00327A  0E01               	movlw	1
   950   00327C  6E07               	movwf	color_writetoaddr@value^0,c
   951   00327E  0E00               	movlw	0
   952   003280  EC4B  F01F         	call	_color_writetoaddr
   953   003284                     
   954                           ;main.c: 55:     TRISGbits.TRISG1=0;
   955   003284  9287               	bcf	135,1,c	;volatile
   956   003286                     
   957                           ;main.c: 56:     TRISAbits.TRISA4=0;
   958   003286  9881               	bcf	129,4,c	;volatile
   959   003288                     
   960                           ;main.c: 57:     TRISFbits.TRISF7=0;
   961   003288  9E86               	bcf	134,7,c	;volatile
   962   00328A                     
   963                           ;main.c: 60:     LATGbits.LATG1=0;
   964   00328A  927F               	bcf	127,1,c	;volatile
   965   00328C                     
   966                           ;main.c: 61:     LATAbits.LATA4=0;
   967   00328C  9879               	bcf	121,4,c	;volatile
   968   00328E                     
   969                           ;main.c: 63:     LATFbits.LATF7=0;
   970   00328E  9E7E               	bcf	126,7,c	;volatile
   971   003290                     
   972                           ;main.c: 65:     LATGbits.LATG1=1;
   973   003290  827F               	bsf	127,1,c	;volatile
   974   003292                     
   975                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   976   003292  0E52               	movlw	82
   977   003294  0100               	movlb	0	; () banked
   978   003296  6FB4               	movwf	(??_main+1)& (0+255),b
   979   003298  0E2B               	movlw	43
   980   00329A  6FB3               	movwf	??_main& (0+255),b
   981   00329C  0E00               	movlw	0
   982   00329E                     u6167:
   983   00329E  2EE8               	decfsz	wreg,f,c
   984   0032A0  D7FE               	bra	u6167
   985   0032A2  2FB3               	decfsz	??_main& (0+255),f,b
   986   0032A4  D7FC               	bra	u6167
   987   0032A6  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   988   0032A8  D7FA               	bra	u6167
   989   0032AA  F000               	nop	
   990   0032AC                     
   991                           ;main.c: 67:     LATAbits.LATA4=1;
   992   0032AC  8879               	bsf	121,4,c	;volatile
   993   0032AE                     
   994                           ;main.c: 68:     _delay((unsigned long)((1000)*(64000000/4000.0)));
   995   0032AE  0E52               	movlw	82
   996   0032B0  0100               	movlb	0	; () banked
   997   0032B2  6FB4               	movwf	(??_main+1)& (0+255),b
   998   0032B4  0E2B               	movlw	43
   999   0032B6  6FB3               	movwf	??_main& (0+255),b
  1000   0032B8  0E00               	movlw	0
  1001   0032BA                     u6177:
  1002   0032BA  2EE8               	decfsz	wreg,f,c
  1003   0032BC  D7FE               	bra	u6177
  1004   0032BE  2FB3               	decfsz	??_main& (0+255),f,b
  1005   0032C0  D7FC               	bra	u6177
  1006   0032C2  2FB4               	decfsz	(??_main+1)& (0+255),f,b
  1007   0032C4  D7FA               	bra	u6177
  1008   0032C6  F000               	nop	
  1009   0032C8                     
  1010                           ;main.c: 69:     LATFbits.LATF7=1;
  1011   0032C8  8E7E               	bsf	126,7,c	;volatile
  1012   0032CA                     
  1013                           ;main.c: 70:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1014   0032CA  0E52               	movlw	82
  1015   0032CC  0100               	movlb	0	; () banked
  1016   0032CE  6FB4               	movwf	(??_main+1)& (0+255),b
  1017   0032D0  0E2B               	movlw	43
  1018   0032D2  6FB3               	movwf	??_main& (0+255),b
  1019   0032D4  0E00               	movlw	0
  1020   0032D6                     u6187:
  1021   0032D6  2EE8               	decfsz	wreg,f,c
  1022   0032D8  D7FE               	bra	u6187
  1023   0032DA  2FB3               	decfsz	??_main& (0+255),f,b
  1024   0032DC  D7FC               	bra	u6187
  1025   0032DE  2FB4               	decfsz	(??_main+1)& (0+255),f,b
  1026   0032E0  D7FA               	bra	u6187
  1027   0032E2  F000               	nop	
  1028   0032E4                     l5390:
  1029                           
  1030                           ;main.c: 73:     {;main.c: 81:     readColours(&vals);
  1031   0032E4  0EF3               	movlw	low _vals
  1032   0032E6  6E10               	movwf	readColours@vals^0,c
  1033   0032E8  0E00               	movlw	high _vals
  1034   0032EA  6E11               	movwf	(readColours@vals+1)^0,c
  1035   0032EC  EC6E  F01C         	call	_readColours	;wreg free
  1036   0032F0                     
  1037                           ;main.c: 82:     colour_rel(&vals, &rel);
  1038   0032F0  0EF3               	movlw	low _vals
  1039   0032F2  6E1E               	movwf	colour_rel@vals^0,c
  1040   0032F4  0E00               	movlw	high _vals
  1041   0032F6  6E1F               	movwf	(colour_rel@vals+1)^0,c
  1042   0032F8  0EA0               	movlw	low _rel
  1043   0032FA  6E20               	movwf	colour_rel@rel^0,c
  1044   0032FC  0E01               	movlw	high _rel
  1045   0032FE  6E21               	movwf	(colour_rel@rel+1)^0,c
  1046   003300  ECFA  F016         	call	_colour_rel	;wreg free
  1047   003304                     
  1048                           ;main.c: 84:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
  1049   003304  0EB5               	movlw	low main@buf
  1050   003306  0100               	movlb	0	; () banked
  1051   003308  6F94               	movwf	sprintf@s& (0+255),b
  1052   00330A  0E00               	movlw	high main@buf
  1053   00330C  6F95               	movwf	(sprintf@s+1)& (0+255),b
  1054   00330E  0E01               	movlw	low STR_1
  1055   003310  6F96               	movwf	sprintf@fmt& (0+255),b
  1056   003312  0E0E               	movlw	high STR_1
  1057   003314  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
  1058   003316  C1A0  F098         	movff	_rel,?_sprintf+4
  1059   00331A  C1A1  F099         	movff	_rel+1,?_sprintf+5
  1060   00331E  C1A2  F09A         	movff	_rel+2,?_sprintf+6
  1061   003322  C1A3  F09B         	movff	_rel+3,?_sprintf+7
  1062   003326  C1A4  F09C         	movff	_rel+4,?_sprintf+8
  1063   00332A  C1A5  F09D         	movff	_rel+5,?_sprintf+9
  1064   00332E  C1A6  F09E         	movff	_rel+6,?_sprintf+10
  1065   003332  C1A7  F09F         	movff	_rel+7,?_sprintf+11
  1066   003336  C1A8  F0A0         	movff	_rel+8,?_sprintf+12
  1067   00333A  C1A9  F0A1         	movff	_rel+9,?_sprintf+13
  1068   00333E  C1AA  F0A2         	movff	_rel+10,?_sprintf+14
  1069   003342  C1AB  F0A3         	movff	_rel+11,?_sprintf+15
  1070   003346  C0F9  F0A4         	movff	_vals+6,?_sprintf+16
  1071   00334A  C0FA  F0A5         	movff	_vals+7,?_sprintf+17
  1072   00334E  ECC7  F01C         	call	_sprintf	;wreg free
  1073   003352                     
  1074                           ;main.c: 86:     TxBufferedString(buf);
  1075   003352  0EB5               	movlw	low main@buf
  1076   003354  6E06               	movwf	TxBufferedString@string^0,c
  1077   003356  0E00               	movlw	high main@buf
  1078   003358  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1079   00335A  ECB5  F01E         	call	_TxBufferedString	;wreg free
  1080                           
  1081                           ;main.c: 91:         while (DataFlag){
  1082   00335E  EFB3  F019         	goto	l5400
  1083   003362                     l5398:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;main.c: 92:             sendTxBuf();
  1087   003362  ECE3  F01E         	call	_sendTxBuf	;wreg free
  1088   003366                     l5400:
  1089                           
  1090                           ;main.c: 91:         while (DataFlag){
  1091   003366  0100               	movlb	0	; () banked
  1092   003368  51FB               	movf	_DataFlag& (0+255),w,b	;volatile
  1093   00336A  A4D8               	btfss	status,2,c
  1094   00336C  EFBA  F019         	goto	u6151
  1095   003370  EFBC  F019         	goto	u6150
  1096   003374                     u6151:
  1097   003374  EFB1  F019         	goto	l5398
  1098   003378                     u6150:
  1099   003378  EF72  F019         	goto	l5390
  1100   00337C  EF25  F000         	goto	start
  1101   003380                     __end_of_main:
  1102                           	callstack 0
  1103                           
  1104 ;; *************** function _sprintf *****************
  1105 ;; Defined at:
  1106 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  s               2   52[BANK0 ] PTR unsigned char 
  1109 ;;		 -> main@buf(50), 
  1110 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  1111 ;;		 -> STR_1(33), 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  f              11   72[BANK0 ] struct _IO_FILE
  1114 ;;  ap              2   70[BANK0 ] PTR void [1]
  1115 ;;		 -> ?_sprintf(2), 
  1116 ;;  ret             2    0        int 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2   52[BANK0 ] int 
  1119 ;; Registers used:
  1120 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1126 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1127 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1129 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1130 ;;Total ram usage:       31 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 9
  1133 ;; This function calls:
  1134 ;;		_vfprintf
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text1
  1141   00398E                     __ptext1:
  1142                           	callstack 0
  1143   00398E                     _sprintf:
  1144                           	callstack 21
  1145   00398E  0E98               	movlw	low (?_sprintf+4)
  1146   003990  0100               	movlb	0	; () banked
  1147   003992  6FA6               	movwf	sprintf@ap& (0+255),b
  1148   003994  0E00               	movlw	high (?_sprintf+4)
  1149   003996  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1150   003998  C094  F0A8         	movff	sprintf@s,sprintf@f
  1151   00399C  C095  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1152   0039A0                     
  1153                           ; BSR set to: 0
  1154   0039A0  0E00               	movlw	0
  1155   0039A2  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1156   0039A4  0E00               	movlw	0
  1157   0039A6  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1158   0039A8                     
  1159                           ; BSR set to: 0
  1160   0039A8  0E00               	movlw	0
  1161   0039AA  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1162   0039AC  0E00               	movlw	0
  1163   0039AE  6FB1               	movwf	(sprintf@f+9)& (0+255),b
  1164   0039B0                     
  1165                           ; BSR set to: 0
  1166   0039B0  0EA8               	movlw	low sprintf@f
  1167   0039B2  6F8C               	movwf	vfprintf@fp& (0+255),b
  1168   0039B4  0E00               	movlw	high sprintf@f
  1169   0039B6  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1170   0039B8  C096  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1171   0039BC  C097  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1172   0039C0  0EA6               	movlw	low sprintf@ap
  1173   0039C2  6F90               	movwf	vfprintf@ap& (0+255),b
  1174   0039C4  0E00               	movlw	high sprintf@ap
  1175   0039C6  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1176   0039C8  EC9D  F01C         	call	_vfprintf	;wreg free
  1177   0039CC  0100               	movlb	0	; () banked
  1178   0039CE  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1179   0039D0  2594               	addwf	sprintf@s& (0+255),w,b
  1180   0039D2  6ED9               	movwf	fsr2l,c
  1181   0039D4  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1182   0039D6  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  1183   0039D8  6EDA               	movwf	fsr2h,c
  1184   0039DA  0E00               	movlw	0
  1185   0039DC  6EDF               	movwf	indf2,c
  1186   0039DE                     
  1187                           ; BSR set to: 0
  1188   0039DE  0012               	return		;funcret
  1189   0039E0                     __end_of_sprintf:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _vfprintf *****************
  1193 ;; Defined at:
  1194 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1197 ;;		 -> sprintf@f(11), 
  1198 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1199 ;;		 -> STR_1(33), 
  1200 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1201 ;;		 -> sprintf@ap(2), 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  1204 ;;		 -> STR_1(33), 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2   44[BANK0 ] int 
  1207 ;; Registers used:
  1208 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1214 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1215 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1217 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1218 ;;Total ram usage:        8 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 8
  1221 ;; This function calls:
  1222 ;;		_vfpfcnvrt
  1223 ;; This function is called by:
  1224 ;;		_sprintf
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text2
  1229   00393A                     __ptext2:
  1230                           	callstack 0
  1231   00393A                     _vfprintf:
  1232                           	callstack 21
  1233   00393A                     
  1234                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1235   00393A  C08E  F092         	movff	vfprintf@fmt,vfprintf@cfmt
  1236   00393E  C08F  F093         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1239   003942  EFB1  F01C         	goto	l5330
  1240   003946                     l5328:
  1241                           
  1242                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1243   003946  C08C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1244   00394A  C08D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1245   00394E  0E92               	movlw	low vfprintf@cfmt
  1246   003950  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1247   003952  0E00               	movlw	high vfprintf@cfmt
  1248   003954  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1249   003956  C090  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1250   00395A  C091  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1251   00395E  EC55  F012         	call	_vfpfcnvrt	;wreg free
  1252   003962                     l5330:
  1253                           
  1254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1255   003962  C092  FFF6         	movff	vfprintf@cfmt,tblptrl
  1256   003966  C093  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1257   00396A                     	if	0	;tblptru may be non-zero
  1258   00396A                     	endif
  1259   00396A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1260   00396A  0E00               	movlw	low (__mediumconst shr (0+16))
  1261   00396C  6EF8               	movwf	tblptru,c
  1262   00396E                     	endif
  1263   00396E  0008               	tblrd		*
  1264   003970  50F5               	movf	tablat,w,c
  1265   003972  0900               	iorlw	0
  1266   003974  A4D8               	btfss	status,2,c
  1267   003976  EFBF  F01C         	goto	u6121
  1268   00397A  EFC1  F01C         	goto	u6120
  1269   00397E                     u6121:
  1270   00397E  EFA3  F01C         	goto	l5328
  1271   003982                     u6120:
  1272   003982                     
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1274   003982  0E00               	movlw	0
  1275   003984  0100               	movlb	0	; () banked
  1276   003986  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1277   003988  0E00               	movlw	0
  1278   00398A  6F8C               	movwf	?_vfprintf& (0+255),b
  1279   00398C                     
  1280                           ; BSR set to: 0
  1281   00398C  0012               	return		;funcret
  1282   00398E                     __end_of_vfprintf:
  1283                           	callstack 0
  1284                           
  1285 ;; *************** function _vfpfcnvrt *****************
  1286 ;; Defined at:
  1287 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1290 ;;		 -> sprintf@f(11), 
  1291 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1292 ;;		 -> vfprintf@cfmt(2), 
  1293 ;;  ap              2   70[COMRAM] PTR PTR void 
  1294 ;;		 -> sprintf@ap(2), 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;  convarg         8   74[COMRAM] struct .
  1297 ;;  cp              2   83[COMRAM] PTR unsigned char 
  1298 ;;		 -> STR_1(33), 
  1299 ;;  i               2    0        int 
  1300 ;;  done            2    0        int 
  1301 ;;  c               1   82[COMRAM] unsigned char 
  1302 ;; Return value:  Size  Location     Type
  1303 ;;                  1    wreg      void 
  1304 ;; Registers used:
  1305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1311 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1312 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1314 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1315 ;;Total ram usage:       19 bytes
  1316 ;; Hardware stack levels used: 1
  1317 ;; Hardware stack levels required when called: 7
  1318 ;; This function calls:
  1319 ;;		_dtoa
  1320 ;;		_efgtoa
  1321 ;;		_fputc
  1322 ;; This function is called by:
  1323 ;;		_vfprintf
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text3
  1328   0024AA                     __ptext3:
  1329                           	callstack 0
  1330   0024AA                     _vfpfcnvrt:
  1331                           	callstack 21
  1332   0024AA                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1334   0024AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1335   0024AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1336   0024B2  CFDE FFF6          	movff	postinc2,tblptrl
  1337   0024B6  CFDD FFF7          	movff	postdec2,tblptrh
  1338   0024BA                     	if	0	;tblptru may be non-zero
  1339   0024BA                     	endif
  1340   0024BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1341   0024BA  0E00               	movlw	low (__mediumconst shr (0+16))
  1342   0024BC  6EF8               	movwf	tblptru,c
  1343   0024BE                     	endif
  1344   0024BE  0008               	tblrd		*
  1345   0024C0  50F5               	movf	tablat,w,c
  1346   0024C2  0A25               	xorlw	37
  1347   0024C4  A4D8               	btfss	status,2,c
  1348   0024C6  EF67  F012         	goto	u6081
  1349   0024CA  EF69  F012         	goto	u6080
  1350   0024CE                     u6081:
  1351   0024CE  EFC1  F013         	goto	l5296
  1352   0024D2                     u6080:
  1353   0024D2                     
  1354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1355   0024D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1356   0024D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1357   0024DA  2ADE               	incf	postinc2,f,c
  1358   0024DC  0E00               	movlw	0
  1359   0024DE  22DD               	addwfc	postdec2,f,c
  1360   0024E0                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1362   0024E0  0E00               	movlw	0
  1363   0024E2  0100               	movlb	0	; () banked
  1364   0024E4  6FF0               	movwf	(_width+1)& (0+255),b
  1365   0024E6  0E00               	movlw	0
  1366   0024E8  6FEF               	movwf	_width& (0+255),b
  1367   0024EA  C0EF  F056         	movff	_width,_flags
  1368   0024EE                     
  1369                           ; BSR set to: 0
  1370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1371   0024EE  69F1               	setf	_prec& (0+255),b
  1372   0024F0  69F2               	setf	(_prec+1)& (0+255),b
  1373   0024F2                     
  1374                           ; BSR set to: 0
  1375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1376   0024F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1377   0024F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1378   0024FA  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1379   0024FE  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1380   002502                     
  1381                           ; BSR set to: 0
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1383   002502  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1384   002506  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1385   00250A                     	if	0	;tblptru may be non-zero
  1386   00250A                     	endif
  1387   00250A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1388   00250A  0E00               	movlw	low (__mediumconst shr (0+16))
  1389   00250C  6EF8               	movwf	tblptru,c
  1390   00250E                     	endif
  1391   00250E  0008               	tblrd		*
  1392   002510  50F5               	movf	tablat,w,c
  1393   002512  0A64               	xorlw	100
  1394   002514  B4D8               	btfsc	status,2,c
  1395   002516  EF8F  F012         	goto	u6091
  1396   00251A  EF91  F012         	goto	u6090
  1397   00251E                     u6091:
  1398   00251E  EFA1  F012         	goto	l5252
  1399   002522                     u6090:
  1400   002522                     
  1401                           ; BSR set to: 0
  1402   002522  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1403   002526  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1404   00252A                     	if	0	;tblptru may be non-zero
  1405   00252A                     	endif
  1406   00252A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1407   00252A  0E00               	movlw	low (__mediumconst shr (0+16))
  1408   00252C  6EF8               	movwf	tblptru,c
  1409   00252E                     	endif
  1410   00252E  0008               	tblrd		*
  1411   002530  50F5               	movf	tablat,w,c
  1412   002532  0A69               	xorlw	105
  1413   002534  A4D8               	btfss	status,2,c
  1414   002536  EF9F  F012         	goto	u6101
  1415   00253A  EFA1  F012         	goto	u6100
  1416   00253E                     u6101:
  1417   00253E  EFE4  F012         	goto	l5258
  1418   002542                     u6100:
  1419   002542                     l5252:
  1420                           
  1421                           ; BSR set to: 0
  1422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1423   002542  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1424   002546  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1425   00254A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1426   00254E  0E02               	movlw	2
  1427   002550  26DE               	addwf	postinc2,f,c
  1428   002552  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1429   002556  0E00               	movlw	0
  1430   002558  22DD               	addwfc	postdec2,f,c
  1431   00255A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1432   00255E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1433   002562  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1434   002566  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1435   00256A  0E00               	movlw	0
  1436   00256C  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1437   00256E  0EFF               	movlw	-1
  1438   002570  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1439   002572  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1440   002574  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1441   002576  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1442   002578  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1443   00257A  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1444                           
  1445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1446   00257C  0E01               	movlw	1
  1447   00257E  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1448   002580  6E49               	movwf	??_vfpfcnvrt^0,c
  1449   002582  0E00               	movlw	0
  1450   002584  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1451   002586  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1452   002588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1453   00258C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1454   002590  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1455   002594  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1456   002598                     
  1457                           ; BSR set to: 0
  1458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1459   002598  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1460   00259C  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1461   0025A0  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1462   0025A4  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1463   0025A8  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1464   0025AC  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1465   0025B0  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1466   0025B4  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1467   0025B8  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1468   0025BC  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1469   0025C0  ECD8  F013         	call	_dtoa	;wreg free
  1470   0025C4  EFD7  F013         	goto	l1087
  1471   0025C8                     l5258:
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1475   0025C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1476   0025CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1477   0025D0  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1478   0025D4  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1479   0025D8                     
  1480                           ; BSR set to: 0
  1481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1482   0025D8  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1483   0025DC  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1484   0025E0                     	if	0	;tblptru may be non-zero
  1485   0025E0                     	endif
  1486   0025E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1487   0025E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1488   0025E2  6EF8               	movwf	tblptru,c
  1489   0025E4                     	endif
  1490   0025E4  0008               	tblrd		*
  1491   0025E6  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1494   0025EA  EF03  F013         	goto	l5270
  1495   0025EE                     l5262:
  1496                           
  1497                           ; BSR set to: 0
  1498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1499   0025EE  4A54               	infsnz	vfpfcnvrt@cp^0,f,c
  1500   0025F0  2A55               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1503   0025F2  EF1C  F013         	goto	l5272
  1504   0025F6                     l5264:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1508   0025F6  0E6C               	movlw	108
  1509   0025F8  6E53               	movwf	vfpfcnvrt@c^0,c
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1512   0025FA  EF1C  F013         	goto	l5272
  1513   0025FE                     l5266:
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1517   0025FE  0E00               	movlw	0
  1518   002600  6E53               	movwf	vfpfcnvrt@c^0,c
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1521   002602  EF1C  F013         	goto	l5272
  1522   002606                     l5270:
  1523                           
  1524                           ; BSR set to: 0
  1525   002606  5053               	movf	vfpfcnvrt@c^0,w,c
  1526   002608  6E49               	movwf	??_vfpfcnvrt^0,c
  1527   00260A  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1528                           
  1529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1530                           ; Switch size 1, requested type "simple"
  1531                           ; Number of cases is 1, Range of values is 0 to 0
  1532                           ; switch strategies available:
  1533                           ; Name         Instructions Cycles
  1534                           ; simple_byte            4     3 (average)
  1535                           ;	Chosen strategy is simple_byte
  1536   00260C  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1537   00260E  0A00               	xorlw	0	; case 0
  1538   002610  B4D8               	btfsc	status,2,c
  1539   002612  EF0D  F013         	goto	l5522
  1540   002616  EFFF  F012         	goto	l5266
  1541   00261A                     l5522:
  1542                           
  1543                           ; BSR set to: 0
  1544                           ; Switch size 1, requested type "simple"
  1545                           ; Number of cases is 3, Range of values is 76 to 108
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte           10     6 (average)
  1549                           ;	Chosen strategy is simple_byte
  1550   00261A  5049               	movf	??_vfpfcnvrt^0,w,c
  1551   00261C  0A4C               	xorlw	76	; case 76
  1552   00261E  B4D8               	btfsc	status,2,c
  1553   002620  EFF7  F012         	goto	l5262
  1554   002624  0A2A               	xorlw	42	; case 102
  1555   002626  B4D8               	btfsc	status,2,c
  1556   002628  EFFB  F012         	goto	l5264
  1557   00262C  0A0A               	xorlw	10	; case 108
  1558   00262E  B4D8               	btfsc	status,2,c
  1559   002630  EFF7  F012         	goto	l5262
  1560   002634  EFFF  F012         	goto	l5266
  1561   002638                     l5272:
  1562                           
  1563                           ; BSR set to: 0
  1564   002638  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1565   00263C  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1566   002640                     	if	0	;tblptru may be non-zero
  1567   002640                     	endif
  1568   002640                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1569   002640  0E00               	movlw	low (__mediumconst shr (0+16))
  1570   002642  6EF8               	movwf	tblptru,c
  1571   002644                     	endif
  1572   002644  0008               	tblrd		*
  1573   002646  50F5               	movf	tablat,w,c
  1574   002648  0A66               	xorlw	102
  1575   00264A  A4D8               	btfss	status,2,c
  1576   00264C  EF2A  F013         	goto	u6111
  1577   002650  EF2C  F013         	goto	u6110
  1578   002654                     u6111:
  1579   002654  EFB8  F013         	goto	l5292
  1580   002658                     u6110:
  1581   002658  EF62  F013         	goto	l5280
  1582   00265C                     l5274:
  1583                           
  1584                           ; BSR set to: 0
  1585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1586   00265C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1587   002660  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1588   002664  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1589   002668  0E04               	movlw	4
  1590   00266A  26DE               	addwf	postinc2,f,c
  1591   00266C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1592   002670  0E00               	movlw	0
  1593   002672  22DD               	addwfc	postdec2,f,c
  1594   002674  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1595   002678  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1596   00267C  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1597   002680  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1598   002684  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1599   002688  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1600                           
  1601                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1602   00268C  EF77  F013         	goto	l5282
  1603   002690                     l5276:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1607   002690  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1608   002694  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1609   002698  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1610   00269C  0E04               	movlw	4
  1611   00269E  26DE               	addwf	postinc2,f,c
  1612   0026A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1613   0026A4  0E00               	movlw	0
  1614   0026A6  22DD               	addwfc	postdec2,f,c
  1615   0026A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1616   0026AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1617   0026B0  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1618   0026B4  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1619   0026B8  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1620   0026BC  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1623   0026C0  EF77  F013         	goto	l5282
  1624   0026C4                     l5280:
  1625                           
  1626                           ; BSR set to: 0
  1627   0026C4  5053               	movf	vfpfcnvrt@c^0,w,c
  1628   0026C6  6E49               	movwf	??_vfpfcnvrt^0,c
  1629   0026C8  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1630                           
  1631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1632                           ; Switch size 1, requested type "simple"
  1633                           ; Number of cases is 1, Range of values is 0 to 0
  1634                           ; switch strategies available:
  1635                           ; Name         Instructions Cycles
  1636                           ; simple_byte            4     3 (average)
  1637                           ;	Chosen strategy is simple_byte
  1638   0026CA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1639   0026CC  0A00               	xorlw	0	; case 0
  1640   0026CE  B4D8               	btfsc	status,2,c
  1641   0026D0  EF6C  F013         	goto	l5524
  1642   0026D4  EF77  F013         	goto	l5282
  1643   0026D8                     l5524:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ; Switch size 1, requested type "simple"
  1647                           ; Number of cases is 2, Range of values is 76 to 108
  1648                           ; switch strategies available:
  1649                           ; Name         Instructions Cycles
  1650                           ; simple_byte            7     4 (average)
  1651                           ;	Chosen strategy is simple_byte
  1652   0026D8  5049               	movf	??_vfpfcnvrt^0,w,c
  1653   0026DA  0A4C               	xorlw	76	; case 76
  1654   0026DC  B4D8               	btfsc	status,2,c
  1655   0026DE  EF48  F013         	goto	l5276
  1656   0026E2  0A20               	xorlw	32	; case 108
  1657   0026E4  B4D8               	btfsc	status,2,c
  1658   0026E6  EF2E  F013         	goto	l5274
  1659   0026EA  EF77  F013         	goto	l5282
  1660   0026EE                     l5282:
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1664   0026EE  0E01               	movlw	1
  1665   0026F0  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1666   0026F2  6E49               	movwf	??_vfpfcnvrt^0,c
  1667   0026F4  0E00               	movlw	0
  1668   0026F6  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1669   0026F8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1670   0026FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1671   0026FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1672   002702  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1673   002706  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1674                           
  1675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1676   00270A  EFA0  F013         	goto	l5290
  1677   00270E                     l5284:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1681   00270E  C043  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1682   002712  C044  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1683   002716  C04B  F034         	movff	vfpfcnvrt@convarg,efgtoa@f
  1684   00271A  C04C  F035         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1685   00271E  C04D  F036         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1686   002722  C04E  F037         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1687   002726  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1688   00272A  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1689   00272E                     	if	0	;tblptru may be non-zero
  1690   00272E                     	endif
  1691   00272E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1692   00272E  0E00               	movlw	low (__mediumconst shr (0+16))
  1693   002730  6EF8               	movwf	tblptru,c
  1694   002732                     	endif
  1695   002732  0008               	tblrd		*
  1696   002734  CFF5 F038          	movff	tablat,efgtoa@c
  1697   002738  EC16  F007         	call	_efgtoa	;wreg free
  1698   00273C  EFD7  F013         	goto	l1087
  1699   002740                     l5290:
  1700                           
  1701                           ; BSR set to: 0
  1702   002740  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1703   002744  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1704   002748                     	if	0	;tblptru may be non-zero
  1705   002748                     	endif
  1706   002748                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1707   002748  0E00               	movlw	low (__mediumconst shr (0+16))
  1708   00274A  6EF8               	movwf	tblptru,c
  1709   00274C                     	endif
  1710   00274C  0008               	tblrd		*
  1711   00274E  50F5               	movf	tablat,w,c
  1712   002750  6E49               	movwf	??_vfpfcnvrt^0,c
  1713   002752  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1714                           
  1715                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1716                           ; Switch size 1, requested type "simple"
  1717                           ; Number of cases is 1, Range of values is 0 to 0
  1718                           ; switch strategies available:
  1719                           ; Name         Instructions Cycles
  1720                           ; simple_byte            4     3 (average)
  1721                           ;	Chosen strategy is simple_byte
  1722   002754  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1723   002756  0A00               	xorlw	0	; case 0
  1724   002758  B4D8               	btfsc	status,2,c
  1725   00275A  EFB1  F013         	goto	l5526
  1726   00275E  EFB8  F013         	goto	l5292
  1727   002762                     l5526:
  1728                           
  1729                           ; BSR set to: 0
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 102 to 102
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ;	Chosen strategy is simple_byte
  1736   002762  5049               	movf	??_vfpfcnvrt^0,w,c
  1737   002764  0A66               	xorlw	102	; case 102
  1738   002766  B4D8               	btfsc	status,2,c
  1739   002768  EF87  F013         	goto	l5284
  1740   00276C  EFB8  F013         	goto	l5292
  1741   002770                     l5292:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1744   002770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1745   002774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1746   002778  2ADE               	incf	postinc2,f,c
  1747   00277A  0E00               	movlw	0
  1748   00277C  22DD               	addwfc	postdec2,f,c
  1749   00277E  EFD7  F013         	goto	l1087
  1750   002782                     l5296:
  1751                           
  1752                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1753   002782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1754   002786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1755   00278A  CFDE FFF6          	movff	postinc2,tblptrl
  1756   00278E  CFDD FFF7          	movff	postdec2,tblptrh
  1757   002792                     	if	0	;tblptru may be non-zero
  1758   002792                     	endif
  1759   002792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1760   002792  0E00               	movlw	low (__mediumconst shr (0+16))
  1761   002794  6EF8               	movwf	tblptru,c
  1762   002796                     	endif
  1763   002796  0008               	tblrd		*
  1764   002798  50F5               	movf	tablat,w,c
  1765   00279A  6E05               	movwf	fputc@c^0,c
  1766   00279C  6A06               	clrf	(fputc@c+1)^0,c
  1767   00279E  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1768   0027A2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1769   0027A6  EC44  F01B         	call	_fputc	;wreg free
  1770   0027AA  EFB8  F013         	goto	l5292
  1771   0027AE                     l1087:
  1772   0027AE  0012               	return		;funcret
  1773   0027B0                     __end_of_vfpfcnvrt:
  1774                           	callstack 0
  1775                           
  1776 ;; *************** function _efgtoa *****************
  1777 ;; Defined at:
  1778 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  1781 ;;		 -> sprintf@f(11), 
  1782 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  1783 ;;  c               1   55[COMRAM] unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  u               4   40[BANK0 ] struct flui
  1786 ;;  g               4   34[BANK0 ] struct flui
  1787 ;;  l               4   29[BANK0 ] struct flui
  1788 ;;  h               4   25[BANK0 ] struct flui
  1789 ;;  ou              4   19[BANK0 ] struct flui
  1790 ;;  n               2   38[BANK0 ] int 
  1791 ;;  i               2   23[BANK0 ] int 
  1792 ;;  w               2   17[BANK0 ] int 
  1793 ;;  e               2   15[BANK0 ] int 
  1794 ;;  m               2   13[BANK0 ] int 
  1795 ;;  d               2   11[BANK0 ] int 
  1796 ;;  t               2    4[BANK0 ] int 
  1797 ;;  p               2    2[BANK0 ] int 
  1798 ;;  ne              2    0[BANK0 ] int 
  1799 ;;  sign            1   33[BANK0 ] unsigned char 
  1800 ;;  nmode           1   10[BANK0 ] unsigned char 
  1801 ;;  mode            1    9[BANK0 ] unsigned char 
  1802 ;;  pp              1    8[BANK0 ] unsigned char 
  1803 ;;  esign           1    0        unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1813 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1814 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1816 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1817 ;;Total ram usage:       53 bytes
  1818 ;; Hardware stack levels used: 1
  1819 ;; Hardware stack levels required when called: 6
  1820 ;; This function calls:
  1821 ;;		___fladd
  1822 ;;		___fldiv
  1823 ;;		___fleq
  1824 ;;		___flge
  1825 ;;		___flmul
  1826 ;;		___flneg
  1827 ;;		___flsub
  1828 ;;		___fltol
  1829 ;;		___fpclassifyf
  1830 ;;		_floorf
  1831 ;;		_labs
  1832 ;;		_memcpy
  1833 ;;		_pad
  1834 ;;		_strcpy
  1835 ;; This function is called by:
  1836 ;;		_vfpfcnvrt
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text4
  1841   000E2C                     __ptext4:
  1842                           	callstack 0
  1843   000E2C                     _efgtoa:
  1844                           	callstack 21
  1845   000E2C                     
  1846                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1847   000E2C  0E00               	movlw	0
  1848   000E2E  0100               	movlb	0	; () banked
  1849   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1850   000E32                     
  1851                           ; BSR set to: 0
  1852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1853   000E32  C034  F082         	movff	efgtoa@f,efgtoa@g
  1854   000E36  C035  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1855   000E3A  C036  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1856   000E3E  C037  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1857   000E42                     
  1858                           ; BSR set to: 0
  1859                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1860   000E42  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1861   000E44  EF28  F007         	goto	u5760
  1862   000E48  EF26  F007         	goto	u5761
  1863   000E4C                     u5761:
  1864   000E4C  EF3C  F007         	goto	l5026
  1865   000E50                     u5760:
  1866   000E50                     
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1869   000E50  0E01               	movlw	1
  1870   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1871   000E54                     
  1872                           ; BSR set to: 0
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1874   000E54  C082  F005         	movff	efgtoa@g,___flneg@f1
  1875   000E58  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  1876   000E5C  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  1877   000E60  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  1878   000E64  EC7F  F01E         	call	___flneg	;wreg free
  1879   000E68  C005  F082         	movff	?___flneg,efgtoa@g
  1880   000E6C  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  1881   000E70  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  1882   000E74  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  1883   000E78                     l5026:
  1884                           
  1885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1886   000E78  0E00               	movlw	0
  1887   000E7A  0100               	movlb	0	; () banked
  1888   000E7C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1889   000E7E  0E00               	movlw	0
  1890   000E80  6F86               	movwf	efgtoa@n& (0+255),b
  1891   000E82                     
  1892                           ; BSR set to: 0
  1893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1894   000E82  C0EF  F071         	movff	_width,efgtoa@w
  1895   000E86  C0F0  F072         	movff	_width+1,efgtoa@w+1
  1896   000E8A                     
  1897                           ; BSR set to: 0
  1898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1899   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1900   000E8C  B4D8               	btfsc	status,2,c
  1901   000E8E  EF4B  F007         	goto	u5771
  1902   000E92  EF4D  F007         	goto	u5770
  1903   000E96                     u5771:
  1904   000E96  EF61  F007         	goto	l5040
  1905   000E9A                     u5770:
  1906   000E9A                     
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1909   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1910   000E9C  A4D8               	btfss	status,2,c
  1911   000E9E  EF53  F007         	goto	u5781
  1912   000EA2  EF55  F007         	goto	u5780
  1913   000EA6                     u5781:
  1914   000EA6  EF5B  F007         	goto	l5036
  1915   000EAA                     u5780:
  1916   000EAA                     
  1917                           ; BSR set to: 0
  1918   000EAA  0E00               	movlw	0
  1919   000EAC  6F67               	movwf	(_efgtoa$1481+1)& (0+255),b
  1920   000EAE  0E2B               	movlw	43
  1921   000EB0  6F66               	movwf	_efgtoa$1481& (0+255),b
  1922   000EB2  EF5F  F007         	goto	l5038
  1923   000EB6                     l5036:
  1924                           
  1925                           ; BSR set to: 0
  1926   000EB6  0E00               	movlw	0
  1927   000EB8  6F67               	movwf	(_efgtoa$1481+1)& (0+255),b
  1928   000EBA  0E2D               	movlw	45
  1929   000EBC  6F66               	movwf	_efgtoa$1481& (0+255),b
  1930   000EBE                     l5038:
  1931                           
  1932                           ; BSR set to: 0
  1933   000EBE  C066  F081         	movff	_efgtoa$1481,efgtoa@sign
  1934   000EC2                     l5040:
  1935                           
  1936                           ; BSR set to: 0
  1937                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1938   000EC2  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1939   000EC6  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1940   000ECA  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1941   000ECE  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1942   000ED2  ECC5  F01A         	call	___fpclassifyf	;wreg free
  1943   000ED6  0405               	decf	?___fpclassifyf^0,w,c
  1944   000ED8  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1945   000EDA  A4D8               	btfss	status,2,c
  1946   000EDC  EF72  F007         	goto	u5791
  1947   000EE0  EF74  F007         	goto	u5790
  1948   000EE4                     u5791:
  1949   000EE4  EFA7  F007         	goto	l5058
  1950   000EE8                     u5790:
  1951   000EE8                     
  1952                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1953   000EE8  0100               	movlb	0	; () banked
  1954   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1955   000EEC  B4D8               	btfsc	status,2,c
  1956   000EEE  EF7B  F007         	goto	u5801
  1957   000EF2  EF7D  F007         	goto	u5800
  1958   000EF6                     u5801:
  1959   000EF6  EF86  F007         	goto	l5050
  1960   000EFA                     u5800:
  1961   000EFA                     
  1962                           ; BSR set to: 0
  1963                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1964   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  1965   000EFE                     
  1966                           ; BSR set to: 0
  1967                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1968   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  1969   000F00  A0D8               	btfss	status,0,c
  1970   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1971   000F04                     
  1972                           ; BSR set to: 0
  1973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1974   000F04  0E00               	movlw	0
  1975   000F06  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1976   000F08  0E01               	movlw	1
  1977   000F0A  6F86               	movwf	efgtoa@n& (0+255),b
  1978   000F0C                     l5050:
  1979                           
  1980                           ; BSR set to: 0
  1981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1982   000F0C  0E50               	movlw	low _dbuf
  1983   000F0E  2586               	addwf	efgtoa@n& (0+255),w,b
  1984   000F10  6E05               	movwf	strcpy@dest^0,c
  1985   000F12  0E01               	movlw	high _dbuf
  1986   000F14  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1987   000F16  6E06               	movwf	(strcpy@dest+1)^0,c
  1988   000F18  0E22               	movlw	low STR_2
  1989   000F1A  6E07               	movwf	strcpy@src^0,c
  1990   000F1C  0E0E               	movlw	high STR_2
  1991   000F1E  6E08               	movwf	(strcpy@src+1)^0,c
  1992   000F20  ECDB  F01D         	call	_strcpy	;wreg free
  1993   000F24                     l5052:
  1994                           
  1995                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1996   000F24  0100               	movlb	0	; () banked
  1997   000F26  0EFD               	movlw	253
  1998   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  1999   000F2A  0EFF               	movlw	255
  2000   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2001   000F2E                     
  2002                           ; BSR set to: 0
  2003                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2004   000F2E  C032  F015         	movff	efgtoa@fp,pad@fp
  2005   000F32  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  2006   000F36  0E50               	movlw	low _dbuf
  2007   000F38  6E17               	movwf	pad@buf^0,c
  2008   000F3A  0E01               	movlw	high _dbuf
  2009   000F3C  6E18               	movwf	(pad@buf+1)^0,c
  2010   000F3E  C071  F019         	movff	efgtoa@w,pad@p
  2011   000F42  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  2012   000F46  ECFE  F01B         	call	_pad	;wreg free
  2013   000F4A  EF12  F00C         	goto	l1039
  2014   000F4E                     l5058:
  2015                           
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2017   000F4E  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  2018   000F52  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2019   000F56  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2020   000F5A  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2021   000F5E  ECC5  F01A         	call	___fpclassifyf	;wreg free
  2022   000F62  5005               	movf	?___fpclassifyf^0,w,c
  2023   000F64  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2024   000F66  A4D8               	btfss	status,2,c
  2025   000F68  EFB8  F007         	goto	u5811
  2026   000F6C  EFBA  F007         	goto	u5810
  2027   000F70                     u5811:
  2028   000F70  EFDA  F007         	goto	l5076
  2029   000F74                     u5810:
  2030   000F74                     
  2031                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2032   000F74  0100               	movlb	0	; () banked
  2033   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  2034   000F78  B4D8               	btfsc	status,2,c
  2035   000F7A  EFC1  F007         	goto	u5821
  2036   000F7E  EFC3  F007         	goto	u5820
  2037   000F82                     u5821:
  2038   000F82  EFCC  F007         	goto	l5068
  2039   000F86                     u5820:
  2040   000F86                     
  2041                           ; BSR set to: 0
  2042                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2043   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  2044   000F8A                     
  2045                           ; BSR set to: 0
  2046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2047   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  2048   000F8C  A0D8               	btfss	status,0,c
  2049   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2050   000F90                     
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2053   000F90  0E00               	movlw	0
  2054   000F92  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2055   000F94  0E01               	movlw	1
  2056   000F96  6F86               	movwf	efgtoa@n& (0+255),b
  2057   000F98                     l5068:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2061   000F98  0E50               	movlw	low _dbuf
  2062   000F9A  2586               	addwf	efgtoa@n& (0+255),w,b
  2063   000F9C  6E05               	movwf	strcpy@dest^0,c
  2064   000F9E  0E01               	movlw	high _dbuf
  2065   000FA0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2066   000FA2  6E06               	movwf	(strcpy@dest+1)^0,c
  2067   000FA4  0E26               	movlw	low STR_5
  2068   000FA6  6E07               	movwf	strcpy@src^0,c
  2069   000FA8  0E0E               	movlw	high STR_5
  2070   000FAA  6E08               	movwf	(strcpy@src+1)^0,c
  2071   000FAC  ECDB  F01D         	call	_strcpy	;wreg free
  2072   000FB0  EF92  F007         	goto	l5052
  2073   000FB4                     l5076:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2076   000FB4  0E00               	movlw	0
  2077   000FB6  0100               	movlb	0	; () banked
  2078   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2079   000FBA  0E00               	movlw	0
  2080   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2081   000FBE  0E80               	movlw	128
  2082   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2083   000FC2  0E3F               	movlw	63
  2084   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2087   000FC6  0E00               	movlw	0
  2088   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2089   000FCA  0E00               	movlw	0
  2090   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2091   000FCE                     
  2092                           ; BSR set to: 0
  2093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2094   000FCE  C082  F005         	movff	efgtoa@g,___fleq@ff1
  2095   000FD2  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2096   000FD6  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2097   000FDA  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2098   000FDE  0E00               	movlw	0
  2099   000FE0  6E09               	movwf	___fleq@ff2^0,c
  2100   000FE2  0E00               	movlw	0
  2101   000FE4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2102   000FE6  0E00               	movlw	0
  2103   000FE8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2104   000FEA  0E00               	movlw	0
  2105   000FEC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2106   000FEE  ECA9  F01B         	call	___fleq	;wreg free
  2107   000FF2  B0D8               	btfsc	status,0,c
  2108   000FF4  EFFE  F007         	goto	u5831
  2109   000FF8  EF00  F008         	goto	u5830
  2110   000FFC                     u5831:
  2111   000FFC  EFDF  F008         	goto	l1042
  2112   001000                     u5830:
  2113   001000  EF0D  F008         	goto	l5084
  2114   001004                     l1044:
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2117   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2118   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2119   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2120   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2121   001014                     
  2122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2123   001014  0100               	movlb	0	; () banked
  2124   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2125   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2126   00101A                     l5084:
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2129   00101A  C088  F005         	movff	efgtoa@u,___flmul@b
  2130   00101E  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2131   001022  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2132   001026  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2133   00102A  0E00               	movlw	0
  2134   00102C  6E09               	movwf	___flmul@a^0,c
  2135   00102E  0E00               	movlw	0
  2136   001030  6E0A               	movwf	(___flmul@a+1)^0,c
  2137   001032  0E20               	movlw	32
  2138   001034  6E0B               	movwf	(___flmul@a+2)^0,c
  2139   001036  0E41               	movlw	65
  2140   001038  6E0C               	movwf	(___flmul@a+3)^0,c
  2141   00103A  EC73  F00E         	call	___flmul	;wreg free
  2142   00103E  C005  F073         	movff	?___flmul,efgtoa@ou
  2143   001042  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2144   001046  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2145   00104A  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2146   00104E  0100               	movlb	0	; () banked
  2147   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2148   001052  5D82               	subwf	efgtoa@g& (0+255),w,b
  2149   001054  6E05               	movwf	labs@a^0,c
  2150   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2151   001058  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2152   00105A  6E06               	movwf	(labs@a+1)^0,c
  2153   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2154   00105E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2155   001060  6E07               	movwf	(labs@a+2)^0,c
  2156   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2157   001064  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2158   001066  6E08               	movwf	(labs@a+3)^0,c
  2159   001068  EC3B  F01C         	call	_labs	;wreg free
  2160   00106C  BE08               	btfsc	(?_labs+3)^0,7,c
  2161   00106E  EF44  F008         	goto	u5841
  2162   001072  5008               	movf	(?_labs+3)^0,w,c
  2163   001074  1007               	iorwf	(?_labs+2)^0,w,c
  2164   001076  1006               	iorwf	(?_labs+1)^0,w,c
  2165   001078  E109               	bnz	u5840
  2166   00107A  0E02               	movlw	2
  2167   00107C  5C05               	subwf	?_labs^0,w,c
  2168   00107E  A0D8               	btfss	status,0,c
  2169   001080  EF44  F008         	goto	u5841
  2170   001084  EF46  F008         	goto	u5840
  2171   001088                     u5841:
  2172   001088  EF02  F008         	goto	l1044
  2173   00108C                     u5840:
  2174   00108C  C073  F01E         	movff	efgtoa@ou,___flge@ff1
  2175   001090  C074  F01F         	movff	efgtoa@ou+1,___flge@ff1+1
  2176   001094  C075  F020         	movff	efgtoa@ou+2,___flge@ff1+2
  2177   001098  C076  F021         	movff	efgtoa@ou+3,___flge@ff1+3
  2178   00109C  C082  F022         	movff	efgtoa@g,___flge@ff2
  2179   0010A0  C083  F023         	movff	efgtoa@g+1,___flge@ff2+1
  2180   0010A4  C084  F024         	movff	efgtoa@g+2,___flge@ff2+2
  2181   0010A8  C085  F025         	movff	efgtoa@g+3,___flge@ff2+3
  2182   0010AC  EC43  F01A         	call	___flge	;wreg free
  2183   0010B0  A0D8               	btfss	status,0,c
  2184   0010B2  EF5D  F008         	goto	u5851
  2185   0010B6  EF5F  F008         	goto	u5850
  2186   0010BA                     u5851:
  2187   0010BA  EF02  F008         	goto	l1044
  2188   0010BE                     u5850:
  2189   0010BE                     
  2190                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2191   0010BE  0100               	movlb	0	; () banked
  2192   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2193   0010C2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2194   0010C4  6E05               	movwf	labs@a^0,c
  2195   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2196   0010C8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2197   0010CA  6E06               	movwf	(labs@a+1)^0,c
  2198   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2199   0010CE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2200   0010D0  6E07               	movwf	(labs@a+2)^0,c
  2201   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2202   0010D4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2203   0010D6  6E08               	movwf	(labs@a+3)^0,c
  2204   0010D8  EC3B  F01C         	call	_labs	;wreg free
  2205   0010DC  BE08               	btfsc	(?_labs+3)^0,7,c
  2206   0010DE  EF7E  F008         	goto	u5860
  2207   0010E2  5008               	movf	(?_labs+3)^0,w,c
  2208   0010E4  1007               	iorwf	(?_labs+2)^0,w,c
  2209   0010E6  1006               	iorwf	(?_labs+1)^0,w,c
  2210   0010E8  E107               	bnz	u5861
  2211   0010EA  0E02               	movlw	2
  2212   0010EC  5C05               	subwf	?_labs^0,w,c
  2213   0010EE  B0D8               	btfsc	status,0,c
  2214   0010F0  EF7C  F008         	goto	u5861
  2215   0010F4  EF7E  F008         	goto	u5860
  2216   0010F8                     u5861:
  2217   0010F8  EFC6  F008         	goto	l5102
  2218   0010FC                     u5860:
  2219   0010FC                     l5092:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2222   0010FC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2223   001100  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2224   001104  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2225   001108  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2228   00110C  EFDF  F008         	goto	l1042
  2229   001110                     l5094:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2232   001110  C088  F005         	movff	efgtoa@u,___fldiv@b
  2233   001114  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2234   001118  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2235   00111C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2236   001120  0E00               	movlw	0
  2237   001122  6E09               	movwf	___fldiv@a^0,c
  2238   001124  0E00               	movlw	0
  2239   001126  6E0A               	movwf	(___fldiv@a+1)^0,c
  2240   001128  0E20               	movlw	32
  2241   00112A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2242   00112C  0E41               	movlw	65
  2243   00112E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2244   001130  EC88  F010         	call	___fldiv	;wreg free
  2245   001134  C005  F088         	movff	?___fldiv,efgtoa@u
  2246   001138  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2247   00113C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2248   001140  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2249   001144                     
  2250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2251   001144  0100               	movlb	0	; () banked
  2252   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2253   001148  A0D8               	btfss	status,0,c
  2254   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2255   00114C                     
  2256                           ; BSR set to: 0
  2257                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2258   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2259   00114E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2260   001150  6E05               	movwf	labs@a^0,c
  2261   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2262   001154  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2263   001156  6E06               	movwf	(labs@a+1)^0,c
  2264   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2265   00115A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2266   00115C  6E07               	movwf	(labs@a+2)^0,c
  2267   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2268   001160  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2269   001162  6E08               	movwf	(labs@a+3)^0,c
  2270   001164  EC3B  F01C         	call	_labs	;wreg free
  2271   001168  BE08               	btfsc	(?_labs+3)^0,7,c
  2272   00116A  EFC4  F008         	goto	u5870
  2273   00116E  5008               	movf	(?_labs+3)^0,w,c
  2274   001170  1007               	iorwf	(?_labs+2)^0,w,c
  2275   001172  1006               	iorwf	(?_labs+1)^0,w,c
  2276   001174  E107               	bnz	u5871
  2277   001176  0E02               	movlw	2
  2278   001178  5C05               	subwf	?_labs^0,w,c
  2279   00117A  B0D8               	btfsc	status,0,c
  2280   00117C  EFC2  F008         	goto	u5871
  2281   001180  EFC4  F008         	goto	u5870
  2282   001184                     u5871:
  2283   001184  EFC6  F008         	goto	l5102
  2284   001188                     u5870:
  2285   001188  EF7E  F008         	goto	l5092
  2286   00118C                     l5102:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2289   00118C  C082  F01E         	movff	efgtoa@g,___flge@ff1
  2290   001190  C083  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2291   001194  C084  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2292   001198  C085  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2293   00119C  C088  F022         	movff	efgtoa@u,___flge@ff2
  2294   0011A0  C089  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2295   0011A4  C08A  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2296   0011A8  C08B  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2297   0011AC  EC43  F01A         	call	___flge	;wreg free
  2298   0011B0  A0D8               	btfss	status,0,c
  2299   0011B2  EFDD  F008         	goto	u5881
  2300   0011B6  EFDF  F008         	goto	u5880
  2301   0011BA                     u5881:
  2302   0011BA  EF88  F008         	goto	l5094
  2303   0011BE                     u5880:
  2304   0011BE                     l1042:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2307   0011BE  C038  F069         	movff	efgtoa@c,efgtoa@mode
  2308                           
  2309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2310   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2311   0011C6                     
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2313   0011C6  0100               	movlb	0	; () banked
  2314   0011C8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  2315   0011CA  EFE9  F008         	goto	u5891
  2316   0011CE  EFEB  F008         	goto	u5890
  2317   0011D2                     u5891:
  2318   0011D2  EFF1  F008         	goto	l5108
  2319   0011D6                     u5890:
  2320   0011D6                     
  2321                           ; BSR set to: 0
  2322   0011D6  C0F1  F062         	movff	_prec,efgtoa@p
  2323   0011DA  C0F2  F063         	movff	_prec+1,efgtoa@p+1
  2324   0011DE  EFF5  F008         	goto	l5110
  2325   0011E2                     l5108:
  2326                           
  2327                           ; BSR set to: 0
  2328   0011E2  0E00               	movlw	0
  2329   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2330   0011E6  0E06               	movlw	6
  2331   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2332   0011EA                     l5110:
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2336   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2337   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2338   0011F2                     
  2339                           ; BSR set to: 0
  2340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2341   0011F2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2342   0011F4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2343   0011F6                     
  2344                           ; BSR set to: 0
  2345                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2346   0011F6  0E66               	movlw	102
  2347   0011F8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2348   0011FA  A4D8               	btfss	status,2,c
  2349   0011FC  EF02  F009         	goto	u5901
  2350   001200  EF04  F009         	goto	u5900
  2351   001204                     u5901:
  2352   001204  EF24  F009         	goto	l5124
  2353   001208                     u5900:
  2354   001208                     
  2355                           ; BSR set to: 0
  2356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2357   001208  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2358   00120A  EF0B  F009         	goto	u5910
  2359   00120E  EF09  F009         	goto	u5911
  2360   001212                     u5911:
  2361   001212  EF17  F009         	goto	l5120
  2362   001216                     u5910:
  2363   001216                     
  2364                           ; BSR set to: 0
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2366   001216  0E00               	movlw	0
  2367   001218  6F88               	movwf	efgtoa@u& (0+255),b
  2368   00121A  0E00               	movlw	0
  2369   00121C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2370   00121E  0E80               	movlw	128
  2371   001220  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2372   001222  0E3F               	movlw	63
  2373   001224  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2374                           
  2375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2376   001226  0E00               	movlw	0
  2377   001228  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2378   00122A  0E00               	movlw	0
  2379   00122C  6F6F               	movwf	efgtoa@e& (0+255),b
  2380   00122E                     l5120:
  2381                           
  2382                           ; BSR set to: 0
  2383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2384   00122E  0E67               	movlw	103
  2385   001230  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2386   001232  B4D8               	btfsc	status,2,c
  2387   001234  EF1E  F009         	goto	u5921
  2388   001238  EF20  F009         	goto	u5920
  2389   00123C                     u5921:
  2390   00123C  EF24  F009         	goto	l5124
  2391   001240                     u5920:
  2392   001240                     
  2393                           ; BSR set to: 0
  2394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2395   001240  516F               	movf	efgtoa@e& (0+255),w,b
  2396   001242  276D               	addwf	efgtoa@m& (0+255),f,b
  2397   001244  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2398   001246  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2399   001248                     l5124:
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2403   001248  0E00               	movlw	0
  2404   00124A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2405   00124C  0E00               	movlw	0
  2406   00124E  6F77               	movwf	efgtoa@i& (0+255),b
  2407   001250                     
  2408                           ; BSR set to: 0
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2410   001250  C082  F079         	movff	efgtoa@g,efgtoa@h
  2411   001254  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2412   001258  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2413   00125C  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2414   001260                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2417   001260  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2418   001264  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2419   001268  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2420   00126C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2423   001270  EFB5  F009         	goto	l5138
  2424   001274                     l5130:
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2428   001274  C079  F005         	movff	efgtoa@h,___fldiv@b
  2429   001278  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2430   00127C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2431   001280  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2432   001284  C088  F009         	movff	efgtoa@u,___fldiv@a
  2433   001288  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2434   00128C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2435   001290  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2436   001294  EC88  F010         	call	___fldiv	;wreg free
  2437   001298  C005  F01E         	movff	?___fldiv,floorf@x
  2438   00129C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2439   0012A0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2440   0012A4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2441   0012A8  EC17  F015         	call	_floorf	;wreg free
  2442   0012AC  C01E  F07D         	movff	?_floorf,efgtoa@l
  2443   0012B0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2444   0012B4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2445   0012B8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2446                           
  2447                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2448   0012BC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2449   0012C0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2450   0012C4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2451   0012C8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2452   0012CC  ECC0  F019         	call	___fltol	;wreg free
  2453   0012D0  C005  F06B         	movff	?___fltol,efgtoa@d
  2454   0012D4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2455   0012D8                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2457   0012D8  C079  F01E         	movff	efgtoa@h,___flsub@b
  2458   0012DC  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2459   0012E0  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2460   0012E4  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2461   0012E8  C07D  F009         	movff	efgtoa@l,___flmul@a
  2462   0012EC  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2463   0012F0  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2464   0012F4  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2465   0012F8  C088  F005         	movff	efgtoa@u,___flmul@b
  2466   0012FC  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2467   001300  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2468   001304  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2469   001308  EC73  F00E         	call	___flmul	;wreg free
  2470   00130C  C005  F022         	movff	?___flmul,___flsub@a
  2471   001310  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2472   001314  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2473   001318  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2474   00131C  ECB8  F01D         	call	___flsub	;wreg free
  2475   001320  C01E  F079         	movff	?___flsub,efgtoa@h
  2476   001324  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2477   001328  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2478   00132C  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2479   001330                     
  2480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2481   001330  C088  F005         	movff	efgtoa@u,___fldiv@b
  2482   001334  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2483   001338  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2484   00133C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2485   001340  0E00               	movlw	0
  2486   001342  6E09               	movwf	___fldiv@a^0,c
  2487   001344  0E00               	movlw	0
  2488   001346  6E0A               	movwf	(___fldiv@a+1)^0,c
  2489   001348  0E20               	movlw	32
  2490   00134A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2491   00134C  0E41               	movlw	65
  2492   00134E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2493   001350  EC88  F010         	call	___fldiv	;wreg free
  2494   001354  C005  F088         	movff	?___fldiv,efgtoa@u
  2495   001358  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2496   00135C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2497   001360  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2498   001364                     
  2499                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2500   001364  0100               	movlb	0	; () banked
  2501   001366  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2502   001368  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2503   00136A                     l5138:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2507   00136A  516D               	movf	efgtoa@m& (0+255),w,b
  2508   00136C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2509   00136E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2510   001370  0A80               	xorlw	128
  2511   001372  6E39               	movwf	??_efgtoa^0,c
  2512   001374  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2513   001376  0A80               	xorlw	128
  2514   001378  5839               	subwfb	??_efgtoa^0,w,c
  2515   00137A  A0D8               	btfss	status,0,c
  2516   00137C  EFC2  F009         	goto	u5931
  2517   001380  EFC4  F009         	goto	u5930
  2518   001384                     u5931:
  2519   001384  EF3A  F009         	goto	l5130
  2520   001388                     u5930:
  2521   001388                     
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2524   001388  C088  F005         	movff	efgtoa@u,___flmul@b
  2525   00138C  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2526   001390  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2527   001394  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2528   001398  0E00               	movlw	0
  2529   00139A  6E09               	movwf	___flmul@a^0,c
  2530   00139C  0E00               	movlw	0
  2531   00139E  6E0A               	movwf	(___flmul@a+1)^0,c
  2532   0013A0  0EA0               	movlw	160
  2533   0013A2  6E0B               	movwf	(___flmul@a+2)^0,c
  2534   0013A4  0E40               	movlw	64
  2535   0013A6  6E0C               	movwf	(___flmul@a+3)^0,c
  2536   0013A8  EC73  F00E         	call	___flmul	;wreg free
  2537   0013AC  C005  F07D         	movff	?___flmul,efgtoa@l
  2538   0013B0  C006  F07E         	movff	?___flmul+1,efgtoa@l+1
  2539   0013B4  C007  F07F         	movff	?___flmul+2,efgtoa@l+2
  2540   0013B8  C008  F080         	movff	?___flmul+3,efgtoa@l+3
  2541   0013BC                     
  2542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2543   0013BC  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2544   0013C0  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2545   0013C4  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2546   0013C8  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2547   0013CC  C07D  F022         	movff	efgtoa@l,___flge@ff2
  2548   0013D0  C07E  F023         	movff	efgtoa@l+1,___flge@ff2+1
  2549   0013D4  C07F  F024         	movff	efgtoa@l+2,___flge@ff2+2
  2550   0013D8  C080  F025         	movff	efgtoa@l+3,___flge@ff2+3
  2551   0013DC  EC43  F01A         	call	___flge	;wreg free
  2552   0013E0  B0D8               	btfsc	status,0,c
  2553   0013E2  EFF5  F009         	goto	u5941
  2554   0013E6  EFF7  F009         	goto	u5940
  2555   0013EA                     u5941:
  2556   0013EA  EF02  F00A         	goto	l5146
  2557   0013EE                     u5940:
  2558   0013EE                     
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2560   0013EE  0E00               	movlw	0
  2561   0013F0  0100               	movlb	0	; () banked
  2562   0013F2  6F7D               	movwf	efgtoa@l& (0+255),b
  2563   0013F4  0E00               	movlw	0
  2564   0013F6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2565   0013F8  0E00               	movlw	0
  2566   0013FA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2567   0013FC  0E00               	movlw	0
  2568   0013FE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2569                           
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2571   001400  EF2B  F00A         	goto	l5152
  2572   001404                     l5146:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2575   001404  C079  F005         	movff	efgtoa@h,___fleq@ff1
  2576   001408  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  2577   00140C  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  2578   001410  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  2579   001414  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  2580   001418  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  2581   00141C  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  2582   001420  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  2583   001424  ECA9  F01B         	call	___fleq	;wreg free
  2584   001428  A0D8               	btfss	status,0,c
  2585   00142A  EF19  F00A         	goto	u5951
  2586   00142E  EF1B  F00A         	goto	u5950
  2587   001432                     u5951:
  2588   001432  EF2B  F00A         	goto	l5152
  2589   001436                     u5950:
  2590   001436  0100               	movlb	0	; () banked
  2591   001438  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2592   00143A  EF21  F00A         	goto	u5961
  2593   00143E  EF23  F00A         	goto	u5960
  2594   001442                     u5961:
  2595   001442  EF2B  F00A         	goto	l5152
  2596   001446                     u5960:
  2597   001446                     
  2598                           ; BSR set to: 0
  2599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2600   001446  0E00               	movlw	0
  2601   001448  6F7D               	movwf	efgtoa@l& (0+255),b
  2602   00144A  0E00               	movlw	0
  2603   00144C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2604   00144E  0E00               	movlw	0
  2605   001450  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2606   001452  0E00               	movlw	0
  2607   001454  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2608   001456                     l5152:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2611   001456  C082  F005         	movff	efgtoa@g,___fladd@b
  2612   00145A  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  2613   00145E  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  2614   001462  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  2615   001466  C07D  F009         	movff	efgtoa@l,___fladd@a
  2616   00146A  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  2617   00146E  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  2618   001472  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  2619   001476  EC13  F00C         	call	___fladd	;wreg free
  2620   00147A  C005  F079         	movff	?___fladd,efgtoa@h
  2621   00147E  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  2622   001482  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  2623   001486  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  2624   00148A                     
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2626   00148A  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2627   00148E  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2628   001492  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2629   001496  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2630   00149A  0E00               	movlw	0
  2631   00149C  6E09               	movwf	___flmul@a^0,c
  2632   00149E  0E00               	movlw	0
  2633   0014A0  6E0A               	movwf	(___flmul@a+1)^0,c
  2634   0014A2  0E20               	movlw	32
  2635   0014A4  6E0B               	movwf	(___flmul@a+2)^0,c
  2636   0014A6  0E41               	movlw	65
  2637   0014A8  6E0C               	movwf	(___flmul@a+3)^0,c
  2638   0014AA  C073  F005         	movff	efgtoa@ou,___flmul@b
  2639   0014AE  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2640   0014B2  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2641   0014B6  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2642   0014BA  EC73  F00E         	call	___flmul	;wreg free
  2643   0014BE  C005  F022         	movff	?___flmul,___flge@ff2
  2644   0014C2  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2645   0014C6  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2646   0014CA  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2647   0014CE  EC43  F01A         	call	___flge	;wreg free
  2648   0014D2  A0D8               	btfss	status,0,c
  2649   0014D4  EF6E  F00A         	goto	u5971
  2650   0014D8  EF70  F00A         	goto	u5970
  2651   0014DC                     u5971:
  2652   0014DC  EF99  F00A         	goto	l5164
  2653   0014E0                     u5970:
  2654   0014E0                     
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2656   0014E0  0100               	movlb	0	; () banked
  2657   0014E2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2658   0014E4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2659   0014E6                     
  2660                           ; BSR set to: 0
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2662   0014E6  C073  F005         	movff	efgtoa@ou,___flmul@b
  2663   0014EA  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2664   0014EE  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2665   0014F2  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2666   0014F6  0E00               	movlw	0
  2667   0014F8  6E09               	movwf	___flmul@a^0,c
  2668   0014FA  0E00               	movlw	0
  2669   0014FC  6E0A               	movwf	(___flmul@a+1)^0,c
  2670   0014FE  0E20               	movlw	32
  2671   001500  6E0B               	movwf	(___flmul@a+2)^0,c
  2672   001502  0E41               	movlw	65
  2673   001504  6E0C               	movwf	(___flmul@a+3)^0,c
  2674   001506  EC73  F00E         	call	___flmul	;wreg free
  2675   00150A  C005  F073         	movff	?___flmul,efgtoa@ou
  2676   00150E  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2677   001512  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2678   001516  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2679   00151A                     
  2680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2681   00151A  0E66               	movlw	102
  2682   00151C  0100               	movlb	0	; () banked
  2683   00151E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2684   001520  A4D8               	btfss	status,2,c
  2685   001522  EF95  F00A         	goto	u5981
  2686   001526  EF97  F00A         	goto	u5980
  2687   00152A                     u5981:
  2688   00152A  EF99  F00A         	goto	l5164
  2689   00152E                     u5980:
  2690   00152E                     
  2691                           ; BSR set to: 0
  2692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2693   00152E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2694   001530  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2695   001532                     l5164:
  2696                           
  2697                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2698   001532  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2699   001536  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2700   00153A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2701   00153E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2702   001542                     
  2703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2704   001542  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2705   001546  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2706   00154A                     
  2707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2708   00154A  0E00               	movlw	0
  2709   00154C  0100               	movlb	0	; () banked
  2710   00154E  6F68               	movwf	efgtoa@pp& (0+255),b
  2711   001550                     
  2712                           ; BSR set to: 0
  2713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2714   001550  0E00               	movlw	0
  2715   001552  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2716   001554  0E00               	movlw	0
  2717   001556  6F64               	movwf	efgtoa@t& (0+255),b
  2718   001558                     
  2719                           ; BSR set to: 0
  2720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2721   001558  0E00               	movlw	0
  2722   00155A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2723   00155C  0E00               	movlw	0
  2724   00155E  6F77               	movwf	efgtoa@i& (0+255),b
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2727   001560  EF97  F00B         	goto	l5214
  2728   001564                     l5174:
  2729                           
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2732   001564  C079  F005         	movff	efgtoa@h,___fldiv@b
  2733   001568  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2734   00156C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2735   001570  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2736   001574  C088  F009         	movff	efgtoa@u,___fldiv@a
  2737   001578  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2738   00157C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2739   001580  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2740   001584  EC88  F010         	call	___fldiv	;wreg free
  2741   001588  C005  F01E         	movff	?___fldiv,floorf@x
  2742   00158C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2743   001590  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2744   001594  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2745   001598  EC17  F015         	call	_floorf	;wreg free
  2746   00159C  C01E  F07D         	movff	?_floorf,efgtoa@l
  2747   0015A0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2748   0015A4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2749   0015A8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2750                           
  2751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2752   0015AC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2753   0015B0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2754   0015B4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2755   0015B8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2756   0015BC  ECC0  F019         	call	___fltol	;wreg free
  2757   0015C0  BE06               	btfsc	(?___fltol+1)^0,7,c
  2758   0015C2  EFEE  F00A         	goto	u5990
  2759   0015C6  5006               	movf	(?___fltol+1)^0,w,c
  2760   0015C8  E107               	bnz	u5991
  2761   0015CA  0E0A               	movlw	10
  2762   0015CC  5C05               	subwf	?___fltol^0,w,c
  2763   0015CE  B0D8               	btfsc	status,0,c
  2764   0015D0  EFEC  F00A         	goto	u5991
  2765   0015D4  EFEE  F00A         	goto	u5990
  2766   0015D8                     u5991:
  2767   0015D8  EFFE  F00A         	goto	l5178
  2768   0015DC                     u5990:
  2769   0015DC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2770   0015E0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2771   0015E4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2772   0015E8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2773   0015EC  ECC0  F019         	call	___fltol	;wreg free
  2774   0015F0  C005  F06B         	movff	?___fltol,efgtoa@d
  2775   0015F4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2776   0015F8  EF03  F00B         	goto	l1072
  2777   0015FC                     l5178:
  2778   0015FC  0E00               	movlw	0
  2779   0015FE  0100               	movlb	0	; () banked
  2780   001600  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2781   001602  0E09               	movlw	9
  2782   001604  6F6B               	movwf	efgtoa@d& (0+255),b
  2783   001606                     l1072:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2786   001606  0100               	movlb	0	; () banked
  2787   001608  5168               	movf	efgtoa@pp& (0+255),w,b
  2788   00160A  A4D8               	btfss	status,2,c
  2789   00160C  EF0A  F00B         	goto	u6001
  2790   001610  EF0C  F00B         	goto	u6000
  2791   001614                     u6001:
  2792   001614  EF34  F00B         	goto	l5198
  2793   001618                     u6000:
  2794   001618                     
  2795                           ; BSR set to: 0
  2796   001618  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2797   00161A  EF13  F00B         	goto	u6010
  2798   00161E  EF11  F00B         	goto	u6011
  2799   001622                     u6011:
  2800   001622  EF34  F00B         	goto	l5198
  2801   001626                     u6010:
  2802   001626                     
  2803                           ; BSR set to: 0
  2804                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2805   001626  0E50               	movlw	low _dbuf
  2806   001628  2586               	addwf	efgtoa@n& (0+255),w,b
  2807   00162A  6ED9               	movwf	fsr2l,c
  2808   00162C  0E01               	movlw	high _dbuf
  2809   00162E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2810   001630  6EDA               	movwf	fsr2h,c
  2811   001632  0E2E               	movlw	46
  2812   001634  6EDF               	movwf	indf2,c
  2813   001636                     
  2814                           ; BSR set to: 0
  2815   001636  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2816   001638  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2817   00163A                     
  2818                           ; BSR set to: 0
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2820   00163A  0771               	decf	efgtoa@w& (0+255),f,b
  2821   00163C  A0D8               	btfss	status,0,c
  2822   00163E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2823   001640                     
  2824                           ; BSR set to: 0
  2825                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2826   001640  0E01               	movlw	1
  2827   001642  6F68               	movwf	efgtoa@pp& (0+255),b
  2828   001644  EF34  F00B         	goto	l5198
  2829   001648                     l5190:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2833   001648  0E50               	movlw	low _dbuf
  2834   00164A  2586               	addwf	efgtoa@n& (0+255),w,b
  2835   00164C  6ED9               	movwf	fsr2l,c
  2836   00164E  0E01               	movlw	high _dbuf
  2837   001650  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2838   001652  6EDA               	movwf	fsr2h,c
  2839   001654  0E30               	movlw	48
  2840   001656  6EDF               	movwf	indf2,c
  2841   001658                     
  2842                           ; BSR set to: 0
  2843   001658  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2844   00165A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2845   00165C                     
  2846                           ; BSR set to: 0
  2847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2848   00165C  0771               	decf	efgtoa@w& (0+255),f,b
  2849   00165E  A0D8               	btfss	status,0,c
  2850   001660  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2851   001662                     
  2852                           ; BSR set to: 0
  2853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2854   001662  0764               	decf	efgtoa@t& (0+255),f,b
  2855   001664  A0D8               	btfss	status,0,c
  2856   001666  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2857   001668                     l5198:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2861   001668  5164               	movf	efgtoa@t& (0+255),w,b
  2862   00166A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2863   00166C  A4D8               	btfss	status,2,c
  2864   00166E  EF3B  F00B         	goto	u6021
  2865   001672  EF3D  F00B         	goto	u6020
  2866   001676                     u6021:
  2867   001676  EF24  F00B         	goto	l5190
  2868   00167A                     u6020:
  2869   00167A                     
  2870                           ; BSR set to: 0
  2871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2872   00167A  0E50               	movlw	low _dbuf
  2873   00167C  2586               	addwf	efgtoa@n& (0+255),w,b
  2874   00167E  6ED9               	movwf	fsr2l,c
  2875   001680  0E01               	movlw	high _dbuf
  2876   001682  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2877   001684  6EDA               	movwf	fsr2h,c
  2878   001686  516B               	movf	efgtoa@d& (0+255),w,b
  2879   001688  0F30               	addlw	48
  2880   00168A  6EDF               	movwf	indf2,c
  2881   00168C                     
  2882                           ; BSR set to: 0
  2883   00168C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2884   00168E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2885   001690                     
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2888   001690  0771               	decf	efgtoa@w& (0+255),f,b
  2889   001692  A0D8               	btfss	status,0,c
  2890   001694  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2891   001696                     
  2892                           ; BSR set to: 0
  2893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2894   001696  C079  F01E         	movff	efgtoa@h,___flsub@b
  2895   00169A  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2896   00169E  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2897   0016A2  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2898   0016A6  C07D  F009         	movff	efgtoa@l,___flmul@a
  2899   0016AA  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2900   0016AE  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2901   0016B2  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2902   0016B6  C088  F005         	movff	efgtoa@u,___flmul@b
  2903   0016BA  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2904   0016BE  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2905   0016C2  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2906   0016C6  EC73  F00E         	call	___flmul	;wreg free
  2907   0016CA  C005  F022         	movff	?___flmul,___flsub@a
  2908   0016CE  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2909   0016D2  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2910   0016D6  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2911   0016DA  ECB8  F01D         	call	___flsub	;wreg free
  2912   0016DE  C01E  F079         	movff	?___flsub,efgtoa@h
  2913   0016E2  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2914   0016E6  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2915   0016EA  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2916   0016EE                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2918   0016EE  C088  F005         	movff	efgtoa@u,___fldiv@b
  2919   0016F2  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2920   0016F6  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2921   0016FA  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2922   0016FE  0E00               	movlw	0
  2923   001700  6E09               	movwf	___fldiv@a^0,c
  2924   001702  0E00               	movlw	0
  2925   001704  6E0A               	movwf	(___fldiv@a+1)^0,c
  2926   001706  0E20               	movlw	32
  2927   001708  6E0B               	movwf	(___fldiv@a+2)^0,c
  2928   00170A  0E41               	movlw	65
  2929   00170C  6E0C               	movwf	(___fldiv@a+3)^0,c
  2930   00170E  EC88  F010         	call	___fldiv	;wreg free
  2931   001712  C005  F088         	movff	?___fldiv,efgtoa@u
  2932   001716  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2933   00171A  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2934   00171E  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2935   001722                     
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2937   001722  0100               	movlb	0	; () banked
  2938   001724  0760               	decf	efgtoa@ne& (0+255),f,b
  2939   001726  A0D8               	btfss	status,0,c
  2940   001728  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2941   00172A                     
  2942                           ; BSR set to: 0
  2943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2944   00172A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2945   00172C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2946   00172E                     l5214:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2950   00172E  516D               	movf	efgtoa@m& (0+255),w,b
  2951   001730  5D77               	subwf	efgtoa@i& (0+255),w,b
  2952   001732  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2953   001734  0A80               	xorlw	128
  2954   001736  6E39               	movwf	??_efgtoa^0,c
  2955   001738  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2956   00173A  0A80               	xorlw	128
  2957   00173C  5839               	subwfb	??_efgtoa^0,w,c
  2958   00173E  B0D8               	btfsc	status,0,c
  2959   001740  EFA4  F00B         	goto	u6031
  2960   001744  EFA6  F00B         	goto	u6030
  2961   001748                     u6031:
  2962   001748  EFB4  F00B         	goto	l5218
  2963   00174C                     u6030:
  2964   00174C                     
  2965                           ; BSR set to: 0
  2966   00174C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2967   00174E  EFB2  F00B         	goto	u6041
  2968   001752  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2969   001754  E109               	bnz	u6040
  2970   001756  0E4B               	movlw	75
  2971   001758  5D86               	subwf	efgtoa@n& (0+255),w,b
  2972   00175A  A0D8               	btfss	status,0,c
  2973   00175C  EFB2  F00B         	goto	u6041
  2974   001760  EFB4  F00B         	goto	u6040
  2975   001764                     u6041:
  2976   001764  EFB2  F00A         	goto	l5174
  2977   001768                     u6040:
  2978   001768                     l5218:
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2982   001768  0E00               	movlw	0
  2983   00176A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2984   00176C  0E4F               	movlw	79
  2985   00176E  6F77               	movwf	efgtoa@i& (0+255),b
  2986   001770                     
  2987                           ; BSR set to: 0
  2988                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2989   001770  0E50               	movlw	low _dbuf
  2990   001772  2577               	addwf	efgtoa@i& (0+255),w,b
  2991   001774  6ED9               	movwf	fsr2l,c
  2992   001776  0E01               	movlw	high _dbuf
  2993   001778  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2994   00177A  6EDA               	movwf	fsr2h,c
  2995   00177C  0E00               	movlw	0
  2996   00177E  6EDF               	movwf	indf2,c
  2997   001780                     
  2998                           ; BSR set to: 0
  2999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3000   001780  0E50               	movlw	low _dbuf
  3001   001782  6E39               	movwf	??_efgtoa^0,c
  3002   001784  0E01               	movlw	high _dbuf
  3003   001786  6E3A               	movwf	(??_efgtoa+1)^0,c
  3004   001788  5186               	movf	efgtoa@n& (0+255),w,b
  3005   00178A  5E39               	subwf	??_efgtoa^0,f,c
  3006   00178C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3007   00178E  5A3A               	subwfb	(??_efgtoa+1)^0,f,c
  3008   001790  5177               	movf	efgtoa@i& (0+255),w,b
  3009   001792  2439               	addwf	??_efgtoa^0,w,c
  3010   001794  6E05               	movwf	memcpy@d1^0,c
  3011   001796  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3012   001798  203A               	addwfc	(??_efgtoa+1)^0,w,c
  3013   00179A  6E06               	movwf	(memcpy@d1+1)^0,c
  3014   00179C  0E50               	movlw	low _dbuf
  3015   00179E  6E07               	movwf	memcpy@s1^0,c
  3016   0017A0  0E01               	movlw	high _dbuf
  3017   0017A2  6E08               	movwf	(memcpy@s1+1)^0,c
  3018   0017A4  C086  F009         	movff	efgtoa@n,memcpy@n
  3019   0017A8  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  3020   0017AC  ECF0  F01C         	call	_memcpy	;wreg free
  3021   0017B0                     
  3022                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3023   0017B0  0100               	movlb	0	; () banked
  3024   0017B2  5186               	movf	efgtoa@n& (0+255),w,b
  3025   0017B4  5D77               	subwf	efgtoa@i& (0+255),w,b
  3026   0017B6  6F86               	movwf	efgtoa@n& (0+255),b
  3027   0017B8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  3028   0017BA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3029   0017BC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3030   0017BE                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3033   0017BE  5181               	movf	efgtoa@sign& (0+255),w,b
  3034   0017C0  A4D8               	btfss	status,2,c
  3035   0017C2  EFE5  F00B         	goto	u6051
  3036   0017C6  EFE8  F00B         	goto	u6050
  3037   0017CA                     u6051:
  3038   0017CA  0E01               	movlw	1
  3039   0017CC  EFE9  F00B         	goto	u6060
  3040   0017D0                     u6050:
  3041   0017D0  0E00               	movlw	0
  3042   0017D2                     u6060:
  3043   0017D2  6F77               	movwf	efgtoa@i& (0+255),b
  3044   0017D4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3045   0017D6                     
  3046                           ; BSR set to: 0
  3047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3048   0017D6  5181               	movf	efgtoa@sign& (0+255),w,b
  3049   0017D8  B4D8               	btfsc	status,2,c
  3050   0017DA  EFF1  F00B         	goto	u6071
  3051   0017DE  EFF3  F00B         	goto	u6070
  3052   0017E2                     u6071:
  3053   0017E2  EFFE  F00B         	goto	l5232
  3054   0017E6                     u6070:
  3055   0017E6                     
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3058   0017E6  0786               	decf	efgtoa@n& (0+255),f,b
  3059   0017E8  A0D8               	btfss	status,0,c
  3060   0017EA  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  3061   0017EC  0E50               	movlw	low _dbuf
  3062   0017EE  2586               	addwf	efgtoa@n& (0+255),w,b
  3063   0017F0  6ED9               	movwf	fsr2l,c
  3064   0017F2  0E01               	movlw	high _dbuf
  3065   0017F4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3066   0017F6  6EDA               	movwf	fsr2h,c
  3067   0017F8  C081  FFDF         	movff	efgtoa@sign,indf2
  3068   0017FC                     l5232:
  3069                           
  3070                           ; BSR set to: 0
  3071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3072   0017FC  5177               	movf	efgtoa@i& (0+255),w,b
  3073   0017FE  5F71               	subwf	efgtoa@w& (0+255),f,b
  3074   001800  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3075   001802  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3076   001804                     
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3079   001804  C032  F015         	movff	efgtoa@fp,pad@fp
  3080   001808  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  3081   00180C  0E50               	movlw	low _dbuf
  3082   00180E  2586               	addwf	efgtoa@n& (0+255),w,b
  3083   001810  6E17               	movwf	pad@buf^0,c
  3084   001812  0E01               	movlw	high _dbuf
  3085   001814  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3086   001816  6E18               	movwf	(pad@buf+1)^0,c
  3087   001818  C071  F019         	movff	efgtoa@w,pad@p
  3088   00181C  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  3089   001820  ECFE  F01B         	call	_pad	;wreg free
  3090   001824                     l1039:
  3091   001824  0012               	return		;funcret
  3092   001826                     __end_of_efgtoa:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _strcpy *****************
  3096 ;; Defined at:
  3097 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3100 ;;		 -> dbuf(80), 
  3101 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3102 ;;		 -> STR_5(4), STR_2(4), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  d               2   10[COMRAM] PTR unsigned char 
  3105 ;;		 -> dbuf(80), 
  3106 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3107 ;;		 -> STR_5(4), STR_2(4), 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  2    4[COMRAM] PTR unsigned char 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3121 ;;Total ram usage:        8 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 2
  3124 ;; This function calls:
  3125 ;;		Nothing
  3126 ;; This function is called by:
  3127 ;;		_efgtoa
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text5
  3132   003BB6                     __ptext5:
  3133                           	callstack 0
  3134   003BB6                     _strcpy:
  3135                           	callstack 24
  3136   003BB6  C007  F009         	movff	strcpy@src,strcpy@s
  3137   003BBA  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3138   003BBE  C005  F00B         	movff	strcpy@dest,strcpy@d
  3139   003BC2  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3140   003BC6                     l4918:
  3141   003BC6  C009  FFF6         	movff	strcpy@s,tblptrl
  3142   003BCA  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3143   003BCE  4A09               	infsnz	strcpy@s^0,f,c
  3144   003BD0  2A0A               	incf	(strcpy@s+1)^0,f,c
  3145   003BD2                     	if	0	;tblptru may be non-zero
  3146   003BD2                     	endif
  3147   003BD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3148   003BD2  0E00               	movlw	low (__mediumconst shr (0+16))
  3149   003BD4  6EF8               	movwf	tblptru,c
  3150   003BD6                     	endif
  3151   003BD6  C00B  FFD9         	movff	strcpy@d,fsr2l
  3152   003BDA  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3153   003BDE  4A0B               	infsnz	strcpy@d^0,f,c
  3154   003BE0  2A0C               	incf	(strcpy@d+1)^0,f,c
  3155   003BE2  0008               	tblrd		*
  3156   003BE4  CFF5 FFDF          	movff	tablat,indf2
  3157   003BE8  50DF               	movf	indf2,w,c
  3158   003BEA  A4D8               	btfss	status,2,c
  3159   003BEC  EFFA  F01D         	goto	u5531
  3160   003BF0  EFFC  F01D         	goto	u5530
  3161   003BF4                     u5531:
  3162   003BF4  EFE3  F01D         	goto	l4918
  3163   003BF8                     u5530:
  3164   003BF8  0012               	return		;funcret
  3165   003BFA                     __end_of_strcpy:
  3166                           	callstack 0
  3167                           
  3168 ;; *************** function _memcpy *****************
  3169 ;; Defined at:
  3170 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;  d1              2    4[COMRAM] PTR void 
  3173 ;;		 -> dbuf(80), 
  3174 ;;  s1              2    6[COMRAM] PTR const void 
  3175 ;;		 -> dbuf(80), 
  3176 ;;  n               2    8[COMRAM] unsigned int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3179 ;;		 -> dbuf(80), 
  3180 ;;  d               2   11[COMRAM] PTR unsigned char 
  3181 ;;		 -> dbuf(80), 
  3182 ;;  tmp             1   10[COMRAM] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  2    4[COMRAM] PTR void 
  3185 ;; Registers used:
  3186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3192 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3193 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3195 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;Total ram usage:       11 bytes
  3197 ;; Hardware stack levels used: 1
  3198 ;; Hardware stack levels required when called: 2
  3199 ;; This function calls:
  3200 ;;		Nothing
  3201 ;; This function is called by:
  3202 ;;		_efgtoa
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text6
  3207   0039E0                     __ptext6:
  3208                           	callstack 0
  3209   0039E0                     _memcpy:
  3210                           	callstack 24
  3211   0039E0  C007  F00E         	movff	memcpy@s1,memcpy@s
  3212   0039E4  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  3213   0039E8  C005  F00C         	movff	memcpy@d1,memcpy@d
  3214   0039EC  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  3215   0039F0  EF0A  F01D         	goto	l4962
  3216   0039F4                     l4954:
  3217   0039F4  C00E  FFD9         	movff	memcpy@s,fsr2l
  3218   0039F8  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  3219   0039FC  50DF               	movf	indf2,w,c
  3220   0039FE  6E0B               	movwf	memcpy@tmp^0,c
  3221   003A00  4A0E               	infsnz	memcpy@s^0,f,c
  3222   003A02  2A0F               	incf	(memcpy@s+1)^0,f,c
  3223   003A04  C00C  FFD9         	movff	memcpy@d,fsr2l
  3224   003A08  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  3225   003A0C  C00B  FFDF         	movff	memcpy@tmp,indf2
  3226   003A10  4A0C               	infsnz	memcpy@d^0,f,c
  3227   003A12  2A0D               	incf	(memcpy@d+1)^0,f,c
  3228   003A14                     l4962:
  3229   003A14  0609               	decf	memcpy@n^0,f,c
  3230   003A16  A0D8               	btfss	status,0,c
  3231   003A18  060A               	decf	(memcpy@n+1)^0,f,c
  3232   003A1A  2809               	incf	memcpy@n^0,w,c
  3233   003A1C  E106               	bnz	u5651
  3234   003A1E  280A               	incf	(memcpy@n+1)^0,w,c
  3235   003A20  A4D8               	btfss	status,2,c
  3236   003A22  EF15  F01D         	goto	u5651
  3237   003A26  EF17  F01D         	goto	u5650
  3238   003A2A                     u5651:
  3239   003A2A  EFFA  F01C         	goto	l4954
  3240   003A2E                     u5650:
  3241   003A2E  0012               	return		;funcret
  3242   003A30                     __end_of_memcpy:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _labs *****************
  3246 ;; Defined at:
  3247 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  a               4    4[COMRAM] long 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  4    4[COMRAM] long 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;Total ram usage:        8 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 2
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_efgtoa
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text7
  3276   003876                     __ptext7:
  3277                           	callstack 0
  3278   003876                     _labs:
  3279                           	callstack 24
  3280   003876  BE08               	btfsc	(labs@a+3)^0,7,c
  3281   003878  EF4A  F01C         	goto	u5540
  3282   00387C  5008               	movf	(labs@a+3)^0,w,c
  3283   00387E  1007               	iorwf	(labs@a+2)^0,w,c
  3284   003880  1006               	iorwf	(labs@a+1)^0,w,c
  3285   003882  E106               	bnz	u5541
  3286   003884  0405               	decf	labs@a^0,w,c
  3287   003886  B0D8               	btfsc	status,0,c
  3288   003888  EF48  F01C         	goto	u5541
  3289   00388C  EF4A  F01C         	goto	u5540
  3290   003890                     u5541:
  3291   003890  EF65  F01C         	goto	l1144
  3292   003894                     u5540:
  3293   003894  C005  F009         	movff	labs@a,??_labs
  3294   003898  C006  F00A         	movff	labs@a+1,??_labs+1
  3295   00389C  C007  F00B         	movff	labs@a+2,??_labs+2
  3296   0038A0  C008  F00C         	movff	labs@a+3,??_labs+3
  3297   0038A4  1E09               	comf	??_labs^0,f,c
  3298   0038A6  1E0A               	comf	(??_labs+1)^0,f,c
  3299   0038A8  1E0B               	comf	(??_labs+2)^0,f,c
  3300   0038AA  1E0C               	comf	(??_labs+3)^0,f,c
  3301   0038AC  2A09               	incf	??_labs^0,f,c
  3302   0038AE  0E00               	movlw	0
  3303   0038B0  220A               	addwfc	(??_labs+1)^0,f,c
  3304   0038B2  220B               	addwfc	(??_labs+2)^0,f,c
  3305   0038B4  220C               	addwfc	(??_labs+3)^0,f,c
  3306   0038B6  C009  F005         	movff	??_labs,?_labs
  3307   0038BA  C00A  F006         	movff	??_labs+1,?_labs+1
  3308   0038BE  C00B  F007         	movff	??_labs+2,?_labs+2
  3309   0038C2  C00C  F008         	movff	??_labs+3,?_labs+3
  3310   0038C6  EF6D  F01C         	goto	l1147
  3311   0038CA                     l1144:
  3312   0038CA  C005  F005         	movff	labs@a,?_labs
  3313   0038CE  C006  F006         	movff	labs@a+1,?_labs+1
  3314   0038D2  C007  F007         	movff	labs@a+2,?_labs+2
  3315   0038D6  C008  F008         	movff	labs@a+3,?_labs+3
  3316   0038DA                     l1147:
  3317   0038DA  0012               	return		;funcret
  3318   0038DC                     __end_of_labs:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _floorf *****************
  3322 ;; Defined at:
  3323 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;  x               4   29[COMRAM] float 
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  u               4   45[COMRAM] struct .
  3328 ;;  m               4   39[COMRAM] unsigned long 
  3329 ;;  e               2   43[COMRAM] int 
  3330 ;; Return value:  Size  Location     Type
  3331 ;;                  4   29[COMRAM] float 
  3332 ;; Registers used:
  3333 ;;		wreg, status,2, status,0
  3334 ;; Tracked objects:
  3335 ;;		On entry : 0/0
  3336 ;;		On exit  : 0/0
  3337 ;;		Unchanged: 0/0
  3338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3339 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3340 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3341 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3342 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3343 ;;Total ram usage:       20 bytes
  3344 ;; Hardware stack levels used: 1
  3345 ;; Hardware stack levels required when called: 2
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_efgtoa
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353                           	psect	text8
  3354   002A2E                     __ptext8:
  3355                           	callstack 0
  3356   002A2E                     _floorf:
  3357                           	callstack 24
  3358   002A2E  C0E7  F02E         	movff	floorf@F526,floorf@u
  3359   002A32  C0E8  F02F         	movff	floorf@F526+1,floorf@u+1
  3360   002A36  C0E9  F030         	movff	floorf@F526+2,floorf@u+2
  3361   002A3A  C0EA  F031         	movff	floorf@F526+3,floorf@u+3
  3362   002A3E  C01E  F02E         	movff	floorf@x,floorf@u
  3363   002A42  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  3364   002A46  C020  F030         	movff	floorf@x+2,floorf@u+2
  3365   002A4A  C021  F031         	movff	floorf@x+3,floorf@u+3
  3366   002A4E  0E81               	movlw	129
  3367   002A50  6E22               	movwf	??_floorf^0,c
  3368   002A52  0EFF               	movlw	255
  3369   002A54  6E23               	movwf	(??_floorf+1)^0,c
  3370   002A56  C02E  F024         	movff	floorf@u,??_floorf+2
  3371   002A5A  C02F  F025         	movff	floorf@u+1,??_floorf+3
  3372   002A5E  C030  F026         	movff	floorf@u+2,??_floorf+4
  3373   002A62  C031  F027         	movff	floorf@u+3,??_floorf+5
  3374   002A66  0E18               	movlw	24
  3375   002A68  EF3B  F015         	goto	u5550
  3376   002A6C                     u5555:
  3377   002A6C  90D8               	bcf	status,0,c
  3378   002A6E  3227               	rrcf	(??_floorf+5)^0,f,c
  3379   002A70  3226               	rrcf	(??_floorf+4)^0,f,c
  3380   002A72  3225               	rrcf	(??_floorf+3)^0,f,c
  3381   002A74  3224               	rrcf	(??_floorf+2)^0,f,c
  3382   002A76                     u5550:
  3383   002A76  2EE8               	decfsz	wreg,f,c
  3384   002A78  EF36  F015         	goto	u5555
  3385   002A7C  5024               	movf	(??_floorf+2)^0,w,c
  3386   002A7E  2422               	addwf	??_floorf^0,w,c
  3387   002A80  6E2C               	movwf	floorf@e^0,c
  3388   002A82  0E00               	movlw	0
  3389   002A84  2023               	addwfc	(??_floorf+1)^0,w,c
  3390   002A86  6E2D               	movwf	(floorf@e+1)^0,c
  3391   002A88  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3392   002A8A  EF50  F015         	goto	u5561
  3393   002A8E  502D               	movf	(floorf@e+1)^0,w,c
  3394   002A90  E109               	bnz	u5560
  3395   002A92  0E17               	movlw	23
  3396   002A94  5C2C               	subwf	floorf@e^0,w,c
  3397   002A96  A0D8               	btfss	status,0,c
  3398   002A98  EF50  F015         	goto	u5561
  3399   002A9C  EF52  F015         	goto	u5560
  3400   002AA0                     u5561:
  3401   002AA0  EF5C  F015         	goto	l4930
  3402   002AA4                     u5560:
  3403   002AA4                     l4928:
  3404   002AA4  C01E  F01E         	movff	floorf@x,?_floorf
  3405   002AA8  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  3406   002AAC  C020  F020         	movff	floorf@x+2,?_floorf+2
  3407   002AB0  C021  F021         	movff	floorf@x+3,?_floorf+3
  3408   002AB4  EF1F  F016         	goto	l1133
  3409   002AB8                     l4930:
  3410   002AB8  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3411   002ABA  EF61  F015         	goto	u5571
  3412   002ABE  EF63  F015         	goto	u5570
  3413   002AC2                     u5571:
  3414   002AC2  EFD3  F015         	goto	l4940
  3415   002AC6                     u5570:
  3416   002AC6  C02C  F022         	movff	floorf@e,??_floorf
  3417   002ACA  0EFF               	movlw	255
  3418   002ACC  6E23               	movwf	(??_floorf+1)^0,c
  3419   002ACE  0EFF               	movlw	255
  3420   002AD0  6E24               	movwf	(??_floorf+2)^0,c
  3421   002AD2  0E7F               	movlw	127
  3422   002AD4  6E25               	movwf	(??_floorf+3)^0,c
  3423   002AD6  0E00               	movlw	0
  3424   002AD8  6E26               	movwf	(??_floorf+4)^0,c
  3425   002ADA                     u5585:
  3426   002ADA  6622               	tstfsz	??_floorf^0,c
  3427   002ADC  EF72  F015         	goto	u5586
  3428   002AE0  EF7A  F015         	goto	u5587
  3429   002AE4                     u5586:
  3430   002AE4  3426               	rlcf	(??_floorf+4)^0,w,c
  3431   002AE6  3226               	rrcf	(??_floorf+4)^0,f,c
  3432   002AE8  3225               	rrcf	(??_floorf+3)^0,f,c
  3433   002AEA  3224               	rrcf	(??_floorf+2)^0,f,c
  3434   002AEC  3223               	rrcf	(??_floorf+1)^0,f,c
  3435   002AEE  2E22               	decfsz	??_floorf^0,f,c
  3436   002AF0  EF6D  F015         	goto	u5585
  3437   002AF4                     u5587:
  3438   002AF4  C023  F028         	movff	??_floorf+1,floorf@m
  3439   002AF8  C024  F029         	movff	??_floorf+2,floorf@m+1
  3440   002AFC  C025  F02A         	movff	??_floorf+3,floorf@m+2
  3441   002B00  C026  F02B         	movff	??_floorf+4,floorf@m+3
  3442   002B04  5028               	movf	floorf@m^0,w,c
  3443   002B06  142E               	andwf	floorf@u^0,w,c
  3444   002B08  6E22               	movwf	??_floorf^0,c
  3445   002B0A  5029               	movf	(floorf@m+1)^0,w,c
  3446   002B0C  142F               	andwf	(floorf@u+1)^0,w,c
  3447   002B0E  6E23               	movwf	(??_floorf+1)^0,c
  3448   002B10  502A               	movf	(floorf@m+2)^0,w,c
  3449   002B12  1430               	andwf	(floorf@u+2)^0,w,c
  3450   002B14  6E24               	movwf	(??_floorf+2)^0,c
  3451   002B16  502B               	movf	(floorf@m+3)^0,w,c
  3452   002B18  1431               	andwf	(floorf@u+3)^0,w,c
  3453   002B1A  6E25               	movwf	(??_floorf+3)^0,c
  3454   002B1C  5022               	movf	??_floorf^0,w,c
  3455   002B1E  1023               	iorwf	(??_floorf+1)^0,w,c
  3456   002B20  1024               	iorwf	(??_floorf+2)^0,w,c
  3457   002B22  1025               	iorwf	(??_floorf+3)^0,w,c
  3458   002B24  A4D8               	btfss	status,2,c
  3459   002B26  EF97  F015         	goto	u5591
  3460   002B2A  EF99  F015         	goto	u5590
  3461   002B2E                     u5591:
  3462   002B2E  EF9B  F015         	goto	l4936
  3463   002B32                     u5590:
  3464   002B32  EF52  F015         	goto	l4928
  3465   002B36                     l4936:
  3466   002B36  C02E  F022         	movff	floorf@u,??_floorf
  3467   002B3A  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3468   002B3E  C030  F024         	movff	floorf@u+2,??_floorf+2
  3469   002B42  C031  F025         	movff	floorf@u+3,??_floorf+3
  3470   002B46  0E20               	movlw	32
  3471   002B48  EFAB  F015         	goto	u5600
  3472   002B4C                     u5605:
  3473   002B4C  90D8               	bcf	status,0,c
  3474   002B4E  3225               	rrcf	(??_floorf+3)^0,f,c
  3475   002B50  3224               	rrcf	(??_floorf+2)^0,f,c
  3476   002B52  3223               	rrcf	(??_floorf+1)^0,f,c
  3477   002B54  3222               	rrcf	??_floorf^0,f,c
  3478   002B56                     u5600:
  3479   002B56  2EE8               	decfsz	wreg,f,c
  3480   002B58  EFA6  F015         	goto	u5605
  3481   002B5C  5022               	movf	??_floorf^0,w,c
  3482   002B5E  1023               	iorwf	(??_floorf+1)^0,w,c
  3483   002B60  1024               	iorwf	(??_floorf+2)^0,w,c
  3484   002B62  1025               	iorwf	(??_floorf+3)^0,w,c
  3485   002B64  B4D8               	btfsc	status,2,c
  3486   002B66  EFB7  F015         	goto	u5611
  3487   002B6A  EFB9  F015         	goto	u5610
  3488   002B6E                     u5611:
  3489   002B6E  EFC1  F015         	goto	l1136
  3490   002B72                     u5610:
  3491   002B72  5028               	movf	floorf@m^0,w,c
  3492   002B74  262E               	addwf	floorf@u^0,f,c
  3493   002B76  5029               	movf	(floorf@m+1)^0,w,c
  3494   002B78  222F               	addwfc	(floorf@u+1)^0,f,c
  3495   002B7A  502A               	movf	(floorf@m+2)^0,w,c
  3496   002B7C  2230               	addwfc	(floorf@u+2)^0,f,c
  3497   002B7E  502B               	movf	(floorf@m+3)^0,w,c
  3498   002B80  2231               	addwfc	(floorf@u+3)^0,f,c
  3499   002B82                     l1136:
  3500   002B82  1C28               	comf	floorf@m^0,w,c
  3501   002B84  6E22               	movwf	??_floorf^0,c
  3502   002B86  1C29               	comf	(floorf@m+1)^0,w,c
  3503   002B88  6E23               	movwf	(??_floorf+1)^0,c
  3504   002B8A  1C2A               	comf	(floorf@m+2)^0,w,c
  3505   002B8C  6E24               	movwf	(??_floorf+2)^0,c
  3506   002B8E  1C2B               	comf	(floorf@m+3)^0,w,c
  3507   002B90  6E25               	movwf	(??_floorf+3)^0,c
  3508   002B92  5022               	movf	??_floorf^0,w,c
  3509   002B94  162E               	andwf	floorf@u^0,f,c
  3510   002B96  5023               	movf	(??_floorf+1)^0,w,c
  3511   002B98  162F               	andwf	(floorf@u+1)^0,f,c
  3512   002B9A  5024               	movf	(??_floorf+2)^0,w,c
  3513   002B9C  1630               	andwf	(floorf@u+2)^0,f,c
  3514   002B9E  5025               	movf	(??_floorf+3)^0,w,c
  3515   002BA0  1631               	andwf	(floorf@u+3)^0,f,c
  3516   002BA2  EF17  F016         	goto	l4948
  3517   002BA6                     l4940:
  3518   002BA6  C02E  F022         	movff	floorf@u,??_floorf
  3519   002BAA  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3520   002BAE  C030  F024         	movff	floorf@u+2,??_floorf+2
  3521   002BB2  C031  F025         	movff	floorf@u+3,??_floorf+3
  3522   002BB6  0E20               	movlw	32
  3523   002BB8  EFE3  F015         	goto	u5620
  3524   002BBC                     u5625:
  3525   002BBC  90D8               	bcf	status,0,c
  3526   002BBE  3225               	rrcf	(??_floorf+3)^0,f,c
  3527   002BC0  3224               	rrcf	(??_floorf+2)^0,f,c
  3528   002BC2  3223               	rrcf	(??_floorf+1)^0,f,c
  3529   002BC4  3222               	rrcf	??_floorf^0,f,c
  3530   002BC6                     u5620:
  3531   002BC6  2EE8               	decfsz	wreg,f,c
  3532   002BC8  EFDE  F015         	goto	u5625
  3533   002BCC  5022               	movf	??_floorf^0,w,c
  3534   002BCE  1023               	iorwf	(??_floorf+1)^0,w,c
  3535   002BD0  1024               	iorwf	(??_floorf+2)^0,w,c
  3536   002BD2  1025               	iorwf	(??_floorf+3)^0,w,c
  3537   002BD4  A4D8               	btfss	status,2,c
  3538   002BD6  EFEF  F015         	goto	u5631
  3539   002BDA  EFF1  F015         	goto	u5630
  3540   002BDE                     u5631:
  3541   002BDE  EFFB  F015         	goto	l4944
  3542   002BE2                     u5630:
  3543   002BE2  0E00               	movlw	0
  3544   002BE4  6E2E               	movwf	floorf@u^0,c
  3545   002BE6  0E00               	movlw	0
  3546   002BE8  6E2F               	movwf	(floorf@u+1)^0,c
  3547   002BEA  0E00               	movlw	0
  3548   002BEC  6E30               	movwf	(floorf@u+2)^0,c
  3549   002BEE  0E00               	movlw	0
  3550   002BF0  6E31               	movwf	(floorf@u+3)^0,c
  3551   002BF2  EF17  F016         	goto	l4948
  3552   002BF6                     l4944:
  3553   002BF6  90D8               	bcf	status,0,c
  3554   002BF8  342E               	rlcf	floorf@u^0,w,c
  3555   002BFA  6E22               	movwf	??_floorf^0,c
  3556   002BFC  342F               	rlcf	(floorf@u+1)^0,w,c
  3557   002BFE  6E23               	movwf	(??_floorf+1)^0,c
  3558   002C00  3430               	rlcf	(floorf@u+2)^0,w,c
  3559   002C02  6E24               	movwf	(??_floorf+2)^0,c
  3560   002C04  3431               	rlcf	(floorf@u+3)^0,w,c
  3561   002C06  6E25               	movwf	(??_floorf+3)^0,c
  3562   002C08  5022               	movf	??_floorf^0,w,c
  3563   002C0A  1023               	iorwf	(??_floorf+1)^0,w,c
  3564   002C0C  1024               	iorwf	(??_floorf+2)^0,w,c
  3565   002C0E  1025               	iorwf	(??_floorf+3)^0,w,c
  3566   002C10  B4D8               	btfsc	status,2,c
  3567   002C12  EF0D  F016         	goto	u5641
  3568   002C16  EF0F  F016         	goto	u5640
  3569   002C1A                     u5641:
  3570   002C1A  EF17  F016         	goto	l4948
  3571   002C1E                     u5640:
  3572   002C1E  0E00               	movlw	0
  3573   002C20  6E2E               	movwf	floorf@u^0,c
  3574   002C22  0E00               	movlw	0
  3575   002C24  6E2F               	movwf	(floorf@u+1)^0,c
  3576   002C26  0E80               	movlw	128
  3577   002C28  6E30               	movwf	(floorf@u+2)^0,c
  3578   002C2A  0EBF               	movlw	191
  3579   002C2C  6E31               	movwf	(floorf@u+3)^0,c
  3580   002C2E                     l4948:
  3581   002C2E  C02E  F01E         	movff	floorf@u,?_floorf
  3582   002C32  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  3583   002C36  C030  F020         	movff	floorf@u+2,?_floorf+2
  3584   002C3A  C031  F021         	movff	floorf@u+3,?_floorf+3
  3585   002C3E                     l1133:
  3586   002C3E  0012               	return		;funcret
  3587   002C40                     __end_of_floorf:
  3588                           	callstack 0
  3589                           
  3590 ;; *************** function ___fpclassifyf *****************
  3591 ;; Defined at:
  3592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  x               4    4[COMRAM] float 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  u               4   14[COMRAM] struct .
  3597 ;;  e               2   12[COMRAM] int 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2    4[COMRAM] int 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3607 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;Total ram usage:       14 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 2
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_efgtoa
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text9
  3622   00358A                     __ptext9:
  3623                           	callstack 0
  3624   00358A                     ___fpclassifyf:
  3625                           	callstack 24
  3626   00358A  C0EB  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3627   00358E  C0EC  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3628   003592  C0ED  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3629   003596  C0EE  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3630   00359A  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  3631   00359E  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3632   0035A2  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3633   0035A6  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3634   0035AA  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3635   0035AE  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3636   0035B2  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3637   0035B6  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3638   0035BA  0E18               	movlw	24
  3639   0035BC  EFE5  F01A         	goto	u5460
  3640   0035C0                     u5465:
  3641   0035C0  90D8               	bcf	status,0,c
  3642   0035C2  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  3643   0035C4  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  3644   0035C6  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  3645   0035C8  3209               	rrcf	??___fpclassifyf^0,f,c
  3646   0035CA                     u5460:
  3647   0035CA  2EE8               	decfsz	wreg,f,c
  3648   0035CC  EFE0  F01A         	goto	u5465
  3649   0035D0  5009               	movf	??___fpclassifyf^0,w,c
  3650   0035D2  6E0D               	movwf	___fpclassifyf@e^0,c
  3651   0035D4  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  3652   0035D6  500D               	movf	___fpclassifyf@e^0,w,c
  3653   0035D8  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3654   0035DA  A4D8               	btfss	status,2,c
  3655   0035DC  EFF2  F01A         	goto	u5471
  3656   0035E0  EFF4  F01A         	goto	u5470
  3657   0035E4                     u5471:
  3658   0035E4  EF14  F01B         	goto	l4906
  3659   0035E8                     u5470:
  3660   0035E8  90D8               	bcf	status,0,c
  3661   0035EA  340F               	rlcf	___fpclassifyf@u^0,w,c
  3662   0035EC  6E09               	movwf	??___fpclassifyf^0,c
  3663   0035EE  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3664   0035F0  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  3665   0035F2  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3666   0035F4  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  3667   0035F6  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3668   0035F8  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  3669   0035FA  5009               	movf	??___fpclassifyf^0,w,c
  3670   0035FC  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3671   0035FE  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3672   003600  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3673   003602  A4D8               	btfss	status,2,c
  3674   003604  EF06  F01B         	goto	u5481
  3675   003608  EF08  F01B         	goto	u5480
  3676   00360C                     u5481:
  3677   00360C  EF0E  F01B         	goto	l4902
  3678   003610                     u5480:
  3679   003610  0E00               	movlw	0
  3680   003612  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3681   003614  0E02               	movlw	2
  3682   003616  6E05               	movwf	?___fpclassifyf^0,c
  3683   003618  EF43  F01B         	goto	l1119
  3684   00361C                     l4902:
  3685   00361C  0E00               	movlw	0
  3686   00361E  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3687   003620  0E03               	movlw	3
  3688   003622  6E05               	movwf	?___fpclassifyf^0,c
  3689   003624  EF43  F01B         	goto	l1119
  3690   003628                     l4906:
  3691   003628  280D               	incf	___fpclassifyf@e^0,w,c
  3692   00362A  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3693   00362C  A4D8               	btfss	status,2,c
  3694   00362E  EF1B  F01B         	goto	u5491
  3695   003632  EF1D  F01B         	goto	u5490
  3696   003636                     u5491:
  3697   003636  EF3F  F01B         	goto	l4912
  3698   00363A                     u5490:
  3699   00363A  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3700   00363E  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3701   003642  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3702   003646  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3703   00364A  0E09               	movlw	9
  3704   00364C                     u5505:
  3705   00364C  90D8               	bcf	status,0,c
  3706   00364E  3609               	rlcf	??___fpclassifyf^0,f,c
  3707   003650  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  3708   003652  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  3709   003654  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  3710   003656  2EE8               	decfsz	wreg,f,c
  3711   003658  EF26  F01B         	goto	u5505
  3712   00365C  5009               	movf	??___fpclassifyf^0,w,c
  3713   00365E  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3714   003660  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3715   003662  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3716   003664  B4D8               	btfsc	status,2,c
  3717   003666  EF37  F01B         	goto	u5511
  3718   00366A  EF3A  F01B         	goto	u5510
  3719   00366E                     u5511:
  3720   00366E  0E01               	movlw	1
  3721   003670  EF3B  F01B         	goto	u5520
  3722   003674                     u5510:
  3723   003674  0E00               	movlw	0
  3724   003676                     u5520:
  3725   003676  6E05               	movwf	?___fpclassifyf^0,c
  3726   003678  6A06               	clrf	(?___fpclassifyf+1)^0,c
  3727   00367A  EF43  F01B         	goto	l1119
  3728   00367E                     l4912:
  3729   00367E  0E00               	movlw	0
  3730   003680  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3731   003682  0E04               	movlw	4
  3732   003684  6E05               	movwf	?___fpclassifyf^0,c
  3733   003686                     l1119:
  3734   003686  0012               	return		;funcret
  3735   003688                     __end_of___fpclassifyf:
  3736                           	callstack 0
  3737                           
  3738 ;; *************** function ___fltol *****************
  3739 ;; Defined at:
  3740 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  f1              4    4[COMRAM] int 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;  exp1            1   13[COMRAM] unsigned char 
  3745 ;;  sign1           1   12[COMRAM] unsigned char 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  4    4[COMRAM] long 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3757 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;Total ram usage:       10 bytes
  3760 ;; Hardware stack levels used: 1
  3761 ;; Hardware stack levels required when called: 2
  3762 ;; This function calls:
  3763 ;;		Nothing
  3764 ;; This function is called by:
  3765 ;;		_efgtoa
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text10
  3770   003380                     __ptext10:
  3771                           	callstack 0
  3772   003380                     ___fltol:
  3773                           	callstack 24
  3774   003380  3407               	rlcf	(___fltol@f1+2)^0,w,c
  3775   003382  3408               	rlcf	(___fltol@f1+3)^0,w,c
  3776   003384  6E0E               	movwf	___fltol@exp1^0,c
  3777   003386  500E               	movf	___fltol@exp1^0,w,c
  3778   003388  A4D8               	btfss	status,2,c
  3779   00338A  EFC9  F019         	goto	u5361
  3780   00338E  EFCB  F019         	goto	u5360
  3781   003392                     u5361:
  3782   003392  EFD5  F019         	goto	l4838
  3783   003396                     u5360:
  3784   003396                     l4834:
  3785   003396  0E00               	movlw	0
  3786   003398  6E05               	movwf	?___fltol^0,c
  3787   00339A  0E00               	movlw	0
  3788   00339C  6E06               	movwf	(?___fltol+1)^0,c
  3789   00339E  0E00               	movlw	0
  3790   0033A0  6E07               	movwf	(?___fltol+2)^0,c
  3791   0033A2  0E00               	movlw	0
  3792   0033A4  6E08               	movwf	(?___fltol+3)^0,c
  3793   0033A6  EF42  F01A         	goto	l592
  3794   0033AA                     l4838:
  3795   0033AA  C005  F009         	movff	___fltol@f1,??___fltol
  3796   0033AE  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  3797   0033B2  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  3798   0033B6  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  3799   0033BA  0E20               	movlw	32
  3800   0033BC  EFE5  F019         	goto	u5370
  3801   0033C0                     u5375:
  3802   0033C0  90D8               	bcf	status,0,c
  3803   0033C2  320C               	rrcf	(??___fltol+3)^0,f,c
  3804   0033C4  320B               	rrcf	(??___fltol+2)^0,f,c
  3805   0033C6  320A               	rrcf	(??___fltol+1)^0,f,c
  3806   0033C8  3209               	rrcf	??___fltol^0,f,c
  3807   0033CA                     u5370:
  3808   0033CA  2EE8               	decfsz	wreg,f,c
  3809   0033CC  EFE0  F019         	goto	u5375
  3810   0033D0  5009               	movf	??___fltol^0,w,c
  3811   0033D2  6E0D               	movwf	___fltol@sign1^0,c
  3812   0033D4  8E07               	bsf	(___fltol@f1+2)^0,7,c
  3813   0033D6  0EFF               	movlw	255
  3814   0033D8  1605               	andwf	___fltol@f1^0,f,c
  3815   0033DA  0EFF               	movlw	255
  3816   0033DC  1606               	andwf	(___fltol@f1+1)^0,f,c
  3817   0033DE  0EFF               	movlw	255
  3818   0033E0  1607               	andwf	(___fltol@f1+2)^0,f,c
  3819   0033E2  0E00               	movlw	0
  3820   0033E4  1608               	andwf	(___fltol@f1+3)^0,f,c
  3821   0033E6  0E96               	movlw	150
  3822   0033E8  5E0E               	subwf	___fltol@exp1^0,f,c
  3823   0033EA  BE0E               	btfsc	___fltol@exp1^0,7,c
  3824   0033EC  EFFC  F019         	goto	u5380
  3825   0033F0  EFFA  F019         	goto	u5381
  3826   0033F4                     u5381:
  3827   0033F4  EF12  F01A         	goto	l4858
  3828   0033F8                     u5380:
  3829   0033F8  500E               	movf	___fltol@exp1^0,w,c
  3830   0033FA  0A80               	xorlw	128
  3831   0033FC  0F97               	addlw	151
  3832   0033FE  B0D8               	btfsc	status,0,c
  3833   003400  EF04  F01A         	goto	u5391
  3834   003404  EF06  F01A         	goto	u5390
  3835   003408                     u5391:
  3836   003408  EF08  F01A         	goto	l4854
  3837   00340C                     u5390:
  3838   00340C  EFCB  F019         	goto	l4834
  3839   003410                     l4854:
  3840   003410  90D8               	bcf	status,0,c
  3841   003412  3208               	rrcf	(___fltol@f1+3)^0,f,c
  3842   003414  3207               	rrcf	(___fltol@f1+2)^0,f,c
  3843   003416  3206               	rrcf	(___fltol@f1+1)^0,f,c
  3844   003418  3205               	rrcf	___fltol@f1^0,f,c
  3845   00341A  3E0E               	incfsz	___fltol@exp1^0,f,c
  3846   00341C  EF08  F01A         	goto	l4854
  3847   003420  EF2A  F01A         	goto	l4868
  3848   003424                     l4858:
  3849   003424  0E1F               	movlw	31
  3850   003426  640E               	cpfsgt	___fltol@exp1^0,c
  3851   003428  EF18  F01A         	goto	u5401
  3852   00342C  EF1A  F01A         	goto	u5400
  3853   003430                     u5401:
  3854   003430  EF22  F01A         	goto	l4866
  3855   003434                     u5400:
  3856   003434  EFCB  F019         	goto	l4834
  3857   003438                     l4864:
  3858   003438  90D8               	bcf	status,0,c
  3859   00343A  3605               	rlcf	___fltol@f1^0,f,c
  3860   00343C  3606               	rlcf	(___fltol@f1+1)^0,f,c
  3861   00343E  3607               	rlcf	(___fltol@f1+2)^0,f,c
  3862   003440  3608               	rlcf	(___fltol@f1+3)^0,f,c
  3863   003442  060E               	decf	___fltol@exp1^0,f,c
  3864   003444                     l4866:
  3865   003444  500E               	movf	___fltol@exp1^0,w,c
  3866   003446  A4D8               	btfss	status,2,c
  3867   003448  EF28  F01A         	goto	u5411
  3868   00344C  EF2A  F01A         	goto	u5410
  3869   003450                     u5411:
  3870   003450  EF1C  F01A         	goto	l4864
  3871   003454                     u5410:
  3872   003454                     l4868:
  3873   003454  500D               	movf	___fltol@sign1^0,w,c
  3874   003456  B4D8               	btfsc	status,2,c
  3875   003458  EF30  F01A         	goto	u5421
  3876   00345C  EF32  F01A         	goto	u5420
  3877   003460                     u5421:
  3878   003460  EF3A  F01A         	goto	l4872
  3879   003464                     u5420:
  3880   003464  1E08               	comf	(___fltol@f1+3)^0,f,c
  3881   003466  1E07               	comf	(___fltol@f1+2)^0,f,c
  3882   003468  1E06               	comf	(___fltol@f1+1)^0,f,c
  3883   00346A  6C05               	negf	___fltol@f1^0,c
  3884   00346C  0E00               	movlw	0
  3885   00346E  2206               	addwfc	(___fltol@f1+1)^0,f,c
  3886   003470  2207               	addwfc	(___fltol@f1+2)^0,f,c
  3887   003472  2208               	addwfc	(___fltol@f1+3)^0,f,c
  3888   003474                     l4872:
  3889   003474  C005  F005         	movff	___fltol@f1,?___fltol
  3890   003478  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  3891   00347C  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  3892   003480  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  3893   003484                     l592:
  3894   003484  0012               	return		;funcret
  3895   003486                     __end_of___fltol:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function ___flsub *****************
  3899 ;; Defined at:
  3900 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  b               4   29[COMRAM] long 
  3903 ;;  a               4   33[COMRAM] long 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  4   29[COMRAM] long 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3915 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;Total ram usage:        8 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 3
  3922 ;; This function calls:
  3923 ;;		___fladd
  3924 ;; This function is called by:
  3925 ;;		_efgtoa
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text11
  3930   003B70                     __ptext11:
  3931                           	callstack 0
  3932   003B70                     ___flsub:
  3933                           	callstack 23
  3934   003B70  0E00               	movlw	0
  3935   003B72  1A22               	xorwf	___flsub@a^0,f,c
  3936   003B74  0E00               	movlw	0
  3937   003B76  1A23               	xorwf	(___flsub@a+1)^0,f,c
  3938   003B78  0E00               	movlw	0
  3939   003B7A  1A24               	xorwf	(___flsub@a+2)^0,f,c
  3940   003B7C  0E80               	movlw	128
  3941   003B7E  1A25               	xorwf	(___flsub@a+3)^0,f,c
  3942   003B80  C01E  F005         	movff	___flsub@b,___fladd@b
  3943   003B84  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  3944   003B88  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  3945   003B8C  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  3946   003B90  C022  F009         	movff	___flsub@a,___fladd@a
  3947   003B94  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  3948   003B98  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  3949   003B9C  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  3950   003BA0  EC13  F00C         	call	___fladd	;wreg free
  3951   003BA4  C005  F01E         	movff	?___fladd,?___flsub
  3952   003BA8  C006  F01F         	movff	?___fladd+1,?___flsub+1
  3953   003BAC  C007  F020         	movff	?___fladd+2,?___flsub+2
  3954   003BB0  C008  F021         	movff	?___fladd+3,?___flsub+3
  3955   003BB4  0012               	return		;funcret
  3956   003BB6                     __end_of___flsub:
  3957                           	callstack 0
  3958                           
  3959 ;; *************** function ___fladd *****************
  3960 ;; Defined at:
  3961 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  b               4    4[COMRAM] long 
  3964 ;;  a               4    8[COMRAM] long 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  grs             1   19[COMRAM] unsigned char 
  3967 ;;  bexp            1   18[COMRAM] unsigned char 
  3968 ;;  aexp            1   17[COMRAM] unsigned char 
  3969 ;;  signs           1   16[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  4    4[COMRAM] unsigned char 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3979 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;Total ram usage:       16 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; Hardware stack levels required when called: 2
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		___flsub
  3990 ;;		_efgtoa
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           	psect	text12
  3995   001826                     __ptext12:
  3996                           	callstack 0
  3997   001826                     ___fladd:
  3998                           	callstack 23
  3999   001826  5008               	movf	(___fladd@b+3)^0,w,c
  4000   001828  0B80               	andlw	128
  4001   00182A  6E11               	movwf	___fladd@signs^0,c
  4002   00182C  5008               	movf	(___fladd@b+3)^0,w,c
  4003   00182E  2408               	addwf	(___fladd@b+3)^0,w,c
  4004   001830  6E13               	movwf	___fladd@bexp^0,c
  4005   001832  AE07               	btfss	(___fladd@b+2)^0,7,c
  4006   001834  EF1E  F00C         	goto	u4321
  4007   001838  EF20  F00C         	goto	u4320
  4008   00183C                     u4321:
  4009   00183C  EF21  F00C         	goto	l4228
  4010   001840                     u4320:
  4011   001840  8013               	bsf	___fladd@bexp^0,0,c
  4012   001842                     l4228:
  4013   001842  5013               	movf	___fladd@bexp^0,w,c
  4014   001844  B4D8               	btfsc	status,2,c
  4015   001846  EF27  F00C         	goto	u4331
  4016   00184A  EF29  F00C         	goto	u4330
  4017   00184E                     u4331:
  4018   00184E  EF3E  F00C         	goto	l4238
  4019   001852                     u4330:
  4020   001852  2813               	incf	___fladd@bexp^0,w,c
  4021   001854  A4D8               	btfss	status,2,c
  4022   001856  EF2F  F00C         	goto	u4341
  4023   00185A  EF31  F00C         	goto	u4340
  4024   00185E                     u4341:
  4025   00185E  EF39  F00C         	goto	l4234
  4026   001862                     u4340:
  4027   001862  0E00               	movlw	0
  4028   001864  6E05               	movwf	___fladd@b^0,c
  4029   001866  0E00               	movlw	0
  4030   001868  6E06               	movwf	(___fladd@b+1)^0,c
  4031   00186A  0E00               	movlw	0
  4032   00186C  6E07               	movwf	(___fladd@b+2)^0,c
  4033   00186E  0E00               	movlw	0
  4034   001870  6E08               	movwf	(___fladd@b+3)^0,c
  4035   001872                     l4234:
  4036   001872  8E07               	bsf	(___fladd@b+2)^0,7,c
  4037   001874  0E00               	movlw	0
  4038   001876  6E08               	movwf	(___fladd@b+3)^0,c
  4039   001878  EF46  F00C         	goto	l4240
  4040   00187C                     l4238:
  4041   00187C  0E00               	movlw	0
  4042   00187E  6E05               	movwf	___fladd@b^0,c
  4043   001880  0E00               	movlw	0
  4044   001882  6E06               	movwf	(___fladd@b+1)^0,c
  4045   001884  0E00               	movlw	0
  4046   001886  6E07               	movwf	(___fladd@b+2)^0,c
  4047   001888  0E00               	movlw	0
  4048   00188A  6E08               	movwf	(___fladd@b+3)^0,c
  4049   00188C                     l4240:
  4050   00188C  500C               	movf	(___fladd@a+3)^0,w,c
  4051   00188E  0B80               	andlw	128
  4052   001890  6E12               	movwf	___fladd@aexp^0,c
  4053   001892  5011               	movf	___fladd@signs^0,w,c
  4054   001894  1812               	xorwf	___fladd@aexp^0,w,c
  4055   001896  B4D8               	btfsc	status,2,c
  4056   001898  EF50  F00C         	goto	u4351
  4057   00189C  EF52  F00C         	goto	u4350
  4058   0018A0                     u4351:
  4059   0018A0  EF53  F00C         	goto	l4246
  4060   0018A4                     u4350:
  4061   0018A4  8C11               	bsf	___fladd@signs^0,6,c
  4062   0018A6                     l4246:
  4063   0018A6  500C               	movf	(___fladd@a+3)^0,w,c
  4064   0018A8  240C               	addwf	(___fladd@a+3)^0,w,c
  4065   0018AA  6E12               	movwf	___fladd@aexp^0,c
  4066   0018AC  AE0B               	btfss	(___fladd@a+2)^0,7,c
  4067   0018AE  EF5B  F00C         	goto	u4361
  4068   0018B2  EF5D  F00C         	goto	u4360
  4069   0018B6                     u4361:
  4070   0018B6  EF5E  F00C         	goto	l4252
  4071   0018BA                     u4360:
  4072   0018BA  8012               	bsf	___fladd@aexp^0,0,c
  4073   0018BC                     l4252:
  4074   0018BC  5012               	movf	___fladd@aexp^0,w,c
  4075   0018BE  B4D8               	btfsc	status,2,c
  4076   0018C0  EF64  F00C         	goto	u4371
  4077   0018C4  EF66  F00C         	goto	u4370
  4078   0018C8                     u4371:
  4079   0018C8  EF7B  F00C         	goto	l4262
  4080   0018CC                     u4370:
  4081   0018CC  2812               	incf	___fladd@aexp^0,w,c
  4082   0018CE  A4D8               	btfss	status,2,c
  4083   0018D0  EF6C  F00C         	goto	u4381
  4084   0018D4  EF6E  F00C         	goto	u4380
  4085   0018D8                     u4381:
  4086   0018D8  EF76  F00C         	goto	l4258
  4087   0018DC                     u4380:
  4088   0018DC  0E00               	movlw	0
  4089   0018DE  6E09               	movwf	___fladd@a^0,c
  4090   0018E0  0E00               	movlw	0
  4091   0018E2  6E0A               	movwf	(___fladd@a+1)^0,c
  4092   0018E4  0E00               	movlw	0
  4093   0018E6  6E0B               	movwf	(___fladd@a+2)^0,c
  4094   0018E8  0E00               	movlw	0
  4095   0018EA  6E0C               	movwf	(___fladd@a+3)^0,c
  4096   0018EC                     l4258:
  4097   0018EC  8E0B               	bsf	(___fladd@a+2)^0,7,c
  4098   0018EE  0E00               	movlw	0
  4099   0018F0  6E0C               	movwf	(___fladd@a+3)^0,c
  4100   0018F2  EF83  F00C         	goto	l4264
  4101   0018F6                     l4262:
  4102   0018F6  0E00               	movlw	0
  4103   0018F8  6E09               	movwf	___fladd@a^0,c
  4104   0018FA  0E00               	movlw	0
  4105   0018FC  6E0A               	movwf	(___fladd@a+1)^0,c
  4106   0018FE  0E00               	movlw	0
  4107   001900  6E0B               	movwf	(___fladd@a+2)^0,c
  4108   001902  0E00               	movlw	0
  4109   001904  6E0C               	movwf	(___fladd@a+3)^0,c
  4110   001906                     l4264:
  4111   001906  5013               	movf	___fladd@bexp^0,w,c
  4112   001908  5C12               	subwf	___fladd@aexp^0,w,c
  4113   00190A  B0D8               	btfsc	status,0,c
  4114   00190C  EF8A  F00C         	goto	u4391
  4115   001910  EF8C  F00C         	goto	u4390
  4116   001914                     u4391:
  4117   001914  EFB3  F00C         	goto	l4300
  4118   001918                     u4390:
  4119   001918  AC11               	btfss	___fladd@signs^0,6,c
  4120   00191A  EF91  F00C         	goto	u4401
  4121   00191E  EF93  F00C         	goto	u4400
  4122   001922                     u4401:
  4123   001922  EF95  F00C         	goto	l4270
  4124   001926                     u4400:
  4125   001926  0E80               	movlw	128
  4126   001928  1A11               	xorwf	___fladd@signs^0,f,c
  4127   00192A                     l4270:
  4128   00192A  C013  F014         	movff	___fladd@bexp,___fladd@grs
  4129   00192E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4130   001932  C014  F012         	movff	___fladd@grs,___fladd@aexp
  4131   001936  C005  F014         	movff	___fladd@b,___fladd@grs
  4132   00193A  C009  F005         	movff	___fladd@a,___fladd@b
  4133   00193E  C014  F009         	movff	___fladd@grs,___fladd@a
  4134   001942  C006  F014         	movff	___fladd@b+1,___fladd@grs
  4135   001946  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  4136   00194A  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  4137   00194E  C007  F014         	movff	___fladd@b+2,___fladd@grs
  4138   001952  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  4139   001956  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  4140   00195A  C008  F014         	movff	___fladd@b+3,___fladd@grs
  4141   00195E  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  4142   001962  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  4143   001966                     l4300:
  4144   001966  0E00               	movlw	0
  4145   001968  6E14               	movwf	___fladd@grs^0,c
  4146   00196A  5013               	movf	___fladd@bexp^0,w,c
  4147   00196C  C012  F00D         	movff	___fladd@aexp,??___fladd
  4148   001970  6A0E               	clrf	(??___fladd+1)^0,c
  4149   001972  5E0D               	subwf	??___fladd^0,f,c
  4150   001974  0E00               	movlw	0
  4151   001976  5A0E               	subwfb	(??___fladd+1)^0,f,c
  4152   001978  BE0E               	btfsc	(??___fladd+1)^0,7,c
  4153   00197A  EFC8  F00C         	goto	u4411
  4154   00197E  500E               	movf	(??___fladd+1)^0,w,c
  4155   001980  E109               	bnz	u4410
  4156   001982  0E1A               	movlw	26
  4157   001984  5C0D               	subwf	??___fladd^0,w,c
  4158   001986  A0D8               	btfss	status,0,c
  4159   001988  EFC8  F00C         	goto	u4411
  4160   00198C  EFCA  F00C         	goto	u4410
  4161   001990                     u4411:
  4162   001990  EF01  F00D         	goto	l824
  4163   001994                     u4410:
  4164   001994  5005               	movf	___fladd@b^0,w,c
  4165   001996  1006               	iorwf	(___fladd@b+1)^0,w,c
  4166   001998  1007               	iorwf	(___fladd@b+2)^0,w,c
  4167   00199A  1008               	iorwf	(___fladd@b+3)^0,w,c
  4168   00199C  A4D8               	btfss	status,2,c
  4169   00199E  EFD3  F00C         	goto	u4421
  4170   0019A2  EFD6  F00C         	goto	u4420
  4171   0019A6                     u4421:
  4172   0019A6  0E01               	movlw	1
  4173   0019A8  EFD7  F00C         	goto	u4430
  4174   0019AC                     u4420:
  4175   0019AC  0E00               	movlw	0
  4176   0019AE                     u4430:
  4177   0019AE  6E14               	movwf	___fladd@grs^0,c
  4178   0019B0  0E00               	movlw	0
  4179   0019B2  6E05               	movwf	___fladd@b^0,c
  4180   0019B4  0E00               	movlw	0
  4181   0019B6  6E06               	movwf	(___fladd@b+1)^0,c
  4182   0019B8  0E00               	movlw	0
  4183   0019BA  6E07               	movwf	(___fladd@b+2)^0,c
  4184   0019BC  0E00               	movlw	0
  4185   0019BE  6E08               	movwf	(___fladd@b+3)^0,c
  4186   0019C0  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4187   0019C4  EF0A  F00D         	goto	l823
  4188   0019C8                     l825:
  4189   0019C8  A014               	btfss	___fladd@grs^0,0,c
  4190   0019CA  EFE9  F00C         	goto	u4441
  4191   0019CE  EFEB  F00C         	goto	u4440
  4192   0019D2                     u4441:
  4193   0019D2  EFF1  F00C         	goto	l4312
  4194   0019D6                     u4440:
  4195   0019D6  90D8               	bcf	status,0,c
  4196   0019D8  3014               	rrcf	___fladd@grs^0,w,c
  4197   0019DA  0901               	iorlw	1
  4198   0019DC  6E14               	movwf	___fladd@grs^0,c
  4199   0019DE  EFF3  F00C         	goto	l4314
  4200   0019E2                     l4312:
  4201   0019E2  90D8               	bcf	status,0,c
  4202   0019E4  3214               	rrcf	___fladd@grs^0,f,c
  4203   0019E6                     l4314:
  4204   0019E6  A005               	btfss	___fladd@b^0,0,c
  4205   0019E8  EFF8  F00C         	goto	u4451
  4206   0019EC  EFFA  F00C         	goto	u4450
  4207   0019F0                     u4451:
  4208   0019F0  EFFB  F00C         	goto	l4318
  4209   0019F4                     u4450:
  4210   0019F4  8E14               	bsf	___fladd@grs^0,7,c
  4211   0019F6                     l4318:
  4212   0019F6  3408               	rlcf	(___fladd@b+3)^0,w,c
  4213   0019F8  3208               	rrcf	(___fladd@b+3)^0,f,c
  4214   0019FA  3207               	rrcf	(___fladd@b+2)^0,f,c
  4215   0019FC  3206               	rrcf	(___fladd@b+1)^0,f,c
  4216   0019FE  3205               	rrcf	___fladd@b^0,f,c
  4217   001A00  2A13               	incf	___fladd@bexp^0,f,c
  4218   001A02                     l824:
  4219   001A02  5012               	movf	___fladd@aexp^0,w,c
  4220   001A04  5C13               	subwf	___fladd@bexp^0,w,c
  4221   001A06  A0D8               	btfss	status,0,c
  4222   001A08  EF08  F00D         	goto	u4461
  4223   001A0C  EF0A  F00D         	goto	u4460
  4224   001A10                     u4461:
  4225   001A10  EFE4  F00C         	goto	l825
  4226   001A14                     u4460:
  4227   001A14                     l823:
  4228   001A14  BC11               	btfsc	___fladd@signs^0,6,c
  4229   001A16  EF0F  F00D         	goto	u4471
  4230   001A1A  EF11  F00D         	goto	u4470
  4231   001A1E                     u4471:
  4232   001A1E  EF51  F00D         	goto	l4346
  4233   001A22                     u4470:
  4234   001A22  5013               	movf	___fladd@bexp^0,w,c
  4235   001A24  A4D8               	btfss	status,2,c
  4236   001A26  EF17  F00D         	goto	u4481
  4237   001A2A  EF19  F00D         	goto	u4480
  4238   001A2E                     u4481:
  4239   001A2E  EF23  F00D         	goto	l4328
  4240   001A32                     u4480:
  4241   001A32  0E00               	movlw	0
  4242   001A34  6E05               	movwf	?___fladd^0,c
  4243   001A36  0E00               	movlw	0
  4244   001A38  6E06               	movwf	(?___fladd+1)^0,c
  4245   001A3A  0E00               	movlw	0
  4246   001A3C  6E07               	movwf	(?___fladd+2)^0,c
  4247   001A3E  0E00               	movlw	0
  4248   001A40  6E08               	movwf	(?___fladd+3)^0,c
  4249   001A42  EF72  F00E         	goto	l832
  4250   001A46                     l4328:
  4251   001A46  5009               	movf	___fladd@a^0,w,c
  4252   001A48  2605               	addwf	___fladd@b^0,f,c
  4253   001A4A  500A               	movf	(___fladd@a+1)^0,w,c
  4254   001A4C  2206               	addwfc	(___fladd@b+1)^0,f,c
  4255   001A4E  500B               	movf	(___fladd@a+2)^0,w,c
  4256   001A50  2207               	addwfc	(___fladd@b+2)^0,f,c
  4257   001A52  500C               	movf	(___fladd@a+3)^0,w,c
  4258   001A54  2208               	addwfc	(___fladd@b+3)^0,f,c
  4259   001A56  A008               	btfss	(___fladd@b+3)^0,0,c
  4260   001A58  EF30  F00D         	goto	u4491
  4261   001A5C  EF32  F00D         	goto	u4490
  4262   001A60                     u4491:
  4263   001A60  EFDE  F00D         	goto	l4382
  4264   001A64                     u4490:
  4265   001A64  A014               	btfss	___fladd@grs^0,0,c
  4266   001A66  EF37  F00D         	goto	u4501
  4267   001A6A  EF39  F00D         	goto	u4500
  4268   001A6E                     u4501:
  4269   001A6E  EF3F  F00D         	goto	l4336
  4270   001A72                     u4500:
  4271   001A72  90D8               	bcf	status,0,c
  4272   001A74  3014               	rrcf	___fladd@grs^0,w,c
  4273   001A76  0901               	iorlw	1
  4274   001A78  6E14               	movwf	___fladd@grs^0,c
  4275   001A7A  EF41  F00D         	goto	l4338
  4276   001A7E                     l4336:
  4277   001A7E  90D8               	bcf	status,0,c
  4278   001A80  3214               	rrcf	___fladd@grs^0,f,c
  4279   001A82                     l4338:
  4280   001A82  A005               	btfss	___fladd@b^0,0,c
  4281   001A84  EF46  F00D         	goto	u4511
  4282   001A88  EF48  F00D         	goto	u4510
  4283   001A8C                     u4511:
  4284   001A8C  EF49  F00D         	goto	l4342
  4285   001A90                     u4510:
  4286   001A90  8E14               	bsf	___fladd@grs^0,7,c
  4287   001A92                     l4342:
  4288   001A92  3408               	rlcf	(___fladd@b+3)^0,w,c
  4289   001A94  3208               	rrcf	(___fladd@b+3)^0,f,c
  4290   001A96  3207               	rrcf	(___fladd@b+2)^0,f,c
  4291   001A98  3206               	rrcf	(___fladd@b+1)^0,f,c
  4292   001A9A  3205               	rrcf	___fladd@b^0,f,c
  4293   001A9C  2A13               	incf	___fladd@bexp^0,f,c
  4294   001A9E  EFDE  F00D         	goto	l4382
  4295   001AA2                     l4346:
  4296   001AA2  5009               	movf	___fladd@a^0,w,c
  4297   001AA4  5C05               	subwf	___fladd@b^0,w,c
  4298   001AA6  500A               	movf	(___fladd@a+1)^0,w,c
  4299   001AA8  5806               	subwfb	(___fladd@b+1)^0,w,c
  4300   001AAA  500B               	movf	(___fladd@a+2)^0,w,c
  4301   001AAC  5807               	subwfb	(___fladd@b+2)^0,w,c
  4302   001AAE  5008               	movf	(___fladd@b+3)^0,w,c
  4303   001AB0  0A80               	xorlw	128
  4304   001AB2  6E0D               	movwf	??___fladd^0,c
  4305   001AB4  500C               	movf	(___fladd@a+3)^0,w,c
  4306   001AB6  0A80               	xorlw	128
  4307   001AB8  580D               	subwfb	??___fladd^0,w,c
  4308   001ABA  B0D8               	btfsc	status,0,c
  4309   001ABC  EF62  F00D         	goto	u4521
  4310   001AC0  EF64  F00D         	goto	u4520
  4311   001AC4                     u4521:
  4312   001AC4  EF8F  F00D         	goto	l4356
  4313   001AC8                     u4520:
  4314   001AC8  5005               	movf	___fladd@b^0,w,c
  4315   001ACA  5C09               	subwf	___fladd@a^0,w,c
  4316   001ACC  6E0D               	movwf	??___fladd^0,c
  4317   001ACE  5006               	movf	(___fladd@b+1)^0,w,c
  4318   001AD0  580A               	subwfb	(___fladd@a+1)^0,w,c
  4319   001AD2  6E0E               	movwf	(??___fladd+1)^0,c
  4320   001AD4  5007               	movf	(___fladd@b+2)^0,w,c
  4321   001AD6  580B               	subwfb	(___fladd@a+2)^0,w,c
  4322   001AD8  6E0F               	movwf	(??___fladd+2)^0,c
  4323   001ADA  5008               	movf	(___fladd@b+3)^0,w,c
  4324   001ADC  580C               	subwfb	(___fladd@a+3)^0,w,c
  4325   001ADE  6E10               	movwf	(??___fladd+3)^0,c
  4326   001AE0  0EFF               	movlw	255
  4327   001AE2  240D               	addwf	??___fladd^0,w,c
  4328   001AE4  6E05               	movwf	___fladd@b^0,c
  4329   001AE6  0EFF               	movlw	255
  4330   001AE8  200E               	addwfc	(??___fladd+1)^0,w,c
  4331   001AEA  6E06               	movwf	(___fladd@b+1)^0,c
  4332   001AEC  0EFF               	movlw	255
  4333   001AEE  200F               	addwfc	(??___fladd+2)^0,w,c
  4334   001AF0  6E07               	movwf	(___fladd@b+2)^0,c
  4335   001AF2  0EFF               	movlw	255
  4336   001AF4  2010               	addwfc	(??___fladd+3)^0,w,c
  4337   001AF6  6E08               	movwf	(___fladd@b+3)^0,c
  4338   001AF8  0E80               	movlw	128
  4339   001AFA  1A11               	xorwf	___fladd@signs^0,f,c
  4340   001AFC  6C14               	negf	___fladd@grs^0,c
  4341   001AFE  5014               	movf	___fladd@grs^0,w,c
  4342   001B00  A4D8               	btfss	status,2,c
  4343   001B02  EF85  F00D         	goto	u4531
  4344   001B06  EF87  F00D         	goto	u4530
  4345   001B0A                     u4531:
  4346   001B0A  EF97  F00D         	goto	l840
  4347   001B0E                     u4530:
  4348   001B0E  0E01               	movlw	1
  4349   001B10  2605               	addwf	___fladd@b^0,f,c
  4350   001B12  0E00               	movlw	0
  4351   001B14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4352   001B16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4353   001B18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4354   001B1A  EF97  F00D         	goto	l840
  4355   001B1E                     l4356:
  4356   001B1E  5009               	movf	___fladd@a^0,w,c
  4357   001B20  5E05               	subwf	___fladd@b^0,f,c
  4358   001B22  500A               	movf	(___fladd@a+1)^0,w,c
  4359   001B24  5A06               	subwfb	(___fladd@b+1)^0,f,c
  4360   001B26  500B               	movf	(___fladd@a+2)^0,w,c
  4361   001B28  5A07               	subwfb	(___fladd@b+2)^0,f,c
  4362   001B2A  500C               	movf	(___fladd@a+3)^0,w,c
  4363   001B2C  5A08               	subwfb	(___fladd@b+3)^0,f,c
  4364   001B2E                     l840:
  4365   001B2E  5005               	movf	___fladd@b^0,w,c
  4366   001B30  1006               	iorwf	(___fladd@b+1)^0,w,c
  4367   001B32  1007               	iorwf	(___fladd@b+2)^0,w,c
  4368   001B34  1008               	iorwf	(___fladd@b+3)^0,w,c
  4369   001B36  A4D8               	btfss	status,2,c
  4370   001B38  EFA0  F00D         	goto	u4541
  4371   001B3C  EFA2  F00D         	goto	u4540
  4372   001B40                     u4541:
  4373   001B40  EFD7  F00D         	goto	l4380
  4374   001B44                     u4540:
  4375   001B44  5014               	movf	___fladd@grs^0,w,c
  4376   001B46  A4D8               	btfss	status,2,c
  4377   001B48  EFA8  F00D         	goto	u4551
  4378   001B4C  EFAA  F00D         	goto	u4550
  4379   001B50                     u4551:
  4380   001B50  EFD7  F00D         	goto	l4380
  4381   001B54                     u4550:
  4382   001B54  0E00               	movlw	0
  4383   001B56  6E05               	movwf	?___fladd^0,c
  4384   001B58  0E00               	movlw	0
  4385   001B5A  6E06               	movwf	(?___fladd+1)^0,c
  4386   001B5C  0E00               	movlw	0
  4387   001B5E  6E07               	movwf	(?___fladd+2)^0,c
  4388   001B60  0E00               	movlw	0
  4389   001B62  6E08               	movwf	(?___fladd+3)^0,c
  4390   001B64  EF72  F00E         	goto	l832
  4391   001B68                     l4364:
  4392   001B68  90D8               	bcf	status,0,c
  4393   001B6A  3605               	rlcf	___fladd@b^0,f,c
  4394   001B6C  3606               	rlcf	(___fladd@b+1)^0,f,c
  4395   001B6E  3607               	rlcf	(___fladd@b+2)^0,f,c
  4396   001B70  3608               	rlcf	(___fladd@b+3)^0,f,c
  4397   001B72  AE14               	btfss	___fladd@grs^0,7,c
  4398   001B74  EFBE  F00D         	goto	u4561
  4399   001B78  EFC0  F00D         	goto	u4560
  4400   001B7C                     u4561:
  4401   001B7C  EFC1  F00D         	goto	l4370
  4402   001B80                     u4560:
  4403   001B80  8005               	bsf	___fladd@b^0,0,c
  4404   001B82                     l4370:
  4405   001B82  A014               	btfss	___fladd@grs^0,0,c
  4406   001B84  EFC6  F00D         	goto	u4571
  4407   001B88  EFC8  F00D         	goto	u4570
  4408   001B8C                     u4571:
  4409   001B8C  EFCC  F00D         	goto	l4374
  4410   001B90                     u4570:
  4411   001B90  80D8               	bsf	status,0,c
  4412   001B92  3614               	rlcf	___fladd@grs^0,f,c
  4413   001B94  EFCE  F00D         	goto	l4376
  4414   001B98                     l4374:
  4415   001B98  90D8               	bcf	status,0,c
  4416   001B9A  3614               	rlcf	___fladd@grs^0,f,c
  4417   001B9C                     l4376:
  4418   001B9C  5013               	movf	___fladd@bexp^0,w,c
  4419   001B9E  B4D8               	btfsc	status,2,c
  4420   001BA0  EFD4  F00D         	goto	u4581
  4421   001BA4  EFD6  F00D         	goto	u4580
  4422   001BA8                     u4581:
  4423   001BA8  EFD7  F00D         	goto	l4380
  4424   001BAC                     u4580:
  4425   001BAC  0613               	decf	___fladd@bexp^0,f,c
  4426   001BAE                     l4380:
  4427   001BAE  AE07               	btfss	(___fladd@b+2)^0,7,c
  4428   001BB0  EFDC  F00D         	goto	u4591
  4429   001BB4  EFDE  F00D         	goto	u4590
  4430   001BB8                     u4591:
  4431   001BB8  EFB4  F00D         	goto	l4364
  4432   001BBC                     u4590:
  4433   001BBC                     l4382:
  4434   001BBC  0E00               	movlw	0
  4435   001BBE  6E12               	movwf	___fladd@aexp^0,c
  4436   001BC0  AE14               	btfss	___fladd@grs^0,7,c
  4437   001BC2  EFE5  F00D         	goto	u4601
  4438   001BC6  EFE7  F00D         	goto	u4600
  4439   001BCA                     u4601:
  4440   001BCA  EFFF  F00D         	goto	l849
  4441   001BCE                     u4600:
  4442   001BCE  C014  F00D         	movff	___fladd@grs,??___fladd
  4443   001BD2  0E7F               	movlw	127
  4444   001BD4  160D               	andwf	??___fladd^0,f,c
  4445   001BD6  B4D8               	btfsc	status,2,c
  4446   001BD8  EFF0  F00D         	goto	u4611
  4447   001BDC  EFF2  F00D         	goto	u4610
  4448   001BE0                     u4611:
  4449   001BE0  EFF6  F00D         	goto	l850
  4450   001BE4                     u4610:
  4451   001BE4                     l4388:
  4452   001BE4  0E01               	movlw	1
  4453   001BE6  6E12               	movwf	___fladd@aexp^0,c
  4454   001BE8  EFFF  F00D         	goto	l849
  4455   001BEC                     l850:
  4456   001BEC  A005               	btfss	___fladd@b^0,0,c
  4457   001BEE  EFFB  F00D         	goto	u4621
  4458   001BF2  EFFD  F00D         	goto	u4620
  4459   001BF6                     u4621:
  4460   001BF6  EFFF  F00D         	goto	l849
  4461   001BFA                     u4620:
  4462   001BFA  EFF2  F00D         	goto	l4388
  4463   001BFE                     l849:
  4464   001BFE  5012               	movf	___fladd@aexp^0,w,c
  4465   001C00  B4D8               	btfsc	status,2,c
  4466   001C02  EF05  F00E         	goto	u4631
  4467   001C06  EF07  F00E         	goto	u4630
  4468   001C0A                     u4631:
  4469   001C0A  EF32  F00E         	goto	l4400
  4470   001C0E                     u4630:
  4471   001C0E  0E01               	movlw	1
  4472   001C10  2605               	addwf	___fladd@b^0,f,c
  4473   001C12  0E00               	movlw	0
  4474   001C14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4475   001C16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4476   001C18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4477   001C1A  A008               	btfss	(___fladd@b+3)^0,0,c
  4478   001C1C  EF12  F00E         	goto	u4641
  4479   001C20  EF14  F00E         	goto	u4640
  4480   001C24                     u4641:
  4481   001C24  EF32  F00E         	goto	l4400
  4482   001C28                     u4640:
  4483   001C28  C005  F00D         	movff	___fladd@b,??___fladd
  4484   001C2C  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  4485   001C30  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  4486   001C34  C008  F010         	movff	___fladd@b+3,??___fladd+3
  4487   001C38  3410               	rlcf	(??___fladd+3)^0,w,c
  4488   001C3A  3210               	rrcf	(??___fladd+3)^0,f,c
  4489   001C3C  320F               	rrcf	(??___fladd+2)^0,f,c
  4490   001C3E  320E               	rrcf	(??___fladd+1)^0,f,c
  4491   001C40  320D               	rrcf	??___fladd^0,f,c
  4492   001C42  C00D  F005         	movff	??___fladd,___fladd@b
  4493   001C46  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  4494   001C4A  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  4495   001C4E  C010  F008         	movff	??___fladd+3,___fladd@b+3
  4496   001C52  2813               	incf	___fladd@bexp^0,w,c
  4497   001C54  B4D8               	btfsc	status,2,c
  4498   001C56  EF2F  F00E         	goto	u4651
  4499   001C5A  EF31  F00E         	goto	u4650
  4500   001C5E                     u4651:
  4501   001C5E  EF32  F00E         	goto	l4400
  4502   001C62                     u4650:
  4503   001C62  2A13               	incf	___fladd@bexp^0,f,c
  4504   001C64                     l4400:
  4505   001C64  2813               	incf	___fladd@bexp^0,w,c
  4506   001C66  B4D8               	btfsc	status,2,c
  4507   001C68  EF38  F00E         	goto	u4661
  4508   001C6C  EF3A  F00E         	goto	u4660
  4509   001C70                     u4661:
  4510   001C70  EF42  F00E         	goto	l4404
  4511   001C74                     u4660:
  4512   001C74  5013               	movf	___fladd@bexp^0,w,c
  4513   001C76  A4D8               	btfss	status,2,c
  4514   001C78  EF40  F00E         	goto	u4671
  4515   001C7C  EF42  F00E         	goto	u4670
  4516   001C80                     u4671:
  4517   001C80  EF54  F00E         	goto	l4408
  4518   001C84                     u4670:
  4519   001C84                     l4404:
  4520   001C84  0E00               	movlw	0
  4521   001C86  6E05               	movwf	___fladd@b^0,c
  4522   001C88  0E00               	movlw	0
  4523   001C8A  6E06               	movwf	(___fladd@b+1)^0,c
  4524   001C8C  0E00               	movlw	0
  4525   001C8E  6E07               	movwf	(___fladd@b+2)^0,c
  4526   001C90  0E00               	movlw	0
  4527   001C92  6E08               	movwf	(___fladd@b+3)^0,c
  4528   001C94  5013               	movf	___fladd@bexp^0,w,c
  4529   001C96  A4D8               	btfss	status,2,c
  4530   001C98  EF50  F00E         	goto	u4681
  4531   001C9C  EF52  F00E         	goto	u4680
  4532   001CA0                     u4681:
  4533   001CA0  EF54  F00E         	goto	l4408
  4534   001CA4                     u4680:
  4535   001CA4  0E00               	movlw	0
  4536   001CA6  6E11               	movwf	___fladd@signs^0,c
  4537   001CA8                     l4408:
  4538   001CA8  A013               	btfss	___fladd@bexp^0,0,c
  4539   001CAA  EF59  F00E         	goto	u4691
  4540   001CAE  EF5B  F00E         	goto	u4690
  4541   001CB2                     u4691:
  4542   001CB2  EF5E  F00E         	goto	l4412
  4543   001CB6                     u4690:
  4544   001CB6  8E07               	bsf	(___fladd@b+2)^0,7,c
  4545   001CB8  EF5F  F00E         	goto	l4414
  4546   001CBC                     l4412:
  4547   001CBC  9E07               	bcf	(___fladd@b+2)^0,7,c
  4548   001CBE                     l4414:
  4549   001CBE  90D8               	bcf	status,0,c
  4550   001CC0  3013               	rrcf	___fladd@bexp^0,w,c
  4551   001CC2  6E08               	movwf	(___fladd@b+3)^0,c
  4552   001CC4  AE11               	btfss	___fladd@signs^0,7,c
  4553   001CC6  EF67  F00E         	goto	u4701
  4554   001CCA  EF69  F00E         	goto	u4700
  4555   001CCE                     u4701:
  4556   001CCE  EF6A  F00E         	goto	l4420
  4557   001CD2                     u4700:
  4558   001CD2  8E08               	bsf	(___fladd@b+3)^0,7,c
  4559   001CD4                     l4420:
  4560   001CD4  C005  F005         	movff	___fladd@b,?___fladd
  4561   001CD8  C006  F006         	movff	___fladd@b+1,?___fladd+1
  4562   001CDC  C007  F007         	movff	___fladd@b+2,?___fladd+2
  4563   001CE0  C008  F008         	movff	___fladd@b+3,?___fladd+3
  4564   001CE4                     l832:
  4565   001CE4  0012               	return		;funcret
  4566   001CE6                     __end_of___fladd:
  4567                           	callstack 0
  4568                           
  4569 ;; *************** function ___flneg *****************
  4570 ;; Defined at:
  4571 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  f1              4    4[COMRAM] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  4    4[COMRAM] unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4588 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;Total ram usage:        4 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 2
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_efgtoa
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text13
  4600   003CFE                     __ptext13:
  4601                           	callstack 0
  4602   003CFE                     ___flneg:
  4603                           	callstack 24
  4604   003CFE  5005               	movf	___flneg@f1^0,w,c
  4605   003D00  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4606   003D02  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4607   003D04  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4608   003D06  B4D8               	btfsc	status,2,c
  4609   003D08  EF88  F01E         	goto	u5351
  4610   003D0C  EF8A  F01E         	goto	u5350
  4611   003D10                     u5351:
  4612   003D10  EF92  F01E         	goto	l4828
  4613   003D14                     u5350:
  4614   003D14  0E00               	movlw	0
  4615   003D16  1A05               	xorwf	___flneg@f1^0,f,c
  4616   003D18  0E00               	movlw	0
  4617   003D1A  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4618   003D1C  0E00               	movlw	0
  4619   003D1E  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4620   003D20  0E80               	movlw	128
  4621   003D22  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4622   003D24                     l4828:
  4623   003D24  C005  F005         	movff	___flneg@f1,?___flneg
  4624   003D28  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4625   003D2C  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4626   003D30  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4627   003D34  0012               	return		;funcret
  4628   003D36                     __end_of___flneg:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function ___flmul *****************
  4632 ;; Defined at:
  4633 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  b               4    4[COMRAM] unsigned char 
  4636 ;;  a               4    8[COMRAM] unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  prod            4   23[COMRAM] struct .
  4639 ;;  grs             4   18[COMRAM] unsigned long 
  4640 ;;  temp            2   27[COMRAM] struct .
  4641 ;;  bexp            1   22[COMRAM] unsigned char 
  4642 ;;  aexp            1   17[COMRAM] unsigned char 
  4643 ;;  sign            1   16[COMRAM] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  4    4[COMRAM] unsigned char 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0, prodl, prodh
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4653 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4654 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4655 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;Total ram usage:       25 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 2
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_efgtoa
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text14
  4668   001CE6                     __ptext14:
  4669                           	callstack 0
  4670   001CE6                     ___flmul:
  4671                           	callstack 24
  4672   001CE6  5008               	movf	(___flmul@b+3)^0,w,c
  4673   001CE8  0B80               	andlw	128
  4674   001CEA  6E11               	movwf	___flmul@sign^0,c
  4675   001CEC  5008               	movf	(___flmul@b+3)^0,w,c
  4676   001CEE  2408               	addwf	(___flmul@b+3)^0,w,c
  4677   001CF0  6E17               	movwf	___flmul@bexp^0,c
  4678   001CF2  AE07               	btfss	(___flmul@b+2)^0,7,c
  4679   001CF4  EF7E  F00E         	goto	u5081
  4680   001CF8  EF80  F00E         	goto	u5080
  4681   001CFC                     u5081:
  4682   001CFC  EF81  F00E         	goto	l4656
  4683   001D00                     u5080:
  4684   001D00  8017               	bsf	___flmul@bexp^0,0,c
  4685   001D02                     l4656:
  4686   001D02  5017               	movf	___flmul@bexp^0,w,c
  4687   001D04  B4D8               	btfsc	status,2,c
  4688   001D06  EF87  F00E         	goto	u5091
  4689   001D0A  EF89  F00E         	goto	u5090
  4690   001D0E                     u5091:
  4691   001D0E  EF9C  F00E         	goto	l4664
  4692   001D12                     u5090:
  4693   001D12  2817               	incf	___flmul@bexp^0,w,c
  4694   001D14  A4D8               	btfss	status,2,c
  4695   001D16  EF8F  F00E         	goto	u5101
  4696   001D1A  EF91  F00E         	goto	u5100
  4697   001D1E                     u5101:
  4698   001D1E  EF99  F00E         	goto	l4662
  4699   001D22                     u5100:
  4700   001D22  0E00               	movlw	0
  4701   001D24  6E05               	movwf	___flmul@b^0,c
  4702   001D26  0E00               	movlw	0
  4703   001D28  6E06               	movwf	(___flmul@b+1)^0,c
  4704   001D2A  0E00               	movlw	0
  4705   001D2C  6E07               	movwf	(___flmul@b+2)^0,c
  4706   001D2E  0E00               	movlw	0
  4707   001D30  6E08               	movwf	(___flmul@b+3)^0,c
  4708   001D32                     l4662:
  4709   001D32  8E07               	bsf	(___flmul@b+2)^0,7,c
  4710   001D34  EFA4  F00E         	goto	l4666
  4711   001D38                     l4664:
  4712   001D38  0E00               	movlw	0
  4713   001D3A  6E05               	movwf	___flmul@b^0,c
  4714   001D3C  0E00               	movlw	0
  4715   001D3E  6E06               	movwf	(___flmul@b+1)^0,c
  4716   001D40  0E00               	movlw	0
  4717   001D42  6E07               	movwf	(___flmul@b+2)^0,c
  4718   001D44  0E00               	movlw	0
  4719   001D46  6E08               	movwf	(___flmul@b+3)^0,c
  4720   001D48                     l4666:
  4721   001D48  500C               	movf	(___flmul@a+3)^0,w,c
  4722   001D4A  0B80               	andlw	128
  4723   001D4C  1A11               	xorwf	___flmul@sign^0,f,c
  4724   001D4E  500C               	movf	(___flmul@a+3)^0,w,c
  4725   001D50  240C               	addwf	(___flmul@a+3)^0,w,c
  4726   001D52  6E12               	movwf	___flmul@aexp^0,c
  4727   001D54  AE0B               	btfss	(___flmul@a+2)^0,7,c
  4728   001D56  EFAF  F00E         	goto	u5111
  4729   001D5A  EFB1  F00E         	goto	u5110
  4730   001D5E                     u5111:
  4731   001D5E  EFB2  F00E         	goto	l4674
  4732   001D62                     u5110:
  4733   001D62  8012               	bsf	___flmul@aexp^0,0,c
  4734   001D64                     l4674:
  4735   001D64  5012               	movf	___flmul@aexp^0,w,c
  4736   001D66  B4D8               	btfsc	status,2,c
  4737   001D68  EFB8  F00E         	goto	u5121
  4738   001D6C  EFBA  F00E         	goto	u5120
  4739   001D70                     u5121:
  4740   001D70  EFCD  F00E         	goto	l4682
  4741   001D74                     u5120:
  4742   001D74  2812               	incf	___flmul@aexp^0,w,c
  4743   001D76  A4D8               	btfss	status,2,c
  4744   001D78  EFC0  F00E         	goto	u5131
  4745   001D7C  EFC2  F00E         	goto	u5130
  4746   001D80                     u5131:
  4747   001D80  EFCA  F00E         	goto	l4680
  4748   001D84                     u5130:
  4749   001D84  0E00               	movlw	0
  4750   001D86  6E09               	movwf	___flmul@a^0,c
  4751   001D88  0E00               	movlw	0
  4752   001D8A  6E0A               	movwf	(___flmul@a+1)^0,c
  4753   001D8C  0E00               	movlw	0
  4754   001D8E  6E0B               	movwf	(___flmul@a+2)^0,c
  4755   001D90  0E00               	movlw	0
  4756   001D92  6E0C               	movwf	(___flmul@a+3)^0,c
  4757   001D94                     l4680:
  4758   001D94  8E0B               	bsf	(___flmul@a+2)^0,7,c
  4759   001D96  EFD5  F00E         	goto	l909
  4760   001D9A                     l4682:
  4761   001D9A  0E00               	movlw	0
  4762   001D9C  6E09               	movwf	___flmul@a^0,c
  4763   001D9E  0E00               	movlw	0
  4764   001DA0  6E0A               	movwf	(___flmul@a+1)^0,c
  4765   001DA2  0E00               	movlw	0
  4766   001DA4  6E0B               	movwf	(___flmul@a+2)^0,c
  4767   001DA6  0E00               	movlw	0
  4768   001DA8  6E0C               	movwf	(___flmul@a+3)^0,c
  4769   001DAA                     l909:
  4770   001DAA  5012               	movf	___flmul@aexp^0,w,c
  4771   001DAC  B4D8               	btfsc	status,2,c
  4772   001DAE  EFDB  F00E         	goto	u5141
  4773   001DB2  EFDD  F00E         	goto	u5140
  4774   001DB6                     u5141:
  4775   001DB6  EFE5  F00E         	goto	l4686
  4776   001DBA                     u5140:
  4777   001DBA  5017               	movf	___flmul@bexp^0,w,c
  4778   001DBC  A4D8               	btfss	status,2,c
  4779   001DBE  EFE3  F00E         	goto	u5151
  4780   001DC2  EFE5  F00E         	goto	u5150
  4781   001DC6                     u5151:
  4782   001DC6  EFEF  F00E         	goto	l4690
  4783   001DCA                     u5150:
  4784   001DCA                     l4686:
  4785   001DCA  0E00               	movlw	0
  4786   001DCC  6E05               	movwf	?___flmul^0,c
  4787   001DCE  0E00               	movlw	0
  4788   001DD0  6E06               	movwf	(?___flmul+1)^0,c
  4789   001DD2  0E00               	movlw	0
  4790   001DD4  6E07               	movwf	(?___flmul+2)^0,c
  4791   001DD6  0E00               	movlw	0
  4792   001DD8  6E08               	movwf	(?___flmul+3)^0,c
  4793   001DDA  EF87  F010         	goto	l913
  4794   001DDE                     l4690:
  4795   001DDE  500B               	movf	(___flmul@a+2)^0,w,c
  4796   001DE0  0205               	mulwf	___flmul@b^0,c
  4797   001DE2  CFF3 F01C          	movff	prodl,___flmul@temp
  4798   001DE6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4799   001DEA  501C               	movf	___flmul@temp^0,w,c
  4800   001DEC  6E13               	movwf	___flmul@grs^0,c
  4801   001DEE  6A14               	clrf	(___flmul@grs+1)^0,c
  4802   001DF0  6A15               	clrf	(___flmul@grs+2)^0,c
  4803   001DF2  6A16               	clrf	(___flmul@grs+3)^0,c
  4804   001DF4  501D               	movf	(___flmul@temp+1)^0,w,c
  4805   001DF6  6E18               	movwf	___flmul@prod^0,c
  4806   001DF8  6A19               	clrf	(___flmul@prod+1)^0,c
  4807   001DFA  6A1A               	clrf	(___flmul@prod+2)^0,c
  4808   001DFC  6A1B               	clrf	(___flmul@prod+3)^0,c
  4809   001DFE  500A               	movf	(___flmul@a+1)^0,w,c
  4810   001E00  0206               	mulwf	(___flmul@b+1)^0,c
  4811   001E02  CFF3 F01C          	movff	prodl,___flmul@temp
  4812   001E06  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4813   001E0A  501C               	movf	___flmul@temp^0,w,c
  4814   001E0C  2613               	addwf	___flmul@grs^0,f,c
  4815   001E0E  0E00               	movlw	0
  4816   001E10  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4817   001E12  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4818   001E14  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4819   001E16  501D               	movf	(___flmul@temp+1)^0,w,c
  4820   001E18  2618               	addwf	___flmul@prod^0,f,c
  4821   001E1A  0E00               	movlw	0
  4822   001E1C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4823   001E1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4824   001E20  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4825   001E22  5009               	movf	___flmul@a^0,w,c
  4826   001E24  0207               	mulwf	(___flmul@b+2)^0,c
  4827   001E26  CFF3 F01C          	movff	prodl,___flmul@temp
  4828   001E2A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4829   001E2E  501C               	movf	___flmul@temp^0,w,c
  4830   001E30  2613               	addwf	___flmul@grs^0,f,c
  4831   001E32  0E00               	movlw	0
  4832   001E34  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4833   001E36  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4834   001E38  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4835   001E3A  501D               	movf	(___flmul@temp+1)^0,w,c
  4836   001E3C  2618               	addwf	___flmul@prod^0,f,c
  4837   001E3E  0E00               	movlw	0
  4838   001E40  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4839   001E42  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4840   001E44  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4841   001E46  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4842   001E4A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4843   001E4E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4844   001E52  6A13               	clrf	___flmul@grs^0,c
  4845   001E54  5009               	movf	___flmul@a^0,w,c
  4846   001E56  0206               	mulwf	(___flmul@b+1)^0,c
  4847   001E58  CFF3 F01C          	movff	prodl,___flmul@temp
  4848   001E5C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4849   001E60  501C               	movf	___flmul@temp^0,w,c
  4850   001E62  2613               	addwf	___flmul@grs^0,f,c
  4851   001E64  501D               	movf	(___flmul@temp+1)^0,w,c
  4852   001E66  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4853   001E68  0E00               	movlw	0
  4854   001E6A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4855   001E6C  0E00               	movlw	0
  4856   001E6E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4857   001E70  500A               	movf	(___flmul@a+1)^0,w,c
  4858   001E72  0205               	mulwf	___flmul@b^0,c
  4859   001E74  CFF3 F01C          	movff	prodl,___flmul@temp
  4860   001E78  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4861   001E7C  501C               	movf	___flmul@temp^0,w,c
  4862   001E7E  2613               	addwf	___flmul@grs^0,f,c
  4863   001E80  501D               	movf	(___flmul@temp+1)^0,w,c
  4864   001E82  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4865   001E84  0E00               	movlw	0
  4866   001E86  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4867   001E88  0E00               	movlw	0
  4868   001E8A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4869   001E8C  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4870   001E90  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4871   001E94  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4872   001E98  6A13               	clrf	___flmul@grs^0,c
  4873   001E9A  5009               	movf	___flmul@a^0,w,c
  4874   001E9C  0205               	mulwf	___flmul@b^0,c
  4875   001E9E  CFF3 F01C          	movff	prodl,___flmul@temp
  4876   001EA2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4877   001EA6  501C               	movf	___flmul@temp^0,w,c
  4878   001EA8  2613               	addwf	___flmul@grs^0,f,c
  4879   001EAA  501D               	movf	(___flmul@temp+1)^0,w,c
  4880   001EAC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4881   001EAE  0E00               	movlw	0
  4882   001EB0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4883   001EB2  0E00               	movlw	0
  4884   001EB4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4885   001EB6  500B               	movf	(___flmul@a+2)^0,w,c
  4886   001EB8  0206               	mulwf	(___flmul@b+1)^0,c
  4887   001EBA  CFF3 F01C          	movff	prodl,___flmul@temp
  4888   001EBE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4889   001EC2  501C               	movf	___flmul@temp^0,w,c
  4890   001EC4  2618               	addwf	___flmul@prod^0,f,c
  4891   001EC6  501D               	movf	(___flmul@temp+1)^0,w,c
  4892   001EC8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4893   001ECA  0E00               	movlw	0
  4894   001ECC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4895   001ECE  0E00               	movlw	0
  4896   001ED0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4897   001ED2  500A               	movf	(___flmul@a+1)^0,w,c
  4898   001ED4  0207               	mulwf	(___flmul@b+2)^0,c
  4899   001ED6  CFF3 F01C          	movff	prodl,___flmul@temp
  4900   001EDA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4901   001EDE  501C               	movf	___flmul@temp^0,w,c
  4902   001EE0  2618               	addwf	___flmul@prod^0,f,c
  4903   001EE2  501D               	movf	(___flmul@temp+1)^0,w,c
  4904   001EE4  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4905   001EE6  0E00               	movlw	0
  4906   001EE8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4907   001EEA  0E00               	movlw	0
  4908   001EEC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4909   001EEE  500B               	movf	(___flmul@a+2)^0,w,c
  4910   001EF0  0207               	mulwf	(___flmul@b+2)^0,c
  4911   001EF2  CFF3 F01C          	movff	prodl,___flmul@temp
  4912   001EF6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4913   001EFA  501C               	movf	___flmul@temp^0,w,c
  4914   001EFC  6E0D               	movwf	??___flmul^0,c
  4915   001EFE  501D               	movf	(___flmul@temp+1)^0,w,c
  4916   001F00  6E0E               	movwf	(??___flmul+1)^0,c
  4917   001F02  6A0F               	clrf	(??___flmul+2)^0,c
  4918   001F04  6A10               	clrf	(??___flmul+3)^0,c
  4919   001F06  C00F  F010         	movff	??___flmul+2,??___flmul+3
  4920   001F0A  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  4921   001F0E  C00D  F00E         	movff	??___flmul,??___flmul+1
  4922   001F12  6A0D               	clrf	??___flmul^0,c
  4923   001F14  500D               	movf	??___flmul^0,w,c
  4924   001F16  2618               	addwf	___flmul@prod^0,f,c
  4925   001F18  500E               	movf	(??___flmul+1)^0,w,c
  4926   001F1A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4927   001F1C  500F               	movf	(??___flmul+2)^0,w,c
  4928   001F1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4929   001F20  5010               	movf	(??___flmul+3)^0,w,c
  4930   001F22  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4931   001F24  C013  F00D         	movff	___flmul@grs,??___flmul
  4932   001F28  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  4933   001F2C  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  4934   001F30  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  4935   001F34  0E19               	movlw	25
  4936   001F36  EFA2  F00F         	goto	u5160
  4937   001F3A                     u5165:
  4938   001F3A  90D8               	bcf	status,0,c
  4939   001F3C  3210               	rrcf	(??___flmul+3)^0,f,c
  4940   001F3E  320F               	rrcf	(??___flmul+2)^0,f,c
  4941   001F40  320E               	rrcf	(??___flmul+1)^0,f,c
  4942   001F42  320D               	rrcf	??___flmul^0,f,c
  4943   001F44                     u5160:
  4944   001F44  2EE8               	decfsz	wreg,f,c
  4945   001F46  EF9D  F00F         	goto	u5165
  4946   001F4A  500D               	movf	??___flmul^0,w,c
  4947   001F4C  2618               	addwf	___flmul@prod^0,f,c
  4948   001F4E  500E               	movf	(??___flmul+1)^0,w,c
  4949   001F50  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4950   001F52  500F               	movf	(??___flmul+2)^0,w,c
  4951   001F54  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4952   001F56  5010               	movf	(??___flmul+3)^0,w,c
  4953   001F58  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4954   001F5A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4955   001F5E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4956   001F62  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4957   001F66  6A13               	clrf	___flmul@grs^0,c
  4958   001F68  5012               	movf	___flmul@aexp^0,w,c
  4959   001F6A  C017  F00D         	movff	___flmul@bexp,??___flmul
  4960   001F6E  6A0E               	clrf	(??___flmul+1)^0,c
  4961   001F70  260D               	addwf	??___flmul^0,f,c
  4962   001F72  0E00               	movlw	0
  4963   001F74  220E               	addwfc	(??___flmul+1)^0,f,c
  4964   001F76  0E82               	movlw	130
  4965   001F78  240D               	addwf	??___flmul^0,w,c
  4966   001F7A  6E1C               	movwf	___flmul@temp^0,c
  4967   001F7C  0EFF               	movlw	255
  4968   001F7E  200E               	addwfc	(??___flmul+1)^0,w,c
  4969   001F80  6E1D               	movwf	(___flmul@temp+1)^0,c
  4970   001F82  EFD8  F00F         	goto	l4738
  4971   001F86                     l4732:
  4972   001F86  90D8               	bcf	status,0,c
  4973   001F88  3618               	rlcf	___flmul@prod^0,f,c
  4974   001F8A  3619               	rlcf	(___flmul@prod+1)^0,f,c
  4975   001F8C  361A               	rlcf	(___flmul@prod+2)^0,f,c
  4976   001F8E  361B               	rlcf	(___flmul@prod+3)^0,f,c
  4977   001F90  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4978   001F92  EFCD  F00F         	goto	u5171
  4979   001F96  EFCF  F00F         	goto	u5170
  4980   001F9A                     u5171:
  4981   001F9A  EFD0  F00F         	goto	l916
  4982   001F9E                     u5170:
  4983   001F9E  8018               	bsf	___flmul@prod^0,0,c
  4984   001FA0                     l916:
  4985   001FA0  90D8               	bcf	status,0,c
  4986   001FA2  3613               	rlcf	___flmul@grs^0,f,c
  4987   001FA4  3614               	rlcf	(___flmul@grs+1)^0,f,c
  4988   001FA6  3615               	rlcf	(___flmul@grs+2)^0,f,c
  4989   001FA8  3616               	rlcf	(___flmul@grs+3)^0,f,c
  4990   001FAA  061C               	decf	___flmul@temp^0,f,c
  4991   001FAC  A0D8               	btfss	status,0,c
  4992   001FAE  061D               	decf	(___flmul@temp+1)^0,f,c
  4993   001FB0                     l4738:
  4994   001FB0  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  4995   001FB2  EFDD  F00F         	goto	u5181
  4996   001FB6  EFDF  F00F         	goto	u5180
  4997   001FBA                     u5181:
  4998   001FBA  EFC3  F00F         	goto	l4732
  4999   001FBE                     u5180:
  5000   001FBE  0E00               	movlw	0
  5001   001FC0  6E12               	movwf	___flmul@aexp^0,c
  5002   001FC2  AE16               	btfss	(___flmul@grs+3)^0,7,c
  5003   001FC4  EFE6  F00F         	goto	u5191
  5004   001FC8  EFE8  F00F         	goto	u5190
  5005   001FCC                     u5191:
  5006   001FCC  EF0C  F010         	goto	l918
  5007   001FD0                     u5190:
  5008   001FD0  0EFF               	movlw	255
  5009   001FD2  1413               	andwf	___flmul@grs^0,w,c
  5010   001FD4  6E0D               	movwf	??___flmul^0,c
  5011   001FD6  0EFF               	movlw	255
  5012   001FD8  1414               	andwf	(___flmul@grs+1)^0,w,c
  5013   001FDA  6E0E               	movwf	(??___flmul+1)^0,c
  5014   001FDC  0EFF               	movlw	255
  5015   001FDE  1415               	andwf	(___flmul@grs+2)^0,w,c
  5016   001FE0  6E0F               	movwf	(??___flmul+2)^0,c
  5017   001FE2  0E7F               	movlw	127
  5018   001FE4  1416               	andwf	(___flmul@grs+3)^0,w,c
  5019   001FE6  6E10               	movwf	(??___flmul+3)^0,c
  5020   001FE8  500D               	movf	??___flmul^0,w,c
  5021   001FEA  100E               	iorwf	(??___flmul+1)^0,w,c
  5022   001FEC  100F               	iorwf	(??___flmul+2)^0,w,c
  5023   001FEE  1010               	iorwf	(??___flmul+3)^0,w,c
  5024   001FF0  B4D8               	btfsc	status,2,c
  5025   001FF2  EFFD  F00F         	goto	u5201
  5026   001FF6  EFFF  F00F         	goto	u5200
  5027   001FFA                     u5201:
  5028   001FFA  EF03  F010         	goto	l919
  5029   001FFE                     u5200:
  5030   001FFE                     l4746:
  5031   001FFE  0E01               	movlw	1
  5032   002000  6E12               	movwf	___flmul@aexp^0,c
  5033   002002  EF0C  F010         	goto	l918
  5034   002006                     l919:
  5035   002006  A018               	btfss	___flmul@prod^0,0,c
  5036   002008  EF08  F010         	goto	u5211
  5037   00200C  EF0A  F010         	goto	u5210
  5038   002010                     u5211:
  5039   002010  EF0C  F010         	goto	l918
  5040   002014                     u5210:
  5041   002014  EFFF  F00F         	goto	l4746
  5042   002018                     l918:
  5043   002018  5012               	movf	___flmul@aexp^0,w,c
  5044   00201A  B4D8               	btfsc	status,2,c
  5045   00201C  EF12  F010         	goto	u5221
  5046   002020  EF14  F010         	goto	u5220
  5047   002024                     u5221:
  5048   002024  EF38  F010         	goto	l4758
  5049   002028                     u5220:
  5050   002028  0E01               	movlw	1
  5051   00202A  2618               	addwf	___flmul@prod^0,f,c
  5052   00202C  0E00               	movlw	0
  5053   00202E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  5054   002030  221A               	addwfc	(___flmul@prod+2)^0,f,c
  5055   002032  221B               	addwfc	(___flmul@prod+3)^0,f,c
  5056   002034  A01B               	btfss	(___flmul@prod+3)^0,0,c
  5057   002036  EF1F  F010         	goto	u5231
  5058   00203A  EF21  F010         	goto	u5230
  5059   00203E                     u5231:
  5060   00203E  EF38  F010         	goto	l4758
  5061   002042                     u5230:
  5062   002042  C018  F00D         	movff	___flmul@prod,??___flmul
  5063   002046  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  5064   00204A  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  5065   00204E  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  5066   002052  3410               	rlcf	(??___flmul+3)^0,w,c
  5067   002054  3210               	rrcf	(??___flmul+3)^0,f,c
  5068   002056  320F               	rrcf	(??___flmul+2)^0,f,c
  5069   002058  320E               	rrcf	(??___flmul+1)^0,f,c
  5070   00205A  320D               	rrcf	??___flmul^0,f,c
  5071   00205C  C00D  F018         	movff	??___flmul,___flmul@prod
  5072   002060  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  5073   002064  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  5074   002068  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  5075   00206C  4A1C               	infsnz	___flmul@temp^0,f,c
  5076   00206E  2A1D               	incf	(___flmul@temp+1)^0,f,c
  5077   002070                     l4758:
  5078   002070  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5079   002072  EF43  F010         	goto	u5241
  5080   002076  501D               	movf	(___flmul@temp+1)^0,w,c
  5081   002078  E108               	bnz	u5240
  5082   00207A  281C               	incf	___flmul@temp^0,w,c
  5083   00207C  A0D8               	btfss	status,0,c
  5084   00207E  EF43  F010         	goto	u5241
  5085   002082  EF45  F010         	goto	u5240
  5086   002086                     u5241:
  5087   002086  EF4F  F010         	goto	l4762
  5088   00208A                     u5240:
  5089   00208A  0E00               	movlw	0
  5090   00208C  6E18               	movwf	___flmul@prod^0,c
  5091   00208E  0E00               	movlw	0
  5092   002090  6E19               	movwf	(___flmul@prod+1)^0,c
  5093   002092  0E80               	movlw	128
  5094   002094  6E1A               	movwf	(___flmul@prod+2)^0,c
  5095   002096  0E7F               	movlw	127
  5096   002098  6E1B               	movwf	(___flmul@prod+3)^0,c
  5097   00209A  EF7D  F010         	goto	l4774
  5098   00209E                     l4762:
  5099   00209E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5100   0020A0  EF5C  F010         	goto	u5250
  5101   0020A4  501D               	movf	(___flmul@temp+1)^0,w,c
  5102   0020A6  E106               	bnz	u5251
  5103   0020A8  041C               	decf	___flmul@temp^0,w,c
  5104   0020AA  B0D8               	btfsc	status,0,c
  5105   0020AC  EF5A  F010         	goto	u5251
  5106   0020B0  EF5C  F010         	goto	u5250
  5107   0020B4                     u5251:
  5108   0020B4  EF68  F010         	goto	l926
  5109   0020B8                     u5250:
  5110   0020B8  0E00               	movlw	0
  5111   0020BA  6E18               	movwf	___flmul@prod^0,c
  5112   0020BC  0E00               	movlw	0
  5113   0020BE  6E19               	movwf	(___flmul@prod+1)^0,c
  5114   0020C0  0E00               	movlw	0
  5115   0020C2  6E1A               	movwf	(___flmul@prod+2)^0,c
  5116   0020C4  0E00               	movlw	0
  5117   0020C6  6E1B               	movwf	(___flmul@prod+3)^0,c
  5118   0020C8  0E00               	movlw	0
  5119   0020CA  6E11               	movwf	___flmul@sign^0,c
  5120   0020CC  EF7D  F010         	goto	l4774
  5121   0020D0                     l926:
  5122   0020D0  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  5123   0020D4  0EFF               	movlw	255
  5124   0020D6  1618               	andwf	___flmul@prod^0,f,c
  5125   0020D8  0EFF               	movlw	255
  5126   0020DA  1619               	andwf	(___flmul@prod+1)^0,f,c
  5127   0020DC  0E7F               	movlw	127
  5128   0020DE  161A               	andwf	(___flmul@prod+2)^0,f,c
  5129   0020E0  0E00               	movlw	0
  5130   0020E2  161B               	andwf	(___flmul@prod+3)^0,f,c
  5131   0020E4  A017               	btfss	___flmul@bexp^0,0,c
  5132   0020E6  EF77  F010         	goto	u5261
  5133   0020EA  EF79  F010         	goto	u5260
  5134   0020EE                     u5261:
  5135   0020EE  EF7A  F010         	goto	l4772
  5136   0020F2                     u5260:
  5137   0020F2  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  5138   0020F4                     l4772:
  5139   0020F4  90D8               	bcf	status,0,c
  5140   0020F6  3017               	rrcf	___flmul@bexp^0,w,c
  5141   0020F8  6E1B               	movwf	(___flmul@prod+3)^0,c
  5142   0020FA                     l4774:
  5143   0020FA  5011               	movf	___flmul@sign^0,w,c
  5144   0020FC  121B               	iorwf	(___flmul@prod+3)^0,f,c
  5145   0020FE  C018  F005         	movff	___flmul@prod,?___flmul
  5146   002102  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  5147   002106  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  5148   00210A  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  5149   00210E                     l913:
  5150   00210E  0012               	return		;funcret
  5151   002110                     __end_of___flmul:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function ___flge *****************
  5155 ;; Defined at:
  5156 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  ff1             4   29[COMRAM] unsigned char 
  5159 ;;  ff2             4   33[COMRAM] unsigned char 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;		None               void
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5171 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;Total ram usage:       12 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; Hardware stack levels required when called: 2
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_efgtoa
  5182 ;;		_Colour_decider
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text15
  5187   003486                     __ptext15:
  5188                           	callstack 0
  5189   003486                     ___flge:
  5190                           	callstack 24
  5191   003486  0E00               	movlw	0
  5192   003488  141E               	andwf	___flge@ff1^0,w,c
  5193   00348A  6E26               	movwf	??___flge^0,c
  5194   00348C  0E00               	movlw	0
  5195   00348E  141F               	andwf	(___flge@ff1+1)^0,w,c
  5196   003490  6E27               	movwf	(??___flge+1)^0,c
  5197   003492  0E80               	movlw	128
  5198   003494  1420               	andwf	(___flge@ff1+2)^0,w,c
  5199   003496  6E28               	movwf	(??___flge+2)^0,c
  5200   003498  0E7F               	movlw	127
  5201   00349A  1421               	andwf	(___flge@ff1+3)^0,w,c
  5202   00349C  6E29               	movwf	(??___flge+3)^0,c
  5203   00349E  5026               	movf	??___flge^0,w,c
  5204   0034A0  1027               	iorwf	(??___flge+1)^0,w,c
  5205   0034A2  1028               	iorwf	(??___flge+2)^0,w,c
  5206   0034A4  1029               	iorwf	(??___flge+3)^0,w,c
  5207   0034A6  A4D8               	btfss	status,2,c
  5208   0034A8  EF58  F01A         	goto	u5301
  5209   0034AC  EF5A  F01A         	goto	u5300
  5210   0034B0                     u5301:
  5211   0034B0  EF62  F01A         	goto	l4806
  5212   0034B4                     u5300:
  5213   0034B4  0E00               	movlw	0
  5214   0034B6  6E1E               	movwf	___flge@ff1^0,c
  5215   0034B8  0E00               	movlw	0
  5216   0034BA  6E1F               	movwf	(___flge@ff1+1)^0,c
  5217   0034BC  0E00               	movlw	0
  5218   0034BE  6E20               	movwf	(___flge@ff1+2)^0,c
  5219   0034C0  0E00               	movlw	0
  5220   0034C2  6E21               	movwf	(___flge@ff1+3)^0,c
  5221   0034C4                     l4806:
  5222   0034C4  0E00               	movlw	0
  5223   0034C6  1422               	andwf	___flge@ff2^0,w,c
  5224   0034C8  6E26               	movwf	??___flge^0,c
  5225   0034CA  0E00               	movlw	0
  5226   0034CC  1423               	andwf	(___flge@ff2+1)^0,w,c
  5227   0034CE  6E27               	movwf	(??___flge+1)^0,c
  5228   0034D0  0E80               	movlw	128
  5229   0034D2  1424               	andwf	(___flge@ff2+2)^0,w,c
  5230   0034D4  6E28               	movwf	(??___flge+2)^0,c
  5231   0034D6  0E7F               	movlw	127
  5232   0034D8  1425               	andwf	(___flge@ff2+3)^0,w,c
  5233   0034DA  6E29               	movwf	(??___flge+3)^0,c
  5234   0034DC  5026               	movf	??___flge^0,w,c
  5235   0034DE  1027               	iorwf	(??___flge+1)^0,w,c
  5236   0034E0  1028               	iorwf	(??___flge+2)^0,w,c
  5237   0034E2  1029               	iorwf	(??___flge+3)^0,w,c
  5238   0034E4  A4D8               	btfss	status,2,c
  5239   0034E6  EF77  F01A         	goto	u5311
  5240   0034EA  EF79  F01A         	goto	u5310
  5241   0034EE                     u5311:
  5242   0034EE  EF81  F01A         	goto	l4810
  5243   0034F2                     u5310:
  5244   0034F2  0E00               	movlw	0
  5245   0034F4  6E22               	movwf	___flge@ff2^0,c
  5246   0034F6  0E00               	movlw	0
  5247   0034F8  6E23               	movwf	(___flge@ff2+1)^0,c
  5248   0034FA  0E00               	movlw	0
  5249   0034FC  6E24               	movwf	(___flge@ff2+2)^0,c
  5250   0034FE  0E00               	movlw	0
  5251   003500  6E25               	movwf	(___flge@ff2+3)^0,c
  5252   003502                     l4810:
  5253   003502  AE21               	btfss	(___flge@ff1+3)^0,7,c
  5254   003504  EF86  F01A         	goto	u5321
  5255   003508  EF88  F01A         	goto	u5320
  5256   00350C                     u5321:
  5257   00350C  EF91  F01A         	goto	l4814
  5258   003510                     u5320:
  5259   003510  6C1E               	negf	___flge@ff1^0,c
  5260   003512  1E1F               	comf	(___flge@ff1+1)^0,f,c
  5261   003514  B0D8               	btfsc	status,0,c
  5262   003516  2A1F               	incf	(___flge@ff1+1)^0,f,c
  5263   003518  1E20               	comf	(___flge@ff1+2)^0,f,c
  5264   00351A  B0D8               	btfsc	status,0,c
  5265   00351C  2A20               	incf	(___flge@ff1+2)^0,f,c
  5266   00351E  0E80               	movlw	128
  5267   003520  5621               	subfwb	(___flge@ff1+3)^0,f,c
  5268   003522                     l4814:
  5269   003522  AE25               	btfss	(___flge@ff2+3)^0,7,c
  5270   003524  EF96  F01A         	goto	u5331
  5271   003528  EF98  F01A         	goto	u5330
  5272   00352C                     u5331:
  5273   00352C  EFA1  F01A         	goto	l560
  5274   003530                     u5330:
  5275   003530  6C22               	negf	___flge@ff2^0,c
  5276   003532  1E23               	comf	(___flge@ff2+1)^0,f,c
  5277   003534  B0D8               	btfsc	status,0,c
  5278   003536  2A23               	incf	(___flge@ff2+1)^0,f,c
  5279   003538  1E24               	comf	(___flge@ff2+2)^0,f,c
  5280   00353A  B0D8               	btfsc	status,0,c
  5281   00353C  2A24               	incf	(___flge@ff2+2)^0,f,c
  5282   00353E  0E80               	movlw	128
  5283   003540  5625               	subfwb	(___flge@ff2+3)^0,f,c
  5284   003542                     l560:
  5285   003542  0E00               	movlw	0
  5286   003544  1A1E               	xorwf	___flge@ff1^0,f,c
  5287   003546  0E00               	movlw	0
  5288   003548  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  5289   00354A  0E00               	movlw	0
  5290   00354C  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  5291   00354E  0E80               	movlw	128
  5292   003550  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  5293   003552  0E00               	movlw	0
  5294   003554  1A22               	xorwf	___flge@ff2^0,f,c
  5295   003556  0E00               	movlw	0
  5296   003558  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  5297   00355A  0E00               	movlw	0
  5298   00355C  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  5299   00355E  0E80               	movlw	128
  5300   003560  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  5301   003562  5022               	movf	___flge@ff2^0,w,c
  5302   003564  5C1E               	subwf	___flge@ff1^0,w,c
  5303   003566  5023               	movf	(___flge@ff2+1)^0,w,c
  5304   003568  581F               	subwfb	(___flge@ff1+1)^0,w,c
  5305   00356A  5024               	movf	(___flge@ff2+2)^0,w,c
  5306   00356C  5820               	subwfb	(___flge@ff1+2)^0,w,c
  5307   00356E  5025               	movf	(___flge@ff2+3)^0,w,c
  5308   003570  5821               	subwfb	(___flge@ff1+3)^0,w,c
  5309   003572  B0D8               	btfsc	status,0,c
  5310   003574  EFBE  F01A         	goto	u5341
  5311   003578  EFC0  F01A         	goto	u5340
  5312   00357C                     u5341:
  5313   00357C  EFC3  F01A         	goto	l4820
  5314   003580                     u5340:
  5315   003580  90D8               	bcf	status,0,c
  5316   003582  EFC4  F01A         	goto	l565
  5317   003586                     l4820:
  5318   003586  80D8               	bsf	status,0,c
  5319   003588                     l565:
  5320   003588  0012               	return		;funcret
  5321   00358A                     __end_of___flge:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function ___fleq *****************
  5325 ;; Defined at:
  5326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  ff1             4    4[COMRAM] unsigned char 
  5329 ;;  ff2             4    8[COMRAM] unsigned char 
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;		None               void
  5334 ;; Registers used:
  5335 ;;		wreg, status,2, status,0
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;Total ram usage:       12 bytes
  5346 ;; Hardware stack levels used: 1
  5347 ;; Hardware stack levels required when called: 2
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_efgtoa
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text16
  5356   003752                     __ptext16:
  5357                           	callstack 0
  5358   003752                     ___fleq:
  5359                           	callstack 24
  5360   003752  0E00               	movlw	0
  5361   003754  1405               	andwf	___fleq@ff1^0,w,c
  5362   003756  6E0D               	movwf	??___fleq^0,c
  5363   003758  0E00               	movlw	0
  5364   00375A  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5365   00375C  6E0E               	movwf	(??___fleq+1)^0,c
  5366   00375E  0E80               	movlw	128
  5367   003760  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5368   003762  6E0F               	movwf	(??___fleq+2)^0,c
  5369   003764  0E7F               	movlw	127
  5370   003766  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5371   003768  6E10               	movwf	(??___fleq+3)^0,c
  5372   00376A  500D               	movf	??___fleq^0,w,c
  5373   00376C  100E               	iorwf	(??___fleq+1)^0,w,c
  5374   00376E  100F               	iorwf	(??___fleq+2)^0,w,c
  5375   003770  1010               	iorwf	(??___fleq+3)^0,w,c
  5376   003772  A4D8               	btfss	status,2,c
  5377   003774  EFBE  F01B         	goto	u5271
  5378   003778  EFC0  F01B         	goto	u5270
  5379   00377C                     u5271:
  5380   00377C  EFC8  F01B         	goto	l4790
  5381   003780                     u5270:
  5382   003780  0E00               	movlw	0
  5383   003782  6E05               	movwf	___fleq@ff1^0,c
  5384   003784  0E00               	movlw	0
  5385   003786  6E06               	movwf	(___fleq@ff1+1)^0,c
  5386   003788  0E00               	movlw	0
  5387   00378A  6E07               	movwf	(___fleq@ff1+2)^0,c
  5388   00378C  0E00               	movlw	0
  5389   00378E  6E08               	movwf	(___fleq@ff1+3)^0,c
  5390   003790                     l4790:
  5391   003790  0E00               	movlw	0
  5392   003792  1409               	andwf	___fleq@ff2^0,w,c
  5393   003794  6E0D               	movwf	??___fleq^0,c
  5394   003796  0E00               	movlw	0
  5395   003798  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5396   00379A  6E0E               	movwf	(??___fleq+1)^0,c
  5397   00379C  0E80               	movlw	128
  5398   00379E  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5399   0037A0  6E0F               	movwf	(??___fleq+2)^0,c
  5400   0037A2  0E7F               	movlw	127
  5401   0037A4  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5402   0037A6  6E10               	movwf	(??___fleq+3)^0,c
  5403   0037A8  500D               	movf	??___fleq^0,w,c
  5404   0037AA  100E               	iorwf	(??___fleq+1)^0,w,c
  5405   0037AC  100F               	iorwf	(??___fleq+2)^0,w,c
  5406   0037AE  1010               	iorwf	(??___fleq+3)^0,w,c
  5407   0037B0  A4D8               	btfss	status,2,c
  5408   0037B2  EFDD  F01B         	goto	u5281
  5409   0037B6  EFDF  F01B         	goto	u5280
  5410   0037BA                     u5281:
  5411   0037BA  EFE7  F01B         	goto	l4794
  5412   0037BE                     u5280:
  5413   0037BE  0E00               	movlw	0
  5414   0037C0  6E09               	movwf	___fleq@ff2^0,c
  5415   0037C2  0E00               	movlw	0
  5416   0037C4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5417   0037C6  0E00               	movlw	0
  5418   0037C8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5419   0037CA  0E00               	movlw	0
  5420   0037CC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5421   0037CE                     l4794:
  5422   0037CE  5009               	movf	___fleq@ff2^0,w,c
  5423   0037D0  1805               	xorwf	___fleq@ff1^0,w,c
  5424   0037D2  E10F               	bnz	u5290
  5425   0037D4  500A               	movf	(___fleq@ff2+1)^0,w,c
  5426   0037D6  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5427   0037D8  E10C               	bnz	u5290
  5428   0037DA  500B               	movf	(___fleq@ff2+2)^0,w,c
  5429   0037DC  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5430   0037DE  E109               	bnz	u5290
  5431   0037E0  500C               	movf	(___fleq@ff2+3)^0,w,c
  5432   0037E2  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5433   0037E4  B4D8               	btfsc	status,2,c
  5434   0037E6  EFF7  F01B         	goto	u5291
  5435   0037EA  EFF9  F01B         	goto	u5290
  5436   0037EE                     u5291:
  5437   0037EE  EFFC  F01B         	goto	l4798
  5438   0037F2                     u5290:
  5439   0037F2  90D8               	bcf	status,0,c
  5440   0037F4  EFFD  F01B         	goto	l554
  5441   0037F8                     l4798:
  5442   0037F8  80D8               	bsf	status,0,c
  5443   0037FA                     l554:
  5444   0037FA  0012               	return		;funcret
  5445   0037FC                     __end_of___fleq:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function _dtoa *****************
  5449 ;; Defined at:
  5450 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5453 ;;		 -> sprintf@f(11), 
  5454 ;;  d               8   33[COMRAM] long long 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  n               8   55[COMRAM] long long 
  5457 ;;  i               2   64[COMRAM] int 
  5458 ;;  w               2   53[COMRAM] int 
  5459 ;;  p               2   51[COMRAM] int 
  5460 ;;  s               1   63[COMRAM] unsigned char 
  5461 ;; Return value:  Size  Location     Type
  5462 ;;                  1    wreg      void 
  5463 ;; Registers used:
  5464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5465 ;; Tracked objects:
  5466 ;;		On entry : 0/0
  5467 ;;		On exit  : 0/0
  5468 ;;		Unchanged: 0/0
  5469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5470 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;Total ram usage:       35 bytes
  5475 ;; Hardware stack levels used: 1
  5476 ;; Hardware stack levels required when called: 6
  5477 ;; This function calls:
  5478 ;;		___aodiv
  5479 ;;		___aomod
  5480 ;;		_abs
  5481 ;;		_pad
  5482 ;; This function is called by:
  5483 ;;		_vfpfcnvrt
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text17
  5488   0027B0                     __ptext17:
  5489                           	callstack 0
  5490   0027B0                     _dtoa:
  5491                           	callstack 21
  5492   0027B0                     
  5493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5494   0027B0  C022  F038         	movff	dtoa@d,dtoa@n
  5495   0027B4  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  5496   0027B8  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  5497   0027BC  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  5498   0027C0  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  5499   0027C4  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  5500   0027C8  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  5501   0027CC  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  5502   0027D0                     
  5503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5504   0027D0  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5505   0027D2  EFED  F013         	goto	u5661
  5506   0027D6  EFF0  F013         	goto	u5660
  5507   0027DA                     u5661:
  5508   0027DA  0E01               	movlw	1
  5509   0027DC  EFF1  F013         	goto	u5670
  5510   0027E0                     u5660:
  5511   0027E0  0E00               	movlw	0
  5512   0027E2                     u5670:
  5513   0027E2  6E40               	movwf	dtoa@s^0,c
  5514   0027E4                     
  5515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5516   0027E4  5040               	movf	dtoa@s^0,w,c
  5517   0027E6  B4D8               	btfsc	status,2,c
  5518   0027E8  EFF8  F013         	goto	u5681
  5519   0027EC  EFFA  F013         	goto	u5680
  5520   0027F0                     u5681:
  5521   0027F0  EF0A  F014         	goto	l4972
  5522   0027F4                     u5680:
  5523   0027F4                     
  5524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5525   0027F4  1E3F               	comf	(dtoa@n+7)^0,f,c
  5526   0027F6  1E3E               	comf	(dtoa@n+6)^0,f,c
  5527   0027F8  1E3D               	comf	(dtoa@n+5)^0,f,c
  5528   0027FA  1E3C               	comf	(dtoa@n+4)^0,f,c
  5529   0027FC  1E3B               	comf	(dtoa@n+3)^0,f,c
  5530   0027FE  1E3A               	comf	(dtoa@n+2)^0,f,c
  5531   002800  1E39               	comf	(dtoa@n+1)^0,f,c
  5532   002802  6C38               	negf	dtoa@n^0,c
  5533   002804  0E00               	movlw	0
  5534   002806  2239               	addwfc	(dtoa@n+1)^0,f,c
  5535   002808  223A               	addwfc	(dtoa@n+2)^0,f,c
  5536   00280A  223B               	addwfc	(dtoa@n+3)^0,f,c
  5537   00280C  223C               	addwfc	(dtoa@n+4)^0,f,c
  5538   00280E  223D               	addwfc	(dtoa@n+5)^0,f,c
  5539   002810  223E               	addwfc	(dtoa@n+6)^0,f,c
  5540   002812  223F               	addwfc	(dtoa@n+7)^0,f,c
  5541   002814                     l4972:
  5542                           
  5543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5544   002814  0100               	movlb	0	; () banked
  5545   002816  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5546   002818  EF18  F014         	goto	u5690
  5547   00281C  51F2               	movf	(_prec+1)& (0+255),w,b
  5548   00281E  E106               	bnz	u5691
  5549   002820  05F1               	decf	_prec& (0+255),w,b
  5550   002822  B0D8               	btfsc	status,0,c
  5551   002824  EF16  F014         	goto	u5691
  5552   002828  EF18  F014         	goto	u5690
  5553   00282C                     u5691:
  5554   00282C  EF1E  F014         	goto	l1014
  5555   002830                     u5690:
  5556   002830                     
  5557                           ; BSR set to: 0
  5558   002830  0E00               	movlw	0
  5559   002832  6E35               	movwf	(dtoa@p+1)^0,c
  5560   002834  0E01               	movlw	1
  5561   002836  6E34               	movwf	dtoa@p^0,c
  5562   002838  EF22  F014         	goto	l1016
  5563   00283C                     l1014:
  5564                           
  5565                           ; BSR set to: 0
  5566   00283C  C0F1  F034         	movff	_prec,dtoa@p
  5567   002840  C0F2  F035         	movff	_prec+1,dtoa@p+1
  5568   002844                     l1016:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5572   002844  C0EF  F036         	movff	_width,dtoa@w
  5573   002848  C0F0  F037         	movff	_width+1,dtoa@w+1
  5574   00284C                     
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5577   00284C  5040               	movf	dtoa@s^0,w,c
  5578   00284E  B4D8               	btfsc	status,2,c
  5579   002850  EF2C  F014         	goto	u5701
  5580   002854  EF2E  F014         	goto	u5700
  5581   002858                     u5701:
  5582   002858  EF45  F014         	goto	l1017
  5583   00285C                     u5700:
  5584   00285C                     
  5585                           ; BSR set to: 0
  5586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5587   00285C  0636               	decf	dtoa@w^0,f,c
  5588   00285E  A0D8               	btfss	status,0,c
  5589   002860  0637               	decf	(dtoa@w+1)^0,f,c
  5590   002862                     
  5591                           ; BSR set to: 0
  5592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5593   002862  5040               	movf	dtoa@s^0,w,c
  5594   002864  A4D8               	btfss	status,2,c
  5595   002866  EF37  F014         	goto	u5711
  5596   00286A  EF39  F014         	goto	u5710
  5597   00286E                     u5711:
  5598   00286E  EF3F  F014         	goto	l4984
  5599   002872                     u5710:
  5600   002872                     
  5601                           ; BSR set to: 0
  5602   002872  0E00               	movlw	0
  5603   002874  6E33               	movwf	(_dtoa$1450+1)^0,c
  5604   002876  0E2B               	movlw	43
  5605   002878  6E32               	movwf	_dtoa$1450^0,c
  5606   00287A  EF43  F014         	goto	l4986
  5607   00287E                     l4984:
  5608                           
  5609                           ; BSR set to: 0
  5610   00287E  0E00               	movlw	0
  5611   002880  6E33               	movwf	(_dtoa$1450+1)^0,c
  5612   002882  0E2D               	movlw	45
  5613   002884  6E32               	movwf	_dtoa$1450^0,c
  5614   002886                     l4986:
  5615                           
  5616                           ; BSR set to: 0
  5617   002886  C032  F040         	movff	_dtoa$1450,dtoa@s
  5618   00288A                     l1017:
  5619                           
  5620                           ; BSR set to: 0
  5621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5622   00288A  0E00               	movlw	0
  5623   00288C  6E42               	movwf	(dtoa@i+1)^0,c
  5624   00288E  0E4F               	movlw	79
  5625   002890  6E41               	movwf	dtoa@i^0,c
  5626   002892                     
  5627                           ; BSR set to: 0
  5628                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5629   002892  0E00               	movlw	0
  5630   002894  0101               	movlb	1	; () banked
  5631   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5632                           
  5633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5634   002898  EFCA  F014         	goto	l5000
  5635   00289C                     l4990:
  5636                           
  5637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5638   00289C  0641               	decf	dtoa@i^0,f,c
  5639   00289E  A0D8               	btfss	status,0,c
  5640   0028A0  0642               	decf	(dtoa@i+1)^0,f,c
  5641   0028A2                     
  5642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5643   0028A2  0E50               	movlw	low _dbuf
  5644   0028A4  2441               	addwf	dtoa@i^0,w,c
  5645   0028A6  6ED9               	movwf	fsr2l,c
  5646   0028A8  0E01               	movlw	high _dbuf
  5647   0028AA  2042               	addwfc	(dtoa@i+1)^0,w,c
  5648   0028AC  6EDA               	movwf	fsr2h,c
  5649   0028AE  C038  F005         	movff	dtoa@n,___aomod@dividend
  5650   0028B2  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5651   0028B6  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5652   0028BA  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5653   0028BE  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5654   0028C2  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5655   0028C6  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5656   0028CA  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5657   0028CE  0E0A               	movlw	10
  5658   0028D0  6E0D               	movwf	___aomod@divisor^0,c
  5659   0028D2  0E00               	movlw	0
  5660   0028D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5661   0028D6  0E00               	movlw	0
  5662   0028D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5663   0028DA  0E00               	movlw	0
  5664   0028DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5665   0028DE  0E00               	movlw	0
  5666   0028E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5667   0028E2  0E00               	movlw	0
  5668   0028E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5669   0028E6  0E00               	movlw	0
  5670   0028E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5671   0028EA  0E00               	movlw	0
  5672   0028EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5673   0028EE  EC83  F018         	call	___aomod	;wreg free
  5674   0028F2  C005  F02A         	movff	?___aomod,??_dtoa
  5675   0028F6  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  5676   0028FA  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  5677   0028FE  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  5678   002902  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  5679   002906  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  5680   00290A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  5681   00290E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  5682   002912  C02A  F017         	movff	??_dtoa,abs@a
  5683   002916  C02B  F018         	movff	??_dtoa+1,abs@a+1
  5684   00291A  EC40  F01E         	call	_abs	;wreg free
  5685   00291E  5017               	movf	?_abs^0,w,c
  5686   002920  0F30               	addlw	48
  5687   002922  6EDF               	movwf	indf2,c
  5688   002924                     
  5689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5690   002924  0634               	decf	dtoa@p^0,f,c
  5691   002926  A0D8               	btfss	status,0,c
  5692   002928  0635               	decf	(dtoa@p+1)^0,f,c
  5693   00292A                     
  5694                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5695   00292A  0636               	decf	dtoa@w^0,f,c
  5696   00292C  A0D8               	btfss	status,0,c
  5697   00292E  0637               	decf	(dtoa@w+1)^0,f,c
  5698   002930                     
  5699                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5700   002930  C038  F005         	movff	dtoa@n,___aodiv@dividend
  5701   002934  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5702   002938  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5703   00293C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5704   002940  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5705   002944  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5706   002948  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5707   00294C  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5708   002950  0E0A               	movlw	10
  5709   002952  6E0D               	movwf	___aodiv@divisor^0,c
  5710   002954  0E00               	movlw	0
  5711   002956  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5712   002958  0E00               	movlw	0
  5713   00295A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5714   00295C  0E00               	movlw	0
  5715   00295E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5716   002960  0E00               	movlw	0
  5717   002962  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5718   002964  0E00               	movlw	0
  5719   002966  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5720   002968  0E00               	movlw	0
  5721   00296A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5722   00296C  0E00               	movlw	0
  5723   00296E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5724   002970  ECBF  F017         	call	___aodiv	;wreg free
  5725   002974  C005  F038         	movff	?___aodiv,dtoa@n
  5726   002978  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  5727   00297C  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  5728   002980  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  5729   002984  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  5730   002988  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  5731   00298C  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  5732   002990  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  5733   002994                     l5000:
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5736   002994  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5737   002996  EFD5  F014         	goto	u5721
  5738   00299A  5042               	movf	(dtoa@i+1)^0,w,c
  5739   00299C  E108               	bnz	u5720
  5740   00299E  0441               	decf	dtoa@i^0,w,c
  5741   0029A0  A0D8               	btfss	status,0,c
  5742   0029A2  EFD5  F014         	goto	u5721
  5743   0029A6  EFD7  F014         	goto	u5720
  5744   0029AA                     u5721:
  5745   0029AA  EFF3  F014         	goto	l5006
  5746   0029AE                     u5720:
  5747   0029AE  5038               	movf	dtoa@n^0,w,c
  5748   0029B0  1039               	iorwf	(dtoa@n+1)^0,w,c
  5749   0029B2  103A               	iorwf	(dtoa@n+2)^0,w,c
  5750   0029B4  103B               	iorwf	(dtoa@n+3)^0,w,c
  5751   0029B6  103C               	iorwf	(dtoa@n+4)^0,w,c
  5752   0029B8  103D               	iorwf	(dtoa@n+5)^0,w,c
  5753   0029BA  103E               	iorwf	(dtoa@n+6)^0,w,c
  5754   0029BC  103F               	iorwf	(dtoa@n+7)^0,w,c
  5755   0029BE  A4D8               	btfss	status,2,c
  5756   0029C0  EFE4  F014         	goto	u5731
  5757   0029C4  EFE6  F014         	goto	u5730
  5758   0029C8                     u5731:
  5759   0029C8  EF4E  F014         	goto	l4990
  5760   0029CC                     u5730:
  5761   0029CC  BE35               	btfsc	(dtoa@p+1)^0,7,c
  5762   0029CE  EFF3  F014         	goto	u5740
  5763   0029D2  5035               	movf	(dtoa@p+1)^0,w,c
  5764   0029D4  E106               	bnz	u5741
  5765   0029D6  0434               	decf	dtoa@p^0,w,c
  5766   0029D8  B0D8               	btfsc	status,0,c
  5767   0029DA  EFF1  F014         	goto	u5741
  5768   0029DE  EFF3  F014         	goto	u5740
  5769   0029E2                     u5741:
  5770   0029E2  EF4E  F014         	goto	l4990
  5771   0029E6                     u5740:
  5772   0029E6                     l5006:
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5775   0029E6  5040               	movf	dtoa@s^0,w,c
  5776   0029E8  B4D8               	btfsc	status,2,c
  5777   0029EA  EFF9  F014         	goto	u5751
  5778   0029EE  EFFB  F014         	goto	u5750
  5779   0029F2                     u5751:
  5780   0029F2  EF06  F015         	goto	l5012
  5781   0029F6                     u5750:
  5782   0029F6                     
  5783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5784   0029F6  0641               	decf	dtoa@i^0,f,c
  5785   0029F8  A0D8               	btfss	status,0,c
  5786   0029FA  0642               	decf	(dtoa@i+1)^0,f,c
  5787   0029FC                     
  5788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5789   0029FC  0E50               	movlw	low _dbuf
  5790   0029FE  2441               	addwf	dtoa@i^0,w,c
  5791   002A00  6ED9               	movwf	fsr2l,c
  5792   002A02  0E01               	movlw	high _dbuf
  5793   002A04  2042               	addwfc	(dtoa@i+1)^0,w,c
  5794   002A06  6EDA               	movwf	fsr2h,c
  5795   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5796   002A0C                     l5012:
  5797                           
  5798                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5799   002A0C  C020  F015         	movff	dtoa@fp,pad@fp
  5800   002A10  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5801   002A14  0E50               	movlw	low _dbuf
  5802   002A16  2441               	addwf	dtoa@i^0,w,c
  5803   002A18  6E17               	movwf	pad@buf^0,c
  5804   002A1A  0E01               	movlw	high _dbuf
  5805   002A1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  5806   002A1E  6E18               	movwf	(pad@buf+1)^0,c
  5807   002A20  C036  F019         	movff	dtoa@w,pad@p
  5808   002A24  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5809   002A28  ECFE  F01B         	call	_pad	;wreg free
  5810   002A2C  0012               	return		;funcret
  5811   002A2E                     __end_of_dtoa:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function _pad *****************
  5815 ;; Defined at:
  5816 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5819 ;;		 -> sprintf@f(11), 
  5820 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5821 ;;		 -> dbuf(80), 
  5822 ;;  p               2   24[COMRAM] int 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  w               2   29[COMRAM] int 
  5825 ;;  i               2   27[COMRAM] int 
  5826 ;; Return value:  Size  Location     Type
  5827 ;;                  1    wreg      void 
  5828 ;; Registers used:
  5829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5830 ;; Tracked objects:
  5831 ;;		On entry : 0/0
  5832 ;;		On exit  : 0/0
  5833 ;;		Unchanged: 0/0
  5834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5835 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;Total ram usage:       11 bytes
  5840 ;; Hardware stack levels used: 1
  5841 ;; Hardware stack levels required when called: 5
  5842 ;; This function calls:
  5843 ;;		_fputc
  5844 ;;		_fputs
  5845 ;; This function is called by:
  5846 ;;		_dtoa
  5847 ;;		_efgtoa
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text18
  5852   0037FC                     __ptext18:
  5853                           	callstack 0
  5854   0037FC                     _pad:
  5855                           	callstack 21
  5856   0037FC                     
  5857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5858   0037FC  BE1A               	btfsc	(pad@p+1)^0,7,c
  5859   0037FE  EF03  F01C         	goto	u5431
  5860   003802  EF05  F01C         	goto	u5430
  5861   003806                     u5431:
  5862   003806  EF0B  F01C         	goto	l4880
  5863   00380A                     u5430:
  5864   00380A  C019  F01E         	movff	pad@p,pad@w
  5865   00380E  C01A  F01F         	movff	pad@p+1,pad@w+1
  5866   003812  EF0F  F01C         	goto	l1005
  5867   003816                     l4880:
  5868   003816  0E00               	movlw	0
  5869   003818  6E1F               	movwf	(pad@w+1)^0,c
  5870   00381A  0E00               	movlw	0
  5871   00381C  6E1E               	movwf	pad@w^0,c
  5872   00381E                     l1005:
  5873                           
  5874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5875   00381E  0E00               	movlw	0
  5876   003820  6E1D               	movwf	(pad@i+1)^0,c
  5877   003822  0E00               	movlw	0
  5878   003824  6E1C               	movwf	pad@i^0,c
  5879                           
  5880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5881   003826  EF21  F01C         	goto	l4886
  5882   00382A                     l4882:
  5883                           
  5884                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5885   00382A  0E00               	movlw	0
  5886   00382C  6E06               	movwf	(fputc@c+1)^0,c
  5887   00382E  0E20               	movlw	32
  5888   003830  6E05               	movwf	fputc@c^0,c
  5889   003832  C015  F007         	movff	pad@fp,fputc@fp
  5890   003836  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5891   00383A  EC44  F01B         	call	_fputc	;wreg free
  5892   00383E                     
  5893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5894   00383E  4A1C               	infsnz	pad@i^0,f,c
  5895   003840  2A1D               	incf	(pad@i+1)^0,f,c
  5896   003842                     l4886:
  5897                           
  5898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5899   003842  501E               	movf	pad@w^0,w,c
  5900   003844  5C1C               	subwf	pad@i^0,w,c
  5901   003846  501D               	movf	(pad@i+1)^0,w,c
  5902   003848  0A80               	xorlw	128
  5903   00384A  6E1B               	movwf	??_pad^0,c
  5904   00384C  501F               	movf	(pad@w+1)^0,w,c
  5905   00384E  0A80               	xorlw	128
  5906   003850  581B               	subwfb	??_pad^0,w,c
  5907   003852  A0D8               	btfss	status,0,c
  5908   003854  EF2E  F01C         	goto	u5441
  5909   003858  EF30  F01C         	goto	u5440
  5910   00385C                     u5441:
  5911   00385C  EF15  F01C         	goto	l4882
  5912   003860                     u5440:
  5913   003860                     
  5914                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5915   003860  C017  F00E         	movff	pad@buf,fputs@s
  5916   003864  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5917   003868  C015  F010         	movff	pad@fp,fputs@fp
  5918   00386C  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5919   003870  ECFD  F01D         	call	_fputs	;wreg free
  5920   003874  0012               	return		;funcret
  5921   003876                     __end_of_pad:
  5922                           	callstack 0
  5923                           
  5924 ;; *************** function _fputs *****************
  5925 ;; Defined at:
  5926 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5929 ;;		 -> dbuf(80), 
  5930 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5931 ;;		 -> sprintf@f(11), 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  i               2   18[COMRAM] int 
  5934 ;;  c               1   17[COMRAM] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  2   13[COMRAM] int 
  5937 ;; Registers used:
  5938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;Total ram usage:        7 bytes
  5949 ;; Hardware stack levels used: 1
  5950 ;; Hardware stack levels required when called: 4
  5951 ;; This function calls:
  5952 ;;		_fputc
  5953 ;; This function is called by:
  5954 ;;		_pad
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           
  5958                           	psect	text19
  5959   003BFA                     __ptext19:
  5960                           	callstack 0
  5961   003BFA                     _fputs:
  5962                           	callstack 21
  5963   003BFA  0E00               	movlw	0
  5964   003BFC  6E14               	movwf	(fputs@i+1)^0,c
  5965   003BFE  0E00               	movlw	0
  5966   003C00  6E13               	movwf	fputs@i^0,c
  5967   003C02  EF0E  F01E         	goto	l4430
  5968   003C06                     l4426:
  5969   003C06  C012  F005         	movff	fputs@c,fputc@c
  5970   003C0A  6A06               	clrf	(fputc@c+1)^0,c
  5971   003C0C  C010  F007         	movff	fputs@fp,fputc@fp
  5972   003C10  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5973   003C14  EC44  F01B         	call	_fputc	;wreg free
  5974   003C18  4A13               	infsnz	fputs@i^0,f,c
  5975   003C1A  2A14               	incf	(fputs@i+1)^0,f,c
  5976   003C1C                     l4430:
  5977   003C1C  5013               	movf	fputs@i^0,w,c
  5978   003C1E  240E               	addwf	fputs@s^0,w,c
  5979   003C20  6ED9               	movwf	fsr2l,c
  5980   003C22  5014               	movf	(fputs@i+1)^0,w,c
  5981   003C24  200F               	addwfc	(fputs@s+1)^0,w,c
  5982   003C26  6EDA               	movwf	fsr2h,c
  5983   003C28  50DF               	movf	indf2,w,c
  5984   003C2A  6E12               	movwf	fputs@c^0,c
  5985   003C2C  5012               	movf	fputs@c^0,w,c
  5986   003C2E  A4D8               	btfss	status,2,c
  5987   003C30  EF1C  F01E         	goto	u4711
  5988   003C34  EF1E  F01E         	goto	u4710
  5989   003C38                     u4711:
  5990   003C38  EF03  F01E         	goto	l4426
  5991   003C3C                     u4710:
  5992   003C3C  0012               	return		;funcret
  5993   003C3E                     __end_of_fputs:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _fputc *****************
  5997 ;; Defined at:
  5998 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  c               2    4[COMRAM] int 
  6001 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  6002 ;;		 -> sprintf@f(11), 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;		None
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2    4[COMRAM] int 
  6007 ;; Registers used:
  6008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;Total ram usage:        9 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 3
  6021 ;; This function calls:
  6022 ;;		_putch
  6023 ;; This function is called by:
  6024 ;;		_pad
  6025 ;;		_vfpfcnvrt
  6026 ;;		_fputs
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text20
  6031   003688                     __ptext20:
  6032                           	callstack 0
  6033   003688                     _fputc:
  6034                           	callstack 24
  6035   003688  5007               	movf	fputc@fp^0,w,c
  6036   00368A  1008               	iorwf	(fputc@fp+1)^0,w,c
  6037   00368C  B4D8               	btfsc	status,2,c
  6038   00368E  EF4B  F01B         	goto	u4281
  6039   003692  EF4D  F01B         	goto	u4280
  6040   003696                     u4281:
  6041   003696  EF56  F01B         	goto	l4212
  6042   00369A                     u4280:
  6043   00369A  5007               	movf	fputc@fp^0,w,c
  6044   00369C  1008               	iorwf	(fputc@fp+1)^0,w,c
  6045   00369E  A4D8               	btfss	status,2,c
  6046   0036A0  EF54  F01B         	goto	u4291
  6047   0036A4  EF56  F01B         	goto	u4290
  6048   0036A8                     u4291:
  6049   0036A8  EF5B  F01B         	goto	l4214
  6050   0036AC                     u4290:
  6051   0036AC                     l4212:
  6052   0036AC  5005               	movf	fputc@c^0,w,c
  6053   0036AE  EC92  F01F         	call	_putch
  6054   0036B2  EFA8  F01B         	goto	l1165
  6055   0036B6                     l4214:
  6056   0036B6  EE20 F009          	lfsr	2,9
  6057   0036BA  5007               	movf	fputc@fp^0,w,c
  6058   0036BC  26D9               	addwf	fsr2l,f,c
  6059   0036BE  5008               	movf	(fputc@fp+1)^0,w,c
  6060   0036C0  22DA               	addwfc	fsr2h,f,c
  6061   0036C2  50DE               	movf	postinc2,w,c
  6062   0036C4  10DE               	iorwf	postinc2,w,c
  6063   0036C6  B4D8               	btfsc	status,2,c
  6064   0036C8  EF68  F01B         	goto	u4301
  6065   0036CC  EF6A  F01B         	goto	u4300
  6066   0036D0                     u4301:
  6067   0036D0  EF85  F01B         	goto	l4218
  6068   0036D4                     u4300:
  6069   0036D4  EE20 F009          	lfsr	2,9
  6070   0036D8  5007               	movf	fputc@fp^0,w,c
  6071   0036DA  26D9               	addwf	fsr2l,f,c
  6072   0036DC  5008               	movf	(fputc@fp+1)^0,w,c
  6073   0036DE  22DA               	addwfc	fsr2h,f,c
  6074   0036E0  EE10 F003          	lfsr	1,3
  6075   0036E4  5007               	movf	fputc@fp^0,w,c
  6076   0036E6  26E1               	addwf	fsr1l,f,c
  6077   0036E8  5008               	movf	(fputc@fp+1)^0,w,c
  6078   0036EA  22E2               	addwfc	fsr1h,f,c
  6079   0036EC  50DE               	movf	postinc2,w,c
  6080   0036EE  5CE6               	subwf	postinc1,w,c
  6081   0036F0  50E6               	movf	postinc1,w,c
  6082   0036F2  0A80               	xorlw	128
  6083   0036F4  6E0D               	movwf	(??_fputc+4)^0,c
  6084   0036F6  50DE               	movf	postinc2,w,c
  6085   0036F8  0A80               	xorlw	128
  6086   0036FA  580D               	subwfb	(??_fputc+4)^0,w,c
  6087   0036FC  B0D8               	btfsc	status,0,c
  6088   0036FE  EF83  F01B         	goto	u4311
  6089   003702  EF85  F01B         	goto	u4310
  6090   003706                     u4311:
  6091   003706  EFA8  F01B         	goto	l1165
  6092   00370A                     u4310:
  6093   00370A                     l4218:
  6094   00370A  EE20 F003          	lfsr	2,3
  6095   00370E  5007               	movf	fputc@fp^0,w,c
  6096   003710  26D9               	addwf	fsr2l,f,c
  6097   003712  5008               	movf	(fputc@fp+1)^0,w,c
  6098   003714  22DA               	addwfc	fsr2h,f,c
  6099   003716  CFDE F009          	movff	postinc2,??_fputc
  6100   00371A  CFDD F00A          	movff	postdec2,??_fputc+1
  6101   00371E  C007  FFD9         	movff	fputc@fp,fsr2l
  6102   003722  C008  FFDA         	movff	fputc@fp+1,fsr2h
  6103   003726  CFDE F00B          	movff	postinc2,??_fputc+2
  6104   00372A  CFDD F00C          	movff	postdec2,??_fputc+3
  6105   00372E  5009               	movf	??_fputc^0,w,c
  6106   003730  240B               	addwf	(??_fputc+2)^0,w,c
  6107   003732  6ED9               	movwf	fsr2l,c
  6108   003734  500A               	movf	(??_fputc+1)^0,w,c
  6109   003736  200C               	addwfc	(??_fputc+3)^0,w,c
  6110   003738  6EDA               	movwf	fsr2h,c
  6111   00373A  C005  FFDF         	movff	fputc@c,indf2
  6112   00373E  EE20 F003          	lfsr	2,3
  6113   003742  5007               	movf	fputc@fp^0,w,c
  6114   003744  26D9               	addwf	fsr2l,f,c
  6115   003746  5008               	movf	(fputc@fp+1)^0,w,c
  6116   003748  22DA               	addwfc	fsr2h,f,c
  6117   00374A  2ADE               	incf	postinc2,f,c
  6118   00374C  0E00               	movlw	0
  6119   00374E  22DD               	addwfc	postdec2,f,c
  6120   003750                     l1165:
  6121   003750  0012               	return		;funcret
  6122   003752                     __end_of_fputc:
  6123                           	callstack 0
  6124                           
  6125 ;; *************** function _putch *****************
  6126 ;; Defined at:
  6127 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  c               1    wreg     unsigned char 
  6130 ;; Auto vars:     Size  Location     Type
  6131 ;;  c               1    0[COMRAM] unsigned char 
  6132 ;; Return value:  Size  Location     Type
  6133 ;;                  1    wreg      void 
  6134 ;; Registers used:
  6135 ;;		wreg
  6136 ;; Tracked objects:
  6137 ;;		On entry : 0/0
  6138 ;;		On exit  : 0/0
  6139 ;;		Unchanged: 0/0
  6140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;Total ram usage:        0 bytes
  6146 ;; Hardware stack levels used: 1
  6147 ;; Hardware stack levels required when called: 2
  6148 ;; This function calls:
  6149 ;;		Nothing
  6150 ;; This function is called by:
  6151 ;;		_fputc
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text21
  6156   003F24                     __ptext21:
  6157                           	callstack 0
  6158   003F24                     _putch:
  6159                           	callstack 24
  6160   003F24  0012               	return		;funcret
  6161   003F26                     __end_of_putch:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function _abs *****************
  6165 ;; Defined at:
  6166 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  a               2   22[COMRAM] int 
  6169 ;; Auto vars:     Size  Location     Type
  6170 ;;		None
  6171 ;; Return value:  Size  Location     Type
  6172 ;;                  2   22[COMRAM] int 
  6173 ;; Registers used:
  6174 ;;		wreg, status,2, status,0
  6175 ;; Tracked objects:
  6176 ;;		On entry : 0/0
  6177 ;;		On exit  : 0/0
  6178 ;;		Unchanged: 0/0
  6179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;Total ram usage:        4 bytes
  6185 ;; Hardware stack levels used: 1
  6186 ;; Hardware stack levels required when called: 2
  6187 ;; This function calls:
  6188 ;;		Nothing
  6189 ;; This function is called by:
  6190 ;;		_dtoa
  6191 ;; This function uses a non-reentrant model
  6192 ;;
  6193                           
  6194                           	psect	text22
  6195   003C80                     __ptext22:
  6196                           	callstack 0
  6197   003C80                     _abs:
  6198                           	callstack 24
  6199   003C80  BE18               	btfsc	(abs@a+1)^0,7,c
  6200   003C82  EF4D  F01E         	goto	u5450
  6201   003C86  5018               	movf	(abs@a+1)^0,w,c
  6202   003C88  E106               	bnz	u5451
  6203   003C8A  0417               	decf	abs@a^0,w,c
  6204   003C8C  B0D8               	btfsc	status,0,c
  6205   003C8E  EF4B  F01E         	goto	u5451
  6206   003C92  EF4D  F01E         	goto	u5450
  6207   003C96                     u5451:
  6208   003C96  EF5B  F01E         	goto	l1124
  6209   003C9A                     u5450:
  6210   003C9A  C017  F019         	movff	abs@a,??_abs
  6211   003C9E  C018  F01A         	movff	abs@a+1,??_abs+1
  6212   003CA2  1E19               	comf	??_abs^0,f,c
  6213   003CA4  1E1A               	comf	(??_abs+1)^0,f,c
  6214   003CA6  4A19               	infsnz	??_abs^0,f,c
  6215   003CA8  2A1A               	incf	(??_abs+1)^0,f,c
  6216   003CAA  C019  F017         	movff	??_abs,?_abs
  6217   003CAE  C01A  F018         	movff	??_abs+1,?_abs+1
  6218   003CB2  EF5F  F01E         	goto	l1127
  6219   003CB6                     l1124:
  6220   003CB6  C017  F017         	movff	abs@a,?_abs
  6221   003CBA  C018  F018         	movff	abs@a+1,?_abs+1
  6222   003CBE                     l1127:
  6223   003CBE  0012               	return		;funcret
  6224   003CC0                     __end_of_abs:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function ___aomod *****************
  6228 ;; Defined at:
  6229 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  dividend        8    4[COMRAM] long long 
  6232 ;;  divisor         8   12[COMRAM] long long 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  sign            1   21[COMRAM] unsigned char 
  6235 ;;  counter         1   20[COMRAM] unsigned char 
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  8    4[COMRAM] long long 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6245 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;Total ram usage:       18 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 2
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_dtoa
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text23
  6260   003106                     __ptext23:
  6261                           	callstack 0
  6262   003106                     ___aomod:
  6263                           	callstack 24
  6264   003106  0E00               	movlw	0
  6265   003108  6E16               	movwf	___aomod@sign^0,c
  6266   00310A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6267   00310C  EF8C  F018         	goto	u4790
  6268   003110  EF8A  F018         	goto	u4791
  6269   003114                     u4791:
  6270   003114  EF9E  F018         	goto	l4484
  6271   003118                     u4790:
  6272   003118  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6273   00311A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6274   00311C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6275   00311E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6276   003120  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6277   003122  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6278   003124  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6279   003126  6C05               	negf	___aomod@dividend^0,c
  6280   003128  0E00               	movlw	0
  6281   00312A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6282   00312C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6283   00312E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6284   003130  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6285   003132  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6286   003134  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6287   003136  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6288   003138  0E01               	movlw	1
  6289   00313A  6E16               	movwf	___aomod@sign^0,c
  6290   00313C                     l4484:
  6291   00313C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6292   00313E  EFA5  F018         	goto	u4800
  6293   003142  EFA3  F018         	goto	u4801
  6294   003146                     u4801:
  6295   003146  EFB5  F018         	goto	l4488
  6296   00314A                     u4800:
  6297   00314A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6298   00314C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6299   00314E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6300   003150  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6301   003152  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6302   003154  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6303   003156  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6304   003158  6C0D               	negf	___aomod@divisor^0,c
  6305   00315A  0E00               	movlw	0
  6306   00315C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6307   00315E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6308   003160  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6309   003162  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6310   003164  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6311   003166  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6312   003168  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6313   00316A                     l4488:
  6314   00316A  500D               	movf	___aomod@divisor^0,w,c
  6315   00316C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6316   00316E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6317   003170  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6318   003172  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6319   003174  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6320   003176  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6321   003178  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6322   00317A  B4D8               	btfsc	status,2,c
  6323   00317C  EFC2  F018         	goto	u4811
  6324   003180  EFC4  F018         	goto	u4810
  6325   003184                     u4811:
  6326   003184  EF0C  F019         	goto	l4504
  6327   003188                     u4810:
  6328   003188  0E01               	movlw	1
  6329   00318A  6E15               	movwf	___aomod@counter^0,c
  6330   00318C  EFD2  F018         	goto	l4494
  6331   003190                     l4492:
  6332   003190  90D8               	bcf	status,0,c
  6333   003192  360D               	rlcf	___aomod@divisor^0,f,c
  6334   003194  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6335   003196  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6336   003198  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6337   00319A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6338   00319C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6339   00319E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6340   0031A0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6341   0031A2  2A15               	incf	___aomod@counter^0,f,c
  6342   0031A4                     l4494:
  6343   0031A4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6344   0031A6  EFD7  F018         	goto	u4821
  6345   0031AA  EFD9  F018         	goto	u4820
  6346   0031AE                     u4821:
  6347   0031AE  EFC8  F018         	goto	l4492
  6348   0031B2                     u4820:
  6349   0031B2                     l4496:
  6350   0031B2  500D               	movf	___aomod@divisor^0,w,c
  6351   0031B4  5C05               	subwf	___aomod@dividend^0,w,c
  6352   0031B6  500E               	movf	(___aomod@divisor+1)^0,w,c
  6353   0031B8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6354   0031BA  500F               	movf	(___aomod@divisor+2)^0,w,c
  6355   0031BC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6356   0031BE  5010               	movf	(___aomod@divisor+3)^0,w,c
  6357   0031C0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6358   0031C2  5011               	movf	(___aomod@divisor+4)^0,w,c
  6359   0031C4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6360   0031C6  5012               	movf	(___aomod@divisor+5)^0,w,c
  6361   0031C8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6362   0031CA  5013               	movf	(___aomod@divisor+6)^0,w,c
  6363   0031CC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6364   0031CE  5014               	movf	(___aomod@divisor+7)^0,w,c
  6365   0031D0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6366   0031D2  A0D8               	btfss	status,0,c
  6367   0031D4  EFEE  F018         	goto	u4831
  6368   0031D8  EFF0  F018         	goto	u4830
  6369   0031DC                     u4831:
  6370   0031DC  EF00  F019         	goto	l4500
  6371   0031E0                     u4830:
  6372   0031E0  500D               	movf	___aomod@divisor^0,w,c
  6373   0031E2  5E05               	subwf	___aomod@dividend^0,f,c
  6374   0031E4  500E               	movf	(___aomod@divisor+1)^0,w,c
  6375   0031E6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6376   0031E8  500F               	movf	(___aomod@divisor+2)^0,w,c
  6377   0031EA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6378   0031EC  5010               	movf	(___aomod@divisor+3)^0,w,c
  6379   0031EE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6380   0031F0  5011               	movf	(___aomod@divisor+4)^0,w,c
  6381   0031F2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6382   0031F4  5012               	movf	(___aomod@divisor+5)^0,w,c
  6383   0031F6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6384   0031F8  5013               	movf	(___aomod@divisor+6)^0,w,c
  6385   0031FA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6386   0031FC  5014               	movf	(___aomod@divisor+7)^0,w,c
  6387   0031FE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6388   003200                     l4500:
  6389   003200  90D8               	bcf	status,0,c
  6390   003202  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6391   003204  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6392   003206  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6393   003208  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6394   00320A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6395   00320C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6396   00320E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6397   003210  320D               	rrcf	___aomod@divisor^0,f,c
  6398   003212  2E15               	decfsz	___aomod@counter^0,f,c
  6399   003214  EFD9  F018         	goto	l4496
  6400   003218                     l4504:
  6401   003218  5016               	movf	___aomod@sign^0,w,c
  6402   00321A  B4D8               	btfsc	status,2,c
  6403   00321C  EF12  F019         	goto	u4841
  6404   003220  EF14  F019         	goto	u4840
  6405   003224                     u4841:
  6406   003224  EF24  F019         	goto	l4508
  6407   003228                     u4840:
  6408   003228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6409   00322A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6410   00322C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6411   00322E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6412   003230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6413   003232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6414   003234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6415   003236  6C05               	negf	___aomod@dividend^0,c
  6416   003238  0E00               	movlw	0
  6417   00323A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6418   00323C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6419   00323E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6420   003240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6421   003242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6422   003244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6423   003246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6424   003248                     l4508:
  6425   003248  C005  F005         	movff	___aomod@dividend,?___aomod
  6426   00324C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6427   003250  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6428   003254  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6429   003258  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6430   00325C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6431   003260  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6432   003264  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6433   003268  0012               	return		;funcret
  6434   00326A                     __end_of___aomod:
  6435                           	callstack 0
  6436                           
  6437 ;; *************** function ___aodiv *****************
  6438 ;; Defined at:
  6439 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6440 ;; Parameters:    Size  Location     Type
  6441 ;;  dividend        8    4[COMRAM] long long 
  6442 ;;  divisor         8   12[COMRAM] long long 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  quotient        8   22[COMRAM] long long 
  6445 ;;  sign            1   21[COMRAM] unsigned char 
  6446 ;;  counter         1   20[COMRAM] unsigned char 
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  8    4[COMRAM] long long 
  6449 ;; Registers used:
  6450 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6456 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;Total ram usage:       26 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 2
  6463 ;; This function calls:
  6464 ;;		Nothing
  6465 ;; This function is called by:
  6466 ;;		_dtoa
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           	psect	text24
  6471   002F7E                     __ptext24:
  6472                           	callstack 0
  6473   002F7E                     ___aodiv:
  6474                           	callstack 24
  6475   002F7E  0E00               	movlw	0
  6476   002F80  6E16               	movwf	___aodiv@sign^0,c
  6477   002F82  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6478   002F84  EFC8  F017         	goto	u4720
  6479   002F88  EFC6  F017         	goto	u4721
  6480   002F8C                     u4721:
  6481   002F8C  EFDA  F017         	goto	l4440
  6482   002F90                     u4720:
  6483   002F90  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6484   002F92  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6485   002F94  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6486   002F96  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6487   002F98  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6488   002F9A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6489   002F9C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6490   002F9E  6C0D               	negf	___aodiv@divisor^0,c
  6491   002FA0  0E00               	movlw	0
  6492   002FA2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6493   002FA4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6494   002FA6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6495   002FA8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6496   002FAA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6497   002FAC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6498   002FAE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6499   002FB0  0E01               	movlw	1
  6500   002FB2  6E16               	movwf	___aodiv@sign^0,c
  6501   002FB4                     l4440:
  6502   002FB4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6503   002FB6  EFE1  F017         	goto	u4730
  6504   002FBA  EFDF  F017         	goto	u4731
  6505   002FBE                     u4731:
  6506   002FBE  EFF3  F017         	goto	l4446
  6507   002FC2                     u4730:
  6508   002FC2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6509   002FC4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6510   002FC6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6511   002FC8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6512   002FCA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6513   002FCC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6514   002FCE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6515   002FD0  6C05               	negf	___aodiv@dividend^0,c
  6516   002FD2  0E00               	movlw	0
  6517   002FD4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6518   002FD6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6519   002FD8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6520   002FDA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6521   002FDC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6522   002FDE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6523   002FE0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6524   002FE2  0E01               	movlw	1
  6525   002FE4  1A16               	xorwf	___aodiv@sign^0,f,c
  6526   002FE6                     l4446:
  6527   002FE6  EE20  F017         	lfsr	2,___aodiv@quotient
  6528   002FEA  0E07               	movlw	7
  6529   002FEC                     u4741:
  6530   002FEC  6ADE               	clrf	postinc2,c
  6531   002FEE  06E8               	decf	wreg,f,c
  6532   002FF0  E2FD               	bc	u4741
  6533   002FF2  500D               	movf	___aodiv@divisor^0,w,c
  6534   002FF4  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6535   002FF6  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6536   002FF8  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6537   002FFA  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6538   002FFC  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6539   002FFE  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6540   003000  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6541   003002  B4D8               	btfsc	status,2,c
  6542   003004  EF06  F018         	goto	u4751
  6543   003008  EF08  F018         	goto	u4750
  6544   00300C                     u4751:
  6545   00300C  EF5A  F018         	goto	l4468
  6546   003010                     u4750:
  6547   003010  0E01               	movlw	1
  6548   003012  6E15               	movwf	___aodiv@counter^0,c
  6549   003014  EF16  F018         	goto	l4454
  6550   003018                     l4452:
  6551   003018  90D8               	bcf	status,0,c
  6552   00301A  360D               	rlcf	___aodiv@divisor^0,f,c
  6553   00301C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6554   00301E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6555   003020  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6556   003022  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6557   003024  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6558   003026  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6559   003028  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6560   00302A  2A15               	incf	___aodiv@counter^0,f,c
  6561   00302C                     l4454:
  6562   00302C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6563   00302E  EF1B  F018         	goto	u4761
  6564   003032  EF1D  F018         	goto	u4760
  6565   003036                     u4761:
  6566   003036  EF0C  F018         	goto	l4452
  6567   00303A                     u4760:
  6568   00303A                     l4456:
  6569   00303A  90D8               	bcf	status,0,c
  6570   00303C  3617               	rlcf	___aodiv@quotient^0,f,c
  6571   00303E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6572   003040  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6573   003042  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6574   003044  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6575   003046  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6576   003048  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6577   00304A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6578   00304C  500D               	movf	___aodiv@divisor^0,w,c
  6579   00304E  5C05               	subwf	___aodiv@dividend^0,w,c
  6580   003050  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6581   003052  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6582   003054  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6583   003056  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6584   003058  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6585   00305A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6586   00305C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6587   00305E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6588   003060  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6589   003062  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6590   003064  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6591   003066  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6592   003068  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6593   00306A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6594   00306C  A0D8               	btfss	status,0,c
  6595   00306E  EF3B  F018         	goto	u4771
  6596   003072  EF3D  F018         	goto	u4770
  6597   003076                     u4771:
  6598   003076  EF4E  F018         	goto	l4464
  6599   00307A                     u4770:
  6600   00307A  500D               	movf	___aodiv@divisor^0,w,c
  6601   00307C  5E05               	subwf	___aodiv@dividend^0,f,c
  6602   00307E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6603   003080  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6604   003082  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6605   003084  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6606   003086  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6607   003088  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6608   00308A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6609   00308C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6610   00308E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6611   003090  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6612   003092  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6613   003094  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6614   003096  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6615   003098  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6616   00309A  8017               	bsf	___aodiv@quotient^0,0,c
  6617   00309C                     l4464:
  6618   00309C  90D8               	bcf	status,0,c
  6619   00309E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6620   0030A0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6621   0030A2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6622   0030A4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6623   0030A6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6624   0030A8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6625   0030AA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6626   0030AC  320D               	rrcf	___aodiv@divisor^0,f,c
  6627   0030AE  2E15               	decfsz	___aodiv@counter^0,f,c
  6628   0030B0  EF1D  F018         	goto	l4456
  6629   0030B4                     l4468:
  6630   0030B4  5016               	movf	___aodiv@sign^0,w,c
  6631   0030B6  B4D8               	btfsc	status,2,c
  6632   0030B8  EF60  F018         	goto	u4781
  6633   0030BC  EF62  F018         	goto	u4780
  6634   0030C0                     u4781:
  6635   0030C0  EF72  F018         	goto	l4472
  6636   0030C4                     u4780:
  6637   0030C4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6638   0030C6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6639   0030C8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6640   0030CA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6641   0030CC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6642   0030CE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6643   0030D0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6644   0030D2  6C17               	negf	___aodiv@quotient^0,c
  6645   0030D4  0E00               	movlw	0
  6646   0030D6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6647   0030D8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6648   0030DA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6649   0030DC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6650   0030DE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6651   0030E0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6652   0030E2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6653   0030E4                     l4472:
  6654   0030E4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6655   0030E8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6656   0030EC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6657   0030F0  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6658   0030F4  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6659   0030F8  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6660   0030FC  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6661   003100  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6662   003104  0012               	return		;funcret
  6663   003106                     __end_of___aodiv:
  6664                           	callstack 0
  6665                           
  6666 ;; *************** function _sendTxBuf *****************
  6667 ;; Defined at:
  6668 ;;		line 93 in file "serial.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		wreg, status,2, status,0, cstack
  6677 ;; Tracked objects:
  6678 ;;		On entry : 0/0
  6679 ;;		On exit  : 0/0
  6680 ;;		Unchanged: 0/0
  6681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; Hardware stack levels required when called: 3
  6689 ;; This function calls:
  6690 ;;		_isDataInTxBuf
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text25
  6697   003DC6                     __ptext25:
  6698                           	callstack 0
  6699   003DC6                     _sendTxBuf:
  6700                           	callstack 27
  6701   003DC6                     
  6702                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6703   003DC6  EC6A  F01F         	call	_isDataInTxBuf	;wreg free
  6704   003DCA  0900               	iorlw	0
  6705   003DCC  B4D8               	btfsc	status,2,c
  6706   003DCE  EFEB  F01E         	goto	u4211
  6707   003DD2  EFED  F01E         	goto	u4210
  6708   003DD6                     u4211:
  6709   003DD6  EFF4  F01E         	goto	l4002
  6710   003DDA                     u4210:
  6711   003DDA  010E               	movlb	14	; () banked
  6712   003DDC  852D               	bsf	45,2,b	;volatile
  6713   003DDE                     
  6714                           ; BSR set to: 14
  6715                           ;serial.c: 95:     DataFlag =1;}
  6716   003DDE  0E01               	movlw	1
  6717   003DE0  0100               	movlb	0	; () banked
  6718   003DE2  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6719   003DE4  EFF7  F01E         	goto	l184
  6720   003DE8                     l4002:
  6721                           
  6722                           ;serial.c: 97:         DataFlag=0;}
  6723   003DE8  0E00               	movlw	0
  6724   003DEA  0100               	movlb	0	; () banked
  6725   003DEC  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6726   003DEE                     l184:
  6727                           
  6728                           ; BSR set to: 0
  6729   003DEE  0012               	return		;funcret
  6730   003DF0                     __end_of_sendTxBuf:
  6731                           	callstack 0
  6732                           
  6733 ;; *************** function _isDataInTxBuf *****************
  6734 ;; Defined at:
  6735 ;;		line 80 in file "serial.c"
  6736 ;; Parameters:    Size  Location     Type
  6737 ;;		None
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;		None
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      unsigned char 
  6742 ;; Registers used:
  6743 ;;		wreg, status,2, status,0
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6753 ;;Total ram usage:        0 bytes
  6754 ;; Hardware stack levels used: 1
  6755 ;; Hardware stack levels required when called: 2
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_sendTxBuf
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text26
  6764   003ED4                     __ptext26:
  6765                           	callstack 0
  6766   003ED4                     _isDataInTxBuf:
  6767                           	callstack 27
  6768   003ED4                     
  6769                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6770   003ED4  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  6771   003ED6  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6772   003ED8  A4D8               	btfss	status,2,c
  6773   003EDA  EF71  F01F         	goto	u4051
  6774   003EDE  EF74  F01F         	goto	u4050
  6775   003EE2                     u4051:
  6776   003EE2  0E01               	movlw	1
  6777   003EE4  EF75  F01F         	goto	u4060
  6778   003EE8                     u4050:
  6779   003EE8  0E00               	movlw	0
  6780   003EEA                     u4060:
  6781   003EEA  0012               	return		;funcret
  6782   003EEC                     __end_of_isDataInTxBuf:
  6783                           	callstack 0
  6784                           
  6785 ;; *************** function _readColours *****************
  6786 ;; Defined at:
  6787 ;;		line 87 in file "color.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;  vals            2   15[COMRAM] PTR struct RGB
  6790 ;;		 -> vals(8), 
  6791 ;; Auto vars:     Size  Location     Type
  6792 ;;		None
  6793 ;; Return value:  Size  Location     Type
  6794 ;;                  1    wreg      void 
  6795 ;; Registers used:
  6796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6797 ;; Tracked objects:
  6798 ;;		On entry : 0/0
  6799 ;;		On exit  : 0/0
  6800 ;;		Unchanged: 0/0
  6801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6802 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;Total ram usage:        2 bytes
  6807 ;; Hardware stack levels used: 1
  6808 ;; Hardware stack levels required when called: 5
  6809 ;; This function calls:
  6810 ;;		_color_read_Blue
  6811 ;;		_color_read_Green
  6812 ;;		_color_read_Red
  6813 ;;		_color_read_lum
  6814 ;; This function is called by:
  6815 ;;		_main
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text27
  6820   0038DC                     __ptext27:
  6821                           	callstack 0
  6822   0038DC                     _readColours:
  6823                           	callstack 25
  6824   0038DC                     
  6825                           ;color.c: 88:     vals ->R = color_read_Red();
  6826   0038DC  EC40  F01D         	call	_color_read_Red	;wreg free
  6827   0038E0  C010  FFD9         	movff	readColours@vals,fsr2l
  6828   0038E4  C011  FFDA         	movff	readColours@vals+1,fsr2h
  6829   0038E8  C009  FFDE         	movff	?_color_read_Red,postinc2
  6830   0038EC  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  6831                           
  6832                           ;color.c: 89:     vals ->B = color_read_Blue();
  6833   0038F0  EC90  F01D         	call	_color_read_Blue	;wreg free
  6834   0038F4  EE20 F004          	lfsr	2,4
  6835   0038F8  5010               	movf	readColours@vals^0,w,c
  6836   0038FA  26D9               	addwf	fsr2l,f,c
  6837   0038FC  5011               	movf	(readColours@vals+1)^0,w,c
  6838   0038FE  22DA               	addwfc	fsr2h,f,c
  6839   003900  C009  FFDE         	movff	?_color_read_Blue,postinc2
  6840   003904  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  6841                           
  6842                           ;color.c: 90:     vals ->G = color_read_Green();
  6843   003908  EC68  F01D         	call	_color_read_Green	;wreg free
  6844   00390C  EE20 F002          	lfsr	2,2
  6845   003910  5010               	movf	readColours@vals^0,w,c
  6846   003912  26D9               	addwf	fsr2l,f,c
  6847   003914  5011               	movf	(readColours@vals+1)^0,w,c
  6848   003916  22DA               	addwfc	fsr2h,f,c
  6849   003918  C009  FFDE         	movff	?_color_read_Green,postinc2
  6850   00391C  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  6851                           
  6852                           ;color.c: 91:     vals ->L = color_read_lum();
  6853   003920  EC18  F01D         	call	_color_read_lum	;wreg free
  6854   003924  EE20 F006          	lfsr	2,6
  6855   003928  5010               	movf	readColours@vals^0,w,c
  6856   00392A  26D9               	addwf	fsr2l,f,c
  6857   00392C  5011               	movf	(readColours@vals+1)^0,w,c
  6858   00392E  22DA               	addwfc	fsr2h,f,c
  6859   003930  C009  FFDE         	movff	?_color_read_lum,postinc2
  6860   003934  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  6861   003938  0012               	return		;funcret
  6862   00393A                     __end_of_readColours:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _color_read_lum *****************
  6866 ;; Defined at:
  6867 ;;		line 31 in file "color.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;		None
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  tmp             2   13[COMRAM] unsigned int 
  6872 ;; Return value:  Size  Location     Type
  6873 ;;                  2    8[COMRAM] unsigned int 
  6874 ;; Registers used:
  6875 ;;		wreg, status,2, status,0, cstack
  6876 ;; Tracked objects:
  6877 ;;		On entry : 0/0
  6878 ;;		On exit  : 0/0
  6879 ;;		Unchanged: 0/0
  6880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6883 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6884 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;Total ram usage:        7 bytes
  6886 ;; Hardware stack levels used: 1
  6887 ;; Hardware stack levels required when called: 4
  6888 ;; This function calls:
  6889 ;;		_I2C_2_Master_Read
  6890 ;;		_I2C_2_Master_RepStart
  6891 ;;		_I2C_2_Master_Start
  6892 ;;		_I2C_2_Master_Stop
  6893 ;;		_I2C_2_Master_Write
  6894 ;; This function is called by:
  6895 ;;		_readColours
  6896 ;; This function uses a non-reentrant model
  6897 ;;
  6898                           
  6899                           	psect	text28
  6900   003A30                     __ptext28:
  6901                           	callstack 0
  6902   003A30                     _color_read_lum:
  6903                           	callstack 25
  6904   003A30                     
  6905                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  6906   003A30  EC8D  F01F         	call	_I2C_2_Master_Start	;wreg free
  6907                           
  6908                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  6909   003A34  0E52               	movlw	82
  6910   003A36  EC7D  F01F         	call	_I2C_2_Master_Write
  6911                           
  6912                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  6913   003A3A  0EB4               	movlw	180
  6914   003A3C  EC7D  F01F         	call	_I2C_2_Master_Write
  6915                           
  6916                           ;color.c: 37:  I2C_2_Master_RepStart();
  6917   003A40  EC83  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6918                           
  6919                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  6920   003A44  0E53               	movlw	83
  6921   003A46  EC7D  F01F         	call	_I2C_2_Master_Write
  6922                           
  6923                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  6924   003A4A  0E01               	movlw	1
  6925   003A4C  EC1F  F01E         	call	_I2C_2_Master_Read
  6926   003A50  6E0B               	movwf	??_color_read_lum^0,c
  6927   003A52  500B               	movf	??_color_read_lum^0,w,c
  6928   003A54  6E0E               	movwf	color_read_lum@tmp^0,c
  6929   003A56  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  6930                           
  6931                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6932   003A58  0E00               	movlw	0
  6933   003A5A  EC1F  F01E         	call	_I2C_2_Master_Read
  6934   003A5E  6E0B               	movwf	??_color_read_lum^0,c
  6935   003A60  500B               	movf	??_color_read_lum^0,w,c
  6936   003A62  6E0D               	movwf	(??_color_read_lum+2)^0,c
  6937   003A64  6A0C               	clrf	(??_color_read_lum+1)^0,c
  6938   003A66  500E               	movf	color_read_lum@tmp^0,w,c
  6939   003A68  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  6940   003A6A  6E0E               	movwf	color_read_lum@tmp^0,c
  6941   003A6C  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  6942   003A6E  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  6943   003A70  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  6944                           
  6945                           ;color.c: 41:  I2C_2_Master_Stop();
  6946   003A72  EC88  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6947   003A76                     
  6948                           ;color.c: 42:  return tmp;
  6949   003A76  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  6950   003A7A  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6951   003A7E  0012               	return		;funcret
  6952   003A80                     __end_of_color_read_lum:
  6953                           	callstack 0
  6954                           
  6955 ;; *************** function _color_read_Red *****************
  6956 ;; Defined at:
  6957 ;;		line 45 in file "color.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  tmp             2   13[COMRAM] unsigned int 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  2    8[COMRAM] unsigned int 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6973 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6974 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6975 ;;Total ram usage:        7 bytes
  6976 ;; Hardware stack levels used: 1
  6977 ;; Hardware stack levels required when called: 4
  6978 ;; This function calls:
  6979 ;;		_I2C_2_Master_Read
  6980 ;;		_I2C_2_Master_RepStart
  6981 ;;		_I2C_2_Master_Start
  6982 ;;		_I2C_2_Master_Stop
  6983 ;;		_I2C_2_Master_Write
  6984 ;; This function is called by:
  6985 ;;		_readColours
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text29
  6990   003A80                     __ptext29:
  6991                           	callstack 0
  6992   003A80                     _color_read_Red:
  6993                           	callstack 25
  6994   003A80                     
  6995                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  6996   003A80  EC8D  F01F         	call	_I2C_2_Master_Start	;wreg free
  6997                           
  6998                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  6999   003A84  0E52               	movlw	82
  7000   003A86  EC7D  F01F         	call	_I2C_2_Master_Write
  7001                           
  7002                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  7003   003A8A  0EB6               	movlw	182
  7004   003A8C  EC7D  F01F         	call	_I2C_2_Master_Write
  7005                           
  7006                           ;color.c: 51:  I2C_2_Master_RepStart();
  7007   003A90  EC83  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7008                           
  7009                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7010   003A94  0E53               	movlw	83
  7011   003A96  EC7D  F01F         	call	_I2C_2_Master_Write
  7012                           
  7013                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7014   003A9A  0E01               	movlw	1
  7015   003A9C  EC1F  F01E         	call	_I2C_2_Master_Read
  7016   003AA0  6E0B               	movwf	??_color_read_Red^0,c
  7017   003AA2  500B               	movf	??_color_read_Red^0,w,c
  7018   003AA4  6E0E               	movwf	color_read_Red@tmp^0,c
  7019   003AA6  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  7020                           
  7021                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7022   003AA8  0E00               	movlw	0
  7023   003AAA  EC1F  F01E         	call	_I2C_2_Master_Read
  7024   003AAE  6E0B               	movwf	??_color_read_Red^0,c
  7025   003AB0  500B               	movf	??_color_read_Red^0,w,c
  7026   003AB2  6E0D               	movwf	(??_color_read_Red+2)^0,c
  7027   003AB4  6A0C               	clrf	(??_color_read_Red+1)^0,c
  7028   003AB6  500E               	movf	color_read_Red@tmp^0,w,c
  7029   003AB8  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  7030   003ABA  6E0E               	movwf	color_read_Red@tmp^0,c
  7031   003ABC  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  7032   003ABE  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  7033   003AC0  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  7034                           
  7035                           ;color.c: 55:  I2C_2_Master_Stop();
  7036   003AC2  EC88  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7037   003AC6                     
  7038                           ;color.c: 56:  return tmp;
  7039   003AC6  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  7040   003ACA  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7041   003ACE  0012               	return		;funcret
  7042   003AD0                     __end_of_color_read_Red:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _color_read_Green *****************
  7046 ;; Defined at:
  7047 ;;		line 58 in file "color.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  tmp             2   13[COMRAM] unsigned int 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2    8[COMRAM] unsigned int 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;Total ram usage:        7 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 4
  7068 ;; This function calls:
  7069 ;;		_I2C_2_Master_Read
  7070 ;;		_I2C_2_Master_RepStart
  7071 ;;		_I2C_2_Master_Start
  7072 ;;		_I2C_2_Master_Stop
  7073 ;;		_I2C_2_Master_Write
  7074 ;; This function is called by:
  7075 ;;		_readColours
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text30
  7080   003AD0                     __ptext30:
  7081                           	callstack 0
  7082   003AD0                     _color_read_Green:
  7083                           	callstack 25
  7084   003AD0                     
  7085                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7086   003AD0  EC8D  F01F         	call	_I2C_2_Master_Start	;wreg free
  7087                           
  7088                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7089   003AD4  0E52               	movlw	82
  7090   003AD6  EC7D  F01F         	call	_I2C_2_Master_Write
  7091                           
  7092                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x16);
  7093   003ADA  0EB6               	movlw	182
  7094   003ADC  EC7D  F01F         	call	_I2C_2_Master_Write
  7095                           
  7096                           ;color.c: 64:  I2C_2_Master_RepStart();
  7097   003AE0  EC83  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7098                           
  7099                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7100   003AE4  0E53               	movlw	83
  7101   003AE6  EC7D  F01F         	call	_I2C_2_Master_Write
  7102                           
  7103                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7104   003AEA  0E01               	movlw	1
  7105   003AEC  EC1F  F01E         	call	_I2C_2_Master_Read
  7106   003AF0  6E0B               	movwf	??_color_read_Green^0,c
  7107   003AF2  500B               	movf	??_color_read_Green^0,w,c
  7108   003AF4  6E0E               	movwf	color_read_Green@tmp^0,c
  7109   003AF6  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7110                           
  7111                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7112   003AF8  0E00               	movlw	0
  7113   003AFA  EC1F  F01E         	call	_I2C_2_Master_Read
  7114   003AFE  6E0B               	movwf	??_color_read_Green^0,c
  7115   003B00  500B               	movf	??_color_read_Green^0,w,c
  7116   003B02  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7117   003B04  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7118   003B06  500E               	movf	color_read_Green@tmp^0,w,c
  7119   003B08  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7120   003B0A  6E0E               	movwf	color_read_Green@tmp^0,c
  7121   003B0C  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7122   003B0E  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7123   003B10  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7124                           
  7125                           ;color.c: 68:  I2C_2_Master_Stop();
  7126   003B12  EC88  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7127   003B16                     
  7128                           ;color.c: 69:  return tmp;
  7129   003B16  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7130   003B1A  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7131   003B1E  0012               	return		;funcret
  7132   003B20                     __end_of_color_read_Green:
  7133                           	callstack 0
  7134                           
  7135 ;; *************** function _color_read_Blue *****************
  7136 ;; Defined at:
  7137 ;;		line 72 in file "color.c"
  7138 ;; Parameters:    Size  Location     Type
  7139 ;;		None
  7140 ;; Auto vars:     Size  Location     Type
  7141 ;;  tmp             2   13[COMRAM] unsigned int 
  7142 ;; Return value:  Size  Location     Type
  7143 ;;                  2    8[COMRAM] unsigned int 
  7144 ;; Registers used:
  7145 ;;		wreg, status,2, status,0, cstack
  7146 ;; Tracked objects:
  7147 ;;		On entry : 0/0
  7148 ;;		On exit  : 0/0
  7149 ;;		Unchanged: 0/0
  7150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7155 ;;Total ram usage:        7 bytes
  7156 ;; Hardware stack levels used: 1
  7157 ;; Hardware stack levels required when called: 4
  7158 ;; This function calls:
  7159 ;;		_I2C_2_Master_Read
  7160 ;;		_I2C_2_Master_RepStart
  7161 ;;		_I2C_2_Master_Start
  7162 ;;		_I2C_2_Master_Stop
  7163 ;;		_I2C_2_Master_Write
  7164 ;; This function is called by:
  7165 ;;		_readColours
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text31
  7170   003B20                     __ptext31:
  7171                           	callstack 0
  7172   003B20                     _color_read_Blue:
  7173                           	callstack 25
  7174   003B20                     
  7175                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  7176   003B20  EC8D  F01F         	call	_I2C_2_Master_Start	;wreg free
  7177                           
  7178                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  7179   003B24  0E52               	movlw	82
  7180   003B26  EC7D  F01F         	call	_I2C_2_Master_Write
  7181                           
  7182                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  7183   003B2A  0EBA               	movlw	186
  7184   003B2C  EC7D  F01F         	call	_I2C_2_Master_Write
  7185                           
  7186                           ;color.c: 78:  I2C_2_Master_RepStart();
  7187   003B30  EC83  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7188                           
  7189                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  7190   003B34  0E53               	movlw	83
  7191   003B36  EC7D  F01F         	call	_I2C_2_Master_Write
  7192                           
  7193                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  7194   003B3A  0E01               	movlw	1
  7195   003B3C  EC1F  F01E         	call	_I2C_2_Master_Read
  7196   003B40  6E0B               	movwf	??_color_read_Blue^0,c
  7197   003B42  500B               	movf	??_color_read_Blue^0,w,c
  7198   003B44  6E0E               	movwf	color_read_Blue@tmp^0,c
  7199   003B46  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7200                           
  7201                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7202   003B48  0E00               	movlw	0
  7203   003B4A  EC1F  F01E         	call	_I2C_2_Master_Read
  7204   003B4E  6E0B               	movwf	??_color_read_Blue^0,c
  7205   003B50  500B               	movf	??_color_read_Blue^0,w,c
  7206   003B52  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7207   003B54  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7208   003B56  500E               	movf	color_read_Blue@tmp^0,w,c
  7209   003B58  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7210   003B5A  6E0E               	movwf	color_read_Blue@tmp^0,c
  7211   003B5C  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7212   003B5E  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7213   003B60  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7214                           
  7215                           ;color.c: 82:  I2C_2_Master_Stop();
  7216   003B62  EC88  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7217   003B66                     
  7218                           ;color.c: 83:  return tmp;
  7219   003B66  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7220   003B6A  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7221   003B6E  0012               	return		;funcret
  7222   003B70                     __end_of_color_read_Blue:
  7223                           	callstack 0
  7224                           
  7225 ;; *************** function _I2C_2_Master_RepStart *****************
  7226 ;; Defined at:
  7227 ;;		line 33 in file "i2c.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;		None
  7230 ;; Auto vars:     Size  Location     Type
  7231 ;;		None
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  1    wreg      void 
  7234 ;; Registers used:
  7235 ;;		wreg, status,2, status,0, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7245 ;;Total ram usage:        0 bytes
  7246 ;; Hardware stack levels used: 1
  7247 ;; Hardware stack levels required when called: 3
  7248 ;; This function calls:
  7249 ;;		_I2C_2_Master_Idle
  7250 ;; This function is called by:
  7251 ;;		_color_read_lum
  7252 ;;		_color_read_Red
  7253 ;;		_color_read_Green
  7254 ;;		_color_read_Blue
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text32
  7259   003F06                     __ptext32:
  7260                           	callstack 0
  7261   003F06                     _I2C_2_Master_RepStart:
  7262                           	callstack 25
  7263   003F06                     
  7264                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7265   003F06  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7266   003F0A                     
  7267                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7268   003F0A  010E               	movlb	14	; () banked
  7269   003F0C  83DA               	bsf	218,1,b	;volatile
  7270   003F0E                     
  7271                           ; BSR set to: 14
  7272   003F0E  0012               	return		;funcret
  7273   003F10                     __end_of_I2C_2_Master_RepStart:
  7274                           	callstack 0
  7275                           
  7276 ;; *************** function _I2C_2_Master_Read *****************
  7277 ;; Defined at:
  7278 ;;		line 51 in file "i2c.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  ack             1    wreg     unsigned char 
  7281 ;; Auto vars:     Size  Location     Type
  7282 ;;  ack             1    6[COMRAM] unsigned char 
  7283 ;;  tmp             1    7[COMRAM] unsigned char 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      unsigned char 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7296 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7297 ;;Total ram usage:        3 bytes
  7298 ;; Hardware stack levels used: 1
  7299 ;; Hardware stack levels required when called: 3
  7300 ;; This function calls:
  7301 ;;		_I2C_2_Master_Idle
  7302 ;; This function is called by:
  7303 ;;		_color_read_lum
  7304 ;;		_color_read_Red
  7305 ;;		_color_read_Green
  7306 ;;		_color_read_Blue
  7307 ;; This function uses a non-reentrant model
  7308 ;;
  7309                           
  7310                           	psect	text33
  7311   003C3E                     __ptext33:
  7312                           	callstack 0
  7313   003C3E                     _I2C_2_Master_Read:
  7314                           	callstack 25
  7315                           
  7316                           ; BSR set to: 14
  7317                           ;incstack = 0
  7318                           ;I2C_2_Master_Read@ack stored from wreg
  7319   003C3E  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7320   003C40                     
  7321                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7322   003C40  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7323   003C44                     
  7324                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7325   003C44  010E               	movlb	14	; () banked
  7326   003C46  87DA               	bsf	218,3,b	;volatile
  7327                           
  7328                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7329   003C48  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7330   003C4C                     
  7331                           ;i2c.c: 57:   tmp = SSP2BUF;
  7332   003C4C  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7333                           
  7334                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7335   003C50  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7336   003C54                     
  7337                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7338   003C54  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7339   003C56  B4D8               	btfsc	status,2,c
  7340   003C58  EF30  F01E         	goto	u3981
  7341   003C5C  EF34  F01E         	goto	u3980
  7342   003C60                     u3981:
  7343   003C60  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7344   003C62  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7345   003C64  EF35  F01E         	goto	u3998
  7346   003C68                     u3980:
  7347   003C68  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7348   003C6A                     u3998:
  7349   003C6A  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7350   003C6C  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7351   003C6E  010E               	movlb	14	; () banked
  7352   003C70  51DA               	movf	218,w,b	;volatile
  7353   003C72  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7354   003C74  0BDF               	andlw	-33
  7355   003C76  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7356   003C78  6FDA               	movwf	218,b	;volatile
  7357   003C7A                     
  7358                           ; BSR set to: 14
  7359                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7360   003C7A  89DA               	bsf	218,4,b	;volatile
  7361   003C7C                     
  7362                           ; BSR set to: 14
  7363                           ;i2c.c: 61:   return tmp;
  7364   003C7C  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7365   003C7E                     
  7366                           ; BSR set to: 14
  7367   003C7E  0012               	return		;funcret
  7368   003C80                     __end_of_I2C_2_Master_Read:
  7369                           	callstack 0
  7370                           
  7371 ;; *************** function _initUSART4 *****************
  7372 ;; Defined at:
  7373 ;;		line 4 in file "serial.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;		None
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;		None
  7378 ;; Return value:  Size  Location     Type
  7379 ;;                  1    wreg      void 
  7380 ;; Registers used:
  7381 ;;		wreg, status,2
  7382 ;; Tracked objects:
  7383 ;;		On entry : 0/0
  7384 ;;		On exit  : 0/0
  7385 ;;		Unchanged: 0/0
  7386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;Total ram usage:        0 bytes
  7392 ;; Hardware stack levels used: 1
  7393 ;; Hardware stack levels required when called: 2
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_main
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text34
  7402   003EB6                     __ptext34:
  7403                           	callstack 0
  7404   003EB6                     _initUSART4:
  7405                           	callstack 28
  7406   003EB6                     
  7407                           ;serial.c: 5:     RC0PPS = 0x12;
  7408   003EB6  0E12               	movlw	18
  7409   003EB8  010E               	movlb	14	; () banked
  7410   003EBA  6F62               	movwf	98,b	;volatile
  7411                           
  7412                           ;serial.c: 6:     RX4PPS = 0x11;
  7413   003EBC  0E11               	movlw	17
  7414   003EBE  6F15               	movwf	21,b	;volatile
  7415   003EC0                     
  7416                           ; BSR set to: 14
  7417                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7418   003EC0  97E9               	bcf	233,3,b	;volatile
  7419   003EC2                     
  7420                           ; BSR set to: 14
  7421                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7422   003EC2  95E8               	bcf	232,2,b	;volatile
  7423                           
  7424                           ;serial.c: 9:     SP4BRGL = 51;
  7425   003EC4  0E33               	movlw	51
  7426   003EC6  6FE5               	movwf	229,b	;volatile
  7427                           
  7428                           ;serial.c: 10:     SP4BRGH = 0;
  7429   003EC8  0E00               	movlw	0
  7430   003ECA  6FE6               	movwf	230,b	;volatile
  7431   003ECC                     
  7432                           ; BSR set to: 14
  7433                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7434   003ECC  89E7               	bsf	231,4,b	;volatile
  7435   003ECE                     
  7436                           ; BSR set to: 14
  7437                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7438   003ECE  8BE8               	bsf	232,5,b	;volatile
  7439   003ED0                     
  7440                           ; BSR set to: 14
  7441                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7442   003ED0  8FE7               	bsf	231,7,b	;volatile
  7443   003ED2                     
  7444                           ; BSR set to: 14
  7445   003ED2  0012               	return		;funcret
  7446   003ED4                     __end_of_initUSART4:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function _colour_rel *****************
  7450 ;; Defined at:
  7451 ;;		line 95 in file "color.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;  vals            2   29[COMRAM] PTR struct RGB
  7454 ;;		 -> vals(8), 
  7455 ;;  rel             2   31[COMRAM] PTR struct RGB_rel
  7456 ;;		 -> rel(16), 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  L               4   45[COMRAM] float 
  7459 ;;  B               4   41[COMRAM] float 
  7460 ;;  G               4   37[COMRAM] float 
  7461 ;;  R               4   33[COMRAM] float 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;Total ram usage:       20 bytes
  7476 ;; Hardware stack levels used: 1
  7477 ;; Hardware stack levels required when called: 3
  7478 ;; This function calls:
  7479 ;;		___fldiv
  7480 ;;		___xxtofl
  7481 ;; This function is called by:
  7482 ;;		_main
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text35
  7487   002DF4                     __ptext35:
  7488                           	callstack 0
  7489   002DF4                     _colour_rel:
  7490                           	callstack 27
  7491   002DF4                     
  7492                           ;color.c: 96:     float R = vals->R;
  7493   002DF4  C01E  FFD9         	movff	colour_rel@vals,fsr2l
  7494   002DF8  C01F  FFDA         	movff	colour_rel@vals+1,fsr2h
  7495   002DFC  CFDE F005          	movff	postinc2,___xxtofl@val
  7496   002E00  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7497   002E04  0E00               	movlw	0
  7498   002E06  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7499   002E08  0EFF               	movlw	-1
  7500   002E0A  6E07               	movwf	(___xxtofl@val+2)^0,c
  7501   002E0C  6E08               	movwf	(___xxtofl@val+3)^0,c
  7502   002E0E  0E01               	movlw	1
  7503   002E10  EC20  F016         	call	___xxtofl
  7504   002E14  C005  F022         	movff	?___xxtofl,colour_rel@R
  7505   002E18  C006  F023         	movff	?___xxtofl+1,colour_rel@R+1
  7506   002E1C  C007  F024         	movff	?___xxtofl+2,colour_rel@R+2
  7507   002E20  C008  F025         	movff	?___xxtofl+3,colour_rel@R+3
  7508                           
  7509                           ;color.c: 97:     float G = vals->G;
  7510   002E24  EE20 F002          	lfsr	2,2
  7511   002E28  501E               	movf	colour_rel@vals^0,w,c
  7512   002E2A  26D9               	addwf	fsr2l,f,c
  7513   002E2C  501F               	movf	(colour_rel@vals+1)^0,w,c
  7514   002E2E  22DA               	addwfc	fsr2h,f,c
  7515   002E30  CFDE F005          	movff	postinc2,___xxtofl@val
  7516   002E34  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7517   002E38  0E00               	movlw	0
  7518   002E3A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7519   002E3C  0EFF               	movlw	-1
  7520   002E3E  6E07               	movwf	(___xxtofl@val+2)^0,c
  7521   002E40  6E08               	movwf	(___xxtofl@val+3)^0,c
  7522   002E42  0E01               	movlw	1
  7523   002E44  EC20  F016         	call	___xxtofl
  7524   002E48  C005  F026         	movff	?___xxtofl,colour_rel@G
  7525   002E4C  C006  F027         	movff	?___xxtofl+1,colour_rel@G+1
  7526   002E50  C007  F028         	movff	?___xxtofl+2,colour_rel@G+2
  7527   002E54  C008  F029         	movff	?___xxtofl+3,colour_rel@G+3
  7528                           
  7529                           ;color.c: 98:     float B = vals->B;
  7530   002E58  EE20 F004          	lfsr	2,4
  7531   002E5C  501E               	movf	colour_rel@vals^0,w,c
  7532   002E5E  26D9               	addwf	fsr2l,f,c
  7533   002E60  501F               	movf	(colour_rel@vals+1)^0,w,c
  7534   002E62  22DA               	addwfc	fsr2h,f,c
  7535   002E64  CFDE F005          	movff	postinc2,___xxtofl@val
  7536   002E68  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7537   002E6C  0E00               	movlw	0
  7538   002E6E  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7539   002E70  0EFF               	movlw	-1
  7540   002E72  6E07               	movwf	(___xxtofl@val+2)^0,c
  7541   002E74  6E08               	movwf	(___xxtofl@val+3)^0,c
  7542   002E76  0E01               	movlw	1
  7543   002E78  EC20  F016         	call	___xxtofl
  7544   002E7C  C005  F02A         	movff	?___xxtofl,colour_rel@B
  7545   002E80  C006  F02B         	movff	?___xxtofl+1,colour_rel@B+1
  7546   002E84  C007  F02C         	movff	?___xxtofl+2,colour_rel@B+2
  7547   002E88  C008  F02D         	movff	?___xxtofl+3,colour_rel@B+3
  7548                           
  7549                           ;color.c: 99:     float L = vals->L;
  7550   002E8C  EE20 F006          	lfsr	2,6
  7551   002E90  501E               	movf	colour_rel@vals^0,w,c
  7552   002E92  26D9               	addwf	fsr2l,f,c
  7553   002E94  501F               	movf	(colour_rel@vals+1)^0,w,c
  7554   002E96  22DA               	addwfc	fsr2h,f,c
  7555   002E98  CFDE F005          	movff	postinc2,___xxtofl@val
  7556   002E9C  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7557   002EA0  0E00               	movlw	0
  7558   002EA2  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7559   002EA4  0EFF               	movlw	-1
  7560   002EA6  6E07               	movwf	(___xxtofl@val+2)^0,c
  7561   002EA8  6E08               	movwf	(___xxtofl@val+3)^0,c
  7562   002EAA  0E01               	movlw	1
  7563   002EAC  EC20  F016         	call	___xxtofl
  7564   002EB0  C005  F02E         	movff	?___xxtofl,colour_rel@L
  7565   002EB4  C006  F02F         	movff	?___xxtofl+1,colour_rel@L+1
  7566   002EB8  C007  F030         	movff	?___xxtofl+2,colour_rel@L+2
  7567   002EBC  C008  F031         	movff	?___xxtofl+3,colour_rel@L+3
  7568                           
  7569                           ;color.c: 100:     rel -> R = R/L;
  7570   002EC0  C022  F005         	movff	colour_rel@R,___fldiv@b
  7571   002EC4  C023  F006         	movff	colour_rel@R+1,___fldiv@b+1
  7572   002EC8  C024  F007         	movff	colour_rel@R+2,___fldiv@b+2
  7573   002ECC  C025  F008         	movff	colour_rel@R+3,___fldiv@b+3
  7574   002ED0  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7575   002ED4  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7576   002ED8  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7577   002EDC  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7578   002EE0  EC88  F010         	call	___fldiv	;wreg free
  7579   002EE4  C020  FFD9         	movff	colour_rel@rel,fsr2l
  7580   002EE8  C021  FFDA         	movff	colour_rel@rel+1,fsr2h
  7581   002EEC  C005  FFDE         	movff	?___fldiv,postinc2
  7582   002EF0  C006  FFDE         	movff	?___fldiv+1,postinc2
  7583   002EF4  C007  FFDE         	movff	?___fldiv+2,postinc2
  7584   002EF8  C008  FFDE         	movff	?___fldiv+3,postinc2
  7585                           
  7586                           ;color.c: 101:     rel -> B = B/L;
  7587   002EFC  C02A  F005         	movff	colour_rel@B,___fldiv@b
  7588   002F00  C02B  F006         	movff	colour_rel@B+1,___fldiv@b+1
  7589   002F04  C02C  F007         	movff	colour_rel@B+2,___fldiv@b+2
  7590   002F08  C02D  F008         	movff	colour_rel@B+3,___fldiv@b+3
  7591   002F0C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7592   002F10  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7593   002F14  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7594   002F18  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7595   002F1C  EC88  F010         	call	___fldiv	;wreg free
  7596   002F20  EE20 F008          	lfsr	2,8
  7597   002F24  5020               	movf	colour_rel@rel^0,w,c
  7598   002F26  26D9               	addwf	fsr2l,f,c
  7599   002F28  5021               	movf	(colour_rel@rel+1)^0,w,c
  7600   002F2A  22DA               	addwfc	fsr2h,f,c
  7601   002F2C  C005  FFDE         	movff	?___fldiv,postinc2
  7602   002F30  C006  FFDE         	movff	?___fldiv+1,postinc2
  7603   002F34  C007  FFDE         	movff	?___fldiv+2,postinc2
  7604   002F38  C008  FFDE         	movff	?___fldiv+3,postinc2
  7605                           
  7606                           ;color.c: 102:     rel -> G = G/L;
  7607   002F3C  C026  F005         	movff	colour_rel@G,___fldiv@b
  7608   002F40  C027  F006         	movff	colour_rel@G+1,___fldiv@b+1
  7609   002F44  C028  F007         	movff	colour_rel@G+2,___fldiv@b+2
  7610   002F48  C029  F008         	movff	colour_rel@G+3,___fldiv@b+3
  7611   002F4C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7612   002F50  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7613   002F54  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7614   002F58  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7615   002F5C  EC88  F010         	call	___fldiv	;wreg free
  7616   002F60  EE20 F004          	lfsr	2,4
  7617   002F64  5020               	movf	colour_rel@rel^0,w,c
  7618   002F66  26D9               	addwf	fsr2l,f,c
  7619   002F68  5021               	movf	(colour_rel@rel+1)^0,w,c
  7620   002F6A  22DA               	addwfc	fsr2h,f,c
  7621   002F6C  C005  FFDE         	movff	?___fldiv,postinc2
  7622   002F70  C006  FFDE         	movff	?___fldiv+1,postinc2
  7623   002F74  C007  FFDE         	movff	?___fldiv+2,postinc2
  7624   002F78  C008  FFDE         	movff	?___fldiv+3,postinc2
  7625   002F7C  0012               	return		;funcret
  7626   002F7E                     __end_of_colour_rel:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function ___xxtofl *****************
  7630 ;; Defined at:
  7631 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  sign            1    wreg     unsigned char 
  7634 ;;  val             4    4[COMRAM] long 
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;  sign            1   12[COMRAM] unsigned char 
  7637 ;;  arg             4   14[COMRAM] unsigned long 
  7638 ;;  exp             1   13[COMRAM] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4    4[COMRAM] unsigned char 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;Total ram usage:       14 bytes
  7653 ;; Hardware stack levels used: 1
  7654 ;; Hardware stack levels required when called: 2
  7655 ;; This function calls:
  7656 ;;		Nothing
  7657 ;; This function is called by:
  7658 ;;		_colour_rel
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           	psect	text36
  7663   002C40                     __ptext36:
  7664                           	callstack 0
  7665   002C40                     ___xxtofl:
  7666                           	callstack 27
  7667                           
  7668                           ;incstack = 0
  7669                           ;___xxtofl@sign stored from wreg
  7670   002C40  6E0D               	movwf	___xxtofl@sign^0,c
  7671   002C42  500D               	movf	___xxtofl@sign^0,w,c
  7672   002C44  B4D8               	btfsc	status,2,c
  7673   002C46  EF27  F016         	goto	u4071
  7674   002C4A  EF29  F016         	goto	u4070
  7675   002C4E                     u4071:
  7676   002C4E  EF4B  F016         	goto	l950
  7677   002C52                     u4070:
  7678   002C52  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7679   002C54  EF30  F016         	goto	u4080
  7680   002C58  EF2E  F016         	goto	u4081
  7681   002C5C                     u4081:
  7682   002C5C  EF4B  F016         	goto	l950
  7683   002C60                     u4080:
  7684   002C60  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7685   002C64  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7686   002C68  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7687   002C6C  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7688   002C70  1E09               	comf	??___xxtofl^0,f,c
  7689   002C72  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7690   002C74  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7691   002C76  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7692   002C78  2A09               	incf	??___xxtofl^0,f,c
  7693   002C7A  0E00               	movlw	0
  7694   002C7C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7695   002C7E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7696   002C80  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7697   002C82  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7698   002C86  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7699   002C8A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7700   002C8E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7701   002C92  EF53  F016         	goto	l3896
  7702   002C96                     l950:
  7703   002C96  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7704   002C9A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7705   002C9E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7706   002CA2  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7707   002CA6                     l3896:
  7708   002CA6  5005               	movf	___xxtofl@val^0,w,c
  7709   002CA8  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7710   002CAA  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7711   002CAC  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7712   002CAE  A4D8               	btfss	status,2,c
  7713   002CB0  EF5C  F016         	goto	u4091
  7714   002CB4  EF5E  F016         	goto	u4090
  7715   002CB8                     u4091:
  7716   002CB8  EF68  F016         	goto	l3902
  7717   002CBC                     u4090:
  7718   002CBC  0E00               	movlw	0
  7719   002CBE  6E05               	movwf	?___xxtofl^0,c
  7720   002CC0  0E00               	movlw	0
  7721   002CC2  6E06               	movwf	(?___xxtofl+1)^0,c
  7722   002CC4  0E00               	movlw	0
  7723   002CC6  6E07               	movwf	(?___xxtofl+2)^0,c
  7724   002CC8  0E00               	movlw	0
  7725   002CCA  6E08               	movwf	(?___xxtofl+3)^0,c
  7726   002CCC  EFF9  F016         	goto	l953
  7727   002CD0                     l3902:
  7728   002CD0  0E96               	movlw	150
  7729   002CD2  6E0E               	movwf	___xxtofl@exp^0,c
  7730   002CD4  EF72  F016         	goto	l3906
  7731   002CD8                     l3904:
  7732   002CD8  2A0E               	incf	___xxtofl@exp^0,f,c
  7733   002CDA  90D8               	bcf	status,0,c
  7734   002CDC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7735   002CDE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7736   002CE0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7737   002CE2  320F               	rrcf	___xxtofl@arg^0,f,c
  7738   002CE4                     l3906:
  7739   002CE4  0E00               	movlw	0
  7740   002CE6  140F               	andwf	___xxtofl@arg^0,w,c
  7741   002CE8  6E09               	movwf	??___xxtofl^0,c
  7742   002CEA  0E00               	movlw	0
  7743   002CEC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7744   002CEE  6E0A               	movwf	(??___xxtofl+1)^0,c
  7745   002CF0  0E00               	movlw	0
  7746   002CF2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7747   002CF4  6E0B               	movwf	(??___xxtofl+2)^0,c
  7748   002CF6  0EFE               	movlw	254
  7749   002CF8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7750   002CFA  6E0C               	movwf	(??___xxtofl+3)^0,c
  7751   002CFC  5009               	movf	??___xxtofl^0,w,c
  7752   002CFE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7753   002D00  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7754   002D02  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7755   002D04  A4D8               	btfss	status,2,c
  7756   002D06  EF87  F016         	goto	u4101
  7757   002D0A  EF89  F016         	goto	u4100
  7758   002D0E                     u4101:
  7759   002D0E  EF6C  F016         	goto	l3904
  7760   002D12                     u4100:
  7761   002D12  EF97  F016         	goto	l957
  7762   002D16                     l3908:
  7763   002D16  2A0E               	incf	___xxtofl@exp^0,f,c
  7764   002D18  0E01               	movlw	1
  7765   002D1A  260F               	addwf	___xxtofl@arg^0,f,c
  7766   002D1C  0E00               	movlw	0
  7767   002D1E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7768   002D20  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7769   002D22  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7770   002D24  90D8               	bcf	status,0,c
  7771   002D26  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7772   002D28  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7773   002D2A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7774   002D2C  320F               	rrcf	___xxtofl@arg^0,f,c
  7775   002D2E                     l957:
  7776   002D2E  0E00               	movlw	0
  7777   002D30  140F               	andwf	___xxtofl@arg^0,w,c
  7778   002D32  6E09               	movwf	??___xxtofl^0,c
  7779   002D34  0E00               	movlw	0
  7780   002D36  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7781   002D38  6E0A               	movwf	(??___xxtofl+1)^0,c
  7782   002D3A  0E00               	movlw	0
  7783   002D3C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7784   002D3E  6E0B               	movwf	(??___xxtofl+2)^0,c
  7785   002D40  0EFF               	movlw	255
  7786   002D42  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7787   002D44  6E0C               	movwf	(??___xxtofl+3)^0,c
  7788   002D46  5009               	movf	??___xxtofl^0,w,c
  7789   002D48  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7790   002D4A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7791   002D4C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7792   002D4E  A4D8               	btfss	status,2,c
  7793   002D50  EFAC  F016         	goto	u4111
  7794   002D54  EFAE  F016         	goto	u4110
  7795   002D58                     u4111:
  7796   002D58  EF8B  F016         	goto	l3908
  7797   002D5C                     u4110:
  7798   002D5C  EFB6  F016         	goto	l3916
  7799   002D60                     l3914:
  7800   002D60  060E               	decf	___xxtofl@exp^0,f,c
  7801   002D62  90D8               	bcf	status,0,c
  7802   002D64  360F               	rlcf	___xxtofl@arg^0,f,c
  7803   002D66  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7804   002D68  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7805   002D6A  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7806   002D6C                     l3916:
  7807   002D6C  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7808   002D6E  EFBB  F016         	goto	u4121
  7809   002D72  EFBD  F016         	goto	u4120
  7810   002D76                     u4121:
  7811   002D76  EFC5  F016         	goto	l964
  7812   002D7A                     u4120:
  7813   002D7A  0E02               	movlw	2
  7814   002D7C  600E               	cpfslt	___xxtofl@exp^0,c
  7815   002D7E  EFC3  F016         	goto	u4131
  7816   002D82  EFC5  F016         	goto	u4130
  7817   002D86                     u4131:
  7818   002D86  EFB0  F016         	goto	l3914
  7819   002D8A                     u4130:
  7820   002D8A                     l964:
  7821   002D8A  B00E               	btfsc	___xxtofl@exp^0,0,c
  7822   002D8C  EFCA  F016         	goto	u4141
  7823   002D90  EFCC  F016         	goto	u4140
  7824   002D94                     u4141:
  7825   002D94  EFCD  F016         	goto	l3922
  7826   002D98                     u4140:
  7827   002D98  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7828   002D9A                     l3922:
  7829   002D9A  90D8               	bcf	status,0,c
  7830   002D9C  320E               	rrcf	___xxtofl@exp^0,f,c
  7831   002D9E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7832   002DA2  6A0A               	clrf	(??___xxtofl+1)^0,c
  7833   002DA4  6A0B               	clrf	(??___xxtofl+2)^0,c
  7834   002DA6  6A0C               	clrf	(??___xxtofl+3)^0,c
  7835   002DA8  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7836   002DAC  6A0B               	clrf	(??___xxtofl+2)^0,c
  7837   002DAE  6A0A               	clrf	(??___xxtofl+1)^0,c
  7838   002DB0  6A09               	clrf	??___xxtofl^0,c
  7839   002DB2  5009               	movf	??___xxtofl^0,w,c
  7840   002DB4  120F               	iorwf	___xxtofl@arg^0,f,c
  7841   002DB6  500A               	movf	(??___xxtofl+1)^0,w,c
  7842   002DB8  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7843   002DBA  500B               	movf	(??___xxtofl+2)^0,w,c
  7844   002DBC  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7845   002DBE  500C               	movf	(??___xxtofl+3)^0,w,c
  7846   002DC0  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7847   002DC2  500D               	movf	___xxtofl@sign^0,w,c
  7848   002DC4  B4D8               	btfsc	status,2,c
  7849   002DC6  EFE7  F016         	goto	u4151
  7850   002DCA  EFE9  F016         	goto	u4150
  7851   002DCE                     u4151:
  7852   002DCE  EFF1  F016         	goto	l3932
  7853   002DD2                     u4150:
  7854   002DD2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7855   002DD4  EFF0  F016         	goto	u4160
  7856   002DD8  EFEE  F016         	goto	u4161
  7857   002DDC                     u4161:
  7858   002DDC  EFF1  F016         	goto	l3932
  7859   002DE0                     u4160:
  7860   002DE0  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7861   002DE2                     l3932:
  7862   002DE2  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7863   002DE6  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7864   002DEA  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7865   002DEE  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7866   002DF2                     l953:
  7867   002DF2  0012               	return		;funcret
  7868   002DF4                     __end_of___xxtofl:
  7869                           	callstack 0
  7870                           
  7871 ;; *************** function ___fldiv *****************
  7872 ;; Defined at:
  7873 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;  b               4    4[COMRAM] unsigned char 
  7876 ;;  a               4    8[COMRAM] unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  grs             4   23[COMRAM] unsigned long 
  7879 ;;  rem             4   16[COMRAM] unsigned long 
  7880 ;;  new_exp         2   21[COMRAM] short 
  7881 ;;  aexp            1   28[COMRAM] unsigned char 
  7882 ;;  bexp            1   27[COMRAM] unsigned char 
  7883 ;;  sign            1   20[COMRAM] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  4    4[COMRAM] unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7893 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;Total ram usage:       25 bytes
  7898 ;; Hardware stack levels used: 1
  7899 ;; Hardware stack levels required when called: 2
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_colour_rel
  7904 ;;		_efgtoa
  7905 ;; This function uses a non-reentrant model
  7906 ;;
  7907                           
  7908                           	psect	text37
  7909   002110                     __ptext37:
  7910                           	callstack 0
  7911   002110                     ___fldiv:
  7912                           	callstack 24
  7913   002110  5008               	movf	(___fldiv@b+3)^0,w,c
  7914   002112  0B80               	andlw	128
  7915   002114  6E15               	movwf	___fldiv@sign^0,c
  7916   002116  5008               	movf	(___fldiv@b+3)^0,w,c
  7917   002118  2408               	addwf	(___fldiv@b+3)^0,w,c
  7918   00211A  6E1C               	movwf	___fldiv@bexp^0,c
  7919   00211C  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7920   00211E  EF93  F010         	goto	u4851
  7921   002122  EF95  F010         	goto	u4850
  7922   002126                     u4851:
  7923   002126  EF96  F010         	goto	l4518
  7924   00212A                     u4850:
  7925   00212A  801C               	bsf	___fldiv@bexp^0,0,c
  7926   00212C                     l4518:
  7927   00212C  501C               	movf	___fldiv@bexp^0,w,c
  7928   00212E  B4D8               	btfsc	status,2,c
  7929   002130  EF9C  F010         	goto	u4861
  7930   002134  EF9E  F010         	goto	u4860
  7931   002138                     u4861:
  7932   002138  EFB3  F010         	goto	l4528
  7933   00213C                     u4860:
  7934   00213C  281C               	incf	___fldiv@bexp^0,w,c
  7935   00213E  A4D8               	btfss	status,2,c
  7936   002140  EFA4  F010         	goto	u4871
  7937   002144  EFA6  F010         	goto	u4870
  7938   002148                     u4871:
  7939   002148  EFAE  F010         	goto	l4524
  7940   00214C                     u4870:
  7941   00214C  0E00               	movlw	0
  7942   00214E  6E05               	movwf	___fldiv@b^0,c
  7943   002150  0E00               	movlw	0
  7944   002152  6E06               	movwf	(___fldiv@b+1)^0,c
  7945   002154  0E00               	movlw	0
  7946   002156  6E07               	movwf	(___fldiv@b+2)^0,c
  7947   002158  0E00               	movlw	0
  7948   00215A  6E08               	movwf	(___fldiv@b+3)^0,c
  7949   00215C                     l4524:
  7950   00215C  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7951   00215E  0E00               	movlw	0
  7952   002160  6E08               	movwf	(___fldiv@b+3)^0,c
  7953   002162  EFBB  F010         	goto	l4530
  7954   002166                     l4528:
  7955   002166  0E00               	movlw	0
  7956   002168  6E05               	movwf	___fldiv@b^0,c
  7957   00216A  0E00               	movlw	0
  7958   00216C  6E06               	movwf	(___fldiv@b+1)^0,c
  7959   00216E  0E00               	movlw	0
  7960   002170  6E07               	movwf	(___fldiv@b+2)^0,c
  7961   002172  0E00               	movlw	0
  7962   002174  6E08               	movwf	(___fldiv@b+3)^0,c
  7963   002176                     l4530:
  7964   002176  500C               	movf	(___fldiv@a+3)^0,w,c
  7965   002178  0B80               	andlw	128
  7966   00217A  1A15               	xorwf	___fldiv@sign^0,f,c
  7967   00217C  500C               	movf	(___fldiv@a+3)^0,w,c
  7968   00217E  240C               	addwf	(___fldiv@a+3)^0,w,c
  7969   002180  6E1D               	movwf	___fldiv@aexp^0,c
  7970   002182  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  7971   002184  EFC6  F010         	goto	u4881
  7972   002188  EFC8  F010         	goto	u4880
  7973   00218C                     u4881:
  7974   00218C  EFC9  F010         	goto	l4538
  7975   002190                     u4880:
  7976   002190  801D               	bsf	___fldiv@aexp^0,0,c
  7977   002192                     l4538:
  7978   002192  501D               	movf	___fldiv@aexp^0,w,c
  7979   002194  B4D8               	btfsc	status,2,c
  7980   002196  EFCF  F010         	goto	u4891
  7981   00219A  EFD1  F010         	goto	u4890
  7982   00219E                     u4891:
  7983   00219E  EFE6  F010         	goto	l4548
  7984   0021A2                     u4890:
  7985   0021A2  281D               	incf	___fldiv@aexp^0,w,c
  7986   0021A4  A4D8               	btfss	status,2,c
  7987   0021A6  EFD7  F010         	goto	u4901
  7988   0021AA  EFD9  F010         	goto	u4900
  7989   0021AE                     u4901:
  7990   0021AE  EFE1  F010         	goto	l4544
  7991   0021B2                     u4900:
  7992   0021B2  0E00               	movlw	0
  7993   0021B4  6E09               	movwf	___fldiv@a^0,c
  7994   0021B6  0E00               	movlw	0
  7995   0021B8  6E0A               	movwf	(___fldiv@a+1)^0,c
  7996   0021BA  0E00               	movlw	0
  7997   0021BC  6E0B               	movwf	(___fldiv@a+2)^0,c
  7998   0021BE  0E00               	movlw	0
  7999   0021C0  6E0C               	movwf	(___fldiv@a+3)^0,c
  8000   0021C2                     l4544:
  8001   0021C2  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  8002   0021C4  0E00               	movlw	0
  8003   0021C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  8004   0021C8  EFEE  F010         	goto	l4550
  8005   0021CC                     l4548:
  8006   0021CC  0E00               	movlw	0
  8007   0021CE  6E09               	movwf	___fldiv@a^0,c
  8008   0021D0  0E00               	movlw	0
  8009   0021D2  6E0A               	movwf	(___fldiv@a+1)^0,c
  8010   0021D4  0E00               	movlw	0
  8011   0021D6  6E0B               	movwf	(___fldiv@a+2)^0,c
  8012   0021D8  0E00               	movlw	0
  8013   0021DA  6E0C               	movwf	(___fldiv@a+3)^0,c
  8014   0021DC                     l4550:
  8015   0021DC  5009               	movf	___fldiv@a^0,w,c
  8016   0021DE  100A               	iorwf	(___fldiv@a+1)^0,w,c
  8017   0021E0  100B               	iorwf	(___fldiv@a+2)^0,w,c
  8018   0021E2  100C               	iorwf	(___fldiv@a+3)^0,w,c
  8019   0021E4  A4D8               	btfss	status,2,c
  8020   0021E6  EFF7  F010         	goto	u4911
  8021   0021EA  EFF9  F010         	goto	u4910
  8022   0021EE                     u4911:
  8023   0021EE  EF11  F011         	goto	l4562
  8024   0021F2                     u4910:
  8025   0021F2  0E00               	movlw	0
  8026   0021F4  6E05               	movwf	___fldiv@b^0,c
  8027   0021F6  0E00               	movlw	0
  8028   0021F8  6E06               	movwf	(___fldiv@b+1)^0,c
  8029   0021FA  0E00               	movlw	0
  8030   0021FC  6E07               	movwf	(___fldiv@b+2)^0,c
  8031   0021FE  0E00               	movlw	0
  8032   002200  6E08               	movwf	(___fldiv@b+3)^0,c
  8033   002202  0E80               	movlw	128
  8034   002204  1207               	iorwf	(___fldiv@b+2)^0,f,c
  8035   002206  0E7F               	movlw	127
  8036   002208  1208               	iorwf	(___fldiv@b+3)^0,f,c
  8037   00220A                     l4556:
  8038   00220A  5015               	movf	___fldiv@sign^0,w,c
  8039   00220C  1208               	iorwf	(___fldiv@b+3)^0,f,c
  8040   00220E  C005  F005         	movff	___fldiv@b,?___fldiv
  8041   002212  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  8042   002216  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  8043   00221A  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  8044   00221E  EF54  F012         	goto	l877
  8045   002222                     l4562:
  8046   002222  501C               	movf	___fldiv@bexp^0,w,c
  8047   002224  A4D8               	btfss	status,2,c
  8048   002226  EF17  F011         	goto	u4921
  8049   00222A  EF19  F011         	goto	u4920
  8050   00222E                     u4921:
  8051   00222E  EF23  F011         	goto	l4570
  8052   002232                     u4920:
  8053   002232  0E00               	movlw	0
  8054   002234  6E05               	movwf	?___fldiv^0,c
  8055   002236  0E00               	movlw	0
  8056   002238  6E06               	movwf	(?___fldiv+1)^0,c
  8057   00223A  0E00               	movlw	0
  8058   00223C  6E07               	movwf	(?___fldiv+2)^0,c
  8059   00223E  0E00               	movlw	0
  8060   002240  6E08               	movwf	(?___fldiv+3)^0,c
  8061   002242  EF54  F012         	goto	l877
  8062   002246                     l4570:
  8063   002246  501D               	movf	___fldiv@aexp^0,w,c
  8064   002248  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  8065   00224C  6A0E               	clrf	(??___fldiv+1)^0,c
  8066   00224E  5E0D               	subwf	??___fldiv^0,f,c
  8067   002250  0E00               	movlw	0
  8068   002252  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  8069   002254  0E7F               	movlw	127
  8070   002256  240D               	addwf	??___fldiv^0,w,c
  8071   002258  6E16               	movwf	___fldiv@new_exp^0,c
  8072   00225A  0E00               	movlw	0
  8073   00225C  200E               	addwfc	(??___fldiv+1)^0,w,c
  8074   00225E  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8075   002260  C005  F011         	movff	___fldiv@b,___fldiv@rem
  8076   002264  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  8077   002268  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  8078   00226C  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  8079   002270  0E00               	movlw	0
  8080   002272  6E05               	movwf	___fldiv@b^0,c
  8081   002274  0E00               	movlw	0
  8082   002276  6E06               	movwf	(___fldiv@b+1)^0,c
  8083   002278  0E00               	movlw	0
  8084   00227A  6E07               	movwf	(___fldiv@b+2)^0,c
  8085   00227C  0E00               	movlw	0
  8086   00227E  6E08               	movwf	(___fldiv@b+3)^0,c
  8087   002280  0E00               	movlw	0
  8088   002282  6E18               	movwf	___fldiv@grs^0,c
  8089   002284  0E00               	movlw	0
  8090   002286  6E19               	movwf	(___fldiv@grs+1)^0,c
  8091   002288  0E00               	movlw	0
  8092   00228A  6E1A               	movwf	(___fldiv@grs+2)^0,c
  8093   00228C  0E00               	movlw	0
  8094   00228E  6E1B               	movwf	(___fldiv@grs+3)^0,c
  8095   002290  0E00               	movlw	0
  8096   002292  6E1D               	movwf	___fldiv@aexp^0,c
  8097   002294  EF84  F011         	goto	l879
  8098   002298                     l4580:
  8099   002298  501D               	movf	___fldiv@aexp^0,w,c
  8100   00229A  B4D8               	btfsc	status,2,c
  8101   00229C  EF52  F011         	goto	u4931
  8102   0022A0  EF54  F011         	goto	u4930
  8103   0022A4                     u4931:
  8104   0022A4  EF6B  F011         	goto	l4588
  8105   0022A8                     u4930:
  8106   0022A8  90D8               	bcf	status,0,c
  8107   0022AA  3611               	rlcf	___fldiv@rem^0,f,c
  8108   0022AC  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  8109   0022AE  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  8110   0022B0  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  8111   0022B2  90D8               	bcf	status,0,c
  8112   0022B4  3605               	rlcf	___fldiv@b^0,f,c
  8113   0022B6  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8114   0022B8  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8115   0022BA  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8116   0022BC  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8117   0022BE  EF63  F011         	goto	u4941
  8118   0022C2  EF65  F011         	goto	u4940
  8119   0022C6                     u4941:
  8120   0022C6  EF66  F011         	goto	l882
  8121   0022CA                     u4940:
  8122   0022CA  8005               	bsf	___fldiv@b^0,0,c
  8123   0022CC                     l882:
  8124   0022CC  90D8               	bcf	status,0,c
  8125   0022CE  3618               	rlcf	___fldiv@grs^0,f,c
  8126   0022D0  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8127   0022D2  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8128   0022D4  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8129   0022D6                     l4588:
  8130   0022D6  5009               	movf	___fldiv@a^0,w,c
  8131   0022D8  5C11               	subwf	___fldiv@rem^0,w,c
  8132   0022DA  500A               	movf	(___fldiv@a+1)^0,w,c
  8133   0022DC  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  8134   0022DE  500B               	movf	(___fldiv@a+2)^0,w,c
  8135   0022E0  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  8136   0022E2  500C               	movf	(___fldiv@a+3)^0,w,c
  8137   0022E4  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  8138   0022E6  A0D8               	btfss	status,0,c
  8139   0022E8  EF78  F011         	goto	u4951
  8140   0022EC  EF7A  F011         	goto	u4950
  8141   0022F0                     u4951:
  8142   0022F0  EF83  F011         	goto	l4594
  8143   0022F4                     u4950:
  8144   0022F4  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  8145   0022F6  5009               	movf	___fldiv@a^0,w,c
  8146   0022F8  5E11               	subwf	___fldiv@rem^0,f,c
  8147   0022FA  500A               	movf	(___fldiv@a+1)^0,w,c
  8148   0022FC  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  8149   0022FE  500B               	movf	(___fldiv@a+2)^0,w,c
  8150   002300  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  8151   002302  500C               	movf	(___fldiv@a+3)^0,w,c
  8152   002304  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  8153   002306                     l4594:
  8154   002306  2A1D               	incf	___fldiv@aexp^0,f,c
  8155   002308                     l879:
  8156   002308  0E19               	movlw	25
  8157   00230A  641D               	cpfsgt	___fldiv@aexp^0,c
  8158   00230C  EF8A  F011         	goto	u4961
  8159   002310  EF8C  F011         	goto	u4960
  8160   002314                     u4961:
  8161   002314  EF4C  F011         	goto	l4580
  8162   002318                     u4960:
  8163   002318  5011               	movf	___fldiv@rem^0,w,c
  8164   00231A  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  8165   00231C  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  8166   00231E  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  8167   002320  B4D8               	btfsc	status,2,c
  8168   002322  EF95  F011         	goto	u4971
  8169   002326  EF97  F011         	goto	u4970
  8170   00232A                     u4971:
  8171   00232A  EFAF  F011         	goto	l4606
  8172   00232E                     u4970:
  8173   00232E  8018               	bsf	___fldiv@grs^0,0,c
  8174   002330  EFAF  F011         	goto	l4606
  8175   002334                     l4600:
  8176   002334  90D8               	bcf	status,0,c
  8177   002336  3605               	rlcf	___fldiv@b^0,f,c
  8178   002338  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8179   00233A  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8180   00233C  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8181   00233E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8182   002340  EFA4  F011         	goto	u4981
  8183   002344  EFA6  F011         	goto	u4980
  8184   002348                     u4981:
  8185   002348  EFA7  F011         	goto	l888
  8186   00234C                     u4980:
  8187   00234C  8005               	bsf	___fldiv@b^0,0,c
  8188   00234E                     l888:
  8189   00234E  90D8               	bcf	status,0,c
  8190   002350  3618               	rlcf	___fldiv@grs^0,f,c
  8191   002352  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8192   002354  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8193   002356  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8194   002358  0616               	decf	___fldiv@new_exp^0,f,c
  8195   00235A  A0D8               	btfss	status,0,c
  8196   00235C  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  8197   00235E                     l4606:
  8198   00235E  AE07               	btfss	(___fldiv@b+2)^0,7,c
  8199   002360  EFB4  F011         	goto	u4991
  8200   002364  EFB6  F011         	goto	u4990
  8201   002368                     u4991:
  8202   002368  EF9A  F011         	goto	l4600
  8203   00236C                     u4990:
  8204   00236C  0E00               	movlw	0
  8205   00236E  6E1D               	movwf	___fldiv@aexp^0,c
  8206   002370  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8207   002372  EFBD  F011         	goto	u5001
  8208   002376  EFBF  F011         	goto	u5000
  8209   00237A                     u5001:
  8210   00237A  EFE3  F011         	goto	l890
  8211   00237E                     u5000:
  8212   00237E  0EFF               	movlw	255
  8213   002380  1418               	andwf	___fldiv@grs^0,w,c
  8214   002382  6E0D               	movwf	??___fldiv^0,c
  8215   002384  0EFF               	movlw	255
  8216   002386  1419               	andwf	(___fldiv@grs+1)^0,w,c
  8217   002388  6E0E               	movwf	(??___fldiv+1)^0,c
  8218   00238A  0EFF               	movlw	255
  8219   00238C  141A               	andwf	(___fldiv@grs+2)^0,w,c
  8220   00238E  6E0F               	movwf	(??___fldiv+2)^0,c
  8221   002390  0E7F               	movlw	127
  8222   002392  141B               	andwf	(___fldiv@grs+3)^0,w,c
  8223   002394  6E10               	movwf	(??___fldiv+3)^0,c
  8224   002396  500D               	movf	??___fldiv^0,w,c
  8225   002398  100E               	iorwf	(??___fldiv+1)^0,w,c
  8226   00239A  100F               	iorwf	(??___fldiv+2)^0,w,c
  8227   00239C  1010               	iorwf	(??___fldiv+3)^0,w,c
  8228   00239E  B4D8               	btfsc	status,2,c
  8229   0023A0  EFD4  F011         	goto	u5011
  8230   0023A4  EFD6  F011         	goto	u5010
  8231   0023A8                     u5011:
  8232   0023A8  EFDA  F011         	goto	l891
  8233   0023AC                     u5010:
  8234   0023AC                     l4614:
  8235   0023AC  0E01               	movlw	1
  8236   0023AE  6E1D               	movwf	___fldiv@aexp^0,c
  8237   0023B0  EFE3  F011         	goto	l890
  8238   0023B4                     l891:
  8239   0023B4  A005               	btfss	___fldiv@b^0,0,c
  8240   0023B6  EFDF  F011         	goto	u5021
  8241   0023BA  EFE1  F011         	goto	u5020
  8242   0023BE                     u5021:
  8243   0023BE  EFE3  F011         	goto	l890
  8244   0023C2                     u5020:
  8245   0023C2  EFD6  F011         	goto	l4614
  8246   0023C6                     l890:
  8247   0023C6  501D               	movf	___fldiv@aexp^0,w,c
  8248   0023C8  B4D8               	btfsc	status,2,c
  8249   0023CA  EFE9  F011         	goto	u5031
  8250   0023CE  EFEB  F011         	goto	u5030
  8251   0023D2                     u5031:
  8252   0023D2  EF0F  F012         	goto	l4626
  8253   0023D6                     u5030:
  8254   0023D6  0E01               	movlw	1
  8255   0023D8  2605               	addwf	___fldiv@b^0,f,c
  8256   0023DA  0E00               	movlw	0
  8257   0023DC  2206               	addwfc	(___fldiv@b+1)^0,f,c
  8258   0023DE  2207               	addwfc	(___fldiv@b+2)^0,f,c
  8259   0023E0  2208               	addwfc	(___fldiv@b+3)^0,f,c
  8260   0023E2  A008               	btfss	(___fldiv@b+3)^0,0,c
  8261   0023E4  EFF6  F011         	goto	u5041
  8262   0023E8  EFF8  F011         	goto	u5040
  8263   0023EC                     u5041:
  8264   0023EC  EF0F  F012         	goto	l4626
  8265   0023F0                     u5040:
  8266   0023F0  C005  F00D         	movff	___fldiv@b,??___fldiv
  8267   0023F4  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  8268   0023F8  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  8269   0023FC  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  8270   002400  3410               	rlcf	(??___fldiv+3)^0,w,c
  8271   002402  3210               	rrcf	(??___fldiv+3)^0,f,c
  8272   002404  320F               	rrcf	(??___fldiv+2)^0,f,c
  8273   002406  320E               	rrcf	(??___fldiv+1)^0,f,c
  8274   002408  320D               	rrcf	??___fldiv^0,f,c
  8275   00240A  C00D  F005         	movff	??___fldiv,___fldiv@b
  8276   00240E  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  8277   002412  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  8278   002416  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  8279   00241A  4A16               	infsnz	___fldiv@new_exp^0,f,c
  8280   00241C  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  8281   00241E                     l4626:
  8282   00241E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8283   002420  EF1A  F012         	goto	u5051
  8284   002424  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8285   002426  E108               	bnz	u5050
  8286   002428  2816               	incf	___fldiv@new_exp^0,w,c
  8287   00242A  A0D8               	btfss	status,0,c
  8288   00242C  EF1A  F012         	goto	u5051
  8289   002430  EF1C  F012         	goto	u5050
  8290   002434                     u5051:
  8291   002434  EF27  F012         	goto	l4630
  8292   002438                     u5050:
  8293   002438  0E00               	movlw	0
  8294   00243A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8295   00243C  6816               	setf	___fldiv@new_exp^0,c
  8296   00243E  0E00               	movlw	0
  8297   002440  6E05               	movwf	___fldiv@b^0,c
  8298   002442  0E00               	movlw	0
  8299   002444  6E06               	movwf	(___fldiv@b+1)^0,c
  8300   002446  0E00               	movlw	0
  8301   002448  6E07               	movwf	(___fldiv@b+2)^0,c
  8302   00244A  0E00               	movlw	0
  8303   00244C  6E08               	movwf	(___fldiv@b+3)^0,c
  8304   00244E                     l4630:
  8305   00244E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8306   002450  EF34  F012         	goto	u5060
  8307   002454  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8308   002456  E106               	bnz	u5061
  8309   002458  0416               	decf	___fldiv@new_exp^0,w,c
  8310   00245A  B0D8               	btfsc	status,0,c
  8311   00245C  EF32  F012         	goto	u5061
  8312   002460  EF34  F012         	goto	u5060
  8313   002464                     u5061:
  8314   002464  EF42  F012         	goto	l4634
  8315   002468                     u5060:
  8316   002468  0E00               	movlw	0
  8317   00246A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8318   00246C  0E00               	movlw	0
  8319   00246E  6E16               	movwf	___fldiv@new_exp^0,c
  8320   002470  0E00               	movlw	0
  8321   002472  6E05               	movwf	___fldiv@b^0,c
  8322   002474  0E00               	movlw	0
  8323   002476  6E06               	movwf	(___fldiv@b+1)^0,c
  8324   002478  0E00               	movlw	0
  8325   00247A  6E07               	movwf	(___fldiv@b+2)^0,c
  8326   00247C  0E00               	movlw	0
  8327   00247E  6E08               	movwf	(___fldiv@b+3)^0,c
  8328   002480  0E00               	movlw	0
  8329   002482  6E15               	movwf	___fldiv@sign^0,c
  8330   002484                     l4634:
  8331   002484  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  8332   002488  A01C               	btfss	___fldiv@bexp^0,0,c
  8333   00248A  EF49  F012         	goto	u5071
  8334   00248E  EF4B  F012         	goto	u5070
  8335   002492                     u5071:
  8336   002492  EF4E  F012         	goto	l4640
  8337   002496                     u5070:
  8338   002496  8E07               	bsf	(___fldiv@b+2)^0,7,c
  8339   002498  EF4F  F012         	goto	l4642
  8340   00249C                     l4640:
  8341   00249C  9E07               	bcf	(___fldiv@b+2)^0,7,c
  8342   00249E                     l4642:
  8343   00249E  90D8               	bcf	status,0,c
  8344   0024A0  301C               	rrcf	___fldiv@bexp^0,w,c
  8345   0024A2  6E08               	movwf	(___fldiv@b+3)^0,c
  8346   0024A4  EF05  F011         	goto	l4556
  8347   0024A8                     l877:
  8348   0024A8  0012               	return		;funcret
  8349   0024AA                     __end_of___fldiv:
  8350                           	callstack 0
  8351                           
  8352 ;; *************** function _color_click_init *****************
  8353 ;; Defined at:
  8354 ;;		line 5 in file "color.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;		None
  8359 ;; Return value:  Size  Location     Type
  8360 ;;                  1    wreg      void 
  8361 ;; Registers used:
  8362 ;;		wreg, status,2, status,0, cstack
  8363 ;; Tracked objects:
  8364 ;;		On entry : 0/0
  8365 ;;		On exit  : 0/0
  8366 ;;		Unchanged: 0/0
  8367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;Total ram usage:        1 bytes
  8373 ;; Hardware stack levels used: 1
  8374 ;; Hardware stack levels required when called: 5
  8375 ;; This function calls:
  8376 ;;		_I2C_2_Master_Init
  8377 ;;		_color_writetoaddr
  8378 ;; This function is called by:
  8379 ;;		_main
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           	psect	text38
  8384   003D36                     __ptext38:
  8385                           	callstack 0
  8386   003D36                     _color_click_init:
  8387                           	callstack 25
  8388   003D36                     
  8389                           ;color.c: 8:     I2C_2_Master_Init();
  8390   003D36  ECF8  F01E         	call	_I2C_2_Master_Init	;wreg free
  8391   003D3A                     
  8392                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8393   003D3A  0E01               	movlw	1
  8394   003D3C  6E07               	movwf	color_writetoaddr@value^0,c
  8395   003D3E  0E00               	movlw	0
  8396   003D40  EC4B  F01F         	call	_color_writetoaddr
  8397   003D44                     
  8398                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8399   003D44  0E3F               	movlw	63
  8400   003D46  6E09               	movwf	??_color_click_init^0,c
  8401   003D48  0E55               	movlw	85
  8402   003D4A                     u6197:
  8403   003D4A  2EE8               	decfsz	wreg,f,c
  8404   003D4C  D7FE               	bra	u6197
  8405   003D4E  2E09               	decfsz	??_color_click_init^0,f,c
  8406   003D50  D7FC               	bra	u6197
  8407   003D52  F000               	nop	
  8408   003D54                     
  8409                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8410   003D54  0E03               	movlw	3
  8411   003D56  6E07               	movwf	color_writetoaddr@value^0,c
  8412   003D58  0E00               	movlw	0
  8413   003D5A  EC4B  F01F         	call	_color_writetoaddr
  8414   003D5E                     
  8415                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8416   003D5E  0ED5               	movlw	213
  8417   003D60  6E07               	movwf	color_writetoaddr@value^0,c
  8418   003D62  0E01               	movlw	1
  8419   003D64  EC4B  F01F         	call	_color_writetoaddr
  8420   003D68  0012               	return		;funcret
  8421   003D6A                     __end_of_color_click_init:
  8422                           	callstack 0
  8423                           
  8424 ;; *************** function _color_writetoaddr *****************
  8425 ;; Defined at:
  8426 ;;		line 23 in file "color.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  address         1    wreg     unsigned char 
  8429 ;;  value           1    6[COMRAM] unsigned char 
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;  address         1    7[COMRAM] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;Total ram usage:        2 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; Hardware stack levels required when called: 4
  8448 ;; This function calls:
  8449 ;;		_I2C_2_Master_Start
  8450 ;;		_I2C_2_Master_Stop
  8451 ;;		_I2C_2_Master_Write
  8452 ;; This function is called by:
  8453 ;;		_color_click_init
  8454 ;;		_main
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text39
  8459   003E96                     __ptext39:
  8460                           	callstack 0
  8461   003E96                     _color_writetoaddr:
  8462                           	callstack 26
  8463                           
  8464                           ;incstack = 0
  8465                           ;color_writetoaddr@address stored from wreg
  8466   003E96  6E08               	movwf	color_writetoaddr@address^0,c
  8467   003E98                     
  8468                           ;color.c: 24:     I2C_2_Master_Start();
  8469   003E98  EC8D  F01F         	call	_I2C_2_Master_Start	;wreg free
  8470                           
  8471                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  8472   003E9C  0E52               	movlw	82
  8473   003E9E  EC7D  F01F         	call	_I2C_2_Master_Write
  8474                           
  8475                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  8476   003EA2  5008               	movf	color_writetoaddr@address^0,w,c
  8477   003EA4  0980               	iorlw	128
  8478   003EA6  EC7D  F01F         	call	_I2C_2_Master_Write
  8479                           
  8480                           ;color.c: 27:     I2C_2_Master_Write(value);
  8481   003EAA  5007               	movf	color_writetoaddr@value^0,w,c
  8482   003EAC  EC7D  F01F         	call	_I2C_2_Master_Write
  8483                           
  8484                           ;color.c: 28:     I2C_2_Master_Stop();
  8485   003EB0  EC88  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8486   003EB4  0012               	return		;funcret
  8487   003EB6                     __end_of_color_writetoaddr:
  8488                           	callstack 0
  8489                           
  8490 ;; *************** function _I2C_2_Master_Write *****************
  8491 ;; Defined at:
  8492 ;;		line 45 in file "i2c.c"
  8493 ;; Parameters:    Size  Location     Type
  8494 ;;  data_byte       1    wreg     unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  data_byte       1    5[COMRAM] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:        1 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 3
  8513 ;; This function calls:
  8514 ;;		_I2C_2_Master_Idle
  8515 ;; This function is called by:
  8516 ;;		_color_writetoaddr
  8517 ;;		_color_read_lum
  8518 ;;		_color_read_Red
  8519 ;;		_color_read_Green
  8520 ;;		_color_read_Blue
  8521 ;; This function uses a non-reentrant model
  8522 ;;
  8523                           
  8524                           	psect	text40
  8525   003EFA                     __ptext40:
  8526                           	callstack 0
  8527   003EFA                     _I2C_2_Master_Write:
  8528                           	callstack 25
  8529                           
  8530                           ;incstack = 0
  8531                           ;I2C_2_Master_Write@data_byte stored from wreg
  8532   003EFA  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8533   003EFC                     
  8534                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8535   003EFC  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8536   003F00                     
  8537                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8538   003F00  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8539   003F04  0012               	return		;funcret
  8540   003F06                     __end_of_I2C_2_Master_Write:
  8541                           	callstack 0
  8542                           
  8543 ;; *************** function _I2C_2_Master_Stop *****************
  8544 ;; Defined at:
  8545 ;;		line 39 in file "i2c.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;		None
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;Total ram usage:        0 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 3
  8566 ;; This function calls:
  8567 ;;		_I2C_2_Master_Idle
  8568 ;; This function is called by:
  8569 ;;		_color_writetoaddr
  8570 ;;		_color_read_lum
  8571 ;;		_color_read_Red
  8572 ;;		_color_read_Green
  8573 ;;		_color_read_Blue
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text41
  8578   003F10                     __ptext41:
  8579                           	callstack 0
  8580   003F10                     _I2C_2_Master_Stop:
  8581                           	callstack 25
  8582   003F10                     
  8583                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8584   003F10  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8585   003F14                     
  8586                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8587   003F14  010E               	movlb	14	; () banked
  8588   003F16  85DA               	bsf	218,2,b	;volatile
  8589   003F18                     
  8590                           ; BSR set to: 14
  8591   003F18  0012               	return		;funcret
  8592   003F1A                     __end_of_I2C_2_Master_Stop:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function _I2C_2_Master_Start *****************
  8596 ;; Defined at:
  8597 ;;		line 27 in file "i2c.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  1    wreg      void 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8615 ;;Total ram usage:        0 bytes
  8616 ;; Hardware stack levels used: 1
  8617 ;; Hardware stack levels required when called: 3
  8618 ;; This function calls:
  8619 ;;		_I2C_2_Master_Idle
  8620 ;; This function is called by:
  8621 ;;		_color_writetoaddr
  8622 ;;		_color_read_lum
  8623 ;;		_color_read_Red
  8624 ;;		_color_read_Green
  8625 ;;		_color_read_Blue
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           
  8629                           	psect	text42
  8630   003F1A                     __ptext42:
  8631                           	callstack 0
  8632   003F1A                     _I2C_2_Master_Start:
  8633                           	callstack 25
  8634   003F1A                     
  8635                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8636   003F1A  EC37  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8637   003F1E                     
  8638                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8639   003F1E  010E               	movlb	14	; () banked
  8640   003F20  81DA               	bsf	218,0,b	;volatile
  8641   003F22                     
  8642                           ; BSR set to: 14
  8643   003F22  0012               	return		;funcret
  8644   003F24                     __end_of_I2C_2_Master_Start:
  8645                           	callstack 0
  8646                           
  8647 ;; *************** function _I2C_2_Master_Idle *****************
  8648 ;; Defined at:
  8649 ;;		line 22 in file "i2c.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;		None
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;		None
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, status,2, status,0
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8666 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8667 ;;Total ram usage:        1 bytes
  8668 ;; Hardware stack levels used: 1
  8669 ;; Hardware stack levels required when called: 2
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_I2C_2_Master_Start
  8674 ;;		_I2C_2_Master_RepStart
  8675 ;;		_I2C_2_Master_Stop
  8676 ;;		_I2C_2_Master_Write
  8677 ;;		_I2C_2_Master_Read
  8678 ;; This function uses a non-reentrant model
  8679 ;;
  8680                           
  8681                           	psect	text43
  8682   003E6E                     __ptext43:
  8683                           	callstack 0
  8684   003E6E                     _I2C_2_Master_Idle:
  8685                           	callstack 25
  8686   003E6E                     l76:
  8687   003E6E  010E               	movlb	14	; () banked
  8688   003E70  B5D8               	btfsc	216,2,b	;volatile
  8689   003E72  EF3D  F01F         	goto	u3541
  8690   003E76  EF3F  F01F         	goto	u3540
  8691   003E7A                     u3541:
  8692   003E7A  EF37  F01F         	goto	l76
  8693   003E7E                     u3540:
  8694   003E7E                     
  8695                           ; BSR set to: 14
  8696   003E7E  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8697   003E82  0E1F               	movlw	31
  8698   003E84  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8699   003E86  A4D8               	btfss	status,2,c
  8700   003E88  EF48  F01F         	goto	u3551
  8701   003E8C  EF4A  F01F         	goto	u3550
  8702   003E90                     u3551:
  8703   003E90  EF37  F01F         	goto	l76
  8704   003E94                     u3550:
  8705   003E94                     
  8706                           ; BSR set to: 14
  8707   003E94  0012               	return		;funcret
  8708   003E96                     __end_of_I2C_2_Master_Idle:
  8709                           	callstack 0
  8710                           
  8711 ;; *************** function _I2C_2_Master_Init *****************
  8712 ;; Defined at:
  8713 ;;		line 4 in file "i2c.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;		None
  8716 ;; Auto vars:     Size  Location     Type
  8717 ;;		None
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  1    wreg      void 
  8720 ;; Registers used:
  8721 ;;		wreg, status,2
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;Total ram usage:        0 bytes
  8732 ;; Hardware stack levels used: 1
  8733 ;; Hardware stack levels required when called: 2
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_color_click_init
  8738 ;;		_main
  8739 ;; This function uses a non-reentrant model
  8740 ;;
  8741                           
  8742                           	psect	text44
  8743   003DF0                     __ptext44:
  8744                           	callstack 0
  8745   003DF0                     _I2C_2_Master_Init:
  8746                           	callstack 27
  8747   003DF0                     
  8748                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8749   003DF0  010E               	movlb	14	; () banked
  8750   003DF2  51D9               	movf	217,w,b	;volatile
  8751   003DF4  0BF0               	andlw	-16
  8752   003DF6  0908               	iorlw	8
  8753   003DF8  6FD9               	movwf	217,b	;volatile
  8754   003DFA                     
  8755                           ; BSR set to: 14
  8756                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8757   003DFA  8BD9               	bsf	217,5,b	;volatile
  8758                           
  8759                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8760   003DFC  0E9F               	movlw	159
  8761   003DFE  6FD6               	movwf	214,b	;volatile
  8762   003E00                     
  8763                           ; BSR set to: 14
  8764                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8765   003E00  8A84               	bsf	132,5,c	;volatile
  8766   003E02                     
  8767                           ; BSR set to: 14
  8768                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8769   003E02  8C84               	bsf	132,6,c	;volatile
  8770   003E04                     
  8771                           ; BSR set to: 14
  8772                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8773   003E04  9BA7               	bcf	167,5,b	;volatile
  8774   003E06                     
  8775                           ; BSR set to: 14
  8776                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8777   003E06  9DA7               	bcf	167,6,b	;volatile
  8778                           
  8779                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8780   003E08  0E1D               	movlw	29
  8781   003E0A  6F1D               	movwf	29,b	;volatile
  8782                           
  8783                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8784   003E0C  0E1E               	movlw	30
  8785   003E0E  6F1C               	movwf	28,b	;volatile
  8786                           
  8787                           ;i2c.c: 18:   RD5PPS=0x1C;
  8788   003E10  0E1C               	movlw	28
  8789   003E12  6F6F               	movwf	111,b	;volatile
  8790                           
  8791                           ;i2c.c: 19:   RD6PPS=0x1B;
  8792   003E14  0E1B               	movlw	27
  8793   003E16  6F70               	movwf	112,b	;volatile
  8794   003E18                     
  8795                           ; BSR set to: 14
  8796   003E18  0012               	return		;funcret
  8797   003E1A                     __end_of_I2C_2_Master_Init:
  8798                           	callstack 0
  8799                           
  8800 ;; *************** function _TxBufferedString *****************
  8801 ;; Defined at:
  8802 ;;		line 85 in file "serial.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;  string          2    5[COMRAM] PTR unsigned char 
  8805 ;;		 -> main@buf(50), 
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      void 
  8810 ;; Registers used:
  8811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;Total ram usage:        2 bytes
  8822 ;; Hardware stack levels used: 1
  8823 ;; Hardware stack levels required when called: 3
  8824 ;; This function calls:
  8825 ;;		_putCharToTxBuf
  8826 ;; This function is called by:
  8827 ;;		_main
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831                           	psect	text45
  8832   003D6A                     __ptext45:
  8833                           	callstack 0
  8834   003D6A                     _TxBufferedString:
  8835                           	callstack 27
  8836   003D6A                     
  8837                           ;serial.c: 86:  while (*string!=0){
  8838   003D6A  EFC0  F01E         	goto	l3994
  8839   003D6E                     l3990:
  8840                           
  8841                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8842   003D6E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8843   003D72  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8844   003D76  50DF               	movf	indf2,w,c
  8845   003D78  EC0D  F01F         	call	_putCharToTxBuf
  8846   003D7C  4A06               	infsnz	TxBufferedString@string^0,f,c
  8847   003D7E  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8848   003D80                     l3994:
  8849                           
  8850                           ;serial.c: 86:  while (*string!=0){
  8851   003D80  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8852   003D84  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8853   003D88  50DF               	movf	indf2,w,c
  8854   003D8A  A4D8               	btfss	status,2,c
  8855   003D8C  EFCA  F01E         	goto	u4201
  8856   003D90  EFCC  F01E         	goto	u4200
  8857   003D94                     u4201:
  8858   003D94  EFB7  F01E         	goto	l3990
  8859   003D98                     u4200:
  8860   003D98  0012               	return		;funcret
  8861   003D9A                     __end_of_TxBufferedString:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _putCharToTxBuf *****************
  8865 ;; Defined at:
  8866 ;;		line 72 in file "serial.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  byte            1    wreg     unsigned char 
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;  byte            1    4[COMRAM] unsigned char 
  8871 ;; Return value:  Size  Location     Type
  8872 ;;                  1    wreg      void 
  8873 ;; Registers used:
  8874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8884 ;;Total ram usage:        1 bytes
  8885 ;; Hardware stack levels used: 1
  8886 ;; Hardware stack levels required when called: 2
  8887 ;; This function calls:
  8888 ;;		Nothing
  8889 ;; This function is called by:
  8890 ;;		_TxBufferedString
  8891 ;; This function uses a non-reentrant model
  8892 ;;
  8893                           
  8894                           	psect	text46
  8895   003E1A                     __ptext46:
  8896                           	callstack 0
  8897   003E1A                     _putCharToTxBuf:
  8898                           	callstack 27
  8899                           
  8900                           ;incstack = 0
  8901                           ;putCharToTxBuf@byte stored from wreg
  8902   003E1A  6E05               	movwf	putCharToTxBuf@byte^0,c
  8903   003E1C                     
  8904                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8905   003E1C  0E3B               	movlw	59
  8906   003E1E  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8907   003E20  EF14  F01F         	goto	u4041
  8908   003E24  EF16  F01F         	goto	u4040
  8909   003E28                     u4041:
  8910   003E28  EF18  F01F         	goto	l3882
  8911   003E2C                     u4040:
  8912   003E2C  0E00               	movlw	0
  8913   003E2E  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  8914   003E30                     l3882:
  8915                           
  8916                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8917   003E30  0E00               	movlw	low _EUSART4TXbuf
  8918   003E32  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8919   003E34  6ED9               	movwf	fsr2l,c
  8920   003E36  6ADA               	clrf	fsr2h,c
  8921   003E38  0E01               	movlw	high _EUSART4TXbuf
  8922   003E3A  22DA               	addwfc	fsr2h,f,c
  8923   003E3C  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8924   003E40  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8925   003E42  0012               	return		;funcret
  8926   003E44                     __end_of_putCharToTxBuf:
  8927                           	callstack 0
  8928                           
  8929 ;; *************** function _Interrupts_init *****************
  8930 ;; Defined at:
  8931 ;;		line 10 in file "interrupts.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;		None
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;		None
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  1    wreg      void 
  8938 ;; Registers used:
  8939 ;;		None
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8949 ;;Total ram usage:        0 bytes
  8950 ;; Hardware stack levels used: 1
  8951 ;; Hardware stack levels required when called: 2
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_main
  8956 ;; This function uses a non-reentrant model
  8957 ;;
  8958                           
  8959                           	psect	text47
  8960   003EEC                     __ptext47:
  8961                           	callstack 0
  8962   003EEC                     _Interrupts_init:
  8963                           	callstack 28
  8964   003EEC                     
  8965                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  8966   003EEC  9AF2               	bcf	242,5,c	;volatile
  8967                           
  8968                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  8969   003EEE  010E               	movlb	14	; () banked
  8970   003EF0  812B               	bsf	43,0,b	;volatile
  8971                           
  8972                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8973   003EF2  8CF2               	bsf	242,6,c	;volatile
  8974                           
  8975                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  8976   003EF4  8EF2               	bsf	242,7,c	;volatile
  8977                           
  8978                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  8979   003EF6  872D               	bsf	45,3,b	;volatile
  8980   003EF8                     
  8981                           ; BSR set to: 14
  8982   003EF8  0012               	return		;funcret
  8983   003EFA                     __end_of_Interrupts_init:
  8984                           	callstack 0
  8985                           
  8986 ;; *************** function _HighISR *****************
  8987 ;; Defined at:
  8988 ;;		line 25 in file "interrupts.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;		None
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  1    wreg      void 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9004 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9006 ;;Total ram usage:        2 bytes
  9007 ;; Hardware stack levels used: 1
  9008 ;; Hardware stack levels required when called: 1
  9009 ;; This function calls:
  9010 ;;		_getCharFromTxBuf
  9011 ;;		_putCharToRxBuf
  9012 ;; This function is called by:
  9013 ;;		Interrupt level 2
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           	psect	intcode
  9018   000008                     __pintcode:
  9019                           	callstack 0
  9020   000008                     _HighISR:
  9021                           	callstack 21
  9022                           
  9023                           ; BSR set to: 14
  9024                           ;incstack = 0
  9025   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9026   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  9027   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  9028   000012                     
  9029                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  9030   000012  010E               	movlb	14	; () banked
  9031   000014  A537               	btfss	55,2,b	;volatile
  9032   000016  EF0F  F000         	goto	i2u425_41
  9033   00001A  EF11  F000         	goto	i2u425_40
  9034   00001E                     i2u425_41:
  9035   00001E  EF15  F000         	goto	i2l223
  9036   000022                     i2u425_40:
  9037   000022                     
  9038                           ; BSR set to: 14
  9039                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  9040   000022  ECCD  F01E         	call	_getCharFromTxBuf	;wreg free
  9041   000026  010E               	movlb	14	; () banked
  9042   000028  6FE4               	movwf	228,b	;volatile
  9043   00002A                     i2l223:
  9044                           
  9045                           ; BSR set to: 14
  9046                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  9047   00002A  A737               	btfss	55,3,b	;volatile
  9048   00002C  EF1A  F000         	goto	i2u426_41
  9049   000030  EF1C  F000         	goto	i2u426_40
  9050   000034                     i2u426_41:
  9051   000034  EF1F  F000         	goto	i2l225
  9052   000038                     i2u426_40:
  9053   000038                     
  9054                           ; BSR set to: 14
  9055                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  9056   000038  51E3               	movf	227,w,b	;volatile
  9057   00003A  EC22  F01F         	call	_putCharToRxBuf
  9058   00003E                     i2l225:
  9059   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9060   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  9061   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9062   000048  0011               	retfie		f
  9063   00004A                     __end_of_HighISR:
  9064                           	callstack 0
  9065                           
  9066 ;; *************** function _putCharToRxBuf *****************
  9067 ;; Defined at:
  9068 ;;		line 52 in file "serial.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  byte            1    wreg     unsigned char 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  byte            1    0[COMRAM] unsigned char 
  9073 ;; Return value:  Size  Location     Type
  9074 ;;                  1    wreg      void 
  9075 ;; Registers used:
  9076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9077 ;; Tracked objects:
  9078 ;;		On entry : 0/0
  9079 ;;		On exit  : 0/0
  9080 ;;		Unchanged: 0/0
  9081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;Total ram usage:        1 bytes
  9087 ;; Hardware stack levels used: 1
  9088 ;; This function calls:
  9089 ;;		Nothing
  9090 ;; This function is called by:
  9091 ;;		_HighISR
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text49
  9096   003E44                     __ptext49:
  9097                           	callstack 0
  9098   003E44                     _putCharToRxBuf:
  9099                           	callstack 21
  9100                           
  9101                           ;incstack = 0
  9102                           ;putCharToRxBuf@byte stored from wreg
  9103   003E44  6E01               	movwf	putCharToRxBuf@byte^0,c
  9104   003E46                     
  9105                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9106   003E46  0E13               	movlw	19
  9107   003E48  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9108   003E4A  EF29  F01F         	goto	i2u418_41
  9109   003E4E  EF2B  F01F         	goto	i2u418_40
  9110   003E52                     i2u418_41:
  9111   003E52  EF2D  F01F         	goto	i2l3976
  9112   003E56                     i2u418_40:
  9113   003E56  0E00               	movlw	0
  9114   003E58  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  9115   003E5A                     i2l3976:
  9116                           
  9117                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9118   003E5A  0E3C               	movlw	low _EUSART4RXbuf
  9119   003E5C  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9120   003E5E  6ED9               	movwf	fsr2l,c
  9121   003E60  6ADA               	clrf	fsr2h,c
  9122   003E62  0E01               	movlw	high _EUSART4RXbuf
  9123   003E64  22DA               	addwfc	fsr2h,f,c
  9124   003E66  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9125   003E6A  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9126   003E6C  0012               	return		;funcret
  9127   003E6E                     __end_of_putCharToRxBuf:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function _getCharFromTxBuf *****************
  9131 ;; Defined at:
  9132 ;;		line 66 in file "serial.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;		None
  9135 ;; Auto vars:     Size  Location     Type
  9136 ;;		None
  9137 ;; Return value:  Size  Location     Type
  9138 ;;                  1    wreg      unsigned char 
  9139 ;; Registers used:
  9140 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9141 ;; Tracked objects:
  9142 ;;		On entry : 0/0
  9143 ;;		On exit  : 0/0
  9144 ;;		Unchanged: 0/0
  9145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9149 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;Total ram usage:        2 bytes
  9151 ;; Hardware stack levels used: 1
  9152 ;; This function calls:
  9153 ;;		Nothing
  9154 ;; This function is called by:
  9155 ;;		_HighISR
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text50
  9160   003D9A                     __ptext50:
  9161                           	callstack 0
  9162   003D9A                     _getCharFromTxBuf:
  9163                           	callstack 21
  9164   003D9A                     
  9165                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9166   003D9A  0E3B               	movlw	59
  9167   003D9C  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9168   003D9E  EFD3  F01E         	goto	i2u419_41
  9169   003DA2  EFD5  F01E         	goto	i2u419_40
  9170   003DA6                     i2u419_41:
  9171   003DA6  EFD7  F01E         	goto	i2l3984
  9172   003DAA                     i2u419_40:
  9173   003DAA  0E00               	movlw	0
  9174   003DAC  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  9175   003DAE                     i2l3984:
  9176                           
  9177                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  9178   003DAE  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  9179   003DB0  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  9180   003DB2  6E01               	movwf	??_getCharFromTxBuf^0,c
  9181   003DB4  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9182   003DB6  0E00               	movlw	low _EUSART4TXbuf
  9183   003DB8  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9184   003DBA  6ED9               	movwf	fsr2l,c
  9185   003DBC  0E01               	movlw	high _EUSART4TXbuf
  9186   003DBE  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9187   003DC0  6EDA               	movwf	fsr2h,c
  9188   003DC2  50DF               	movf	indf2,w,c
  9189   003DC4  0012               	return		;funcret
  9190   003DC6                     __end_of_getCharFromTxBuf:
  9191                           	callstack 0
  9192                           
  9193                           	psect	rparam
  9194   000000                     
  9195                           	psect	temp
  9196   00005B                     btemp:
  9197                           	callstack 0
  9198   00005B                     	ds	1
  9199   000000                     int$flags	set	btemp
  9200   000000                     wtemp8	set	btemp+1
  9201   000000                     ttemp5	set	btemp+1
  9202   000000                     ttemp6	set	btemp+4
  9203   000000                     ttemp7	set	btemp+8
  9204                           
  9205                           	psect	idloc
  9206                           
  9207                           ;Config register IDLOC0 @ 0x200000
  9208                           ;	unspecified, using default values
  9209   200000                     	org	2097152
  9210   200000  0FFF               	dw	4095
  9211                           
  9212                           ;Config register IDLOC1 @ 0x200002
  9213                           ;	unspecified, using default values
  9214   200002                     	org	2097154
  9215   200002  0FFF               	dw	4095
  9216                           
  9217                           ;Config register IDLOC2 @ 0x200004
  9218                           ;	unspecified, using default values
  9219   200004                     	org	2097156
  9220   200004  0FFF               	dw	4095
  9221                           
  9222                           ;Config register IDLOC3 @ 0x200006
  9223                           ;	unspecified, using default values
  9224   200006                     	org	2097158
  9225   200006  0FFF               	dw	4095
  9226                           
  9227                           ;Config register IDLOC4 @ 0x200008
  9228                           ;	unspecified, using default values
  9229   200008                     	org	2097160
  9230   200008  0FFF               	dw	4095
  9231                           
  9232                           ;Config register IDLOC5 @ 0x20000A
  9233                           ;	unspecified, using default values
  9234   20000A                     	org	2097162
  9235   20000A  0FFF               	dw	4095
  9236                           
  9237                           ;Config register IDLOC6 @ 0x20000C
  9238                           ;	unspecified, using default values
  9239   20000C                     	org	2097164
  9240   20000C  0FFF               	dw	4095
  9241                           
  9242                           ;Config register IDLOC7 @ 0x20000E
  9243                           ;	unspecified, using default values
  9244   20000E                     	org	2097166
  9245   20000E  0FFF               	dw	4095
  9246                           
  9247                           	psect	config
  9248                           
  9249                           ;Config register CONFIG1L @ 0x300000
  9250                           ;	External Oscillator mode Selection bits
  9251                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9252                           ;	Power-up default value for COSC bits
  9253                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9254   300000                     	org	3145728
  9255   300000  AA                 	db	170
  9256                           
  9257                           ;Config register CONFIG1H @ 0x300001
  9258                           ;	unspecified, using default values
  9259                           ;	Clock Out Enable bit
  9260                           ;	CLKOUTEN = 0x1, unprogrammed default
  9261                           ;	Clock Switch Enable bit
  9262                           ;	CSWEN = 0x1, unprogrammed default
  9263                           ;	Fail-Safe Clock Monitor Enable bit
  9264                           ;	FCMEN = 0x1, unprogrammed default
  9265   300001                     	org	3145729
  9266   300001  FF                 	db	255
  9267                           
  9268                           ;Config register CONFIG2L @ 0x300002
  9269                           ;	unspecified, using default values
  9270                           ;	Master Clear Enable bit
  9271                           ;	MCLRE = 0x1, unprogrammed default
  9272                           ;	Power-up Timer Enable bit
  9273                           ;	PWRTE = 0x1, unprogrammed default
  9274                           ;	Low-power BOR enable bit
  9275                           ;	LPBOREN = 0x1, unprogrammed default
  9276                           ;	Brown-out Reset Enable bits
  9277                           ;	BOREN = 0x3, unprogrammed default
  9278   300002                     	org	3145730
  9279   300002  FF                 	db	255
  9280                           
  9281                           ;Config register CONFIG2H @ 0x300003
  9282                           ;	unspecified, using default values
  9283                           ;	Brown Out Reset Voltage selection bits
  9284                           ;	BORV = 0x3, unprogrammed default
  9285                           ;	ZCD Disable bit
  9286                           ;	ZCD = 0x1, unprogrammed default
  9287                           ;	PPSLOCK bit One-Way Set Enable bit
  9288                           ;	PPS1WAY = 0x1, unprogrammed default
  9289                           ;	Stack Full/Underflow Reset Enable bit
  9290                           ;	STVREN = 0x1, unprogrammed default
  9291                           ;	Debugger Enable bit
  9292                           ;	DEBUG = 0x1, unprogrammed default
  9293                           ;	Extended Instruction Set Enable bit
  9294                           ;	XINST = 0x1, unprogrammed default
  9295   300003                     	org	3145731
  9296   300003  FF                 	db	255
  9297                           
  9298                           ;Config register CONFIG3L @ 0x300004
  9299                           ;	WDT Period Select bits
  9300                           ;	WDTCPS = 0x1F, unprogrammed default
  9301                           ;	WDT operating mode
  9302                           ;	WDTE = OFF, WDT Disabled
  9303   300004                     	org	3145732
  9304   300004  9F                 	db	159
  9305                           
  9306                           ;Config register CONFIG3H @ 0x300005
  9307                           ;	unspecified, using default values
  9308                           ;	WDT Window Select bits
  9309                           ;	WDTCWS = 0x7, unprogrammed default
  9310                           ;	WDT input clock selector
  9311                           ;	WDTCCS = 0x7, unprogrammed default
  9312   300005                     	org	3145733
  9313   300005  FF                 	db	255
  9314                           
  9315                           ;Config register CONFIG4L @ 0x300006
  9316                           ;	unspecified, using default values
  9317                           ;	Write Protection Block 0
  9318                           ;	WRT0 = 0x1, unprogrammed default
  9319                           ;	Write Protection Block 1
  9320                           ;	WRT1 = 0x1, unprogrammed default
  9321                           ;	Write Protection Block 2
  9322                           ;	WRT2 = 0x1, unprogrammed default
  9323                           ;	Write Protection Block 3
  9324                           ;	WRT3 = 0x1, unprogrammed default
  9325                           ;	Write Protection Block 3
  9326                           ;	WRT4 = 0x1, unprogrammed default
  9327                           ;	Write Protection Block 3
  9328                           ;	WRT5 = 0x1, unprogrammed default
  9329                           ;	Write Protection Block 3
  9330                           ;	WRT6 = 0x1, unprogrammed default
  9331                           ;	Write Protection Block 3
  9332                           ;	WRT7 = 0x1, unprogrammed default
  9333   300006                     	org	3145734
  9334   300006  FF                 	db	255
  9335                           
  9336                           ;Config register CONFIG4H @ 0x300007
  9337                           ;	unspecified, using default values
  9338                           ;	Configuration Register Write Protection bit
  9339                           ;	WRTC = 0x1, unprogrammed default
  9340                           ;	Boot Block Write Protection bit
  9341                           ;	WRTB = 0x1, unprogrammed default
  9342                           ;	Data EEPROM Write Protection bit
  9343                           ;	WRTD = 0x1, unprogrammed default
  9344                           ;	Scanner Enable bit
  9345                           ;	SCANE = 0x1, unprogrammed default
  9346                           ;	Low Voltage Programming Enable bit
  9347                           ;	LVP = 0x1, unprogrammed default
  9348   300007                     	org	3145735
  9349   300007  FF                 	db	255
  9350                           
  9351                           ;Config register CONFIG5L @ 0x300008
  9352                           ;	unspecified, using default values
  9353                           ;	UserNVM Program Memory Code Protection bit
  9354                           ;	CP = 0x1, unprogrammed default
  9355                           ;	DataNVM Memory Code Protection bit
  9356                           ;	CPD = 0x1, unprogrammed default
  9357   300008                     	org	3145736
  9358   300008  FF                 	db	255
  9359                           
  9360                           ;Config register CONFIG5H @ 0x300009
  9361                           ;	unspecified, using default values
  9362   300009                     	org	3145737
  9363   300009  FF                 	db	255
  9364                           
  9365                           ;Config register CONFIG6L @ 0x30000A
  9366                           ;	unspecified, using default values
  9367                           ;	Table Read Protection Block 0
  9368                           ;	EBTR0 = 0x1, unprogrammed default
  9369                           ;	Table Read Protection Block 1
  9370                           ;	EBTR1 = 0x1, unprogrammed default
  9371                           ;	Table Read Protection Block 2
  9372                           ;	EBTR2 = 0x1, unprogrammed default
  9373                           ;	Table Read Protection Block 3
  9374                           ;	EBTR3 = 0x1, unprogrammed default
  9375                           ;	Table Read Protection Block 4
  9376                           ;	EBTR4 = 0x1, unprogrammed default
  9377                           ;	Table Read Protection Block 5
  9378                           ;	EBTR5 = 0x1, unprogrammed default
  9379                           ;	Table Read Protection Block 6
  9380                           ;	EBTR6 = 0x1, unprogrammed default
  9381                           ;	Table Read Protection Block 7
  9382                           ;	EBTR7 = 0x1, unprogrammed default
  9383   30000A                     	org	3145738
  9384   30000A  FF                 	db	255
  9385                           
  9386                           ;Config register CONFIG6H @ 0x30000B
  9387                           ;	unspecified, using default values
  9388                           ;	Boot Block Table Read Protection bit
  9389                           ;	EBTRB = 0x1, unprogrammed default
  9390   30000B                     	org	3145739
  9391   30000B  FF                 	db	255
  9392                           tosu	equ	0xFFF
  9393                           tosh	equ	0xFFE
  9394                           tosl	equ	0xFFD
  9395                           stkptr	equ	0xFFC
  9396                           pclatu	equ	0xFFB
  9397                           pclath	equ	0xFFA
  9398                           pcl	equ	0xFF9
  9399                           tblptru	equ	0xFF8
  9400                           tblptrh	equ	0xFF7
  9401                           tblptrl	equ	0xFF6
  9402                           tablat	equ	0xFF5
  9403                           prodh	equ	0xFF4
  9404                           prodl	equ	0xFF3
  9405                           indf0	equ	0xFEF
  9406                           postinc0	equ	0xFEE
  9407                           postdec0	equ	0xFED
  9408                           preinc0	equ	0xFEC
  9409                           plusw0	equ	0xFEB
  9410                           fsr0h	equ	0xFEA
  9411                           fsr0l	equ	0xFE9
  9412                           wreg	equ	0xFE8
  9413                           indf1	equ	0xFE7
  9414                           postinc1	equ	0xFE6
  9415                           postdec1	equ	0xFE5
  9416                           preinc1	equ	0xFE4
  9417                           plusw1	equ	0xFE3
  9418                           fsr1h	equ	0xFE2
  9419                           fsr1l	equ	0xFE1
  9420                           bsr	equ	0xFE0
  9421                           indf2	equ	0xFDF
  9422                           postinc2	equ	0xFDE
  9423                           postdec2	equ	0xFDD
  9424                           preinc2	equ	0xFDC
  9425                           plusw2	equ	0xFDB
  9426                           fsr2h	equ	0xFDA
  9427                           fsr2l	equ	0xFD9
  9428                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        1
    BSS         201
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160    135     156
    BANK1           256      0     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1422$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1338$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1338$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 16
		 -> rel(BANK1[16]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   40958
                                             83 BANK0     52    52      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                  _color_writetoaddr
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   35003
                                             52 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34505
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34035
                                             66 COMRAM    19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26432
                                             49 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5612
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3343
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    4376
                                             29 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     518
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _color_writetoaddr                                    2     1      1     370
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_writetoaddr
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      51        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B0       7       68.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     87      9C       5       97.5%
BITBIGSFRhlhlll     8F      0       0      38        0.0%
BITBIGSFRhhlh       6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBIGSFRlllhh      36      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      41        0.0%
BITBIGSFRlllhll     2A      0       0      44        0.0%
BITBIGSFRlllll      26      0       0      49        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhll      D      0       0      47        0.0%
BITBIGSFRlllhlh      C      0       0      43        0.0%
BITBIGSFRlllhll      9      0       0      45        0.0%
BITBIGSFRhllll       8      0       0      39        0.0%
BITBIGSFRllllh       6      0       0      48        0.0%
BITBIGSFRhlhllh      4      0       0      37        0.0%
BITBIGSFRhlhh        2      0       0      35        0.0%
BITBIGSFRhlhlh       1      0       0      36        0.0%
BITBIGSFRlllhll      1      0       0      46        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlh          1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A6      50        0.0%
DATA                 0      0     1A6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 10:11:45 2023

               _color_read_Red 3A80                   ___fldiv@aexp 001D                   ___fldiv@bexp 001C  
               _color_read_lum 3A30                   ___fldiv@sign 0015                _color_read_Blue 3B20  
                           l21 3D68                             l30 3ACE                             l24 3EB4  
                           l33 3B1E                             l42 2F7C                             l27 3A7E  
                           l36 3B6E                             l39 3938                             l73 3E18  
                           l82 3F22                             l91 3F04                             l76 3E6E  
                           l85 3F0E                             l94 3C7E                             l79 3E94  
                           l88 3F18               _color_read_Green 3AD0                readColours@vals 0010  
            ??_Interrupts_init 0005                            l133 3ED2                            l217 3EF8  
                          l170 3E42                            l173 3EEA                            l422 3268  
                          l184 3DEE                            l409 3104                            l179 3D98  
                          l560 3542                            l554 37FA                            l565 3588  
                          l823 1A14                            l840 1B2E                            l832 1CE4  
                          l824 1A02                            l592 3484                            l913 210E  
                          l569 3D34                            l825 19C8                            l850 1BEC  
                          l916 1FA0                            l909 1DAA                            l950 2C96  
                          l926 20D0                            l918 2018                            l919 2006  
                          l953 2DF2                            l849 1BFE                            l865 3BB4  
                          l890 23C6                            l882 22CC                            l891 23B4  
                          l964 2D8A                            l877 24A8                            l957 2D2E  
                          l973 39DE                            l879 2308                            l888 234E  
                          _abs 3C80                            _pad 37FC                            _rel 01A0  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0017  
                 ___flmul@sign 0011                   ___flmul@temp 001C                   ___flmul@prod 0018  
                 ___fltol@exp1 000E                           l1005 381E                           l1014 283C  
                         l1016 2844                           l1009 3874                           l1017 288A  
                         l1042 11BE                           ?_abs 0017                           l1124 3CB6  
                         l1028 2A2C                           l1044 1004                           l1133 2C3E  
                         l1109 398C                           l1127 3CBE                           l1119 3686  
                         l1039 1824                           l1136 2B82                           l1144 38CA  
                         l1072 1606                           l1153 3A2E                           l1147 38DA  
                         l1165 3750                           l1173 3C3C                           l1182 3BF8  
                         l1087 27AE                           l4000 3DDE                           l1176 3F24  
                         l4002 3DE8                           l4004 3EEC                           l5000 2994  
                         l4210 369A                           l5010 29FC                           l5002 29AE  
                         l4212 36AC                           l5012 2A0C                           l5004 29CC  
                         l4300 1966                           l5020 0E42                           l4214 36B6  
                         l5006 29E6                           l4310 19D6                           l4302 196A  
                         l4230 1852                           l4222 1826                           l5110 11EA  
                         l5102 118C                           l5030 0E8A                           l5022 0E50  
                         l4216 36D4                           l4208 3688                           l5008 29F6  
                         l4400 1C64                           l4320 1A00                           l4312 19E2  
                         l4304 1994                           l4240 188C                           l4232 1862  
                         l4224 1832                           l5200 167A                           l5120 122E  
                         l5112 11F2                           l5104 11C6                           l5032 0E9A  
                         l5040 0EC2                           l5024 0E54                           l5016 0E2C  
                         l4218 370A                           l4410 1CB6                           l4402 1C74  
                         l4330 1A56                           l4322 1A22                           l4314 19E6  
                         l4306 19B0                           l4250 18BA                           l4242 1892  
                         l4234 1872                           l4226 1840                           l5210 1722  
                         l5202 168C                           l5130 1274                           l5122 1240  
                         l5114 11F6                           l5106 11D6                           l5050 0F0C  
                         l5042 0EE8                           l5034 0EAA                           l5026 0E78  
                         l5018 0E32                           l3444 3E6E                           l4500 3200  
                         l4420 1CD4                           l4412 1CBC                           l4404 1C84  
                         l4340 1A90                           l4332 1A64                           l4324 1A32  
                         l4316 19F4                           l4308 19C0                           l4260 18EE  
                         l4252 18BC                           l4244 18A4                           l4236 1874  
                         l4228 1842                           l5220 1770                           l5212 172A  
                         l5204 1690                           l5140 1388                           l5132 12D8  
                         l5116 1208                           l5124 1248                           l5108 11E2  
                         l5060 0F74                           l5052 0F24                           l5044 0EFA  
                         l5036 0EB6                           l5028 0E82                           l3446 3E7E  
                         l4502 3212                           l4430 3C1C                           l4414 1CBE  
                         l4406 1CA4                           l4350 1AFC                           l4342 1A92  
                         l4334 1A72                           l4318 19F6                           l4270 192A  
                         l4254 18CC                           l4262 18F6                           l4246 18A6  
                         l4238 187C                           l5230 17E6                           l5222 1780  
                         l5206 1696                           l5214 172E                           l5150 1446  
                         l5142 13BC                           l5134 1330                           l5126 1250  
                         l5118 1216                           l5062 0F86                           l5054 0F2E  
                         l5046 0EFE                           l5038 0EBE                           l4600 2334  
                         l4520 213C                           l4512 2110                           l4440 2FB4  
                         l4432 2F7E                           l4504 3218                           l4424 3BFA  
                         l4416 1CC4                           l4408 1CA8                           l4360 1B54  
                         l4352 1AFE                           l4344 1A9C                           l4336 1A7E  
                         l4328 1A46                           l4280 193E                           l4272 192E  
                         l4264 1906                           l4256 18DC                           l4248 18AC  
                         l5232 17FC                           l5224 17B0                           l5216 174C  
                         l5208 16EE                           l5160 151A                           l5152 1456  
                         l5144 13EE                           l5136 1364                           l5128 1260  
                         l5064 0F8A                           l5048 0F04                           l5240 24D2  
                         l5400 3366                           l3722 3F1A                           l3730 3F10  
                         l4610 2370                           l4602 233E                           l4530 2176  
                         l4522 214C                           l4514 211C                           l4450 3010  
                         l4442 2FC2                           l4434 2F82                           l4506 3228  
                         l4426 3C06                           l4418 1CD2                           l4370 1B82  
                         l4354 1B0E                           l4338 1A82                           l4346 1AA2  
                         l4290 1952                           l4282 1942                           l4274 1932  
                         l4266 1918                           l4258 18EC                           l5234 1804  
                         l5226 17BE                           l5218 1768                           l5170 1550  
                         l5162 152E                           l5154 148A                           l5146 1404  
                         l5138 136A                           l5090 10BE                           l5082 1014  
                         l5066 0F90                           l5058 0F4E                           l5250 2522  
                         l5242 24E0                           l5330 3962                           l3724 3F1E  
                         l3732 3F14                           l4620 23E2                           l4612 237E  
                         l4604 234C                           l4540 21A2                           l4532 217C  
                         l4524 215C                           l4516 212A                           l3740 3C44  
                         l4460 307A                           l4452 3018                           l4444 2FE2  
                         l4436 2F90                           l4508 3248                           l4428 3C18  
                         l4700 1E2E                           l4372 1B90                           l4364 1B68  
                         l4380 1BAE                           l4348 1AC8                           l4356 1B1E  
                         l4292 1956                           l4284 1946                           l4276 1936  
                         l4268 1926                           l5228 17D6                           l5180 1618  
                         l5172 1558                           l5156 14E0                           l5164 1532  
                         l5148 1436                           l5092 10FC                           l5084 101A  
                         l5068 0F98                           l5076 0FB4                           l5260 25D8  
                         l5252 2542                           l5244 24EE                           l5332 3982  
                         l5340 39A0                           l3726 3EFC                           l4630 244E  
                         l4622 23F0                           l4614 23AC                           l4606 235E  
                         l4550 21DC                           l4542 21B2                           l4534 2182  
                         l4526 215E                           l4518 212C                           l3910 2D18  
                         l3902 2CD0                           l3742 3C4C                           l3734 3F06  
                         l4470 30C4                           l4462 309A                           l4454 302C  
                         l4446 2FE6                           l4438 2FB0                           l4710 1E70  
                         l4702 1E3A                           l4374 1B98                           l4366 1B72  
                         l4358 1B44                           l4382 1BBC                           l4294 195A  
                         l4286 194A                           l4278 193A                           l5190 1648  
                         l5182 1626                           l5174 1564                           l5166 1542  
                         l5158 14E6                           l5094 1110                           l5086 104E  
                         l5078 0FCE                           l5262 25EE                           l5270 2606  
                         l5254 2598                           l5246 24F2                           l5238 24AA  
                         l5326 393A                           l5342 39A8                           ?_pad 0015  
                         l3840 3DF0                           l3728 3F00                           l4640 249C  
                         l4632 2468                           l4624 241A                           l4608 236C  
                         l4552 21F2                           l4544 21C2                           l4536 2190  
                         l4528 2166                           l3920 2D98                           l3912 2D24  
                         l3904 2CD8                           l5336 2DF4                           l3744 3C54  
                         l3736 3F0A                           l4472 30E4                           l4464 309C  
                         l4456 303A                           l4448 2FF2                           l4480 3118  
                         l4720 1ED2                           l4712 1E7C                           l4704 1E46  
                         l4392 1C0E                           l4384 1BC0                           l4376 1B9C  
                         l4368 1B80                           l4296 195E                           l4288 194E  
                         l5192 1658                           l5184 1636                           l5176 15DC  
                         l5168 154A                           l5096 1144                           l5088 108C  
                         l5280 26C4                           l5264 25F6                           l5272 2638  
                         l5248 2502                           l5328 3946                           l5344 39B0  
                         l5360 3272                           l3850 3E06                           l3842 3DFA  
                         l4642 249E                           l4634 2484                           l4618 23D6  
                         l4626 241E                           l4570 2246                           l4554 2202  
                         l4562 2222                           l4546 21C4                           l4538 2192  
                         l3930 2DE0                           l3922 2D9A                           l3914 2D60  
                         l3906 2CE4                           l3746 3C7A                           l3738 3C40  
                         l4466 30AE                           l4458 304C                           l4490 3188  
                         l4482 3138                           l4810 3502                           l4802 3486  
                         l4730 1F68                           l4722 1EDE                           l4714 1E8C  
                         l4706 1E54                           l4650 1CE6                           l4394 1C1A  
                         l4386 1BCE                           l4378 1BAC                           l4298 1962  
                         l5194 165C                           l5186 163A                           l5178 15FC  
                         l5098 114C                           l5290 2740                           l5282 26EE  
                         l5274 265C                           l5522 261A                           l5266 25FE  
                         l5258 25C8                           l5346 39CC                           l5338 398E  
                         l5370 3288                           l5362 3276                           l3844 3E00  
                         l3852 3E98                           l4636 2488                           l4628 2438  
                         l4580 2298                           l4572 2260                           l4564 2232  
                         l4556 220A                           l4548 21CC                           l3932 2DE2  
                         l3924 2D9E                           l3916 2D6C                           l3908 2D16  
                         l3748 3C7C                           l3860 3A80                           l4468 30B4  
                         l4492 3190                           l4484 313C                           l4476 3106  
                         l4820 3586                           l4812 3510                           l4804 34B4  
                         l4740 1FBE                           l4732 1F86                           l4724 1EFA  
                         l4716 1EA6                           l4708 1E60                           l4660 1D22  
                         l4652 1CF2                           l4396 1C28                           l4388 1BE4  
                         l4900 3610                           l5196 1662                           l5188 1640  
                         l5284 270E                           l5524 26D8                           l5276 2690  
                         l5292 2770                           l5380 3292                           l5372 328A  
                         l5364 327A                           l5356 326A                           l3846 3E02  
                         l3950 3D44                           l4638 2496                           l4590 22F4  
                         l4582 22A8                           l4574 2270                           l4566 2232  
                         l4558 220E                           l3926 2DC2                           l3918 2D7A  
                         l3862 3AC6                           l3854 3A30                           l4494 31A4  
                         l4486 314A                           l4478 310A                           l4814 3522  
                         l4806 34C4                           l4750 2028                           l4742 1FC2  
                         l4734 1F90                           l4726 1F24                           l4718 1EB6  
                         l4670 1D54                           l4662 1D32                           l4654 1D00  
                         l4398 1C62                           l4902 361C                           l5198 1668  
                         l5526 2762                           l5390 32E4                           l5382 32AC  
                         l5374 328C                           l5366 3284                           l5358 326E  
                         l3880 3E2C                           l3848 3E04                           l3952 3D54  
                         l4592 22F6                           l4584 22BC                           l4576 2280  
                         l3928 2DD2                           l3960 3EB6                           l3872 3B20  
                         l3856 3A76                           l4496 31B2                           l4488 316A  
                         l4816 3530                           l4808 34F2                           l4760 208A  
                         l4752 2034                           l4744 1FD0                           l4736 1F9E  
                         l4728 1F5A                           l4680 1D94                           l4672 1D62  
                         l4664 1D38                           l4656 1D02                           l4824 3CFE  
                         l4840 33D4                           l4832 3380                           l4912 367E  
                         l4920 3876                           l5296 2782                           l5392 32F0  
                         l5384 32AE                           l5376 328E                           l5368 3286  
                         l3882 3E30                           l3954 3D5E                           l3946 3D36  
                         l4594 2306                           l4586 22CA                           l4578 2290  
                         l3890 2C42                           l3970 3ED0                           l3962 3EC0  
                         l3874 3B66                           l3866 3AD0                           l4498 31E0  
                         l4818 3580                           l4770 20F2                           l4762 209E  
                         l4754 2042                           l4746 1FFE                           l4738 1FB0  
                         l4690 1DDE                           l4682 1D9A                           l4674 1D64  
                         l4666 1D48                           l4658 1D12                           l4826 3D14  
                         l4842 33D6                           l4834 3396                           l4906 3628  
                         l4930 2AB8                           l4922 3894                           l5394 3304  
                         l5386 32C8                           l5378 3290                           l3884 3E40  
                         l3948 3D3A                           l4596 2318                           l4588 22D6  
                         l3892 2C52                           l3964 3EC2                           l3868 3B16  
                         l3956 38DC                           l4772 20F4                           l4764 20B8  
                         l4756 206C                           l4692 1DEA                           l4684 1DBA  
                         l4676 1D74                           l4668 1D4E                           l4828 3D24  
                         l4780 3B70                           l4844 33E6                           l4908 363A  
                         l4932 2AC6                           l4940 2BA6                           l4924 2A2E  
                         l4916 3BB6                           l5396 3352                           l5388 32CA  
                         l3878 3E1C                           l3990 3D6E                           l4598 232E  
                         l3894 2C60                           l3966 3ECC                           l3886 3ED4  
                         l4790 3790                           l4766 20D4                           l4774 20FA  
                         l4758 2070                           l4694 1DF4                           l4686 1DCA  
                         l4678 1D84                           l4782 3B80                           l4870 3464  
                         l4854 3410                           l4846 33EA                           l4838 33AA  
                         l4942 2BE2                           l4926 2A4E                           l4918 3BC6  
                         l5398 3362                           l3992 3D7C                           l3896 2CA6  
                         l3968 3ECE                           l4880 3816                           l4792 37BE  
                         l4776 20FE                           l4768 20E4                           l4696 1E0A  
                         l4872 3474                           l4864 3438                           l4856 341A  
                         l4848 33F8                           l4944 2BF6                           l4936 2B36  
                         l4928 2AA4                           l4960 3A10                           l4952 39E0  
                         l3994 3D80                           l3898 2CBC                           l4890 3C80  
                         l4882 382A                           l4970 27F4                           l4794 37CE  
                         l4786 3752                           l4698 1E16                           l4866 3444  
                         l4858 3424                           l4946 2C1E                           l4938 2B72  
                         l4954 39F4                           l4962 3A14                           l3988 3D6A  
                         l3996 3DC6                           l4892 3C9A                           l4884 383E  
                         l4876 37FC                           l4980 2862                           l4972 2814  
                         l4964 27B0                           l4796 37F2                           l4788 3780  
                         l4868 3454                           l4948 2C2E                           l4956 3A00  
                         l3998 3DDA                           l4886 3842                           l4878 380A  
                         l4990 289C                           l4982 2872                           l4974 2830  
                         l4966 27D0                           l4798 37F8                           l4894 358A  
                         l4958 3A04                           l4888 3860                           l4992 28A2  
                         l4984 287E                           l4976 284C                           l4968 27E4  
                         l4896 35AA                           l4994 2924                           l4986 2886  
                         l4978 285C                           l4898 35E8                           l4996 292A  
                         l4988 2892                           l4998 2930                           STR_1 0E01  
                         STR_2 0E22                           STR_5 0E26                   _BAUD4CONbits 000EE9  
                         u4100 2D12                           u4101 2D0E                           u4110 2D5C  
                         u4111 2D58                           u4040 3E2C                           u4200 3D98  
                         u5000 237E                           u4120 2D7A                           u4041 3E28  
                         u4201 3D94                           u5001 237A                           u4121 2D76  
                         u5010 23AC                           u4130 2D8A                           u4050 3EE8  
                         u4210 3DDA                           u5011 23A8                           u4131 2D86  
                         u4051 3EE2                           u4211 3DD6                           u5020 23C2  
                         u4140 2D98                           u4060 3EEA                           u4300 36D4  
                         u5100 1D22                           u5021 23BE                           u4141 2D94  
                         u4301 36D0                           u5101 1D1E                           u5030 23D6  
                         u4150 2DD2                           u4070 2C52                           u4310 370A  
                         u5110 1D62                           u5031 23D2                           u4151 2DCE  
                         u4071 2C4E                           u4311 3706                           u5111 1D5E  
                         u5040 23F0                           u4160 2DE0                           u4080 2C60  
                         u5200 1FFE                           u5120 1D74                           u4400 1926  
                         u4320 1840                           u6000 1618                           u5041 23EC  
                         u4161 2DDC                           u4081 2C5C                           u5201 1FFA  
                         u5121 1D70                           u4401 1922                           u4321 183C  
                         u6001 1614                           u5050 2438                           u4090 2CBC  
                         u5210 2014                           u5130 1D84                           u4410 1994  
                         u4330 1852                           u6010 1626                           u5051 2434  
                         u4091 2CB8                           u5211 2010                           u5131 1D80  
                         u4411 1990                           u4331 184E                           u6011 1622  
                         u3540 3E7E                           u5060 2468                           u5300 34B4  
                         u5220 2028                           u5140 1DBA                           u4500 1A72  
                         u4420 19AC                           u4340 1862                           u6020 167A  
                         u6100 2542                           u3541 3E7A                           u5061 2464  
                         u5301 34B0                           u5221 2024                           u5141 1DB6  
                         u4501 1A6E                           u4421 19A6                           u4341 185E  
                         u6021 1676                           u6101 253E                           u3550 3E94  
                         u5070 2496                           u5310 34F2                           u5230 2042  
                         u5150 1DCA                           u4510 1A90                           u4430 19AE  
                         u4350 18A4                           u6030 174C                           u6110 2658  
                         u3551 3E90                           u5071 2492                           u5311 34EE  
                         u5231 203E                           u5151 1DC6                           u4511 1A8C  
                         u4351 18A0                           u6031 1748                           u6111 2654  
                         u4280 369A                           u5320 3510                           u5240 208A  
                         u5160 1F44                           u5080 1D00                           u4600 1BCE  
                         u4520 1AC8                           u4440 19D6                           u4360 18BA  
                         u5400 3434                           u6040 1768                           u6120 3982  
                         u4281 3696                           u5321 350C                           u5241 2086  
                         u5081 1CFC                           u4601 1BCA                           u4521 1AC4  
                         u4441 19D2                           u4361 18B6                           u5401 3430  
                         u6041 1764                           u6121 397E                           u4290 36AC  
                         u5330 3530                           u5250 20B8                           u5170 1F9E  
                         u5090 1D12                           u4610 1BE4                           u4530 1B0E  
                         u4450 19F4                           u4370 18CC                           u5410 3454  
                         u6050 17D0                           u4291 36A8                           u5331 352C  
                         u5251 20B4                           u5171 1F9A                           u5091 1D0E  
                         u4611 1BE0                           u4531 1B0A                           u4451 19F0  
                         u4371 18C8                           u5411 3450                           u6051 17CA  
                         u5340 3580                           u5260 20F2                           u5180 1FBE  
                         u4700 1CD2                           u4620 1BFA                           u4540 1B44  
                         u4460 1A14                           u4380 18DC                           u5420 3464  
                         u6060 17D2                           u5341 357C                           u5261 20EE  
                         u5181 1FBA                           u5165 1F3A                           u4701 1CCE  
                         u4621 1BF6                           u4541 1B40                           u4461 1A10  
                         u4381 18D8                           u5421 3460                           u4710 3C3C  
                         u5430 380A                           u5270 3780                           u5190 1FD0  
                         u5350 3D14                           u4630 1C0E                           u4550 1B54  
                         u4470 1A22                           u4390 1918                           u5510 3674  
                         u6070 17E6                           u6150 3378                           u4711 3C38  
                         u5431 3806                           u5271 377C                           u5191 1FCC  
                         u5351 3D10                           u4631 1C0A                           u4551 1B50  
                         u4471 1A1E                           u4391 1914                           u5511 366E  
                         u6071 17E2                           u6151 3374                           u4720 2F90  
                         u4800 314A                           u5440 3860                           u5280 37BE  
                         u4640 1C28                           u4560 1B80                           u4480 1A32  
                         u5360 3396                           u5520 3676                           u5600 2B56  
                         u6080 24D2                           u4721 2F8C                           u4801 3146  
                         u5441 385C                           u5281 37BA                           u4641 1C24  
                         u4561 1B7C                           u4481 1A2E                           u5361 3392  
                         u5505 364C                           u6081 24CE                           u4730 2FC2  
                         u4810 3188                           u5450 3C9A                           u5290 37F2  
                         u4650 1C62                           u4570 1B90                           u4490 1A64  
                         u5370 33CA                           u5610 2B72                           u5530 3BF8  
                         u6090 2522                           u4731 2FBE                           u4811 3184  
                         u5451 3C96                           u5291 37EE                           u4651 1C5E  
                         u4571 1B8C                           u4491 1A60                           u5611 2B6E  
                         u5531 3BF4                           u6091 251E                           u4900 21B2  
                         u4820 31B2                           u5700 285C                           u4660 1C74  
                         u4580 1BAC                           u5380 33F8                           u5460 35CA  
                         u5620 2BC6                           u5540 3894                           u4901 21AE  
                         u4741 2FEC                           u4821 31AE                           u5701 2858  
                         u4661 1C70                           u4581 1BA8                           u5381 33F4  
                         u5605 2B4C                           u5541 3890                           u4910 21F2  
                         u4750 3010                           u4830 31E0                           u5710 2872  
                         u4670 1C84                           u4590 1BBC                           u5390 340C  
                         u5470 35E8                           u5630 2BE2                           u5550 2A76  
                         u4911 21EE                           u4751 300C                           u4831 31DC  
                         u5711 286E                           u4671 1C80                           u4591 1BB8  
                         u5391 3408                           u5375 33C0                           u5471 35E4  
                         u5631 2BDE                           u6167 329E                           u4920 2232  
                         u4760 303A                           u4840 3228                           u5720 29AE  
                         u4680 1CA4                           u5480 3610                           u5640 2C1E  
                         u5560 2AA4                           u5800 0EFA                           u4921 222E  
                         u4761 3036                           u4841 3224                           u5721 29AA  
                         u4681 1CA0                           u5481 360C                           u5465 35C0  
                         u5641 2C1A                           u5625 2BBC                           u5561 2AA0  
                         u5801 0EF6                           u6177 32BA                           u4930 22A8  
                         u4850 212A                           u4770 307A                           u5730 29CC  
                         u4690 1CB6                           u5490 363A                           u5570 2AC6  
                         u5650 3A2E                           u5810 0F74                           u4931 22A4  
                         u4851 2126                           u4771 3076                           u5731 29C8  
                         u4691 1CB2                           u5491 3636                           u5571 2AC2  
                         u5555 2A6C                           u5651 3A2A                           u5811 0F70  
                         u6187 32D6                           u4940 22CA                           u4860 213C  
                         u3980 3C68                           u4780 30C4                           u5740 29E6  
                         u5660 27E0                           u5900 1208                           u5820 0F86  
                         u6197 3D4A                           u4941 22C6                           u4861 2138  
                         u3981 3C60                           u4781 30C0                           u5741 29E2  
                         u5661 27DA                           u5901 1204                           u5821 0F82  
                         u4950 22F4                           u4870 214C                           u4790 3118  
                         u5750 29F6                           u5670 27E2                           u5590 2B32  
                         u5910 1216                           u5830 1000                           u4951 22F0  
                         u4871 2148                           u4791 3114                           u5751 29F2  
                         u5591 2B2E                           u5911 1212                           u5831 0FFC  
                         u4960 2318                           u4880 2190                           u5680 27F4  
                         u5920 1240                           u5840 108C                           u5760 0E50  
                         u4961 2314                           u4881 218C                           u5681 27F0  
                         u5585 2ADA                           u5921 123C                           u5841 1088  
                         u5761 0E4C                           u4970 232E                           u4890 21A2  
                         u5690 2830                           u5586 2AE4                           u5930 1388  
                         u5850 10BE                           u5770 0E9A                           u4971 232A  
                         u4891 219E                           u5691 282C                           u5587 2AF4  
                         u5931 1384                           u5851 10BA                           u5771 0E96  
                         u4980 234C                           u5940 13EE                           u5860 10FC  
                         u5780 0EAA                           u4981 2348                           u5941 13EA  
                         u5861 10F8                           u5781 0EA6                           u4990 236C  
                         u3998 3C6A                           u5950 1436                           u5870 1188  
                         u5790 0EE8                           u4991 2368                           u5951 1432  
                         u5871 1184                           u5791 0EE4                           u5960 1446  
                         u5880 11BE                           u5961 1442                           u5881 11BA  
                         u5970 14E0                           u5890 11D6                           u5971 14DC  
                         u5891 11D2                           u5980 152E                           u5981 152A  
                         u5990 15DC                           u5991 15D8                           abs@a 0017  
                         _dbuf 0150                           _labs 3876                           _main 326A  
                         _dtoa 27B0                           _prec 00F1                           _vals 00F3  
                         pad@i 001C                           pad@p 0019                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001E                           fsr2l 000FD9                           btemp 005B  
                ___fpclassifyf 358A                           prodh 000FF4                           prodl 000FF3  
                         start 004A                ___fldiv@new_exp 0016         __end_of_color_read_Red 3AD0  
              __end_of_HighISR 004A         __end_of_color_read_lum 3A80                   ___param_bank 000000  
                        ??_abs 0019                          ??_pad 001B                   ?_readColours 0010  
                ___fltol@sign1 000D                __end_of___aodiv 3106                          ?_labs 0005  
              __end_of___fladd 1CE6                          ?_main 0001                          ?_dtoa 0020  
              __end_of___aomod 326A                __end_of___fldiv 24AA                __end_of___flneg 3D36  
              __end_of___flmul 2110                __end_of___flsub 3BB6                __end_of___fltol 3486  
                  colour_rel@B 002A                    colour_rel@G 0026                    colour_rel@L 002E  
                  colour_rel@R 0022                          i2l223 002A                          i2l225 003E  
                        i2l166 3DC4                          i2l159 3E6C                   vfpfcnvrt@fmt 0045  
   __end_of_I2C_2_Master_Start 3F24     __end_of_I2C_2_Master_Write 3F06                          _flags 0056  
                        _fputc 3688                          _fputs 3BFA                          labs@a 0005  
                        pad@fp 0015                          _width 00EF                          _putch 3F24  
                        dtoa@d 0022                          dtoa@i 0041                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0040                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 39E0                 ?___fpclassifyf 0005        __end_of_color_read_Blue 3B70  
        _I2C_2_Master_RepStart 3F06             putCharToRxBuf@byte 0001                ?_color_read_Red 0009  
              ?_color_read_lum 0009                __initialization 3CC0                   __end_of_labs 38DC  
                 __end_of_main 3380                   __end_of_dtoa 2A2E             putCharToTxBuf@byte 0005  
                       ??_labs 0009                         ??_main 00B3                         ??_dtoa 002A  
                __activetblptr 000003                         ?_fputc 0005                         ?_fputs 000E  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                         i2l4040 0038  
                       i2l4034 0012                         i2l4036 0022                         i2l3980 3D9A  
                       i2l3972 3E46                         i2l3982 3DAA                         i2l3974 3E56  
                       i2l3984 3DAE                         i2l3976 3E5A                         i2l3978 3E6A  
                    ??_HighISR 0003       __end_of_color_click_init 3D6A                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 2DF4                   vfprintf@cfmt 0092  
                       ___flge 3486               _getCharFromTxBuf 3D9A                         ___fleq 3752  
                    ??___aodiv 0015                      ??___fladd 000D                      ??___aomod 0015  
                    ??___fldiv 000D                      ??___flneg 0009                      ??___flmul 000D  
                    ??___flsub 0026                      ??___fltol 0009                         _efgtoa 0E2C  
                       _floorf 2A2E                         _memcpy 39E0                         clear_0 3CD8  
                       clear_1 3CE4                         isa$std 000001                         pad@buf 0017  
                       dtoa@fp 0020                         _strcpy 3BB6                         fputc@c 0005  
            ?_TxBufferedString 0006                         fputs@c 0012                         fputs@i 0013  
                       fputs@s 000E                ___fpclassifyf@e 000D                ___fpclassifyf@u 000F  
              ___fpclassifyf@x 0005                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8             ??_TxBufferedString 0008  
                       putch@c 0001               __end_of_vfprintf 398E                      ??_sprintf 0056  
                   ___flge@ff1 001E                     ___flge@ff2 0022                ??___fpclassifyf 0009  
                 ___xxtofl@arg 000F                   ___xxtofl@exp 000E                   ___xxtofl@val 0005  
                   ___fleq@ff1 0005                     ___fleq@ff2 0009          __end_of_isDataInTxBuf 3EEC  
                   __accesstop 0060        __end_of__initialization 3CF4                     ___flneg@f1 0005  
     __end_of_color_read_Green 3B20         ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001  
                   ___fltol@f1 0005               ?_color_read_Blue 0009                _Interrupts_init 3EEC  
               __pcstackCOMRAM 0001                   __pidataBANK0 3F26                  __end_of_fputc 3752  
                __end_of_fputs 3C3E                  __end_of_putch 3F26                        ??_fputc 0009  
                      ??_fputs 0012                        ??_putch 0005                     __pbssBANK0 00E7  
                   __pbssBANK1 0100              _color_writetoaddr 3E96                        ?___flge 001E  
                      ?___fleq 0005             ?_color_writetoaddr 0007                        ?_efgtoa 0032  
                      ?_floorf 001E                        ?_memcpy 0005            ??_color_writetoaddr 0008  
                      ?_strcpy 0005                  colour_rel@rel 0020                      ?___xxtofl 0005  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                     _colour_rel 2DF4        __end_of_Interrupts_init 3EFA  
       color_writetoaddr@value 0007               ??_color_read_Red 000B                        _HighISR 0008  
             ??_color_read_lum 000B      __end_of_color_writetoaddr 3EB6             _I2C_2_Master_Start 3F1A  
                   _initUSART4 3EB6             _I2C_2_Master_Write 3EFA                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000E                        ___aodiv 2F7E  
                      ___fladd 1826                        ___aomod 3106                        ___fldiv 2110  
                      ___flneg 3CFE                        ___flmul 1CE6                        ___flsub 3B70  
                      ___fltol 3380            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 008C                   __psmallconst 0E00                        __pcinit 3CC0  
                      __ramtop 0E00                        __ptext0 326A                        __ptext1 398E  
                      __ptext2 393A                        __ptext3 24AA                        __ptext4 0E2C  
                      __ptext5 3BB6                        __ptext6 39E0                        __ptext7 3876  
                      __ptext8 2A2E                        __ptext9 358A                     ??___xxtofl 0009  
                      efgtoa@c 0038                        efgtoa@d 006B                        efgtoa@e 006F  
                      efgtoa@f 0034                        efgtoa@g 0082                        efgtoa@h 0079  
                      efgtoa@i 0077                        efgtoa@l 007D                        efgtoa@m 006D  
                      efgtoa@n 0086                        efgtoa@p 0062                        efgtoa@t 0064  
                      efgtoa@u 0088                        efgtoa@w 0071                  _RxBufWriteCnt 005A  
     __end_of_getCharFromTxBuf 3DC6              color_read_lum@tmp 000E                        main@buf 00B5  
                      _sprintf 398E           ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006  
         end_of_initialization 3CF4              __end_of_sendTxBuf 3DF0                        floorf@e 002C  
                      floorf@m 0028                        floorf@u 002E                        floorf@x 001E  
                      memcpy@d 000C                        memcpy@n 0009                        memcpy@s 000E  
                      fputc@fp 0007                        fputs@fp 0010              ?_color_click_init 0001  
           ??_color_click_init 0009              __end_of_vfpfcnvrt 27B0                     efgtoa@mode 0069  
                   efgtoa@sign 0081                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 004B  
                   ??_vfprintf 0056                        strcpy@d 000B                        strcpy@s 0009  
                  ___fladd@grs 0014                  ___xxtofl@sign 000D                      _TRISAbits 000F81  
                    _TRISDbits 000F84                      _TRISFbits 000F86                      _TRISGbits 000F87  
                  ___fldiv@grs 0018                    ___fldiv@rem 0011       color_writetoaddr@address 0008  
      ??_I2C_2_Master_RepStart 0006                    ?_colour_rel 001E               ?_Interrupts_init 0001  
                  ___flmul@grs 0013                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0009                    ?_initUSART4 0001             ??_color_read_Green 000B  
               __end_of___flge 358A                 __end_of___fleq 37FC                    vfpfcnvrt@ap 0047  
                  vfpfcnvrt@cp 0054                    vfpfcnvrt@fp 0043                 __end_of_efgtoa 1826  
               __end_of_floorf 2C40                 __end_of_memcpy 3A30                     floorf@F526 00E7  
               __end_of_strcpy 3BFA            start_initialization 3CC0                    __end_of_abs 3CC0  
                  __end_of_pad 3876                  _TxBufWriteCnt 0058          __end_of___fpclassifyf 3688  
          color_read_Green@tmp 000E                    vfprintf@fmt 008E                       ??___flge 0026  
                     ??___fleq 000D                  ??_readColours 0012                       ??_efgtoa 0039  
               _putCharToRxBuf 3E44                 _putCharToTxBuf 3E1A                    __pdataBANK0 00FB  
                     ??_floorf 0022                       ??_memcpy 000B                       ??_strcpy 0009  
                    ___fladd@a 0009                      ___fladd@b 0005                      ___fldiv@a 0009  
                    ___fldiv@b 0005                      ___flmul@a 0009                      ___flmul@b 0005  
                  __pbssCOMRAM 0056                      ___flsub@a 0022                      ___flsub@b 001E  
                __pcstackBANK0 0060               ___aodiv@dividend 0005                       ?_HighISR 0001  
                  _efgtoa$1481 0066                      _dtoa$1450 0032         __end_of_putCharToRxBuf 3E6E  
       __end_of_putCharToTxBuf 3E44                      __pintcode 0008                       ?___aodiv 0005  
                     ?___fladd 0005                       ?___aomod 0005                       ?___fldiv 0005  
             ___aodiv@quotient 0017                       ?___flneg 0005                       ?___flmul 0005  
                     ?___flsub 001E                       ?___fltol 0005         TxBufferedString@string 0006  
         I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008                    __smallconst 0E00  
          __end_of_readColours 393A              _I2C_2_Master_Idle 3E6E              _I2C_2_Master_Init 3DF0  
            _I2C_2_Master_Read 3C3E              _I2C_2_Master_Stop 3F10                   _RxBufReadCnt 0059  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 0094              ?_getCharFromTxBuf 0001  
               colour_rel@vals 001E             ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0006                  _isDataInTxBuf 3ED4                       _LATFbits 000F7E  
             _TxBufferedString 3D6A                       _LATGbits 000F7F                      _sendTxBuf 3DC6  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u425_40 0022  
                     i2u425_41 001E                       i2u418_40 3E56                       i2u426_40 0038  
                     i2u418_41 3E52                       i2u426_41 0034                       i2u419_40 3DAA  
                     i2u419_41 3DA6                       _PIR4bits 000E37                ?_putCharToRxBuf 0001  
              ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 24AA      __end_of_I2C_2_Master_Idle 3E96      __end_of_I2C_2_Master_Init 3E1A  
    __end_of_I2C_2_Master_Read 3C80      __end_of_I2C_2_Master_Stop 3F1A                       _DataFlag 00FB  
  I2C_2_Master_Write@data_byte 0006              ??_color_read_Blue 000B                   _TxBufReadCnt 0057  
                   vfpfcnvrt@c 0053                   ??_colour_rel 0022                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 3F10             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                      memcpy@tmp 000B  
                   vfprintf@ap 0090                       __Lrparam 0000                     vfprintf@fp 008C  
                  _readColours 38DC                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015             __end_of_colour_rel 2F7E                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EB                     sprintf@fmt 0096                       ___xxtofl 2C40  
           __end_of_initUSART4 3ED4                       __ptext10 3380                       __ptext11 3B70  
                     __ptext20 3688                       __ptext12 1826                       __ptext21 3F24  
                     __ptext13 3CFE                       __ptext30 3AD0                       __ptext22 3C80  
                     __ptext14 1CE6                       __ptext31 3B20                       __ptext23 3106  
                     __ptext15 3486                       __ptext40 3EFA                       __ptext32 3F06  
                     __ptext24 2F7E                       __ptext16 3752                       __ptext41 3F10  
                     __ptext33 3C3E                       __ptext25 3DC6                       __ptext17 27B0  
                     __ptext50 3D9A                       __ptext42 3F1A                       __ptext34 3EB6  
                     __ptext26 3ED4                       __ptext18 37FC                       __ptext43 3E6E  
                     __ptext35 2DF4                       __ptext27 38DC                       __ptext19 3BFA  
                     __ptext44 3DF0                       __ptext36 2C40                       __ptext28 3A30  
                     __ptext45 3D6A                       __ptext37 2110                       __ptext29 3A80  
                     __ptext46 3E1A                       __ptext38 3D36                       __ptext47 3EEC  
                     __ptext39 3E96                       __ptext49 3E44                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0005                       efgtoa@fp 0032  
                     efgtoa@ne 0060                       efgtoa@pp 0068                       efgtoa@ou 0073  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 393A               ___aomod@dividend 0005                     _INTCONbits 000FF2  
                     memcpy@d1 0005                       memcpy@s1 0007                ??_isDataInTxBuf 0005  
                     intlevel2 0000                      sprintf@ap 00A6                    ??_sendTxBuf 0005  
                    strcpy@src 0007                    efgtoa@nmode 006A                ___aomod@divisor 000D  
                  ??_vfpfcnvrt 0049                ___aomod@counter 0015               _color_click_init 3D36  
     __end_of_TxBufferedString 3D9A                       sprintf@f 00A8                       sprintf@s 0094  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                  ___fladd@signs 0011  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0016                   ___fladd@aexp 0012  
                 ___fladd@bexp 0013               ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005  
                 ___aomod@sign 0016  
