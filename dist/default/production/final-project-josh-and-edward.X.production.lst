

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 21:25:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95   000000                     
    96                           ; Generated 06/04/2022 GMT
    97                           ; 
    98                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution. Publication is not required when
   112                           ;        this file is used in an embedded application.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F67K40 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130   000000                     
   131                           	psect	idataBANK0
   132   005BB6                     __pidataBANK0:
   133                           	callstack 0
   134                           
   135                           ;initializer for _high_threshold
   136   005BB6  03E8               	dw	1000
   137                           
   138                           ;initializer for _DataFlag
   139   005BB8  01                 	db	1
   140   000000                     _TRISEbits	set	3973
   141   000000                     _TX4REG	set	3812
   142   000000                     _RC4STAbits	set	3815
   143   000000                     _SP4BRGH	set	3814
   144   000000                     _SSP2CON2bits	set	3802
   145   000000                     _RX4PPS	set	3605
   146   000000                     _SSP2CLKPPS	set	3612
   147   000000                     _SSP2DATPPS	set	3613
   148   000000                     _ANSELDbits	set	3751
   149   000000                     _SSP2ADD	set	3798
   150   000000                     _SSP2CON1bits	set	3801
   151   000000                     _LATAbits	set	3961
   152   000000                     _LATFbits	set	3966
   153   000000                     _LATGbits	set	3967
   154   000000                     _TRISAbits	set	3969
   155   000000                     _TRISGbits	set	3975
   156   000000                     _PORTFbits	set	3982
   157   000000                     _CCPR2H	set	4006
   158   000000                     _CCPR1H	set	4010
   159   000000                     _TRISCbits	set	3971
   160   000000                     _TRISDbits	set	3972
   161   000000                     _TRISFbits	set	3974
   162   000000                     _LATDbits	set	3964
   163   000000                     _RC4REG	set	3811
   164   000000                     _SP4BRGL	set	3813
   165   000000                     _TX4STAbits	set	3816
   166   000000                     _BAUD4CONbits	set	3817
   167   000000                     _SSP2CON2	set	3802
   168   000000                     _SSP2STAT	set	3800
   169   000000                     _ANSELFbits	set	3764
   170   000000                     _SSP2BUF	set	3797
   171   000000                     _PIE4bits	set	3629
   172   000000                     _PIR4bits	set	3639
   173   000000                     _RC0PPS	set	3682
   174   000000                     _RD5PPS	set	3695
   175   000000                     _RE2PPS	set	3700
   176   000000                     _RD6PPS	set	3696
   177   000000                     _RC7PPS	set	3689
   178   000000                     _CCPR4H	set	3873
   179   000000                     _CCPR3H	set	3877
   180   000000                     _CCP1CONbits	set	4011
   181   000000                     _CCPTMRS0bits	set	4013
   182   000000                     _T2PR	set	4028
   183   000000                     _T2CONbits	set	4029
   184   000000                     _CCP2CONbits	set	4007
   185   000000                     _CCP3CONbits	set	3878
   186   000000                     _CCP4CONbits	set	3874
   187   000000                     _RE4PPS	set	3702
   188   000000                     _RG6PPS	set	3720
   189   000000                     _T2CLKCONbits	set	4031
   190   000000                     _T2HLTbits	set	4030
   191                           
   192                           	psect	smallconst
   193   000E00                     __psmallconst:
   194                           	callstack 0
   195   000E00  00                 	db	0
   196   000E01                     STR_1:
   197   000E01  72                 	db	114	;'r'
   198   000E02  65                 	db	101	;'e'
   199   000E03  64                 	db	100	;'d'
   200   000E04  3D                 	db	61	;'='
   201   000E05  25                 	db	37
   202   000E06  66                 	db	102	;'f'
   203   000E07  20                 	db	32
   204   000E08  67                 	db	103	;'g'
   205   000E09  72                 	db	114	;'r'
   206   000E0A  65                 	db	101	;'e'
   207   000E0B  65                 	db	101	;'e'
   208   000E0C  6E                 	db	110	;'n'
   209   000E0D  3D                 	db	61	;'='
   210   000E0E  25                 	db	37
   211   000E0F  66                 	db	102	;'f'
   212   000E10  20                 	db	32
   213   000E11  62                 	db	98	;'b'
   214   000E12  6C                 	db	108	;'l'
   215   000E13  75                 	db	117	;'u'
   216   000E14  65                 	db	101	;'e'
   217   000E15  3D                 	db	61	;'='
   218   000E16  25                 	db	37
   219   000E17  66                 	db	102	;'f'
   220   000E18  20                 	db	32
   221   000E19  6C                 	db	108	;'l'
   222   000E1A  75                 	db	117	;'u'
   223   000E1B  6D                 	db	109	;'m'
   224   000E1C  3D                 	db	61	;'='
   225   000E1D  25                 	db	37
   226   000E1E  64                 	db	100	;'d'
   227   000E1F  20                 	db	32
   228   000E20  63                 	db	99	;'c'
   229   000E21  6F                 	db	111	;'o'
   230   000E22  6C                 	db	108	;'l'
   231   000E23  6F                 	db	111	;'o'
   232   000E24  75                 	db	117	;'u'
   233   000E25  72                 	db	114	;'r'
   234   000E26  31                 	db	49	;'1'
   235   000E27  3D                 	db	61	;'='
   236   000E28  25                 	db	37
   237   000E29  64                 	db	100	;'d'
   238   000E2A  20                 	db	32
   239   000E2B  0D                 	db	13
   240   000E2C  0A                 	db	10
   241   000E2D  00                 	db	0
   242   000E2E                     STR_2:
   243   000E2E  72                 	db	114	;'r'
   244   000E2F  65                 	db	101	;'e'
   245   000E30  64                 	db	100	;'d'
   246   000E31  3D                 	db	61	;'='
   247   000E32  25                 	db	37
   248   000E33  64                 	db	100	;'d'
   249   000E34  20                 	db	32
   250   000E35  67                 	db	103	;'g'
   251   000E36  72                 	db	114	;'r'
   252   000E37  65                 	db	101	;'e'
   253   000E38  65                 	db	101	;'e'
   254   000E39  6E                 	db	110	;'n'
   255   000E3A  3D                 	db	61	;'='
   256   000E3B  25                 	db	37
   257   000E3C  64                 	db	100	;'d'
   258   000E3D  20                 	db	32
   259   000E3E  62                 	db	98	;'b'
   260   000E3F  6C                 	db	108	;'l'
   261   000E40  75                 	db	117	;'u'
   262   000E41  65                 	db	101	;'e'
   263   000E42  3D                 	db	61	;'='
   264   000E43  25                 	db	37
   265   000E44  64                 	db	100	;'d'
   266   000E45  20                 	db	32
   267   000E46  6C                 	db	108	;'l'
   268   000E47  75                 	db	117	;'u'
   269   000E48  6D                 	db	109	;'m'
   270   000E49  3D                 	db	61	;'='
   271   000E4A  25                 	db	37
   272   000E4B  64                 	db	100	;'d'
   273   000E4C  20                 	db	32
   274   000E4D  0D                 	db	13
   275   000E4E  0A                 	db	10
   276   000E4F  00                 	db	0
   277   000E50                     STR_3:
   278   000E50  69                 	db	105	;'i'
   279   000E51  6E                 	db	110	;'n'
   280   000E52  66                 	db	102	;'f'
   281   000E53  00                 	db	0
   282   000E54                     STR_6:
   283   000E54  6E                 	db	110	;'n'
   284   000E55  61                 	db	97	;'a'
   285   000E56  6E                 	db	110	;'n'
   286   000E57  00                 	db	0
   287   000E58  00                 	db	0	; dummy byte at the end
   288   000000                     
   289                           ; #config settings
   290                           
   291                           	psect	cinit
   292   0053E4                     __pcinit:
   293                           	callstack 0
   294   0053E4                     start_initialization:
   295                           	callstack 0
   296   0053E4                     __initialization:
   297                           	callstack 0
   298                           
   299                           ; Initialize objects allocated to BANK0 (3 bytes)
   300                           ; load TBLPTR registers with __pidataBANK0
   301   0053E4  0EB6               	movlw	low __pidataBANK0
   302   0053E6  6EF6               	movwf	tblptrl,c
   303   0053E8  0E5B               	movlw	high __pidataBANK0
   304   0053EA  6EF7               	movwf	tblptrh,c
   305   0053EC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   306   0053EE  6EF8               	movwf	tblptru,c
   307   0053F0  0009               	tblrd		*+	;fetch initializer
   308   0053F2  CFF5 F0FA          	movff	tablat,__pdataBANK0
   309   0053F6  0009               	tblrd		*+	;fetch initializer
   310   0053F8  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   311   0053FC  0009               	tblrd		*+	;fetch initializer
   312   0053FE  CFF5 F0FC          	movff	tablat,__pdataBANK0+2
   313                           
   314                           ; Clear objects allocated to BANK3 (250 bytes)
   315   005402  EE03  F000         	lfsr	0,__pbssBANK3
   316   005406  0EFA               	movlw	250
   317   005408                     clear_0:
   318   005408  6AEE               	clrf	postinc0,c
   319   00540A  06E8               	decf	wreg,f,c
   320   00540C  E1FD               	bnz	clear_0
   321                           
   322                           ; Clear objects allocated to BANK2 (60 bytes)
   323   00540E  EE02  F000         	lfsr	0,__pbssBANK2
   324   005412  0E3C               	movlw	60
   325   005414                     clear_1:
   326   005414  6AEE               	clrf	postinc0,c
   327   005416  06E8               	decf	wreg,f,c
   328   005418  E1FD               	bnz	clear_1
   329                           
   330                           ; Clear objects allocated to BANK1 (132 bytes)
   331   00541A  EE01  F000         	lfsr	0,__pbssBANK1
   332   00541E  0E84               	movlw	132
   333   005420                     clear_2:
   334   005420  6AEE               	clrf	postinc0,c
   335   005422  06E8               	decf	wreg,f,c
   336   005424  E1FD               	bnz	clear_2
   337                           
   338                           ; Clear objects allocated to BANK0 (39 bytes)
   339   005426  EE00  F0D3         	lfsr	0,__pbssBANK0
   340   00542A  0E27               	movlw	39
   341   00542C                     clear_3:
   342   00542C  6AEE               	clrf	postinc0,c
   343   00542E  06E8               	decf	wreg,f,c
   344   005430  E1FD               	bnz	clear_3
   345   005432                     end_of_initialization:
   346                           	callstack 0
   347   005432                     __end_of__initialization:
   348                           	callstack 0
   349   005432  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   350   005434  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   351   005436  0100               	movlb	0
   352   005438  EF98  F011         	goto	_main	;jump to C main() function
   353                           
   354                           	psect	bssBANK0
   355   0000D3                     __pbssBANK0:
   356                           	callstack 0
   357   0000D3                     _EUSART4RXbuf:
   358                           	callstack 0
   359   0000D3                     	ds	20
   360   0000E7                     floorf@F526:
   361                           	callstack 0
   362   0000E7                     	ds	4
   363   0000EB                     ___fpclassifyf@F465:
   364                           	callstack 0
   365   0000EB                     	ds	4
   366   0000EF                     _width:
   367                           	callstack 0
   368   0000EF                     	ds	2
   369   0000F1                     _prec:
   370                           	callstack 0
   371   0000F1                     	ds	2
   372   0000F3                     _low_threshold:
   373                           	callstack 0
   374   0000F3                     	ds	2
   375   0000F5                     _flags:
   376                           	callstack 0
   377   0000F5                     	ds	1
   378   0000F6                     _TxBufReadCnt:
   379                           	callstack 0
   380   0000F6                     	ds	1
   381   0000F7                     _TxBufWriteCnt:
   382                           	callstack 0
   383   0000F7                     	ds	1
   384   0000F8                     _RxBufReadCnt:
   385                           	callstack 0
   386   0000F8                     	ds	1
   387   0000F9                     _RxBufWriteCnt:
   388                           	callstack 0
   389   0000F9                     	ds	1
   390                           
   391                           	psect	dataBANK0
   392   0000FA                     __pdataBANK0:
   393                           	callstack 0
   394   0000FA                     _high_threshold:
   395                           	callstack 0
   396   0000FA                     	ds	2
   397   0000FC                     _DataFlag:
   398                           	callstack 0
   399   0000FC                     	ds	1
   400                           
   401                           	psect	bssBANK1
   402   000100                     __pbssBANK1:
   403                           	callstack 0
   404   000100                     	ds	12
   405   00010C                     _move_count:
   406                           	callstack 0
   407   00010C                     	ds	2
   408   00010E                     _dbuf:
   409                           	callstack 0
   410   00010E                     	ds	80
   411   00015E                     _rel:
   412                           	callstack 0
   413   00015E                     	ds	12
   414   00016A                     _motorR:
   415                           	callstack 0
   416   00016A                     	ds	9
   417   000173                     _motorL:
   418                           	callstack 0
   419   000173                     	ds	9
   420   00017C                     _vals:
   421                           	callstack 0
   422   00017C                     	ds	8
   423                           
   424                           	psect	bssBANK2
   425   000200                     __pbssBANK2:
   426                           	callstack 0
   427   000200                     _EUSART4TXbuf:
   428                           	callstack 0
   429   000200                     	ds	60
   430                           
   431                           	psect	bssBANK3
   432   000300                     __pbssBANK3:
   433                           	callstack 0
   434   000300                     _WayBack:
   435                           	callstack 0
   436   000300                     	ds	250
   437                           
   438                           	psect	cstackBANK1
   439   000184                     __pcstackBANK1:
   440                           	callstack 0
   441   000184                     main@buf:
   442                           	callstack 0
   443                           
   444                           ; 100 bytes @ 0x0
   445   000184                     	ds	100
   446   0001E8                     main@run_flag:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x64
   450   0001E8                     	ds	2
   451   0001EA                     main@consecuitive:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0x66
   455   0001EA                     	ds	2
   456   0001EC                     main@colour:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x68
   460   0001EC                     	ds	2
   461   0001EE                     main@prev_colour:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x6A
   465   0001EE                     	ds	2
   466                           
   467                           	psect	cstackBANK0
   468   000060                     __pcstackBANK0:
   469                           	callstack 0
   470   000060                     efgtoa@fp:
   471                           	callstack 0
   472   000060                     colour_rel@L:
   473                           	callstack 0
   474   000060                     _Colour_decider$2783:
   475                           	callstack 0
   476                           
   477                           ; 4 bytes @ 0x0
   478   000060                     	ds	2
   479   000062                     efgtoa@f:
   480                           	callstack 0
   481                           
   482                           ; 4 bytes @ 0x2
   483   000062                     	ds	2
   484   000064                     Colour_decider@Cmax_i:
   485                           	callstack 0
   486   000064                     _colour_rel$2781:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x4
   490   000064                     	ds	2
   491   000066                     efgtoa@c:
   492                           	callstack 0
   493   000066                     Colour_decider@RGB_col:
   494                           	callstack 0
   495                           
   496                           ; 12 bytes @ 0x6
   497   000066                     	ds	1
   498   000067                     ??_efgtoa:
   499                           
   500                           ; 1 bytes @ 0x7
   501   000067                     	ds	1
   502   000068                     _colour_rel$2782:
   503                           	callstack 0
   504                           
   505                           ; 4 bytes @ 0x8
   506   000068                     	ds	1
   507   000069                     efgtoa@ne:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x9
   511   000069                     	ds	2
   512   00006B                     efgtoa@p:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0xB
   516   00006B                     	ds	1
   517   00006C                     colour_rel@R:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0xC
   521   00006C                     	ds	1
   522   00006D                     efgtoa@t:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xD
   526   00006D                     	ds	2
   527   00006F                     _efgtoa$2410:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xF
   531   00006F                     	ds	1
   532   000070                     colour_rel@G:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x10
   536   000070                     	ds	1
   537   000071                     efgtoa@pp:
   538                           	callstack 0
   539                           
   540                           ; 1 bytes @ 0x11
   541   000071                     	ds	1
   542   000072                     efgtoa@mode:
   543                           	callstack 0
   544   000072                     Colour_decider@Cmax:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x12
   548   000072                     	ds	1
   549   000073                     efgtoa@nmode:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x13
   553   000073                     	ds	1
   554   000074                     efgtoa@d:
   555                           	callstack 0
   556   000074                     colour_rel@B:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x14
   560   000074                     	ds	2
   561   000076                     efgtoa@m:
   562                           	callstack 0
   563   000076                     Colour_decider@Cmin:
   564                           	callstack 0
   565                           
   566                           ; 4 bytes @ 0x16
   567   000076                     	ds	2
   568   000078                     efgtoa@e:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x18
   572   000078                     	ds	2
   573   00007A                     Colour_decider@i:
   574                           	callstack 0
   575   00007A                     efgtoa@w:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x1A
   579   00007A                     	ds	2
   580   00007C                     Colour_decider@Hue:
   581                           	callstack 0
   582   00007C                     efgtoa@ou:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x1C
   586   00007C                     	ds	4
   587   000080                     efgtoa@i:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x20
   591   000080                     	ds	2
   592   000082                     efgtoa@h:
   593                           	callstack 0
   594                           
   595                           ; 4 bytes @ 0x22
   596   000082                     	ds	4
   597   000086                     efgtoa@l:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x26
   601   000086                     	ds	4
   602   00008A                     efgtoa@sign:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x2A
   606   00008A                     	ds	1
   607   00008B                     efgtoa@n:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x2B
   611   00008B                     	ds	2
   612   00008D                     efgtoa@g:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x2D
   616   00008D                     	ds	4
   617   000091                     efgtoa@u:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x31
   621   000091                     	ds	4
   622   000095                     vfpfcnvrt@fp:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x35
   626   000095                     	ds	2
   627   000097                     vfpfcnvrt@fmt:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x37
   631   000097                     	ds	2
   632   000099                     vfpfcnvrt@ap:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x39
   636   000099                     	ds	2
   637   00009B                     ??_vfpfcnvrt:
   638                           
   639                           ; 1 bytes @ 0x3B
   640   00009B                     	ds	2
   641   00009D                     vfpfcnvrt@convarg:
   642                           	callstack 0
   643                           
   644                           ; 8 bytes @ 0x3D
   645   00009D                     	ds	8
   646   0000A5                     vfpfcnvrt@c:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x45
   650   0000A5                     	ds	1
   651   0000A6                     vfpfcnvrt@cp:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x46
   655   0000A6                     	ds	2
   656   0000A8                     ?_vfprintf:
   657                           	callstack 0
   658   0000A8                     vfprintf@fp:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x48
   662   0000A8                     	ds	2
   663   0000AA                     vfprintf@fmt:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x4A
   667   0000AA                     	ds	2
   668   0000AC                     vfprintf@ap:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x4C
   672   0000AC                     	ds	2
   673   0000AE                     vfprintf@cfmt:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x4E
   677   0000AE                     	ds	2
   678   0000B0                     ?_sprintf:
   679                           	callstack 0
   680   0000B0                     sprintf@s:
   681                           	callstack 0
   682                           
   683                           ; 2 bytes @ 0x50
   684   0000B0                     	ds	2
   685   0000B2                     sprintf@fmt:
   686                           	callstack 0
   687                           
   688                           ; 2 bytes @ 0x52
   689   0000B2                     	ds	18
   690   0000C4                     sprintf@ap:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x64
   694   0000C4                     	ds	2
   695   0000C6                     sprintf@f:
   696                           	callstack 0
   697                           
   698                           ; 11 bytes @ 0x66
   699   0000C6                     	ds	11
   700   0000D1                     ??_main:
   701                           
   702                           ; 1 bytes @ 0x71
   703   0000D1                     	ds	2
   704                           
   705                           	psect	cstackCOMRAM
   706   000001                     __pcstackCOMRAM:
   707                           	callstack 0
   708   000001                     ??_I2C_2_Master_Idle:
   709   000001                     ?___fpclassifyf:
   710                           	callstack 0
   711   000001                     ?___wmul:
   712                           	callstack 0
   713   000001                     ?___fladd:
   714                           	callstack 0
   715   000001                     ?_labs:
   716                           	callstack 0
   717   000001                     ?___flneg:
   718                           	callstack 0
   719   000001                     ?___fltol:
   720                           	callstack 0
   721   000001                     ?___xxtofl:
   722                           	callstack 0
   723   000001                     ?___aodiv:
   724                           	callstack 0
   725   000001                     ?___aomod:
   726                           	callstack 0
   727   000001                     sendCharSerial4@charToSend:
   728                           	callstack 0
   729   000001                     initDCmotorsPWM@PWMperiod:
   730                           	callstack 0
   731   000001                     ___wmul@multiplier:
   732                           	callstack 0
   733   000001                     memcpy@d1:
   734                           	callstack 0
   735   000001                     fputc@c:
   736                           	callstack 0
   737   000001                     strcpy@dest:
   738                           	callstack 0
   739   000001                     ___flneg@f1:
   740                           	callstack 0
   741   000001                     ___fltol@f1:
   742                           	callstack 0
   743   000001                     ___fladd@b:
   744                           	callstack 0
   745   000001                     ___xxtofl@val:
   746                           	callstack 0
   747   000001                     ___fpclassifyf@x:
   748                           	callstack 0
   749   000001                     labs@a:
   750                           	callstack 0
   751   000001                     ___aodiv@dividend:
   752                           	callstack 0
   753   000001                     ___aomod@dividend:
   754                           	callstack 0
   755                           
   756                           ; 8 bytes @ 0x0
   757   000001                     	ds	1
   758   000002                     ??_I2C_2_Master_Read:
   759   000002                     I2C_2_Master_Write@data_byte:
   760                           	callstack 0
   761   000002                     sendStringSerial4@string:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x1
   765   000002                     	ds	1
   766   000003                     color_writetoaddr@value:
   767                           	callstack 0
   768   000003                     I2C_2_Master_Read@ack:
   769                           	callstack 0
   770   000003                     ___wmul@multiplicand:
   771                           	callstack 0
   772   000003                     memcpy@s1:
   773                           	callstack 0
   774   000003                     fputc@fp:
   775                           	callstack 0
   776   000003                     strcpy@src:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x2
   780   000003                     	ds	1
   781   000004                     color_writetoaddr@address:
   782                           	callstack 0
   783   000004                     I2C_2_Master_Read@tmp:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x3
   787   000004                     	ds	1
   788   000005                     ??_fputc:
   789   000005                     ??___fpclassifyf:
   790   000005                     ??_labs:
   791   000005                     ??_color_click_init:
   792   000005                     ??___fltol:
   793   000005                     ??___xxtofl:
   794   000005                     ?_color_read_lum:
   795                           	callstack 0
   796   000005                     ?_color_read_Red:
   797                           	callstack 0
   798   000005                     ?_color_read_Green:
   799                           	callstack 0
   800   000005                     ?_color_read_Blue:
   801                           	callstack 0
   802   000005                     ___wmul@product:
   803                           	callstack 0
   804   000005                     memcpy@n:
   805                           	callstack 0
   806   000005                     strcpy@s:
   807                           	callstack 0
   808   000005                     ___fladd@a:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x4
   812   000005                     	ds	2
   813   000007                     ??_color_read_lum:
   814   000007                     ??_color_read_Red:
   815   000007                     ??_color_read_Green:
   816   000007                     ??_color_read_Blue:
   817   000007                     ?___lwdiv:
   818                           	callstack 0
   819   000007                     ___lwdiv@dividend:
   820                           	callstack 0
   821   000007                     memcpy@d:
   822                           	callstack 0
   823   000007                     strcpy@d:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x6
   827   000007                     	ds	2
   828   000009                     ??___fladd:
   829   000009                     ___fltol@sign1:
   830                           	callstack 0
   831   000009                     ___xxtofl@sign:
   832                           	callstack 0
   833   000009                     ___lwdiv@divisor:
   834                           	callstack 0
   835   000009                     ___fpclassifyf@e:
   836                           	callstack 0
   837   000009                     memcpy@s:
   838                           	callstack 0
   839   000009                     ___aodiv@divisor:
   840                           	callstack 0
   841   000009                     ___aomod@divisor:
   842                           	callstack 0
   843                           
   844                           ; 8 bytes @ 0x8
   845   000009                     	ds	1
   846   00000A                     ___fltol@exp1:
   847                           	callstack 0
   848   00000A                     ___xxtofl@exp:
   849                           	callstack 0
   850   00000A                     color_read_lum@tmp:
   851                           	callstack 0
   852   00000A                     color_read_Red@tmp:
   853                           	callstack 0
   854   00000A                     color_read_Green@tmp:
   855                           	callstack 0
   856   00000A                     color_read_Blue@tmp:
   857                           	callstack 0
   858   00000A                     fputs@s:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x9
   862   00000A                     	ds	1
   863   00000B                     memcpy@tmp:
   864                           	callstack 0
   865   00000B                     ___lwdiv@quotient:
   866                           	callstack 0
   867   00000B                     ___xxtofl@arg:
   868                           	callstack 0
   869   00000B                     ___fpclassifyf@u:
   870                           	callstack 0
   871                           
   872                           ; 4 bytes @ 0xA
   873   00000B                     	ds	1
   874   00000C                     readColours@vals:
   875                           	callstack 0
   876   00000C                     fputs@fp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xB
   880   00000C                     	ds	1
   881   00000D                     ___lwdiv@counter:
   882                           	callstack 0
   883   00000D                     ___fladd@signs:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0xC
   887   00000D                     	ds	1
   888   00000E                     ___fladd@aexp:
   889                           	callstack 0
   890   00000E                     fputs@c:
   891                           	callstack 0
   892   00000E                     setMotorPWM@m:
   893                           	callstack 0
   894                           
   895                           ; 2 bytes @ 0xD
   896   00000E                     	ds	1
   897   00000F                     ___fladd@bexp:
   898                           	callstack 0
   899   00000F                     fputs@i:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0xE
   903   00000F                     	ds	1
   904   000010                     ??_setMotorPWM:
   905   000010                     ___fladd@grs:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0xF
   909   000010                     	ds	1
   910   000011                     ?___flmul:
   911                           	callstack 0
   912   000011                     ___aodiv@counter:
   913                           	callstack 0
   914   000011                     ___aomod@counter:
   915                           	callstack 0
   916   000011                     pad@fp:
   917                           	callstack 0
   918   000011                     ___flmul@b:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x10
   922   000011                     	ds	1
   923   000012                     setMotorPWM@posDuty:
   924                           	callstack 0
   925   000012                     ___aodiv@sign:
   926                           	callstack 0
   927   000012                     ___aomod@sign:
   928                           	callstack 0
   929                           
   930                           ; 1 bytes @ 0x11
   931   000012                     	ds	1
   932   000013                     ?_abs:
   933                           	callstack 0
   934   000013                     setMotorPWM@negDuty:
   935                           	callstack 0
   936   000013                     pad@buf:
   937                           	callstack 0
   938   000013                     abs@a:
   939                           	callstack 0
   940   000013                     ___aodiv@quotient:
   941                           	callstack 0
   942                           
   943                           ; 8 bytes @ 0x12
   944   000013                     	ds	1
   945   000014                     stop@mL:
   946                           	callstack 0
   947   000014                     turnLeft@mL:
   948                           	callstack 0
   949   000014                     turnRight@mL:
   950                           	callstack 0
   951   000014                     fullSpeedAhead@mL:
   952                           	callstack 0
   953   000014                     fullSpeedBack@mL:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x13
   957   000014                     	ds	1
   958   000015                     ??_abs:
   959   000015                     pad@p:
   960                           	callstack 0
   961   000015                     ___flmul@a:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x14
   965   000015                     	ds	1
   966   000016                     stop@mR:
   967                           	callstack 0
   968   000016                     turnLeft@mR:
   969                           	callstack 0
   970   000016                     turnRight@mR:
   971                           	callstack 0
   972   000016                     fullSpeedAhead@mR:
   973                           	callstack 0
   974   000016                     fullSpeedBack@mR:
   975                           	callstack 0
   976                           
   977                           ; 2 bytes @ 0x15
   978   000016                     	ds	1
   979   000017                     ??_pad:
   980                           
   981                           ; 1 bytes @ 0x16
   982   000017                     	ds	1
   983   000018                     ??_stop:
   984   000018                     ??_turnLeft:
   985   000018                     ??_turnRight:
   986   000018                     ??_fullSpeedAhead:
   987   000018                     ??_fullSpeedBack:
   988   000018                     pad@i:
   989                           	callstack 0
   990                           
   991                           ; 2 bytes @ 0x17
   992   000018                     	ds	1
   993   000019                     ??___flmul:
   994   000019                     turnRight45@mL:
   995                           	callstack 0
   996   000019                     turnLeft45@mL:
   997                           	callstack 0
   998   000019                     reverseDetect@mL:
   999                           	callstack 0
  1000   000019                     reverseOneBlock@mL:
  1001                           	callstack 0
  1002   000019                     ForwardOneBlock@mL:
  1003                           	callstack 0
  1004   000019                     Forwardhalfblock@mL:
  1005                           	callstack 0
  1006   000019                     RetryMove@mL:
  1007                           	callstack 0
  1008                           
  1009                           ; 2 bytes @ 0x18
  1010   000019                     	ds	1
  1011   00001A                     pad@w:
  1012                           	callstack 0
  1013                           
  1014                           ; 2 bytes @ 0x19
  1015   00001A                     	ds	1
  1016   00001B                     turnRight45@mR:
  1017                           	callstack 0
  1018   00001B                     turnLeft45@mR:
  1019                           	callstack 0
  1020   00001B                     reverseDetect@mR:
  1021                           	callstack 0
  1022   00001B                     reverseOneBlock@mR:
  1023                           	callstack 0
  1024   00001B                     ForwardOneBlock@mR:
  1025                           	callstack 0
  1026   00001B                     Forwardhalfblock@mR:
  1027                           	callstack 0
  1028   00001B                     RetryMove@mR:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x1A
  1032   00001B                     	ds	1
  1033   00001C                     dtoa@fp:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x1B
  1037   00001C                     	ds	1
  1038   00001D                     ??_Forwardhalfblock:
  1039   00001D                     ??_RetryMove:
  1040   00001D                     ??_turnRight45:
  1041   00001D                     ??_turnLeft45:
  1042   00001D                     ??_reverseDetect:
  1043   00001D                     ??_reverseOneBlock:
  1044   00001D                     ??_ForwardOneBlock:
  1045   00001D                     ___flmul@sign:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x1C
  1049   00001D                     	ds	1
  1050   00001E                     ___flmul@grs:
  1051                           	callstack 0
  1052   00001E                     dtoa@d:
  1053                           	callstack 0
  1054                           
  1055                           ; 8 bytes @ 0x1D
  1056   00001E                     	ds	1
  1057   00001F                     RedMove@mL:
  1058                           	callstack 0
  1059   00001F                     GreenMove@mL:
  1060                           	callstack 0
  1061   00001F                     BlueMove@mL:
  1062                           	callstack 0
  1063   00001F                     YellowMove@mL:
  1064                           	callstack 0
  1065   00001F                     PinkMove@mL:
  1066                           	callstack 0
  1067   00001F                     OrangeMove@mL:
  1068                           	callstack 0
  1069   00001F                     LightBlueMove@mL:
  1070                           	callstack 0
  1071   00001F                     ReverseYellow@mL:
  1072                           	callstack 0
  1073   00001F                     ReversePink@mL:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1E
  1077   00001F                     	ds	2
  1078   000021                     RedMove@mR:
  1079                           	callstack 0
  1080   000021                     GreenMove@mR:
  1081                           	callstack 0
  1082   000021                     BlueMove@mR:
  1083                           	callstack 0
  1084   000021                     YellowMove@mR:
  1085                           	callstack 0
  1086   000021                     PinkMove@mR:
  1087                           	callstack 0
  1088   000021                     OrangeMove@mR:
  1089                           	callstack 0
  1090   000021                     LightBlueMove@mR:
  1091                           	callstack 0
  1092   000021                     ReverseYellow@mR:
  1093                           	callstack 0
  1094   000021                     ReversePink@mR:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x20
  1098   000021                     	ds	1
  1099   000022                     ___flmul@aexp:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x21
  1103   000022                     	ds	1
  1104   000023                     ___flmul@bexp:
  1105                           	callstack 0
  1106   000023                     go_Home@WayBack:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x22
  1110   000023                     	ds	1
  1111   000024                     ___flmul@prod:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x23
  1115   000024                     	ds	1
  1116   000025                     
  1117                           ; 1 bytes @ 0x24
  1118   000025                     	ds	1
  1119   000026                     ??_dtoa:
  1120   000026                     go_Home@i:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x25
  1124   000026                     	ds	2
  1125   000028                     ___flmul@temp:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x27
  1129   000028                     	ds	2
  1130   00002A                     ?___flsub:
  1131                           	callstack 0
  1132   00002A                     ___flge@ff1:
  1133                           	callstack 0
  1134   00002A                     ___flsub@b:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x29
  1138   00002A                     	ds	4
  1139   00002E                     _dtoa$2379:
  1140                           	callstack 0
  1141   00002E                     ___flge@ff2:
  1142                           	callstack 0
  1143   00002E                     ___flsub@a:
  1144                           	callstack 0
  1145                           
  1146                           ; 4 bytes @ 0x2D
  1147   00002E                     	ds	2
  1148   000030                     dtoa@p:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0x2F
  1152   000030                     	ds	2
  1153   000032                     ??___flge:
  1154   000032                     ?___fldiv:
  1155                           	callstack 0
  1156   000032                     dtoa@w:
  1157                           	callstack 0
  1158   000032                     ___fleq@ff1:
  1159                           	callstack 0
  1160   000032                     ___fldiv@b:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x31
  1164   000032                     	ds	2
  1165   000034                     dtoa@n:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x33
  1169   000034                     	ds	2
  1170   000036                     ___fleq@ff2:
  1171                           	callstack 0
  1172   000036                     ___fldiv@a:
  1173                           	callstack 0
  1174                           
  1175                           ; 4 bytes @ 0x35
  1176   000036                     	ds	4
  1177   00003A                     ??___fldiv:
  1178   00003A                     ??___fleq:
  1179                           
  1180                           ; 1 bytes @ 0x39
  1181   00003A                     	ds	2
  1182   00003C                     dtoa@i:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x3B
  1186   00003C                     	ds	2
  1187   00003E                     dtoa@s:
  1188                           	callstack 0
  1189   00003E                     ___fldiv@rem:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x3D
  1193   00003E                     	ds	4
  1194   000042                     ___fldiv@sign:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x41
  1198   000042                     	ds	1
  1199   000043                     ___fldiv@new_exp:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x42
  1203   000043                     	ds	2
  1204   000045                     ___fldiv@grs:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x44
  1208   000045                     	ds	4
  1209   000049                     ___fldiv@bexp:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x48
  1213   000049                     	ds	1
  1214   00004A                     ___fldiv@aexp:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x49
  1218   00004A                     	ds	1
  1219   00004B                     ?_Colour_decider:
  1220                           	callstack 0
  1221   00004B                     ?_floorf:
  1222                           	callstack 0
  1223   00004B                     colour_rel@vals:
  1224                           	callstack 0
  1225   00004B                     Colour_decider@vals:
  1226                           	callstack 0
  1227   00004B                     floorf@x:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x4A
  1231   00004B                     	ds	2
  1232   00004D                     colour_rel@rel:
  1233                           	callstack 0
  1234   00004D                     Colour_decider@rel:
  1235                           	callstack 0
  1236                           
  1237                           ; 2 bytes @ 0x4C
  1238   00004D                     	ds	2
  1239   00004F                     ??_floorf:
  1240   00004F                     ??_Colour_decider:
  1241                           
  1242                           ; 1 bytes @ 0x4E
  1243   00004F                     	ds	6
  1244   000055                     floorf@m:
  1245                           	callstack 0
  1246                           
  1247                           ; 4 bytes @ 0x54
  1248   000055                     	ds	4
  1249   000059                     floorf@e:
  1250                           	callstack 0
  1251                           
  1252                           ; 2 bytes @ 0x58
  1253   000059                     	ds	2
  1254   00005B                     floorf@u:
  1255                           	callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x5A
  1258   00005B                     	ds	4
  1259   00005F                     
  1260                           ; 1 bytes @ 0x5E
  1261 ;;
  1262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1263 ;;
  1264 ;; *************** function _main *****************
  1265 ;; Defined at:
  1266 ;;		line 29 in file "main.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  colour          2  104[BANK1 ] int 
  1271 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1272 ;;  prev_colour     2  106[BANK1 ] int 
  1273 ;;  consecuitive    2  102[BANK1 ] int 
  1274 ;;  run_flag        2  100[BANK1 ] int 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1285 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1286 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1288 ;;Total ram usage:      110 bytes
  1289 ;; Hardware stack levels required when called: 9
  1290 ;; This function calls:
  1291 ;;		_BlueMove
  1292 ;;		_Colour_decider
  1293 ;;		_Forwardhalfblock
  1294 ;;		_GreenMove
  1295 ;;		_I2C_2_Master_Init
  1296 ;;		_Interrupts_init
  1297 ;;		_LightBlueMove
  1298 ;;		_OrangeMove
  1299 ;;		_PinkMove
  1300 ;;		_RedMove
  1301 ;;		_RetryMove
  1302 ;;		_YellowMove
  1303 ;;		_color_click_init
  1304 ;;		_colour_rel
  1305 ;;		_go_Home
  1306 ;;		_initDCmotorsPWM
  1307 ;;		_initUSART4
  1308 ;;		_readColours
  1309 ;;		_sendStringSerial4
  1310 ;;		_sprintf
  1311 ;;		_stop
  1312 ;; This function is called by:
  1313 ;;		Startup code after reset
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text0
  1318   002330                     __ptext0:
  1319                           	callstack 0
  1320   002330                     _main:
  1321                           	callstack 22
  1322   002330                     
  1323                           ;main.c: 30:     initUSART4();
  1324   002330  ECAB  F02D         	call	_initUSART4	;wreg free
  1325   002334                     
  1326                           ;main.c: 31:     Interrupts_init();
  1327   002334  ECDE  F02D         	call	_Interrupts_init	;wreg free
  1328   002338                     
  1329                           ;main.c: 32:     color_click_init();
  1330   002338  ECC4  F02A         	call	_color_click_init	;wreg free
  1331   00233C                     
  1332                           ;main.c: 33:     I2C_2_Master_Init();
  1333   00233C  EC5F  F02D         	call	_I2C_2_Master_Init	;wreg free
  1334   002340                     
  1335                           ;main.c: 34:     initDCmotorsPWM(200);
  1336   002340  0E00               	movlw	0
  1337   002342  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1338   002344  0EC8               	movlw	200
  1339   002346  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1340   002348  EC18  F027         	call	_initDCmotorsPWM	;wreg free
  1341   00234C                     
  1342                           ;main.c: 35:     char buf[100];;main.c: 36:     TRISGbits.TRISG1 = 0;
  1343   00234C  9287               	bcf	135,1,c	;volatile
  1344   00234E                     
  1345                           ;main.c: 37:     TRISAbits.TRISA4 = 0;
  1346   00234E  9881               	bcf	129,4,c	;volatile
  1347   002350                     
  1348                           ;main.c: 38:     TRISFbits.TRISF7 = 0;
  1349   002350  9E86               	bcf	134,7,c	;volatile
  1350   002352                     
  1351                           ;main.c: 39:     TRISFbits.TRISF2 = 1;
  1352   002352  8486               	bsf	134,2,c	;volatile
  1353   002354                     
  1354                           ;main.c: 40:     ANSELFbits.ANSELF2=0;
  1355   002354  010E               	movlb	14	; () banked
  1356   002356  95B4               	bcf	180,2,b	;volatile
  1357   002358                     
  1358                           ; BSR set to: 14
  1359                           ;main.c: 41:     LATGbits.LATG1=1;
  1360   002358  827F               	bsf	127,1,c	;volatile
  1361   00235A                     
  1362                           ; BSR set to: 14
  1363                           ;main.c: 42:     LATAbits.LATA4=1;
  1364   00235A  8879               	bsf	121,4,c	;volatile
  1365   00235C                     
  1366                           ; BSR set to: 14
  1367                           ;main.c: 43:     LATFbits.LATF7=1;
  1368   00235C  8E7E               	bsf	126,7,c	;volatile
  1369   00235E                     
  1370                           ; BSR set to: 14
  1371                           ;main.c: 47:     motorL.power=0;
  1372   00235E  0E00               	movlw	0
  1373   002360  0101               	movlb	1	; () banked
  1374   002362  6F73               	movwf	_motorL& (0+255),b
  1375   002364                     
  1376                           ; BSR set to: 1
  1377                           ;main.c: 48:     motorL.direction=1;
  1378   002364  0E01               	movlw	1
  1379   002366  6F74               	movwf	(_motorL+1)& (0+255),b
  1380   002368                     
  1381                           ; BSR set to: 1
  1382                           ;main.c: 49:     motorL.brakemode=1;
  1383   002368  0E01               	movlw	1
  1384   00236A  6F75               	movwf	(_motorL+2)& (0+255),b
  1385   00236C                     
  1386                           ; BSR set to: 1
  1387                           ;main.c: 50:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1388   00236C  0EAA               	movlw	170
  1389   00236E  6F78               	movwf	(_motorL+5)& (0+255),b
  1390   002370  0E0F               	movlw	15
  1391   002372  6F79               	movwf	(_motorL+6)& (0+255),b
  1392   002374                     
  1393                           ; BSR set to: 1
  1394                           ;main.c: 51:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1395   002374  0EA6               	movlw	166
  1396   002376  6F7A               	movwf	(_motorL+7)& (0+255),b
  1397   002378  0E0F               	movlw	15
  1398   00237A  6F7B               	movwf	(_motorL+8)& (0+255),b
  1399   00237C                     
  1400                           ; BSR set to: 1
  1401                           ;main.c: 52:     motorL.PWMperiod=200;
  1402   00237C  0E00               	movlw	0
  1403   00237E  6F77               	movwf	(_motorL+4)& (0+255),b
  1404   002380  0EC8               	movlw	200
  1405   002382  6F76               	movwf	(_motorL+3)& (0+255),b
  1406   002384                     
  1407                           ; BSR set to: 1
  1408                           ;main.c: 53:     motorR.power=0;
  1409   002384  0E00               	movlw	0
  1410   002386  6F6A               	movwf	_motorR& (0+255),b
  1411   002388                     
  1412                           ; BSR set to: 1
  1413                           ;main.c: 54:     motorR.direction=1;
  1414   002388  0E01               	movlw	1
  1415   00238A  6F6B               	movwf	(_motorR+1)& (0+255),b
  1416   00238C                     
  1417                           ; BSR set to: 1
  1418                           ;main.c: 55:     motorR.brakemode=1;
  1419   00238C  0E01               	movlw	1
  1420   00238E  6F6C               	movwf	(_motorR+2)& (0+255),b
  1421   002390                     
  1422                           ; BSR set to: 1
  1423                           ;main.c: 56:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1424   002390  0E25               	movlw	37
  1425   002392  6F6F               	movwf	(_motorR+5)& (0+255),b
  1426   002394  0E0F               	movlw	15
  1427   002396  6F70               	movwf	(_motorR+6)& (0+255),b
  1428   002398                     
  1429                           ; BSR set to: 1
  1430                           ;main.c: 57:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1431   002398  0E21               	movlw	33
  1432   00239A  6F71               	movwf	(_motorR+7)& (0+255),b
  1433   00239C  0E0F               	movlw	15
  1434   00239E  6F72               	movwf	(_motorR+8)& (0+255),b
  1435   0023A0                     
  1436                           ; BSR set to: 1
  1437                           ;main.c: 58:     motorR.PWMperiod=200;
  1438   0023A0  0E00               	movlw	0
  1439   0023A2  6F6E               	movwf	(_motorR+4)& (0+255),b
  1440   0023A4  0EC8               	movlw	200
  1441   0023A6  6F6D               	movwf	(_motorR+3)& (0+255),b
  1442   0023A8                     
  1443                           ; BSR set to: 1
  1444                           ;main.c: 59:     int consecuitive=0;
  1445   0023A8  0E00               	movlw	0
  1446   0023AA  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1447   0023AC  0E00               	movlw	0
  1448   0023AE  6FEA               	movwf	main@consecuitive& (0+255),b
  1449   0023B0                     
  1450                           ; BSR set to: 1
  1451                           ;main.c: 60:     int prev_colour =0;
  1452   0023B0  0E00               	movlw	0
  1453   0023B2  6FEF               	movwf	(main@prev_colour+1)& (0+255),b
  1454   0023B4  0E00               	movlw	0
  1455   0023B6  6FEE               	movwf	main@prev_colour& (0+255),b
  1456   0023B8                     
  1457                           ; BSR set to: 1
  1458                           ;main.c: 61:     int run_flag=1;
  1459   0023B8  0E00               	movlw	0
  1460   0023BA  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  1461   0023BC  0E01               	movlw	1
  1462   0023BE  6FE8               	movwf	main@run_flag& (0+255),b
  1463   0023C0                     
  1464                           ; BSR set to: 1
  1465                           ;main.c: 62:     move_count=-1;
  1466   0023C0  690C               	setf	_move_count& (0+255),b	;volatile
  1467   0023C2  690D               	setf	(_move_count+1)& (0+255),b	;volatile
  1468   0023C4                     l376:
  1469   0023C4  B48E               	btfsc	142,2,c	;volatile
  1470   0023C6  EFE7  F011         	goto	u5481
  1471   0023CA  EFE9  F011         	goto	u5480
  1472   0023CE                     u5481:
  1473   0023CE  EFE2  F011         	goto	l376
  1474   0023D2                     u5480:
  1475   0023D2                     
  1476                           ;main.c: 64:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1477   0023D2  0E52               	movlw	82
  1478   0023D4  0100               	movlb	0	; () banked
  1479   0023D6  6FD2               	movwf	(??_main+1)& (0+255),b
  1480   0023D8  0E2B               	movlw	43
  1481   0023DA  6FD1               	movwf	??_main& (0+255),b
  1482   0023DC  0E00               	movlw	0
  1483   0023DE                     u5627:
  1484   0023DE  2EE8               	decfsz	wreg,f,c
  1485   0023E0  D7FE               	bra	u5627
  1486   0023E2  2FD1               	decfsz	??_main& (0+255),f,b
  1487   0023E4  D7FC               	bra	u5627
  1488   0023E6  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1489   0023E8  D7FA               	bra	u5627
  1490   0023EA  F000               	nop	
  1491                           
  1492                           ;main.c: 65:     while (run_flag)
  1493   0023EC  EF0F  F014         	goto	l5553
  1494   0023F0                     l5447:
  1495                           
  1496                           ; BSR set to: 1
  1497                           ;main.c: 66:     {;main.c: 67:         Forwardhalfblock(&motorL,&motorR);
  1498   0023F0  0E73               	movlw	low _motorL
  1499   0023F2  6E19               	movwf	Forwardhalfblock@mL^0,c
  1500   0023F4  0E01               	movlw	high _motorL
  1501   0023F6  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  1502   0023F8  0E6A               	movlw	low _motorR
  1503   0023FA  6E1B               	movwf	Forwardhalfblock@mR^0,c
  1504   0023FC  0E01               	movlw	high _motorR
  1505   0023FE  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  1506   002400  EC11  F029         	call	_Forwardhalfblock	;wreg free
  1507   002404                     
  1508                           ;main.c: 68:         move_count++;
  1509   002404  0101               	movlb	1	; () banked
  1510   002406  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1511   002408  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1512   00240A                     
  1513                           ; BSR set to: 1
  1514                           ;main.c: 69:         WayBack[move_count]=0;
  1515   00240A  0E00               	movlw	low _WayBack
  1516   00240C  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1517   00240E  6ED9               	movwf	fsr2l,c
  1518   002410  0E03               	movlw	high _WayBack
  1519   002412  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1520   002414  6EDA               	movwf	fsr2h,c
  1521   002416  0E00               	movlw	0
  1522   002418  6EDF               	movwf	indf2,c
  1523   00241A                     
  1524                           ; BSR set to: 1
  1525                           ;main.c: 73:         readColours(&vals);
  1526   00241A  0E7C               	movlw	low _vals
  1527   00241C  6E0C               	movwf	readColours@vals^0,c
  1528   00241E  0E01               	movlw	high _vals
  1529   002420  6E0D               	movwf	(readColours@vals+1)^0,c
  1530   002422  ECB5  F028         	call	_readColours	;wreg free
  1531   002426                     
  1532                           ;main.c: 76:         colour_rel(&vals, &rel);
  1533   002426  0E7C               	movlw	low _vals
  1534   002428  6E4B               	movwf	colour_rel@vals^0,c
  1535   00242A  0E01               	movlw	high _vals
  1536   00242C  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1537   00242E  0E5E               	movlw	low _rel
  1538   002430  6E4D               	movwf	colour_rel@rel^0,c
  1539   002432  0E01               	movlw	high _rel
  1540   002434  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1541   002436  EC5D  F01A         	call	_colour_rel	;wreg free
  1542   00243A                     
  1543                           ;main.c: 79:         if (vals.L>=2200){
  1544   00243A  0101               	movlb	1	; () banked
  1545   00243C  BF83               	btfsc	(_vals+7)& (0+255),7,b
  1546   00243E  EF2A  F012         	goto	u5491
  1547   002442  0E98               	movlw	152
  1548   002444  5D82               	subwf	(_vals+6)& (0+255),w,b
  1549   002446  0E08               	movlw	8
  1550   002448  5983               	subwfb	(_vals+7)& (0+255),w,b
  1551   00244A  A0D8               	btfss	status,0,c
  1552   00244C  EF2A  F012         	goto	u5491
  1553   002450  EF2C  F012         	goto	u5490
  1554   002454                     u5491:
  1555   002454  EFEE  F013         	goto	l5549
  1556   002458                     u5490:
  1557   002458                     
  1558                           ; BSR set to: 1
  1559                           ;main.c: 80:             Forwardhalfblock(&motorL,&motorR);
  1560   002458  0E73               	movlw	low _motorL
  1561   00245A  6E19               	movwf	Forwardhalfblock@mL^0,c
  1562   00245C  0E01               	movlw	high _motorL
  1563   00245E  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  1564   002460  0E6A               	movlw	low _motorR
  1565   002462  6E1B               	movwf	Forwardhalfblock@mR^0,c
  1566   002464  0E01               	movlw	high _motorR
  1567   002466  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  1568   002468  EC11  F029         	call	_Forwardhalfblock	;wreg free
  1569                           
  1570                           ;main.c: 82:             stop(&motorL, &motorR);
  1571   00246C  0E73               	movlw	low _motorL
  1572   00246E  6E14               	movwf	stop@mL^0,c
  1573   002470  0E01               	movlw	high _motorL
  1574   002472  6E15               	movwf	(stop@mL+1)^0,c
  1575   002474  0E6A               	movlw	low _motorR
  1576   002476  6E16               	movwf	stop@mR^0,c
  1577   002478  0E01               	movlw	high _motorR
  1578   00247A  6E17               	movwf	(stop@mR+1)^0,c
  1579   00247C  ECDA  F027         	call	_stop	;wreg free
  1580   002480                     
  1581                           ;main.c: 83:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1582   002480  0E11               	movlw	17
  1583   002482  0100               	movlb	0	; () banked
  1584   002484  6FD2               	movwf	(??_main+1)& (0+255),b
  1585   002486  0E3C               	movlw	60
  1586   002488  6FD1               	movwf	??_main& (0+255),b
  1587   00248A  0ECB               	movlw	203
  1588   00248C                     u5637:
  1589   00248C  2EE8               	decfsz	wreg,f,c
  1590   00248E  D7FE               	bra	u5637
  1591   002490  2FD1               	decfsz	??_main& (0+255),f,b
  1592   002492  D7FC               	bra	u5637
  1593   002494  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1594   002496  D7FA               	bra	u5637
  1595                           
  1596                           ;main.c: 88:             while (consecuitive<20){
  1597   002498  EF81  F012         	goto	l5475
  1598   00249C                     l5463:
  1599                           
  1600                           ; BSR set to: 1
  1601                           ;main.c: 89:                 int colour = Colour_decider(&vals, &rel);
  1602   00249C  0E7C               	movlw	low _vals
  1603   00249E  6E4B               	movwf	Colour_decider@vals^0,c
  1604   0024A0  0E01               	movlw	high _vals
  1605   0024A2  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1606   0024A4  0E5E               	movlw	low _rel
  1607   0024A6  6E4D               	movwf	Colour_decider@rel^0,c
  1608   0024A8  0E01               	movlw	high _rel
  1609   0024AA  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1610   0024AC  EC2D  F007         	call	_Colour_decider	;wreg free
  1611   0024B0  C04B  F1EC         	movff	?_Colour_decider,main@colour
  1612   0024B4  C04C  F1ED         	movff	?_Colour_decider+1,main@colour+1
  1613   0024B8                     
  1614                           ;main.c: 90:                 if (colour==prev_colour){
  1615   0024B8  0101               	movlb	1	; () banked
  1616   0024BA  51EE               	movf	main@prev_colour& (0+255),w,b
  1617   0024BC  19EC               	xorwf	main@colour& (0+255),w,b
  1618   0024BE  E107               	bnz	u5501
  1619   0024C0  51EF               	movf	(main@prev_colour+1)& (0+255),w,b
  1620   0024C2  19ED               	xorwf	(main@colour+1)& (0+255),w,b
  1621   0024C4  A4D8               	btfss	status,2,c
  1622   0024C6  EF67  F012         	goto	u5501
  1623   0024CA  EF69  F012         	goto	u5500
  1624   0024CE                     u5501:
  1625   0024CE  EF6D  F012         	goto	l5469
  1626   0024D2                     u5500:
  1627   0024D2                     
  1628                           ; BSR set to: 1
  1629                           ;main.c: 91:                     consecuitive++;
  1630   0024D2  4BEA               	infsnz	main@consecuitive& (0+255),f,b
  1631   0024D4  2BEB               	incf	(main@consecuitive+1)& (0+255),f,b
  1632                           
  1633                           ;main.c: 92:                 }
  1634   0024D6  EF71  F012         	goto	l5471
  1635   0024DA                     l5469:
  1636                           
  1637                           ; BSR set to: 1
  1638                           ;main.c: 94:                     consecuitive=0;
  1639   0024DA  0E00               	movlw	0
  1640   0024DC  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1641   0024DE  0E00               	movlw	0
  1642   0024E0  6FEA               	movwf	main@consecuitive& (0+255),b
  1643   0024E2                     l5471:
  1644                           
  1645                           ; BSR set to: 1
  1646                           ;main.c: 96:                 prev_colour=colour;
  1647   0024E2  C1EC  F1EE         	movff	main@colour,main@prev_colour
  1648   0024E6  C1ED  F1EF         	movff	main@colour+1,main@prev_colour+1
  1649   0024EA                     
  1650                           ; BSR set to: 1
  1651                           ;main.c: 97:                 _delay((unsigned long)((50)*(64000000/4000.0)));
  1652   0024EA  0E05               	movlw	5
  1653   0024EC  0100               	movlb	0	; () banked
  1654   0024EE  6FD2               	movwf	(??_main+1)& (0+255),b
  1655   0024F0  0E0F               	movlw	15
  1656   0024F2  6FD1               	movwf	??_main& (0+255),b
  1657   0024F4  0EF1               	movlw	241
  1658   0024F6                     u5647:
  1659   0024F6  2EE8               	decfsz	wreg,f,c
  1660   0024F8  D7FE               	bra	u5647
  1661   0024FA  2FD1               	decfsz	??_main& (0+255),f,b
  1662   0024FC  D7FC               	bra	u5647
  1663   0024FE  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1664   002500  D7FA               	bra	u5647
  1665   002502                     l5475:
  1666                           
  1667                           ;main.c: 88:             while (consecuitive<20){
  1668   002502  0101               	movlb	1	; () banked
  1669   002504  BFEB               	btfsc	(main@consecuitive+1)& (0+255),7,b
  1670   002506  EF8E  F012         	goto	u5511
  1671   00250A  51EB               	movf	(main@consecuitive+1)& (0+255),w,b
  1672   00250C  E109               	bnz	u5510
  1673   00250E  0E14               	movlw	20
  1674   002510  5DEA               	subwf	main@consecuitive& (0+255),w,b
  1675   002512  A0D8               	btfss	status,0,c
  1676   002514  EF8E  F012         	goto	u5511
  1677   002518  EF90  F012         	goto	u5510
  1678   00251C                     u5511:
  1679   00251C  EF4E  F012         	goto	l5463
  1680   002520                     u5510:
  1681   002520                     
  1682                           ; BSR set to: 1
  1683                           ;main.c: 99:             consecuitive=0;
  1684   002520  0E00               	movlw	0
  1685   002522  6FEB               	movwf	(main@consecuitive+1)& (0+255),b
  1686   002524  0E00               	movlw	0
  1687   002526  6FEA               	movwf	main@consecuitive& (0+255),b
  1688   002528                     
  1689                           ; BSR set to: 1
  1690                           ;main.c: 101:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour1=%d \r\n",r
      +                          el.R, rel.G,rel.B,vals.L, prev_colour);
  1691   002528  0E84               	movlw	low main@buf
  1692   00252A  0100               	movlb	0	; () banked
  1693   00252C  6FB0               	movwf	sprintf@s& (0+255),b
  1694   00252E  0E01               	movlw	high main@buf
  1695   002530  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1696   002532  0E01               	movlw	low STR_1
  1697   002534  6FB2               	movwf	sprintf@fmt& (0+255),b
  1698   002536  0E0E               	movlw	high STR_1
  1699   002538  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1700   00253A  C15E  F0B4         	movff	_rel,?_sprintf+4
  1701   00253E  C15F  F0B5         	movff	_rel+1,?_sprintf+5
  1702   002542  C160  F0B6         	movff	_rel+2,?_sprintf+6
  1703   002546  C161  F0B7         	movff	_rel+3,?_sprintf+7
  1704   00254A  C162  F0B8         	movff	_rel+4,?_sprintf+8
  1705   00254E  C163  F0B9         	movff	_rel+5,?_sprintf+9
  1706   002552  C164  F0BA         	movff	_rel+6,?_sprintf+10
  1707   002556  C165  F0BB         	movff	_rel+7,?_sprintf+11
  1708   00255A  C166  F0BC         	movff	_rel+8,?_sprintf+12
  1709   00255E  C167  F0BD         	movff	_rel+9,?_sprintf+13
  1710   002562  C168  F0BE         	movff	_rel+10,?_sprintf+14
  1711   002566  C169  F0BF         	movff	_rel+11,?_sprintf+15
  1712   00256A  C182  F0C0         	movff	_vals+6,?_sprintf+16
  1713   00256E  C183  F0C1         	movff	_vals+7,?_sprintf+17
  1714   002572  C1EE  F0C2         	movff	main@prev_colour,?_sprintf+18
  1715   002576  C1EF  F0C3         	movff	main@prev_colour+1,?_sprintf+19
  1716   00257A  EC49  F02A         	call	_sprintf	;wreg free
  1717   00257E                     
  1718                           ;main.c: 102:             sendStringSerial4(buf);
  1719   00257E  0E84               	movlw	low main@buf
  1720   002580  6E02               	movwf	sendStringSerial4@string^0,c
  1721   002582  0E01               	movlw	high main@buf
  1722   002584  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1723   002586  EC47  F02D         	call	_sendStringSerial4	;wreg free
  1724   00258A                     
  1725                           ;main.c: 104:             if (prev_colour==1){
  1726   00258A  0101               	movlb	1	; () banked
  1727   00258C  05EE               	decf	main@prev_colour& (0+255),w,b
  1728   00258E  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1729   002590  A4D8               	btfss	status,2,c
  1730   002592  EFCD  F012         	goto	u5521
  1731   002596  EFCF  F012         	goto	u5520
  1732   00259A                     u5521:
  1733   00259A  EFE6  F012         	goto	l5491
  1734   00259E                     u5520:
  1735   00259E                     
  1736                           ; BSR set to: 1
  1737                           ;main.c: 105:                 RedMove(&motorL, &motorR);
  1738   00259E  0E73               	movlw	low _motorL
  1739   0025A0  6E1F               	movwf	RedMove@mL^0,c
  1740   0025A2  0E01               	movlw	high _motorL
  1741   0025A4  6E20               	movwf	(RedMove@mL+1)^0,c
  1742   0025A6  0E6A               	movlw	low _motorR
  1743   0025A8  6E21               	movwf	RedMove@mR^0,c
  1744   0025AA  0E01               	movlw	high _motorR
  1745   0025AC  6E22               	movwf	(RedMove@mR+1)^0,c
  1746   0025AE  ECED  F02C         	call	_RedMove	;wreg free
  1747   0025B2                     
  1748                           ;main.c: 106:                 move_count++;
  1749   0025B2  0101               	movlb	1	; () banked
  1750   0025B4  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1751   0025B6  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1752   0025B8                     
  1753                           ; BSR set to: 1
  1754                           ;main.c: 107:                 WayBack[move_count]=1;
  1755   0025B8  0E00               	movlw	low _WayBack
  1756   0025BA  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1757   0025BC  6ED9               	movwf	fsr2l,c
  1758   0025BE  0E03               	movlw	high _WayBack
  1759   0025C0  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1760   0025C2  6EDA               	movwf	fsr2h,c
  1761   0025C4  0E01               	movlw	1
  1762   0025C6  6EDF               	movwf	indf2,c
  1763                           
  1764                           ;main.c: 108:             }
  1765   0025C8  EF0F  F014         	goto	l5553
  1766   0025CC                     l5491:
  1767                           
  1768                           ; BSR set to: 1
  1769   0025CC  0E02               	movlw	2
  1770   0025CE  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1771   0025D0  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1772   0025D2  A4D8               	btfss	status,2,c
  1773   0025D4  EFEE  F012         	goto	u5531
  1774   0025D8  EFF0  F012         	goto	u5530
  1775   0025DC                     u5531:
  1776   0025DC  EF07  F013         	goto	l5499
  1777   0025E0                     u5530:
  1778   0025E0                     
  1779                           ; BSR set to: 1
  1780                           ;main.c: 110:                 OrangeMove(&motorL, &motorR);
  1781   0025E0  0E73               	movlw	low _motorL
  1782   0025E2  6E1F               	movwf	OrangeMove@mL^0,c
  1783   0025E4  0E01               	movlw	high _motorL
  1784   0025E6  6E20               	movwf	(OrangeMove@mL+1)^0,c
  1785   0025E8  0E6A               	movlw	low _motorR
  1786   0025EA  6E21               	movwf	OrangeMove@mR^0,c
  1787   0025EC  0E01               	movlw	high _motorR
  1788   0025EE  6E22               	movwf	(OrangeMove@mR+1)^0,c
  1789   0025F0  EC72  F02A         	call	_OrangeMove	;wreg free
  1790   0025F4                     
  1791                           ;main.c: 111:                 move_count++;
  1792   0025F4  0101               	movlb	1	; () banked
  1793   0025F6  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1794   0025F8  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1795   0025FA                     
  1796                           ; BSR set to: 1
  1797                           ;main.c: 112:                 WayBack[move_count]=2;
  1798   0025FA  0E00               	movlw	low _WayBack
  1799   0025FC  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1800   0025FE  6ED9               	movwf	fsr2l,c
  1801   002600  0E03               	movlw	high _WayBack
  1802   002602  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1803   002604  6EDA               	movwf	fsr2h,c
  1804   002606  0E02               	movlw	2
  1805   002608  6EDF               	movwf	indf2,c
  1806                           
  1807                           ;main.c: 113:             }
  1808   00260A  EF0F  F014         	goto	l5553
  1809   00260E                     l5499:
  1810                           
  1811                           ; BSR set to: 1
  1812   00260E  0E03               	movlw	3
  1813   002610  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1814   002612  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1815   002614  A4D8               	btfss	status,2,c
  1816   002616  EF0F  F013         	goto	u5541
  1817   00261A  EF11  F013         	goto	u5540
  1818   00261E                     u5541:
  1819   00261E  EF28  F013         	goto	l5507
  1820   002622                     u5540:
  1821   002622                     
  1822                           ; BSR set to: 1
  1823                           ;main.c: 115:                 YellowMove(&motorL, &motorR);
  1824   002622  0E73               	movlw	low _motorL
  1825   002624  6E1F               	movwf	YellowMove@mL^0,c
  1826   002626  0E01               	movlw	high _motorL
  1827   002628  6E20               	movwf	(YellowMove@mL+1)^0,c
  1828   00262A  0E6A               	movlw	low _motorR
  1829   00262C  6E21               	movwf	YellowMove@mR^0,c
  1830   00262E  0E01               	movlw	high _motorR
  1831   002630  6E22               	movwf	(YellowMove@mR+1)^0,c
  1832   002632  ECED  F02A         	call	_YellowMove	;wreg free
  1833   002636                     
  1834                           ;main.c: 116:                 move_count++;
  1835   002636  0101               	movlb	1	; () banked
  1836   002638  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1837   00263A  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1838   00263C                     
  1839                           ; BSR set to: 1
  1840                           ;main.c: 117:                 WayBack[move_count]=3;
  1841   00263C  0E00               	movlw	low _WayBack
  1842   00263E  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1843   002640  6ED9               	movwf	fsr2l,c
  1844   002642  0E03               	movlw	high _WayBack
  1845   002644  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1846   002646  6EDA               	movwf	fsr2h,c
  1847   002648  0E03               	movlw	3
  1848   00264A  6EDF               	movwf	indf2,c
  1849                           
  1850                           ;main.c: 118:             }
  1851   00264C  EF0F  F014         	goto	l5553
  1852   002650                     l5507:
  1853                           
  1854                           ; BSR set to: 1
  1855   002650  0E04               	movlw	4
  1856   002652  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1857   002654  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1858   002656  A4D8               	btfss	status,2,c
  1859   002658  EF30  F013         	goto	u5551
  1860   00265C  EF32  F013         	goto	u5550
  1861   002660                     u5551:
  1862   002660  EF49  F013         	goto	l5515
  1863   002664                     u5550:
  1864   002664                     
  1865                           ; BSR set to: 1
  1866                           ;main.c: 120:                 BlueMove(&motorL, &motorR);
  1867   002664  0E73               	movlw	low _motorL
  1868   002666  6E1F               	movwf	BlueMove@mL^0,c
  1869   002668  0E01               	movlw	high _motorL
  1870   00266A  6E20               	movwf	(BlueMove@mL+1)^0,c
  1871   00266C  0E6A               	movlw	low _motorR
  1872   00266E  6E21               	movwf	BlueMove@mR^0,c
  1873   002670  0E01               	movlw	high _motorR
  1874   002672  6E22               	movwf	(BlueMove@mR+1)^0,c
  1875   002674  EC82  F028         	call	_BlueMove	;wreg free
  1876   002678                     
  1877                           ;main.c: 121:                 move_count++;
  1878   002678  0101               	movlb	1	; () banked
  1879   00267A  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1880   00267C  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1881   00267E                     
  1882                           ; BSR set to: 1
  1883                           ;main.c: 122:                 WayBack[move_count]=4;
  1884   00267E  0E00               	movlw	low _WayBack
  1885   002680  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1886   002682  6ED9               	movwf	fsr2l,c
  1887   002684  0E03               	movlw	high _WayBack
  1888   002686  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1889   002688  6EDA               	movwf	fsr2h,c
  1890   00268A  0E04               	movlw	4
  1891   00268C  6EDF               	movwf	indf2,c
  1892                           
  1893                           ;main.c: 123:             }
  1894   00268E  EF0F  F014         	goto	l5553
  1895   002692                     l5515:
  1896                           
  1897                           ; BSR set to: 1
  1898   002692  0E05               	movlw	5
  1899   002694  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1900   002696  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1901   002698  A4D8               	btfss	status,2,c
  1902   00269A  EF51  F013         	goto	u5561
  1903   00269E  EF53  F013         	goto	u5560
  1904   0026A2                     u5561:
  1905   0026A2  EF6A  F013         	goto	l5523
  1906   0026A6                     u5560:
  1907   0026A6                     
  1908                           ; BSR set to: 1
  1909                           ;main.c: 125:                 GreenMove(&motorL, &motorR);
  1910   0026A6  0E73               	movlw	low _motorL
  1911   0026A8  6E1F               	movwf	GreenMove@mL^0,c
  1912   0026AA  0E01               	movlw	high _motorL
  1913   0026AC  6E20               	movwf	(GreenMove@mL+1)^0,c
  1914   0026AE  0E6A               	movlw	low _motorR
  1915   0026B0  6E21               	movwf	GreenMove@mR^0,c
  1916   0026B2  0E01               	movlw	high _motorR
  1917   0026B4  6E22               	movwf	(GreenMove@mR+1)^0,c
  1918   0026B6  EC0C  F02D         	call	_GreenMove	;wreg free
  1919   0026BA                     
  1920                           ;main.c: 126:                 move_count++;
  1921   0026BA  0101               	movlb	1	; () banked
  1922   0026BC  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1923   0026BE  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1924   0026C0                     
  1925                           ; BSR set to: 1
  1926                           ;main.c: 127:                 WayBack[move_count]=5;
  1927   0026C0  0E00               	movlw	low _WayBack
  1928   0026C2  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1929   0026C4  6ED9               	movwf	fsr2l,c
  1930   0026C6  0E03               	movlw	high _WayBack
  1931   0026C8  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1932   0026CA  6EDA               	movwf	fsr2h,c
  1933   0026CC  0E05               	movlw	5
  1934   0026CE  6EDF               	movwf	indf2,c
  1935                           
  1936                           ;main.c: 128:             }
  1937   0026D0  EF0F  F014         	goto	l5553
  1938   0026D4                     l5523:
  1939                           
  1940                           ; BSR set to: 1
  1941   0026D4  0E06               	movlw	6
  1942   0026D6  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1943   0026D8  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1944   0026DA  A4D8               	btfss	status,2,c
  1945   0026DC  EF72  F013         	goto	u5571
  1946   0026E0  EF74  F013         	goto	u5570
  1947   0026E4                     u5571:
  1948   0026E4  EF8B  F013         	goto	l5531
  1949   0026E8                     u5570:
  1950   0026E8                     
  1951                           ; BSR set to: 1
  1952                           ;main.c: 130:                 LightBlueMove(&motorL, &motorR);
  1953   0026E8  0E73               	movlw	low _motorL
  1954   0026EA  6E1F               	movwf	LightBlueMove@mL^0,c
  1955   0026EC  0E01               	movlw	high _motorL
  1956   0026EE  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  1957   0026F0  0E6A               	movlw	low _motorR
  1958   0026F2  6E21               	movwf	LightBlueMove@mR^0,c
  1959   0026F4  0E01               	movlw	high _motorR
  1960   0026F6  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  1961   0026F8  EC9B  F02A         	call	_LightBlueMove	;wreg free
  1962   0026FC                     
  1963                           ;main.c: 131:                 move_count++;
  1964   0026FC  0101               	movlb	1	; () banked
  1965   0026FE  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1966   002700  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1967   002702                     
  1968                           ; BSR set to: 1
  1969                           ;main.c: 132:                 WayBack[move_count]=6;
  1970   002702  0E00               	movlw	low _WayBack
  1971   002704  250C               	addwf	_move_count& (0+255),w,b	;volatile
  1972   002706  6ED9               	movwf	fsr2l,c
  1973   002708  0E03               	movlw	high _WayBack
  1974   00270A  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  1975   00270C  6EDA               	movwf	fsr2h,c
  1976   00270E  0E06               	movlw	6
  1977   002710  6EDF               	movwf	indf2,c
  1978                           
  1979                           ;main.c: 133:             }
  1980   002712  EF0F  F014         	goto	l5553
  1981   002716                     l5531:
  1982                           
  1983                           ; BSR set to: 1
  1984   002716  0E07               	movlw	7
  1985   002718  19EE               	xorwf	main@prev_colour& (0+255),w,b
  1986   00271A  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  1987   00271C  A4D8               	btfss	status,2,c
  1988   00271E  EF93  F013         	goto	u5581
  1989   002722  EF95  F013         	goto	u5580
  1990   002726                     u5581:
  1991   002726  EFAC  F013         	goto	l5539
  1992   00272A                     u5580:
  1993   00272A                     
  1994                           ; BSR set to: 1
  1995                           ;main.c: 135:                 PinkMove(&motorL, &motorR);
  1996   00272A  0E73               	movlw	low _motorL
  1997   00272C  6E1F               	movwf	PinkMove@mL^0,c
  1998   00272E  0E01               	movlw	high _motorL
  1999   002730  6E20               	movwf	(PinkMove@mL+1)^0,c
  2000   002732  0E6A               	movlw	low _motorR
  2001   002734  6E21               	movwf	PinkMove@mR^0,c
  2002   002736  0E01               	movlw	high _motorR
  2003   002738  6E22               	movwf	(PinkMove@mR+1)^0,c
  2004   00273A  EC16  F02B         	call	_PinkMove	;wreg free
  2005   00273E                     
  2006                           ;main.c: 136:                 move_count++;
  2007   00273E  0101               	movlb	1	; () banked
  2008   002740  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  2009   002742  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  2010   002744                     
  2011                           ; BSR set to: 1
  2012                           ;main.c: 137:                 WayBack[move_count]=7;
  2013   002744  0E00               	movlw	low _WayBack
  2014   002746  250C               	addwf	_move_count& (0+255),w,b	;volatile
  2015   002748  6ED9               	movwf	fsr2l,c
  2016   00274A  0E03               	movlw	high _WayBack
  2017   00274C  210D               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  2018   00274E  6EDA               	movwf	fsr2h,c
  2019   002750  0E07               	movlw	7
  2020   002752  6EDF               	movwf	indf2,c
  2021                           
  2022                           ;main.c: 138:             }
  2023   002754  EF0F  F014         	goto	l5553
  2024   002758                     l5539:
  2025                           
  2026                           ; BSR set to: 1
  2027   002758  0E0A               	movlw	10
  2028   00275A  19EE               	xorwf	main@prev_colour& (0+255),w,b
  2029   00275C  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2030   00275E  A4D8               	btfss	status,2,c
  2031   002760  EFB4  F013         	goto	u5591
  2032   002764  EFB6  F013         	goto	u5590
  2033   002768                     u5591:
  2034   002768  EFC2  F013         	goto	l5543
  2035   00276C                     u5590:
  2036   00276C                     
  2037                           ; BSR set to: 1
  2038                           ;main.c: 140:                 RetryMove(&motorL, &motorR);
  2039   00276C  0E73               	movlw	low _motorL
  2040   00276E  6E19               	movwf	RetryMove@mL^0,c
  2041   002770  0E01               	movlw	high _motorL
  2042   002772  6E1A               	movwf	(RetryMove@mL+1)^0,c
  2043   002774  0E6A               	movlw	low _motorR
  2044   002776  6E1B               	movwf	RetryMove@mR^0,c
  2045   002778  0E01               	movlw	high _motorR
  2046   00277A  6E1C               	movwf	(RetryMove@mR+1)^0,c
  2047   00277C  EC5C  F027         	call	_RetryMove	;wreg free
  2048                           
  2049                           ;main.c: 141:             }
  2050   002780  EF0F  F014         	goto	l5553
  2051   002784                     l5543:
  2052                           
  2053                           ; BSR set to: 1
  2054   002784  51EE               	movf	main@prev_colour& (0+255),w,b
  2055   002786  11EF               	iorwf	(main@prev_colour+1)& (0+255),w,b
  2056   002788  A4D8               	btfss	status,2,c
  2057   00278A  EFC9  F013         	goto	u5601
  2058   00278E  EFCB  F013         	goto	u5600
  2059   002792                     u5601:
  2060   002792  EFEC  F013         	goto	l398
  2061   002796                     u5600:
  2062   002796                     
  2063                           ; BSR set to: 1
  2064                           ;main.c: 143:                 BlueMove(&motorL, &motorR);
  2065   002796  0E73               	movlw	low _motorL
  2066   002798  6E1F               	movwf	BlueMove@mL^0,c
  2067   00279A  0E01               	movlw	high _motorL
  2068   00279C  6E20               	movwf	(BlueMove@mL+1)^0,c
  2069   00279E  0E6A               	movlw	low _motorR
  2070   0027A0  6E21               	movwf	BlueMove@mR^0,c
  2071   0027A2  0E01               	movlw	high _motorR
  2072   0027A4  6E22               	movwf	(BlueMove@mR+1)^0,c
  2073   0027A6  EC82  F028         	call	_BlueMove	;wreg free
  2074                           
  2075                           ;main.c: 144:                 go_Home(WayBack);
  2076   0027AA  0E00               	movlw	low _WayBack
  2077   0027AC  6E23               	movwf	go_Home@WayBack^0,c
  2078   0027AE  0E03               	movlw	high _WayBack
  2079   0027B0  6E24               	movwf	(go_Home@WayBack+1)^0,c
  2080   0027B2  ECBF  F01F         	call	_go_Home	;wreg free
  2081                           
  2082                           ;main.c: 145:                 stop(&motorL, &motorR);
  2083   0027B6  0E73               	movlw	low _motorL
  2084   0027B8  6E14               	movwf	stop@mL^0,c
  2085   0027BA  0E01               	movlw	high _motorL
  2086   0027BC  6E15               	movwf	(stop@mL+1)^0,c
  2087   0027BE  0E6A               	movlw	low _motorR
  2088   0027C0  6E16               	movwf	stop@mR^0,c
  2089   0027C2  0E01               	movlw	high _motorR
  2090   0027C4  6E17               	movwf	(stop@mR+1)^0,c
  2091   0027C6  ECDA  F027         	call	_stop	;wreg free
  2092   0027CA                     
  2093                           ;main.c: 146:                 run_flag=0;
  2094   0027CA  0E00               	movlw	0
  2095   0027CC  0101               	movlb	1	; () banked
  2096   0027CE  6FE9               	movwf	(main@run_flag+1)& (0+255),b
  2097   0027D0  0E00               	movlw	0
  2098   0027D2  6FE8               	movwf	main@run_flag& (0+255),b
  2099   0027D4  EF0F  F014         	goto	l5553
  2100   0027D8                     l398:
  2101                           
  2102                           ; BSR set to: 1
  2103   0027D8  EF0F  F014         	goto	l5553
  2104   0027DC                     l5549:
  2105                           
  2106                           ; BSR set to: 1
  2107                           ;main.c: 152:             sprintf(buf,"red=%d green=%d blue=%d lum=%d \r\n",vals.R, vals
      +                          .G,vals.B,vals.L);
  2108   0027DC  0E84               	movlw	low main@buf
  2109   0027DE  0100               	movlb	0	; () banked
  2110   0027E0  6FB0               	movwf	sprintf@s& (0+255),b
  2111   0027E2  0E01               	movlw	high main@buf
  2112   0027E4  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  2113   0027E6  0E2E               	movlw	low STR_2
  2114   0027E8  6FB2               	movwf	sprintf@fmt& (0+255),b
  2115   0027EA  0E0E               	movlw	high STR_2
  2116   0027EC  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  2117   0027EE  C17C  F0B4         	movff	_vals,?_sprintf+4
  2118   0027F2  C17D  F0B5         	movff	_vals+1,?_sprintf+5
  2119   0027F6  C17E  F0B6         	movff	_vals+2,?_sprintf+6
  2120   0027FA  C17F  F0B7         	movff	_vals+3,?_sprintf+7
  2121   0027FE  C180  F0B8         	movff	_vals+4,?_sprintf+8
  2122   002802  C181  F0B9         	movff	_vals+5,?_sprintf+9
  2123   002806  C182  F0BA         	movff	_vals+6,?_sprintf+10
  2124   00280A  C183  F0BB         	movff	_vals+7,?_sprintf+11
  2125   00280E  EC49  F02A         	call	_sprintf	;wreg free
  2126   002812                     
  2127                           ;main.c: 153:             sendStringSerial4(buf);
  2128   002812  0E84               	movlw	low main@buf
  2129   002814  6E02               	movwf	sendStringSerial4@string^0,c
  2130   002816  0E01               	movlw	high main@buf
  2131   002818  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  2132   00281A  EC47  F02D         	call	_sendStringSerial4	;wreg free
  2133   00281E                     l5553:
  2134                           
  2135                           ;main.c: 65:     while (run_flag)
  2136   00281E  0101               	movlb	1	; () banked
  2137   002820  51E8               	movf	main@run_flag& (0+255),w,b
  2138   002822  11E9               	iorwf	(main@run_flag+1)& (0+255),w,b
  2139   002824  A4D8               	btfss	status,2,c
  2140   002826  EF17  F014         	goto	u5611
  2141   00282A  EF19  F014         	goto	u5610
  2142   00282E                     u5611:
  2143   00282E  EFF8  F011         	goto	l5447
  2144   002832                     u5610:
  2145   002832                     
  2146                           ; BSR set to: 1
  2147   002832  EF07  F000         	goto	start
  2148   002836                     __end_of_main:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function _sprintf *****************
  2152 ;; Defined at:
  2153 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2156 ;;		 -> main@buf(100), 
  2157 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2158 ;;		 -> STR_2(34), STR_1(45), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2161 ;;  ap              2  100[BANK0 ] PTR void [1]
  2162 ;;		 -> ?_sprintf(2), 
  2163 ;;  ret             2    0        int 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2   80[BANK0 ] int 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2173 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2174 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2176 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2177 ;;Total ram usage:       33 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 8
  2180 ;; This function calls:
  2181 ;;		_vfprintf
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text1
  2188   005492                     __ptext1:
  2189                           	callstack 0
  2190   005492                     _sprintf:
  2191                           	callstack 22
  2192   005492  0EB4               	movlw	low (?_sprintf+4)
  2193   005494  0100               	movlb	0	; () banked
  2194   005496  6FC4               	movwf	sprintf@ap& (0+255),b
  2195   005498  0E00               	movlw	high (?_sprintf+4)
  2196   00549A  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2197   00549C  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2198   0054A0  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2199   0054A4                     
  2200                           ; BSR set to: 0
  2201   0054A4  0E00               	movlw	0
  2202   0054A6  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2203   0054A8  0E00               	movlw	0
  2204   0054AA  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2205   0054AC                     
  2206                           ; BSR set to: 0
  2207   0054AC  0E00               	movlw	0
  2208   0054AE  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2209   0054B0  0E00               	movlw	0
  2210   0054B2  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2211   0054B4                     
  2212                           ; BSR set to: 0
  2213   0054B4  0EC6               	movlw	low sprintf@f
  2214   0054B6  6FA8               	movwf	vfprintf@fp& (0+255),b
  2215   0054B8  0E00               	movlw	high sprintf@f
  2216   0054BA  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2217   0054BC  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2218   0054C0  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2219   0054C4  0EC4               	movlw	low sprintf@ap
  2220   0054C6  6FAC               	movwf	vfprintf@ap& (0+255),b
  2221   0054C8  0E00               	movlw	high sprintf@ap
  2222   0054CA  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2223   0054CC  EC1E  F02A         	call	_vfprintf	;wreg free
  2224   0054D0  0100               	movlb	0	; () banked
  2225   0054D2  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2226   0054D4  25B0               	addwf	sprintf@s& (0+255),w,b
  2227   0054D6  6ED9               	movwf	fsr2l,c
  2228   0054D8  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2229   0054DA  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2230   0054DC  6EDA               	movwf	fsr2h,c
  2231   0054DE  0E00               	movlw	0
  2232   0054E0  6EDF               	movwf	indf2,c
  2233   0054E2                     
  2234                           ; BSR set to: 0
  2235   0054E2  0012               	return		;funcret
  2236   0054E4                     __end_of_sprintf:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _vfprintf *****************
  2240 ;; Defined at:
  2241 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2244 ;;		 -> sprintf@f(11), 
  2245 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2246 ;;		 -> STR_2(34), STR_1(45), 
  2247 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2248 ;;		 -> sprintf@ap(2), 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2251 ;;		 -> STR_2(34), STR_1(45), 
  2252 ;; Return value:  Size  Location     Type
  2253 ;;                  2   72[BANK0 ] int 
  2254 ;; Registers used:
  2255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2261 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2262 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;Total ram usage:        8 bytes
  2266 ;; Hardware stack levels used: 1
  2267 ;; Hardware stack levels required when called: 7
  2268 ;; This function calls:
  2269 ;;		_vfpfcnvrt
  2270 ;; This function is called by:
  2271 ;;		_sprintf
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           	psect	text2
  2276   00543C                     __ptext2:
  2277                           	callstack 0
  2278   00543C                     _vfprintf:
  2279                           	callstack 22
  2280   00543C                     
  2281                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2282   00543C  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2283   005440  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2286   005444  EF33  F02A         	goto	l4975
  2287   005448                     l4973:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2290   005448  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2291   00544C  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2292   005450  0EAE               	movlw	low vfprintf@cfmt
  2293   005452  0100               	movlb	0	; () banked
  2294   005454  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2295   005456  0E00               	movlw	high vfprintf@cfmt
  2296   005458  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2297   00545A  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2298   00545E  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2299   005462  ECF4  F01B         	call	_vfpfcnvrt	;wreg free
  2300   005466                     l4975:
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2303   005466  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2304   00546A  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2305   00546E                     	if	0	;tblptru may be non-zero
  2306   00546E                     	endif
  2307   00546E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2308   00546E  0E00               	movlw	low (__mediumconst shr (0+16))
  2309   005470  6EF8               	movwf	tblptru,c
  2310   005472                     	endif
  2311   005472  0008               	tblrd		*
  2312   005474  50F5               	movf	tablat,w,c
  2313   005476  0900               	iorlw	0
  2314   005478  A4D8               	btfss	status,2,c
  2315   00547A  EF41  F02A         	goto	u4961
  2316   00547E  EF43  F02A         	goto	u4960
  2317   005482                     u4961:
  2318   005482  EF24  F02A         	goto	l4973
  2319   005486                     u4960:
  2320   005486                     
  2321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2322   005486  0E00               	movlw	0
  2323   005488  0100               	movlb	0	; () banked
  2324   00548A  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2325   00548C  0E00               	movlw	0
  2326   00548E  6FA8               	movwf	?_vfprintf& (0+255),b
  2327   005490                     
  2328                           ; BSR set to: 0
  2329   005490  0012               	return		;funcret
  2330   005492                     __end_of_vfprintf:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _vfpfcnvrt *****************
  2334 ;; Defined at:
  2335 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2338 ;;		 -> sprintf@f(11), 
  2339 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2340 ;;		 -> vfprintf@cfmt(2), 
  2341 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2342 ;;		 -> sprintf@ap(2), 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  convarg         8   61[BANK0 ] struct .
  2345 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2346 ;;		 -> STR_2(34), STR_1(45), 
  2347 ;;  i               2    0        int 
  2348 ;;  done            2    0        int 
  2349 ;;  c               1   69[BANK0 ] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2359 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2360 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2361 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2362 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;Total ram usage:       19 bytes
  2364 ;; Hardware stack levels used: 1
  2365 ;; Hardware stack levels required when called: 6
  2366 ;; This function calls:
  2367 ;;		_dtoa
  2368 ;;		_efgtoa
  2369 ;;		_fputc
  2370 ;; This function is called by:
  2371 ;;		_vfprintf
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text3
  2376   0037E8                     __ptext3:
  2377                           	callstack 0
  2378   0037E8                     _vfpfcnvrt:
  2379                           	callstack 22
  2380   0037E8                     
  2381                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2382   0037E8  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2383   0037EC  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2384   0037F0  CFDE FFF6          	movff	postinc2,tblptrl
  2385   0037F4  CFDD FFF7          	movff	postdec2,tblptrh
  2386   0037F8                     	if	0	;tblptru may be non-zero
  2387   0037F8                     	endif
  2388   0037F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2389   0037F8  0E00               	movlw	low (__mediumconst shr (0+16))
  2390   0037FA  6EF8               	movwf	tblptru,c
  2391   0037FC                     	endif
  2392   0037FC  0008               	tblrd		*
  2393   0037FE  50F5               	movf	tablat,w,c
  2394   003800  0A25               	xorlw	37
  2395   003802  A4D8               	btfss	status,2,c
  2396   003804  EF06  F01C         	goto	u4811
  2397   003808  EF08  F01C         	goto	u4810
  2398   00380C                     u4811:
  2399   00380C  EF60  F01D         	goto	l4833
  2400   003810                     u4810:
  2401   003810                     
  2402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2403   003810  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2404   003814  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2405   003818  2ADE               	incf	postinc2,f,c
  2406   00381A  0E00               	movlw	0
  2407   00381C  22DD               	addwfc	postdec2,f,c
  2408   00381E                     
  2409                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2410   00381E  0E00               	movlw	0
  2411   003820  0100               	movlb	0	; () banked
  2412   003822  6FF0               	movwf	(_width+1)& (0+255),b
  2413   003824  0E00               	movlw	0
  2414   003826  6FEF               	movwf	_width& (0+255),b
  2415   003828  C0EF  F0F5         	movff	_width,_flags
  2416   00382C                     
  2417                           ; BSR set to: 0
  2418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2419   00382C  69F1               	setf	_prec& (0+255),b
  2420   00382E  69F2               	setf	(_prec+1)& (0+255),b
  2421   003830                     
  2422                           ; BSR set to: 0
  2423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2424   003830  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2425   003834  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2426   003838  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2427   00383C  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2428   003840                     
  2429                           ; BSR set to: 0
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2431   003840  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2432   003844  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2433   003848                     	if	0	;tblptru may be non-zero
  2434   003848                     	endif
  2435   003848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2436   003848  0E00               	movlw	low (__mediumconst shr (0+16))
  2437   00384A  6EF8               	movwf	tblptru,c
  2438   00384C                     	endif
  2439   00384C  0008               	tblrd		*
  2440   00384E  50F5               	movf	tablat,w,c
  2441   003850  0A64               	xorlw	100
  2442   003852  B4D8               	btfsc	status,2,c
  2443   003854  EF2E  F01C         	goto	u4821
  2444   003858  EF30  F01C         	goto	u4820
  2445   00385C                     u4821:
  2446   00385C  EF40  F01C         	goto	l4789
  2447   003860                     u4820:
  2448   003860                     
  2449                           ; BSR set to: 0
  2450   003860  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2451   003864  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2452   003868                     	if	0	;tblptru may be non-zero
  2453   003868                     	endif
  2454   003868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2455   003868  0E00               	movlw	low (__mediumconst shr (0+16))
  2456   00386A  6EF8               	movwf	tblptru,c
  2457   00386C                     	endif
  2458   00386C  0008               	tblrd		*
  2459   00386E  50F5               	movf	tablat,w,c
  2460   003870  0A69               	xorlw	105
  2461   003872  A4D8               	btfss	status,2,c
  2462   003874  EF3E  F01C         	goto	u4831
  2463   003878  EF40  F01C         	goto	u4830
  2464   00387C                     u4831:
  2465   00387C  EF83  F01C         	goto	l4795
  2466   003880                     u4830:
  2467   003880                     l4789:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2471   003880  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2472   003884  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2473   003888  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2474   00388C  0E02               	movlw	2
  2475   00388E  26DE               	addwf	postinc2,f,c
  2476   003890  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2477   003894  0E00               	movlw	0
  2478   003896  22DD               	addwfc	postdec2,f,c
  2479   003898  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2480   00389C  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2481   0038A0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2482   0038A4  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2483   0038A8  0E00               	movlw	0
  2484   0038AA  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2485   0038AC  0EFF               	movlw	-1
  2486   0038AE  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2487   0038B0  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2488   0038B2  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2489   0038B4  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2490   0038B6  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2491   0038B8  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2492                           
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2494   0038BA  0E01               	movlw	1
  2495   0038BC  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2496   0038BE  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2497   0038C0  0E00               	movlw	0
  2498   0038C2  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2499   0038C4  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2500   0038C6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2501   0038CA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2502   0038CE  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2503   0038D2  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2504   0038D6                     
  2505                           ; BSR set to: 0
  2506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2507   0038D6  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2508   0038DA  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2509   0038DE  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2510   0038E2  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2511   0038E6  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2512   0038EA  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2513   0038EE  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2514   0038F2  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2515   0038F6  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2516   0038FA  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2517   0038FE  EC77  F01D         	call	_dtoa	;wreg free
  2518   003902  EF76  F01D         	goto	l1390
  2519   003906                     l4795:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2523   003906  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2524   00390A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2525   00390E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2526   003912  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2527   003916                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2530   003916  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2531   00391A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2532   00391E                     	if	0	;tblptru may be non-zero
  2533   00391E                     	endif
  2534   00391E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2535   00391E  0E00               	movlw	low (__mediumconst shr (0+16))
  2536   003920  6EF8               	movwf	tblptru,c
  2537   003922                     	endif
  2538   003922  0008               	tblrd		*
  2539   003924  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2542   003928  EFA2  F01C         	goto	l4807
  2543   00392C                     l4799:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2547   00392C  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2548   00392E  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2549                           
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2551   003930  EFBB  F01C         	goto	l4809
  2552   003934                     l4801:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2556   003934  0E6C               	movlw	108
  2557   003936  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2560   003938  EFBB  F01C         	goto	l4809
  2561   00393C                     l4803:
  2562                           
  2563                           ; BSR set to: 0
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2565   00393C  0E00               	movlw	0
  2566   00393E  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2567                           
  2568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2569   003940  EFBB  F01C         	goto	l4809
  2570   003944                     l4807:
  2571                           
  2572                           ; BSR set to: 0
  2573   003944  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2574   003946  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2575   003948  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2576                           
  2577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2578                           ; Switch size 1, requested type "simple"
  2579                           ; Number of cases is 1, Range of values is 0 to 0
  2580                           ; switch strategies available:
  2581                           ; Name         Instructions Cycles
  2582                           ; simple_byte            4     3 (average)
  2583                           ;	Chosen strategy is simple_byte
  2584   00394A  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2585   00394C  0A00               	xorlw	0	; case 0
  2586   00394E  B4D8               	btfsc	status,2,c
  2587   003950  EFAC  F01C         	goto	l5651
  2588   003954  EF9E  F01C         	goto	l4803
  2589   003958                     l5651:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ; Switch size 1, requested type "simple"
  2593                           ; Number of cases is 3, Range of values is 76 to 108
  2594                           ; switch strategies available:
  2595                           ; Name         Instructions Cycles
  2596                           ; simple_byte           10     6 (average)
  2597                           ;	Chosen strategy is simple_byte
  2598   003958  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2599   00395A  0A4C               	xorlw	76	; case 76
  2600   00395C  B4D8               	btfsc	status,2,c
  2601   00395E  EF96  F01C         	goto	l4799
  2602   003962  0A2A               	xorlw	42	; case 102
  2603   003964  B4D8               	btfsc	status,2,c
  2604   003966  EF9A  F01C         	goto	l4801
  2605   00396A  0A0A               	xorlw	10	; case 108
  2606   00396C  B4D8               	btfsc	status,2,c
  2607   00396E  EF96  F01C         	goto	l4799
  2608   003972  EF9E  F01C         	goto	l4803
  2609   003976                     l4809:
  2610                           
  2611                           ; BSR set to: 0
  2612   003976  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2613   00397A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2614   00397E                     	if	0	;tblptru may be non-zero
  2615   00397E                     	endif
  2616   00397E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2617   00397E  0E00               	movlw	low (__mediumconst shr (0+16))
  2618   003980  6EF8               	movwf	tblptru,c
  2619   003982                     	endif
  2620   003982  0008               	tblrd		*
  2621   003984  50F5               	movf	tablat,w,c
  2622   003986  0A66               	xorlw	102
  2623   003988  A4D8               	btfss	status,2,c
  2624   00398A  EFC9  F01C         	goto	u4841
  2625   00398E  EFCB  F01C         	goto	u4840
  2626   003992                     u4841:
  2627   003992  EF57  F01D         	goto	l4829
  2628   003996                     u4840:
  2629   003996  EF01  F01D         	goto	l4817
  2630   00399A                     l4811:
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2634   00399A  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2635   00399E  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2636   0039A2  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2637   0039A6  0E04               	movlw	4
  2638   0039A8  26DE               	addwf	postinc2,f,c
  2639   0039AA  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2640   0039AE  0E00               	movlw	0
  2641   0039B0  22DD               	addwfc	postdec2,f,c
  2642   0039B2  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2643   0039B6  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2644   0039BA  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2645   0039BE  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2646   0039C2  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2647   0039C6  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2650   0039CA  EF16  F01D         	goto	l4819
  2651   0039CE                     l4813:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2655   0039CE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2656   0039D2  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2657   0039D6  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2658   0039DA  0E04               	movlw	4
  2659   0039DC  26DE               	addwf	postinc2,f,c
  2660   0039DE  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2661   0039E2  0E00               	movlw	0
  2662   0039E4  22DD               	addwfc	postdec2,f,c
  2663   0039E6  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2664   0039EA  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2665   0039EE  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2666   0039F2  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2667   0039F6  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2668   0039FA  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2671   0039FE  EF16  F01D         	goto	l4819
  2672   003A02                     l4817:
  2673                           
  2674                           ; BSR set to: 0
  2675   003A02  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2676   003A04  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2677   003A06  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2678                           
  2679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 1, Range of values is 0 to 0
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte            4     3 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686   003A08  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2687   003A0A  0A00               	xorlw	0	; case 0
  2688   003A0C  B4D8               	btfsc	status,2,c
  2689   003A0E  EF0B  F01D         	goto	l5653
  2690   003A12  EF16  F01D         	goto	l4819
  2691   003A16                     l5653:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ; Switch size 1, requested type "simple"
  2695                           ; Number of cases is 2, Range of values is 76 to 108
  2696                           ; switch strategies available:
  2697                           ; Name         Instructions Cycles
  2698                           ; simple_byte            7     4 (average)
  2699                           ;	Chosen strategy is simple_byte
  2700   003A16  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2701   003A18  0A4C               	xorlw	76	; case 76
  2702   003A1A  B4D8               	btfsc	status,2,c
  2703   003A1C  EFE7  F01C         	goto	l4813
  2704   003A20  0A20               	xorlw	32	; case 108
  2705   003A22  B4D8               	btfsc	status,2,c
  2706   003A24  EFCD  F01C         	goto	l4811
  2707   003A28  EF16  F01D         	goto	l4819
  2708   003A2C                     l4819:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2712   003A2C  0E01               	movlw	1
  2713   003A2E  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2714   003A30  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2715   003A32  0E00               	movlw	0
  2716   003A34  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2717   003A36  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2718   003A38  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2719   003A3C  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2720   003A40  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2721   003A44  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2724   003A48  EF3F  F01D         	goto	l4827
  2725   003A4C                     l4821:
  2726                           
  2727                           ; BSR set to: 0
  2728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2729   003A4C  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2730   003A50  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2731   003A54  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2732   003A58  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2733   003A5C  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2734   003A60  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2735   003A64  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2736   003A68  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2737   003A6C                     	if	0	;tblptru may be non-zero
  2738   003A6C                     	endif
  2739   003A6C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2740   003A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  2741   003A6E  6EF8               	movwf	tblptru,c
  2742   003A70                     	endif
  2743   003A70  0008               	tblrd		*
  2744   003A72  CFF5 F066          	movff	tablat,efgtoa@c
  2745   003A76  EC9B  F00C         	call	_efgtoa	;wreg free
  2746   003A7A  EF76  F01D         	goto	l1390
  2747   003A7E                     l4827:
  2748                           
  2749                           ; BSR set to: 0
  2750   003A7E  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2751   003A82  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2752   003A86                     	if	0	;tblptru may be non-zero
  2753   003A86                     	endif
  2754   003A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2755   003A86  0E00               	movlw	low (__mediumconst shr (0+16))
  2756   003A88  6EF8               	movwf	tblptru,c
  2757   003A8A                     	endif
  2758   003A8A  0008               	tblrd		*
  2759   003A8C  50F5               	movf	tablat,w,c
  2760   003A8E  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2761   003A90  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2762                           
  2763                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2764                           ; Switch size 1, requested type "simple"
  2765                           ; Number of cases is 1, Range of values is 0 to 0
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte            4     3 (average)
  2769                           ;	Chosen strategy is simple_byte
  2770   003A92  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2771   003A94  0A00               	xorlw	0	; case 0
  2772   003A96  B4D8               	btfsc	status,2,c
  2773   003A98  EF50  F01D         	goto	l5655
  2774   003A9C  EF57  F01D         	goto	l4829
  2775   003AA0                     l5655:
  2776                           
  2777                           ; BSR set to: 0
  2778                           ; Switch size 1, requested type "simple"
  2779                           ; Number of cases is 1, Range of values is 102 to 102
  2780                           ; switch strategies available:
  2781                           ; Name         Instructions Cycles
  2782                           ; simple_byte            4     3 (average)
  2783                           ;	Chosen strategy is simple_byte
  2784   003AA0  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2785   003AA2  0A66               	xorlw	102	; case 102
  2786   003AA4  B4D8               	btfsc	status,2,c
  2787   003AA6  EF26  F01D         	goto	l4821
  2788   003AAA  EF57  F01D         	goto	l4829
  2789   003AAE                     l4829:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2792   003AAE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2793   003AB2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2794   003AB6  2ADE               	incf	postinc2,f,c
  2795   003AB8  0E00               	movlw	0
  2796   003ABA  22DD               	addwfc	postdec2,f,c
  2797   003ABC  EF76  F01D         	goto	l1390
  2798   003AC0                     l4833:
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2801   003AC0  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2802   003AC4  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2803   003AC8  CFDE FFF6          	movff	postinc2,tblptrl
  2804   003ACC  CFDD FFF7          	movff	postdec2,tblptrh
  2805   003AD0                     	if	0	;tblptru may be non-zero
  2806   003AD0                     	endif
  2807   003AD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2808   003AD0  0E00               	movlw	low (__mediumconst shr (0+16))
  2809   003AD2  6EF8               	movwf	tblptru,c
  2810   003AD4                     	endif
  2811   003AD4  0008               	tblrd		*
  2812   003AD6  50F5               	movf	tablat,w,c
  2813   003AD8  6E01               	movwf	fputc@c^0,c
  2814   003ADA  6A02               	clrf	(fputc@c+1)^0,c
  2815   003ADC  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2816   003AE0  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2817   003AE4  EC32  F025         	call	_fputc	;wreg free
  2818   003AE8  EF57  F01D         	goto	l4829
  2819   003AEC                     l1390:
  2820   003AEC  0012               	return		;funcret
  2821   003AEE                     __end_of_vfpfcnvrt:
  2822                           	callstack 0
  2823                           
  2824 ;; *************** function _efgtoa *****************
  2825 ;; Defined at:
  2826 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2829 ;;		 -> sprintf@f(11), 
  2830 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2831 ;;  c               1    6[BANK0 ] unsigned char 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  u               4   49[BANK0 ] struct flui
  2834 ;;  g               4   45[BANK0 ] struct flui
  2835 ;;  l               4   38[BANK0 ] struct flui
  2836 ;;  h               4   34[BANK0 ] struct flui
  2837 ;;  ou              4   28[BANK0 ] struct flui
  2838 ;;  n               2   43[BANK0 ] int 
  2839 ;;  i               2   32[BANK0 ] int 
  2840 ;;  w               2   26[BANK0 ] int 
  2841 ;;  e               2   24[BANK0 ] int 
  2842 ;;  m               2   22[BANK0 ] int 
  2843 ;;  d               2   20[BANK0 ] int 
  2844 ;;  t               2   13[BANK0 ] int 
  2845 ;;  p               2   11[BANK0 ] int 
  2846 ;;  ne              2    9[BANK0 ] int 
  2847 ;;  sign            1   42[BANK0 ] unsigned char 
  2848 ;;  nmode           1   19[BANK0 ] unsigned char 
  2849 ;;  mode            1   18[BANK0 ] unsigned char 
  2850 ;;  pp              1   17[BANK0 ] unsigned char 
  2851 ;;  esign           1    0        unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  1    wreg      void 
  2854 ;; Registers used:
  2855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2861 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;Total ram usage:       53 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 5
  2868 ;; This function calls:
  2869 ;;		___fladd
  2870 ;;		___fldiv
  2871 ;;		___fleq
  2872 ;;		___flge
  2873 ;;		___flmul
  2874 ;;		___flneg
  2875 ;;		___flsub
  2876 ;;		___fltol
  2877 ;;		___fpclassifyf
  2878 ;;		_floorf
  2879 ;;		_labs
  2880 ;;		_memcpy
  2881 ;;		_pad
  2882 ;;		_strcpy
  2883 ;; This function is called by:
  2884 ;;		_vfpfcnvrt
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text4
  2889   001936                     __ptext4:
  2890                           	callstack 0
  2891   001936                     _efgtoa:
  2892                           	callstack 22
  2893   001936                     
  2894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2895   001936  0E00               	movlw	0
  2896   001938  0100               	movlb	0	; () banked
  2897   00193A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2898   00193C                     
  2899                           ; BSR set to: 0
  2900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2901   00193C  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2902   001940  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2903   001944  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2904   001948  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2905   00194C                     
  2906                           ; BSR set to: 0
  2907                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2908   00194C  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2909   00194E  EFAD  F00C         	goto	u4470
  2910   001952  EFAB  F00C         	goto	u4471
  2911   001956                     u4471:
  2912   001956  EFC1  F00C         	goto	l4509
  2913   00195A                     u4470:
  2914   00195A                     
  2915                           ; BSR set to: 0
  2916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2917   00195A  0E01               	movlw	1
  2918   00195C  6F8A               	movwf	efgtoa@sign& (0+255),b
  2919   00195E                     
  2920                           ; BSR set to: 0
  2921                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2922   00195E  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2923   001962  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2924   001966  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2925   00196A  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2926   00196E  EC2B  F02D         	call	___flneg	;wreg free
  2927   001972  C001  F08D         	movff	?___flneg,efgtoa@g
  2928   001976  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2929   00197A  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2930   00197E  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2931   001982                     l4509:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2934   001982  0E00               	movlw	0
  2935   001984  0100               	movlb	0	; () banked
  2936   001986  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2937   001988  0E00               	movlw	0
  2938   00198A  6F8B               	movwf	efgtoa@n& (0+255),b
  2939   00198C                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2942   00198C  C0EF  F07A         	movff	_width,efgtoa@w
  2943   001990  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  2944   001994                     
  2945                           ; BSR set to: 0
  2946                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2947   001994  518A               	movf	efgtoa@sign& (0+255),w,b
  2948   001996  B4D8               	btfsc	status,2,c
  2949   001998  EFD0  F00C         	goto	u4481
  2950   00199C  EFD2  F00C         	goto	u4480
  2951   0019A0                     u4481:
  2952   0019A0  EFE6  F00C         	goto	l4523
  2953   0019A4                     u4480:
  2954   0019A4                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2957   0019A4  518A               	movf	efgtoa@sign& (0+255),w,b
  2958   0019A6  A4D8               	btfss	status,2,c
  2959   0019A8  EFD8  F00C         	goto	u4491
  2960   0019AC  EFDA  F00C         	goto	u4490
  2961   0019B0                     u4491:
  2962   0019B0  EFE0  F00C         	goto	l4519
  2963   0019B4                     u4490:
  2964   0019B4                     
  2965                           ; BSR set to: 0
  2966   0019B4  0E00               	movlw	0
  2967   0019B6  6F70               	movwf	(_efgtoa$2410+1)& (0+255),b
  2968   0019B8  0E2B               	movlw	43
  2969   0019BA  6F6F               	movwf	_efgtoa$2410& (0+255),b
  2970   0019BC  EFE4  F00C         	goto	l4521
  2971   0019C0                     l4519:
  2972                           
  2973                           ; BSR set to: 0
  2974   0019C0  0E00               	movlw	0
  2975   0019C2  6F70               	movwf	(_efgtoa$2410+1)& (0+255),b
  2976   0019C4  0E2D               	movlw	45
  2977   0019C6  6F6F               	movwf	_efgtoa$2410& (0+255),b
  2978   0019C8                     l4521:
  2979                           
  2980                           ; BSR set to: 0
  2981   0019C8  C06F  F08A         	movff	_efgtoa$2410,efgtoa@sign
  2982   0019CC                     l4523:
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2986   0019CC  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  2987   0019D0  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2988   0019D4  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2989   0019D8  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2990   0019DC  ECB3  F024         	call	___fpclassifyf	;wreg free
  2991   0019E0  0401               	decf	?___fpclassifyf^0,w,c
  2992   0019E2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2993   0019E4  A4D8               	btfss	status,2,c
  2994   0019E6  EFF7  F00C         	goto	u4501
  2995   0019EA  EFF9  F00C         	goto	u4500
  2996   0019EE                     u4501:
  2997   0019EE  EF2C  F00D         	goto	l4541
  2998   0019F2                     u4500:
  2999   0019F2                     
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3001   0019F2  0100               	movlb	0	; () banked
  3002   0019F4  518A               	movf	efgtoa@sign& (0+255),w,b
  3003   0019F6  B4D8               	btfsc	status,2,c
  3004   0019F8  EF00  F00D         	goto	u4511
  3005   0019FC  EF02  F00D         	goto	u4510
  3006   001A00                     u4511:
  3007   001A00  EF0B  F00D         	goto	l4533
  3008   001A04                     u4510:
  3009   001A04                     
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3012   001A04  C08A  F10E         	movff	efgtoa@sign,_dbuf
  3013   001A08                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3016   001A08  077A               	decf	efgtoa@w& (0+255),f,b
  3017   001A0A  A0D8               	btfss	status,0,c
  3018   001A0C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3019   001A0E                     
  3020                           ; BSR set to: 0
  3021                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3022   001A0E  0E00               	movlw	0
  3023   001A10  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3024   001A12  0E01               	movlw	1
  3025   001A14  6F8B               	movwf	efgtoa@n& (0+255),b
  3026   001A16                     l4533:
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3030   001A16  0E0E               	movlw	low _dbuf
  3031   001A18  258B               	addwf	efgtoa@n& (0+255),w,b
  3032   001A1A  6E01               	movwf	strcpy@dest^0,c
  3033   001A1C  0E01               	movlw	high _dbuf
  3034   001A1E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3035   001A20  6E02               	movwf	(strcpy@dest+1)^0,c
  3036   001A22  0E50               	movlw	low STR_3
  3037   001A24  6E03               	movwf	strcpy@src^0,c
  3038   001A26  0E0E               	movlw	high STR_3
  3039   001A28  6E04               	movwf	(strcpy@src+1)^0,c
  3040   001A2A  EC2A  F02C         	call	_strcpy	;wreg free
  3041   001A2E                     l4535:
  3042                           
  3043                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3044   001A2E  0100               	movlb	0	; () banked
  3045   001A30  0EFD               	movlw	253
  3046   001A32  277A               	addwf	efgtoa@w& (0+255),f,b
  3047   001A34  0EFF               	movlw	255
  3048   001A36  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3049   001A38                     
  3050                           ; BSR set to: 0
  3051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3052   001A38  C060  F011         	movff	efgtoa@fp,pad@fp
  3053   001A3C  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3054   001A40  0E0E               	movlw	low _dbuf
  3055   001A42  6E13               	movwf	pad@buf^0,c
  3056   001A44  0E01               	movlw	high _dbuf
  3057   001A46  6E14               	movwf	(pad@buf+1)^0,c
  3058   001A48  C07A  F015         	movff	efgtoa@w,pad@p
  3059   001A4C  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3060   001A50  EC9D  F027         	call	_pad	;wreg free
  3061   001A54  EF97  F011         	goto	l1342
  3062   001A58                     l4541:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3065   001A58  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3066   001A5C  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3067   001A60  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3068   001A64  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3069   001A68  ECB3  F024         	call	___fpclassifyf	;wreg free
  3070   001A6C  5001               	movf	?___fpclassifyf^0,w,c
  3071   001A6E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3072   001A70  A4D8               	btfss	status,2,c
  3073   001A72  EF3D  F00D         	goto	u4521
  3074   001A76  EF3F  F00D         	goto	u4520
  3075   001A7A                     u4521:
  3076   001A7A  EF5F  F00D         	goto	l4559
  3077   001A7E                     u4520:
  3078   001A7E                     
  3079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3080   001A7E  0100               	movlb	0	; () banked
  3081   001A80  518A               	movf	efgtoa@sign& (0+255),w,b
  3082   001A82  B4D8               	btfsc	status,2,c
  3083   001A84  EF46  F00D         	goto	u4531
  3084   001A88  EF48  F00D         	goto	u4530
  3085   001A8C                     u4531:
  3086   001A8C  EF51  F00D         	goto	l4551
  3087   001A90                     u4530:
  3088   001A90                     
  3089                           ; BSR set to: 0
  3090                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3091   001A90  C08A  F10E         	movff	efgtoa@sign,_dbuf
  3092   001A94                     
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3095   001A94  077A               	decf	efgtoa@w& (0+255),f,b
  3096   001A96  A0D8               	btfss	status,0,c
  3097   001A98  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3098   001A9A                     
  3099                           ; BSR set to: 0
  3100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3101   001A9A  0E00               	movlw	0
  3102   001A9C  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3103   001A9E  0E01               	movlw	1
  3104   001AA0  6F8B               	movwf	efgtoa@n& (0+255),b
  3105   001AA2                     l4551:
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3109   001AA2  0E0E               	movlw	low _dbuf
  3110   001AA4  258B               	addwf	efgtoa@n& (0+255),w,b
  3111   001AA6  6E01               	movwf	strcpy@dest^0,c
  3112   001AA8  0E01               	movlw	high _dbuf
  3113   001AAA  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3114   001AAC  6E02               	movwf	(strcpy@dest+1)^0,c
  3115   001AAE  0E54               	movlw	low STR_6
  3116   001AB0  6E03               	movwf	strcpy@src^0,c
  3117   001AB2  0E0E               	movlw	high STR_6
  3118   001AB4  6E04               	movwf	(strcpy@src+1)^0,c
  3119   001AB6  EC2A  F02C         	call	_strcpy	;wreg free
  3120   001ABA  EF17  F00D         	goto	l4535
  3121   001ABE                     l4559:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3124   001ABE  0E00               	movlw	0
  3125   001AC0  0100               	movlb	0	; () banked
  3126   001AC2  6F91               	movwf	efgtoa@u& (0+255),b
  3127   001AC4  0E00               	movlw	0
  3128   001AC6  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3129   001AC8  0E80               	movlw	128
  3130   001ACA  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3131   001ACC  0E3F               	movlw	63
  3132   001ACE  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3133                           
  3134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3135   001AD0  0E00               	movlw	0
  3136   001AD2  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3137   001AD4  0E00               	movlw	0
  3138   001AD6  6F78               	movwf	efgtoa@e& (0+255),b
  3139   001AD8                     
  3140                           ; BSR set to: 0
  3141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3142   001AD8  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3143   001ADC  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3144   001AE0  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3145   001AE4  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3146   001AE8  0E00               	movlw	0
  3147   001AEA  6E36               	movwf	___fleq@ff2^0,c
  3148   001AEC  0E00               	movlw	0
  3149   001AEE  6E37               	movwf	(___fleq@ff2+1)^0,c
  3150   001AF0  0E00               	movlw	0
  3151   001AF2  6E38               	movwf	(___fleq@ff2+2)^0,c
  3152   001AF4  0E00               	movlw	0
  3153   001AF6  6E39               	movwf	(___fleq@ff2+3)^0,c
  3154   001AF8  EC97  F025         	call	___fleq	;wreg free
  3155   001AFC  B0D8               	btfsc	status,0,c
  3156   001AFE  EF83  F00D         	goto	u4541
  3157   001B02  EF85  F00D         	goto	u4540
  3158   001B06                     u4541:
  3159   001B06  EF64  F00E         	goto	l1345
  3160   001B0A                     u4540:
  3161   001B0A  EF92  F00D         	goto	l4567
  3162   001B0E                     l1347:
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3165   001B0E  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3166   001B12  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3167   001B16  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3168   001B1A  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3169   001B1E                     
  3170                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3171   001B1E  0100               	movlb	0	; () banked
  3172   001B20  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3173   001B22  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3174   001B24                     l4567:
  3175                           
  3176                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3177   001B24  C091  F011         	movff	efgtoa@u,___flmul@b
  3178   001B28  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3179   001B2C  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3180   001B30  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3181   001B34  0E00               	movlw	0
  3182   001B36  6E15               	movwf	___flmul@a^0,c
  3183   001B38  0E00               	movlw	0
  3184   001B3A  6E16               	movwf	(___flmul@a+1)^0,c
  3185   001B3C  0E20               	movlw	32
  3186   001B3E  6E17               	movwf	(___flmul@a+2)^0,c
  3187   001B40  0E41               	movlw	65
  3188   001B42  6E18               	movwf	(___flmul@a+3)^0,c
  3189   001B44  EC7B  F016         	call	___flmul	;wreg free
  3190   001B48  C011  F07C         	movff	?___flmul,efgtoa@ou
  3191   001B4C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3192   001B50  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3193   001B54  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3194   001B58  0100               	movlb	0	; () banked
  3195   001B5A  517C               	movf	efgtoa@ou& (0+255),w,b
  3196   001B5C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3197   001B5E  6E01               	movwf	labs@a^0,c
  3198   001B60  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3199   001B62  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3200   001B64  6E02               	movwf	(labs@a+1)^0,c
  3201   001B66  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3202   001B68  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3203   001B6A  6E03               	movwf	(labs@a+2)^0,c
  3204   001B6C  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3205   001B6E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3206   001B70  6E04               	movwf	(labs@a+3)^0,c
  3207   001B72  EC4F  F028         	call	_labs	;wreg free
  3208   001B76  BE04               	btfsc	(?_labs+3)^0,7,c
  3209   001B78  EFC9  F00D         	goto	u4551
  3210   001B7C  5004               	movf	(?_labs+3)^0,w,c
  3211   001B7E  1003               	iorwf	(?_labs+2)^0,w,c
  3212   001B80  1002               	iorwf	(?_labs+1)^0,w,c
  3213   001B82  E109               	bnz	u4550
  3214   001B84  0E02               	movlw	2
  3215   001B86  5C01               	subwf	?_labs^0,w,c
  3216   001B88  A0D8               	btfss	status,0,c
  3217   001B8A  EFC9  F00D         	goto	u4551
  3218   001B8E  EFCB  F00D         	goto	u4550
  3219   001B92                     u4551:
  3220   001B92  EF87  F00D         	goto	l1347
  3221   001B96                     u4550:
  3222   001B96  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3223   001B9A  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3224   001B9E  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3225   001BA2  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3226   001BA6  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3227   001BAA  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3228   001BAE  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3229   001BB2  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3230   001BB6  EC31  F024         	call	___flge	;wreg free
  3231   001BBA  A0D8               	btfss	status,0,c
  3232   001BBC  EFE2  F00D         	goto	u4561
  3233   001BC0  EFE4  F00D         	goto	u4560
  3234   001BC4                     u4561:
  3235   001BC4  EF87  F00D         	goto	l1347
  3236   001BC8                     u4560:
  3237   001BC8                     
  3238                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3239   001BC8  0100               	movlb	0	; () banked
  3240   001BCA  5191               	movf	efgtoa@u& (0+255),w,b
  3241   001BCC  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3242   001BCE  6E01               	movwf	labs@a^0,c
  3243   001BD0  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3244   001BD2  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3245   001BD4  6E02               	movwf	(labs@a+1)^0,c
  3246   001BD6  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3247   001BD8  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3248   001BDA  6E03               	movwf	(labs@a+2)^0,c
  3249   001BDC  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3250   001BDE  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3251   001BE0  6E04               	movwf	(labs@a+3)^0,c
  3252   001BE2  EC4F  F028         	call	_labs	;wreg free
  3253   001BE6  BE04               	btfsc	(?_labs+3)^0,7,c
  3254   001BE8  EF03  F00E         	goto	u4570
  3255   001BEC  5004               	movf	(?_labs+3)^0,w,c
  3256   001BEE  1003               	iorwf	(?_labs+2)^0,w,c
  3257   001BF0  1002               	iorwf	(?_labs+1)^0,w,c
  3258   001BF2  E107               	bnz	u4571
  3259   001BF4  0E02               	movlw	2
  3260   001BF6  5C01               	subwf	?_labs^0,w,c
  3261   001BF8  B0D8               	btfsc	status,0,c
  3262   001BFA  EF01  F00E         	goto	u4571
  3263   001BFE  EF03  F00E         	goto	u4570
  3264   001C02                     u4571:
  3265   001C02  EF4B  F00E         	goto	l4585
  3266   001C06                     u4570:
  3267   001C06                     l4575:
  3268                           
  3269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3270   001C06  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3271   001C0A  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3272   001C0E  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3273   001C12  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3276   001C16  EF64  F00E         	goto	l1345
  3277   001C1A                     l4577:
  3278                           
  3279                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3280   001C1A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3281   001C1E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3282   001C22  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3283   001C26  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3284   001C2A  0E00               	movlw	0
  3285   001C2C  6E36               	movwf	___fldiv@a^0,c
  3286   001C2E  0E00               	movlw	0
  3287   001C30  6E37               	movwf	(___fldiv@a+1)^0,c
  3288   001C32  0E20               	movlw	32
  3289   001C34  6E38               	movwf	(___fldiv@a+2)^0,c
  3290   001C36  0E41               	movlw	65
  3291   001C38  6E39               	movwf	(___fldiv@a+3)^0,c
  3292   001C3A  EC90  F018         	call	___fldiv	;wreg free
  3293   001C3E  C032  F091         	movff	?___fldiv,efgtoa@u
  3294   001C42  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3295   001C46  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3296   001C4A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3297   001C4E                     
  3298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3299   001C4E  0100               	movlb	0	; () banked
  3300   001C50  0778               	decf	efgtoa@e& (0+255),f,b
  3301   001C52  A0D8               	btfss	status,0,c
  3302   001C54  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3303   001C56                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3306   001C56  5191               	movf	efgtoa@u& (0+255),w,b
  3307   001C58  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3308   001C5A  6E01               	movwf	labs@a^0,c
  3309   001C5C  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3310   001C5E  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3311   001C60  6E02               	movwf	(labs@a+1)^0,c
  3312   001C62  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3313   001C64  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3314   001C66  6E03               	movwf	(labs@a+2)^0,c
  3315   001C68  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3316   001C6A  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3317   001C6C  6E04               	movwf	(labs@a+3)^0,c
  3318   001C6E  EC4F  F028         	call	_labs	;wreg free
  3319   001C72  BE04               	btfsc	(?_labs+3)^0,7,c
  3320   001C74  EF49  F00E         	goto	u4580
  3321   001C78  5004               	movf	(?_labs+3)^0,w,c
  3322   001C7A  1003               	iorwf	(?_labs+2)^0,w,c
  3323   001C7C  1002               	iorwf	(?_labs+1)^0,w,c
  3324   001C7E  E107               	bnz	u4581
  3325   001C80  0E02               	movlw	2
  3326   001C82  5C01               	subwf	?_labs^0,w,c
  3327   001C84  B0D8               	btfsc	status,0,c
  3328   001C86  EF47  F00E         	goto	u4581
  3329   001C8A  EF49  F00E         	goto	u4580
  3330   001C8E                     u4581:
  3331   001C8E  EF4B  F00E         	goto	l4585
  3332   001C92                     u4580:
  3333   001C92  EF03  F00E         	goto	l4575
  3334   001C96                     l4585:
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3337   001C96  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3338   001C9A  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3339   001C9E  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3340   001CA2  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3341   001CA6  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3342   001CAA  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3343   001CAE  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3344   001CB2  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3345   001CB6  EC31  F024         	call	___flge	;wreg free
  3346   001CBA  A0D8               	btfss	status,0,c
  3347   001CBC  EF62  F00E         	goto	u4591
  3348   001CC0  EF64  F00E         	goto	u4590
  3349   001CC4                     u4591:
  3350   001CC4  EF0D  F00E         	goto	l4577
  3351   001CC8                     u4590:
  3352   001CC8                     l1345:
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3355   001CC8  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3356                           
  3357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3358   001CCC  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3359   001CD0                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3361   001CD0  0100               	movlb	0	; () banked
  3362   001CD2  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3363   001CD4  EF6E  F00E         	goto	u4601
  3364   001CD8  EF70  F00E         	goto	u4600
  3365   001CDC                     u4601:
  3366   001CDC  EF76  F00E         	goto	l4591
  3367   001CE0                     u4600:
  3368   001CE0                     
  3369                           ; BSR set to: 0
  3370   001CE0  C0F1  F06B         	movff	_prec,efgtoa@p
  3371   001CE4  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3372   001CE8  EF7A  F00E         	goto	l4593
  3373   001CEC                     l4591:
  3374                           
  3375                           ; BSR set to: 0
  3376   001CEC  0E00               	movlw	0
  3377   001CEE  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3378   001CF0  0E06               	movlw	6
  3379   001CF2  6F6B               	movwf	efgtoa@p& (0+255),b
  3380   001CF4                     l4593:
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3384   001CF4  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3385   001CF8  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3386   001CFC                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3389   001CFC  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3390   001CFE  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3391   001D00                     
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3394   001D00  0E66               	movlw	102
  3395   001D02  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3396   001D04  A4D8               	btfss	status,2,c
  3397   001D06  EF87  F00E         	goto	u4611
  3398   001D0A  EF89  F00E         	goto	u4610
  3399   001D0E                     u4611:
  3400   001D0E  EFA9  F00E         	goto	l4607
  3401   001D12                     u4610:
  3402   001D12                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3405   001D12  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3406   001D14  EF90  F00E         	goto	u4620
  3407   001D18  EF8E  F00E         	goto	u4621
  3408   001D1C                     u4621:
  3409   001D1C  EF9C  F00E         	goto	l4603
  3410   001D20                     u4620:
  3411   001D20                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3414   001D20  0E00               	movlw	0
  3415   001D22  6F91               	movwf	efgtoa@u& (0+255),b
  3416   001D24  0E00               	movlw	0
  3417   001D26  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3418   001D28  0E80               	movlw	128
  3419   001D2A  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3420   001D2C  0E3F               	movlw	63
  3421   001D2E  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3424   001D30  0E00               	movlw	0
  3425   001D32  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3426   001D34  0E00               	movlw	0
  3427   001D36  6F78               	movwf	efgtoa@e& (0+255),b
  3428   001D38                     l4603:
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3432   001D38  0E67               	movlw	103
  3433   001D3A  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3434   001D3C  B4D8               	btfsc	status,2,c
  3435   001D3E  EFA3  F00E         	goto	u4631
  3436   001D42  EFA5  F00E         	goto	u4630
  3437   001D46                     u4631:
  3438   001D46  EFA9  F00E         	goto	l4607
  3439   001D4A                     u4630:
  3440   001D4A                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3443   001D4A  5178               	movf	efgtoa@e& (0+255),w,b
  3444   001D4C  2776               	addwf	efgtoa@m& (0+255),f,b
  3445   001D4E  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3446   001D50  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3447   001D52                     l4607:
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3451   001D52  0E00               	movlw	0
  3452   001D54  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3453   001D56  0E00               	movlw	0
  3454   001D58  6F80               	movwf	efgtoa@i& (0+255),b
  3455   001D5A                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3458   001D5A  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3459   001D5E  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3460   001D62  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3461   001D66  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3462   001D6A                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3465   001D6A  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3466   001D6E  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3467   001D72  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3468   001D76  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3471   001D7A  EF3A  F00F         	goto	l4621
  3472   001D7E                     l4613:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3476   001D7E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3477   001D82  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3478   001D86  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3479   001D8A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3480   001D8E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3481   001D92  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3482   001D96  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3483   001D9A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3484   001D9E  EC90  F018         	call	___fldiv	;wreg free
  3485   001DA2  C032  F04B         	movff	?___fldiv,floorf@x
  3486   001DA6  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3487   001DAA  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3488   001DAE  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3489   001DB2  ECB6  F01E         	call	_floorf	;wreg free
  3490   001DB6  C04B  F086         	movff	?_floorf,efgtoa@l
  3491   001DBA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3492   001DBE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3493   001DC2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3494                           
  3495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3496   001DC6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3497   001DCA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3498   001DCE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3499   001DD2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3500   001DD6  ECAE  F023         	call	___fltol	;wreg free
  3501   001DDA  C001  F074         	movff	?___fltol,efgtoa@d
  3502   001DDE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3503   001DE2                     
  3504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3505   001DE2  C082  F02A         	movff	efgtoa@h,___flsub@b
  3506   001DE6  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3507   001DEA  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3508   001DEE  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3509   001DF2  C086  F015         	movff	efgtoa@l,___flmul@a
  3510   001DF6  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3511   001DFA  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3512   001DFE  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3513   001E02  C091  F011         	movff	efgtoa@u,___flmul@b
  3514   001E06  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3515   001E0A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3516   001E0E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3517   001E12  EC7B  F016         	call	___flmul	;wreg free
  3518   001E16  C011  F02E         	movff	?___flmul,___flsub@a
  3519   001E1A  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3520   001E1E  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3521   001E22  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3522   001E26  EC07  F02C         	call	___flsub	;wreg free
  3523   001E2A  C02A  F082         	movff	?___flsub,efgtoa@h
  3524   001E2E  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3525   001E32  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3526   001E36  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3527   001E3A                     
  3528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3529   001E3A  C091  F032         	movff	efgtoa@u,___fldiv@b
  3530   001E3E  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3531   001E42  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3532   001E46  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3533   001E4A  0E00               	movlw	0
  3534   001E4C  6E36               	movwf	___fldiv@a^0,c
  3535   001E4E  0E00               	movlw	0
  3536   001E50  6E37               	movwf	(___fldiv@a+1)^0,c
  3537   001E52  0E20               	movlw	32
  3538   001E54  6E38               	movwf	(___fldiv@a+2)^0,c
  3539   001E56  0E41               	movlw	65
  3540   001E58  6E39               	movwf	(___fldiv@a+3)^0,c
  3541   001E5A  EC90  F018         	call	___fldiv	;wreg free
  3542   001E5E  C032  F091         	movff	?___fldiv,efgtoa@u
  3543   001E62  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3544   001E66  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3545   001E6A  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3546   001E6E                     
  3547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3548   001E6E  0100               	movlb	0	; () banked
  3549   001E70  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3550   001E72  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3551   001E74                     l4621:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3555   001E74  5176               	movf	efgtoa@m& (0+255),w,b
  3556   001E76  5D80               	subwf	efgtoa@i& (0+255),w,b
  3557   001E78  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3558   001E7A  0A80               	xorlw	128
  3559   001E7C  6F67               	movwf	??_efgtoa& (0+255),b
  3560   001E7E  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3561   001E80  0A80               	xorlw	128
  3562   001E82  5967               	subwfb	??_efgtoa& (0+255),w,b
  3563   001E84  A0D8               	btfss	status,0,c
  3564   001E86  EF47  F00F         	goto	u4641
  3565   001E8A  EF49  F00F         	goto	u4640
  3566   001E8E                     u4641:
  3567   001E8E  EFBF  F00E         	goto	l4613
  3568   001E92                     u4640:
  3569   001E92                     
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3572   001E92  C091  F011         	movff	efgtoa@u,___flmul@b
  3573   001E96  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3574   001E9A  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3575   001E9E  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3576   001EA2  0E00               	movlw	0
  3577   001EA4  6E15               	movwf	___flmul@a^0,c
  3578   001EA6  0E00               	movlw	0
  3579   001EA8  6E16               	movwf	(___flmul@a+1)^0,c
  3580   001EAA  0EA0               	movlw	160
  3581   001EAC  6E17               	movwf	(___flmul@a+2)^0,c
  3582   001EAE  0E40               	movlw	64
  3583   001EB0  6E18               	movwf	(___flmul@a+3)^0,c
  3584   001EB2  EC7B  F016         	call	___flmul	;wreg free
  3585   001EB6  C011  F086         	movff	?___flmul,efgtoa@l
  3586   001EBA  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3587   001EBE  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3588   001EC2  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3589   001EC6                     
  3590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3591   001EC6  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3592   001ECA  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3593   001ECE  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3594   001ED2  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3595   001ED6  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3596   001EDA  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3597   001EDE  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3598   001EE2  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3599   001EE6  EC31  F024         	call	___flge	;wreg free
  3600   001EEA  B0D8               	btfsc	status,0,c
  3601   001EEC  EF7A  F00F         	goto	u4651
  3602   001EF0  EF7C  F00F         	goto	u4650
  3603   001EF4                     u4651:
  3604   001EF4  EF87  F00F         	goto	l4629
  3605   001EF8                     u4650:
  3606   001EF8                     
  3607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3608   001EF8  0E00               	movlw	0
  3609   001EFA  0100               	movlb	0	; () banked
  3610   001EFC  6F86               	movwf	efgtoa@l& (0+255),b
  3611   001EFE  0E00               	movlw	0
  3612   001F00  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3613   001F02  0E00               	movlw	0
  3614   001F04  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3615   001F06  0E00               	movlw	0
  3616   001F08  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3617                           
  3618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3619   001F0A  EFB0  F00F         	goto	l4635
  3620   001F0E                     l4629:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3623   001F0E  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3624   001F12  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3625   001F16  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3626   001F1A  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3627   001F1E  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3628   001F22  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3629   001F26  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3630   001F2A  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3631   001F2E  EC97  F025         	call	___fleq	;wreg free
  3632   001F32  A0D8               	btfss	status,0,c
  3633   001F34  EF9E  F00F         	goto	u4661
  3634   001F38  EFA0  F00F         	goto	u4660
  3635   001F3C                     u4661:
  3636   001F3C  EFB0  F00F         	goto	l4635
  3637   001F40                     u4660:
  3638   001F40  0100               	movlb	0	; () banked
  3639   001F42  B174               	btfsc	efgtoa@d& (0+255),0,b
  3640   001F44  EFA6  F00F         	goto	u4671
  3641   001F48  EFA8  F00F         	goto	u4670
  3642   001F4C                     u4671:
  3643   001F4C  EFB0  F00F         	goto	l4635
  3644   001F50                     u4670:
  3645   001F50                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3648   001F50  0E00               	movlw	0
  3649   001F52  6F86               	movwf	efgtoa@l& (0+255),b
  3650   001F54  0E00               	movlw	0
  3651   001F56  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3652   001F58  0E00               	movlw	0
  3653   001F5A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3654   001F5C  0E00               	movlw	0
  3655   001F5E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3656   001F60                     l4635:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3659   001F60  C08D  F001         	movff	efgtoa@g,___fladd@b
  3660   001F64  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3661   001F68  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3662   001F6C  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3663   001F70  C086  F005         	movff	efgtoa@l,___fladd@a
  3664   001F74  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3665   001F78  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3666   001F7C  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3667   001F80  EC1B  F014         	call	___fladd	;wreg free
  3668   001F84  C001  F082         	movff	?___fladd,efgtoa@h
  3669   001F88  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3670   001F8C  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3671   001F90  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3672   001F94                     
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3674   001F94  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3675   001F98  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3676   001F9C  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3677   001FA0  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3678   001FA4  0E00               	movlw	0
  3679   001FA6  6E15               	movwf	___flmul@a^0,c
  3680   001FA8  0E00               	movlw	0
  3681   001FAA  6E16               	movwf	(___flmul@a+1)^0,c
  3682   001FAC  0E20               	movlw	32
  3683   001FAE  6E17               	movwf	(___flmul@a+2)^0,c
  3684   001FB0  0E41               	movlw	65
  3685   001FB2  6E18               	movwf	(___flmul@a+3)^0,c
  3686   001FB4  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3687   001FB8  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3688   001FBC  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3689   001FC0  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3690   001FC4  EC7B  F016         	call	___flmul	;wreg free
  3691   001FC8  C011  F02E         	movff	?___flmul,___flge@ff2
  3692   001FCC  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3693   001FD0  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3694   001FD4  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3695   001FD8  EC31  F024         	call	___flge	;wreg free
  3696   001FDC  A0D8               	btfss	status,0,c
  3697   001FDE  EFF3  F00F         	goto	u4681
  3698   001FE2  EFF5  F00F         	goto	u4680
  3699   001FE6                     u4681:
  3700   001FE6  EF1E  F010         	goto	l4647
  3701   001FEA                     u4680:
  3702   001FEA                     
  3703                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3704   001FEA  0100               	movlb	0	; () banked
  3705   001FEC  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3706   001FEE  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3707   001FF0                     
  3708                           ; BSR set to: 0
  3709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3710   001FF0  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3711   001FF4  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3712   001FF8  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3713   001FFC  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3714   002000  0E00               	movlw	0
  3715   002002  6E15               	movwf	___flmul@a^0,c
  3716   002004  0E00               	movlw	0
  3717   002006  6E16               	movwf	(___flmul@a+1)^0,c
  3718   002008  0E20               	movlw	32
  3719   00200A  6E17               	movwf	(___flmul@a+2)^0,c
  3720   00200C  0E41               	movlw	65
  3721   00200E  6E18               	movwf	(___flmul@a+3)^0,c
  3722   002010  EC7B  F016         	call	___flmul	;wreg free
  3723   002014  C011  F07C         	movff	?___flmul,efgtoa@ou
  3724   002018  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3725   00201C  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3726   002020  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3727   002024                     
  3728                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3729   002024  0E66               	movlw	102
  3730   002026  0100               	movlb	0	; () banked
  3731   002028  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3732   00202A  A4D8               	btfss	status,2,c
  3733   00202C  EF1A  F010         	goto	u4691
  3734   002030  EF1C  F010         	goto	u4690
  3735   002034                     u4691:
  3736   002034  EF1E  F010         	goto	l4647
  3737   002038                     u4690:
  3738   002038                     
  3739                           ; BSR set to: 0
  3740                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3741   002038  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3742   00203A  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3743   00203C                     l4647:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3746   00203C  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3747   002040  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3748   002044  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3749   002048  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3750   00204C                     
  3751                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3752   00204C  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3753   002050  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3754   002054                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3756   002054  0E00               	movlw	0
  3757   002056  0100               	movlb	0	; () banked
  3758   002058  6F71               	movwf	efgtoa@pp& (0+255),b
  3759   00205A                     
  3760                           ; BSR set to: 0
  3761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3762   00205A  0E00               	movlw	0
  3763   00205C  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3764   00205E  0E00               	movlw	0
  3765   002060  6F6D               	movwf	efgtoa@t& (0+255),b
  3766   002062                     
  3767                           ; BSR set to: 0
  3768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3769   002062  0E00               	movlw	0
  3770   002064  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3771   002066  0E00               	movlw	0
  3772   002068  6F80               	movwf	efgtoa@i& (0+255),b
  3773                           
  3774                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3775   00206A  EF1C  F011         	goto	l4697
  3776   00206E                     l4657:
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3780   00206E  C082  F032         	movff	efgtoa@h,___fldiv@b
  3781   002072  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3782   002076  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3783   00207A  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3784   00207E  C091  F036         	movff	efgtoa@u,___fldiv@a
  3785   002082  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3786   002086  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3787   00208A  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3788   00208E  EC90  F018         	call	___fldiv	;wreg free
  3789   002092  C032  F04B         	movff	?___fldiv,floorf@x
  3790   002096  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3791   00209A  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3792   00209E  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3793   0020A2  ECB6  F01E         	call	_floorf	;wreg free
  3794   0020A6  C04B  F086         	movff	?_floorf,efgtoa@l
  3795   0020AA  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3796   0020AE  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3797   0020B2  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3798                           
  3799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3800   0020B6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3801   0020BA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3802   0020BE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3803   0020C2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3804   0020C6  ECAE  F023         	call	___fltol	;wreg free
  3805   0020CA  BE02               	btfsc	(?___fltol+1)^0,7,c
  3806   0020CC  EF73  F010         	goto	u4700
  3807   0020D0  5002               	movf	(?___fltol+1)^0,w,c
  3808   0020D2  E107               	bnz	u4701
  3809   0020D4  0E0A               	movlw	10
  3810   0020D6  5C01               	subwf	?___fltol^0,w,c
  3811   0020D8  B0D8               	btfsc	status,0,c
  3812   0020DA  EF71  F010         	goto	u4701
  3813   0020DE  EF73  F010         	goto	u4700
  3814   0020E2                     u4701:
  3815   0020E2  EF83  F010         	goto	l4661
  3816   0020E6                     u4700:
  3817   0020E6  C086  F001         	movff	efgtoa@l,___fltol@f1
  3818   0020EA  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3819   0020EE  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3820   0020F2  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3821   0020F6  ECAE  F023         	call	___fltol	;wreg free
  3822   0020FA  C001  F074         	movff	?___fltol,efgtoa@d
  3823   0020FE  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3824   002102  EF88  F010         	goto	l1375
  3825   002106                     l4661:
  3826   002106  0E00               	movlw	0
  3827   002108  0100               	movlb	0	; () banked
  3828   00210A  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3829   00210C  0E09               	movlw	9
  3830   00210E  6F74               	movwf	efgtoa@d& (0+255),b
  3831   002110                     l1375:
  3832                           
  3833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3834   002110  0100               	movlb	0	; () banked
  3835   002112  5171               	movf	efgtoa@pp& (0+255),w,b
  3836   002114  A4D8               	btfss	status,2,c
  3837   002116  EF8F  F010         	goto	u4711
  3838   00211A  EF91  F010         	goto	u4710
  3839   00211E                     u4711:
  3840   00211E  EFB9  F010         	goto	l4681
  3841   002122                     u4710:
  3842   002122                     
  3843                           ; BSR set to: 0
  3844   002122  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3845   002124  EF98  F010         	goto	u4720
  3846   002128  EF96  F010         	goto	u4721
  3847   00212C                     u4721:
  3848   00212C  EFB9  F010         	goto	l4681
  3849   002130                     u4720:
  3850   002130                     
  3851                           ; BSR set to: 0
  3852                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3853   002130  0E0E               	movlw	low _dbuf
  3854   002132  258B               	addwf	efgtoa@n& (0+255),w,b
  3855   002134  6ED9               	movwf	fsr2l,c
  3856   002136  0E01               	movlw	high _dbuf
  3857   002138  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3858   00213A  6EDA               	movwf	fsr2h,c
  3859   00213C  0E2E               	movlw	46
  3860   00213E  6EDF               	movwf	indf2,c
  3861   002140                     
  3862                           ; BSR set to: 0
  3863   002140  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3864   002142  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3865   002144                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3868   002144  077A               	decf	efgtoa@w& (0+255),f,b
  3869   002146  A0D8               	btfss	status,0,c
  3870   002148  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3871   00214A                     
  3872                           ; BSR set to: 0
  3873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3874   00214A  0E01               	movlw	1
  3875   00214C  6F71               	movwf	efgtoa@pp& (0+255),b
  3876   00214E  EFB9  F010         	goto	l4681
  3877   002152                     l4673:
  3878                           
  3879                           ; BSR set to: 0
  3880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3881   002152  0E0E               	movlw	low _dbuf
  3882   002154  258B               	addwf	efgtoa@n& (0+255),w,b
  3883   002156  6ED9               	movwf	fsr2l,c
  3884   002158  0E01               	movlw	high _dbuf
  3885   00215A  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3886   00215C  6EDA               	movwf	fsr2h,c
  3887   00215E  0E30               	movlw	48
  3888   002160  6EDF               	movwf	indf2,c
  3889   002162                     
  3890                           ; BSR set to: 0
  3891   002162  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3892   002164  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3893   002166                     
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3896   002166  077A               	decf	efgtoa@w& (0+255),f,b
  3897   002168  A0D8               	btfss	status,0,c
  3898   00216A  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3899   00216C                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3902   00216C  076D               	decf	efgtoa@t& (0+255),f,b
  3903   00216E  A0D8               	btfss	status,0,c
  3904   002170  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3905   002172                     l4681:
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3909   002172  516D               	movf	efgtoa@t& (0+255),w,b
  3910   002174  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3911   002176  A4D8               	btfss	status,2,c
  3912   002178  EFC0  F010         	goto	u4731
  3913   00217C  EFC2  F010         	goto	u4730
  3914   002180                     u4731:
  3915   002180  EFA9  F010         	goto	l4673
  3916   002184                     u4730:
  3917   002184                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3920   002184  0E0E               	movlw	low _dbuf
  3921   002186  258B               	addwf	efgtoa@n& (0+255),w,b
  3922   002188  6ED9               	movwf	fsr2l,c
  3923   00218A  0E01               	movlw	high _dbuf
  3924   00218C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3925   00218E  6EDA               	movwf	fsr2h,c
  3926   002190  5174               	movf	efgtoa@d& (0+255),w,b
  3927   002192  0F30               	addlw	48
  3928   002194  6EDF               	movwf	indf2,c
  3929   002196                     
  3930                           ; BSR set to: 0
  3931   002196  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3932   002198  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3933   00219A                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3936   00219A  077A               	decf	efgtoa@w& (0+255),f,b
  3937   00219C  A0D8               	btfss	status,0,c
  3938   00219E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3939   0021A0                     
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3942   0021A0  C082  F02A         	movff	efgtoa@h,___flsub@b
  3943   0021A4  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3944   0021A8  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3945   0021AC  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3946   0021B0  C086  F015         	movff	efgtoa@l,___flmul@a
  3947   0021B4  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3948   0021B8  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3949   0021BC  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3950   0021C0  C091  F011         	movff	efgtoa@u,___flmul@b
  3951   0021C4  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3952   0021C8  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3953   0021CC  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3954   0021D0  EC7B  F016         	call	___flmul	;wreg free
  3955   0021D4  C011  F02E         	movff	?___flmul,___flsub@a
  3956   0021D8  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3957   0021DC  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3958   0021E0  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3959   0021E4  EC07  F02C         	call	___flsub	;wreg free
  3960   0021E8  C02A  F082         	movff	?___flsub,efgtoa@h
  3961   0021EC  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3962   0021F0  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3963   0021F4  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3964   0021F8                     
  3965                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3966   0021F8  C091  F032         	movff	efgtoa@u,___fldiv@b
  3967   0021FC  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3968   002200  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3969   002204  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3970   002208  0E00               	movlw	0
  3971   00220A  6E36               	movwf	___fldiv@a^0,c
  3972   00220C  0E00               	movlw	0
  3973   00220E  6E37               	movwf	(___fldiv@a+1)^0,c
  3974   002210  0E20               	movlw	32
  3975   002212  6E38               	movwf	(___fldiv@a+2)^0,c
  3976   002214  0E41               	movlw	65
  3977   002216  6E39               	movwf	(___fldiv@a+3)^0,c
  3978   002218  EC90  F018         	call	___fldiv	;wreg free
  3979   00221C  C032  F091         	movff	?___fldiv,efgtoa@u
  3980   002220  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3981   002224  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3982   002228  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3983   00222C                     
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  3985   00222C  0100               	movlb	0	; () banked
  3986   00222E  0769               	decf	efgtoa@ne& (0+255),f,b
  3987   002230  A0D8               	btfss	status,0,c
  3988   002232  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  3989   002234                     
  3990                           ; BSR set to: 0
  3991                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  3992   002234  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3993   002236  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3994   002238                     l4697:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3998   002238  5176               	movf	efgtoa@m& (0+255),w,b
  3999   00223A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4000   00223C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4001   00223E  0A80               	xorlw	128
  4002   002240  6F67               	movwf	??_efgtoa& (0+255),b
  4003   002242  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4004   002244  0A80               	xorlw	128
  4005   002246  5967               	subwfb	??_efgtoa& (0+255),w,b
  4006   002248  B0D8               	btfsc	status,0,c
  4007   00224A  EF29  F011         	goto	u4741
  4008   00224E  EF2B  F011         	goto	u4740
  4009   002252                     u4741:
  4010   002252  EF39  F011         	goto	l4701
  4011   002256                     u4740:
  4012   002256                     
  4013                           ; BSR set to: 0
  4014   002256  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4015   002258  EF37  F011         	goto	u4751
  4016   00225C  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4017   00225E  E109               	bnz	u4750
  4018   002260  0E4B               	movlw	75
  4019   002262  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4020   002264  A0D8               	btfss	status,0,c
  4021   002266  EF37  F011         	goto	u4751
  4022   00226A  EF39  F011         	goto	u4750
  4023   00226E                     u4751:
  4024   00226E  EF37  F010         	goto	l4657
  4025   002272                     u4750:
  4026   002272                     l4701:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4030   002272  0E00               	movlw	0
  4031   002274  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4032   002276  0E4F               	movlw	79
  4033   002278  6F80               	movwf	efgtoa@i& (0+255),b
  4034   00227A                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4037   00227A  0E0E               	movlw	low _dbuf
  4038   00227C  2580               	addwf	efgtoa@i& (0+255),w,b
  4039   00227E  6ED9               	movwf	fsr2l,c
  4040   002280  0E01               	movlw	high _dbuf
  4041   002282  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4042   002284  6EDA               	movwf	fsr2h,c
  4043   002286  0E00               	movlw	0
  4044   002288  6EDF               	movwf	indf2,c
  4045   00228A                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4048   00228A  0E0E               	movlw	low _dbuf
  4049   00228C  6F67               	movwf	??_efgtoa& (0+255),b
  4050   00228E  0E01               	movlw	high _dbuf
  4051   002290  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4052   002292  518B               	movf	efgtoa@n& (0+255),w,b
  4053   002294  5F67               	subwf	??_efgtoa& (0+255),f,b
  4054   002296  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4055   002298  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4056   00229A  5180               	movf	efgtoa@i& (0+255),w,b
  4057   00229C  2567               	addwf	??_efgtoa& (0+255),w,b
  4058   00229E  6E01               	movwf	memcpy@d1^0,c
  4059   0022A0  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4060   0022A2  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4061   0022A4  6E02               	movwf	(memcpy@d1+1)^0,c
  4062   0022A6  0E0E               	movlw	low _dbuf
  4063   0022A8  6E03               	movwf	memcpy@s1^0,c
  4064   0022AA  0E01               	movlw	high _dbuf
  4065   0022AC  6E04               	movwf	(memcpy@s1+1)^0,c
  4066   0022AE  C08B  F005         	movff	efgtoa@n,memcpy@n
  4067   0022B2  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4068   0022B6  EC3F  F02B         	call	_memcpy	;wreg free
  4069   0022BA                     
  4070                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4071   0022BA  0100               	movlb	0	; () banked
  4072   0022BC  518B               	movf	efgtoa@n& (0+255),w,b
  4073   0022BE  5D80               	subwf	efgtoa@i& (0+255),w,b
  4074   0022C0  6F8B               	movwf	efgtoa@n& (0+255),b
  4075   0022C2  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4076   0022C4  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4077   0022C6  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4078   0022C8                     
  4079                           ; BSR set to: 0
  4080                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4081   0022C8  518A               	movf	efgtoa@sign& (0+255),w,b
  4082   0022CA  A4D8               	btfss	status,2,c
  4083   0022CC  EF6A  F011         	goto	u4761
  4084   0022D0  EF6D  F011         	goto	u4760
  4085   0022D4                     u4761:
  4086   0022D4  0E01               	movlw	1
  4087   0022D6  EF6E  F011         	goto	u4770
  4088   0022DA                     u4760:
  4089   0022DA  0E00               	movlw	0
  4090   0022DC                     u4770:
  4091   0022DC  6F80               	movwf	efgtoa@i& (0+255),b
  4092   0022DE  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4093   0022E0                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4096   0022E0  518A               	movf	efgtoa@sign& (0+255),w,b
  4097   0022E2  B4D8               	btfsc	status,2,c
  4098   0022E4  EF76  F011         	goto	u4781
  4099   0022E8  EF78  F011         	goto	u4780
  4100   0022EC                     u4781:
  4101   0022EC  EF83  F011         	goto	l4715
  4102   0022F0                     u4780:
  4103   0022F0                     
  4104                           ; BSR set to: 0
  4105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4106   0022F0  078B               	decf	efgtoa@n& (0+255),f,b
  4107   0022F2  A0D8               	btfss	status,0,c
  4108   0022F4  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4109   0022F6  0E0E               	movlw	low _dbuf
  4110   0022F8  258B               	addwf	efgtoa@n& (0+255),w,b
  4111   0022FA  6ED9               	movwf	fsr2l,c
  4112   0022FC  0E01               	movlw	high _dbuf
  4113   0022FE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4114   002300  6EDA               	movwf	fsr2h,c
  4115   002302  C08A  FFDF         	movff	efgtoa@sign,indf2
  4116   002306                     l4715:
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4120   002306  5180               	movf	efgtoa@i& (0+255),w,b
  4121   002308  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4122   00230A  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4123   00230C  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4124   00230E                     
  4125                           ; BSR set to: 0
  4126                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4127   00230E  C060  F011         	movff	efgtoa@fp,pad@fp
  4128   002312  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4129   002316  0E0E               	movlw	low _dbuf
  4130   002318  258B               	addwf	efgtoa@n& (0+255),w,b
  4131   00231A  6E13               	movwf	pad@buf^0,c
  4132   00231C  0E01               	movlw	high _dbuf
  4133   00231E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4134   002320  6E14               	movwf	(pad@buf+1)^0,c
  4135   002322  C07A  F015         	movff	efgtoa@w,pad@p
  4136   002326  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4137   00232A  EC9D  F027         	call	_pad	;wreg free
  4138   00232E                     l1342:
  4139   00232E  0012               	return		;funcret
  4140   002330                     __end_of_efgtoa:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _strcpy *****************
  4144 ;; Defined at:
  4145 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4148 ;;		 -> dbuf(80), 
  4149 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4150 ;;		 -> STR_6(4), STR_3(4), 
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  d               2    6[COMRAM] PTR unsigned char 
  4153 ;;		 -> dbuf(80), 
  4154 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4155 ;;		 -> STR_6(4), STR_3(4), 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;                  2    0[COMRAM] PTR unsigned char 
  4158 ;; Registers used:
  4159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4166 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4168 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;Total ram usage:        8 bytes
  4170 ;; Hardware stack levels used: 1
  4171 ;; Hardware stack levels required when called: 1
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_efgtoa
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text5
  4180   005854                     __ptext5:
  4181                           	callstack 0
  4182   005854                     _strcpy:
  4183                           	callstack 25
  4184   005854  C003  F005         	movff	strcpy@src,strcpy@s
  4185   005858  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4186   00585C  C001  F007         	movff	strcpy@dest,strcpy@d
  4187   005860  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4188   005864                     l4327:
  4189   005864  C005  FFF6         	movff	strcpy@s,tblptrl
  4190   005868  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4191   00586C  4A05               	infsnz	strcpy@s^0,f,c
  4192   00586E  2A06               	incf	(strcpy@s+1)^0,f,c
  4193   005870                     	if	0	;tblptru may be non-zero
  4194   005870                     	endif
  4195   005870                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4196   005870  0E00               	movlw	low (__mediumconst shr (0+16))
  4197   005872  6EF8               	movwf	tblptru,c
  4198   005874                     	endif
  4199   005874  C007  FFD9         	movff	strcpy@d,fsr2l
  4200   005878  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4201   00587C  4A07               	infsnz	strcpy@d^0,f,c
  4202   00587E  2A08               	incf	(strcpy@d+1)^0,f,c
  4203   005880  0008               	tblrd		*
  4204   005882  CFF5 FFDF          	movff	tablat,indf2
  4205   005886  50DF               	movf	indf2,w,c
  4206   005888  A4D8               	btfss	status,2,c
  4207   00588A  EF49  F02C         	goto	u4121
  4208   00588E  EF4B  F02C         	goto	u4120
  4209   005892                     u4121:
  4210   005892  EF32  F02C         	goto	l4327
  4211   005896                     u4120:
  4212   005896  0012               	return		;funcret
  4213   005898                     __end_of_strcpy:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _memcpy *****************
  4217 ;; Defined at:
  4218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  d1              2    0[COMRAM] PTR void 
  4221 ;;		 -> dbuf(80), 
  4222 ;;  s1              2    2[COMRAM] PTR const void 
  4223 ;;		 -> dbuf(80), 
  4224 ;;  n               2    4[COMRAM] unsigned int 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4227 ;;		 -> dbuf(80), 
  4228 ;;  d               2    6[COMRAM] PTR unsigned char 
  4229 ;;		 -> dbuf(80), 
  4230 ;;  tmp             1   10[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  2    0[COMRAM] PTR void 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4240 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;Total ram usage:       11 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_efgtoa
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text6
  4255   00567E                     __ptext6:
  4256                           	callstack 0
  4257   00567E                     _memcpy:
  4258                           	callstack 25
  4259   00567E  C003  F009         	movff	memcpy@s1,memcpy@s
  4260   005682  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4261   005686  C001  F007         	movff	memcpy@d1,memcpy@d
  4262   00568A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4263   00568E  EF59  F02B         	goto	l4371
  4264   005692                     l4363:
  4265   005692  C009  FFD9         	movff	memcpy@s,fsr2l
  4266   005696  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4267   00569A  50DF               	movf	indf2,w,c
  4268   00569C  6E0B               	movwf	memcpy@tmp^0,c
  4269   00569E  4A09               	infsnz	memcpy@s^0,f,c
  4270   0056A0  2A0A               	incf	(memcpy@s+1)^0,f,c
  4271   0056A2  C007  FFD9         	movff	memcpy@d,fsr2l
  4272   0056A6  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4273   0056AA  C00B  FFDF         	movff	memcpy@tmp,indf2
  4274   0056AE  4A07               	infsnz	memcpy@d^0,f,c
  4275   0056B0  2A08               	incf	(memcpy@d+1)^0,f,c
  4276   0056B2                     l4371:
  4277   0056B2  0605               	decf	memcpy@n^0,f,c
  4278   0056B4  A0D8               	btfss	status,0,c
  4279   0056B6  0606               	decf	(memcpy@n+1)^0,f,c
  4280   0056B8  2805               	incf	memcpy@n^0,w,c
  4281   0056BA  E106               	bnz	u4241
  4282   0056BC  2806               	incf	(memcpy@n+1)^0,w,c
  4283   0056BE  A4D8               	btfss	status,2,c
  4284   0056C0  EF64  F02B         	goto	u4241
  4285   0056C4  EF66  F02B         	goto	u4240
  4286   0056C8                     u4241:
  4287   0056C8  EF49  F02B         	goto	l4363
  4288   0056CC                     u4240:
  4289   0056CC  0012               	return		;funcret
  4290   0056CE                     __end_of_memcpy:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _labs *****************
  4294 ;; Defined at:
  4295 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  a               4    0[COMRAM] long 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  4    0[COMRAM] long 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4313 ;;Total ram usage:        8 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_efgtoa
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text7
  4324   00509E                     __ptext7:
  4325                           	callstack 0
  4326   00509E                     _labs:
  4327                           	callstack 25
  4328   00509E  BE04               	btfsc	(labs@a+3)^0,7,c
  4329   0050A0  EF5E  F028         	goto	u4130
  4330   0050A4  5004               	movf	(labs@a+3)^0,w,c
  4331   0050A6  1003               	iorwf	(labs@a+2)^0,w,c
  4332   0050A8  1002               	iorwf	(labs@a+1)^0,w,c
  4333   0050AA  E106               	bnz	u4131
  4334   0050AC  0401               	decf	labs@a^0,w,c
  4335   0050AE  B0D8               	btfsc	status,0,c
  4336   0050B0  EF5C  F028         	goto	u4131
  4337   0050B4  EF5E  F028         	goto	u4130
  4338   0050B8                     u4131:
  4339   0050B8  EF79  F028         	goto	l1447
  4340   0050BC                     u4130:
  4341   0050BC  C001  F005         	movff	labs@a,??_labs
  4342   0050C0  C002  F006         	movff	labs@a+1,??_labs+1
  4343   0050C4  C003  F007         	movff	labs@a+2,??_labs+2
  4344   0050C8  C004  F008         	movff	labs@a+3,??_labs+3
  4345   0050CC  1E05               	comf	??_labs^0,f,c
  4346   0050CE  1E06               	comf	(??_labs+1)^0,f,c
  4347   0050D0  1E07               	comf	(??_labs+2)^0,f,c
  4348   0050D2  1E08               	comf	(??_labs+3)^0,f,c
  4349   0050D4  2A05               	incf	??_labs^0,f,c
  4350   0050D6  0E00               	movlw	0
  4351   0050D8  2206               	addwfc	(??_labs+1)^0,f,c
  4352   0050DA  2207               	addwfc	(??_labs+2)^0,f,c
  4353   0050DC  2208               	addwfc	(??_labs+3)^0,f,c
  4354   0050DE  C005  F001         	movff	??_labs,?_labs
  4355   0050E2  C006  F002         	movff	??_labs+1,?_labs+1
  4356   0050E6  C007  F003         	movff	??_labs+2,?_labs+2
  4357   0050EA  C008  F004         	movff	??_labs+3,?_labs+3
  4358   0050EE  EF81  F028         	goto	l1450
  4359   0050F2                     l1447:
  4360   0050F2  C001  F001         	movff	labs@a,?_labs
  4361   0050F6  C002  F002         	movff	labs@a+1,?_labs+1
  4362   0050FA  C003  F003         	movff	labs@a+2,?_labs+2
  4363   0050FE  C004  F004         	movff	labs@a+3,?_labs+3
  4364   005102                     l1450:
  4365   005102  0012               	return		;funcret
  4366   005104                     __end_of_labs:
  4367                           	callstack 0
  4368                           
  4369 ;; *************** function _floorf *****************
  4370 ;; Defined at:
  4371 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  x               4   74[COMRAM] float 
  4374 ;; Auto vars:     Size  Location     Type
  4375 ;;  u               4   90[COMRAM] struct .
  4376 ;;  m               4   84[COMRAM] unsigned long 
  4377 ;;  e               2   88[COMRAM] int 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  4   74[COMRAM] float 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;Total ram usage:       20 bytes
  4392 ;; Hardware stack levels used: 1
  4393 ;; Hardware stack levels required when called: 1
  4394 ;; This function calls:
  4395 ;;		Nothing
  4396 ;; This function is called by:
  4397 ;;		_efgtoa
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text8
  4402   003D6C                     __ptext8:
  4403                           	callstack 0
  4404   003D6C                     _floorf:
  4405                           	callstack 25
  4406   003D6C  C0E7  F05B         	movff	floorf@F526,floorf@u
  4407   003D70  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  4408   003D74  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  4409   003D78  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  4410   003D7C  C04B  F05B         	movff	floorf@x,floorf@u
  4411   003D80  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4412   003D84  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4413   003D88  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4414   003D8C  0E81               	movlw	129
  4415   003D8E  6E4F               	movwf	??_floorf^0,c
  4416   003D90  0EFF               	movlw	255
  4417   003D92  6E50               	movwf	(??_floorf+1)^0,c
  4418   003D94  C05B  F051         	movff	floorf@u,??_floorf+2
  4419   003D98  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4420   003D9C  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4421   003DA0  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4422   003DA4  0E18               	movlw	24
  4423   003DA6  EFDA  F01E         	goto	u4140
  4424   003DAA                     u4145:
  4425   003DAA  90D8               	bcf	status,0,c
  4426   003DAC  3254               	rrcf	(??_floorf+5)^0,f,c
  4427   003DAE  3253               	rrcf	(??_floorf+4)^0,f,c
  4428   003DB0  3252               	rrcf	(??_floorf+3)^0,f,c
  4429   003DB2  3251               	rrcf	(??_floorf+2)^0,f,c
  4430   003DB4                     u4140:
  4431   003DB4  2EE8               	decfsz	wreg,f,c
  4432   003DB6  EFD5  F01E         	goto	u4145
  4433   003DBA  5051               	movf	(??_floorf+2)^0,w,c
  4434   003DBC  244F               	addwf	??_floorf^0,w,c
  4435   003DBE  6E59               	movwf	floorf@e^0,c
  4436   003DC0  0E00               	movlw	0
  4437   003DC2  2050               	addwfc	(??_floorf+1)^0,w,c
  4438   003DC4  6E5A               	movwf	(floorf@e+1)^0,c
  4439   003DC6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4440   003DC8  EFEF  F01E         	goto	u4151
  4441   003DCC  505A               	movf	(floorf@e+1)^0,w,c
  4442   003DCE  E109               	bnz	u4150
  4443   003DD0  0E17               	movlw	23
  4444   003DD2  5C59               	subwf	floorf@e^0,w,c
  4445   003DD4  A0D8               	btfss	status,0,c
  4446   003DD6  EFEF  F01E         	goto	u4151
  4447   003DDA  EFF1  F01E         	goto	u4150
  4448   003DDE                     u4151:
  4449   003DDE  EFFB  F01E         	goto	l4339
  4450   003DE2                     u4150:
  4451   003DE2                     l4337:
  4452   003DE2  C04B  F04B         	movff	floorf@x,?_floorf
  4453   003DE6  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4454   003DEA  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4455   003DEE  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4456   003DF2  EFBE  F01F         	goto	l1436
  4457   003DF6                     l4339:
  4458   003DF6  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4459   003DF8  EF00  F01F         	goto	u4161
  4460   003DFC  EF02  F01F         	goto	u4160
  4461   003E00                     u4161:
  4462   003E00  EF72  F01F         	goto	l4349
  4463   003E04                     u4160:
  4464   003E04  C059  F04F         	movff	floorf@e,??_floorf
  4465   003E08  0EFF               	movlw	255
  4466   003E0A  6E50               	movwf	(??_floorf+1)^0,c
  4467   003E0C  0EFF               	movlw	255
  4468   003E0E  6E51               	movwf	(??_floorf+2)^0,c
  4469   003E10  0E7F               	movlw	127
  4470   003E12  6E52               	movwf	(??_floorf+3)^0,c
  4471   003E14  0E00               	movlw	0
  4472   003E16  6E53               	movwf	(??_floorf+4)^0,c
  4473   003E18                     u4175:
  4474   003E18  664F               	tstfsz	??_floorf^0,c
  4475   003E1A  EF11  F01F         	goto	u4176
  4476   003E1E  EF19  F01F         	goto	u4177
  4477   003E22                     u4176:
  4478   003E22  3453               	rlcf	(??_floorf+4)^0,w,c
  4479   003E24  3253               	rrcf	(??_floorf+4)^0,f,c
  4480   003E26  3252               	rrcf	(??_floorf+3)^0,f,c
  4481   003E28  3251               	rrcf	(??_floorf+2)^0,f,c
  4482   003E2A  3250               	rrcf	(??_floorf+1)^0,f,c
  4483   003E2C  2E4F               	decfsz	??_floorf^0,f,c
  4484   003E2E  EF0C  F01F         	goto	u4175
  4485   003E32                     u4177:
  4486   003E32  C050  F055         	movff	??_floorf+1,floorf@m
  4487   003E36  C051  F056         	movff	??_floorf+2,floorf@m+1
  4488   003E3A  C052  F057         	movff	??_floorf+3,floorf@m+2
  4489   003E3E  C053  F058         	movff	??_floorf+4,floorf@m+3
  4490   003E42  5055               	movf	floorf@m^0,w,c
  4491   003E44  145B               	andwf	floorf@u^0,w,c
  4492   003E46  6E4F               	movwf	??_floorf^0,c
  4493   003E48  5056               	movf	(floorf@m+1)^0,w,c
  4494   003E4A  145C               	andwf	(floorf@u+1)^0,w,c
  4495   003E4C  6E50               	movwf	(??_floorf+1)^0,c
  4496   003E4E  5057               	movf	(floorf@m+2)^0,w,c
  4497   003E50  145D               	andwf	(floorf@u+2)^0,w,c
  4498   003E52  6E51               	movwf	(??_floorf+2)^0,c
  4499   003E54  5058               	movf	(floorf@m+3)^0,w,c
  4500   003E56  145E               	andwf	(floorf@u+3)^0,w,c
  4501   003E58  6E52               	movwf	(??_floorf+3)^0,c
  4502   003E5A  504F               	movf	??_floorf^0,w,c
  4503   003E5C  1050               	iorwf	(??_floorf+1)^0,w,c
  4504   003E5E  1051               	iorwf	(??_floorf+2)^0,w,c
  4505   003E60  1052               	iorwf	(??_floorf+3)^0,w,c
  4506   003E62  A4D8               	btfss	status,2,c
  4507   003E64  EF36  F01F         	goto	u4181
  4508   003E68  EF38  F01F         	goto	u4180
  4509   003E6C                     u4181:
  4510   003E6C  EF3A  F01F         	goto	l4345
  4511   003E70                     u4180:
  4512   003E70  EFF1  F01E         	goto	l4337
  4513   003E74                     l4345:
  4514   003E74  C05B  F04F         	movff	floorf@u,??_floorf
  4515   003E78  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4516   003E7C  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4517   003E80  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4518   003E84  0E20               	movlw	32
  4519   003E86  EF4A  F01F         	goto	u4190
  4520   003E8A                     u4195:
  4521   003E8A  90D8               	bcf	status,0,c
  4522   003E8C  3252               	rrcf	(??_floorf+3)^0,f,c
  4523   003E8E  3251               	rrcf	(??_floorf+2)^0,f,c
  4524   003E90  3250               	rrcf	(??_floorf+1)^0,f,c
  4525   003E92  324F               	rrcf	??_floorf^0,f,c
  4526   003E94                     u4190:
  4527   003E94  2EE8               	decfsz	wreg,f,c
  4528   003E96  EF45  F01F         	goto	u4195
  4529   003E9A  504F               	movf	??_floorf^0,w,c
  4530   003E9C  1050               	iorwf	(??_floorf+1)^0,w,c
  4531   003E9E  1051               	iorwf	(??_floorf+2)^0,w,c
  4532   003EA0  1052               	iorwf	(??_floorf+3)^0,w,c
  4533   003EA2  B4D8               	btfsc	status,2,c
  4534   003EA4  EF56  F01F         	goto	u4201
  4535   003EA8  EF58  F01F         	goto	u4200
  4536   003EAC                     u4201:
  4537   003EAC  EF60  F01F         	goto	l1439
  4538   003EB0                     u4200:
  4539   003EB0  5055               	movf	floorf@m^0,w,c
  4540   003EB2  265B               	addwf	floorf@u^0,f,c
  4541   003EB4  5056               	movf	(floorf@m+1)^0,w,c
  4542   003EB6  225C               	addwfc	(floorf@u+1)^0,f,c
  4543   003EB8  5057               	movf	(floorf@m+2)^0,w,c
  4544   003EBA  225D               	addwfc	(floorf@u+2)^0,f,c
  4545   003EBC  5058               	movf	(floorf@m+3)^0,w,c
  4546   003EBE  225E               	addwfc	(floorf@u+3)^0,f,c
  4547   003EC0                     l1439:
  4548   003EC0  1C55               	comf	floorf@m^0,w,c
  4549   003EC2  6E4F               	movwf	??_floorf^0,c
  4550   003EC4  1C56               	comf	(floorf@m+1)^0,w,c
  4551   003EC6  6E50               	movwf	(??_floorf+1)^0,c
  4552   003EC8  1C57               	comf	(floorf@m+2)^0,w,c
  4553   003ECA  6E51               	movwf	(??_floorf+2)^0,c
  4554   003ECC  1C58               	comf	(floorf@m+3)^0,w,c
  4555   003ECE  6E52               	movwf	(??_floorf+3)^0,c
  4556   003ED0  504F               	movf	??_floorf^0,w,c
  4557   003ED2  165B               	andwf	floorf@u^0,f,c
  4558   003ED4  5050               	movf	(??_floorf+1)^0,w,c
  4559   003ED6  165C               	andwf	(floorf@u+1)^0,f,c
  4560   003ED8  5051               	movf	(??_floorf+2)^0,w,c
  4561   003EDA  165D               	andwf	(floorf@u+2)^0,f,c
  4562   003EDC  5052               	movf	(??_floorf+3)^0,w,c
  4563   003EDE  165E               	andwf	(floorf@u+3)^0,f,c
  4564   003EE0  EFB6  F01F         	goto	l4357
  4565   003EE4                     l4349:
  4566   003EE4  C05B  F04F         	movff	floorf@u,??_floorf
  4567   003EE8  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4568   003EEC  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4569   003EF0  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4570   003EF4  0E20               	movlw	32
  4571   003EF6  EF82  F01F         	goto	u4210
  4572   003EFA                     u4215:
  4573   003EFA  90D8               	bcf	status,0,c
  4574   003EFC  3252               	rrcf	(??_floorf+3)^0,f,c
  4575   003EFE  3251               	rrcf	(??_floorf+2)^0,f,c
  4576   003F00  3250               	rrcf	(??_floorf+1)^0,f,c
  4577   003F02  324F               	rrcf	??_floorf^0,f,c
  4578   003F04                     u4210:
  4579   003F04  2EE8               	decfsz	wreg,f,c
  4580   003F06  EF7D  F01F         	goto	u4215
  4581   003F0A  504F               	movf	??_floorf^0,w,c
  4582   003F0C  1050               	iorwf	(??_floorf+1)^0,w,c
  4583   003F0E  1051               	iorwf	(??_floorf+2)^0,w,c
  4584   003F10  1052               	iorwf	(??_floorf+3)^0,w,c
  4585   003F12  A4D8               	btfss	status,2,c
  4586   003F14  EF8E  F01F         	goto	u4221
  4587   003F18  EF90  F01F         	goto	u4220
  4588   003F1C                     u4221:
  4589   003F1C  EF9A  F01F         	goto	l4353
  4590   003F20                     u4220:
  4591   003F20  0E00               	movlw	0
  4592   003F22  6E5B               	movwf	floorf@u^0,c
  4593   003F24  0E00               	movlw	0
  4594   003F26  6E5C               	movwf	(floorf@u+1)^0,c
  4595   003F28  0E00               	movlw	0
  4596   003F2A  6E5D               	movwf	(floorf@u+2)^0,c
  4597   003F2C  0E00               	movlw	0
  4598   003F2E  6E5E               	movwf	(floorf@u+3)^0,c
  4599   003F30  EFB6  F01F         	goto	l4357
  4600   003F34                     l4353:
  4601   003F34  90D8               	bcf	status,0,c
  4602   003F36  345B               	rlcf	floorf@u^0,w,c
  4603   003F38  6E4F               	movwf	??_floorf^0,c
  4604   003F3A  345C               	rlcf	(floorf@u+1)^0,w,c
  4605   003F3C  6E50               	movwf	(??_floorf+1)^0,c
  4606   003F3E  345D               	rlcf	(floorf@u+2)^0,w,c
  4607   003F40  6E51               	movwf	(??_floorf+2)^0,c
  4608   003F42  345E               	rlcf	(floorf@u+3)^0,w,c
  4609   003F44  6E52               	movwf	(??_floorf+3)^0,c
  4610   003F46  504F               	movf	??_floorf^0,w,c
  4611   003F48  1050               	iorwf	(??_floorf+1)^0,w,c
  4612   003F4A  1051               	iorwf	(??_floorf+2)^0,w,c
  4613   003F4C  1052               	iorwf	(??_floorf+3)^0,w,c
  4614   003F4E  B4D8               	btfsc	status,2,c
  4615   003F50  EFAC  F01F         	goto	u4231
  4616   003F54  EFAE  F01F         	goto	u4230
  4617   003F58                     u4231:
  4618   003F58  EFB6  F01F         	goto	l4357
  4619   003F5C                     u4230:
  4620   003F5C  0E00               	movlw	0
  4621   003F5E  6E5B               	movwf	floorf@u^0,c
  4622   003F60  0E00               	movlw	0
  4623   003F62  6E5C               	movwf	(floorf@u+1)^0,c
  4624   003F64  0E80               	movlw	128
  4625   003F66  6E5D               	movwf	(floorf@u+2)^0,c
  4626   003F68  0EBF               	movlw	191
  4627   003F6A  6E5E               	movwf	(floorf@u+3)^0,c
  4628   003F6C                     l4357:
  4629   003F6C  C05B  F04B         	movff	floorf@u,?_floorf
  4630   003F70  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4631   003F74  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4632   003F78  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4633   003F7C                     l1436:
  4634   003F7C  0012               	return		;funcret
  4635   003F7E                     __end_of_floorf:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function ___fpclassifyf *****************
  4639 ;; Defined at:
  4640 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  x               4    0[COMRAM] float 
  4643 ;; Auto vars:     Size  Location     Type
  4644 ;;  u               4   10[COMRAM] struct .
  4645 ;;  e               2    8[COMRAM] int 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  2    0[COMRAM] int 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4655 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4656 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4657 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4658 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;Total ram usage:       14 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_efgtoa
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text9
  4670   004966                     __ptext9:
  4671                           	callstack 0
  4672   004966                     ___fpclassifyf:
  4673                           	callstack 25
  4674   004966  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4675   00496A  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4676   00496E  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4677   004972  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4678   004976  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4679   00497A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4680   00497E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4681   004982  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4682   004986  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4683   00498A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4684   00498E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4685   004992  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4686   004996  0E18               	movlw	24
  4687   004998  EFD3  F024         	goto	u4050
  4688   00499C                     u4055:
  4689   00499C  90D8               	bcf	status,0,c
  4690   00499E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4691   0049A0  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4692   0049A2  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4693   0049A4  3205               	rrcf	??___fpclassifyf^0,f,c
  4694   0049A6                     u4050:
  4695   0049A6  2EE8               	decfsz	wreg,f,c
  4696   0049A8  EFCE  F024         	goto	u4055
  4697   0049AC  5005               	movf	??___fpclassifyf^0,w,c
  4698   0049AE  6E09               	movwf	___fpclassifyf@e^0,c
  4699   0049B0  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4700   0049B2  5009               	movf	___fpclassifyf@e^0,w,c
  4701   0049B4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4702   0049B6  A4D8               	btfss	status,2,c
  4703   0049B8  EFE0  F024         	goto	u4061
  4704   0049BC  EFE2  F024         	goto	u4060
  4705   0049C0                     u4061:
  4706   0049C0  EF02  F025         	goto	l4315
  4707   0049C4                     u4060:
  4708   0049C4  90D8               	bcf	status,0,c
  4709   0049C6  340B               	rlcf	___fpclassifyf@u^0,w,c
  4710   0049C8  6E05               	movwf	??___fpclassifyf^0,c
  4711   0049CA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4712   0049CC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4713   0049CE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4714   0049D0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4715   0049D2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4716   0049D4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4717   0049D6  5005               	movf	??___fpclassifyf^0,w,c
  4718   0049D8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4719   0049DA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4720   0049DC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4721   0049DE  A4D8               	btfss	status,2,c
  4722   0049E0  EFF4  F024         	goto	u4071
  4723   0049E4  EFF6  F024         	goto	u4070
  4724   0049E8                     u4071:
  4725   0049E8  EFFC  F024         	goto	l4311
  4726   0049EC                     u4070:
  4727   0049EC  0E00               	movlw	0
  4728   0049EE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4729   0049F0  0E02               	movlw	2
  4730   0049F2  6E01               	movwf	?___fpclassifyf^0,c
  4731   0049F4  EF31  F025         	goto	l1422
  4732   0049F8                     l4311:
  4733   0049F8  0E00               	movlw	0
  4734   0049FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4735   0049FC  0E03               	movlw	3
  4736   0049FE  6E01               	movwf	?___fpclassifyf^0,c
  4737   004A00  EF31  F025         	goto	l1422
  4738   004A04                     l4315:
  4739   004A04  2809               	incf	___fpclassifyf@e^0,w,c
  4740   004A06  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4741   004A08  A4D8               	btfss	status,2,c
  4742   004A0A  EF09  F025         	goto	u4081
  4743   004A0E  EF0B  F025         	goto	u4080
  4744   004A12                     u4081:
  4745   004A12  EF2D  F025         	goto	l4321
  4746   004A16                     u4080:
  4747   004A16  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4748   004A1A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4749   004A1E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4750   004A22  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4751   004A26  0E09               	movlw	9
  4752   004A28                     u4095:
  4753   004A28  90D8               	bcf	status,0,c
  4754   004A2A  3605               	rlcf	??___fpclassifyf^0,f,c
  4755   004A2C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4756   004A2E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4757   004A30  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4758   004A32  2EE8               	decfsz	wreg,f,c
  4759   004A34  EF14  F025         	goto	u4095
  4760   004A38  5005               	movf	??___fpclassifyf^0,w,c
  4761   004A3A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4762   004A3C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4763   004A3E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4764   004A40  B4D8               	btfsc	status,2,c
  4765   004A42  EF25  F025         	goto	u4101
  4766   004A46  EF28  F025         	goto	u4100
  4767   004A4A                     u4101:
  4768   004A4A  0E01               	movlw	1
  4769   004A4C  EF29  F025         	goto	u4110
  4770   004A50                     u4100:
  4771   004A50  0E00               	movlw	0
  4772   004A52                     u4110:
  4773   004A52  6E01               	movwf	?___fpclassifyf^0,c
  4774   004A54  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4775   004A56  EF31  F025         	goto	l1422
  4776   004A5A                     l4321:
  4777   004A5A  0E00               	movlw	0
  4778   004A5C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4779   004A5E  0E04               	movlw	4
  4780   004A60  6E01               	movwf	?___fpclassifyf^0,c
  4781   004A62                     l1422:
  4782   004A62  0012               	return		;funcret
  4783   004A64                     __end_of___fpclassifyf:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function ___fltol *****************
  4787 ;; Defined at:
  4788 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;  f1              4    0[COMRAM] int 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  exp1            1    9[COMRAM] unsigned char 
  4793 ;;  sign1           1    8[COMRAM] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  4    0[COMRAM] long 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4806 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4807 ;;Total ram usage:       10 bytes
  4808 ;; Hardware stack levels used: 1
  4809 ;; Hardware stack levels required when called: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_efgtoa
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text10
  4818   00475C                     __ptext10:
  4819                           	callstack 0
  4820   00475C                     ___fltol:
  4821                           	callstack 25
  4822   00475C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4823   00475E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4824   004760  6E0A               	movwf	___fltol@exp1^0,c
  4825   004762  500A               	movf	___fltol@exp1^0,w,c
  4826   004764  A4D8               	btfss	status,2,c
  4827   004766  EFB7  F023         	goto	u3951
  4828   00476A  EFB9  F023         	goto	u3950
  4829   00476E                     u3951:
  4830   00476E  EFC3  F023         	goto	l4247
  4831   004772                     u3950:
  4832   004772                     l4243:
  4833   004772  0E00               	movlw	0
  4834   004774  6E01               	movwf	?___fltol^0,c
  4835   004776  0E00               	movlw	0
  4836   004778  6E02               	movwf	(?___fltol+1)^0,c
  4837   00477A  0E00               	movlw	0
  4838   00477C  6E03               	movwf	(?___fltol+2)^0,c
  4839   00477E  0E00               	movlw	0
  4840   004780  6E04               	movwf	(?___fltol+3)^0,c
  4841   004782  EF30  F024         	goto	l895
  4842   004786                     l4247:
  4843   004786  C001  F005         	movff	___fltol@f1,??___fltol
  4844   00478A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4845   00478E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4846   004792  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4847   004796  0E20               	movlw	32
  4848   004798  EFD3  F023         	goto	u3960
  4849   00479C                     u3965:
  4850   00479C  90D8               	bcf	status,0,c
  4851   00479E  3208               	rrcf	(??___fltol+3)^0,f,c
  4852   0047A0  3207               	rrcf	(??___fltol+2)^0,f,c
  4853   0047A2  3206               	rrcf	(??___fltol+1)^0,f,c
  4854   0047A4  3205               	rrcf	??___fltol^0,f,c
  4855   0047A6                     u3960:
  4856   0047A6  2EE8               	decfsz	wreg,f,c
  4857   0047A8  EFCE  F023         	goto	u3965
  4858   0047AC  5005               	movf	??___fltol^0,w,c
  4859   0047AE  6E09               	movwf	___fltol@sign1^0,c
  4860   0047B0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4861   0047B2  0EFF               	movlw	255
  4862   0047B4  1601               	andwf	___fltol@f1^0,f,c
  4863   0047B6  0EFF               	movlw	255
  4864   0047B8  1602               	andwf	(___fltol@f1+1)^0,f,c
  4865   0047BA  0EFF               	movlw	255
  4866   0047BC  1603               	andwf	(___fltol@f1+2)^0,f,c
  4867   0047BE  0E00               	movlw	0
  4868   0047C0  1604               	andwf	(___fltol@f1+3)^0,f,c
  4869   0047C2  0E96               	movlw	150
  4870   0047C4  5E0A               	subwf	___fltol@exp1^0,f,c
  4871   0047C6  BE0A               	btfsc	___fltol@exp1^0,7,c
  4872   0047C8  EFEA  F023         	goto	u3970
  4873   0047CC  EFE8  F023         	goto	u3971
  4874   0047D0                     u3971:
  4875   0047D0  EF00  F024         	goto	l4267
  4876   0047D4                     u3970:
  4877   0047D4  500A               	movf	___fltol@exp1^0,w,c
  4878   0047D6  0A80               	xorlw	128
  4879   0047D8  0F97               	addlw	151
  4880   0047DA  B0D8               	btfsc	status,0,c
  4881   0047DC  EFF2  F023         	goto	u3981
  4882   0047E0  EFF4  F023         	goto	u3980
  4883   0047E4                     u3981:
  4884   0047E4  EFF6  F023         	goto	l4263
  4885   0047E8                     u3980:
  4886   0047E8  EFB9  F023         	goto	l4243
  4887   0047EC                     l4263:
  4888   0047EC  90D8               	bcf	status,0,c
  4889   0047EE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4890   0047F0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4891   0047F2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4892   0047F4  3201               	rrcf	___fltol@f1^0,f,c
  4893   0047F6  3E0A               	incfsz	___fltol@exp1^0,f,c
  4894   0047F8  EFF6  F023         	goto	l4263
  4895   0047FC  EF18  F024         	goto	l4277
  4896   004800                     l4267:
  4897   004800  0E1F               	movlw	31
  4898   004802  640A               	cpfsgt	___fltol@exp1^0,c
  4899   004804  EF06  F024         	goto	u3991
  4900   004808  EF08  F024         	goto	u3990
  4901   00480C                     u3991:
  4902   00480C  EF10  F024         	goto	l4275
  4903   004810                     u3990:
  4904   004810  EFB9  F023         	goto	l4243
  4905   004814                     l4273:
  4906   004814  90D8               	bcf	status,0,c
  4907   004816  3601               	rlcf	___fltol@f1^0,f,c
  4908   004818  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4909   00481A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4910   00481C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4911   00481E  060A               	decf	___fltol@exp1^0,f,c
  4912   004820                     l4275:
  4913   004820  500A               	movf	___fltol@exp1^0,w,c
  4914   004822  A4D8               	btfss	status,2,c
  4915   004824  EF16  F024         	goto	u4001
  4916   004828  EF18  F024         	goto	u4000
  4917   00482C                     u4001:
  4918   00482C  EF0A  F024         	goto	l4273
  4919   004830                     u4000:
  4920   004830                     l4277:
  4921   004830  5009               	movf	___fltol@sign1^0,w,c
  4922   004832  B4D8               	btfsc	status,2,c
  4923   004834  EF1E  F024         	goto	u4011
  4924   004838  EF20  F024         	goto	u4010
  4925   00483C                     u4011:
  4926   00483C  EF28  F024         	goto	l4281
  4927   004840                     u4010:
  4928   004840  1E04               	comf	(___fltol@f1+3)^0,f,c
  4929   004842  1E03               	comf	(___fltol@f1+2)^0,f,c
  4930   004844  1E02               	comf	(___fltol@f1+1)^0,f,c
  4931   004846  6C01               	negf	___fltol@f1^0,c
  4932   004848  0E00               	movlw	0
  4933   00484A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4934   00484C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4935   00484E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4936   004850                     l4281:
  4937   004850  C001  F001         	movff	___fltol@f1,?___fltol
  4938   004854  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4939   004858  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4940   00485C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4941   004860                     l895:
  4942   004860  0012               	return		;funcret
  4943   004862                     __end_of___fltol:
  4944                           	callstack 0
  4945                           
  4946 ;; *************** function ___flneg *****************
  4947 ;; Defined at:
  4948 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  f1              4    0[COMRAM] long 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  4    0[COMRAM] long 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4966 ;;Total ram usage:        4 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 1
  4969 ;; This function calls:
  4970 ;;		Nothing
  4971 ;; This function is called by:
  4972 ;;		_efgtoa
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text11
  4977   005A56                     __ptext11:
  4978                           	callstack 0
  4979   005A56                     ___flneg:
  4980                           	callstack 25
  4981   005A56  5001               	movf	___flneg@f1^0,w,c
  4982   005A58  1002               	iorwf	(___flneg@f1+1)^0,w,c
  4983   005A5A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  4984   005A5C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  4985   005A5E  B4D8               	btfsc	status,2,c
  4986   005A60  EF34  F02D         	goto	u3941
  4987   005A64  EF36  F02D         	goto	u3940
  4988   005A68                     u3941:
  4989   005A68  EF3E  F02D         	goto	l4237
  4990   005A6C                     u3940:
  4991   005A6C  0E00               	movlw	0
  4992   005A6E  1A01               	xorwf	___flneg@f1^0,f,c
  4993   005A70  0E00               	movlw	0
  4994   005A72  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  4995   005A74  0E00               	movlw	0
  4996   005A76  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  4997   005A78  0E80               	movlw	128
  4998   005A7A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  4999   005A7C                     l4237:
  5000   005A7C  C001  F001         	movff	___flneg@f1,?___flneg
  5001   005A80  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5002   005A84  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5003   005A88  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5004   005A8C  0012               	return		;funcret
  5005   005A8E                     __end_of___flneg:
  5006                           	callstack 0
  5007                           
  5008 ;; *************** function _dtoa *****************
  5009 ;; Defined at:
  5010 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5013 ;;		 -> sprintf@f(11), 
  5014 ;;  d               8   29[COMRAM] long long 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  n               8   51[COMRAM] long long 
  5017 ;;  i               2   59[COMRAM] int 
  5018 ;;  w               2   49[COMRAM] int 
  5019 ;;  p               2   47[COMRAM] int 
  5020 ;;  s               1   61[COMRAM] unsigned char 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5030 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:       35 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 5
  5037 ;; This function calls:
  5038 ;;		___aodiv
  5039 ;;		___aomod
  5040 ;;		_abs
  5041 ;;		_pad
  5042 ;; This function is called by:
  5043 ;;		_vfpfcnvrt
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text12
  5048   003AEE                     __ptext12:
  5049                           	callstack 0
  5050   003AEE                     _dtoa:
  5051                           	callstack 22
  5052   003AEE                     
  5053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5054   003AEE  C01E  F034         	movff	dtoa@d,dtoa@n
  5055   003AF2  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5056   003AF6  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5057   003AFA  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5058   003AFE  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5059   003B02  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5060   003B06  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5061   003B0A  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5062   003B0E                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5064   003B0E  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5065   003B10  EF8C  F01D         	goto	u4371
  5066   003B14  EF8F  F01D         	goto	u4370
  5067   003B18                     u4371:
  5068   003B18  0E01               	movlw	1
  5069   003B1A  EF90  F01D         	goto	u4380
  5070   003B1E                     u4370:
  5071   003B1E  0E00               	movlw	0
  5072   003B20                     u4380:
  5073   003B20  6E3E               	movwf	dtoa@s^0,c
  5074   003B22                     
  5075                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5076   003B22  503E               	movf	dtoa@s^0,w,c
  5077   003B24  B4D8               	btfsc	status,2,c
  5078   003B26  EF97  F01D         	goto	u4391
  5079   003B2A  EF99  F01D         	goto	u4390
  5080   003B2E                     u4391:
  5081   003B2E  EFA9  F01D         	goto	l4455
  5082   003B32                     u4390:
  5083   003B32                     
  5084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5085   003B32  1E3B               	comf	(dtoa@n+7)^0,f,c
  5086   003B34  1E3A               	comf	(dtoa@n+6)^0,f,c
  5087   003B36  1E39               	comf	(dtoa@n+5)^0,f,c
  5088   003B38  1E38               	comf	(dtoa@n+4)^0,f,c
  5089   003B3A  1E37               	comf	(dtoa@n+3)^0,f,c
  5090   003B3C  1E36               	comf	(dtoa@n+2)^0,f,c
  5091   003B3E  1E35               	comf	(dtoa@n+1)^0,f,c
  5092   003B40  6C34               	negf	dtoa@n^0,c
  5093   003B42  0E00               	movlw	0
  5094   003B44  2235               	addwfc	(dtoa@n+1)^0,f,c
  5095   003B46  2236               	addwfc	(dtoa@n+2)^0,f,c
  5096   003B48  2237               	addwfc	(dtoa@n+3)^0,f,c
  5097   003B4A  2238               	addwfc	(dtoa@n+4)^0,f,c
  5098   003B4C  2239               	addwfc	(dtoa@n+5)^0,f,c
  5099   003B4E  223A               	addwfc	(dtoa@n+6)^0,f,c
  5100   003B50  223B               	addwfc	(dtoa@n+7)^0,f,c
  5101   003B52                     l4455:
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5104   003B52  0100               	movlb	0	; () banked
  5105   003B54  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5106   003B56  EFB7  F01D         	goto	u4400
  5107   003B5A  51F2               	movf	(_prec+1)& (0+255),w,b
  5108   003B5C  E106               	bnz	u4401
  5109   003B5E  05F1               	decf	_prec& (0+255),w,b
  5110   003B60  B0D8               	btfsc	status,0,c
  5111   003B62  EFB5  F01D         	goto	u4401
  5112   003B66  EFB7  F01D         	goto	u4400
  5113   003B6A                     u4401:
  5114   003B6A  EFBD  F01D         	goto	l1317
  5115   003B6E                     u4400:
  5116   003B6E                     
  5117                           ; BSR set to: 0
  5118   003B6E  0E00               	movlw	0
  5119   003B70  6E31               	movwf	(dtoa@p+1)^0,c
  5120   003B72  0E01               	movlw	1
  5121   003B74  6E30               	movwf	dtoa@p^0,c
  5122   003B76  EFC1  F01D         	goto	l1319
  5123   003B7A                     l1317:
  5124                           
  5125                           ; BSR set to: 0
  5126   003B7A  C0F1  F030         	movff	_prec,dtoa@p
  5127   003B7E  C0F2  F031         	movff	_prec+1,dtoa@p+1
  5128   003B82                     l1319:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5132   003B82  C0EF  F032         	movff	_width,dtoa@w
  5133   003B86  C0F0  F033         	movff	_width+1,dtoa@w+1
  5134   003B8A                     
  5135                           ; BSR set to: 0
  5136                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5137   003B8A  503E               	movf	dtoa@s^0,w,c
  5138   003B8C  B4D8               	btfsc	status,2,c
  5139   003B8E  EFCB  F01D         	goto	u4411
  5140   003B92  EFCD  F01D         	goto	u4410
  5141   003B96                     u4411:
  5142   003B96  EFE4  F01D         	goto	l1320
  5143   003B9A                     u4410:
  5144   003B9A                     
  5145                           ; BSR set to: 0
  5146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5147   003B9A  0632               	decf	dtoa@w^0,f,c
  5148   003B9C  A0D8               	btfss	status,0,c
  5149   003B9E  0633               	decf	(dtoa@w+1)^0,f,c
  5150   003BA0                     
  5151                           ; BSR set to: 0
  5152                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5153   003BA0  503E               	movf	dtoa@s^0,w,c
  5154   003BA2  A4D8               	btfss	status,2,c
  5155   003BA4  EFD6  F01D         	goto	u4421
  5156   003BA8  EFD8  F01D         	goto	u4420
  5157   003BAC                     u4421:
  5158   003BAC  EFDE  F01D         	goto	l4467
  5159   003BB0                     u4420:
  5160   003BB0                     
  5161                           ; BSR set to: 0
  5162   003BB0  0E00               	movlw	0
  5163   003BB2  6E2F               	movwf	(_dtoa$2379+1)^0,c
  5164   003BB4  0E2B               	movlw	43
  5165   003BB6  6E2E               	movwf	_dtoa$2379^0,c
  5166   003BB8  EFE2  F01D         	goto	l4469
  5167   003BBC                     l4467:
  5168                           
  5169                           ; BSR set to: 0
  5170   003BBC  0E00               	movlw	0
  5171   003BBE  6E2F               	movwf	(_dtoa$2379+1)^0,c
  5172   003BC0  0E2D               	movlw	45
  5173   003BC2  6E2E               	movwf	_dtoa$2379^0,c
  5174   003BC4                     l4469:
  5175                           
  5176                           ; BSR set to: 0
  5177   003BC4  C02E  F03E         	movff	_dtoa$2379,dtoa@s
  5178   003BC8                     l1320:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5182   003BC8  0E00               	movlw	0
  5183   003BCA  6E3D               	movwf	(dtoa@i+1)^0,c
  5184   003BCC  0E4F               	movlw	79
  5185   003BCE  6E3C               	movwf	dtoa@i^0,c
  5186   003BD0                     
  5187                           ; BSR set to: 0
  5188                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5189   003BD0  0E00               	movlw	0
  5190   003BD2  0101               	movlb	1	; () banked
  5191   003BD4  6F5D               	movwf	(_dbuf+79)& (0+255),b
  5192                           
  5193                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5194   003BD6  EF69  F01E         	goto	l4483
  5195   003BDA                     l4473:
  5196                           
  5197                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5198   003BDA  063C               	decf	dtoa@i^0,f,c
  5199   003BDC  A0D8               	btfss	status,0,c
  5200   003BDE  063D               	decf	(dtoa@i+1)^0,f,c
  5201   003BE0                     
  5202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5203   003BE0  0E0E               	movlw	low _dbuf
  5204   003BE2  243C               	addwf	dtoa@i^0,w,c
  5205   003BE4  6ED9               	movwf	fsr2l,c
  5206   003BE6  0E01               	movlw	high _dbuf
  5207   003BE8  203D               	addwfc	(dtoa@i+1)^0,w,c
  5208   003BEA  6EDA               	movwf	fsr2h,c
  5209   003BEC  C034  F001         	movff	dtoa@n,___aomod@dividend
  5210   003BF0  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5211   003BF4  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5212   003BF8  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5213   003BFC  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5214   003C00  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5215   003C04  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5216   003C08  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5217   003C0C  0E0A               	movlw	10
  5218   003C0E  6E09               	movwf	___aomod@divisor^0,c
  5219   003C10  0E00               	movlw	0
  5220   003C12  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5221   003C14  0E00               	movlw	0
  5222   003C16  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5223   003C18  0E00               	movlw	0
  5224   003C1A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5225   003C1C  0E00               	movlw	0
  5226   003C1E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5227   003C20  0E00               	movlw	0
  5228   003C22  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5229   003C24  0E00               	movlw	0
  5230   003C26  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5231   003C28  0E00               	movlw	0
  5232   003C2A  6E10               	movwf	(___aomod@divisor+7)^0,c
  5233   003C2C  ECFC  F022         	call	___aomod	;wreg free
  5234   003C30  C001  F026         	movff	?___aomod,??_dtoa
  5235   003C34  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5236   003C38  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5237   003C3C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5238   003C40  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5239   003C44  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5240   003C48  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5241   003C4C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5242   003C50  C026  F013         	movff	??_dtoa,abs@a
  5243   003C54  C027  F014         	movff	??_dtoa+1,abs@a+1
  5244   003C58  EC8F  F02C         	call	_abs	;wreg free
  5245   003C5C  5013               	movf	?_abs^0,w,c
  5246   003C5E  0F30               	addlw	48
  5247   003C60  6EDF               	movwf	indf2,c
  5248   003C62                     
  5249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5250   003C62  0630               	decf	dtoa@p^0,f,c
  5251   003C64  A0D8               	btfss	status,0,c
  5252   003C66  0631               	decf	(dtoa@p+1)^0,f,c
  5253   003C68                     
  5254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5255   003C68  0632               	decf	dtoa@w^0,f,c
  5256   003C6A  A0D8               	btfss	status,0,c
  5257   003C6C  0633               	decf	(dtoa@w+1)^0,f,c
  5258   003C6E                     
  5259                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5260   003C6E  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5261   003C72  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5262   003C76  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5263   003C7A  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5264   003C7E  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5265   003C82  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5266   003C86  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5267   003C8A  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5268   003C8E  0E0A               	movlw	10
  5269   003C90  6E09               	movwf	___aodiv@divisor^0,c
  5270   003C92  0E00               	movlw	0
  5271   003C94  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5272   003C96  0E00               	movlw	0
  5273   003C98  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5274   003C9A  0E00               	movlw	0
  5275   003C9C  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5276   003C9E  0E00               	movlw	0
  5277   003CA0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5278   003CA2  0E00               	movlw	0
  5279   003CA4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5280   003CA6  0E00               	movlw	0
  5281   003CA8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5282   003CAA  0E00               	movlw	0
  5283   003CAC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5284   003CAE  EC82  F021         	call	___aodiv	;wreg free
  5285   003CB2  C001  F034         	movff	?___aodiv,dtoa@n
  5286   003CB6  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5287   003CBA  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5288   003CBE  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5289   003CC2  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5290   003CC6  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5291   003CCA  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5292   003CCE  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5293   003CD2                     l4483:
  5294                           
  5295                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5296   003CD2  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5297   003CD4  EF74  F01E         	goto	u4431
  5298   003CD8  503D               	movf	(dtoa@i+1)^0,w,c
  5299   003CDA  E108               	bnz	u4430
  5300   003CDC  043C               	decf	dtoa@i^0,w,c
  5301   003CDE  A0D8               	btfss	status,0,c
  5302   003CE0  EF74  F01E         	goto	u4431
  5303   003CE4  EF76  F01E         	goto	u4430
  5304   003CE8                     u4431:
  5305   003CE8  EF92  F01E         	goto	l4489
  5306   003CEC                     u4430:
  5307   003CEC  5034               	movf	dtoa@n^0,w,c
  5308   003CEE  1035               	iorwf	(dtoa@n+1)^0,w,c
  5309   003CF0  1036               	iorwf	(dtoa@n+2)^0,w,c
  5310   003CF2  1037               	iorwf	(dtoa@n+3)^0,w,c
  5311   003CF4  1038               	iorwf	(dtoa@n+4)^0,w,c
  5312   003CF6  1039               	iorwf	(dtoa@n+5)^0,w,c
  5313   003CF8  103A               	iorwf	(dtoa@n+6)^0,w,c
  5314   003CFA  103B               	iorwf	(dtoa@n+7)^0,w,c
  5315   003CFC  A4D8               	btfss	status,2,c
  5316   003CFE  EF83  F01E         	goto	u4441
  5317   003D02  EF85  F01E         	goto	u4440
  5318   003D06                     u4441:
  5319   003D06  EFED  F01D         	goto	l4473
  5320   003D0A                     u4440:
  5321   003D0A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5322   003D0C  EF92  F01E         	goto	u4450
  5323   003D10  5031               	movf	(dtoa@p+1)^0,w,c
  5324   003D12  E106               	bnz	u4451
  5325   003D14  0430               	decf	dtoa@p^0,w,c
  5326   003D16  B0D8               	btfsc	status,0,c
  5327   003D18  EF90  F01E         	goto	u4451
  5328   003D1C  EF92  F01E         	goto	u4450
  5329   003D20                     u4451:
  5330   003D20  EFED  F01D         	goto	l4473
  5331   003D24                     u4450:
  5332   003D24                     l4489:
  5333                           
  5334                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5335   003D24  503E               	movf	dtoa@s^0,w,c
  5336   003D26  B4D8               	btfsc	status,2,c
  5337   003D28  EF98  F01E         	goto	u4461
  5338   003D2C  EF9A  F01E         	goto	u4460
  5339   003D30                     u4461:
  5340   003D30  EFA5  F01E         	goto	l4495
  5341   003D34                     u4460:
  5342   003D34                     
  5343                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5344   003D34  063C               	decf	dtoa@i^0,f,c
  5345   003D36  A0D8               	btfss	status,0,c
  5346   003D38  063D               	decf	(dtoa@i+1)^0,f,c
  5347   003D3A                     
  5348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5349   003D3A  0E0E               	movlw	low _dbuf
  5350   003D3C  243C               	addwf	dtoa@i^0,w,c
  5351   003D3E  6ED9               	movwf	fsr2l,c
  5352   003D40  0E01               	movlw	high _dbuf
  5353   003D42  203D               	addwfc	(dtoa@i+1)^0,w,c
  5354   003D44  6EDA               	movwf	fsr2h,c
  5355   003D46  C03E  FFDF         	movff	dtoa@s,indf2
  5356   003D4A                     l4495:
  5357                           
  5358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5359   003D4A  C01C  F011         	movff	dtoa@fp,pad@fp
  5360   003D4E  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5361   003D52  0E0E               	movlw	low _dbuf
  5362   003D54  243C               	addwf	dtoa@i^0,w,c
  5363   003D56  6E13               	movwf	pad@buf^0,c
  5364   003D58  0E01               	movlw	high _dbuf
  5365   003D5A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5366   003D5C  6E14               	movwf	(pad@buf+1)^0,c
  5367   003D5E  C032  F015         	movff	dtoa@w,pad@p
  5368   003D62  C033  F016         	movff	dtoa@w+1,pad@p+1
  5369   003D66  EC9D  F027         	call	_pad	;wreg free
  5370   003D6A  0012               	return		;funcret
  5371   003D6C                     __end_of_dtoa:
  5372                           	callstack 0
  5373                           
  5374 ;; *************** function _pad *****************
  5375 ;; Defined at:
  5376 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5379 ;;		 -> sprintf@f(11), 
  5380 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5381 ;;		 -> dbuf(80), 
  5382 ;;  p               2   20[COMRAM] int 
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;  w               2   25[COMRAM] int 
  5385 ;;  i               2   23[COMRAM] int 
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5395 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;Total ram usage:       11 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; Hardware stack levels required when called: 4
  5402 ;; This function calls:
  5403 ;;		_fputc
  5404 ;;		_fputs
  5405 ;; This function is called by:
  5406 ;;		_dtoa
  5407 ;;		_efgtoa
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411                           	psect	text13
  5412   004F3A                     __ptext13:
  5413                           	callstack 0
  5414   004F3A                     _pad:
  5415                           	callstack 22
  5416   004F3A                     
  5417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5418   004F3A  BE16               	btfsc	(pad@p+1)^0,7,c
  5419   004F3C  EFA2  F027         	goto	u4021
  5420   004F40  EFA4  F027         	goto	u4020
  5421   004F44                     u4021:
  5422   004F44  EFAA  F027         	goto	l4289
  5423   004F48                     u4020:
  5424   004F48  C015  F01A         	movff	pad@p,pad@w
  5425   004F4C  C016  F01B         	movff	pad@p+1,pad@w+1
  5426   004F50  EFAE  F027         	goto	l1308
  5427   004F54                     l4289:
  5428   004F54  0E00               	movlw	0
  5429   004F56  6E1B               	movwf	(pad@w+1)^0,c
  5430   004F58  0E00               	movlw	0
  5431   004F5A  6E1A               	movwf	pad@w^0,c
  5432   004F5C                     l1308:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5435   004F5C  0E00               	movlw	0
  5436   004F5E  6E19               	movwf	(pad@i+1)^0,c
  5437   004F60  0E00               	movlw	0
  5438   004F62  6E18               	movwf	pad@i^0,c
  5439                           
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5441   004F64  EFC0  F027         	goto	l4295
  5442   004F68                     l4291:
  5443                           
  5444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5445   004F68  0E00               	movlw	0
  5446   004F6A  6E02               	movwf	(fputc@c+1)^0,c
  5447   004F6C  0E20               	movlw	32
  5448   004F6E  6E01               	movwf	fputc@c^0,c
  5449   004F70  C011  F003         	movff	pad@fp,fputc@fp
  5450   004F74  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5451   004F78  EC32  F025         	call	_fputc	;wreg free
  5452   004F7C                     
  5453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5454   004F7C  4A18               	infsnz	pad@i^0,f,c
  5455   004F7E  2A19               	incf	(pad@i+1)^0,f,c
  5456   004F80                     l4295:
  5457                           
  5458                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5459   004F80  501A               	movf	pad@w^0,w,c
  5460   004F82  5C18               	subwf	pad@i^0,w,c
  5461   004F84  5019               	movf	(pad@i+1)^0,w,c
  5462   004F86  0A80               	xorlw	128
  5463   004F88  6E17               	movwf	??_pad^0,c
  5464   004F8A  501B               	movf	(pad@w+1)^0,w,c
  5465   004F8C  0A80               	xorlw	128
  5466   004F8E  5817               	subwfb	??_pad^0,w,c
  5467   004F90  A0D8               	btfss	status,0,c
  5468   004F92  EFCD  F027         	goto	u4031
  5469   004F96  EFCF  F027         	goto	u4030
  5470   004F9A                     u4031:
  5471   004F9A  EFB4  F027         	goto	l4291
  5472   004F9E                     u4030:
  5473   004F9E                     
  5474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5475   004F9E  C013  F00A         	movff	pad@buf,fputs@s
  5476   004FA2  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5477   004FA6  C011  F00C         	movff	pad@fp,fputs@fp
  5478   004FAA  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5479   004FAE  EC4C  F02C         	call	_fputs	;wreg free
  5480   004FB2  0012               	return		;funcret
  5481   004FB4                     __end_of_pad:
  5482                           	callstack 0
  5483                           
  5484 ;; *************** function _fputs *****************
  5485 ;; Defined at:
  5486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5489 ;;		 -> dbuf(80), 
  5490 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5491 ;;		 -> sprintf@f(11), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  i               2   14[COMRAM] int 
  5494 ;;  c               1   13[COMRAM] unsigned char 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    9[COMRAM] int 
  5497 ;; Registers used:
  5498 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5505 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5507 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5508 ;;Total ram usage:        7 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 3
  5511 ;; This function calls:
  5512 ;;		_fputc
  5513 ;; This function is called by:
  5514 ;;		_pad
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text14
  5519   005898                     __ptext14:
  5520                           	callstack 0
  5521   005898                     _fputs:
  5522                           	callstack 22
  5523   005898  0E00               	movlw	0
  5524   00589A  6E10               	movwf	(fputs@i+1)^0,c
  5525   00589C  0E00               	movlw	0
  5526   00589E  6E0F               	movwf	fputs@i^0,c
  5527   0058A0  EF5D  F02C         	goto	l3823
  5528   0058A4                     l3819:
  5529   0058A4  C00E  F001         	movff	fputs@c,fputc@c
  5530   0058A8  6A02               	clrf	(fputc@c+1)^0,c
  5531   0058AA  C00C  F003         	movff	fputs@fp,fputc@fp
  5532   0058AE  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5533   0058B2  EC32  F025         	call	_fputc	;wreg free
  5534   0058B6  4A0F               	infsnz	fputs@i^0,f,c
  5535   0058B8  2A10               	incf	(fputs@i+1)^0,f,c
  5536   0058BA                     l3823:
  5537   0058BA  500F               	movf	fputs@i^0,w,c
  5538   0058BC  240A               	addwf	fputs@s^0,w,c
  5539   0058BE  6ED9               	movwf	fsr2l,c
  5540   0058C0  5010               	movf	(fputs@i+1)^0,w,c
  5541   0058C2  200B               	addwfc	(fputs@s+1)^0,w,c
  5542   0058C4  6EDA               	movwf	fsr2h,c
  5543   0058C6  50DF               	movf	indf2,w,c
  5544   0058C8  6E0E               	movwf	fputs@c^0,c
  5545   0058CA  500E               	movf	fputs@c^0,w,c
  5546   0058CC  A4D8               	btfss	status,2,c
  5547   0058CE  EF6B  F02C         	goto	u3281
  5548   0058D2  EF6D  F02C         	goto	u3280
  5549   0058D6                     u3281:
  5550   0058D6  EF52  F02C         	goto	l3819
  5551   0058DA                     u3280:
  5552   0058DA  0012               	return		;funcret
  5553   0058DC                     __end_of_fputs:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _fputc *****************
  5557 ;; Defined at:
  5558 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  c               2    0[COMRAM] int 
  5561 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5562 ;;		 -> sprintf@f(11), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2    0[COMRAM] int 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5574 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5576 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5577 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;Total ram usage:        9 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 2
  5581 ;; This function calls:
  5582 ;;		_putch
  5583 ;; This function is called by:
  5584 ;;		_pad
  5585 ;;		_vfpfcnvrt
  5586 ;;		_fputs
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text15
  5591   004A64                     __ptext15:
  5592                           	callstack 0
  5593   004A64                     _fputc:
  5594                           	callstack 25
  5595   004A64  5003               	movf	fputc@fp^0,w,c
  5596   004A66  1004               	iorwf	(fputc@fp+1)^0,w,c
  5597   004A68  B4D8               	btfsc	status,2,c
  5598   004A6A  EF39  F025         	goto	u2821
  5599   004A6E  EF3B  F025         	goto	u2820
  5600   004A72                     u2821:
  5601   004A72  EF44  F025         	goto	l3577
  5602   004A76                     u2820:
  5603   004A76  5003               	movf	fputc@fp^0,w,c
  5604   004A78  1004               	iorwf	(fputc@fp+1)^0,w,c
  5605   004A7A  A4D8               	btfss	status,2,c
  5606   004A7C  EF42  F025         	goto	u2831
  5607   004A80  EF44  F025         	goto	u2830
  5608   004A84                     u2831:
  5609   004A84  EF49  F025         	goto	l3579
  5610   004A88                     u2830:
  5611   004A88                     l3577:
  5612   004A88  5001               	movf	fputc@c^0,w,c
  5613   004A8A  ECDD  F02D         	call	_putch
  5614   004A8E  EF96  F025         	goto	l1468
  5615   004A92                     l3579:
  5616   004A92  EE20 F009          	lfsr	2,9
  5617   004A96  5003               	movf	fputc@fp^0,w,c
  5618   004A98  26D9               	addwf	fsr2l,f,c
  5619   004A9A  5004               	movf	(fputc@fp+1)^0,w,c
  5620   004A9C  22DA               	addwfc	fsr2h,f,c
  5621   004A9E  50DE               	movf	postinc2,w,c
  5622   004AA0  10DE               	iorwf	postinc2,w,c
  5623   004AA2  B4D8               	btfsc	status,2,c
  5624   004AA4  EF56  F025         	goto	u2841
  5625   004AA8  EF58  F025         	goto	u2840
  5626   004AAC                     u2841:
  5627   004AAC  EF73  F025         	goto	l3583
  5628   004AB0                     u2840:
  5629   004AB0  EE20 F009          	lfsr	2,9
  5630   004AB4  5003               	movf	fputc@fp^0,w,c
  5631   004AB6  26D9               	addwf	fsr2l,f,c
  5632   004AB8  5004               	movf	(fputc@fp+1)^0,w,c
  5633   004ABA  22DA               	addwfc	fsr2h,f,c
  5634   004ABC  EE10 F003          	lfsr	1,3
  5635   004AC0  5003               	movf	fputc@fp^0,w,c
  5636   004AC2  26E1               	addwf	fsr1l,f,c
  5637   004AC4  5004               	movf	(fputc@fp+1)^0,w,c
  5638   004AC6  22E2               	addwfc	fsr1h,f,c
  5639   004AC8  50DE               	movf	postinc2,w,c
  5640   004ACA  5CE6               	subwf	postinc1,w,c
  5641   004ACC  50E6               	movf	postinc1,w,c
  5642   004ACE  0A80               	xorlw	128
  5643   004AD0  6E09               	movwf	(??_fputc+4)^0,c
  5644   004AD2  50DE               	movf	postinc2,w,c
  5645   004AD4  0A80               	xorlw	128
  5646   004AD6  5809               	subwfb	(??_fputc+4)^0,w,c
  5647   004AD8  B0D8               	btfsc	status,0,c
  5648   004ADA  EF71  F025         	goto	u2851
  5649   004ADE  EF73  F025         	goto	u2850
  5650   004AE2                     u2851:
  5651   004AE2  EF96  F025         	goto	l1468
  5652   004AE6                     u2850:
  5653   004AE6                     l3583:
  5654   004AE6  EE20 F003          	lfsr	2,3
  5655   004AEA  5003               	movf	fputc@fp^0,w,c
  5656   004AEC  26D9               	addwf	fsr2l,f,c
  5657   004AEE  5004               	movf	(fputc@fp+1)^0,w,c
  5658   004AF0  22DA               	addwfc	fsr2h,f,c
  5659   004AF2  CFDE F005          	movff	postinc2,??_fputc
  5660   004AF6  CFDD F006          	movff	postdec2,??_fputc+1
  5661   004AFA  C003  FFD9         	movff	fputc@fp,fsr2l
  5662   004AFE  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5663   004B02  CFDE F007          	movff	postinc2,??_fputc+2
  5664   004B06  CFDD F008          	movff	postdec2,??_fputc+3
  5665   004B0A  5005               	movf	??_fputc^0,w,c
  5666   004B0C  2407               	addwf	(??_fputc+2)^0,w,c
  5667   004B0E  6ED9               	movwf	fsr2l,c
  5668   004B10  5006               	movf	(??_fputc+1)^0,w,c
  5669   004B12  2008               	addwfc	(??_fputc+3)^0,w,c
  5670   004B14  6EDA               	movwf	fsr2h,c
  5671   004B16  C001  FFDF         	movff	fputc@c,indf2
  5672   004B1A  EE20 F003          	lfsr	2,3
  5673   004B1E  5003               	movf	fputc@fp^0,w,c
  5674   004B20  26D9               	addwf	fsr2l,f,c
  5675   004B22  5004               	movf	(fputc@fp+1)^0,w,c
  5676   004B24  22DA               	addwfc	fsr2h,f,c
  5677   004B26  2ADE               	incf	postinc2,f,c
  5678   004B28  0E00               	movlw	0
  5679   004B2A  22DD               	addwfc	postdec2,f,c
  5680   004B2C                     l1468:
  5681   004B2C  0012               	return		;funcret
  5682   004B2E                     __end_of_fputc:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _putch *****************
  5686 ;; Defined at:
  5687 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  c               1    wreg     unsigned char 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  c               1    0[COMRAM] unsigned char 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_fputc
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text16
  5716   005BBA                     __ptext16:
  5717                           	callstack 0
  5718   005BBA                     _putch:
  5719                           	callstack 25
  5720   005BBA  0012               	return		;funcret
  5721   005BBC                     __end_of_putch:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _abs *****************
  5725 ;; Defined at:
  5726 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  a               2   18[COMRAM] int 
  5729 ;; Auto vars:     Size  Location     Type
  5730 ;;		None
  5731 ;; Return value:  Size  Location     Type
  5732 ;;                  2   18[COMRAM] int 
  5733 ;; Registers used:
  5734 ;;		wreg, status,2, status,0
  5735 ;; Tracked objects:
  5736 ;;		On entry : 0/0
  5737 ;;		On exit  : 0/0
  5738 ;;		Unchanged: 0/0
  5739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5744 ;;Total ram usage:        4 bytes
  5745 ;; Hardware stack levels used: 1
  5746 ;; Hardware stack levels required when called: 1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		_dtoa
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text17
  5755   00591E                     __ptext17:
  5756                           	callstack 0
  5757   00591E                     _abs:
  5758                           	callstack 25
  5759   00591E  BE14               	btfsc	(abs@a+1)^0,7,c
  5760   005920  EF9C  F02C         	goto	u4040
  5761   005924  5014               	movf	(abs@a+1)^0,w,c
  5762   005926  E106               	bnz	u4041
  5763   005928  0413               	decf	abs@a^0,w,c
  5764   00592A  B0D8               	btfsc	status,0,c
  5765   00592C  EF9A  F02C         	goto	u4041
  5766   005930  EF9C  F02C         	goto	u4040
  5767   005934                     u4041:
  5768   005934  EFAA  F02C         	goto	l1427
  5769   005938                     u4040:
  5770   005938  C013  F015         	movff	abs@a,??_abs
  5771   00593C  C014  F016         	movff	abs@a+1,??_abs+1
  5772   005940  1E15               	comf	??_abs^0,f,c
  5773   005942  1E16               	comf	(??_abs+1)^0,f,c
  5774   005944  4A15               	infsnz	??_abs^0,f,c
  5775   005946  2A16               	incf	(??_abs+1)^0,f,c
  5776   005948  C015  F013         	movff	??_abs,?_abs
  5777   00594C  C016  F014         	movff	??_abs+1,?_abs+1
  5778   005950  EFAE  F02C         	goto	l1430
  5779   005954                     l1427:
  5780   005954  C013  F013         	movff	abs@a,?_abs
  5781   005958  C014  F014         	movff	abs@a+1,?_abs+1
  5782   00595C                     l1430:
  5783   00595C  0012               	return		;funcret
  5784   00595E                     __end_of_abs:
  5785                           	callstack 0
  5786                           
  5787 ;; *************** function ___aomod *****************
  5788 ;; Defined at:
  5789 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5790 ;; Parameters:    Size  Location     Type
  5791 ;;  dividend        8    0[COMRAM] long long 
  5792 ;;  divisor         8    8[COMRAM] long long 
  5793 ;; Auto vars:     Size  Location     Type
  5794 ;;  sign            1   17[COMRAM] unsigned char 
  5795 ;;  counter         1   16[COMRAM] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  8    0[COMRAM] long long 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5805 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5806 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5808 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;Total ram usage:       18 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; Hardware stack levels required when called: 1
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_dtoa
  5816 ;; This function uses a non-reentrant model
  5817 ;;
  5818                           
  5819                           	psect	text18
  5820   0045F8                     __ptext18:
  5821                           	callstack 0
  5822   0045F8                     ___aomod:
  5823                           	callstack 25
  5824   0045F8  0E00               	movlw	0
  5825   0045FA  6E12               	movwf	___aomod@sign^0,c
  5826   0045FC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5827   0045FE  EF05  F023         	goto	u3380
  5828   004602  EF03  F023         	goto	u3381
  5829   004606                     u3381:
  5830   004606  EF17  F023         	goto	l3893
  5831   00460A                     u3380:
  5832   00460A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5833   00460C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5834   00460E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5835   004610  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5836   004612  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5837   004614  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5838   004616  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5839   004618  6C01               	negf	___aomod@dividend^0,c
  5840   00461A  0E00               	movlw	0
  5841   00461C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5842   00461E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5843   004620  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5844   004622  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5845   004624  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5846   004626  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5847   004628  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5848   00462A  0E01               	movlw	1
  5849   00462C  6E12               	movwf	___aomod@sign^0,c
  5850   00462E                     l3893:
  5851   00462E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5852   004630  EF1E  F023         	goto	u3390
  5853   004634  EF1C  F023         	goto	u3391
  5854   004638                     u3391:
  5855   004638  EF2E  F023         	goto	l3897
  5856   00463C                     u3390:
  5857   00463C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5858   00463E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5859   004640  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5860   004642  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5861   004644  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5862   004646  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5863   004648  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5864   00464A  6C09               	negf	___aomod@divisor^0,c
  5865   00464C  0E00               	movlw	0
  5866   00464E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5867   004650  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5868   004652  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5869   004654  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5870   004656  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5871   004658  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5872   00465A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5873   00465C                     l3897:
  5874   00465C  5009               	movf	___aomod@divisor^0,w,c
  5875   00465E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5876   004660  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5877   004662  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5878   004664  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5879   004666  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5880   004668  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5881   00466A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5882   00466C  B4D8               	btfsc	status,2,c
  5883   00466E  EF3B  F023         	goto	u3401
  5884   004672  EF3D  F023         	goto	u3400
  5885   004676                     u3401:
  5886   004676  EF85  F023         	goto	l3913
  5887   00467A                     u3400:
  5888   00467A  0E01               	movlw	1
  5889   00467C  6E11               	movwf	___aomod@counter^0,c
  5890   00467E  EF4B  F023         	goto	l3903
  5891   004682                     l3901:
  5892   004682  90D8               	bcf	status,0,c
  5893   004684  3609               	rlcf	___aomod@divisor^0,f,c
  5894   004686  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5895   004688  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5896   00468A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5897   00468C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5898   00468E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5899   004690  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5900   004692  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5901   004694  2A11               	incf	___aomod@counter^0,f,c
  5902   004696                     l3903:
  5903   004696  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5904   004698  EF50  F023         	goto	u3411
  5905   00469C  EF52  F023         	goto	u3410
  5906   0046A0                     u3411:
  5907   0046A0  EF41  F023         	goto	l3901
  5908   0046A4                     u3410:
  5909   0046A4                     l3905:
  5910   0046A4  5009               	movf	___aomod@divisor^0,w,c
  5911   0046A6  5C01               	subwf	___aomod@dividend^0,w,c
  5912   0046A8  500A               	movf	(___aomod@divisor+1)^0,w,c
  5913   0046AA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5914   0046AC  500B               	movf	(___aomod@divisor+2)^0,w,c
  5915   0046AE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5916   0046B0  500C               	movf	(___aomod@divisor+3)^0,w,c
  5917   0046B2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5918   0046B4  500D               	movf	(___aomod@divisor+4)^0,w,c
  5919   0046B6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5920   0046B8  500E               	movf	(___aomod@divisor+5)^0,w,c
  5921   0046BA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5922   0046BC  500F               	movf	(___aomod@divisor+6)^0,w,c
  5923   0046BE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5924   0046C0  5010               	movf	(___aomod@divisor+7)^0,w,c
  5925   0046C2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5926   0046C4  A0D8               	btfss	status,0,c
  5927   0046C6  EF67  F023         	goto	u3421
  5928   0046CA  EF69  F023         	goto	u3420
  5929   0046CE                     u3421:
  5930   0046CE  EF79  F023         	goto	l3909
  5931   0046D2                     u3420:
  5932   0046D2  5009               	movf	___aomod@divisor^0,w,c
  5933   0046D4  5E01               	subwf	___aomod@dividend^0,f,c
  5934   0046D6  500A               	movf	(___aomod@divisor+1)^0,w,c
  5935   0046D8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5936   0046DA  500B               	movf	(___aomod@divisor+2)^0,w,c
  5937   0046DC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5938   0046DE  500C               	movf	(___aomod@divisor+3)^0,w,c
  5939   0046E0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5940   0046E2  500D               	movf	(___aomod@divisor+4)^0,w,c
  5941   0046E4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5942   0046E6  500E               	movf	(___aomod@divisor+5)^0,w,c
  5943   0046E8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5944   0046EA  500F               	movf	(___aomod@divisor+6)^0,w,c
  5945   0046EC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5946   0046EE  5010               	movf	(___aomod@divisor+7)^0,w,c
  5947   0046F0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5948   0046F2                     l3909:
  5949   0046F2  90D8               	bcf	status,0,c
  5950   0046F4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5951   0046F6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5952   0046F8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5953   0046FA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5954   0046FC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5955   0046FE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5956   004700  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5957   004702  3209               	rrcf	___aomod@divisor^0,f,c
  5958   004704  2E11               	decfsz	___aomod@counter^0,f,c
  5959   004706  EF52  F023         	goto	l3905
  5960   00470A                     l3913:
  5961   00470A  5012               	movf	___aomod@sign^0,w,c
  5962   00470C  B4D8               	btfsc	status,2,c
  5963   00470E  EF8B  F023         	goto	u3431
  5964   004712  EF8D  F023         	goto	u3430
  5965   004716                     u3431:
  5966   004716  EF9D  F023         	goto	l3917
  5967   00471A                     u3430:
  5968   00471A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5969   00471C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5970   00471E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5971   004720  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5972   004722  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5973   004724  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5974   004726  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5975   004728  6C01               	negf	___aomod@dividend^0,c
  5976   00472A  0E00               	movlw	0
  5977   00472C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5978   00472E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5979   004730  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5980   004732  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5981   004734  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5982   004736  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5983   004738  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5984   00473A                     l3917:
  5985   00473A  C001  F001         	movff	___aomod@dividend,?___aomod
  5986   00473E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  5987   004742  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  5988   004746  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  5989   00474A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  5990   00474E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  5991   004752  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  5992   004756  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5993   00475A  0012               	return		;funcret
  5994   00475C                     __end_of___aomod:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function ___aodiv *****************
  5998 ;; Defined at:
  5999 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  dividend        8    0[COMRAM] long long 
  6002 ;;  divisor         8    8[COMRAM] long long 
  6003 ;; Auto vars:     Size  Location     Type
  6004 ;;  quotient        8   18[COMRAM] long long 
  6005 ;;  sign            1   17[COMRAM] unsigned char 
  6006 ;;  counter         1   16[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  8    0[COMRAM] long long 
  6009 ;; Registers used:
  6010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6016 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;Total ram usage:       26 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 1
  6023 ;; This function calls:
  6024 ;;		Nothing
  6025 ;; This function is called by:
  6026 ;;		_dtoa
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text19
  6031   004304                     __ptext19:
  6032                           	callstack 0
  6033   004304                     ___aodiv:
  6034                           	callstack 25
  6035   004304  0E00               	movlw	0
  6036   004306  6E12               	movwf	___aodiv@sign^0,c
  6037   004308  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6038   00430A  EF8B  F021         	goto	u3310
  6039   00430E  EF89  F021         	goto	u3311
  6040   004312                     u3311:
  6041   004312  EF9D  F021         	goto	l3849
  6042   004316                     u3310:
  6043   004316  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6044   004318  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6045   00431A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6046   00431C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6047   00431E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6048   004320  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6049   004322  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6050   004324  6C09               	negf	___aodiv@divisor^0,c
  6051   004326  0E00               	movlw	0
  6052   004328  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6053   00432A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6054   00432C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6055   00432E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6056   004330  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6057   004332  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6058   004334  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6059   004336  0E01               	movlw	1
  6060   004338  6E12               	movwf	___aodiv@sign^0,c
  6061   00433A                     l3849:
  6062   00433A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6063   00433C  EFA4  F021         	goto	u3320
  6064   004340  EFA2  F021         	goto	u3321
  6065   004344                     u3321:
  6066   004344  EFB6  F021         	goto	l3855
  6067   004348                     u3320:
  6068   004348  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6069   00434A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6070   00434C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6071   00434E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6072   004350  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6073   004352  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6074   004354  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6075   004356  6C01               	negf	___aodiv@dividend^0,c
  6076   004358  0E00               	movlw	0
  6077   00435A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6078   00435C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6079   00435E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6080   004360  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6081   004362  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6082   004364  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6083   004366  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6084   004368  0E01               	movlw	1
  6085   00436A  1A12               	xorwf	___aodiv@sign^0,f,c
  6086   00436C                     l3855:
  6087   00436C  EE20  F013         	lfsr	2,___aodiv@quotient
  6088   004370  0E07               	movlw	7
  6089   004372                     u3331:
  6090   004372  6ADE               	clrf	postinc2,c
  6091   004374  06E8               	decf	wreg,f,c
  6092   004376  E2FD               	bc	u3331
  6093   004378  5009               	movf	___aodiv@divisor^0,w,c
  6094   00437A  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6095   00437C  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6096   00437E  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6097   004380  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6098   004382  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6099   004384  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6100   004386  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6101   004388  B4D8               	btfsc	status,2,c
  6102   00438A  EFC9  F021         	goto	u3341
  6103   00438E  EFCB  F021         	goto	u3340
  6104   004392                     u3341:
  6105   004392  EF1D  F022         	goto	l3877
  6106   004396                     u3340:
  6107   004396  0E01               	movlw	1
  6108   004398  6E11               	movwf	___aodiv@counter^0,c
  6109   00439A  EFD9  F021         	goto	l3863
  6110   00439E                     l3861:
  6111   00439E  90D8               	bcf	status,0,c
  6112   0043A0  3609               	rlcf	___aodiv@divisor^0,f,c
  6113   0043A2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6114   0043A4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6115   0043A6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6116   0043A8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6117   0043AA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6118   0043AC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6119   0043AE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6120   0043B0  2A11               	incf	___aodiv@counter^0,f,c
  6121   0043B2                     l3863:
  6122   0043B2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6123   0043B4  EFDE  F021         	goto	u3351
  6124   0043B8  EFE0  F021         	goto	u3350
  6125   0043BC                     u3351:
  6126   0043BC  EFCF  F021         	goto	l3861
  6127   0043C0                     u3350:
  6128   0043C0                     l3865:
  6129   0043C0  90D8               	bcf	status,0,c
  6130   0043C2  3613               	rlcf	___aodiv@quotient^0,f,c
  6131   0043C4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6132   0043C6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6133   0043C8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6134   0043CA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6135   0043CC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6136   0043CE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6137   0043D0  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6138   0043D2  5009               	movf	___aodiv@divisor^0,w,c
  6139   0043D4  5C01               	subwf	___aodiv@dividend^0,w,c
  6140   0043D6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6141   0043D8  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6142   0043DA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6143   0043DC  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6144   0043DE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6145   0043E0  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6146   0043E2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6147   0043E4  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6148   0043E6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6149   0043E8  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6150   0043EA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6151   0043EC  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6152   0043EE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6153   0043F0  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6154   0043F2  A0D8               	btfss	status,0,c
  6155   0043F4  EFFE  F021         	goto	u3361
  6156   0043F8  EF00  F022         	goto	u3360
  6157   0043FC                     u3361:
  6158   0043FC  EF11  F022         	goto	l3873
  6159   004400                     u3360:
  6160   004400  5009               	movf	___aodiv@divisor^0,w,c
  6161   004402  5E01               	subwf	___aodiv@dividend^0,f,c
  6162   004404  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6163   004406  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6164   004408  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6165   00440A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6166   00440C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6167   00440E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6168   004410  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6169   004412  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6170   004414  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6171   004416  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6172   004418  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6173   00441A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6174   00441C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6175   00441E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6176   004420  8013               	bsf	___aodiv@quotient^0,0,c
  6177   004422                     l3873:
  6178   004422  90D8               	bcf	status,0,c
  6179   004424  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6180   004426  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6181   004428  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6182   00442A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6183   00442C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6184   00442E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6185   004430  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6186   004432  3209               	rrcf	___aodiv@divisor^0,f,c
  6187   004434  2E11               	decfsz	___aodiv@counter^0,f,c
  6188   004436  EFE0  F021         	goto	l3865
  6189   00443A                     l3877:
  6190   00443A  5012               	movf	___aodiv@sign^0,w,c
  6191   00443C  B4D8               	btfsc	status,2,c
  6192   00443E  EF23  F022         	goto	u3371
  6193   004442  EF25  F022         	goto	u3370
  6194   004446                     u3371:
  6195   004446  EF35  F022         	goto	l3881
  6196   00444A                     u3370:
  6197   00444A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6198   00444C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6199   00444E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6200   004450  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6201   004452  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6202   004454  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6203   004456  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6204   004458  6C13               	negf	___aodiv@quotient^0,c
  6205   00445A  0E00               	movlw	0
  6206   00445C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6207   00445E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6208   004460  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6209   004462  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6210   004464  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6211   004466  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6212   004468  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6213   00446A                     l3881:
  6214   00446A  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6215   00446E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6216   004472  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6217   004476  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6218   00447A  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6219   00447E  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6220   004482  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6221   004486  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6222   00448A  0012               	return		;funcret
  6223   00448C                     __end_of___aodiv:
  6224                           	callstack 0
  6225                           
  6226 ;; *************** function _sendStringSerial4 *****************
  6227 ;; Defined at:
  6228 ;;		line 33 in file "serial.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  string          2    1[COMRAM] PTR unsigned char 
  6231 ;;		 -> main@buf(100), 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  1    wreg      void 
  6236 ;; Registers used:
  6237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;Total ram usage:        2 bytes
  6248 ;; Hardware stack levels used: 1
  6249 ;; Hardware stack levels required when called: 2
  6250 ;; This function calls:
  6251 ;;		_sendCharSerial4
  6252 ;; This function is called by:
  6253 ;;		_main
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text20
  6258   005A8E                     __ptext20:
  6259                           	callstack 0
  6260   005A8E                     _sendStringSerial4:
  6261                           	callstack 28
  6262   005A8E                     
  6263                           ;serial.c: 34:     while (*string!=0){
  6264   005A8E  EF52  F02D         	goto	l5231
  6265   005A92                     l5227:
  6266                           
  6267                           ;serial.c: 35:         sendCharSerial4(*string++);
  6268   005A92  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6269   005A96  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6270   005A9A  50DF               	movf	indf2,w,c
  6271   005A9C  ECBA  F02D         	call	_sendCharSerial4
  6272   005AA0  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6273   005AA2  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6274   005AA4                     l5231:
  6275                           
  6276                           ;serial.c: 34:     while (*string!=0){
  6277   005AA4  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6278   005AA8  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6279   005AAC  50DF               	movf	indf2,w,c
  6280   005AAE  A4D8               	btfss	status,2,c
  6281   005AB0  EF5C  F02D         	goto	u5301
  6282   005AB4  EF5E  F02D         	goto	u5300
  6283   005AB8                     u5301:
  6284   005AB8  EF49  F02D         	goto	l5227
  6285   005ABC                     u5300:
  6286   005ABC  0012               	return		;funcret
  6287   005ABE                     __end_of_sendStringSerial4:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _sendCharSerial4 *****************
  6291 ;; Defined at:
  6292 ;;		line 26 in file "serial.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  charToSend      1    wreg     unsigned char 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  charToSend      1    0[COMRAM] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        1 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 1
  6313 ;; This function calls:
  6314 ;;		Nothing
  6315 ;; This function is called by:
  6316 ;;		_sendStringSerial4
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text21
  6321   005B74                     __ptext21:
  6322                           	callstack 0
  6323   005B74                     _sendCharSerial4:
  6324                           	callstack 28
  6325                           
  6326                           ;incstack = 0
  6327                           ;sendCharSerial4@charToSend stored from wreg
  6328   005B74  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6329   005B76                     l203:
  6330   005B76  010E               	movlb	14	; () banked
  6331   005B78  A537               	btfss	55,2,b	;volatile
  6332   005B7A  EFC1  F02D         	goto	u4851
  6333   005B7E  EFC3  F02D         	goto	u4850
  6334   005B82                     u4851:
  6335   005B82  EFBB  F02D         	goto	l203
  6336   005B86                     u4850:
  6337   005B86                     
  6338                           ; BSR set to: 14
  6339                           ;serial.c: 28:     TX4REG = charToSend;
  6340   005B86  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6341   005B8A                     
  6342                           ; BSR set to: 14
  6343   005B8A  0012               	return		;funcret
  6344   005B8C                     __end_of_sendCharSerial4:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _readColours *****************
  6348 ;; Defined at:
  6349 ;;		line 105 in file "color.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  vals            2   11[COMRAM] PTR struct RGB
  6352 ;;		 -> vals(8), 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6364 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;Total ram usage:        2 bytes
  6369 ;; Hardware stack levels used: 1
  6370 ;; Hardware stack levels required when called: 4
  6371 ;; This function calls:
  6372 ;;		_color_read_Blue
  6373 ;;		_color_read_Green
  6374 ;;		_color_read_Red
  6375 ;;		_color_read_lum
  6376 ;; This function is called by:
  6377 ;;		_main
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text22
  6382   00516A                     __ptext22:
  6383                           	callstack 0
  6384   00516A                     _readColours:
  6385                           	callstack 26
  6386   00516A                     
  6387                           ;color.c: 107:     vals ->R = color_read_Red();
  6388   00516A  EC8F  F02B         	call	_color_read_Red	;wreg free
  6389   00516E  C00C  FFD9         	movff	readColours@vals,fsr2l
  6390   005172  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6391   005176  C005  FFDE         	movff	?_color_read_Red,postinc2
  6392   00517A  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6393                           
  6394                           ;color.c: 108:     vals ->B = color_read_Blue();
  6395   00517E  ECDF  F02B         	call	_color_read_Blue	;wreg free
  6396   005182  EE20 F004          	lfsr	2,4
  6397   005186  500C               	movf	readColours@vals^0,w,c
  6398   005188  26D9               	addwf	fsr2l,f,c
  6399   00518A  500D               	movf	(readColours@vals+1)^0,w,c
  6400   00518C  22DA               	addwfc	fsr2h,f,c
  6401   00518E  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6402   005192  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6403                           
  6404                           ;color.c: 109:     vals ->G = color_read_Green();
  6405   005196  ECB7  F02B         	call	_color_read_Green	;wreg free
  6406   00519A  EE20 F002          	lfsr	2,2
  6407   00519E  500C               	movf	readColours@vals^0,w,c
  6408   0051A0  26D9               	addwf	fsr2l,f,c
  6409   0051A2  500D               	movf	(readColours@vals+1)^0,w,c
  6410   0051A4  22DA               	addwfc	fsr2h,f,c
  6411   0051A6  C005  FFDE         	movff	?_color_read_Green,postinc2
  6412   0051AA  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6413                           
  6414                           ;color.c: 110:     vals ->L = color_read_lum();
  6415   0051AE  EC67  F02B         	call	_color_read_lum	;wreg free
  6416   0051B2  EE20 F006          	lfsr	2,6
  6417   0051B6  500C               	movf	readColours@vals^0,w,c
  6418   0051B8  26D9               	addwf	fsr2l,f,c
  6419   0051BA  500D               	movf	(readColours@vals+1)^0,w,c
  6420   0051BC  22DA               	addwfc	fsr2h,f,c
  6421   0051BE  C005  FFDE         	movff	?_color_read_lum,postinc2
  6422   0051C2  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6423   0051C6  0012               	return		;funcret
  6424   0051C8                     __end_of_readColours:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function _color_read_lum *****************
  6428 ;; Defined at:
  6429 ;;		line 49 in file "color.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  tmp             2    9[COMRAM] unsigned int 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  2    4[COMRAM] unsigned int 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6443 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;Total ram usage:        7 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; Hardware stack levels required when called: 3
  6450 ;; This function calls:
  6451 ;;		_I2C_2_Master_Read
  6452 ;;		_I2C_2_Master_RepStart
  6453 ;;		_I2C_2_Master_Start
  6454 ;;		_I2C_2_Master_Stop
  6455 ;;		_I2C_2_Master_Write
  6456 ;; This function is called by:
  6457 ;;		_readColours
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text23
  6462   0056CE                     __ptext23:
  6463                           	callstack 0
  6464   0056CE                     _color_read_lum:
  6465                           	callstack 26
  6466   0056CE                     
  6467                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6468   0056CE  ECD6  F02D         	call	_I2C_2_Master_Start	;wreg free
  6469                           
  6470                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6471   0056D2  0E52               	movlw	82
  6472   0056D4  ECC6  F02D         	call	_I2C_2_Master_Write
  6473                           
  6474                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6475   0056D8  0EB4               	movlw	180
  6476   0056DA  ECC6  F02D         	call	_I2C_2_Master_Write
  6477                           
  6478                           ;color.c: 55:  I2C_2_Master_RepStart();
  6479   0056DE  ECCC  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6480                           
  6481                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6482   0056E2  0E53               	movlw	83
  6483   0056E4  ECC6  F02D         	call	_I2C_2_Master_Write
  6484                           
  6485                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6486   0056E8  0E01               	movlw	1
  6487   0056EA  EC6E  F02C         	call	_I2C_2_Master_Read
  6488   0056EE  6E07               	movwf	??_color_read_lum^0,c
  6489   0056F0  5007               	movf	??_color_read_lum^0,w,c
  6490   0056F2  6E0A               	movwf	color_read_lum@tmp^0,c
  6491   0056F4  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6492                           
  6493                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6494   0056F6  0E00               	movlw	0
  6495   0056F8  EC6E  F02C         	call	_I2C_2_Master_Read
  6496   0056FC  6E07               	movwf	??_color_read_lum^0,c
  6497   0056FE  5007               	movf	??_color_read_lum^0,w,c
  6498   005700  6E09               	movwf	(??_color_read_lum+2)^0,c
  6499   005702  6A08               	clrf	(??_color_read_lum+1)^0,c
  6500   005704  500A               	movf	color_read_lum@tmp^0,w,c
  6501   005706  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6502   005708  6E0A               	movwf	color_read_lum@tmp^0,c
  6503   00570A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6504   00570C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6505   00570E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6506                           
  6507                           ;color.c: 59:  I2C_2_Master_Stop();
  6508   005710  ECD1  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6509   005714                     
  6510                           ;color.c: 60:  return tmp;
  6511   005714  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6512   005718  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6513   00571C  0012               	return		;funcret
  6514   00571E                     __end_of_color_read_lum:
  6515                           	callstack 0
  6516                           
  6517 ;; *************** function _color_read_Red *****************
  6518 ;; Defined at:
  6519 ;;		line 63 in file "color.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;		None
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  tmp             2    9[COMRAM] unsigned int 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  2    4[COMRAM] unsigned int 
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6535 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;Total ram usage:        7 bytes
  6538 ;; Hardware stack levels used: 1
  6539 ;; Hardware stack levels required when called: 3
  6540 ;; This function calls:
  6541 ;;		_I2C_2_Master_Read
  6542 ;;		_I2C_2_Master_RepStart
  6543 ;;		_I2C_2_Master_Start
  6544 ;;		_I2C_2_Master_Stop
  6545 ;;		_I2C_2_Master_Write
  6546 ;; This function is called by:
  6547 ;;		_readColours
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text24
  6552   00571E                     __ptext24:
  6553                           	callstack 0
  6554   00571E                     _color_read_Red:
  6555                           	callstack 26
  6556   00571E                     
  6557                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6558   00571E  ECD6  F02D         	call	_I2C_2_Master_Start	;wreg free
  6559                           
  6560                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6561   005722  0E52               	movlw	82
  6562   005724  ECC6  F02D         	call	_I2C_2_Master_Write
  6563                           
  6564                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6565   005728  0EB6               	movlw	182
  6566   00572A  ECC6  F02D         	call	_I2C_2_Master_Write
  6567                           
  6568                           ;color.c: 69:  I2C_2_Master_RepStart();
  6569   00572E  ECCC  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6570                           
  6571                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6572   005732  0E53               	movlw	83
  6573   005734  ECC6  F02D         	call	_I2C_2_Master_Write
  6574                           
  6575                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  6576   005738  0E01               	movlw	1
  6577   00573A  EC6E  F02C         	call	_I2C_2_Master_Read
  6578   00573E  6E07               	movwf	??_color_read_Red^0,c
  6579   005740  5007               	movf	??_color_read_Red^0,w,c
  6580   005742  6E0A               	movwf	color_read_Red@tmp^0,c
  6581   005744  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6582                           
  6583                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6584   005746  0E00               	movlw	0
  6585   005748  EC6E  F02C         	call	_I2C_2_Master_Read
  6586   00574C  6E07               	movwf	??_color_read_Red^0,c
  6587   00574E  5007               	movf	??_color_read_Red^0,w,c
  6588   005750  6E09               	movwf	(??_color_read_Red+2)^0,c
  6589   005752  6A08               	clrf	(??_color_read_Red+1)^0,c
  6590   005754  500A               	movf	color_read_Red@tmp^0,w,c
  6591   005756  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6592   005758  6E0A               	movwf	color_read_Red@tmp^0,c
  6593   00575A  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6594   00575C  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6595   00575E  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6596                           
  6597                           ;color.c: 73:  I2C_2_Master_Stop();
  6598   005760  ECD1  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6599   005764                     
  6600                           ;color.c: 74:  return tmp;
  6601   005764  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6602   005768  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6603   00576C  0012               	return		;funcret
  6604   00576E                     __end_of_color_read_Red:
  6605                           	callstack 0
  6606                           
  6607 ;; *************** function _color_read_Green *****************
  6608 ;; Defined at:
  6609 ;;		line 76 in file "color.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;		None
  6612 ;; Auto vars:     Size  Location     Type
  6613 ;;  tmp             2    9[COMRAM] unsigned int 
  6614 ;; Return value:  Size  Location     Type
  6615 ;;                  2    4[COMRAM] unsigned int 
  6616 ;; Registers used:
  6617 ;;		wreg, status,2, status,0, cstack
  6618 ;; Tracked objects:
  6619 ;;		On entry : 0/0
  6620 ;;		On exit  : 0/0
  6621 ;;		Unchanged: 0/0
  6622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6623 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6627 ;;Total ram usage:        7 bytes
  6628 ;; Hardware stack levels used: 1
  6629 ;; Hardware stack levels required when called: 3
  6630 ;; This function calls:
  6631 ;;		_I2C_2_Master_Read
  6632 ;;		_I2C_2_Master_RepStart
  6633 ;;		_I2C_2_Master_Start
  6634 ;;		_I2C_2_Master_Stop
  6635 ;;		_I2C_2_Master_Write
  6636 ;; This function is called by:
  6637 ;;		_readColours
  6638 ;; This function uses a non-reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text25
  6642   00576E                     __ptext25:
  6643                           	callstack 0
  6644   00576E                     _color_read_Green:
  6645                           	callstack 26
  6646   00576E                     
  6647                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  6648   00576E  ECD6  F02D         	call	_I2C_2_Master_Start	;wreg free
  6649                           
  6650                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  6651   005772  0E52               	movlw	82
  6652   005774  ECC6  F02D         	call	_I2C_2_Master_Write
  6653                           
  6654                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  6655   005778  0EB8               	movlw	184
  6656   00577A  ECC6  F02D         	call	_I2C_2_Master_Write
  6657                           
  6658                           ;color.c: 82:  I2C_2_Master_RepStart();
  6659   00577E  ECCC  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6660                           
  6661                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  6662   005782  0E53               	movlw	83
  6663   005784  ECC6  F02D         	call	_I2C_2_Master_Write
  6664                           
  6665                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  6666   005788  0E01               	movlw	1
  6667   00578A  EC6E  F02C         	call	_I2C_2_Master_Read
  6668   00578E  6E07               	movwf	??_color_read_Green^0,c
  6669   005790  5007               	movf	??_color_read_Green^0,w,c
  6670   005792  6E0A               	movwf	color_read_Green@tmp^0,c
  6671   005794  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6672                           
  6673                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6674   005796  0E00               	movlw	0
  6675   005798  EC6E  F02C         	call	_I2C_2_Master_Read
  6676   00579C  6E07               	movwf	??_color_read_Green^0,c
  6677   00579E  5007               	movf	??_color_read_Green^0,w,c
  6678   0057A0  6E09               	movwf	(??_color_read_Green+2)^0,c
  6679   0057A2  6A08               	clrf	(??_color_read_Green+1)^0,c
  6680   0057A4  500A               	movf	color_read_Green@tmp^0,w,c
  6681   0057A6  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6682   0057A8  6E0A               	movwf	color_read_Green@tmp^0,c
  6683   0057AA  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6684   0057AC  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6685   0057AE  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6686                           
  6687                           ;color.c: 86:  I2C_2_Master_Stop();
  6688   0057B0  ECD1  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6689   0057B4                     
  6690                           ;color.c: 87:  return tmp;
  6691   0057B4  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6692   0057B8  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6693   0057BC  0012               	return		;funcret
  6694   0057BE                     __end_of_color_read_Green:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _color_read_Blue *****************
  6698 ;; Defined at:
  6699 ;;		line 90 in file "color.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;		None
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  tmp             2    9[COMRAM] unsigned int 
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  2    4[COMRAM] unsigned int 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;Total ram usage:        7 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 3
  6720 ;; This function calls:
  6721 ;;		_I2C_2_Master_Read
  6722 ;;		_I2C_2_Master_RepStart
  6723 ;;		_I2C_2_Master_Start
  6724 ;;		_I2C_2_Master_Stop
  6725 ;;		_I2C_2_Master_Write
  6726 ;; This function is called by:
  6727 ;;		_readColours
  6728 ;; This function uses a non-reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text26
  6732   0057BE                     __ptext26:
  6733                           	callstack 0
  6734   0057BE                     _color_read_Blue:
  6735                           	callstack 26
  6736   0057BE                     
  6737                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  6738   0057BE  ECD6  F02D         	call	_I2C_2_Master_Start	;wreg free
  6739                           
  6740                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  6741   0057C2  0E52               	movlw	82
  6742   0057C4  ECC6  F02D         	call	_I2C_2_Master_Write
  6743                           
  6744                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  6745   0057C8  0EBA               	movlw	186
  6746   0057CA  ECC6  F02D         	call	_I2C_2_Master_Write
  6747                           
  6748                           ;color.c: 96:  I2C_2_Master_RepStart();
  6749   0057CE  ECCC  F02D         	call	_I2C_2_Master_RepStart	;wreg free
  6750                           
  6751                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  6752   0057D2  0E53               	movlw	83
  6753   0057D4  ECC6  F02D         	call	_I2C_2_Master_Write
  6754                           
  6755                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  6756   0057D8  0E01               	movlw	1
  6757   0057DA  EC6E  F02C         	call	_I2C_2_Master_Read
  6758   0057DE  6E07               	movwf	??_color_read_Blue^0,c
  6759   0057E0  5007               	movf	??_color_read_Blue^0,w,c
  6760   0057E2  6E0A               	movwf	color_read_Blue@tmp^0,c
  6761   0057E4  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6762                           
  6763                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6764   0057E6  0E00               	movlw	0
  6765   0057E8  EC6E  F02C         	call	_I2C_2_Master_Read
  6766   0057EC  6E07               	movwf	??_color_read_Blue^0,c
  6767   0057EE  5007               	movf	??_color_read_Blue^0,w,c
  6768   0057F0  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6769   0057F2  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6770   0057F4  500A               	movf	color_read_Blue@tmp^0,w,c
  6771   0057F6  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6772   0057F8  6E0A               	movwf	color_read_Blue@tmp^0,c
  6773   0057FA  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6774   0057FC  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6775   0057FE  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6776                           
  6777                           ;color.c: 100:  I2C_2_Master_Stop();
  6778   005800  ECD1  F02D         	call	_I2C_2_Master_Stop	;wreg free
  6779   005804                     
  6780                           ;color.c: 101:  return tmp;
  6781   005804  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6782   005808  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6783   00580C  0012               	return		;funcret
  6784   00580E                     __end_of_color_read_Blue:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _I2C_2_Master_RepStart *****************
  6788 ;; Defined at:
  6789 ;;		line 33 in file "i2c.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;		None
  6794 ;; Return value:  Size  Location     Type
  6795 ;;                  1    wreg      void 
  6796 ;; Registers used:
  6797 ;;		wreg, status,2, status,0, cstack
  6798 ;; Tracked objects:
  6799 ;;		On entry : 0/0
  6800 ;;		On exit  : 0/0
  6801 ;;		Unchanged: 0/0
  6802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;Total ram usage:        0 bytes
  6808 ;; Hardware stack levels used: 1
  6809 ;; Hardware stack levels required when called: 2
  6810 ;; This function calls:
  6811 ;;		_I2C_2_Master_Idle
  6812 ;; This function is called by:
  6813 ;;		_color_read_lum
  6814 ;;		_color_read_Red
  6815 ;;		_color_read_Green
  6816 ;;		_color_read_Blue
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text27
  6821   005B98                     __ptext27:
  6822                           	callstack 0
  6823   005B98                     _I2C_2_Master_RepStart:
  6824                           	callstack 26
  6825   005B98                     
  6826                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6827   005B98  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6828   005B9C                     
  6829                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6830   005B9C  010E               	movlb	14	; () banked
  6831   005B9E  83DA               	bsf	218,1,b	;volatile
  6832   005BA0                     
  6833                           ; BSR set to: 14
  6834   005BA0  0012               	return		;funcret
  6835   005BA2                     __end_of_I2C_2_Master_RepStart:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _I2C_2_Master_Read *****************
  6839 ;; Defined at:
  6840 ;;		line 51 in file "i2c.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  ack             1    wreg     unsigned char 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  ack             1    2[COMRAM] unsigned char 
  6845 ;;  tmp             1    3[COMRAM] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      unsigned char 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;Total ram usage:        3 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 2
  6862 ;; This function calls:
  6863 ;;		_I2C_2_Master_Idle
  6864 ;; This function is called by:
  6865 ;;		_color_read_lum
  6866 ;;		_color_read_Red
  6867 ;;		_color_read_Green
  6868 ;;		_color_read_Blue
  6869 ;; This function uses a non-reentrant model
  6870 ;;
  6871                           
  6872                           	psect	text28
  6873   0058DC                     __ptext28:
  6874                           	callstack 0
  6875   0058DC                     _I2C_2_Master_Read:
  6876                           	callstack 26
  6877                           
  6878                           ; BSR set to: 14
  6879                           ;incstack = 0
  6880                           ;I2C_2_Master_Read@ack stored from wreg
  6881   0058DC  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6882   0058DE                     
  6883                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6884   0058DE  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6885   0058E2                     
  6886                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6887   0058E2  010E               	movlb	14	; () banked
  6888   0058E4  87DA               	bsf	218,3,b	;volatile
  6889                           
  6890                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6891   0058E6  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6892   0058EA                     
  6893                           ;i2c.c: 57:   tmp = SSP2BUF;
  6894   0058EA  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6895                           
  6896                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6897   0058EE  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  6898   0058F2                     
  6899                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6900   0058F2  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6901   0058F4  B4D8               	btfsc	status,2,c
  6902   0058F6  EF7F  F02C         	goto	u4791
  6903   0058FA  EF83  F02C         	goto	u4790
  6904   0058FE                     u4791:
  6905   0058FE  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6906   005900  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6907   005902  EF84  F02C         	goto	u4808
  6908   005906                     u4790:
  6909   005906  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6910   005908                     u4808:
  6911   005908  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6912   00590A  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6913   00590C  010E               	movlb	14	; () banked
  6914   00590E  51DA               	movf	218,w,b	;volatile
  6915   005910  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6916   005912  0BDF               	andlw	-33
  6917   005914  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6918   005916  6FDA               	movwf	218,b	;volatile
  6919   005918                     
  6920                           ; BSR set to: 14
  6921                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6922   005918  89DA               	bsf	218,4,b	;volatile
  6923   00591A                     
  6924                           ; BSR set to: 14
  6925                           ;i2c.c: 61:   return tmp;
  6926   00591A  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6927   00591C                     
  6928                           ; BSR set to: 14
  6929   00591C  0012               	return		;funcret
  6930   00591E                     __end_of_I2C_2_Master_Read:
  6931                           	callstack 0
  6932                           
  6933 ;; *************** function _initUSART4 *****************
  6934 ;; Defined at:
  6935 ;;		line 4 in file "serial.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;		None
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  1    wreg      void 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6953 ;;Total ram usage:        0 bytes
  6954 ;; Hardware stack levels used: 1
  6955 ;; Hardware stack levels required when called: 1
  6956 ;; This function calls:
  6957 ;;		Nothing
  6958 ;; This function is called by:
  6959 ;;		_main
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           	psect	text29
  6964   005B56                     __ptext29:
  6965                           	callstack 0
  6966   005B56                     _initUSART4:
  6967                           	callstack 29
  6968   005B56                     
  6969                           ;serial.c: 5:     RC0PPS = 0x12;
  6970   005B56  0E12               	movlw	18
  6971   005B58  010E               	movlb	14	; () banked
  6972   005B5A  6F62               	movwf	98,b	;volatile
  6973                           
  6974                           ;serial.c: 6:     RX4PPS = 0x11;
  6975   005B5C  0E11               	movlw	17
  6976   005B5E  6F15               	movwf	21,b	;volatile
  6977   005B60                     
  6978                           ; BSR set to: 14
  6979                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6980   005B60  97E9               	bcf	233,3,b	;volatile
  6981   005B62                     
  6982                           ; BSR set to: 14
  6983                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  6984   005B62  95E8               	bcf	232,2,b	;volatile
  6985                           
  6986                           ;serial.c: 9:     SP4BRGL = 51;
  6987   005B64  0E33               	movlw	51
  6988   005B66  6FE5               	movwf	229,b	;volatile
  6989                           
  6990                           ;serial.c: 10:     SP4BRGH = 0;
  6991   005B68  0E00               	movlw	0
  6992   005B6A  6FE6               	movwf	230,b	;volatile
  6993   005B6C                     
  6994                           ; BSR set to: 14
  6995                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  6996   005B6C  89E7               	bsf	231,4,b	;volatile
  6997   005B6E                     
  6998                           ; BSR set to: 14
  6999                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7000   005B6E  8BE8               	bsf	232,5,b	;volatile
  7001   005B70                     
  7002                           ; BSR set to: 14
  7003                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7004   005B70  8FE7               	bsf	231,7,b	;volatile
  7005   005B72                     
  7006                           ; BSR set to: 14
  7007   005B72  0012               	return		;funcret
  7008   005B74                     __end_of_initUSART4:
  7009                           	callstack 0
  7010                           
  7011 ;; *************** function _initDCmotorsPWM *****************
  7012 ;; Defined at:
  7013 ;;		line 5 in file "dc_motor.c"
  7014 ;; Parameters:    Size  Location     Type
  7015 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7016 ;; Auto vars:     Size  Location     Type
  7017 ;;		None
  7018 ;; Return value:  Size  Location     Type
  7019 ;;                  1    wreg      void 
  7020 ;; Registers used:
  7021 ;;		wreg, status,2
  7022 ;; Tracked objects:
  7023 ;;		On entry : 0/0
  7024 ;;		On exit  : 0/0
  7025 ;;		Unchanged: 0/0
  7026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;Total ram usage:        2 bytes
  7032 ;; Hardware stack levels used: 1
  7033 ;; Hardware stack levels required when called: 1
  7034 ;; This function calls:
  7035 ;;		Nothing
  7036 ;; This function is called by:
  7037 ;;		_main
  7038 ;; This function uses a non-reentrant model
  7039 ;;
  7040                           
  7041                           	psect	text30
  7042   004E30                     __ptext30:
  7043                           	callstack 0
  7044   004E30                     _initDCmotorsPWM:
  7045                           	callstack 29
  7046   004E30                     
  7047                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7048   004E30  0E05               	movlw	5
  7049   004E32  010E               	movlb	14	; () banked
  7050   004E34  6F74               	movwf	116,b	;volatile
  7051                           
  7052                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7053   004E36  0E06               	movlw	6
  7054   004E38  6F76               	movwf	118,b	;volatile
  7055                           
  7056                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7057   004E3A  0E07               	movlw	7
  7058   004E3C  6F69               	movwf	105,b	;volatile
  7059                           
  7060                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7061   004E3E  0E08               	movlw	8
  7062   004E40  6F88               	movwf	136,b	;volatile
  7063   004E42                     
  7064                           ; BSR set to: 14
  7065                           ;dc_motor.c: 15:     TRISEbits.TRISE2=0;
  7066   004E42  9485               	bcf	133,2,c	;volatile
  7067   004E44                     
  7068                           ; BSR set to: 14
  7069                           ;dc_motor.c: 16:     TRISEbits.TRISE4=0;
  7070   004E44  9885               	bcf	133,4,c	;volatile
  7071   004E46                     
  7072                           ; BSR set to: 14
  7073                           ;dc_motor.c: 17:     TRISCbits.TRISC7=0;
  7074   004E46  9E83               	bcf	131,7,c	;volatile
  7075   004E48                     
  7076                           ; BSR set to: 14
  7077                           ;dc_motor.c: 18:     TRISGbits.TRISG6=0;
  7078   004E48  9C87               	bcf	135,6,c	;volatile
  7079                           
  7080                           ;dc_motor.c: 22:     T2CONbits.CKPS=0b011;
  7081   004E4A  50BD               	movf	189,w,c	;volatile
  7082   004E4C  0B8F               	andlw	-113
  7083   004E4E  0930               	iorlw	48
  7084   004E50  6EBD               	movwf	189,c	;volatile
  7085                           
  7086                           ;dc_motor.c: 23:     T2HLTbits.MODE=0b00000;
  7087   004E52  0EE0               	movlw	-32
  7088   004E54  16BE               	andwf	190,f,c	;volatile
  7089                           
  7090                           ;dc_motor.c: 24:     T2CLKCONbits.CS=0b0001;
  7091   004E56  50BF               	movf	191,w,c	;volatile
  7092   004E58  0BF0               	andlw	-16
  7093   004E5A  0901               	iorlw	1
  7094   004E5C  6EBF               	movwf	191,c	;volatile
  7095   004E5E                     
  7096                           ; BSR set to: 14
  7097                           ;dc_motor.c: 28:     T2PR=PWMperiod;
  7098   004E5E  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7099   004E62                     
  7100                           ; BSR set to: 14
  7101                           ;dc_motor.c: 29:     T2CONbits.ON=1;
  7102   004E62  8EBD               	bsf	189,7,c	;volatile
  7103                           
  7104                           ;dc_motor.c: 33:     CCPR1H=0;
  7105   004E64  0E00               	movlw	0
  7106   004E66  6EAA               	movwf	170,c	;volatile
  7107                           
  7108                           ;dc_motor.c: 34:     CCPR2H=0;
  7109   004E68  0E00               	movlw	0
  7110   004E6A  6EA6               	movwf	166,c	;volatile
  7111                           
  7112                           ;dc_motor.c: 35:     CCPR3H=0;
  7113   004E6C  0E00               	movlw	0
  7114   004E6E  010F               	movlb	15	; () banked
  7115   004E70  6F25               	movwf	37,b	;volatile
  7116                           
  7117                           ;dc_motor.c: 36:     CCPR4H=0;
  7118   004E72  0E00               	movlw	0
  7119   004E74  6F21               	movwf	33,b	;volatile
  7120                           
  7121                           ;dc_motor.c: 39:     CCPTMRS0bits.C1TSEL=0;
  7122   004E76  0EFC               	movlw	-4
  7123   004E78  16AD               	andwf	173,f,c	;volatile
  7124                           
  7125                           ;dc_motor.c: 40:     CCPTMRS0bits.C2TSEL=0;
  7126   004E7A  0EF3               	movlw	-13
  7127   004E7C  16AD               	andwf	173,f,c	;volatile
  7128                           
  7129                           ;dc_motor.c: 41:     CCPTMRS0bits.C3TSEL=0;
  7130   004E7E  0ECF               	movlw	-49
  7131   004E80  16AD               	andwf	173,f,c	;volatile
  7132                           
  7133                           ;dc_motor.c: 42:     CCPTMRS0bits.C4TSEL=0;
  7134   004E82  0E3F               	movlw	-193
  7135   004E84  16AD               	andwf	173,f,c	;volatile
  7136   004E86                     
  7137                           ; BSR set to: 15
  7138                           ;dc_motor.c: 45:     CCP1CONbits.FMT=1;
  7139   004E86  88AB               	bsf	171,4,c	;volatile
  7140                           
  7141                           ;dc_motor.c: 46:     CCP1CONbits.CCP1MODE=0b1100;
  7142   004E88  50AB               	movf	171,w,c	;volatile
  7143   004E8A  0BF0               	andlw	-16
  7144   004E8C  090C               	iorlw	12
  7145   004E8E  6EAB               	movwf	171,c	;volatile
  7146   004E90                     
  7147                           ; BSR set to: 15
  7148                           ;dc_motor.c: 47:     CCP1CONbits.EN=1;
  7149   004E90  8EAB               	bsf	171,7,c	;volatile
  7150   004E92                     
  7151                           ; BSR set to: 15
  7152                           ;dc_motor.c: 49:     CCP2CONbits.FMT=1;
  7153   004E92  88A7               	bsf	167,4,c	;volatile
  7154                           
  7155                           ;dc_motor.c: 50:     CCP2CONbits.CCP2MODE=0b1100;
  7156   004E94  50A7               	movf	167,w,c	;volatile
  7157   004E96  0BF0               	andlw	-16
  7158   004E98  090C               	iorlw	12
  7159   004E9A  6EA7               	movwf	167,c	;volatile
  7160   004E9C                     
  7161                           ; BSR set to: 15
  7162                           ;dc_motor.c: 51:     CCP2CONbits.EN=1;
  7163   004E9C  8EA7               	bsf	167,7,c	;volatile
  7164   004E9E                     
  7165                           ; BSR set to: 15
  7166                           ;dc_motor.c: 53:     CCP3CONbits.FMT=1;
  7167   004E9E  8926               	bsf	38,4,b	;volatile
  7168                           
  7169                           ;dc_motor.c: 54:     CCP3CONbits.CCP3MODE=0b1100;
  7170   004EA0  5126               	movf	38,w,b	;volatile
  7171   004EA2  0BF0               	andlw	-16
  7172   004EA4  090C               	iorlw	12
  7173   004EA6  6F26               	movwf	38,b	;volatile
  7174   004EA8                     
  7175                           ; BSR set to: 15
  7176                           ;dc_motor.c: 55:     CCP3CONbits.EN=1;
  7177   004EA8  8F26               	bsf	38,7,b	;volatile
  7178   004EAA                     
  7179                           ; BSR set to: 15
  7180                           ;dc_motor.c: 57:     CCP4CONbits.FMT=1;
  7181   004EAA  8922               	bsf	34,4,b	;volatile
  7182                           
  7183                           ;dc_motor.c: 58:     CCP4CONbits.CCP4MODE=0b1100;
  7184   004EAC  5122               	movf	34,w,b	;volatile
  7185   004EAE  0BF0               	andlw	-16
  7186   004EB0  090C               	iorlw	12
  7187   004EB2  6F22               	movwf	34,b	;volatile
  7188   004EB4                     
  7189                           ; BSR set to: 15
  7190                           ;dc_motor.c: 59:     CCP4CONbits.EN=1;
  7191   004EB4  8F22               	bsf	34,7,b	;volatile
  7192   004EB6                     
  7193                           ; BSR set to: 15
  7194   004EB6  0012               	return		;funcret
  7195   004EB8                     __end_of_initDCmotorsPWM:
  7196                           	callstack 0
  7197                           
  7198 ;; *************** function _go_Home *****************
  7199 ;; Defined at:
  7200 ;;		line 3 in file "Memory.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  WayBack         2   34[COMRAM] PTR unsigned char 
  7203 ;;		 -> WayBack(250), 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;  i               2   37[COMRAM] int 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1    wreg      void 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7215 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7218 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7219 ;;Total ram usage:        5 bytes
  7220 ;; Hardware stack levels used: 1
  7221 ;; Hardware stack levels required when called: 6
  7222 ;; This function calls:
  7223 ;;		_BlueMove
  7224 ;;		_Forwardhalfblock
  7225 ;;		_GreenMove
  7226 ;;		_LightBlueMove
  7227 ;;		_OrangeMove
  7228 ;;		_RedMove
  7229 ;;		_ReversePink
  7230 ;;		_ReverseYellow
  7231 ;; This function is called by:
  7232 ;;		_main
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           	psect	text31
  7237   003F7E                     __ptext31:
  7238                           	callstack 0
  7239   003F7E                     _go_Home:
  7240                           	callstack 24
  7241   003F7E                     
  7242                           ;Memory.c: 4:     int i;;Memory.c: 5:     for (i = move_count; i >= 0; i--){
  7243   003F7E  C10C  F026         	movff	_move_count,go_Home@i	;volatile
  7244   003F82  C10D  F027         	movff	_move_count+1,go_Home@i+1	;volatile
  7245   003F86                     l5303:
  7246   003F86  BE27               	btfsc	(go_Home@i+1)^0,7,c
  7247   003F88  EFCA  F01F         	goto	u5340
  7248   003F8C  EFC8  F01F         	goto	u5341
  7249   003F90                     u5341:
  7250   003F90  EFCC  F01F         	goto	l5307
  7251   003F94                     u5340:
  7252   003F94  EFA7  F020         	goto	l595
  7253   003F98                     l5307:
  7254                           
  7255                           ;Memory.c: 6:         if (WayBack[i]==0){
  7256   003F98  5026               	movf	go_Home@i^0,w,c
  7257   003F9A  2423               	addwf	go_Home@WayBack^0,w,c
  7258   003F9C  6ED9               	movwf	fsr2l,c
  7259   003F9E  5027               	movf	(go_Home@i+1)^0,w,c
  7260   003FA0  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7261   003FA2  6EDA               	movwf	fsr2h,c
  7262   003FA4  50DF               	movf	indf2,w,c
  7263   003FA6  A4D8               	btfss	status,2,c
  7264   003FA8  EFD8  F01F         	goto	u5351
  7265   003FAC  EFDA  F01F         	goto	u5350
  7266   003FB0                     u5351:
  7267   003FB0  EFE6  F01F         	goto	l5311
  7268   003FB4                     u5350:
  7269   003FB4                     
  7270                           ;Memory.c: 7:             Forwardhalfblock(&motorL,&motorR);
  7271   003FB4  0E73               	movlw	low _motorL
  7272   003FB6  6E19               	movwf	Forwardhalfblock@mL^0,c
  7273   003FB8  0E01               	movlw	high _motorL
  7274   003FBA  6E1A               	movwf	(Forwardhalfblock@mL+1)^0,c
  7275   003FBC  0E6A               	movlw	low _motorR
  7276   003FBE  6E1B               	movwf	Forwardhalfblock@mR^0,c
  7277   003FC0  0E01               	movlw	high _motorR
  7278   003FC2  6E1C               	movwf	(Forwardhalfblock@mR+1)^0,c
  7279   003FC4  EC11  F029         	call	_Forwardhalfblock	;wreg free
  7280                           
  7281                           ;Memory.c: 8:         }
  7282   003FC8  EFA2  F020         	goto	l5339
  7283   003FCC                     l5311:
  7284   003FCC  5026               	movf	go_Home@i^0,w,c
  7285   003FCE  2423               	addwf	go_Home@WayBack^0,w,c
  7286   003FD0  6ED9               	movwf	fsr2l,c
  7287   003FD2  5027               	movf	(go_Home@i+1)^0,w,c
  7288   003FD4  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7289   003FD6  6EDA               	movwf	fsr2h,c
  7290   003FD8  04DE               	decf	postinc2,w,c
  7291   003FDA  A4D8               	btfss	status,2,c
  7292   003FDC  EFF2  F01F         	goto	u5361
  7293   003FE0  EFF4  F01F         	goto	u5360
  7294   003FE4                     u5361:
  7295   003FE4  EF00  F020         	goto	l5315
  7296   003FE8                     u5360:
  7297   003FE8                     
  7298                           ;Memory.c: 10:             GreenMove(&motorL, &motorR);
  7299   003FE8  0E73               	movlw	low _motorL
  7300   003FEA  6E1F               	movwf	GreenMove@mL^0,c
  7301   003FEC  0E01               	movlw	high _motorL
  7302   003FEE  6E20               	movwf	(GreenMove@mL+1)^0,c
  7303   003FF0  0E6A               	movlw	low _motorR
  7304   003FF2  6E21               	movwf	GreenMove@mR^0,c
  7305   003FF4  0E01               	movlw	high _motorR
  7306   003FF6  6E22               	movwf	(GreenMove@mR+1)^0,c
  7307   003FF8  EC0C  F02D         	call	_GreenMove	;wreg free
  7308                           
  7309                           ;Memory.c: 11:         }
  7310   003FFC  EFA2  F020         	goto	l5339
  7311   004000                     l5315:
  7312   004000  5026               	movf	go_Home@i^0,w,c
  7313   004002  2423               	addwf	go_Home@WayBack^0,w,c
  7314   004004  6ED9               	movwf	fsr2l,c
  7315   004006  5027               	movf	(go_Home@i+1)^0,w,c
  7316   004008  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7317   00400A  6EDA               	movwf	fsr2h,c
  7318   00400C  0E02               	movlw	2
  7319   00400E  18DE               	xorwf	postinc2,w,c
  7320   004010  A4D8               	btfss	status,2,c
  7321   004012  EF0D  F020         	goto	u5371
  7322   004016  EF0F  F020         	goto	u5370
  7323   00401A                     u5371:
  7324   00401A  EF1B  F020         	goto	l5319
  7325   00401E                     u5370:
  7326   00401E                     
  7327                           ;Memory.c: 13:             LightBlueMove(&motorL, &motorR);
  7328   00401E  0E73               	movlw	low _motorL
  7329   004020  6E1F               	movwf	LightBlueMove@mL^0,c
  7330   004022  0E01               	movlw	high _motorL
  7331   004024  6E20               	movwf	(LightBlueMove@mL+1)^0,c
  7332   004026  0E6A               	movlw	low _motorR
  7333   004028  6E21               	movwf	LightBlueMove@mR^0,c
  7334   00402A  0E01               	movlw	high _motorR
  7335   00402C  6E22               	movwf	(LightBlueMove@mR+1)^0,c
  7336   00402E  EC9B  F02A         	call	_LightBlueMove	;wreg free
  7337                           
  7338                           ;Memory.c: 14:         }
  7339   004032  EFA2  F020         	goto	l5339
  7340   004036                     l5319:
  7341   004036  5026               	movf	go_Home@i^0,w,c
  7342   004038  2423               	addwf	go_Home@WayBack^0,w,c
  7343   00403A  6ED9               	movwf	fsr2l,c
  7344   00403C  5027               	movf	(go_Home@i+1)^0,w,c
  7345   00403E  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7346   004040  6EDA               	movwf	fsr2h,c
  7347   004042  0E03               	movlw	3
  7348   004044  18DE               	xorwf	postinc2,w,c
  7349   004046  A4D8               	btfss	status,2,c
  7350   004048  EF28  F020         	goto	u5381
  7351   00404C  EF2A  F020         	goto	u5380
  7352   004050                     u5381:
  7353   004050  EF36  F020         	goto	l5323
  7354   004054                     u5380:
  7355   004054                     
  7356                           ;Memory.c: 16:             ReverseYellow(&motorL, &motorR);
  7357   004054  0E73               	movlw	low _motorL
  7358   004056  6E1F               	movwf	ReverseYellow@mL^0,c
  7359   004058  0E01               	movlw	high _motorL
  7360   00405A  6E20               	movwf	(ReverseYellow@mL+1)^0,c
  7361   00405C  0E6A               	movlw	low _motorR
  7362   00405E  6E21               	movwf	ReverseYellow@mR^0,c
  7363   004060  0E01               	movlw	high _motorR
  7364   004062  6E22               	movwf	(ReverseYellow@mR+1)^0,c
  7365   004064  ECAF  F02C         	call	_ReverseYellow	;wreg free
  7366                           
  7367                           ;Memory.c: 17:         }
  7368   004068  EFA2  F020         	goto	l5339
  7369   00406C                     l5323:
  7370   00406C  5026               	movf	go_Home@i^0,w,c
  7371   00406E  2423               	addwf	go_Home@WayBack^0,w,c
  7372   004070  6ED9               	movwf	fsr2l,c
  7373   004072  5027               	movf	(go_Home@i+1)^0,w,c
  7374   004074  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7375   004076  6EDA               	movwf	fsr2h,c
  7376   004078  0E04               	movlw	4
  7377   00407A  18DE               	xorwf	postinc2,w,c
  7378   00407C  A4D8               	btfss	status,2,c
  7379   00407E  EF43  F020         	goto	u5391
  7380   004082  EF45  F020         	goto	u5390
  7381   004086                     u5391:
  7382   004086  EF51  F020         	goto	l5327
  7383   00408A                     u5390:
  7384   00408A                     
  7385                           ;Memory.c: 19:             BlueMove(&motorL, &motorR);
  7386   00408A  0E73               	movlw	low _motorL
  7387   00408C  6E1F               	movwf	BlueMove@mL^0,c
  7388   00408E  0E01               	movlw	high _motorL
  7389   004090  6E20               	movwf	(BlueMove@mL+1)^0,c
  7390   004092  0E6A               	movlw	low _motorR
  7391   004094  6E21               	movwf	BlueMove@mR^0,c
  7392   004096  0E01               	movlw	high _motorR
  7393   004098  6E22               	movwf	(BlueMove@mR+1)^0,c
  7394   00409A  EC82  F028         	call	_BlueMove	;wreg free
  7395                           
  7396                           ;Memory.c: 20:         }
  7397   00409E  EFA2  F020         	goto	l5339
  7398   0040A2                     l5327:
  7399   0040A2  5026               	movf	go_Home@i^0,w,c
  7400   0040A4  2423               	addwf	go_Home@WayBack^0,w,c
  7401   0040A6  6ED9               	movwf	fsr2l,c
  7402   0040A8  5027               	movf	(go_Home@i+1)^0,w,c
  7403   0040AA  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7404   0040AC  6EDA               	movwf	fsr2h,c
  7405   0040AE  0E05               	movlw	5
  7406   0040B0  18DE               	xorwf	postinc2,w,c
  7407   0040B2  A4D8               	btfss	status,2,c
  7408   0040B4  EF5E  F020         	goto	u5401
  7409   0040B8  EF60  F020         	goto	u5400
  7410   0040BC                     u5401:
  7411   0040BC  EF6C  F020         	goto	l5331
  7412   0040C0                     u5400:
  7413   0040C0                     
  7414                           ;Memory.c: 22:             RedMove(&motorL, &motorR);
  7415   0040C0  0E73               	movlw	low _motorL
  7416   0040C2  6E1F               	movwf	RedMove@mL^0,c
  7417   0040C4  0E01               	movlw	high _motorL
  7418   0040C6  6E20               	movwf	(RedMove@mL+1)^0,c
  7419   0040C8  0E6A               	movlw	low _motorR
  7420   0040CA  6E21               	movwf	RedMove@mR^0,c
  7421   0040CC  0E01               	movlw	high _motorR
  7422   0040CE  6E22               	movwf	(RedMove@mR+1)^0,c
  7423   0040D0  ECED  F02C         	call	_RedMove	;wreg free
  7424                           
  7425                           ;Memory.c: 23:         }
  7426   0040D4  EFA2  F020         	goto	l5339
  7427   0040D8                     l5331:
  7428   0040D8  5026               	movf	go_Home@i^0,w,c
  7429   0040DA  2423               	addwf	go_Home@WayBack^0,w,c
  7430   0040DC  6ED9               	movwf	fsr2l,c
  7431   0040DE  5027               	movf	(go_Home@i+1)^0,w,c
  7432   0040E0  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7433   0040E2  6EDA               	movwf	fsr2h,c
  7434   0040E4  0E06               	movlw	6
  7435   0040E6  18DE               	xorwf	postinc2,w,c
  7436   0040E8  A4D8               	btfss	status,2,c
  7437   0040EA  EF79  F020         	goto	u5411
  7438   0040EE  EF7B  F020         	goto	u5410
  7439   0040F2                     u5411:
  7440   0040F2  EF87  F020         	goto	l5335
  7441   0040F6                     u5410:
  7442   0040F6                     
  7443                           ;Memory.c: 25:             OrangeMove(&motorL, &motorR);
  7444   0040F6  0E73               	movlw	low _motorL
  7445   0040F8  6E1F               	movwf	OrangeMove@mL^0,c
  7446   0040FA  0E01               	movlw	high _motorL
  7447   0040FC  6E20               	movwf	(OrangeMove@mL+1)^0,c
  7448   0040FE  0E6A               	movlw	low _motorR
  7449   004100  6E21               	movwf	OrangeMove@mR^0,c
  7450   004102  0E01               	movlw	high _motorR
  7451   004104  6E22               	movwf	(OrangeMove@mR+1)^0,c
  7452   004106  EC72  F02A         	call	_OrangeMove	;wreg free
  7453                           
  7454                           ;Memory.c: 26:         }
  7455   00410A  EFA2  F020         	goto	l5339
  7456   00410E                     l5335:
  7457   00410E  5026               	movf	go_Home@i^0,w,c
  7458   004110  2423               	addwf	go_Home@WayBack^0,w,c
  7459   004112  6ED9               	movwf	fsr2l,c
  7460   004114  5027               	movf	(go_Home@i+1)^0,w,c
  7461   004116  2024               	addwfc	(go_Home@WayBack+1)^0,w,c
  7462   004118  6EDA               	movwf	fsr2h,c
  7463   00411A  0E07               	movlw	7
  7464   00411C  18DE               	xorwf	postinc2,w,c
  7465   00411E  A4D8               	btfss	status,2,c
  7466   004120  EF94  F020         	goto	u5421
  7467   004124  EF96  F020         	goto	u5420
  7468   004128                     u5421:
  7469   004128  EFA2  F020         	goto	l589
  7470   00412C                     u5420:
  7471   00412C                     
  7472                           ;Memory.c: 28:             ReversePink(&motorL, &motorR);
  7473   00412C  0E73               	movlw	low _motorL
  7474   00412E  6E1F               	movwf	ReversePink@mL^0,c
  7475   004130  0E01               	movlw	high _motorL
  7476   004132  6E20               	movwf	(ReversePink@mL+1)^0,c
  7477   004134  0E6A               	movlw	low _motorR
  7478   004136  6E21               	movwf	ReversePink@mR^0,c
  7479   004138  0E01               	movlw	high _motorR
  7480   00413A  6E22               	movwf	(ReversePink@mR+1)^0,c
  7481   00413C  ECCE  F02C         	call	_ReversePink	;wreg free
  7482   004140  EFA2  F020         	goto	l5339
  7483   004144                     l589:
  7484   004144                     l5339:
  7485                           
  7486                           ;Memory.c: 32:   }
  7487   004144  0626               	decf	go_Home@i^0,f,c
  7488   004146  A0D8               	btfss	status,0,c
  7489   004148  0627               	decf	(go_Home@i+1)^0,f,c
  7490   00414A  EFC3  F01F         	goto	l5303
  7491   00414E                     l595:
  7492   00414E  0012               	return		;funcret
  7493   004150                     __end_of_go_Home:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _ReverseYellow *****************
  7497 ;; Defined at:
  7498 ;;		line 304 in file "dc_motor.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7501 ;;		 -> motorL(9), 
  7502 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7503 ;;		 -> motorR(9), 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;		None
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;Total ram usage:        4 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 5
  7522 ;; This function calls:
  7523 ;;		_ForwardOneBlock
  7524 ;;		_turnLeft45
  7525 ;; This function is called by:
  7526 ;;		_go_Home
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text32
  7531   00595E                     __ptext32:
  7532                           	callstack 0
  7533   00595E                     _ReverseYellow:
  7534                           	callstack 24
  7535   00595E                     
  7536                           ;dc_motor.c: 305:     turnLeft45(&motorL, &motorR);
  7537   00595E  0E73               	movlw	low _motorL
  7538   005960  6E19               	movwf	turnLeft45@mL^0,c
  7539   005962  0E01               	movlw	high _motorL
  7540   005964  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7541   005966  0E6A               	movlw	low _motorR
  7542   005968  6E1B               	movwf	turnLeft45@mR^0,c
  7543   00596A  0E01               	movlw	high _motorR
  7544   00596C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7545   00596E  EC6B  F029         	call	_turnLeft45	;wreg free
  7546                           
  7547                           ;dc_motor.c: 306:     turnLeft45(&motorL, &motorR);
  7548   005972  0E73               	movlw	low _motorL
  7549   005974  6E19               	movwf	turnLeft45@mL^0,c
  7550   005976  0E01               	movlw	high _motorL
  7551   005978  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7552   00597A  0E6A               	movlw	low _motorR
  7553   00597C  6E1B               	movwf	turnLeft45@mR^0,c
  7554   00597E  0E01               	movlw	high _motorR
  7555   005980  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7556   005982  EC6B  F029         	call	_turnLeft45	;wreg free
  7557                           
  7558                           ;dc_motor.c: 307:     ForwardOneBlock(&motorL, &motorR);
  7559   005986  0E73               	movlw	low _motorL
  7560   005988  6E19               	movwf	ForwardOneBlock@mL^0,c
  7561   00598A  0E01               	movlw	high _motorL
  7562   00598C  6E1A               	movwf	(ForwardOneBlock@mL+1)^0,c
  7563   00598E  0E6A               	movlw	low _motorR
  7564   005990  6E1B               	movwf	ForwardOneBlock@mR^0,c
  7565   005992  0E01               	movlw	high _motorR
  7566   005994  6E1C               	movwf	(ForwardOneBlock@mR+1)^0,c
  7567   005996  ECE4  F028         	call	_ForwardOneBlock	;wreg free
  7568   00599A  0012               	return		;funcret
  7569   00599C                     __end_of_ReverseYellow:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _ReversePink *****************
  7573 ;; Defined at:
  7574 ;;		line 309 in file "dc_motor.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7577 ;;		 -> motorL(9), 
  7578 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7579 ;;		 -> motorR(9), 
  7580 ;; Auto vars:     Size  Location     Type
  7581 ;;		None
  7582 ;; Return value:  Size  Location     Type
  7583 ;;                  1    wreg      void 
  7584 ;; Registers used:
  7585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7586 ;; Tracked objects:
  7587 ;;		On entry : 0/0
  7588 ;;		On exit  : 0/0
  7589 ;;		Unchanged: 0/0
  7590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7591 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7595 ;;Total ram usage:        4 bytes
  7596 ;; Hardware stack levels used: 1
  7597 ;; Hardware stack levels required when called: 5
  7598 ;; This function calls:
  7599 ;;		_ForwardOneBlock
  7600 ;;		_turnRight45
  7601 ;; This function is called by:
  7602 ;;		_go_Home
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text33
  7607   00599C                     __ptext33:
  7608                           	callstack 0
  7609   00599C                     _ReversePink:
  7610                           	callstack 24
  7611   00599C                     
  7612                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  7613   00599C  0E73               	movlw	low _motorL
  7614   00599E  6E19               	movwf	turnRight45@mL^0,c
  7615   0059A0  0E01               	movlw	high _motorL
  7616   0059A2  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7617   0059A4  0E6A               	movlw	low _motorR
  7618   0059A6  6E1B               	movwf	turnRight45@mR^0,c
  7619   0059A8  0E01               	movlw	high _motorR
  7620   0059AA  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7621   0059AC  EC3E  F029         	call	_turnRight45	;wreg free
  7622                           
  7623                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  7624   0059B0  0E73               	movlw	low _motorL
  7625   0059B2  6E19               	movwf	turnRight45@mL^0,c
  7626   0059B4  0E01               	movlw	high _motorL
  7627   0059B6  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7628   0059B8  0E6A               	movlw	low _motorR
  7629   0059BA  6E1B               	movwf	turnRight45@mR^0,c
  7630   0059BC  0E01               	movlw	high _motorR
  7631   0059BE  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7632   0059C0  EC3E  F029         	call	_turnRight45	;wreg free
  7633                           
  7634                           ;dc_motor.c: 312:     ForwardOneBlock(&motorL, &motorR);
  7635   0059C4  0E73               	movlw	low _motorL
  7636   0059C6  6E19               	movwf	ForwardOneBlock@mL^0,c
  7637   0059C8  0E01               	movlw	high _motorL
  7638   0059CA  6E1A               	movwf	(ForwardOneBlock@mL+1)^0,c
  7639   0059CC  0E6A               	movlw	low _motorR
  7640   0059CE  6E1B               	movwf	ForwardOneBlock@mR^0,c
  7641   0059D0  0E01               	movlw	high _motorR
  7642   0059D2  6E1C               	movwf	(ForwardOneBlock@mR+1)^0,c
  7643   0059D4  ECE4  F028         	call	_ForwardOneBlock	;wreg free
  7644   0059D8  0012               	return		;funcret
  7645   0059DA                     __end_of_ReversePink:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _ForwardOneBlock *****************
  7649 ;; Defined at:
  7650 ;;		line 208 in file "dc_motor.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  7653 ;;		 -> motorL(9), 
  7654 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  7655 ;;		 -> motorR(9), 
  7656 ;; Auto vars:     Size  Location     Type
  7657 ;;		None
  7658 ;; Return value:  Size  Location     Type
  7659 ;;                  1    wreg      void 
  7660 ;; Registers used:
  7661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7662 ;; Tracked objects:
  7663 ;;		On entry : 0/0
  7664 ;;		On exit  : 0/0
  7665 ;;		Unchanged: 0/0
  7666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7670 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7671 ;;Total ram usage:        6 bytes
  7672 ;; Hardware stack levels used: 1
  7673 ;; Hardware stack levels required when called: 4
  7674 ;; This function calls:
  7675 ;;		_fullSpeedAhead
  7676 ;;		_stop
  7677 ;; This function is called by:
  7678 ;;		_ReverseYellow
  7679 ;;		_ReversePink
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text34
  7684   0051C8                     __ptext34:
  7685                           	callstack 0
  7686   0051C8                     _ForwardOneBlock:
  7687                           	callstack 24
  7688   0051C8                     
  7689                           ;dc_motor.c: 209:     fullSpeedAhead(mL,mR);
  7690   0051C8  C019  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  7691   0051CC  C01A  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  7692   0051D0  C01B  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  7693   0051D4  C01C  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  7694   0051D8  EC37  F026         	call	_fullSpeedAhead	;wreg free
  7695   0051DC                     
  7696                           ;dc_motor.c: 210:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7697   0051DC  0E52               	movlw	82
  7698   0051DE  6E1E               	movwf	(??_ForwardOneBlock+1)^0,c
  7699   0051E0  0E2B               	movlw	43
  7700   0051E2  6E1D               	movwf	??_ForwardOneBlock^0,c
  7701   0051E4  0E00               	movlw	0
  7702   0051E6                     u5657:
  7703   0051E6  2EE8               	decfsz	wreg,f,c
  7704   0051E8  D7FE               	bra	u5657
  7705   0051EA  2E1D               	decfsz	??_ForwardOneBlock^0,f,c
  7706   0051EC  D7FC               	bra	u5657
  7707   0051EE  2E1E               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7708   0051F0  D7FA               	bra	u5657
  7709   0051F2  D000               	nop2	
  7710   0051F4                     
  7711                           ;dc_motor.c: 211:     stop(&motorL, &motorR);
  7712   0051F4  0E73               	movlw	low _motorL
  7713   0051F6  6E14               	movwf	stop@mL^0,c
  7714   0051F8  0E01               	movlw	high _motorL
  7715   0051FA  6E15               	movwf	(stop@mL+1)^0,c
  7716   0051FC  0E6A               	movlw	low _motorR
  7717   0051FE  6E16               	movwf	stop@mR^0,c
  7718   005200  0E01               	movlw	high _motorR
  7719   005202  6E17               	movwf	(stop@mR+1)^0,c
  7720   005204  ECDA  F027         	call	_stop	;wreg free
  7721                           
  7722                           ;dc_motor.c: 212:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  7723   005208  0E52               	movlw	82
  7724   00520A  6E1E               	movwf	(??_ForwardOneBlock+1)^0,c
  7725   00520C  0E2B               	movlw	43
  7726   00520E  6E1D               	movwf	??_ForwardOneBlock^0,c
  7727   005210  0E00               	movlw	0
  7728   005212                     u5667:
  7729   005212  2EE8               	decfsz	wreg,f,c
  7730   005214  D7FE               	bra	u5667
  7731   005216  2E1D               	decfsz	??_ForwardOneBlock^0,f,c
  7732   005218  D7FC               	bra	u5667
  7733   00521A  2E1E               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  7734   00521C  D7FA               	bra	u5667
  7735   00521E  D000               	nop2	
  7736   005220  0012               	return		;funcret
  7737   005222                     __end_of_ForwardOneBlock:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function _RedMove *****************
  7741 ;; Defined at:
  7742 ;;		line 232 in file "dc_motor.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7745 ;;		 -> motorL(9), 
  7746 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7747 ;;		 -> motorR(9), 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7759 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;Total ram usage:        4 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 5
  7766 ;; This function calls:
  7767 ;;		_reverseDetect
  7768 ;;		_turnRight45
  7769 ;; This function is called by:
  7770 ;;		_main
  7771 ;;		_go_Home
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           	psect	text35
  7776   0059DA                     __ptext35:
  7777                           	callstack 0
  7778   0059DA                     _RedMove:
  7779                           	callstack 24
  7780   0059DA                     
  7781                           ;dc_motor.c: 233:     reverseDetect(&motorL, &motorR);
  7782   0059DA  0E73               	movlw	low _motorL
  7783   0059DC  6E19               	movwf	reverseDetect@mL^0,c
  7784   0059DE  0E01               	movlw	high _motorL
  7785   0059E0  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7786   0059E2  0E6A               	movlw	low _motorR
  7787   0059E4  6E1B               	movwf	reverseDetect@mR^0,c
  7788   0059E6  0E01               	movlw	high _motorR
  7789   0059E8  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7790   0059EA  ECC5  F029         	call	_reverseDetect	;wreg free
  7791                           
  7792                           ;dc_motor.c: 235:     turnRight45(&motorL, &motorR);
  7793   0059EE  0E73               	movlw	low _motorL
  7794   0059F0  6E19               	movwf	turnRight45@mL^0,c
  7795   0059F2  0E01               	movlw	high _motorL
  7796   0059F4  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7797   0059F6  0E6A               	movlw	low _motorR
  7798   0059F8  6E1B               	movwf	turnRight45@mR^0,c
  7799   0059FA  0E01               	movlw	high _motorR
  7800   0059FC  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7801   0059FE  EC3E  F029         	call	_turnRight45	;wreg free
  7802                           
  7803                           ;dc_motor.c: 236:     turnRight45(&motorL, &motorR);
  7804   005A02  0E73               	movlw	low _motorL
  7805   005A04  6E19               	movwf	turnRight45@mL^0,c
  7806   005A06  0E01               	movlw	high _motorL
  7807   005A08  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7808   005A0A  0E6A               	movlw	low _motorR
  7809   005A0C  6E1B               	movwf	turnRight45@mR^0,c
  7810   005A0E  0E01               	movlw	high _motorR
  7811   005A10  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7812   005A12  EC3E  F029         	call	_turnRight45	;wreg free
  7813   005A16  0012               	return		;funcret
  7814   005A18                     __end_of_RedMove:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function _OrangeMove *****************
  7818 ;; Defined at:
  7819 ;;		line 278 in file "dc_motor.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7822 ;;		 -> motorL(9), 
  7823 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7824 ;;		 -> motorR(9), 
  7825 ;; Auto vars:     Size  Location     Type
  7826 ;;		None
  7827 ;; Return value:  Size  Location     Type
  7828 ;;                  1    wreg      void 
  7829 ;; Registers used:
  7830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7831 ;; Tracked objects:
  7832 ;;		On entry : 0/0
  7833 ;;		On exit  : 0/0
  7834 ;;		Unchanged: 0/0
  7835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;Total ram usage:        4 bytes
  7841 ;; Hardware stack levels used: 1
  7842 ;; Hardware stack levels required when called: 5
  7843 ;; This function calls:
  7844 ;;		_reverseDetect
  7845 ;;		_turnRight45
  7846 ;; This function is called by:
  7847 ;;		_main
  7848 ;;		_go_Home
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           	psect	text36
  7853   0054E4                     __ptext36:
  7854                           	callstack 0
  7855   0054E4                     _OrangeMove:
  7856                           	callstack 24
  7857   0054E4                     
  7858                           ;dc_motor.c: 279:     reverseDetect(&motorL, &motorR);
  7859   0054E4  0E73               	movlw	low _motorL
  7860   0054E6  6E19               	movwf	reverseDetect@mL^0,c
  7861   0054E8  0E01               	movlw	high _motorL
  7862   0054EA  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7863   0054EC  0E6A               	movlw	low _motorR
  7864   0054EE  6E1B               	movwf	reverseDetect@mR^0,c
  7865   0054F0  0E01               	movlw	high _motorR
  7866   0054F2  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7867   0054F4  ECC5  F029         	call	_reverseDetect	;wreg free
  7868                           
  7869                           ;dc_motor.c: 281:     turnRight45(&motorL, &motorR);
  7870   0054F8  0E73               	movlw	low _motorL
  7871   0054FA  6E19               	movwf	turnRight45@mL^0,c
  7872   0054FC  0E01               	movlw	high _motorL
  7873   0054FE  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7874   005500  0E6A               	movlw	low _motorR
  7875   005502  6E1B               	movwf	turnRight45@mR^0,c
  7876   005504  0E01               	movlw	high _motorR
  7877   005506  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7878   005508  EC3E  F029         	call	_turnRight45	;wreg free
  7879                           
  7880                           ;dc_motor.c: 282:     turnRight45(&motorL, &motorR);
  7881   00550C  0E73               	movlw	low _motorL
  7882   00550E  6E19               	movwf	turnRight45@mL^0,c
  7883   005510  0E01               	movlw	high _motorL
  7884   005512  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7885   005514  0E6A               	movlw	low _motorR
  7886   005516  6E1B               	movwf	turnRight45@mR^0,c
  7887   005518  0E01               	movlw	high _motorR
  7888   00551A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7889   00551C  EC3E  F029         	call	_turnRight45	;wreg free
  7890                           
  7891                           ;dc_motor.c: 283:     turnRight45(&motorL, &motorR);
  7892   005520  0E73               	movlw	low _motorL
  7893   005522  6E19               	movwf	turnRight45@mL^0,c
  7894   005524  0E01               	movlw	high _motorL
  7895   005526  6E1A               	movwf	(turnRight45@mL+1)^0,c
  7896   005528  0E6A               	movlw	low _motorR
  7897   00552A  6E1B               	movwf	turnRight45@mR^0,c
  7898   00552C  0E01               	movlw	high _motorR
  7899   00552E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  7900   005530  EC3E  F029         	call	_turnRight45	;wreg free
  7901   005534  0012               	return		;funcret
  7902   005536                     __end_of_OrangeMove:
  7903                           	callstack 0
  7904                           
  7905 ;; *************** function _LightBlueMove *****************
  7906 ;; Defined at:
  7907 ;;		line 287 in file "dc_motor.c"
  7908 ;; Parameters:    Size  Location     Type
  7909 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7910 ;;		 -> motorL(9), 
  7911 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  7912 ;;		 -> motorR(9), 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;Total ram usage:        4 bytes
  7929 ;; Hardware stack levels used: 1
  7930 ;; Hardware stack levels required when called: 5
  7931 ;; This function calls:
  7932 ;;		_reverseDetect
  7933 ;;		_turnLeft45
  7934 ;; This function is called by:
  7935 ;;		_main
  7936 ;;		_go_Home
  7937 ;; This function uses a non-reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text37
  7941   005536                     __ptext37:
  7942                           	callstack 0
  7943   005536                     _LightBlueMove:
  7944                           	callstack 24
  7945   005536                     
  7946                           ;dc_motor.c: 288:     reverseDetect(&motorL, &motorR);
  7947   005536  0E73               	movlw	low _motorL
  7948   005538  6E19               	movwf	reverseDetect@mL^0,c
  7949   00553A  0E01               	movlw	high _motorL
  7950   00553C  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  7951   00553E  0E6A               	movlw	low _motorR
  7952   005540  6E1B               	movwf	reverseDetect@mR^0,c
  7953   005542  0E01               	movlw	high _motorR
  7954   005544  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  7955   005546  ECC5  F029         	call	_reverseDetect	;wreg free
  7956                           
  7957                           ;dc_motor.c: 290:     turnLeft45(&motorL, &motorR);
  7958   00554A  0E73               	movlw	low _motorL
  7959   00554C  6E19               	movwf	turnLeft45@mL^0,c
  7960   00554E  0E01               	movlw	high _motorL
  7961   005550  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7962   005552  0E6A               	movlw	low _motorR
  7963   005554  6E1B               	movwf	turnLeft45@mR^0,c
  7964   005556  0E01               	movlw	high _motorR
  7965   005558  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7966   00555A  EC6B  F029         	call	_turnLeft45	;wreg free
  7967                           
  7968                           ;dc_motor.c: 291:     turnLeft45(&motorL, &motorR);
  7969   00555E  0E73               	movlw	low _motorL
  7970   005560  6E19               	movwf	turnLeft45@mL^0,c
  7971   005562  0E01               	movlw	high _motorL
  7972   005564  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7973   005566  0E6A               	movlw	low _motorR
  7974   005568  6E1B               	movwf	turnLeft45@mR^0,c
  7975   00556A  0E01               	movlw	high _motorR
  7976   00556C  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7977   00556E  EC6B  F029         	call	_turnLeft45	;wreg free
  7978                           
  7979                           ;dc_motor.c: 292:     turnLeft45(&motorL, &motorR);
  7980   005572  0E73               	movlw	low _motorL
  7981   005574  6E19               	movwf	turnLeft45@mL^0,c
  7982   005576  0E01               	movlw	high _motorL
  7983   005578  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  7984   00557A  0E6A               	movlw	low _motorR
  7985   00557C  6E1B               	movwf	turnLeft45@mR^0,c
  7986   00557E  0E01               	movlw	high _motorR
  7987   005580  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  7988   005582  EC6B  F029         	call	_turnLeft45	;wreg free
  7989   005586  0012               	return		;funcret
  7990   005588                     __end_of_LightBlueMove:
  7991                           	callstack 0
  7992                           
  7993 ;; *************** function _GreenMove *****************
  7994 ;; Defined at:
  7995 ;;		line 240 in file "dc_motor.c"
  7996 ;; Parameters:    Size  Location     Type
  7997 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  7998 ;;		 -> motorL(9), 
  7999 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8000 ;;		 -> motorR(9), 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;		None
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      void 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8015 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;Total ram usage:        4 bytes
  8017 ;; Hardware stack levels used: 1
  8018 ;; Hardware stack levels required when called: 5
  8019 ;; This function calls:
  8020 ;;		_reverseDetect
  8021 ;;		_turnLeft45
  8022 ;; This function is called by:
  8023 ;;		_main
  8024 ;;		_go_Home
  8025 ;; This function uses a non-reentrant model
  8026 ;;
  8027                           
  8028                           	psect	text38
  8029   005A18                     __ptext38:
  8030                           	callstack 0
  8031   005A18                     _GreenMove:
  8032                           	callstack 24
  8033   005A18                     
  8034                           ;dc_motor.c: 241:     reverseDetect(&motorL, &motorR);
  8035   005A18  0E73               	movlw	low _motorL
  8036   005A1A  6E19               	movwf	reverseDetect@mL^0,c
  8037   005A1C  0E01               	movlw	high _motorL
  8038   005A1E  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8039   005A20  0E6A               	movlw	low _motorR
  8040   005A22  6E1B               	movwf	reverseDetect@mR^0,c
  8041   005A24  0E01               	movlw	high _motorR
  8042   005A26  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8043   005A28  ECC5  F029         	call	_reverseDetect	;wreg free
  8044                           
  8045                           ;dc_motor.c: 243:     turnLeft45(&motorL, &motorR);
  8046   005A2C  0E73               	movlw	low _motorL
  8047   005A2E  6E19               	movwf	turnLeft45@mL^0,c
  8048   005A30  0E01               	movlw	high _motorL
  8049   005A32  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8050   005A34  0E6A               	movlw	low _motorR
  8051   005A36  6E1B               	movwf	turnLeft45@mR^0,c
  8052   005A38  0E01               	movlw	high _motorR
  8053   005A3A  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8054   005A3C  EC6B  F029         	call	_turnLeft45	;wreg free
  8055                           
  8056                           ;dc_motor.c: 244:     turnLeft45(&motorL, &motorR);
  8057   005A40  0E73               	movlw	low _motorL
  8058   005A42  6E19               	movwf	turnLeft45@mL^0,c
  8059   005A44  0E01               	movlw	high _motorL
  8060   005A46  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  8061   005A48  0E6A               	movlw	low _motorR
  8062   005A4A  6E1B               	movwf	turnLeft45@mR^0,c
  8063   005A4C  0E01               	movlw	high _motorR
  8064   005A4E  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  8065   005A50  EC6B  F029         	call	_turnLeft45	;wreg free
  8066   005A54  0012               	return		;funcret
  8067   005A56                     __end_of_GreenMove:
  8068                           	callstack 0
  8069                           
  8070 ;; *************** function _Forwardhalfblock *****************
  8071 ;; Defined at:
  8072 ;;		line 215 in file "dc_motor.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  8075 ;;		 -> motorL(9), 
  8076 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  8077 ;;		 -> motorR(9), 
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;		None
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      void 
  8082 ;; Registers used:
  8083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8093 ;;Total ram usage:        6 bytes
  8094 ;; Hardware stack levels used: 1
  8095 ;; Hardware stack levels required when called: 4
  8096 ;; This function calls:
  8097 ;;		_fullSpeedAhead
  8098 ;;		_stop
  8099 ;; This function is called by:
  8100 ;;		_main
  8101 ;;		_go_Home
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text39
  8106   005222                     __ptext39:
  8107                           	callstack 0
  8108   005222                     _Forwardhalfblock:
  8109                           	callstack 25
  8110   005222                     
  8111                           ;dc_motor.c: 216:     fullSpeedAhead(mL,mR);
  8112   005222  C019  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
  8113   005226  C01A  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
  8114   00522A  C01B  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
  8115   00522E  C01C  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
  8116   005232  EC37  F026         	call	_fullSpeedAhead	;wreg free
  8117   005236                     
  8118                           ;dc_motor.c: 217:     _delay((unsigned long)((500)*(64000000/4000.0)));
  8119   005236  0E29               	movlw	41
  8120   005238  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8121   00523A  0E96               	movlw	150
  8122   00523C  6E1D               	movwf	??_Forwardhalfblock^0,c
  8123   00523E  0E7F               	movlw	127
  8124   005240                     u5677:
  8125   005240  2EE8               	decfsz	wreg,f,c
  8126   005242  D7FE               	bra	u5677
  8127   005244  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8128   005246  D7FC               	bra	u5677
  8129   005248  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8130   00524A  D7FA               	bra	u5677
  8131   00524C  F000               	nop	
  8132   00524E                     
  8133                           ;dc_motor.c: 218:     stop(&motorL, &motorR);
  8134   00524E  0E73               	movlw	low _motorL
  8135   005250  6E14               	movwf	stop@mL^0,c
  8136   005252  0E01               	movlw	high _motorL
  8137   005254  6E15               	movwf	(stop@mL+1)^0,c
  8138   005256  0E6A               	movlw	low _motorR
  8139   005258  6E16               	movwf	stop@mR^0,c
  8140   00525A  0E01               	movlw	high _motorR
  8141   00525C  6E17               	movwf	(stop@mR+1)^0,c
  8142   00525E  ECDA  F027         	call	_stop	;wreg free
  8143                           
  8144                           ;dc_motor.c: 219:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  8145   005262  0E52               	movlw	82
  8146   005264  6E1E               	movwf	(??_Forwardhalfblock+1)^0,c
  8147   005266  0E2B               	movlw	43
  8148   005268  6E1D               	movwf	??_Forwardhalfblock^0,c
  8149   00526A  0E00               	movlw	0
  8150   00526C                     u5687:
  8151   00526C  2EE8               	decfsz	wreg,f,c
  8152   00526E  D7FE               	bra	u5687
  8153   005270  2E1D               	decfsz	??_Forwardhalfblock^0,f,c
  8154   005272  D7FC               	bra	u5687
  8155   005274  2E1E               	decfsz	(??_Forwardhalfblock+1)^0,f,c
  8156   005276  D7FA               	bra	u5687
  8157   005278  D000               	nop2	
  8158   00527A  0012               	return		;funcret
  8159   00527C                     __end_of_Forwardhalfblock:
  8160                           	callstack 0
  8161                           
  8162 ;; *************** function _BlueMove *****************
  8163 ;; Defined at:
  8164 ;;		line 248 in file "dc_motor.c"
  8165 ;; Parameters:    Size  Location     Type
  8166 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  8167 ;;		 -> motorL(9), 
  8168 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  8169 ;;		 -> motorR(9), 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;		None
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  1    wreg      void 
  8174 ;; Registers used:
  8175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8181 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;Total ram usage:        4 bytes
  8186 ;; Hardware stack levels used: 1
  8187 ;; Hardware stack levels required when called: 5
  8188 ;; This function calls:
  8189 ;;		_reverseDetect
  8190 ;;		_turnRight45
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;;		_go_Home
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text40
  8198   005104                     __ptext40:
  8199                           	callstack 0
  8200   005104                     _BlueMove:
  8201                           	callstack 24
  8202   005104                     
  8203                           ;dc_motor.c: 249:     reverseDetect(&motorL, &motorR);
  8204   005104  0E73               	movlw	low _motorL
  8205   005106  6E19               	movwf	reverseDetect@mL^0,c
  8206   005108  0E01               	movlw	high _motorL
  8207   00510A  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  8208   00510C  0E6A               	movlw	low _motorR
  8209   00510E  6E1B               	movwf	reverseDetect@mR^0,c
  8210   005110  0E01               	movlw	high _motorR
  8211   005112  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  8212   005114  ECC5  F029         	call	_reverseDetect	;wreg free
  8213                           
  8214                           ;dc_motor.c: 251:     turnRight45(&motorL, &motorR);
  8215   005118  0E73               	movlw	low _motorL
  8216   00511A  6E19               	movwf	turnRight45@mL^0,c
  8217   00511C  0E01               	movlw	high _motorL
  8218   00511E  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8219   005120  0E6A               	movlw	low _motorR
  8220   005122  6E1B               	movwf	turnRight45@mR^0,c
  8221   005124  0E01               	movlw	high _motorR
  8222   005126  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8223   005128  EC3E  F029         	call	_turnRight45	;wreg free
  8224                           
  8225                           ;dc_motor.c: 252:     turnRight45(&motorL, &motorR);
  8226   00512C  0E73               	movlw	low _motorL
  8227   00512E  6E19               	movwf	turnRight45@mL^0,c
  8228   005130  0E01               	movlw	high _motorL
  8229   005132  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8230   005134  0E6A               	movlw	low _motorR
  8231   005136  6E1B               	movwf	turnRight45@mR^0,c
  8232   005138  0E01               	movlw	high _motorR
  8233   00513A  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8234   00513C  EC3E  F029         	call	_turnRight45	;wreg free
  8235                           
  8236                           ;dc_motor.c: 253:     turnRight45(&motorL, &motorR);
  8237   005140  0E73               	movlw	low _motorL
  8238   005142  6E19               	movwf	turnRight45@mL^0,c
  8239   005144  0E01               	movlw	high _motorL
  8240   005146  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8241   005148  0E6A               	movlw	low _motorR
  8242   00514A  6E1B               	movwf	turnRight45@mR^0,c
  8243   00514C  0E01               	movlw	high _motorR
  8244   00514E  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8245   005150  EC3E  F029         	call	_turnRight45	;wreg free
  8246                           
  8247                           ;dc_motor.c: 254:     turnRight45(&motorL, &motorR);
  8248   005154  0E73               	movlw	low _motorL
  8249   005156  6E19               	movwf	turnRight45@mL^0,c
  8250   005158  0E01               	movlw	high _motorL
  8251   00515A  6E1A               	movwf	(turnRight45@mL+1)^0,c
  8252   00515C  0E6A               	movlw	low _motorR
  8253   00515E  6E1B               	movwf	turnRight45@mR^0,c
  8254   005160  0E01               	movlw	high _motorR
  8255   005162  6E1C               	movwf	(turnRight45@mR+1)^0,c
  8256   005164  EC3E  F029         	call	_turnRight45	;wreg free
  8257   005168  0012               	return		;funcret
  8258   00516A                     __end_of_BlueMove:
  8259                           	callstack 0
  8260                           
  8261 ;; *************** function _colour_rel *****************
  8262 ;; Defined at:
  8263 ;;		line 114 in file "color.c"
  8264 ;; Parameters:    Size  Location     Type
  8265 ;;  vals            2   74[COMRAM] PTR struct RGB
  8266 ;;		 -> vals(8), 
  8267 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8268 ;;		 -> rel(12), 
  8269 ;; Auto vars:     Size  Location     Type
  8270 ;;  B               4   20[BANK0 ] float 
  8271 ;;  G               4   16[BANK0 ] float 
  8272 ;;  R               4   12[BANK0 ] float 
  8273 ;;  L               4    0[BANK0 ] float 
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;Total ram usage:       28 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; Hardware stack levels required when called: 2
  8290 ;; This function calls:
  8291 ;;		___fladd
  8292 ;;		___fldiv
  8293 ;;		___xxtofl
  8294 ;; This function is called by:
  8295 ;;		_main
  8296 ;; This function uses a non-reentrant model
  8297 ;;
  8298                           
  8299                           	psect	text41
  8300   0034BA                     __ptext41:
  8301                           	callstack 0
  8302   0034BA                     _colour_rel:
  8303                           	callstack 28
  8304   0034BA                     
  8305                           ;color.c: 115:     float R = vals->R;
  8306   0034BA  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  8307   0034BE  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  8308   0034C2  CFDE F001          	movff	postinc2,___xxtofl@val
  8309   0034C6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8310   0034CA  0E00               	movlw	0
  8311   0034CC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8312   0034CE  0EFF               	movlw	-1
  8313   0034D0  6E03               	movwf	(___xxtofl@val+2)^0,c
  8314   0034D2  6E04               	movwf	(___xxtofl@val+3)^0,c
  8315   0034D4  0E01               	movlw	1
  8316   0034D6  ECA8  F020         	call	___xxtofl
  8317   0034DA  C001  F06C         	movff	?___xxtofl,colour_rel@R
  8318   0034DE  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  8319   0034E2  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  8320   0034E6  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  8321                           
  8322                           ;color.c: 116:     float G = vals->G;
  8323   0034EA  EE20 F002          	lfsr	2,2
  8324   0034EE  504B               	movf	colour_rel@vals^0,w,c
  8325   0034F0  26D9               	addwf	fsr2l,f,c
  8326   0034F2  504C               	movf	(colour_rel@vals+1)^0,w,c
  8327   0034F4  22DA               	addwfc	fsr2h,f,c
  8328   0034F6  CFDE F001          	movff	postinc2,___xxtofl@val
  8329   0034FA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8330   0034FE  0E00               	movlw	0
  8331   003500  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8332   003502  0EFF               	movlw	-1
  8333   003504  6E03               	movwf	(___xxtofl@val+2)^0,c
  8334   003506  6E04               	movwf	(___xxtofl@val+3)^0,c
  8335   003508  0E01               	movlw	1
  8336   00350A  ECA8  F020         	call	___xxtofl
  8337   00350E  C001  F070         	movff	?___xxtofl,colour_rel@G
  8338   003512  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  8339   003516  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  8340   00351A  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  8341                           
  8342                           ;color.c: 117:     float B = vals->B;
  8343   00351E  EE20 F004          	lfsr	2,4
  8344   003522  504B               	movf	colour_rel@vals^0,w,c
  8345   003524  26D9               	addwf	fsr2l,f,c
  8346   003526  504C               	movf	(colour_rel@vals+1)^0,w,c
  8347   003528  22DA               	addwfc	fsr2h,f,c
  8348   00352A  CFDE F001          	movff	postinc2,___xxtofl@val
  8349   00352E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8350   003532  0E00               	movlw	0
  8351   003534  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8352   003536  0EFF               	movlw	-1
  8353   003538  6E03               	movwf	(___xxtofl@val+2)^0,c
  8354   00353A  6E04               	movwf	(___xxtofl@val+3)^0,c
  8355   00353C  0E01               	movlw	1
  8356   00353E  ECA8  F020         	call	___xxtofl
  8357   003542  C001  F074         	movff	?___xxtofl,colour_rel@B
  8358   003546  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  8359   00354A  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  8360   00354E  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  8361                           
  8362                           ;color.c: 118:     float L = vals->L;
  8363   003552  EE20 F006          	lfsr	2,6
  8364   003556  504B               	movf	colour_rel@vals^0,w,c
  8365   003558  26D9               	addwf	fsr2l,f,c
  8366   00355A  504C               	movf	(colour_rel@vals+1)^0,w,c
  8367   00355C  22DA               	addwfc	fsr2h,f,c
  8368   00355E  CFDE F001          	movff	postinc2,___xxtofl@val
  8369   003562  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8370   003566  0E00               	movlw	0
  8371   003568  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8372   00356A  0EFF               	movlw	-1
  8373   00356C  6E03               	movwf	(___xxtofl@val+2)^0,c
  8374   00356E  6E04               	movwf	(___xxtofl@val+3)^0,c
  8375   003570  0E01               	movlw	1
  8376   003572  ECA8  F020         	call	___xxtofl
  8377   003576  C001  F060         	movff	?___xxtofl,colour_rel@L
  8378   00357A  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  8379   00357E  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  8380   003582  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  8381   003586                     
  8382                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8383   003586  C070  F005         	movff	colour_rel@G,___fladd@a
  8384   00358A  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8385   00358E  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8386   003592  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8387   003596  C06C  F001         	movff	colour_rel@R,___fladd@b
  8388   00359A  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8389   00359E  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8390   0035A2  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8391   0035A6  EC1B  F014         	call	___fladd	;wreg free
  8392   0035AA  C001  F064         	movff	?___fladd,_colour_rel$2781
  8393   0035AE  C002  F065         	movff	?___fladd+1,_colour_rel$2781+1
  8394   0035B2  C003  F066         	movff	?___fladd+2,_colour_rel$2781+2
  8395   0035B6  C004  F067         	movff	?___fladd+3,_colour_rel$2781+3
  8396   0035BA                     
  8397                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8398   0035BA  C074  F005         	movff	colour_rel@B,___fladd@a
  8399   0035BE  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8400   0035C2  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8401   0035C6  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8402   0035CA  C064  F001         	movff	_colour_rel$2781,___fladd@b
  8403   0035CE  C065  F002         	movff	_colour_rel$2781+1,___fladd@b+1
  8404   0035D2  C066  F003         	movff	_colour_rel$2781+2,___fladd@b+2
  8405   0035D6  C067  F004         	movff	_colour_rel$2781+3,___fladd@b+3
  8406   0035DA  EC1B  F014         	call	___fladd	;wreg free
  8407   0035DE  C001  F068         	movff	?___fladd,_colour_rel$2782
  8408   0035E2  C002  F069         	movff	?___fladd+1,_colour_rel$2782+1
  8409   0035E6  C003  F06A         	movff	?___fladd+2,_colour_rel$2782+2
  8410   0035EA  C004  F06B         	movff	?___fladd+3,_colour_rel$2782+3
  8411                           
  8412                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  8413   0035EE  C06C  F032         	movff	colour_rel@R,___fldiv@b
  8414   0035F2  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  8415   0035F6  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  8416   0035FA  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  8417   0035FE  C060  F005         	movff	colour_rel@L,___fladd@a
  8418   003602  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8419   003606  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8420   00360A  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8421   00360E  C068  F001         	movff	_colour_rel$2782,___fladd@b
  8422   003612  C069  F002         	movff	_colour_rel$2782+1,___fladd@b+1
  8423   003616  C06A  F003         	movff	_colour_rel$2782+2,___fladd@b+2
  8424   00361A  C06B  F004         	movff	_colour_rel$2782+3,___fladd@b+3
  8425   00361E  EC1B  F014         	call	___fladd	;wreg free
  8426   003622  C001  F036         	movff	?___fladd,___fldiv@a
  8427   003626  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8428   00362A  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8429   00362E  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8430   003632  EC90  F018         	call	___fldiv	;wreg free
  8431   003636  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  8432   00363A  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  8433   00363E  C032  FFDE         	movff	?___fldiv,postinc2
  8434   003642  C033  FFDE         	movff	?___fldiv+1,postinc2
  8435   003646  C034  FFDE         	movff	?___fldiv+2,postinc2
  8436   00364A  C035  FFDE         	movff	?___fldiv+3,postinc2
  8437   00364E                     
  8438                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8439   00364E  C070  F005         	movff	colour_rel@G,___fladd@a
  8440   003652  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8441   003656  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8442   00365A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8443   00365E  C06C  F001         	movff	colour_rel@R,___fladd@b
  8444   003662  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8445   003666  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8446   00366A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8447   00366E  EC1B  F014         	call	___fladd	;wreg free
  8448   003672  C001  F064         	movff	?___fladd,_colour_rel$2781
  8449   003676  C002  F065         	movff	?___fladd+1,_colour_rel$2781+1
  8450   00367A  C003  F066         	movff	?___fladd+2,_colour_rel$2781+2
  8451   00367E  C004  F067         	movff	?___fladd+3,_colour_rel$2781+3
  8452   003682                     
  8453                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8454   003682  C074  F005         	movff	colour_rel@B,___fladd@a
  8455   003686  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8456   00368A  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8457   00368E  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8458   003692  C064  F001         	movff	_colour_rel$2781,___fladd@b
  8459   003696  C065  F002         	movff	_colour_rel$2781+1,___fladd@b+1
  8460   00369A  C066  F003         	movff	_colour_rel$2781+2,___fladd@b+2
  8461   00369E  C067  F004         	movff	_colour_rel$2781+3,___fladd@b+3
  8462   0036A2  EC1B  F014         	call	___fladd	;wreg free
  8463   0036A6  C001  F068         	movff	?___fladd,_colour_rel$2782
  8464   0036AA  C002  F069         	movff	?___fladd+1,_colour_rel$2782+1
  8465   0036AE  C003  F06A         	movff	?___fladd+2,_colour_rel$2782+2
  8466   0036B2  C004  F06B         	movff	?___fladd+3,_colour_rel$2782+3
  8467                           
  8468                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  8469   0036B6  C074  F032         	movff	colour_rel@B,___fldiv@b
  8470   0036BA  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  8471   0036BE  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  8472   0036C2  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  8473   0036C6  C060  F005         	movff	colour_rel@L,___fladd@a
  8474   0036CA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8475   0036CE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8476   0036D2  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8477   0036D6  C068  F001         	movff	_colour_rel$2782,___fladd@b
  8478   0036DA  C069  F002         	movff	_colour_rel$2782+1,___fladd@b+1
  8479   0036DE  C06A  F003         	movff	_colour_rel$2782+2,___fladd@b+2
  8480   0036E2  C06B  F004         	movff	_colour_rel$2782+3,___fladd@b+3
  8481   0036E6  EC1B  F014         	call	___fladd	;wreg free
  8482   0036EA  C001  F036         	movff	?___fladd,___fldiv@a
  8483   0036EE  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8484   0036F2  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8485   0036F6  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8486   0036FA  EC90  F018         	call	___fldiv	;wreg free
  8487   0036FE  EE20 F008          	lfsr	2,8
  8488   003702  504D               	movf	colour_rel@rel^0,w,c
  8489   003704  26D9               	addwf	fsr2l,f,c
  8490   003706  504E               	movf	(colour_rel@rel+1)^0,w,c
  8491   003708  22DA               	addwfc	fsr2h,f,c
  8492   00370A  C032  FFDE         	movff	?___fldiv,postinc2
  8493   00370E  C033  FFDE         	movff	?___fldiv+1,postinc2
  8494   003712  C034  FFDE         	movff	?___fldiv+2,postinc2
  8495   003716  C035  FFDE         	movff	?___fldiv+3,postinc2
  8496   00371A                     
  8497                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8498   00371A  C070  F005         	movff	colour_rel@G,___fladd@a
  8499   00371E  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  8500   003722  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  8501   003726  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  8502   00372A  C06C  F001         	movff	colour_rel@R,___fladd@b
  8503   00372E  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  8504   003732  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  8505   003736  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  8506   00373A  EC1B  F014         	call	___fladd	;wreg free
  8507   00373E  C001  F064         	movff	?___fladd,_colour_rel$2781
  8508   003742  C002  F065         	movff	?___fladd+1,_colour_rel$2781+1
  8509   003746  C003  F066         	movff	?___fladd+2,_colour_rel$2781+2
  8510   00374A  C004  F067         	movff	?___fladd+3,_colour_rel$2781+3
  8511   00374E                     
  8512                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8513   00374E  C074  F005         	movff	colour_rel@B,___fladd@a
  8514   003752  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  8515   003756  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  8516   00375A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  8517   00375E  C064  F001         	movff	_colour_rel$2781,___fladd@b
  8518   003762  C065  F002         	movff	_colour_rel$2781+1,___fladd@b+1
  8519   003766  C066  F003         	movff	_colour_rel$2781+2,___fladd@b+2
  8520   00376A  C067  F004         	movff	_colour_rel$2781+3,___fladd@b+3
  8521   00376E  EC1B  F014         	call	___fladd	;wreg free
  8522   003772  C001  F068         	movff	?___fladd,_colour_rel$2782
  8523   003776  C002  F069         	movff	?___fladd+1,_colour_rel$2782+1
  8524   00377A  C003  F06A         	movff	?___fladd+2,_colour_rel$2782+2
  8525   00377E  C004  F06B         	movff	?___fladd+3,_colour_rel$2782+3
  8526                           
  8527                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  8528   003782  C070  F032         	movff	colour_rel@G,___fldiv@b
  8529   003786  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  8530   00378A  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  8531   00378E  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  8532   003792  C060  F005         	movff	colour_rel@L,___fladd@a
  8533   003796  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  8534   00379A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  8535   00379E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  8536   0037A2  C068  F001         	movff	_colour_rel$2782,___fladd@b
  8537   0037A6  C069  F002         	movff	_colour_rel$2782+1,___fladd@b+1
  8538   0037AA  C06A  F003         	movff	_colour_rel$2782+2,___fladd@b+2
  8539   0037AE  C06B  F004         	movff	_colour_rel$2782+3,___fladd@b+3
  8540   0037B2  EC1B  F014         	call	___fladd	;wreg free
  8541   0037B6  C001  F036         	movff	?___fladd,___fldiv@a
  8542   0037BA  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  8543   0037BE  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  8544   0037C2  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  8545   0037C6  EC90  F018         	call	___fldiv	;wreg free
  8546   0037CA  EE20 F004          	lfsr	2,4
  8547   0037CE  504D               	movf	colour_rel@rel^0,w,c
  8548   0037D0  26D9               	addwf	fsr2l,f,c
  8549   0037D2  504E               	movf	(colour_rel@rel+1)^0,w,c
  8550   0037D4  22DA               	addwfc	fsr2h,f,c
  8551   0037D6  C032  FFDE         	movff	?___fldiv,postinc2
  8552   0037DA  C033  FFDE         	movff	?___fldiv+1,postinc2
  8553   0037DE  C034  FFDE         	movff	?___fldiv+2,postinc2
  8554   0037E2  C035  FFDE         	movff	?___fldiv+3,postinc2
  8555   0037E6  0012               	return		;funcret
  8556   0037E8                     __end_of_colour_rel:
  8557                           	callstack 0
  8558                           
  8559 ;; *************** function _color_click_init *****************
  8560 ;; Defined at:
  8561 ;;		line 7 in file "color.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2, status,0, cstack
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;Total ram usage:        1 bytes
  8580 ;; Hardware stack levels used: 1
  8581 ;; Hardware stack levels required when called: 4
  8582 ;; This function calls:
  8583 ;;		_I2C_2_Master_Init
  8584 ;;		_color_writetoaddr
  8585 ;; This function is called by:
  8586 ;;		_main
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text42
  8591   005588                     __ptext42:
  8592                           	callstack 0
  8593   005588                     _color_click_init:
  8594                           	callstack 26
  8595   005588                     
  8596                           ;color.c: 10:     I2C_2_Master_Init();
  8597   005588  EC5F  F02D         	call	_I2C_2_Master_Init	;wreg free
  8598   00558C                     
  8599                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8600   00558C  0E01               	movlw	1
  8601   00558E  6E03               	movwf	color_writetoaddr@value^0,c
  8602   005590  0E00               	movlw	0
  8603   005592  EC9B  F02D         	call	_color_writetoaddr
  8604   005596                     
  8605                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8606   005596  0E3F               	movlw	63
  8607   005598  6E05               	movwf	??_color_click_init^0,c
  8608   00559A  0E55               	movlw	85
  8609   00559C                     u5697:
  8610   00559C  2EE8               	decfsz	wreg,f,c
  8611   00559E  D7FE               	bra	u5697
  8612   0055A0  2E05               	decfsz	??_color_click_init^0,f,c
  8613   0055A2  D7FC               	bra	u5697
  8614   0055A4  F000               	nop	
  8615   0055A6                     
  8616                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8617   0055A6  0E03               	movlw	3
  8618   0055A8  6E03               	movwf	color_writetoaddr@value^0,c
  8619   0055AA  0E00               	movlw	0
  8620   0055AC  EC9B  F02D         	call	_color_writetoaddr
  8621   0055B0                     
  8622                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8623   0055B0  0ED5               	movlw	213
  8624   0055B2  6E03               	movwf	color_writetoaddr@value^0,c
  8625   0055B4  0E01               	movlw	1
  8626   0055B6  EC9B  F02D         	call	_color_writetoaddr
  8627   0055BA                     
  8628                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8629   0055BA  0E00               	movlw	0
  8630   0055BC  6E03               	movwf	color_writetoaddr@value^0,c
  8631   0055BE  0E0F               	movlw	15
  8632   0055C0  EC9B  F02D         	call	_color_writetoaddr
  8633   0055C4                     
  8634                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8635   0055C4  9287               	bcf	135,1,c	;volatile
  8636   0055C6                     
  8637                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8638   0055C6  9881               	bcf	129,4,c	;volatile
  8639   0055C8                     
  8640                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8641   0055C8  9E86               	bcf	134,7,c	;volatile
  8642   0055CA                     
  8643                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8644   0055CA  9684               	bcf	132,3,c	;volatile
  8645   0055CC                     
  8646                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8647   0055CC  9884               	bcf	132,4,c	;volatile
  8648   0055CE                     
  8649                           ;color.c: 28:     LATGbits.LATG1=0;
  8650   0055CE  927F               	bcf	127,1,c	;volatile
  8651   0055D0                     
  8652                           ;color.c: 29:     LATFbits.LATF7=0;
  8653   0055D0  9E7E               	bcf	126,7,c	;volatile
  8654   0055D2                     
  8655                           ;color.c: 30:     LATAbits.LATA4=0;
  8656   0055D2  9879               	bcf	121,4,c	;volatile
  8657   0055D4                     
  8658                           ;color.c: 32:     LATDbits.LATD3=0;
  8659   0055D4  967C               	bcf	124,3,c	;volatile
  8660   0055D6                     
  8661                           ;color.c: 33:     LATDbits.LATD4=0;
  8662   0055D6  987C               	bcf	124,4,c	;volatile
  8663   0055D8  0012               	return		;funcret
  8664   0055DA                     __end_of_color_click_init:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _color_writetoaddr *****************
  8668 ;; Defined at:
  8669 ;;		line 41 in file "color.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  address         1    wreg     unsigned char 
  8672 ;;  value           1    2[COMRAM] unsigned char 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  address         1    3[COMRAM] unsigned char 
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      void 
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8684 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8688 ;;Total ram usage:        2 bytes
  8689 ;; Hardware stack levels used: 1
  8690 ;; Hardware stack levels required when called: 3
  8691 ;; This function calls:
  8692 ;;		_I2C_2_Master_Start
  8693 ;;		_I2C_2_Master_Stop
  8694 ;;		_I2C_2_Master_Write
  8695 ;; This function is called by:
  8696 ;;		_color_click_init
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text43
  8701   005B36                     __ptext43:
  8702                           	callstack 0
  8703   005B36                     _color_writetoaddr:
  8704                           	callstack 26
  8705                           
  8706                           ;incstack = 0
  8707                           ;color_writetoaddr@address stored from wreg
  8708   005B36  6E04               	movwf	color_writetoaddr@address^0,c
  8709   005B38                     
  8710                           ;color.c: 42:     I2C_2_Master_Start();
  8711   005B38  ECD6  F02D         	call	_I2C_2_Master_Start	;wreg free
  8712                           
  8713                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8714   005B3C  0E52               	movlw	82
  8715   005B3E  ECC6  F02D         	call	_I2C_2_Master_Write
  8716                           
  8717                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8718   005B42  5004               	movf	color_writetoaddr@address^0,w,c
  8719   005B44  0980               	iorlw	128
  8720   005B46  ECC6  F02D         	call	_I2C_2_Master_Write
  8721                           
  8722                           ;color.c: 45:     I2C_2_Master_Write(value);
  8723   005B4A  5003               	movf	color_writetoaddr@value^0,w,c
  8724   005B4C  ECC6  F02D         	call	_I2C_2_Master_Write
  8725                           
  8726                           ;color.c: 46:     I2C_2_Master_Stop();
  8727   005B50  ECD1  F02D         	call	_I2C_2_Master_Stop	;wreg free
  8728   005B54  0012               	return		;funcret
  8729   005B56                     __end_of_color_writetoaddr:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _I2C_2_Master_Write *****************
  8733 ;; Defined at:
  8734 ;;		line 45 in file "i2c.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  data_byte       1    wreg     unsigned char 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  data_byte       1    1[COMRAM] unsigned char 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;Total ram usage:        1 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 2
  8755 ;; This function calls:
  8756 ;;		_I2C_2_Master_Idle
  8757 ;; This function is called by:
  8758 ;;		_color_writetoaddr
  8759 ;;		_color_read_lum
  8760 ;;		_color_read_Red
  8761 ;;		_color_read_Green
  8762 ;;		_color_read_Blue
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           	psect	text44
  8767   005B8C                     __ptext44:
  8768                           	callstack 0
  8769   005B8C                     _I2C_2_Master_Write:
  8770                           	callstack 26
  8771                           
  8772                           ;incstack = 0
  8773                           ;I2C_2_Master_Write@data_byte stored from wreg
  8774   005B8C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8775   005B8E                     
  8776                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8777   005B8E  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8778   005B92                     
  8779                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8780   005B92  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8781   005B96  0012               	return		;funcret
  8782   005B98                     __end_of_I2C_2_Master_Write:
  8783                           	callstack 0
  8784                           
  8785 ;; *************** function _I2C_2_Master_Stop *****************
  8786 ;; Defined at:
  8787 ;;		line 39 in file "i2c.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;Total ram usage:        0 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; Hardware stack levels required when called: 2
  8808 ;; This function calls:
  8809 ;;		_I2C_2_Master_Idle
  8810 ;; This function is called by:
  8811 ;;		_color_writetoaddr
  8812 ;;		_color_read_lum
  8813 ;;		_color_read_Red
  8814 ;;		_color_read_Green
  8815 ;;		_color_read_Blue
  8816 ;; This function uses a non-reentrant model
  8817 ;;
  8818                           
  8819                           	psect	text45
  8820   005BA2                     __ptext45:
  8821                           	callstack 0
  8822   005BA2                     _I2C_2_Master_Stop:
  8823                           	callstack 26
  8824   005BA2                     
  8825                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8826   005BA2  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8827   005BA6                     
  8828                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8829   005BA6  010E               	movlb	14	; () banked
  8830   005BA8  85DA               	bsf	218,2,b	;volatile
  8831   005BAA                     
  8832                           ; BSR set to: 14
  8833   005BAA  0012               	return		;funcret
  8834   005BAC                     __end_of_I2C_2_Master_Stop:
  8835                           	callstack 0
  8836                           
  8837 ;; *************** function _I2C_2_Master_Start *****************
  8838 ;; Defined at:
  8839 ;;		line 27 in file "i2c.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used: 1
  8859 ;; Hardware stack levels required when called: 2
  8860 ;; This function calls:
  8861 ;;		_I2C_2_Master_Idle
  8862 ;; This function is called by:
  8863 ;;		_color_writetoaddr
  8864 ;;		_color_read_lum
  8865 ;;		_color_read_Red
  8866 ;;		_color_read_Green
  8867 ;;		_color_read_Blue
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text46
  8872   005BAC                     __ptext46:
  8873                           	callstack 0
  8874   005BAC                     _I2C_2_Master_Start:
  8875                           	callstack 26
  8876   005BAC                     
  8877                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8878   005BAC  EC74  F02D         	call	_I2C_2_Master_Idle	;wreg free
  8879   005BB0                     
  8880                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8881   005BB0  010E               	movlb	14	; () banked
  8882   005BB2  81DA               	bsf	218,0,b	;volatile
  8883   005BB4                     
  8884                           ; BSR set to: 14
  8885   005BB4  0012               	return		;funcret
  8886   005BB6                     __end_of_I2C_2_Master_Start:
  8887                           	callstack 0
  8888                           
  8889 ;; *************** function _I2C_2_Master_Idle *****************
  8890 ;; Defined at:
  8891 ;;		line 22 in file "i2c.c"
  8892 ;; Parameters:    Size  Location     Type
  8893 ;;		None
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;		None
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, status,2, status,0
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;Total ram usage:        1 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 1
  8912 ;; This function calls:
  8913 ;;		Nothing
  8914 ;; This function is called by:
  8915 ;;		_I2C_2_Master_Start
  8916 ;;		_I2C_2_Master_RepStart
  8917 ;;		_I2C_2_Master_Stop
  8918 ;;		_I2C_2_Master_Write
  8919 ;;		_I2C_2_Master_Read
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text47
  8924   005AE8                     __ptext47:
  8925                           	callstack 0
  8926   005AE8                     _I2C_2_Master_Idle:
  8927                           	callstack 26
  8928   005AE8                     l137:
  8929   005AE8  010E               	movlb	14	; () banked
  8930   005AEA  B5D8               	btfsc	216,2,b	;volatile
  8931   005AEC  EF7A  F02D         	goto	u4251
  8932   005AF0  EF7C  F02D         	goto	u4250
  8933   005AF4                     u4251:
  8934   005AF4  EF74  F02D         	goto	l137
  8935   005AF8                     u4250:
  8936   005AF8                     
  8937                           ; BSR set to: 14
  8938   005AF8  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8939   005AFC  0E1F               	movlw	31
  8940   005AFE  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8941   005B00  A4D8               	btfss	status,2,c
  8942   005B02  EF85  F02D         	goto	u4261
  8943   005B06  EF87  F02D         	goto	u4260
  8944   005B0A                     u4261:
  8945   005B0A  EF74  F02D         	goto	l137
  8946   005B0E                     u4260:
  8947   005B0E                     
  8948                           ; BSR set to: 14
  8949   005B0E  0012               	return		;funcret
  8950   005B10                     __end_of_I2C_2_Master_Idle:
  8951                           	callstack 0
  8952                           
  8953 ;; *************** function _I2C_2_Master_Init *****************
  8954 ;; Defined at:
  8955 ;;		line 4 in file "i2c.c"
  8956 ;; Parameters:    Size  Location     Type
  8957 ;;		None
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;		None
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;Total ram usage:        0 bytes
  8974 ;; Hardware stack levels used: 1
  8975 ;; Hardware stack levels required when called: 1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_color_click_init
  8980 ;;		_main
  8981 ;; This function uses a non-reentrant model
  8982 ;;
  8983                           
  8984                           	psect	text48
  8985   005ABE                     __ptext48:
  8986                           	callstack 0
  8987   005ABE                     _I2C_2_Master_Init:
  8988                           	callstack 28
  8989   005ABE                     
  8990                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8991   005ABE  010E               	movlb	14	; () banked
  8992   005AC0  51D9               	movf	217,w,b	;volatile
  8993   005AC2  0BF0               	andlw	-16
  8994   005AC4  0908               	iorlw	8
  8995   005AC6  6FD9               	movwf	217,b	;volatile
  8996   005AC8                     
  8997                           ; BSR set to: 14
  8998                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8999   005AC8  8BD9               	bsf	217,5,b	;volatile
  9000                           
  9001                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  9002   005ACA  0E9F               	movlw	159
  9003   005ACC  6FD6               	movwf	214,b	;volatile
  9004   005ACE                     
  9005                           ; BSR set to: 14
  9006                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  9007   005ACE  8A84               	bsf	132,5,c	;volatile
  9008   005AD0                     
  9009                           ; BSR set to: 14
  9010                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  9011   005AD0  8C84               	bsf	132,6,c	;volatile
  9012   005AD2                     
  9013                           ; BSR set to: 14
  9014                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  9015   005AD2  9BA7               	bcf	167,5,b	;volatile
  9016   005AD4                     
  9017                           ; BSR set to: 14
  9018                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  9019   005AD4  9DA7               	bcf	167,6,b	;volatile
  9020                           
  9021                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  9022   005AD6  0E1D               	movlw	29
  9023   005AD8  6F1D               	movwf	29,b	;volatile
  9024                           
  9025                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  9026   005ADA  0E1E               	movlw	30
  9027   005ADC  6F1C               	movwf	28,b	;volatile
  9028                           
  9029                           ;i2c.c: 18:   RD5PPS=0x1C;
  9030   005ADE  0E1C               	movlw	28
  9031   005AE0  6F6F               	movwf	111,b	;volatile
  9032                           
  9033                           ;i2c.c: 19:   RD6PPS=0x1B;
  9034   005AE2  0E1B               	movlw	27
  9035   005AE4  6F70               	movwf	112,b	;volatile
  9036   005AE6                     
  9037                           ; BSR set to: 14
  9038   005AE6  0012               	return		;funcret
  9039   005AE8                     __end_of_I2C_2_Master_Init:
  9040                           	callstack 0
  9041                           
  9042 ;; *************** function _YellowMove *****************
  9043 ;; Defined at:
  9044 ;;		line 258 in file "dc_motor.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9047 ;;		 -> motorL(9), 
  9048 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9049 ;;		 -> motorR(9), 
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9065 ;;Total ram usage:        4 bytes
  9066 ;; Hardware stack levels used: 1
  9067 ;; Hardware stack levels required when called: 5
  9068 ;; This function calls:
  9069 ;;		_reverseDetect
  9070 ;;		_reverseOneBlock
  9071 ;;		_turnRight45
  9072 ;; This function is called by:
  9073 ;;		_main
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text49
  9078   0055DA                     __ptext49:
  9079                           	callstack 0
  9080   0055DA                     _YellowMove:
  9081                           	callstack 25
  9082   0055DA                     
  9083                           ;dc_motor.c: 259:     reverseDetect(&motorL, &motorR);
  9084   0055DA  0E73               	movlw	low _motorL
  9085   0055DC  6E19               	movwf	reverseDetect@mL^0,c
  9086   0055DE  0E01               	movlw	high _motorL
  9087   0055E0  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  9088   0055E2  0E6A               	movlw	low _motorR
  9089   0055E4  6E1B               	movwf	reverseDetect@mR^0,c
  9090   0055E6  0E01               	movlw	high _motorR
  9091   0055E8  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  9092   0055EA  ECC5  F029         	call	_reverseDetect	;wreg free
  9093                           
  9094                           ;dc_motor.c: 261:     reverseOneBlock(&motorL, &motorR);
  9095   0055EE  0E73               	movlw	low _motorL
  9096   0055F0  6E19               	movwf	reverseOneBlock@mL^0,c
  9097   0055F2  0E01               	movlw	high _motorL
  9098   0055F4  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  9099   0055F6  0E6A               	movlw	low _motorR
  9100   0055F8  6E1B               	movwf	reverseOneBlock@mR^0,c
  9101   0055FA  0E01               	movlw	high _motorR
  9102   0055FC  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  9103   0055FE  EC98  F029         	call	_reverseOneBlock	;wreg free
  9104                           
  9105                           ;dc_motor.c: 263:     turnRight45(&motorL, &motorR);
  9106   005602  0E73               	movlw	low _motorL
  9107   005604  6E19               	movwf	turnRight45@mL^0,c
  9108   005606  0E01               	movlw	high _motorL
  9109   005608  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9110   00560A  0E6A               	movlw	low _motorR
  9111   00560C  6E1B               	movwf	turnRight45@mR^0,c
  9112   00560E  0E01               	movlw	high _motorR
  9113   005610  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9114   005612  EC3E  F029         	call	_turnRight45	;wreg free
  9115                           
  9116                           ;dc_motor.c: 264:     turnRight45(&motorL, &motorR);
  9117   005616  0E73               	movlw	low _motorL
  9118   005618  6E19               	movwf	turnRight45@mL^0,c
  9119   00561A  0E01               	movlw	high _motorL
  9120   00561C  6E1A               	movwf	(turnRight45@mL+1)^0,c
  9121   00561E  0E6A               	movlw	low _motorR
  9122   005620  6E1B               	movwf	turnRight45@mR^0,c
  9123   005622  0E01               	movlw	high _motorR
  9124   005624  6E1C               	movwf	(turnRight45@mR+1)^0,c
  9125   005626  EC3E  F029         	call	_turnRight45	;wreg free
  9126   00562A  0012               	return		;funcret
  9127   00562C                     __end_of_YellowMove:
  9128                           	callstack 0
  9129                           
  9130 ;; *************** function _turnRight45 *****************
  9131 ;; Defined at:
  9132 ;;		line 181 in file "dc_motor.c"
  9133 ;; Parameters:    Size  Location     Type
  9134 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9135 ;;		 -> motorL(9), 
  9136 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9137 ;;		 -> motorR(9), 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9149 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;Total ram usage:        6 bytes
  9154 ;; Hardware stack levels used: 1
  9155 ;; Hardware stack levels required when called: 4
  9156 ;; This function calls:
  9157 ;;		_stop
  9158 ;;		_turnRight
  9159 ;; This function is called by:
  9160 ;;		_RedMove
  9161 ;;		_BlueMove
  9162 ;;		_YellowMove
  9163 ;;		_OrangeMove
  9164 ;;		_ReversePink
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text50
  9169   00527C                     __ptext50:
  9170                           	callstack 0
  9171   00527C                     _turnRight45:
  9172                           	callstack 24
  9173   00527C                     
  9174                           ;dc_motor.c: 182:     turnRight(mL,mR);
  9175   00527C  C019  F014         	movff	turnRight45@mL,turnRight@mL
  9176   005280  C01A  F015         	movff	turnRight45@mL+1,turnRight@mL+1
  9177   005284  C01B  F016         	movff	turnRight45@mR,turnRight@mR
  9178   005288  C01C  F017         	movff	turnRight45@mR+1,turnRight@mR+1
  9179   00528C  ECEC  F025         	call	_turnRight	;wreg free
  9180   005290                     
  9181                           ;dc_motor.c: 183:     _delay((unsigned long)((120)*(64000000/4000.0)));
  9182   005290  0E0A               	movlw	10
  9183   005292  6E1E               	movwf	(??_turnRight45+1)^0,c
  9184   005294  0EBE               	movlw	190
  9185   005296  6E1D               	movwf	??_turnRight45^0,c
  9186   005298  0E79               	movlw	121
  9187   00529A                     u5707:
  9188   00529A  2EE8               	decfsz	wreg,f,c
  9189   00529C  D7FE               	bra	u5707
  9190   00529E  2E1D               	decfsz	??_turnRight45^0,f,c
  9191   0052A0  D7FC               	bra	u5707
  9192   0052A2  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9193   0052A4  D7FA               	bra	u5707
  9194   0052A6  F000               	nop	
  9195   0052A8                     
  9196                           ;dc_motor.c: 184:     stop(&motorL, &motorR);
  9197   0052A8  0E73               	movlw	low _motorL
  9198   0052AA  6E14               	movwf	stop@mL^0,c
  9199   0052AC  0E01               	movlw	high _motorL
  9200   0052AE  6E15               	movwf	(stop@mL+1)^0,c
  9201   0052B0  0E6A               	movlw	low _motorR
  9202   0052B2  6E16               	movwf	stop@mR^0,c
  9203   0052B4  0E01               	movlw	high _motorR
  9204   0052B6  6E17               	movwf	(stop@mR+1)^0,c
  9205   0052B8  ECDA  F027         	call	_stop	;wreg free
  9206                           
  9207                           ;dc_motor.c: 185:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9208   0052BC  0E52               	movlw	82
  9209   0052BE  6E1E               	movwf	(??_turnRight45+1)^0,c
  9210   0052C0  0E2B               	movlw	43
  9211   0052C2  6E1D               	movwf	??_turnRight45^0,c
  9212   0052C4  0E00               	movlw	0
  9213   0052C6                     u5717:
  9214   0052C6  2EE8               	decfsz	wreg,f,c
  9215   0052C8  D7FE               	bra	u5717
  9216   0052CA  2E1D               	decfsz	??_turnRight45^0,f,c
  9217   0052CC  D7FC               	bra	u5717
  9218   0052CE  2E1E               	decfsz	(??_turnRight45+1)^0,f,c
  9219   0052D0  D7FA               	bra	u5717
  9220   0052D2  D000               	nop2	
  9221   0052D4  0012               	return		;funcret
  9222   0052D6                     __end_of_turnRight45:
  9223                           	callstack 0
  9224                           
  9225 ;; *************** function _turnRight *****************
  9226 ;; Defined at:
  9227 ;;		line 128 in file "dc_motor.c"
  9228 ;; Parameters:    Size  Location     Type
  9229 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9230 ;;		 -> motorL(9), 
  9231 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9232 ;;		 -> motorR(9), 
  9233 ;; Auto vars:     Size  Location     Type
  9234 ;;		None
  9235 ;; Return value:  Size  Location     Type
  9236 ;;                  1    wreg      void 
  9237 ;; Registers used:
  9238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9239 ;; Tracked objects:
  9240 ;;		On entry : 0/0
  9241 ;;		On exit  : 0/0
  9242 ;;		Unchanged: 0/0
  9243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9248 ;;Total ram usage:        5 bytes
  9249 ;; Hardware stack levels used: 1
  9250 ;; Hardware stack levels required when called: 3
  9251 ;; This function calls:
  9252 ;;		_setMotorPWM
  9253 ;; This function is called by:
  9254 ;;		_turnRight45
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text51
  9259   004BD8                     __ptext51:
  9260                           	callstack 0
  9261   004BD8                     _turnRight:
  9262                           	callstack 24
  9263   004BD8                     
  9264                           ;dc_motor.c: 128: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 12
      +                          9: {;dc_motor.c: 130:     mL->direction =1;
  9265   004BD8  EE20 F001          	lfsr	2,1
  9266   004BDC  5014               	movf	turnRight@mL^0,w,c
  9267   004BDE  26D9               	addwf	fsr2l,f,c
  9268   004BE0  5015               	movf	(turnRight@mL+1)^0,w,c
  9269   004BE2  22DA               	addwfc	fsr2h,f,c
  9270   004BE4  0E01               	movlw	1
  9271   004BE6  6EDF               	movwf	indf2,c
  9272                           
  9273                           ;dc_motor.c: 131:     mR->direction =0;
  9274   004BE8  EE20 F001          	lfsr	2,1
  9275   004BEC  5016               	movf	turnRight@mR^0,w,c
  9276   004BEE  26D9               	addwf	fsr2l,f,c
  9277   004BF0  5017               	movf	(turnRight@mR+1)^0,w,c
  9278   004BF2  22DA               	addwfc	fsr2h,f,c
  9279   004BF4  0E00               	movlw	0
  9280   004BF6  6EDF               	movwf	indf2,c
  9281                           
  9282                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9283   004BF8  EF1E  F026         	goto	l4415
  9284   004BFC                     l4407:
  9285                           
  9286                           ;dc_motor.c: 135:         mL->power+=10;
  9287   004BFC  C014  FFD9         	movff	turnRight@mL,fsr2l
  9288   004C00  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9289   004C04  0E0A               	movlw	10
  9290   004C06  26DF               	addwf	indf2,f,c
  9291                           
  9292                           ;dc_motor.c: 136:         mR->power+=10;
  9293   004C08  C016  FFD9         	movff	turnRight@mR,fsr2l
  9294   004C0C  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9295   004C10  0E0A               	movlw	10
  9296   004C12  26DF               	addwf	indf2,f,c
  9297   004C14                     
  9298                           ;dc_motor.c: 138:         setMotorPWM(mL);
  9299   004C14  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  9300   004C18  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  9301   004C1C  EC46  F022         	call	_setMotorPWM	;wreg free
  9302   004C20                     
  9303                           ;dc_motor.c: 139:         setMotorPWM(mR);
  9304   004C20  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  9305   004C24  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  9306   004C28  EC46  F022         	call	_setMotorPWM	;wreg free
  9307   004C2C                     
  9308                           ;dc_motor.c: 141:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9309   004C2C  0E15               	movlw	21
  9310   004C2E  6E18               	movwf	??_turnRight^0,c
  9311   004C30  0EC6               	movlw	198
  9312   004C32                     u5727:
  9313   004C32  2EE8               	decfsz	wreg,f,c
  9314   004C34  D7FE               	bra	u5727
  9315   004C36  2E18               	decfsz	??_turnRight^0,f,c
  9316   004C38  D7FC               	bra	u5727
  9317   004C3A  D000               	nop2	
  9318   004C3C                     l4415:
  9319                           
  9320                           ;dc_motor.c: 133:     while(mL->power<70 && mR->power<70){
  9321   004C3C  C014  FFD9         	movff	turnRight@mL,fsr2l
  9322   004C40  C015  FFDA         	movff	turnRight@mL+1,fsr2h
  9323   004C44  0E46               	movlw	70
  9324   004C46  60DF               	cpfslt	indf2,c
  9325   004C48  EF28  F026         	goto	u4311
  9326   004C4C  EF2A  F026         	goto	u4310
  9327   004C50                     u4311:
  9328   004C50  EF36  F026         	goto	l484
  9329   004C54                     u4310:
  9330   004C54  C016  FFD9         	movff	turnRight@mR,fsr2l
  9331   004C58  C017  FFDA         	movff	turnRight@mR+1,fsr2h
  9332   004C5C  0E45               	movlw	69
  9333   004C5E  64DF               	cpfsgt	indf2,c
  9334   004C60  EF34  F026         	goto	u4321
  9335   004C64  EF36  F026         	goto	u4320
  9336   004C68                     u4321:
  9337   004C68  EFFE  F025         	goto	l4407
  9338   004C6C                     u4320:
  9339   004C6C                     l484:
  9340   004C6C  0012               	return		;funcret
  9341   004C6E                     __end_of_turnRight:
  9342                           	callstack 0
  9343                           
  9344 ;; *************** function _RetryMove *****************
  9345 ;; Defined at:
  9346 ;;		line 295 in file "dc_motor.c"
  9347 ;; Parameters:    Size  Location     Type
  9348 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9349 ;;		 -> motorL(9), 
  9350 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9351 ;;		 -> motorR(9), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9365 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;Total ram usage:        6 bytes
  9368 ;; Hardware stack levels used: 1
  9369 ;; Hardware stack levels required when called: 4
  9370 ;; This function calls:
  9371 ;;		_fullSpeedAhead
  9372 ;;		_fullSpeedBack
  9373 ;;		_stop
  9374 ;; This function is called by:
  9375 ;;		_main
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           	psect	text52
  9380   004EB8                     __ptext52:
  9381                           	callstack 0
  9382   004EB8                     _RetryMove:
  9383                           	callstack 26
  9384   004EB8                     
  9385                           ;dc_motor.c: 296:     fullSpeedBack(mL,mR);
  9386   004EB8  C019  F014         	movff	RetryMove@mL,fullSpeedBack@mL
  9387   004EBC  C01A  F015         	movff	RetryMove@mL+1,fullSpeedBack@mL+1
  9388   004EC0  C01B  F016         	movff	RetryMove@mR,fullSpeedBack@mR
  9389   004EC4  C01C  F017         	movff	RetryMove@mR+1,fullSpeedBack@mR+1
  9390   004EC8  ECCD  F026         	call	_fullSpeedBack	;wreg free
  9391   004ECC                     
  9392                           ;dc_motor.c: 297:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9393   004ECC  0E29               	movlw	41
  9394   004ECE  6E1E               	movwf	(??_RetryMove+1)^0,c
  9395   004ED0  0E96               	movlw	150
  9396   004ED2  6E1D               	movwf	??_RetryMove^0,c
  9397   004ED4  0E7F               	movlw	127
  9398   004ED6                     u5737:
  9399   004ED6  2EE8               	decfsz	wreg,f,c
  9400   004ED8  D7FE               	bra	u5737
  9401   004EDA  2E1D               	decfsz	??_RetryMove^0,f,c
  9402   004EDC  D7FC               	bra	u5737
  9403   004EDE  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  9404   004EE0  D7FA               	bra	u5737
  9405   004EE2  F000               	nop	
  9406   004EE4                     
  9407                           ;dc_motor.c: 298:     stop(&motorL, &motorR);
  9408   004EE4  0E73               	movlw	low _motorL
  9409   004EE6  6E14               	movwf	stop@mL^0,c
  9410   004EE8  0E01               	movlw	high _motorL
  9411   004EEA  6E15               	movwf	(stop@mL+1)^0,c
  9412   004EEC  0E6A               	movlw	low _motorR
  9413   004EEE  6E16               	movwf	stop@mR^0,c
  9414   004EF0  0E01               	movlw	high _motorR
  9415   004EF2  6E17               	movwf	(stop@mR+1)^0,c
  9416   004EF4  ECDA  F027         	call	_stop	;wreg free
  9417   004EF8                     
  9418                           ;dc_motor.c: 299:     fullSpeedAhead(mL,mR);
  9419   004EF8  C019  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9420   004EFC  C01A  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9421   004F00  C01B  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9422   004F04  C01C  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9423   004F08  EC37  F026         	call	_fullSpeedAhead	;wreg free
  9424   004F0C                     
  9425                           ;dc_motor.c: 300:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9426   004F0C  0E29               	movlw	41
  9427   004F0E  6E1E               	movwf	(??_RetryMove+1)^0,c
  9428   004F10  0E96               	movlw	150
  9429   004F12  6E1D               	movwf	??_RetryMove^0,c
  9430   004F14  0E7F               	movlw	127
  9431   004F16                     u5747:
  9432   004F16  2EE8               	decfsz	wreg,f,c
  9433   004F18  D7FE               	bra	u5747
  9434   004F1A  2E1D               	decfsz	??_RetryMove^0,f,c
  9435   004F1C  D7FC               	bra	u5747
  9436   004F1E  2E1E               	decfsz	(??_RetryMove+1)^0,f,c
  9437   004F20  D7FA               	bra	u5747
  9438   004F22  F000               	nop	
  9439                           
  9440                           ;dc_motor.c: 301:     stop(&motorL, &motorR);
  9441   004F24  0E73               	movlw	low _motorL
  9442   004F26  6E14               	movwf	stop@mL^0,c
  9443   004F28  0E01               	movlw	high _motorL
  9444   004F2A  6E15               	movwf	(stop@mL+1)^0,c
  9445   004F2C  0E6A               	movlw	low _motorR
  9446   004F2E  6E16               	movwf	stop@mR^0,c
  9447   004F30  0E01               	movlw	high _motorR
  9448   004F32  6E17               	movwf	(stop@mR+1)^0,c
  9449   004F34  ECDA  F027         	call	_stop	;wreg free
  9450   004F38  0012               	return		;funcret
  9451   004F3A                     __end_of_RetryMove:
  9452                           	callstack 0
  9453                           
  9454 ;; *************** function _fullSpeedAhead *****************
  9455 ;; Defined at:
  9456 ;;		line 146 in file "dc_motor.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9459 ;;		 -> motorL(9), 
  9460 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9461 ;;		 -> motorR(9), 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;		None
  9464 ;; Return value:  Size  Location     Type
  9465 ;;                  1    wreg      void 
  9466 ;; Registers used:
  9467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9468 ;; Tracked objects:
  9469 ;;		On entry : 0/0
  9470 ;;		On exit  : 0/0
  9471 ;;		Unchanged: 0/0
  9472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9476 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9477 ;;Total ram usage:        5 bytes
  9478 ;; Hardware stack levels used: 1
  9479 ;; Hardware stack levels required when called: 3
  9480 ;; This function calls:
  9481 ;;		_setMotorPWM
  9482 ;; This function is called by:
  9483 ;;		_ForwardOneBlock
  9484 ;;		_Forwardhalfblock
  9485 ;;		_RetryMove
  9486 ;; This function uses a non-reentrant model
  9487 ;;
  9488                           
  9489                           	psect	text53
  9490   004C6E                     __ptext53:
  9491                           	callstack 0
  9492   004C6E                     _fullSpeedAhead:
  9493                           	callstack 24
  9494   004C6E                     
  9495                           ;dc_motor.c: 146: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 147: {;dc_motor.c: 149:     mL->direction =1;
  9496   004C6E  EE20 F001          	lfsr	2,1
  9497   004C72  5014               	movf	fullSpeedAhead@mL^0,w,c
  9498   004C74  26D9               	addwf	fsr2l,f,c
  9499   004C76  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
  9500   004C78  22DA               	addwfc	fsr2h,f,c
  9501   004C7A  0E01               	movlw	1
  9502   004C7C  6EDF               	movwf	indf2,c
  9503                           
  9504                           ;dc_motor.c: 150:     mR->direction =1;
  9505   004C7E  EE20 F001          	lfsr	2,1
  9506   004C82  5016               	movf	fullSpeedAhead@mR^0,w,c
  9507   004C84  26D9               	addwf	fsr2l,f,c
  9508   004C86  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
  9509   004C88  22DA               	addwfc	fsr2h,f,c
  9510   004C8A  0E01               	movlw	1
  9511   004C8C  6EDF               	movwf	indf2,c
  9512                           
  9513                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  9514   004C8E  EF69  F026         	goto	l4429
  9515   004C92                     l4421:
  9516                           
  9517                           ;dc_motor.c: 153:         mL->power+=10;
  9518   004C92  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9519   004C96  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9520   004C9A  0E0A               	movlw	10
  9521   004C9C  26DF               	addwf	indf2,f,c
  9522                           
  9523                           ;dc_motor.c: 154:         mR->power+=10;
  9524   004C9E  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9525   004CA2  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9526   004CA6  0E0A               	movlw	10
  9527   004CA8  26DF               	addwf	indf2,f,c
  9528   004CAA                     
  9529                           ;dc_motor.c: 156:         setMotorPWM(mL);
  9530   004CAA  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
  9531   004CAE  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  9532   004CB2  EC46  F022         	call	_setMotorPWM	;wreg free
  9533   004CB6                     
  9534                           ;dc_motor.c: 157:         setMotorPWM(mR);
  9535   004CB6  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
  9536   004CBA  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  9537   004CBE  EC46  F022         	call	_setMotorPWM	;wreg free
  9538   004CC2                     
  9539                           ;dc_motor.c: 159:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9540   004CC2  0E15               	movlw	21
  9541   004CC4  6E18               	movwf	??_fullSpeedAhead^0,c
  9542   004CC6  0EC6               	movlw	198
  9543   004CC8                     u5757:
  9544   004CC8  2EE8               	decfsz	wreg,f,c
  9545   004CCA  D7FE               	bra	u5757
  9546   004CCC  2E18               	decfsz	??_fullSpeedAhead^0,f,c
  9547   004CCE  D7FC               	bra	u5757
  9548   004CD0  D000               	nop2	
  9549   004CD2                     l4429:
  9550                           
  9551                           ;dc_motor.c: 151:     while (mL->power < 50 && mR->power < 50){
  9552   004CD2  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  9553   004CD6  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  9554   004CDA  0E32               	movlw	50
  9555   004CDC  60DF               	cpfslt	indf2,c
  9556   004CDE  EF73  F026         	goto	u4331
  9557   004CE2  EF75  F026         	goto	u4330
  9558   004CE6                     u4331:
  9559   004CE6  EF81  F026         	goto	l492
  9560   004CEA                     u4330:
  9561   004CEA  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  9562   004CEE  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  9563   004CF2  0E31               	movlw	49
  9564   004CF4  64DF               	cpfsgt	indf2,c
  9565   004CF6  EF7F  F026         	goto	u4341
  9566   004CFA  EF81  F026         	goto	u4340
  9567   004CFE                     u4341:
  9568   004CFE  EF49  F026         	goto	l4421
  9569   004D02                     u4340:
  9570   004D02                     l492:
  9571   004D02  0012               	return		;funcret
  9572   004D04                     __end_of_fullSpeedAhead:
  9573                           	callstack 0
  9574                           
  9575 ;; *************** function _PinkMove *****************
  9576 ;; Defined at:
  9577 ;;		line 268 in file "dc_motor.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  mL              2   30[COMRAM] PTR struct DC_motor
  9580 ;;		 -> motorL(9), 
  9581 ;;  mR              2   32[COMRAM] PTR struct DC_motor
  9582 ;;		 -> motorR(9), 
  9583 ;; Auto vars:     Size  Location     Type
  9584 ;;		None
  9585 ;; Return value:  Size  Location     Type
  9586 ;;                  1    wreg      void 
  9587 ;; Registers used:
  9588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9589 ;; Tracked objects:
  9590 ;;		On entry : 0/0
  9591 ;;		On exit  : 0/0
  9592 ;;		Unchanged: 0/0
  9593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9598 ;;Total ram usage:        4 bytes
  9599 ;; Hardware stack levels used: 1
  9600 ;; Hardware stack levels required when called: 5
  9601 ;; This function calls:
  9602 ;;		_reverseDetect
  9603 ;;		_reverseOneBlock
  9604 ;;		_turnLeft45
  9605 ;; This function is called by:
  9606 ;;		_main
  9607 ;; This function uses a non-reentrant model
  9608 ;;
  9609                           
  9610                           	psect	text54
  9611   00562C                     __ptext54:
  9612                           	callstack 0
  9613   00562C                     _PinkMove:
  9614                           	callstack 25
  9615   00562C                     
  9616                           ;dc_motor.c: 269:     reverseDetect(&motorL, &motorR);
  9617   00562C  0E73               	movlw	low _motorL
  9618   00562E  6E19               	movwf	reverseDetect@mL^0,c
  9619   005630  0E01               	movlw	high _motorL
  9620   005632  6E1A               	movwf	(reverseDetect@mL+1)^0,c
  9621   005634  0E6A               	movlw	low _motorR
  9622   005636  6E1B               	movwf	reverseDetect@mR^0,c
  9623   005638  0E01               	movlw	high _motorR
  9624   00563A  6E1C               	movwf	(reverseDetect@mR+1)^0,c
  9625   00563C  ECC5  F029         	call	_reverseDetect	;wreg free
  9626                           
  9627                           ;dc_motor.c: 271:     reverseOneBlock(&motorL, &motorR);
  9628   005640  0E73               	movlw	low _motorL
  9629   005642  6E19               	movwf	reverseOneBlock@mL^0,c
  9630   005644  0E01               	movlw	high _motorL
  9631   005646  6E1A               	movwf	(reverseOneBlock@mL+1)^0,c
  9632   005648  0E6A               	movlw	low _motorR
  9633   00564A  6E1B               	movwf	reverseOneBlock@mR^0,c
  9634   00564C  0E01               	movlw	high _motorR
  9635   00564E  6E1C               	movwf	(reverseOneBlock@mR+1)^0,c
  9636   005650  EC98  F029         	call	_reverseOneBlock	;wreg free
  9637                           
  9638                           ;dc_motor.c: 273:     turnLeft45(&motorL, &motorR);
  9639   005654  0E73               	movlw	low _motorL
  9640   005656  6E19               	movwf	turnLeft45@mL^0,c
  9641   005658  0E01               	movlw	high _motorL
  9642   00565A  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  9643   00565C  0E6A               	movlw	low _motorR
  9644   00565E  6E1B               	movwf	turnLeft45@mR^0,c
  9645   005660  0E01               	movlw	high _motorR
  9646   005662  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  9647   005664  EC6B  F029         	call	_turnLeft45	;wreg free
  9648                           
  9649                           ;dc_motor.c: 274:     turnLeft45(&motorL, &motorR);
  9650   005668  0E73               	movlw	low _motorL
  9651   00566A  6E19               	movwf	turnLeft45@mL^0,c
  9652   00566C  0E01               	movlw	high _motorL
  9653   00566E  6E1A               	movwf	(turnLeft45@mL+1)^0,c
  9654   005670  0E6A               	movlw	low _motorR
  9655   005672  6E1B               	movwf	turnLeft45@mR^0,c
  9656   005674  0E01               	movlw	high _motorR
  9657   005676  6E1C               	movwf	(turnLeft45@mR+1)^0,c
  9658   005678  EC6B  F029         	call	_turnLeft45	;wreg free
  9659   00567C  0012               	return		;funcret
  9660   00567E                     __end_of_PinkMove:
  9661                           	callstack 0
  9662                           
  9663 ;; *************** function _turnLeft45 *****************
  9664 ;; Defined at:
  9665 ;;		line 188 in file "dc_motor.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9668 ;;		 -> motorL(9), 
  9669 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9670 ;;		 -> motorR(9), 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;		None
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9684 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9685 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9686 ;;Total ram usage:        6 bytes
  9687 ;; Hardware stack levels used: 1
  9688 ;; Hardware stack levels required when called: 4
  9689 ;; This function calls:
  9690 ;;		_stop
  9691 ;;		_turnLeft
  9692 ;; This function is called by:
  9693 ;;		_GreenMove
  9694 ;;		_PinkMove
  9695 ;;		_LightBlueMove
  9696 ;;		_ReverseYellow
  9697 ;; This function uses a non-reentrant model
  9698 ;;
  9699                           
  9700                           	psect	text55
  9701   0052D6                     __ptext55:
  9702                           	callstack 0
  9703   0052D6                     _turnLeft45:
  9704                           	callstack 24
  9705   0052D6                     
  9706                           ;dc_motor.c: 189:     turnLeft(mL,mR);
  9707   0052D6  C019  F014         	movff	turnLeft45@mL,turnLeft@mL
  9708   0052DA  C01A  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  9709   0052DE  C01B  F016         	movff	turnLeft45@mR,turnLeft@mR
  9710   0052E2  C01C  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  9711   0052E6  EC82  F026         	call	_turnLeft	;wreg free
  9712   0052EA                     
  9713                           ;dc_motor.c: 190:     _delay((unsigned long)((120)*(64000000/4000.0)));
  9714   0052EA  0E0A               	movlw	10
  9715   0052EC  6E1E               	movwf	(??_turnLeft45+1)^0,c
  9716   0052EE  0EBE               	movlw	190
  9717   0052F0  6E1D               	movwf	??_turnLeft45^0,c
  9718   0052F2  0E79               	movlw	121
  9719   0052F4                     u5767:
  9720   0052F4  2EE8               	decfsz	wreg,f,c
  9721   0052F6  D7FE               	bra	u5767
  9722   0052F8  2E1D               	decfsz	??_turnLeft45^0,f,c
  9723   0052FA  D7FC               	bra	u5767
  9724   0052FC  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  9725   0052FE  D7FA               	bra	u5767
  9726   005300  F000               	nop	
  9727   005302                     
  9728                           ;dc_motor.c: 191:     stop(&motorL, &motorR);
  9729   005302  0E73               	movlw	low _motorL
  9730   005304  6E14               	movwf	stop@mL^0,c
  9731   005306  0E01               	movlw	high _motorL
  9732   005308  6E15               	movwf	(stop@mL+1)^0,c
  9733   00530A  0E6A               	movlw	low _motorR
  9734   00530C  6E16               	movwf	stop@mR^0,c
  9735   00530E  0E01               	movlw	high _motorR
  9736   005310  6E17               	movwf	(stop@mR+1)^0,c
  9737   005312  ECDA  F027         	call	_stop	;wreg free
  9738                           
  9739                           ;dc_motor.c: 192:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9740   005316  0E52               	movlw	82
  9741   005318  6E1E               	movwf	(??_turnLeft45+1)^0,c
  9742   00531A  0E2B               	movlw	43
  9743   00531C  6E1D               	movwf	??_turnLeft45^0,c
  9744   00531E  0E00               	movlw	0
  9745   005320                     u5777:
  9746   005320  2EE8               	decfsz	wreg,f,c
  9747   005322  D7FE               	bra	u5777
  9748   005324  2E1D               	decfsz	??_turnLeft45^0,f,c
  9749   005326  D7FC               	bra	u5777
  9750   005328  2E1E               	decfsz	(??_turnLeft45+1)^0,f,c
  9751   00532A  D7FA               	bra	u5777
  9752   00532C  D000               	nop2	
  9753   00532E  0012               	return		;funcret
  9754   005330                     __end_of_turnLeft45:
  9755                           	callstack 0
  9756                           
  9757 ;; *************** function _turnLeft *****************
  9758 ;; Defined at:
  9759 ;;		line 110 in file "dc_motor.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  9762 ;;		 -> motorL(9), 
  9763 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  9764 ;;		 -> motorR(9), 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;		None
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9778 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9779 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9780 ;;Total ram usage:        5 bytes
  9781 ;; Hardware stack levels used: 1
  9782 ;; Hardware stack levels required when called: 3
  9783 ;; This function calls:
  9784 ;;		_setMotorPWM
  9785 ;; This function is called by:
  9786 ;;		_turnLeft45
  9787 ;; This function uses a non-reentrant model
  9788 ;;
  9789                           
  9790                           	psect	text56
  9791   004D04                     __ptext56:
  9792                           	callstack 0
  9793   004D04                     _turnLeft:
  9794                           	callstack 24
  9795   004D04                     
  9796                           ;dc_motor.c: 110: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 111
      +                          : {;dc_motor.c: 112:     mL->direction =0;
  9797   004D04  EE20 F001          	lfsr	2,1
  9798   004D08  5014               	movf	turnLeft@mL^0,w,c
  9799   004D0A  26D9               	addwf	fsr2l,f,c
  9800   004D0C  5015               	movf	(turnLeft@mL+1)^0,w,c
  9801   004D0E  22DA               	addwfc	fsr2h,f,c
  9802   004D10  0E00               	movlw	0
  9803   004D12  6EDF               	movwf	indf2,c
  9804                           
  9805                           ;dc_motor.c: 113:     mR->direction =1;
  9806   004D14  EE20 F001          	lfsr	2,1
  9807   004D18  5016               	movf	turnLeft@mR^0,w,c
  9808   004D1A  26D9               	addwf	fsr2l,f,c
  9809   004D1C  5017               	movf	(turnLeft@mR+1)^0,w,c
  9810   004D1E  22DA               	addwfc	fsr2h,f,c
  9811   004D20  0E01               	movlw	1
  9812   004D22  6EDF               	movwf	indf2,c
  9813                           
  9814                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  9815   004D24  EFB4  F026         	goto	l4401
  9816   004D28                     l4393:
  9817                           
  9818                           ;dc_motor.c: 117:         mL->power+=10;
  9819   004D28  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9820   004D2C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9821   004D30  0E0A               	movlw	10
  9822   004D32  26DF               	addwf	indf2,f,c
  9823                           
  9824                           ;dc_motor.c: 118:         mR->power+=10;
  9825   004D34  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9826   004D38  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9827   004D3C  0E0A               	movlw	10
  9828   004D3E  26DF               	addwf	indf2,f,c
  9829   004D40                     
  9830                           ;dc_motor.c: 120:         setMotorPWM(mL);
  9831   004D40  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  9832   004D44  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  9833   004D48  EC46  F022         	call	_setMotorPWM	;wreg free
  9834   004D4C                     
  9835                           ;dc_motor.c: 121:         setMotorPWM(mR);
  9836   004D4C  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  9837   004D50  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  9838   004D54  EC46  F022         	call	_setMotorPWM	;wreg free
  9839   004D58                     
  9840                           ;dc_motor.c: 123:         _delay((unsigned long)((1)*(64000000/4000.0)));
  9841   004D58  0E15               	movlw	21
  9842   004D5A  6E18               	movwf	??_turnLeft^0,c
  9843   004D5C  0EC6               	movlw	198
  9844   004D5E                     u5787:
  9845   004D5E  2EE8               	decfsz	wreg,f,c
  9846   004D60  D7FE               	bra	u5787
  9847   004D62  2E18               	decfsz	??_turnLeft^0,f,c
  9848   004D64  D7FC               	bra	u5787
  9849   004D66  D000               	nop2	
  9850   004D68                     l4401:
  9851                           
  9852                           ;dc_motor.c: 115:     while(mL->power<70 && mR->power<70){
  9853   004D68  C014  FFD9         	movff	turnLeft@mL,fsr2l
  9854   004D6C  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  9855   004D70  0E46               	movlw	70
  9856   004D72  60DF               	cpfslt	indf2,c
  9857   004D74  EFBE  F026         	goto	u4291
  9858   004D78  EFC0  F026         	goto	u4290
  9859   004D7C                     u4291:
  9860   004D7C  EFCC  F026         	goto	l476
  9861   004D80                     u4290:
  9862   004D80  C016  FFD9         	movff	turnLeft@mR,fsr2l
  9863   004D84  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  9864   004D88  0E45               	movlw	69
  9865   004D8A  64DF               	cpfsgt	indf2,c
  9866   004D8C  EFCA  F026         	goto	u4301
  9867   004D90  EFCC  F026         	goto	u4300
  9868   004D94                     u4301:
  9869   004D94  EF94  F026         	goto	l4393
  9870   004D98                     u4300:
  9871   004D98                     l476:
  9872   004D98  0012               	return		;funcret
  9873   004D9A                     __end_of_turnLeft:
  9874                           	callstack 0
  9875                           
  9876 ;; *************** function _reverseOneBlock *****************
  9877 ;; Defined at:
  9878 ;;		line 202 in file "dc_motor.c"
  9879 ;; Parameters:    Size  Location     Type
  9880 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9881 ;;		 -> motorL(9), 
  9882 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9883 ;;		 -> motorR(9), 
  9884 ;; Auto vars:     Size  Location     Type
  9885 ;;		None
  9886 ;; Return value:  Size  Location     Type
  9887 ;;                  1    wreg      void 
  9888 ;; Registers used:
  9889 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9890 ;; Tracked objects:
  9891 ;;		On entry : 0/0
  9892 ;;		On exit  : 0/0
  9893 ;;		Unchanged: 0/0
  9894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9899 ;;Total ram usage:        6 bytes
  9900 ;; Hardware stack levels used: 1
  9901 ;; Hardware stack levels required when called: 4
  9902 ;; This function calls:
  9903 ;;		_fullSpeedBack
  9904 ;;		_stop
  9905 ;; This function is called by:
  9906 ;;		_YellowMove
  9907 ;;		_PinkMove
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	text57
  9912   005330                     __ptext57:
  9913                           	callstack 0
  9914   005330                     _reverseOneBlock:
  9915                           	callstack 25
  9916   005330                     
  9917                           ;dc_motor.c: 203:     fullSpeedBack(mL,mR);
  9918   005330  C019  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  9919   005334  C01A  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  9920   005338  C01B  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  9921   00533C  C01C  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  9922   005340  ECCD  F026         	call	_fullSpeedBack	;wreg free
  9923   005344                     
  9924                           ;dc_motor.c: 204:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9925   005344  0E52               	movlw	82
  9926   005346  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  9927   005348  0E2B               	movlw	43
  9928   00534A  6E1D               	movwf	??_reverseOneBlock^0,c
  9929   00534C  0E00               	movlw	0
  9930   00534E                     u5797:
  9931   00534E  2EE8               	decfsz	wreg,f,c
  9932   005350  D7FE               	bra	u5797
  9933   005352  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  9934   005354  D7FC               	bra	u5797
  9935   005356  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9936   005358  D7FA               	bra	u5797
  9937   00535A  D000               	nop2	
  9938   00535C                     
  9939                           ;dc_motor.c: 205:     stop(&motorL, &motorR);
  9940   00535C  0E73               	movlw	low _motorL
  9941   00535E  6E14               	movwf	stop@mL^0,c
  9942   005360  0E01               	movlw	high _motorL
  9943   005362  6E15               	movwf	(stop@mL+1)^0,c
  9944   005364  0E6A               	movlw	low _motorR
  9945   005366  6E16               	movwf	stop@mR^0,c
  9946   005368  0E01               	movlw	high _motorR
  9947   00536A  6E17               	movwf	(stop@mR+1)^0,c
  9948   00536C  ECDA  F027         	call	_stop	;wreg free
  9949                           
  9950                           ;dc_motor.c: 206:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  9951   005370  0E52               	movlw	82
  9952   005372  6E1E               	movwf	(??_reverseOneBlock+1)^0,c
  9953   005374  0E2B               	movlw	43
  9954   005376  6E1D               	movwf	??_reverseOneBlock^0,c
  9955   005378  0E00               	movlw	0
  9956   00537A                     u5807:
  9957   00537A  2EE8               	decfsz	wreg,f,c
  9958   00537C  D7FE               	bra	u5807
  9959   00537E  2E1D               	decfsz	??_reverseOneBlock^0,f,c
  9960   005380  D7FC               	bra	u5807
  9961   005382  2E1E               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9962   005384  D7FA               	bra	u5807
  9963   005386  D000               	nop2	
  9964   005388  0012               	return		;funcret
  9965   00538A                     __end_of_reverseOneBlock:
  9966                           	callstack 0
  9967                           
  9968 ;; *************** function _reverseDetect *****************
  9969 ;; Defined at:
  9970 ;;		line 195 in file "dc_motor.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  mL              2   24[COMRAM] PTR struct DC_motor
  9973 ;;		 -> motorL(9), 
  9974 ;;  mR              2   26[COMRAM] PTR struct DC_motor
  9975 ;;		 -> motorR(9), 
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      void 
  9980 ;; Registers used:
  9981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9987 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9989 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9990 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9991 ;;Total ram usage:        6 bytes
  9992 ;; Hardware stack levels used: 1
  9993 ;; Hardware stack levels required when called: 4
  9994 ;; This function calls:
  9995 ;;		_fullSpeedBack
  9996 ;;		_stop
  9997 ;; This function is called by:
  9998 ;;		_RedMove
  9999 ;;		_GreenMove
 10000 ;;		_BlueMove
 10001 ;;		_YellowMove
 10002 ;;		_PinkMove
 10003 ;;		_OrangeMove
 10004 ;;		_LightBlueMove
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007                           
 10008                           	psect	text58
 10009   00538A                     __ptext58:
 10010                           	callstack 0
 10011   00538A                     _reverseDetect:
 10012                           	callstack 24
 10013   00538A                     
 10014                           ;dc_motor.c: 196:     fullSpeedBack(mL,mR);
 10015   00538A  C019  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10016   00538E  C01A  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10017   005392  C01B  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10018   005396  C01C  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10019   00539A  ECCD  F026         	call	_fullSpeedBack	;wreg free
 10020   00539E                     
 10021                           ;dc_motor.c: 197:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10022   00539E  0E11               	movlw	17
 10023   0053A0  6E1E               	movwf	(??_reverseDetect+1)^0,c
 10024   0053A2  0E3C               	movlw	60
 10025   0053A4  6E1D               	movwf	??_reverseDetect^0,c
 10026   0053A6  0ECB               	movlw	203
 10027   0053A8                     u5817:
 10028   0053A8  2EE8               	decfsz	wreg,f,c
 10029   0053AA  D7FE               	bra	u5817
 10030   0053AC  2E1D               	decfsz	??_reverseDetect^0,f,c
 10031   0053AE  D7FC               	bra	u5817
 10032   0053B0  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 10033   0053B2  D7FA               	bra	u5817
 10034   0053B4  F000               	nop	
 10035   0053B6                     
 10036                           ;dc_motor.c: 198:     stop(&motorL, &motorR);
 10037   0053B6  0E73               	movlw	low _motorL
 10038   0053B8  6E14               	movwf	stop@mL^0,c
 10039   0053BA  0E01               	movlw	high _motorL
 10040   0053BC  6E15               	movwf	(stop@mL+1)^0,c
 10041   0053BE  0E6A               	movlw	low _motorR
 10042   0053C0  6E16               	movwf	stop@mR^0,c
 10043   0053C2  0E01               	movlw	high _motorR
 10044   0053C4  6E17               	movwf	(stop@mR+1)^0,c
 10045   0053C6  ECDA  F027         	call	_stop	;wreg free
 10046                           
 10047                           ;dc_motor.c: 199:     _delay((unsigned long)((1000)*(64000000/4000.0)));
 10048   0053CA  0E52               	movlw	82
 10049   0053CC  6E1E               	movwf	(??_reverseDetect+1)^0,c
 10050   0053CE  0E2B               	movlw	43
 10051   0053D0  6E1D               	movwf	??_reverseDetect^0,c
 10052   0053D2  0E00               	movlw	0
 10053   0053D4                     u5827:
 10054   0053D4  2EE8               	decfsz	wreg,f,c
 10055   0053D6  D7FE               	bra	u5827
 10056   0053D8  2E1D               	decfsz	??_reverseDetect^0,f,c
 10057   0053DA  D7FC               	bra	u5827
 10058   0053DC  2E1E               	decfsz	(??_reverseDetect+1)^0,f,c
 10059   0053DE  D7FA               	bra	u5827
 10060   0053E0  D000               	nop2	
 10061   0053E2  0012               	return		;funcret
 10062   0053E4                     __end_of_reverseDetect:
 10063                           	callstack 0
 10064                           
 10065 ;; *************** function _stop *****************
 10066 ;; Defined at:
 10067 ;;		line 92 in file "dc_motor.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10070 ;;		 -> motorL(9), 
 10071 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10072 ;;		 -> motorR(9), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;		None
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  1    wreg      void 
 10077 ;; Registers used:
 10078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10079 ;; Tracked objects:
 10080 ;;		On entry : 0/0
 10081 ;;		On exit  : 0/0
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10086 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10087 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10088 ;;Total ram usage:        5 bytes
 10089 ;; Hardware stack levels used: 1
 10090 ;; Hardware stack levels required when called: 3
 10091 ;; This function calls:
 10092 ;;		_setMotorPWM
 10093 ;; This function is called by:
 10094 ;;		_main
 10095 ;;		_turnRight45
 10096 ;;		_turnLeft45
 10097 ;;		_reverseDetect
 10098 ;;		_reverseOneBlock
 10099 ;;		_ForwardOneBlock
 10100 ;;		_Forwardhalfblock
 10101 ;;		_RetryMove
 10102 ;;		_Backhalfblock
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           	psect	text59
 10107   004FB4                     __ptext59:
 10108                           	callstack 0
 10109   004FB4                     _stop:
 10110                           	callstack 27
 10111   004FB4                     
 10112                           ;dc_motor.c: 92: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 93: {;dc
      +                          _motor.c: 94:     while (mL->power >0 || mR->power >0){
 10113   004FB4  EFFC  F027         	goto	l4387
 10114   004FB8                     l4379:
 10115                           
 10116                           ;dc_motor.c: 96:         mL->power-=10;
 10117   004FB8  C014  FFD9         	movff	stop@mL,fsr2l
 10118   004FBC  C015  FFDA         	movff	stop@mL+1,fsr2h
 10119   004FC0  0E0A               	movlw	10
 10120   004FC2  5EDF               	subwf	indf2,f,c
 10121                           
 10122                           ;dc_motor.c: 97:         mR->power-=10;
 10123   004FC4  C016  FFD9         	movff	stop@mR,fsr2l
 10124   004FC8  C017  FFDA         	movff	stop@mR+1,fsr2h
 10125   004FCC  0E0A               	movlw	10
 10126   004FCE  5EDF               	subwf	indf2,f,c
 10127   004FD0                     
 10128                           ;dc_motor.c: 102:         setMotorPWM(mL);
 10129   004FD0  C014  F00E         	movff	stop@mL,setMotorPWM@m
 10130   004FD4  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 10131   004FD8  EC46  F022         	call	_setMotorPWM	;wreg free
 10132   004FDC                     
 10133                           ;dc_motor.c: 103:         setMotorPWM(mR);
 10134   004FDC  C016  F00E         	movff	stop@mR,setMotorPWM@m
 10135   004FE0  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 10136   004FE4  EC46  F022         	call	_setMotorPWM	;wreg free
 10137   004FE8                     
 10138                           ;dc_motor.c: 105:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10139   004FE8  0E15               	movlw	21
 10140   004FEA  6E18               	movwf	??_stop^0,c
 10141   004FEC  0EC6               	movlw	198
 10142   004FEE                     u5837:
 10143   004FEE  2EE8               	decfsz	wreg,f,c
 10144   004FF0  D7FE               	bra	u5837
 10145   004FF2  2E18               	decfsz	??_stop^0,f,c
 10146   004FF4  D7FC               	bra	u5837
 10147   004FF6  D000               	nop2	
 10148   004FF8                     l4387:
 10149                           
 10150                           ;dc_motor.c: 94:     while (mL->power >0 || mR->power >0){
 10151   004FF8  C014  FFD9         	movff	stop@mL,fsr2l
 10152   004FFC  C015  FFDA         	movff	stop@mL+1,fsr2h
 10153   005000  50DF               	movf	indf2,w,c
 10154   005002  A4D8               	btfss	status,2,c
 10155   005004  EF06  F028         	goto	u4271
 10156   005008  EF08  F028         	goto	u4270
 10157   00500C                     u4271:
 10158   00500C  EFDC  F027         	goto	l4379
 10159   005010                     u4270:
 10160   005010  C016  FFD9         	movff	stop@mR,fsr2l
 10161   005014  C017  FFDA         	movff	stop@mR+1,fsr2h
 10162   005018  50DF               	movf	indf2,w,c
 10163   00501A  A4D8               	btfss	status,2,c
 10164   00501C  EF12  F028         	goto	u4281
 10165   005020  EF14  F028         	goto	u4280
 10166   005024                     u4281:
 10167   005024  EFDC  F027         	goto	l4379
 10168   005028                     u4280:
 10169   005028  0012               	return		;funcret
 10170   00502A                     __end_of_stop:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function _fullSpeedBack *****************
 10174 ;; Defined at:
 10175 ;;		line 164 in file "dc_motor.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10178 ;;		 -> motorL(9), 
 10179 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10180 ;;		 -> motorR(9), 
 10181 ;; Auto vars:     Size  Location     Type
 10182 ;;		None
 10183 ;; Return value:  Size  Location     Type
 10184 ;;                  1    wreg      void 
 10185 ;; Registers used:
 10186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10187 ;; Tracked objects:
 10188 ;;		On entry : 0/0
 10189 ;;		On exit  : 0/0
 10190 ;;		Unchanged: 0/0
 10191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10195 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10196 ;;Total ram usage:        5 bytes
 10197 ;; Hardware stack levels used: 1
 10198 ;; Hardware stack levels required when called: 3
 10199 ;; This function calls:
 10200 ;;		_setMotorPWM
 10201 ;; This function is called by:
 10202 ;;		_reverseDetect
 10203 ;;		_reverseOneBlock
 10204 ;;		_RetryMove
 10205 ;;		_Backhalfblock
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           	psect	text60
 10210   004D9A                     __ptext60:
 10211                           	callstack 0
 10212   004D9A                     _fullSpeedBack:
 10213                           	callstack 24
 10214   004D9A                     
 10215                           ;dc_motor.c: 164: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 165: {;dc_motor.c: 167:     mL->direction =0;
 10216   004D9A  EE20 F001          	lfsr	2,1
 10217   004D9E  5014               	movf	fullSpeedBack@mL^0,w,c
 10218   004DA0  26D9               	addwf	fsr2l,f,c
 10219   004DA2  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10220   004DA4  22DA               	addwfc	fsr2h,f,c
 10221   004DA6  0E00               	movlw	0
 10222   004DA8  6EDF               	movwf	indf2,c
 10223                           
 10224                           ;dc_motor.c: 168:     mR->direction =0;
 10225   004DAA  EE20 F001          	lfsr	2,1
 10226   004DAE  5016               	movf	fullSpeedBack@mR^0,w,c
 10227   004DB0  26D9               	addwf	fsr2l,f,c
 10228   004DB2  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10229   004DB4  22DA               	addwfc	fsr2h,f,c
 10230   004DB6  0E00               	movlw	0
 10231   004DB8  6EDF               	movwf	indf2,c
 10232                           
 10233                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 10234   004DBA  EFFF  F026         	goto	l4443
 10235   004DBE                     l4435:
 10236                           
 10237                           ;dc_motor.c: 171:         mL->power+=10;
 10238   004DBE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10239   004DC2  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10240   004DC6  0E0A               	movlw	10
 10241   004DC8  26DF               	addwf	indf2,f,c
 10242                           
 10243                           ;dc_motor.c: 172:         mR->power+=10;
 10244   004DCA  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10245   004DCE  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10246   004DD2  0E0A               	movlw	10
 10247   004DD4  26DF               	addwf	indf2,f,c
 10248   004DD6                     
 10249                           ;dc_motor.c: 174:         setMotorPWM(mL);
 10250   004DD6  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10251   004DDA  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10252   004DDE  EC46  F022         	call	_setMotorPWM	;wreg free
 10253   004DE2                     
 10254                           ;dc_motor.c: 175:         setMotorPWM(mR);
 10255   004DE2  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10256   004DE6  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10257   004DEA  EC46  F022         	call	_setMotorPWM	;wreg free
 10258   004DEE                     
 10259                           ;dc_motor.c: 177:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10260   004DEE  0E15               	movlw	21
 10261   004DF0  6E18               	movwf	??_fullSpeedBack^0,c
 10262   004DF2  0EC6               	movlw	198
 10263   004DF4                     u5847:
 10264   004DF4  2EE8               	decfsz	wreg,f,c
 10265   004DF6  D7FE               	bra	u5847
 10266   004DF8  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10267   004DFA  D7FC               	bra	u5847
 10268   004DFC  D000               	nop2	
 10269   004DFE                     l4443:
 10270                           
 10271                           ;dc_motor.c: 169:     while (mL->power < 50 && mR->power <50){
 10272   004DFE  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10273   004E02  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10274   004E06  0E32               	movlw	50
 10275   004E08  60DF               	cpfslt	indf2,c
 10276   004E0A  EF09  F027         	goto	u4351
 10277   004E0E  EF0B  F027         	goto	u4350
 10278   004E12                     u4351:
 10279   004E12  EF17  F027         	goto	l500
 10280   004E16                     u4350:
 10281   004E16  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10282   004E1A  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10283   004E1E  0E31               	movlw	49
 10284   004E20  64DF               	cpfsgt	indf2,c
 10285   004E22  EF15  F027         	goto	u4361
 10286   004E26  EF17  F027         	goto	u4360
 10287   004E2A                     u4361:
 10288   004E2A  EFDF  F026         	goto	l4435
 10289   004E2E                     u4360:
 10290   004E2E                     l500:
 10291   004E2E  0012               	return		;funcret
 10292   004E30                     __end_of_fullSpeedBack:
 10293                           	callstack 0
 10294                           
 10295 ;; *************** function _setMotorPWM *****************
 10296 ;; Defined at:
 10297 ;;		line 67 in file "dc_motor.c"
 10298 ;; Parameters:    Size  Location     Type
 10299 ;;  m               2   13[COMRAM] PTR struct DC_motor
 10300 ;;		 -> motorR(9), motorL(9), 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  negDuty         1   18[COMRAM] unsigned char 
 10303 ;;  posDuty         1   17[COMRAM] unsigned char 
 10304 ;; Return value:  Size  Location     Type
 10305 ;;                  1    wreg      void 
 10306 ;; Registers used:
 10307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10308 ;; Tracked objects:
 10309 ;;		On entry : 0/0
 10310 ;;		On exit  : 0/0
 10311 ;;		Unchanged: 0/0
 10312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10316 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10317 ;;Total ram usage:        6 bytes
 10318 ;; Hardware stack levels used: 1
 10319 ;; Hardware stack levels required when called: 2
 10320 ;; This function calls:
 10321 ;;		___lwdiv
 10322 ;;		___wmul
 10323 ;; This function is called by:
 10324 ;;		_stop
 10325 ;;		_turnLeft
 10326 ;;		_turnRight
 10327 ;;		_fullSpeedAhead
 10328 ;;		_fullSpeedBack
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text61
 10333   00448C                     __ptext61:
 10334                           	callstack 0
 10335   00448C                     _setMotorPWM:
 10336                           	callstack 27
 10337   00448C                     
 10338                           ;dc_motor.c: 67: void setMotorPWM(struct DC_motor *m);dc_motor.c: 68: {;dc_motor.c: 69: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 71:     if(m->brakemode) {
 10339   00448C  EE20 F002          	lfsr	2,2
 10340   004490  500E               	movf	setMotorPWM@m^0,w,c
 10341   004492  26D9               	addwf	fsr2l,f,c
 10342   004494  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10343   004496  22DA               	addwfc	fsr2h,f,c
 10344   004498  50DF               	movf	indf2,w,c
 10345   00449A  B4D8               	btfsc	status,2,c
 10346   00449C  EF52  F022         	goto	u3291
 10347   0044A0  EF54  F022         	goto	u3290
 10348   0044A4                     u3291:
 10349   0044A4  EF88  F022         	goto	l3831
 10350   0044A8                     u3290:
 10351   0044A8                     
 10352                           ;dc_motor.c: 72:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 10353   0044A8  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10354   0044AC  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10355   0044B0  50DF               	movf	indf2,w,c
 10356   0044B2  6E10               	movwf	??_setMotorPWM^0,c
 10357   0044B4  5010               	movf	??_setMotorPWM^0,w,c
 10358   0044B6  6E01               	movwf	___wmul@multiplier^0,c
 10359   0044B8  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10360   0044BA  EE20 F003          	lfsr	2,3
 10361   0044BE  500E               	movf	setMotorPWM@m^0,w,c
 10362   0044C0  26D9               	addwf	fsr2l,f,c
 10363   0044C2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10364   0044C4  22DA               	addwfc	fsr2h,f,c
 10365   0044C6  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10366   0044CA  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10367   0044CE  EC88  F02D         	call	___wmul	;wreg free
 10368   0044D2  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10369   0044D6  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10370   0044DA  0E00               	movlw	0
 10371   0044DC  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10372   0044DE  0E64               	movlw	100
 10373   0044E0  6E09               	movwf	___lwdiv@divisor^0,c
 10374   0044E2  EC15  F028         	call	___lwdiv	;wreg free
 10375   0044E6  EE20 F003          	lfsr	2,3
 10376   0044EA  500E               	movf	setMotorPWM@m^0,w,c
 10377   0044EC  26D9               	addwf	fsr2l,f,c
 10378   0044EE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10379   0044F0  22DA               	addwfc	fsr2h,f,c
 10380   0044F2  50DF               	movf	indf2,w,c
 10381   0044F4  6E11               	movwf	(??_setMotorPWM+1)^0,c
 10382   0044F6  5007               	movf	?___lwdiv^0,w,c
 10383   0044F8  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 10384   0044FA  6E12               	movwf	setMotorPWM@posDuty^0,c
 10385   0044FC                     
 10386                           ;dc_motor.c: 73:         negDuty=m->PWMperiod;
 10387   0044FC  EE20 F003          	lfsr	2,3
 10388   004500  500E               	movf	setMotorPWM@m^0,w,c
 10389   004502  26D9               	addwf	fsr2l,f,c
 10390   004504  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10391   004506  22DA               	addwfc	fsr2h,f,c
 10392   004508  50DF               	movf	indf2,w,c
 10393   00450A  6E13               	movwf	setMotorPWM@negDuty^0,c
 10394                           
 10395                           ;dc_motor.c: 74:     }
 10396   00450C  EFAB  F022         	goto	l3835
 10397   004510                     l3831:
 10398                           
 10399                           ;dc_motor.c: 76:         posDuty=0;
 10400   004510  0E00               	movlw	0
 10401   004512  6E12               	movwf	setMotorPWM@posDuty^0,c
 10402   004514                     
 10403                           ;dc_motor.c: 77:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 10404   004514  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 10405   004518  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 10406   00451C  50DF               	movf	indf2,w,c
 10407   00451E  6E10               	movwf	??_setMotorPWM^0,c
 10408   004520  5010               	movf	??_setMotorPWM^0,w,c
 10409   004522  6E01               	movwf	___wmul@multiplier^0,c
 10410   004524  6A02               	clrf	(___wmul@multiplier+1)^0,c
 10411   004526  EE20 F003          	lfsr	2,3
 10412   00452A  500E               	movf	setMotorPWM@m^0,w,c
 10413   00452C  26D9               	addwf	fsr2l,f,c
 10414   00452E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10415   004530  22DA               	addwfc	fsr2h,f,c
 10416   004532  CFDE F003          	movff	postinc2,___wmul@multiplicand
 10417   004536  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 10418   00453A  EC88  F02D         	call	___wmul	;wreg free
 10419   00453E  C001  F007         	movff	?___wmul,___lwdiv@dividend
 10420   004542  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 10421   004546  0E00               	movlw	0
 10422   004548  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 10423   00454A  0E64               	movlw	100
 10424   00454C  6E09               	movwf	___lwdiv@divisor^0,c
 10425   00454E  EC15  F028         	call	___lwdiv	;wreg free
 10426   004552  5007               	movf	?___lwdiv^0,w,c
 10427   004554  6E13               	movwf	setMotorPWM@negDuty^0,c
 10428   004556                     l3835:
 10429                           
 10430                           ;dc_motor.c: 80:     if (m->direction) {
 10431   004556  EE20 F001          	lfsr	2,1
 10432   00455A  500E               	movf	setMotorPWM@m^0,w,c
 10433   00455C  26D9               	addwf	fsr2l,f,c
 10434   00455E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10435   004560  22DA               	addwfc	fsr2h,f,c
 10436   004562  50DF               	movf	indf2,w,c
 10437   004564  B4D8               	btfsc	status,2,c
 10438   004566  EFB7  F022         	goto	u3301
 10439   00456A  EFB9  F022         	goto	u3300
 10440   00456E                     u3301:
 10441   00456E  EFDB  F022         	goto	l3839
 10442   004572                     u3300:
 10443   004572                     
 10444                           ;dc_motor.c: 82:         *(m->posDutyHighByte)=posDuty;
 10445   004572  EE20 F005          	lfsr	2,5
 10446   004576  500E               	movf	setMotorPWM@m^0,w,c
 10447   004578  26D9               	addwf	fsr2l,f,c
 10448   00457A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10449   00457C  22DA               	addwfc	fsr2h,f,c
 10450   00457E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10451   004582  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10452   004586  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10453   00458A  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10454   00458E  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10455                           
 10456                           ;dc_motor.c: 83:         *(m->negDutyHighByte)=negDuty;
 10457   004592  EE20 F007          	lfsr	2,7
 10458   004596  500E               	movf	setMotorPWM@m^0,w,c
 10459   004598  26D9               	addwf	fsr2l,f,c
 10460   00459A  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10461   00459C  22DA               	addwfc	fsr2h,f,c
 10462   00459E  CFDE F010          	movff	postinc2,??_setMotorPWM
 10463   0045A2  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10464   0045A6  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10465   0045AA  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10466   0045AE  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10467                           
 10468                           ;dc_motor.c: 85:     } else {
 10469   0045B2  EFFB  F022         	goto	l462
 10470   0045B6                     l3839:
 10471                           
 10472                           ;dc_motor.c: 86:         *(m->posDutyHighByte)=negDuty;
 10473   0045B6  EE20 F005          	lfsr	2,5
 10474   0045BA  500E               	movf	setMotorPWM@m^0,w,c
 10475   0045BC  26D9               	addwf	fsr2l,f,c
 10476   0045BE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10477   0045C0  22DA               	addwfc	fsr2h,f,c
 10478   0045C2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10479   0045C6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10480   0045CA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10481   0045CE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10482   0045D2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 10483                           
 10484                           ;dc_motor.c: 87:         *(m->negDutyHighByte)=posDuty;
 10485   0045D6  EE20 F007          	lfsr	2,7
 10486   0045DA  500E               	movf	setMotorPWM@m^0,w,c
 10487   0045DC  26D9               	addwf	fsr2l,f,c
 10488   0045DE  500F               	movf	(setMotorPWM@m+1)^0,w,c
 10489   0045E0  22DA               	addwfc	fsr2h,f,c
 10490   0045E2  CFDE F010          	movff	postinc2,??_setMotorPWM
 10491   0045E6  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 10492   0045EA  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 10493   0045EE  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 10494   0045F2  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 10495   0045F6                     l462:
 10496   0045F6  0012               	return		;funcret
 10497   0045F8                     __end_of_setMotorPWM:
 10498                           	callstack 0
 10499                           
 10500 ;; *************** function ___wmul *****************
 10501 ;; Defined at:
 10502 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 10503 ;; Parameters:    Size  Location     Type
 10504 ;;  multiplier      2    0[COMRAM] unsigned int 
 10505 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10506 ;; Auto vars:     Size  Location     Type
 10507 ;;  product         2    4[COMRAM] unsigned int 
 10508 ;; Return value:  Size  Location     Type
 10509 ;;                  2    0[COMRAM] unsigned int 
 10510 ;; Registers used:
 10511 ;;		wreg, status,2, status,0, prodl, prodh
 10512 ;; Tracked objects:
 10513 ;;		On entry : 0/0
 10514 ;;		On exit  : 0/0
 10515 ;;		Unchanged: 0/0
 10516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10521 ;;Total ram usage:        6 bytes
 10522 ;; Hardware stack levels used: 1
 10523 ;; Hardware stack levels required when called: 1
 10524 ;; This function calls:
 10525 ;;		Nothing
 10526 ;; This function is called by:
 10527 ;;		_setMotorPWM
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text62
 10532   005B10                     __ptext62:
 10533                           	callstack 0
 10534   005B10                     ___wmul:
 10535                           	callstack 27
 10536   005B10  5001               	movf	___wmul@multiplier^0,w,c
 10537   005B12  0203               	mulwf	___wmul@multiplicand^0,c
 10538   005B14  CFF3 F005          	movff	prodl,___wmul@product
 10539   005B18  CFF4 F006          	movff	prodh,___wmul@product+1
 10540   005B1C  5001               	movf	___wmul@multiplier^0,w,c
 10541   005B1E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10542   005B20  50F3               	movf	243,w,c
 10543   005B22  2606               	addwf	(___wmul@product+1)^0,f,c
 10544   005B24  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10545   005B26  0203               	mulwf	___wmul@multiplicand^0,c
 10546   005B28  50F3               	movf	243,w,c
 10547   005B2A  2606               	addwf	(___wmul@product+1)^0,f,c
 10548   005B2C  C005  F001         	movff	___wmul@product,?___wmul
 10549   005B30  C006  F002         	movff	___wmul@product+1,?___wmul+1
 10550   005B34  0012               	return		;funcret
 10551   005B36                     __end_of___wmul:
 10552                           	callstack 0
 10553                           
 10554 ;; *************** function ___lwdiv *****************
 10555 ;; Defined at:
 10556 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  dividend        2    6[COMRAM] unsigned int 
 10559 ;;  divisor         2    8[COMRAM] unsigned int 
 10560 ;; Auto vars:     Size  Location     Type
 10561 ;;  quotient        2   10[COMRAM] unsigned int 
 10562 ;;  counter         1   12[COMRAM] unsigned char 
 10563 ;; Return value:  Size  Location     Type
 10564 ;;                  2    6[COMRAM] unsigned int 
 10565 ;; Registers used:
 10566 ;;		wreg, status,2, status,0
 10567 ;; Tracked objects:
 10568 ;;		On entry : 0/0
 10569 ;;		On exit  : 0/0
 10570 ;;		Unchanged: 0/0
 10571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10576 ;;Total ram usage:        7 bytes
 10577 ;; Hardware stack levels used: 1
 10578 ;; Hardware stack levels required when called: 1
 10579 ;; This function calls:
 10580 ;;		Nothing
 10581 ;; This function is called by:
 10582 ;;		_setMotorPWM
 10583 ;; This function uses a non-reentrant model
 10584 ;;
 10585                           
 10586                           	psect	text63
 10587   00502A                     __ptext63:
 10588                           	callstack 0
 10589   00502A                     ___lwdiv:
 10590                           	callstack 27
 10591   00502A  0E00               	movlw	0
 10592   00502C  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 10593   00502E  0E00               	movlw	0
 10594   005030  6E0B               	movwf	___lwdiv@quotient^0,c
 10595   005032  5009               	movf	___lwdiv@divisor^0,w,c
 10596   005034  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 10597   005036  B4D8               	btfsc	status,2,c
 10598   005038  EF20  F028         	goto	u3251
 10599   00503C  EF22  F028         	goto	u3250
 10600   005040                     u3251:
 10601   005040  EF4A  F028         	goto	l1089
 10602   005044                     u3250:
 10603   005044  0E01               	movlw	1
 10604   005046  6E0D               	movwf	___lwdiv@counter^0,c
 10605   005048  EF2A  F028         	goto	l3803
 10606   00504C                     l3801:
 10607   00504C  90D8               	bcf	status,0,c
 10608   00504E  3609               	rlcf	___lwdiv@divisor^0,f,c
 10609   005050  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 10610   005052  2A0D               	incf	___lwdiv@counter^0,f,c
 10611   005054                     l3803:
 10612   005054  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 10613   005056  EF2F  F028         	goto	u3261
 10614   00505A  EF31  F028         	goto	u3260
 10615   00505E                     u3261:
 10616   00505E  EF26  F028         	goto	l3801
 10617   005062                     u3260:
 10618   005062                     l3805:
 10619   005062  90D8               	bcf	status,0,c
 10620   005064  360B               	rlcf	___lwdiv@quotient^0,f,c
 10621   005066  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 10622   005068  5009               	movf	___lwdiv@divisor^0,w,c
 10623   00506A  5C07               	subwf	___lwdiv@dividend^0,w,c
 10624   00506C  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10625   00506E  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 10626   005070  A0D8               	btfss	status,0,c
 10627   005072  EF3D  F028         	goto	u3271
 10628   005076  EF3F  F028         	goto	u3270
 10629   00507A                     u3271:
 10630   00507A  EF44  F028         	goto	l3813
 10631   00507E                     u3270:
 10632   00507E  5009               	movf	___lwdiv@divisor^0,w,c
 10633   005080  5E07               	subwf	___lwdiv@dividend^0,f,c
 10634   005082  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 10635   005084  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 10636   005086  800B               	bsf	___lwdiv@quotient^0,0,c
 10637   005088                     l3813:
 10638   005088  90D8               	bcf	status,0,c
 10639   00508A  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 10640   00508C  3209               	rrcf	___lwdiv@divisor^0,f,c
 10641   00508E  2E0D               	decfsz	___lwdiv@counter^0,f,c
 10642   005090  EF31  F028         	goto	l3805
 10643   005094                     l1089:
 10644   005094  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 10645   005098  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 10646   00509C  0012               	return		;funcret
 10647   00509E                     __end_of___lwdiv:
 10648                           	callstack 0
 10649                           
 10650 ;; *************** function _Interrupts_init *****************
 10651 ;; Defined at:
 10652 ;;		line 12 in file "interrupts.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;		None
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;		None
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		None
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10670 ;;Total ram usage:        0 bytes
 10671 ;; Hardware stack levels used: 1
 10672 ;; Hardware stack levels required when called: 1
 10673 ;; This function calls:
 10674 ;;		Nothing
 10675 ;; This function is called by:
 10676 ;;		_main
 10677 ;; This function uses a non-reentrant model
 10678 ;;
 10679                           
 10680                           	psect	text64
 10681   005BBC                     __ptext64:
 10682                           	callstack 0
 10683   005BBC                     _Interrupts_init:
 10684                           	callstack 29
 10685   005BBC  0012               	return		;funcret
 10686   005BBE                     __end_of_Interrupts_init:
 10687                           	callstack 0
 10688                           
 10689 ;; *************** function _Colour_decider *****************
 10690 ;; Defined at:
 10691 ;;		line 125 in file "color.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;  vals            2   74[COMRAM] PTR struct RGB
 10694 ;;		 -> vals(8), 
 10695 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 10696 ;;		 -> rel(12), 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  RGB_col        12    6[BANK0 ] float [3]
 10699 ;;  Hue             4   28[BANK0 ] float 
 10700 ;;  Cmin            4   22[BANK0 ] float 
 10701 ;;  Cmax            4   18[BANK0 ] float 
 10702 ;;  i               2   26[BANK0 ] int 
 10703 ;;  Cmax_i          2    4[BANK0 ] int 
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  2   74[COMRAM] int 
 10706 ;; Registers used:
 10707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10716 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10717 ;;Total ram usage:       38 bytes
 10718 ;; Hardware stack levels used: 1
 10719 ;; Hardware stack levels required when called: 3
 10720 ;; This function calls:
 10721 ;;		___fladd
 10722 ;;		___fldiv
 10723 ;;		___fleq
 10724 ;;		___flge
 10725 ;;		___flmul
 10726 ;;		___flsub
 10727 ;;		___xxtofl
 10728 ;; This function is called by:
 10729 ;;		_main
 10730 ;; This function uses a non-reentrant model
 10731 ;;
 10732                           
 10733                           	psect	text65
 10734   000E5A                     __ptext65:
 10735                           	callstack 0
 10736   000E5A                     _Colour_decider:
 10737                           	callstack 27
 10738   000E5A                     
 10739                           ;color.c: 126:     float Cmax = 0;
 10740   000E5A  0E00               	movlw	0
 10741   000E5C  0100               	movlb	0	; () banked
 10742   000E5E  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 10743   000E60  0E00               	movlw	0
 10744   000E62  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 10745   000E64  0E00               	movlw	0
 10746   000E66  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 10747   000E68  0E00               	movlw	0
 10748   000E6A  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 10749                           
 10750                           ;color.c: 127:     float Cmin= 100000;
 10751   000E6C  0E00               	movlw	0
 10752   000E6E  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 10753   000E70  0E50               	movlw	80
 10754   000E72  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 10755   000E74  0EC3               	movlw	195
 10756   000E76  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 10757   000E78  0E47               	movlw	71
 10758   000E7A  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 10759                           
 10760                           ;color.c: 128:     int Cmax_i =4;
 10761   000E7C  0E00               	movlw	0
 10762   000E7E  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 10763   000E80  0E04               	movlw	4
 10764   000E82  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 10765   000E84                     
 10766                           ; BSR set to: 0
 10767                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
 10768   000E84  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 10769   000E88  0E0B               	movlw	11
 10770   000E8A                     u4971:
 10771   000E8A  6ADE               	clrf	postinc2,c
 10772   000E8C  06E8               	decf	wreg,f,c
 10773   000E8E  E2FD               	bc	u4971
 10774   000E90                     
 10775                           ; BSR set to: 0
 10776   000E90  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 10777   000E94  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 10778   000E98  CFDE F001          	movff	postinc2,___xxtofl@val
 10779   000E9C  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10780   000EA0  0E00               	movlw	0
 10781   000EA2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10782   000EA4  0EFF               	movlw	-1
 10783   000EA6  6E03               	movwf	(___xxtofl@val+2)^0,c
 10784   000EA8  6E04               	movwf	(___xxtofl@val+3)^0,c
 10785   000EAA  0E01               	movlw	1
 10786   000EAC  ECA8  F020         	call	___xxtofl
 10787   000EB0  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 10788   000EB4  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 10789   000EB8  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 10790   000EBC  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 10791   000EC0  EE20 F002          	lfsr	2,2
 10792   000EC4  504B               	movf	Colour_decider@vals^0,w,c
 10793   000EC6  26D9               	addwf	fsr2l,f,c
 10794   000EC8  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10795   000ECA  22DA               	addwfc	fsr2h,f,c
 10796   000ECC  CFDE F001          	movff	postinc2,___xxtofl@val
 10797   000ED0  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10798   000ED4  0E00               	movlw	0
 10799   000ED6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10800   000ED8  0EFF               	movlw	-1
 10801   000EDA  6E03               	movwf	(___xxtofl@val+2)^0,c
 10802   000EDC  6E04               	movwf	(___xxtofl@val+3)^0,c
 10803   000EDE  0E01               	movlw	1
 10804   000EE0  ECA8  F020         	call	___xxtofl
 10805   000EE4  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 10806   000EE8  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 10807   000EEC  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 10808   000EF0  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 10809   000EF4  EE20 F004          	lfsr	2,4
 10810   000EF8  504B               	movf	Colour_decider@vals^0,w,c
 10811   000EFA  26D9               	addwf	fsr2l,f,c
 10812   000EFC  504C               	movf	(Colour_decider@vals+1)^0,w,c
 10813   000EFE  22DA               	addwfc	fsr2h,f,c
 10814   000F00  CFDE F001          	movff	postinc2,___xxtofl@val
 10815   000F04  CFDD F002          	movff	postdec2,___xxtofl@val+1
 10816   000F08  0E00               	movlw	0
 10817   000F0A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 10818   000F0C  0EFF               	movlw	-1
 10819   000F0E  6E03               	movwf	(___xxtofl@val+2)^0,c
 10820   000F10  6E04               	movwf	(___xxtofl@val+3)^0,c
 10821   000F12  0E01               	movlw	1
 10822   000F14  ECA8  F020         	call	___xxtofl
 10823   000F18  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 10824   000F1C  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 10825   000F20  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 10826   000F24  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 10827   000F28                     
 10828                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
 10829   000F28  0E00               	movlw	0
 10830   000F2A  0100               	movlb	0	; () banked
 10831   000F2C  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 10832   000F2E  0E00               	movlw	0
 10833   000F30  6F7A               	movwf	Colour_decider@i& (0+255),b
 10834   000F32                     l5045:
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;color.c: 136:         if (RGB_col[i]>Cmax){
 10838   000F32  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 10839   000F36  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 10840   000F3A  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 10841   000F3E  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 10842   000F42  0E66               	movlw	low Colour_decider@RGB_col
 10843   000F44  6E4F               	movwf	??_Colour_decider^0,c
 10844   000F46  0E00               	movlw	high Colour_decider@RGB_col
 10845   000F48  6E50               	movwf	(??_Colour_decider+1)^0,c
 10846   000F4A  90D8               	bcf	status,0,c
 10847   000F4C  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10848   000F4E  6ED9               	movwf	fsr2l,c
 10849   000F50  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10850   000F52  6EDA               	movwf	fsr2h,c
 10851   000F54  90D8               	bcf	status,0,c
 10852   000F56  36D9               	rlcf	fsr2l,f,c
 10853   000F58  36DA               	rlcf	fsr2h,f,c
 10854   000F5A  504F               	movf	??_Colour_decider^0,w,c
 10855   000F5C  26D9               	addwf	fsr2l,f,c
 10856   000F5E  5050               	movf	(??_Colour_decider+1)^0,w,c
 10857   000F60  22DA               	addwfc	fsr2h,f,c
 10858   000F62  CFDE F02E          	movff	postinc2,___flge@ff2
 10859   000F66  CFDE F02F          	movff	postinc2,___flge@ff2+1
 10860   000F6A  CFDE F030          	movff	postinc2,___flge@ff2+2
 10861   000F6E  CFDE F031          	movff	postinc2,___flge@ff2+3
 10862   000F72  EC31  F024         	call	___flge	;wreg free
 10863   000F76  B0D8               	btfsc	status,0,c
 10864   000F78  EFC0  F007         	goto	u4981
 10865   000F7C  EFC2  F007         	goto	u4980
 10866   000F80                     u4981:
 10867   000F80  EFDF  F007         	goto	l5051
 10868   000F84                     u4980:
 10869   000F84                     
 10870                           ;color.c: 137:             Cmax=RGB_col[i];
 10871   000F84  0E66               	movlw	low Colour_decider@RGB_col
 10872   000F86  6E4F               	movwf	??_Colour_decider^0,c
 10873   000F88  0E00               	movlw	high Colour_decider@RGB_col
 10874   000F8A  6E50               	movwf	(??_Colour_decider+1)^0,c
 10875   000F8C  90D8               	bcf	status,0,c
 10876   000F8E  0100               	movlb	0	; () banked
 10877   000F90  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10878   000F92  6ED9               	movwf	fsr2l,c
 10879   000F94  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10880   000F96  6EDA               	movwf	fsr2h,c
 10881   000F98  90D8               	bcf	status,0,c
 10882   000F9A  36D9               	rlcf	fsr2l,f,c
 10883   000F9C  36DA               	rlcf	fsr2h,f,c
 10884   000F9E  504F               	movf	??_Colour_decider^0,w,c
 10885   000FA0  26D9               	addwf	fsr2l,f,c
 10886   000FA2  5050               	movf	(??_Colour_decider+1)^0,w,c
 10887   000FA4  22DA               	addwfc	fsr2h,f,c
 10888   000FA6  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 10889   000FAA  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 10890   000FAE  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 10891   000FB2  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 10892   000FB6                     
 10893                           ; BSR set to: 0
 10894                           ;color.c: 138:             Cmax_i=i;
 10895   000FB6  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 10896   000FBA  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 10897   000FBE                     l5051:
 10898                           
 10899                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 10900   000FBE  0E66               	movlw	low Colour_decider@RGB_col
 10901   000FC0  6E4F               	movwf	??_Colour_decider^0,c
 10902   000FC2  0E00               	movlw	high Colour_decider@RGB_col
 10903   000FC4  6E50               	movwf	(??_Colour_decider+1)^0,c
 10904   000FC6  90D8               	bcf	status,0,c
 10905   000FC8  0100               	movlb	0	; () banked
 10906   000FCA  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10907   000FCC  6ED9               	movwf	fsr2l,c
 10908   000FCE  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10909   000FD0  6EDA               	movwf	fsr2h,c
 10910   000FD2  90D8               	bcf	status,0,c
 10911   000FD4  36D9               	rlcf	fsr2l,f,c
 10912   000FD6  36DA               	rlcf	fsr2h,f,c
 10913   000FD8  504F               	movf	??_Colour_decider^0,w,c
 10914   000FDA  26D9               	addwf	fsr2l,f,c
 10915   000FDC  5050               	movf	(??_Colour_decider+1)^0,w,c
 10916   000FDE  22DA               	addwfc	fsr2h,f,c
 10917   000FE0  CFDE F02A          	movff	postinc2,___flge@ff1
 10918   000FE4  CFDE F02B          	movff	postinc2,___flge@ff1+1
 10919   000FE8  CFDE F02C          	movff	postinc2,___flge@ff1+2
 10920   000FEC  CFDE F02D          	movff	postinc2,___flge@ff1+3
 10921   000FF0  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 10922   000FF4  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 10923   000FF8  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 10924   000FFC  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 10925   001000  EC31  F024         	call	___flge	;wreg free
 10926   001004  B0D8               	btfsc	status,0,c
 10927   001006  EF07  F008         	goto	u4991
 10928   00100A  EF09  F008         	goto	u4990
 10929   00100E                     u4991:
 10930   00100E  EF22  F008         	goto	l5055
 10931   001012                     u4990:
 10932   001012  0E66               	movlw	low Colour_decider@RGB_col
 10933   001014  6E4F               	movwf	??_Colour_decider^0,c
 10934   001016  0E00               	movlw	high Colour_decider@RGB_col
 10935   001018  6E50               	movwf	(??_Colour_decider+1)^0,c
 10936   00101A  90D8               	bcf	status,0,c
 10937   00101C  0100               	movlb	0	; () banked
 10938   00101E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 10939   001020  6ED9               	movwf	fsr2l,c
 10940   001022  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 10941   001024  6EDA               	movwf	fsr2h,c
 10942   001026  90D8               	bcf	status,0,c
 10943   001028  36D9               	rlcf	fsr2l,f,c
 10944   00102A  36DA               	rlcf	fsr2h,f,c
 10945   00102C  504F               	movf	??_Colour_decider^0,w,c
 10946   00102E  26D9               	addwf	fsr2l,f,c
 10947   001030  5050               	movf	(??_Colour_decider+1)^0,w,c
 10948   001032  22DA               	addwfc	fsr2h,f,c
 10949   001034  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 10950   001038  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 10951   00103C  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 10952   001040  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 10953   001044                     l5055:
 10954                           
 10955                           ;color.c: 141:     }
 10956   001044  0100               	movlb	0	; () banked
 10957   001046  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 10958   001048  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 10959   00104A                     
 10960                           ; BSR set to: 0
 10961   00104A  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 10962   00104C  EF31  F008         	goto	u5001
 10963   001050  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 10964   001052  E109               	bnz	u5000
 10965   001054  0E03               	movlw	3
 10966   001056  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 10967   001058  A0D8               	btfss	status,0,c
 10968   00105A  EF31  F008         	goto	u5001
 10969   00105E  EF33  F008         	goto	u5000
 10970   001062                     u5001:
 10971   001062  EF99  F007         	goto	l5045
 10972   001066                     u5000:
 10973   001066                     
 10974                           ; BSR set to: 0
 10975                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
 10976   001066  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 10977   00106A  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 10978   00106E  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 10979   001072  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 10980   001076  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 10981   00107A  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 10982   00107E  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 10983   001082  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 10984   001086  EC07  F02C         	call	___flsub	;wreg free
 10985   00108A  C02A  F032         	movff	?___flsub,___fleq@ff1
 10986   00108E  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 10987   001092  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 10988   001096  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 10989   00109A  0E00               	movlw	0
 10990   00109C  6E36               	movwf	___fleq@ff2^0,c
 10991   00109E  0E00               	movlw	0
 10992   0010A0  6E37               	movwf	(___fleq@ff2+1)^0,c
 10993   0010A2  0E00               	movlw	0
 10994   0010A4  6E38               	movwf	(___fleq@ff2+2)^0,c
 10995   0010A6  0E00               	movlw	0
 10996   0010A8  6E39               	movwf	(___fleq@ff2+3)^0,c
 10997   0010AA  EC97  F025         	call	___fleq	;wreg free
 10998   0010AE  A0D8               	btfss	status,0,c
 10999   0010B0  EF5C  F008         	goto	u5011
 11000   0010B4  EF5E  F008         	goto	u5010
 11001   0010B8                     u5011:
 11002   0010B8  EF64  F008         	goto	l5065
 11003   0010BC                     u5010:
 11004   0010BC                     l5061:
 11005   0010BC  0E00               	movlw	0
 11006   0010BE  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11007   0010C0  0E00               	movlw	0
 11008   0010C2  6E4B               	movwf	?_Colour_decider^0,c
 11009   0010C4  EF9A  F00C         	goto	l70
 11010   0010C8                     l5065:
 11011                           
 11012                           ;color.c: 146:     if (Cmax_i==0){
 11013   0010C8  0100               	movlb	0	; () banked
 11014   0010CA  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 11015   0010CC  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11016   0010CE  A4D8               	btfss	status,2,c
 11017   0010D0  EF6C  F008         	goto	u5021
 11018   0010D4  EF6E  F008         	goto	u5020
 11019   0010D8                     u5021:
 11020   0010D8  EFE2  F008         	goto	l5073
 11021   0010DC                     u5020:
 11022   0010DC                     
 11023                           ; BSR set to: 0
 11024                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 11025   0010DC  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11026   0010E0  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11027   0010E4  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11028   0010E8  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11029   0010EC  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11030   0010F0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11031   0010F4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11032   0010F8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11033   0010FC  EC07  F02C         	call	___flsub	;wreg free
 11034   001100  C02A  F036         	movff	?___flsub,___fldiv@a
 11035   001104  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11036   001108  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11037   00110C  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11038   001110  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 11039   001114  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 11040   001118  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 11041   00111C  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 11042   001120  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 11043   001124  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 11044   001128  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 11045   00112C  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 11046   001130  EC07  F02C         	call	___flsub	;wreg free
 11047   001134  C02A  F032         	movff	?___flsub,___fldiv@b
 11048   001138  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11049   00113C  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11050   001140  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11051   001144  EC90  F018         	call	___fldiv	;wreg free
 11052   001148  C032  F011         	movff	?___fldiv,___flmul@b
 11053   00114C  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 11054   001150  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 11055   001154  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 11056   001158  0E00               	movlw	0
 11057   00115A  6E15               	movwf	___flmul@a^0,c
 11058   00115C  0E00               	movlw	0
 11059   00115E  6E16               	movwf	(___flmul@a+1)^0,c
 11060   001160  0E70               	movlw	112
 11061   001162  6E17               	movwf	(___flmul@a+2)^0,c
 11062   001164  0E42               	movlw	66
 11063   001166  6E18               	movwf	(___flmul@a+3)^0,c
 11064   001168  EC7B  F016         	call	___flmul	;wreg free
 11065   00116C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11066   001170  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11067   001174  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11068   001178  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11069   00117C                     
 11070                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
 11071   00117C  0100               	movlb	0	; () banked
 11072   00117E  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 11073   001180  EFC6  F008         	goto	u5030
 11074   001184  EFC4  F008         	goto	u5031
 11075   001188                     u5031:
 11076   001188  EFC1  F009         	goto	l5083
 11077   00118C                     u5030:
 11078   00118C                     
 11079                           ; BSR set to: 0
 11080   00118C  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 11081   001190  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 11082   001194  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 11083   001198  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 11084   00119C  0E00               	movlw	0
 11085   00119E  6E05               	movwf	___fladd@a^0,c
 11086   0011A0  0E00               	movlw	0
 11087   0011A2  6E06               	movwf	(___fladd@a+1)^0,c
 11088   0011A4  0EB4               	movlw	180
 11089   0011A6  6E07               	movwf	(___fladd@a+2)^0,c
 11090   0011A8  0E43               	movlw	67
 11091   0011AA  6E08               	movwf	(___fladd@a+3)^0,c
 11092   0011AC  EC1B  F014         	call	___fladd	;wreg free
 11093   0011B0  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 11094   0011B4  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 11095   0011B8  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 11096   0011BC  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 11097   0011C0  EFC1  F009         	goto	l5083
 11098   0011C4                     l5073:
 11099                           
 11100                           ; BSR set to: 0
 11101   0011C4  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 11102   0011C6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 11103   0011C8  A4D8               	btfss	status,2,c
 11104   0011CA  EFE9  F008         	goto	u5041
 11105   0011CE  EFEB  F008         	goto	u5040
 11106   0011D2                     u5041:
 11107   0011D2  EF57  F009         	goto	l5079
 11108   0011D6                     u5040:
 11109   0011D6                     
 11110                           ; BSR set to: 0
 11111                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11112   0011D6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11113   0011DA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11114   0011DE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11115   0011E2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11116   0011E6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11117   0011EA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11118   0011EE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11119   0011F2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11120   0011F6  EC07  F02C         	call	___flsub	;wreg free
 11121   0011FA  C02A  F036         	movff	?___flsub,___fldiv@a
 11122   0011FE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11123   001202  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11124   001206  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11125   00120A  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 11126   00120E  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 11127   001212  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 11128   001216  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 11129   00121A  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 11130   00121E  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 11131   001222  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 11132   001226  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 11133   00122A  EC07  F02C         	call	___flsub	;wreg free
 11134   00122E  C02A  F032         	movff	?___flsub,___fldiv@b
 11135   001232  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11136   001236  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11137   00123A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11138   00123E  EC90  F018         	call	___fldiv	;wreg free
 11139   001242  C032  F060         	movff	?___fldiv,_Colour_decider$2783
 11140   001246  C033  F061         	movff	?___fldiv+1,_Colour_decider$2783+1
 11141   00124A  C034  F062         	movff	?___fldiv+2,_Colour_decider$2783+2
 11142   00124E  C035  F063         	movff	?___fldiv+3,_Colour_decider$2783+3
 11143   001252                     
 11144                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 11145   001252  0E00               	movlw	0
 11146   001254  6E05               	movwf	___fladd@a^0,c
 11147   001256  0E00               	movlw	0
 11148   001258  6E06               	movwf	(___fladd@a+1)^0,c
 11149   00125A  0E00               	movlw	0
 11150   00125C  6E07               	movwf	(___fladd@a+2)^0,c
 11151   00125E  0E40               	movlw	64
 11152   001260  6E08               	movwf	(___fladd@a+3)^0,c
 11153   001262  C060  F001         	movff	_Colour_decider$2783,___fladd@b
 11154   001266  C061  F002         	movff	_Colour_decider$2783+1,___fladd@b+1
 11155   00126A  C062  F003         	movff	_Colour_decider$2783+2,___fladd@b+2
 11156   00126E  C063  F004         	movff	_Colour_decider$2783+3,___fladd@b+3
 11157   001272  EC1B  F014         	call	___fladd	;wreg free
 11158   001276  C001  F011         	movff	?___fladd,___flmul@b
 11159   00127A  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11160   00127E  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11161   001282  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11162   001286  0E00               	movlw	0
 11163   001288  6E15               	movwf	___flmul@a^0,c
 11164   00128A  0E00               	movlw	0
 11165   00128C  6E16               	movwf	(___flmul@a+1)^0,c
 11166   00128E  0E70               	movlw	112
 11167   001290  6E17               	movwf	(___flmul@a+2)^0,c
 11168   001292  0E42               	movlw	66
 11169   001294  6E18               	movwf	(___flmul@a+3)^0,c
 11170   001296  EC7B  F016         	call	___flmul	;wreg free
 11171   00129A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11172   00129E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11173   0012A2  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11174   0012A6  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11175                           
 11176                           ;color.c: 155:     }
 11177   0012AA  EFC1  F009         	goto	l5083
 11178   0012AE                     l5079:
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11182   0012AE  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 11183   0012B2  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 11184   0012B6  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 11185   0012BA  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 11186   0012BE  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 11187   0012C2  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 11188   0012C6  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 11189   0012CA  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 11190   0012CE  EC07  F02C         	call	___flsub	;wreg free
 11191   0012D2  C02A  F036         	movff	?___flsub,___fldiv@a
 11192   0012D6  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 11193   0012DA  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 11194   0012DE  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 11195   0012E2  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 11196   0012E6  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 11197   0012EA  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 11198   0012EE  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 11199   0012F2  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 11200   0012F6  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 11201   0012FA  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 11202   0012FE  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 11203   001302  EC07  F02C         	call	___flsub	;wreg free
 11204   001306  C02A  F032         	movff	?___flsub,___fldiv@b
 11205   00130A  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 11206   00130E  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 11207   001312  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 11208   001316  EC90  F018         	call	___fldiv	;wreg free
 11209   00131A  C032  F060         	movff	?___fldiv,_Colour_decider$2783
 11210   00131E  C033  F061         	movff	?___fldiv+1,_Colour_decider$2783+1
 11211   001322  C034  F062         	movff	?___fldiv+2,_Colour_decider$2783+2
 11212   001326  C035  F063         	movff	?___fldiv+3,_Colour_decider$2783+3
 11213   00132A                     
 11214                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 11215   00132A  0E00               	movlw	0
 11216   00132C  6E05               	movwf	___fladd@a^0,c
 11217   00132E  0E00               	movlw	0
 11218   001330  6E06               	movwf	(___fladd@a+1)^0,c
 11219   001332  0E80               	movlw	128
 11220   001334  6E07               	movwf	(___fladd@a+2)^0,c
 11221   001336  0E40               	movlw	64
 11222   001338  6E08               	movwf	(___fladd@a+3)^0,c
 11223   00133A  C060  F001         	movff	_Colour_decider$2783,___fladd@b
 11224   00133E  C061  F002         	movff	_Colour_decider$2783+1,___fladd@b+1
 11225   001342  C062  F003         	movff	_Colour_decider$2783+2,___fladd@b+2
 11226   001346  C063  F004         	movff	_Colour_decider$2783+3,___fladd@b+3
 11227   00134A  EC1B  F014         	call	___fladd	;wreg free
 11228   00134E  C001  F011         	movff	?___fladd,___flmul@b
 11229   001352  C002  F012         	movff	?___fladd+1,___flmul@b+1
 11230   001356  C003  F013         	movff	?___fladd+2,___flmul@b+2
 11231   00135A  C004  F014         	movff	?___fladd+3,___flmul@b+3
 11232   00135E  0E00               	movlw	0
 11233   001360  6E15               	movwf	___flmul@a^0,c
 11234   001362  0E00               	movlw	0
 11235   001364  6E16               	movwf	(___flmul@a+1)^0,c
 11236   001366  0E70               	movlw	112
 11237   001368  6E17               	movwf	(___flmul@a+2)^0,c
 11238   00136A  0E42               	movlw	66
 11239   00136C  6E18               	movwf	(___flmul@a+3)^0,c
 11240   00136E  EC7B  F016         	call	___flmul	;wreg free
 11241   001372  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 11242   001376  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 11243   00137A  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 11244   00137E  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 11245   001382                     l5083:
 11246                           
 11247                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 11248   001382  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11249   001386  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11250   00138A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11251   00138E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11252   001392  0E00               	movlw	0
 11253   001394  6E2E               	movwf	___flge@ff2^0,c
 11254   001396  0E00               	movlw	0
 11255   001398  6E2F               	movwf	(___flge@ff2+1)^0,c
 11256   00139A  0EA5               	movlw	165
 11257   00139C  6E30               	movwf	(___flge@ff2+2)^0,c
 11258   00139E  0E43               	movlw	67
 11259   0013A0  6E31               	movwf	(___flge@ff2+3)^0,c
 11260   0013A2  EC31  F024         	call	___flge	;wreg free
 11261   0013A6  A0D8               	btfss	status,0,c
 11262   0013A8  EFD8  F009         	goto	u5051
 11263   0013AC  EFDA  F009         	goto	u5050
 11264   0013B0                     u5051:
 11265   0013B0  EFF9  F009         	goto	l5093
 11266   0013B4                     u5050:
 11267   0013B4  0E00               	movlw	0
 11268   0013B6  6E2A               	movwf	___flge@ff1^0,c
 11269   0013B8  0E00               	movlw	0
 11270   0013BA  6E2B               	movwf	(___flge@ff1+1)^0,c
 11271   0013BC  0EB4               	movlw	180
 11272   0013BE  6E2C               	movwf	(___flge@ff1+2)^0,c
 11273   0013C0  0E43               	movlw	67
 11274   0013C2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11275   0013C4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11276   0013C8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11277   0013CC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11278   0013D0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11279   0013D4  EC31  F024         	call	___flge	;wreg free
 11280   0013D8  A0D8               	btfss	status,0,c
 11281   0013DA  EFF1  F009         	goto	u5061
 11282   0013DE  EFF3  F009         	goto	u5060
 11283   0013E2                     u5061:
 11284   0013E2  EFF9  F009         	goto	l5093
 11285   0013E6                     u5060:
 11286   0013E6                     
 11287                           ;color.c: 164:         return 1;
 11288   0013E6  0E00               	movlw	0
 11289   0013E8  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11290   0013EA  0E01               	movlw	1
 11291   0013EC  6E4B               	movwf	?_Colour_decider^0,c
 11292   0013EE  EF9A  F00C         	goto	l70
 11293   0013F2                     l5093:
 11294   0013F2  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11295   0013F6  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11296   0013FA  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11297   0013FE  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11298   001402  0E00               	movlw	0
 11299   001404  6E2E               	movwf	___flge@ff2^0,c
 11300   001406  0E00               	movlw	0
 11301   001408  6E2F               	movwf	(___flge@ff2+1)^0,c
 11302   00140A  0EA0               	movlw	160
 11303   00140C  6E30               	movwf	(___flge@ff2+2)^0,c
 11304   00140E  0E40               	movlw	64
 11305   001410  6E31               	movwf	(___flge@ff2+3)^0,c
 11306   001412  EC31  F024         	call	___flge	;wreg free
 11307   001416  A0D8               	btfss	status,0,c
 11308   001418  EF10  F00A         	goto	u5071
 11309   00141C  EF12  F00A         	goto	u5070
 11310   001420                     u5071:
 11311   001420  EF31  F00A         	goto	l5103
 11312   001424                     u5070:
 11313   001424  0E00               	movlw	0
 11314   001426  6E2A               	movwf	___flge@ff1^0,c
 11315   001428  0E00               	movlw	0
 11316   00142A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11317   00142C  0E40               	movlw	64
 11318   00142E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11319   001430  0E41               	movlw	65
 11320   001432  6E2D               	movwf	(___flge@ff1+3)^0,c
 11321   001434  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11322   001438  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11323   00143C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11324   001440  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11325   001444  EC31  F024         	call	___flge	;wreg free
 11326   001448  A0D8               	btfss	status,0,c
 11327   00144A  EF29  F00A         	goto	u5081
 11328   00144E  EF2B  F00A         	goto	u5080
 11329   001452                     u5081:
 11330   001452  EF31  F00A         	goto	l5103
 11331   001456                     u5080:
 11332   001456                     
 11333                           ;color.c: 168:         return 2;
 11334   001456  0E00               	movlw	0
 11335   001458  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11336   00145A  0E02               	movlw	2
 11337   00145C  6E4B               	movwf	?_Colour_decider^0,c
 11338   00145E  EF9A  F00C         	goto	l70
 11339   001462                     l5103:
 11340   001462  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11341   001466  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11342   00146A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11343   00146E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11344   001472  0E00               	movlw	0
 11345   001474  6E2E               	movwf	___flge@ff2^0,c
 11346   001476  0E00               	movlw	0
 11347   001478  6E2F               	movwf	(___flge@ff2+1)^0,c
 11348   00147A  0EA0               	movlw	160
 11349   00147C  6E30               	movwf	(___flge@ff2+2)^0,c
 11350   00147E  0E41               	movlw	65
 11351   001480  6E31               	movwf	(___flge@ff2+3)^0,c
 11352   001482  EC31  F024         	call	___flge	;wreg free
 11353   001486  A0D8               	btfss	status,0,c
 11354   001488  EF48  F00A         	goto	u5091
 11355   00148C  EF4A  F00A         	goto	u5090
 11356   001490                     u5091:
 11357   001490  EFCA  F00A         	goto	l5129
 11358   001494                     u5090:
 11359   001494  0E00               	movlw	0
 11360   001496  6E2A               	movwf	___flge@ff1^0,c
 11361   001498  0E00               	movlw	0
 11362   00149A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11363   00149C  0EE8               	movlw	232
 11364   00149E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11365   0014A0  0E41               	movlw	65
 11366   0014A2  6E2D               	movwf	(___flge@ff1+3)^0,c
 11367   0014A4  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11368   0014A8  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11369   0014AC  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11370   0014B0  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11371   0014B4  EC31  F024         	call	___flge	;wreg free
 11372   0014B8  A0D8               	btfss	status,0,c
 11373   0014BA  EF61  F00A         	goto	u5101
 11374   0014BE  EF63  F00A         	goto	u5100
 11375   0014C2                     u5101:
 11376   0014C2  EFCA  F00A         	goto	l5129
 11377   0014C6                     u5100:
 11378   0014C6                     
 11379                           ;color.c: 173:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11380   0014C6  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11381   0014CA  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11382   0014CE  CFDE F02A          	movff	postinc2,___flge@ff1
 11383   0014D2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11384   0014D6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11385   0014DA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11386   0014DE  0ECD               	movlw	205
 11387   0014E0  6E2E               	movwf	___flge@ff2^0,c
 11388   0014E2  0ECC               	movlw	204
 11389   0014E4  6E2F               	movwf	(___flge@ff2+1)^0,c
 11390   0014E6  0E4C               	movlw	76
 11391   0014E8  6E30               	movwf	(___flge@ff2+2)^0,c
 11392   0014EA  0E3E               	movlw	62
 11393   0014EC  6E31               	movwf	(___flge@ff2+3)^0,c
 11394   0014EE  EC31  F024         	call	___flge	;wreg free
 11395   0014F2  A0D8               	btfss	status,0,c
 11396   0014F4  EF7E  F00A         	goto	u5111
 11397   0014F8  EF80  F00A         	goto	u5110
 11398   0014FC                     u5111:
 11399   0014FC  EF9F  F00A         	goto	l5117
 11400   001500                     u5110:
 11401   001500  0E1F               	movlw	31
 11402   001502  6E2A               	movwf	___flge@ff1^0,c
 11403   001504  0E85               	movlw	133
 11404   001506  6E2B               	movwf	(___flge@ff1+1)^0,c
 11405   001508  0E6B               	movlw	107
 11406   00150A  6E2C               	movwf	(___flge@ff1+2)^0,c
 11407   00150C  0E3E               	movlw	62
 11408   00150E  6E2D               	movwf	(___flge@ff1+3)^0,c
 11409   001510  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11410   001514  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11411   001518  CFDE F02E          	movff	postinc2,___flge@ff2
 11412   00151C  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11413   001520  CFDE F030          	movff	postinc2,___flge@ff2+2
 11414   001524  CFDE F031          	movff	postinc2,___flge@ff2+3
 11415   001528  EC31  F024         	call	___flge	;wreg free
 11416   00152C  A0D8               	btfss	status,0,c
 11417   00152E  EF9B  F00A         	goto	u5121
 11418   001532  EF9D  F00A         	goto	u5120
 11419   001536                     u5121:
 11420   001536  EF9F  F00A         	goto	l5117
 11421   00153A                     u5120:
 11422   00153A  EF5E  F008         	goto	l5061
 11423   00153E                     l5117:
 11424   00153E  EE20 F008          	lfsr	2,8
 11425   001542  504D               	movf	Colour_decider@rel^0,w,c
 11426   001544  26D9               	addwf	fsr2l,f,c
 11427   001546  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11428   001548  22DA               	addwfc	fsr2h,f,c
 11429   00154A  CFDE F02A          	movff	postinc2,___flge@ff1
 11430   00154E  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11431   001552  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11432   001556  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11433   00155A  0E29               	movlw	41
 11434   00155C  6E2E               	movwf	___flge@ff2^0,c
 11435   00155E  0E5C               	movlw	92
 11436   001560  6E2F               	movwf	(___flge@ff2+1)^0,c
 11437   001562  0E0F               	movlw	15
 11438   001564  6E30               	movwf	(___flge@ff2+2)^0,c
 11439   001566  0E3E               	movlw	62
 11440   001568  6E31               	movwf	(___flge@ff2+3)^0,c
 11441   00156A  EC31  F024         	call	___flge	;wreg free
 11442   00156E  A0D8               	btfss	status,0,c
 11443   001570  EFBC  F00A         	goto	u5131
 11444   001574  EFBE  F00A         	goto	u5130
 11445   001578                     u5131:
 11446   001578  EFC4  F00A         	goto	l5125
 11447   00157C                     u5130:
 11448   00157C                     l5119:
 11449                           
 11450                           ;color.c: 179:             return 4;
 11451   00157C  0E00               	movlw	0
 11452   00157E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11453   001580  0E04               	movlw	4
 11454   001582  6E4B               	movwf	?_Colour_decider^0,c
 11455   001584  EF9A  F00C         	goto	l70
 11456   001588                     l5125:
 11457                           
 11458                           ;color.c: 182:             return 3;
 11459   001588  0E00               	movlw	0
 11460   00158A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11461   00158C  0E03               	movlw	3
 11462   00158E  6E4B               	movwf	?_Colour_decider^0,c
 11463   001590  EF9A  F00C         	goto	l70
 11464   001594                     l5129:
 11465   001594  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11466   001598  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11467   00159C  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11468   0015A0  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11469   0015A4  0E00               	movlw	0
 11470   0015A6  6E2E               	movwf	___flge@ff2^0,c
 11471   0015A8  0E00               	movlw	0
 11472   0015AA  6E2F               	movwf	(___flge@ff2+1)^0,c
 11473   0015AC  0E34               	movlw	52
 11474   0015AE  6E30               	movwf	(___flge@ff2+2)^0,c
 11475   0015B0  0E42               	movlw	66
 11476   0015B2  6E31               	movwf	(___flge@ff2+3)^0,c
 11477   0015B4  EC31  F024         	call	___flge	;wreg free
 11478   0015B8  A0D8               	btfss	status,0,c
 11479   0015BA  EFE1  F00A         	goto	u5141
 11480   0015BE  EFE3  F00A         	goto	u5140
 11481   0015C2                     u5141:
 11482   0015C2  EF48  F00B         	goto	l5153
 11483   0015C6                     u5140:
 11484   0015C6  0E00               	movlw	0
 11485   0015C8  6E2A               	movwf	___flge@ff1^0,c
 11486   0015CA  0E00               	movlw	0
 11487   0015CC  6E2B               	movwf	(___flge@ff1+1)^0,c
 11488   0015CE  0EA0               	movlw	160
 11489   0015D0  6E2C               	movwf	(___flge@ff1+2)^0,c
 11490   0015D2  0E42               	movlw	66
 11491   0015D4  6E2D               	movwf	(___flge@ff1+3)^0,c
 11492   0015D6  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11493   0015DA  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11494   0015DE  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11495   0015E2  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11496   0015E6  EC31  F024         	call	___flge	;wreg free
 11497   0015EA  A0D8               	btfss	status,0,c
 11498   0015EC  EFFA  F00A         	goto	u5151
 11499   0015F0  EFFC  F00A         	goto	u5150
 11500   0015F4                     u5151:
 11501   0015F4  EF48  F00B         	goto	l5153
 11502   0015F8                     u5150:
 11503   0015F8                     
 11504                           ;color.c: 188:         if(0.15<=rel->B){
 11505   0015F8  EE20 F008          	lfsr	2,8
 11506   0015FC  504D               	movf	Colour_decider@rel^0,w,c
 11507   0015FE  26D9               	addwf	fsr2l,f,c
 11508   001600  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11509   001602  22DA               	addwfc	fsr2h,f,c
 11510   001604  CFDE F02A          	movff	postinc2,___flge@ff1
 11511   001608  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11512   00160C  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11513   001610  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11514   001614  0E9A               	movlw	154
 11515   001616  6E2E               	movwf	___flge@ff2^0,c
 11516   001618  0E99               	movlw	153
 11517   00161A  6E2F               	movwf	(___flge@ff2+1)^0,c
 11518   00161C  0E19               	movlw	25
 11519   00161E  6E30               	movwf	(___flge@ff2+2)^0,c
 11520   001620  0E3E               	movlw	62
 11521   001622  6E31               	movwf	(___flge@ff2+3)^0,c
 11522   001624  EC31  F024         	call	___flge	;wreg free
 11523   001628  A0D8               	btfss	status,0,c
 11524   00162A  EF19  F00B         	goto	u5161
 11525   00162E  EF1B  F00B         	goto	u5160
 11526   001632                     u5161:
 11527   001632  EF1D  F00B         	goto	l5141
 11528   001636                     u5160:
 11529   001636  EFBE  F00A         	goto	l5119
 11530   00163A                     l5141:
 11531   00163A  EE20 F008          	lfsr	2,8
 11532   00163E  504D               	movf	Colour_decider@rel^0,w,c
 11533   001640  26D9               	addwf	fsr2l,f,c
 11534   001642  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11535   001644  22DA               	addwfc	fsr2h,f,c
 11536   001646  CFDE F02A          	movff	postinc2,___flge@ff1
 11537   00164A  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11538   00164E  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11539   001652  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11540   001656  0E8F               	movlw	143
 11541   001658  6E2E               	movwf	___flge@ff2^0,c
 11542   00165A  0EC2               	movlw	194
 11543   00165C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11544   00165E  0EF5               	movlw	245
 11545   001660  6E30               	movwf	(___flge@ff2+2)^0,c
 11546   001662  0E3D               	movlw	61
 11547   001664  6E31               	movwf	(___flge@ff2+3)^0,c
 11548   001666  EC31  F024         	call	___flge	;wreg free
 11549   00166A  A0D8               	btfss	status,0,c
 11550   00166C  EF3A  F00B         	goto	u5171
 11551   001670  EF3C  F00B         	goto	u5170
 11552   001674                     u5171:
 11553   001674  EF42  F00B         	goto	l5149
 11554   001678                     u5170:
 11555   001678                     l5143:
 11556                           
 11557                           ;color.c: 192:             return 6;
 11558   001678  0E00               	movlw	0
 11559   00167A  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11560   00167C  0E06               	movlw	6
 11561   00167E  6E4B               	movwf	?_Colour_decider^0,c
 11562   001680  EF9A  F00C         	goto	l70
 11563   001684                     l5149:
 11564                           
 11565                           ;color.c: 195:             return 5;
 11566   001684  0E00               	movlw	0
 11567   001686  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11568   001688  0E05               	movlw	5
 11569   00168A  6E4B               	movwf	?_Colour_decider^0,c
 11570   00168C  EF9A  F00C         	goto	l70
 11571   001690                     l5153:
 11572   001690  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11573   001694  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11574   001698  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11575   00169C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11576   0016A0  0E00               	movlw	0
 11577   0016A2  6E2E               	movwf	___flge@ff2^0,c
 11578   0016A4  0E00               	movlw	0
 11579   0016A6  6E2F               	movwf	(___flge@ff2+1)^0,c
 11580   0016A8  0EA2               	movlw	162
 11581   0016AA  6E30               	movwf	(___flge@ff2+2)^0,c
 11582   0016AC  0E42               	movlw	66
 11583   0016AE  6E31               	movwf	(___flge@ff2+3)^0,c
 11584   0016B0  EC31  F024         	call	___flge	;wreg free
 11585   0016B4  A0D8               	btfss	status,0,c
 11586   0016B6  EF5F  F00B         	goto	u5181
 11587   0016BA  EF61  F00B         	goto	u5180
 11588   0016BE                     u5181:
 11589   0016BE  EF9B  F00B         	goto	l5169
 11590   0016C2                     u5180:
 11591   0016C2  0E00               	movlw	0
 11592   0016C4  6E2A               	movwf	___flge@ff1^0,c
 11593   0016C6  0E00               	movlw	0
 11594   0016C8  6E2B               	movwf	(___flge@ff1+1)^0,c
 11595   0016CA  0EE6               	movlw	230
 11596   0016CC  6E2C               	movwf	(___flge@ff1+2)^0,c
 11597   0016CE  0E42               	movlw	66
 11598   0016D0  6E2D               	movwf	(___flge@ff1+3)^0,c
 11599   0016D2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11600   0016D6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11601   0016DA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11602   0016DE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11603   0016E2  EC31  F024         	call	___flge	;wreg free
 11604   0016E6  A0D8               	btfss	status,0,c
 11605   0016E8  EF78  F00B         	goto	u5191
 11606   0016EC  EF7A  F00B         	goto	u5190
 11607   0016F0                     u5191:
 11608   0016F0  EF9B  F00B         	goto	l5169
 11609   0016F4                     u5190:
 11610   0016F4                     
 11611                           ;color.c: 201:         if(0.15<=rel->B){
 11612   0016F4  EE20 F008          	lfsr	2,8
 11613   0016F8  504D               	movf	Colour_decider@rel^0,w,c
 11614   0016FA  26D9               	addwf	fsr2l,f,c
 11615   0016FC  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11616   0016FE  22DA               	addwfc	fsr2h,f,c
 11617   001700  CFDE F02A          	movff	postinc2,___flge@ff1
 11618   001704  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11619   001708  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11620   00170C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11621   001710  0E9A               	movlw	154
 11622   001712  6E2E               	movwf	___flge@ff2^0,c
 11623   001714  0E99               	movlw	153
 11624   001716  6E2F               	movwf	(___flge@ff2+1)^0,c
 11625   001718  0E19               	movlw	25
 11626   00171A  6E30               	movwf	(___flge@ff2+2)^0,c
 11627   00171C  0E3E               	movlw	62
 11628   00171E  6E31               	movwf	(___flge@ff2+3)^0,c
 11629   001720  EC31  F024         	call	___flge	;wreg free
 11630   001724  A0D8               	btfss	status,0,c
 11631   001726  EF97  F00B         	goto	u5201
 11632   00172A  EF99  F00B         	goto	u5200
 11633   00172E                     u5201:
 11634   00172E  EF3C  F00B         	goto	l5143
 11635   001732                     u5200:
 11636   001732  EFBE  F00A         	goto	l5119
 11637   001736                     l5169:
 11638   001736  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11639   00173A  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11640   00173E  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11641   001742  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11642   001746  0E00               	movlw	0
 11643   001748  6E2E               	movwf	___flge@ff2^0,c
 11644   00174A  0E00               	movlw	0
 11645   00174C  6E2F               	movwf	(___flge@ff2+1)^0,c
 11646   00174E  0EF0               	movlw	240
 11647   001750  6E30               	movwf	(___flge@ff2+2)^0,c
 11648   001752  0E41               	movlw	65
 11649   001754  6E31               	movwf	(___flge@ff2+3)^0,c
 11650   001756  EC31  F024         	call	___flge	;wreg free
 11651   00175A  A0D8               	btfss	status,0,c
 11652   00175C  EFB2  F00B         	goto	u5211
 11653   001760  EFB4  F00B         	goto	u5210
 11654   001764                     u5211:
 11655   001764  EFCD  F00B         	goto	l5173
 11656   001768                     u5210:
 11657   001768  0E00               	movlw	0
 11658   00176A  6E2A               	movwf	___flge@ff1^0,c
 11659   00176C  0E00               	movlw	0
 11660   00176E  6E2B               	movwf	(___flge@ff1+1)^0,c
 11661   001770  0E68               	movlw	104
 11662   001772  6E2C               	movwf	(___flge@ff1+2)^0,c
 11663   001774  0E42               	movlw	66
 11664   001776  6E2D               	movwf	(___flge@ff1+3)^0,c
 11665   001778  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11666   00177C  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11667   001780  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11668   001784  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11669   001788  EC31  F024         	call	___flge	;wreg free
 11670   00178C  B0D8               	btfsc	status,0,c
 11671   00178E  EFCB  F00B         	goto	u5221
 11672   001792  EFCD  F00B         	goto	u5220
 11673   001796                     u5221:
 11674   001796  EFBE  F00A         	goto	l5119
 11675   00179A                     u5220:
 11676   00179A                     l5173:
 11677   00179A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11678   00179E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11679   0017A2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11680   0017A6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11681   0017AA  0E00               	movlw	0
 11682   0017AC  6E2E               	movwf	___flge@ff2^0,c
 11683   0017AE  0E00               	movlw	0
 11684   0017B0  6E2F               	movwf	(___flge@ff2+1)^0,c
 11685   0017B2  0EF0               	movlw	240
 11686   0017B4  6E30               	movwf	(___flge@ff2+2)^0,c
 11687   0017B6  0E42               	movlw	66
 11688   0017B8  6E31               	movwf	(___flge@ff2+3)^0,c
 11689   0017BA  EC31  F024         	call	___flge	;wreg free
 11690   0017BE  A0D8               	btfss	status,0,c
 11691   0017C0  EFE4  F00B         	goto	u5231
 11692   0017C4  EFE6  F00B         	goto	u5230
 11693   0017C8                     u5231:
 11694   0017C8  EF01  F00C         	goto	l5183
 11695   0017CC                     u5230:
 11696   0017CC  0E00               	movlw	0
 11697   0017CE  6E2A               	movwf	___flge@ff1^0,c
 11698   0017D0  0E00               	movlw	0
 11699   0017D2  6E2B               	movwf	(___flge@ff1+1)^0,c
 11700   0017D4  0E5C               	movlw	92
 11701   0017D6  6E2C               	movwf	(___flge@ff1+2)^0,c
 11702   0017D8  0E43               	movlw	67
 11703   0017DA  6E2D               	movwf	(___flge@ff1+3)^0,c
 11704   0017DC  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11705   0017E0  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11706   0017E4  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11707   0017E8  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11708   0017EC  EC31  F024         	call	___flge	;wreg free
 11709   0017F0  A0D8               	btfss	status,0,c
 11710   0017F2  EFFD  F00B         	goto	u5241
 11711   0017F6  EFFF  F00B         	goto	u5240
 11712   0017FA                     u5241:
 11713   0017FA  EF01  F00C         	goto	l5183
 11714   0017FE                     u5240:
 11715   0017FE  EFBE  F00A         	goto	l5119
 11716   001802                     l5183:
 11717   001802  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 11718   001806  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 11719   00180A  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 11720   00180E  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 11721   001812  0E00               	movlw	0
 11722   001814  6E2E               	movwf	___flge@ff2^0,c
 11723   001816  0E00               	movlw	0
 11724   001818  6E2F               	movwf	(___flge@ff2+1)^0,c
 11725   00181A  0E60               	movlw	96
 11726   00181C  6E30               	movwf	(___flge@ff2+2)^0,c
 11727   00181E  0E41               	movlw	65
 11728   001820  6E31               	movwf	(___flge@ff2+3)^0,c
 11729   001822  EC31  F024         	call	___flge	;wreg free
 11730   001826  A0D8               	btfss	status,0,c
 11731   001828  EF18  F00C         	goto	u5251
 11732   00182C  EF1A  F00C         	goto	u5250
 11733   001830                     u5251:
 11734   001830  EF96  F00C         	goto	l5209
 11735   001834                     u5250:
 11736   001834  0E00               	movlw	0
 11737   001836  6E2A               	movwf	___flge@ff1^0,c
 11738   001838  0E00               	movlw	0
 11739   00183A  6E2B               	movwf	(___flge@ff1+1)^0,c
 11740   00183C  0E98               	movlw	152
 11741   00183E  6E2C               	movwf	(___flge@ff1+2)^0,c
 11742   001840  0E41               	movlw	65
 11743   001842  6E2D               	movwf	(___flge@ff1+3)^0,c
 11744   001844  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 11745   001848  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 11746   00184C  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 11747   001850  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 11748   001854  EC31  F024         	call	___flge	;wreg free
 11749   001858  A0D8               	btfss	status,0,c
 11750   00185A  EF31  F00C         	goto	u5261
 11751   00185E  EF33  F00C         	goto	u5260
 11752   001862                     u5261:
 11753   001862  EF96  F00C         	goto	l5209
 11754   001866                     u5260:
 11755   001866                     
 11756                           ;color.c: 216:         if ((0.20<=rel->R)&(rel->R<=0.23)){
 11757   001866  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11758   00186A  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11759   00186E  CFDE F02A          	movff	postinc2,___flge@ff1
 11760   001872  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11761   001876  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11762   00187A  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11763   00187E  0ECD               	movlw	205
 11764   001880  6E2E               	movwf	___flge@ff2^0,c
 11765   001882  0ECC               	movlw	204
 11766   001884  6E2F               	movwf	(___flge@ff2+1)^0,c
 11767   001886  0E4C               	movlw	76
 11768   001888  6E30               	movwf	(___flge@ff2+2)^0,c
 11769   00188A  0E3E               	movlw	62
 11770   00188C  6E31               	movwf	(___flge@ff2+3)^0,c
 11771   00188E  EC31  F024         	call	___flge	;wreg free
 11772   001892  A0D8               	btfss	status,0,c
 11773   001894  EF4E  F00C         	goto	u5271
 11774   001898  EF50  F00C         	goto	u5270
 11775   00189C                     u5271:
 11776   00189C  EF6F  F00C         	goto	l5197
 11777   0018A0                     u5270:
 11778   0018A0  0E1F               	movlw	31
 11779   0018A2  6E2A               	movwf	___flge@ff1^0,c
 11780   0018A4  0E85               	movlw	133
 11781   0018A6  6E2B               	movwf	(___flge@ff1+1)^0,c
 11782   0018A8  0E6B               	movlw	107
 11783   0018AA  6E2C               	movwf	(___flge@ff1+2)^0,c
 11784   0018AC  0E3E               	movlw	62
 11785   0018AE  6E2D               	movwf	(___flge@ff1+3)^0,c
 11786   0018B0  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 11787   0018B4  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 11788   0018B8  CFDE F02E          	movff	postinc2,___flge@ff2
 11789   0018BC  CFDE F02F          	movff	postinc2,___flge@ff2+1
 11790   0018C0  CFDE F030          	movff	postinc2,___flge@ff2+2
 11791   0018C4  CFDE F031          	movff	postinc2,___flge@ff2+3
 11792   0018C8  EC31  F024         	call	___flge	;wreg free
 11793   0018CC  A0D8               	btfss	status,0,c
 11794   0018CE  EF6B  F00C         	goto	u5281
 11795   0018D2  EF6D  F00C         	goto	u5280
 11796   0018D6                     u5281:
 11797   0018D6  EF6F  F00C         	goto	l5197
 11798   0018DA                     u5280:
 11799   0018DA  EF5E  F008         	goto	l5061
 11800   0018DE                     l5197:
 11801   0018DE  EE20 F008          	lfsr	2,8
 11802   0018E2  504D               	movf	Colour_decider@rel^0,w,c
 11803   0018E4  26D9               	addwf	fsr2l,f,c
 11804   0018E6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 11805   0018E8  22DA               	addwfc	fsr2h,f,c
 11806   0018EA  CFDE F02A          	movff	postinc2,___flge@ff1
 11807   0018EE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 11808   0018F2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 11809   0018F6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 11810   0018FA  0E9A               	movlw	154
 11811   0018FC  6E2E               	movwf	___flge@ff2^0,c
 11812   0018FE  0E99               	movlw	153
 11813   001900  6E2F               	movwf	(___flge@ff2+1)^0,c
 11814   001902  0E19               	movlw	25
 11815   001904  6E30               	movwf	(___flge@ff2+2)^0,c
 11816   001906  0E3E               	movlw	62
 11817   001908  6E31               	movwf	(___flge@ff2+3)^0,c
 11818   00190A  EC31  F024         	call	___flge	;wreg free
 11819   00190E  A0D8               	btfss	status,0,c
 11820   001910  EF8C  F00C         	goto	u5291
 11821   001914  EF8E  F00C         	goto	u5290
 11822   001918                     u5291:
 11823   001918  EF90  F00C         	goto	l5205
 11824   00191C                     u5290:
 11825   00191C  EFBE  F00A         	goto	l5119
 11826   001920                     l5205:
 11827                           
 11828                           ;color.c: 223:             return 7;
 11829   001920  0E00               	movlw	0
 11830   001922  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11831   001924  0E07               	movlw	7
 11832   001926  6E4B               	movwf	?_Colour_decider^0,c
 11833   001928  EF9A  F00C         	goto	l70
 11834   00192C                     l5209:
 11835                           
 11836                           ;color.c: 227:         return 10;
 11837   00192C  0E00               	movlw	0
 11838   00192E  6E4C               	movwf	(?_Colour_decider+1)^0,c
 11839   001930  0E0A               	movlw	10
 11840   001932  6E4B               	movwf	?_Colour_decider^0,c
 11841   001934                     l70:
 11842   001934  0012               	return		;funcret
 11843   001936                     __end_of_Colour_decider:
 11844                           	callstack 0
 11845                           
 11846 ;; *************** function ___xxtofl *****************
 11847 ;; Defined at:
 11848 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 11849 ;; Parameters:    Size  Location     Type
 11850 ;;  sign            1    wreg     unsigned char 
 11851 ;;  val             4    0[COMRAM] long 
 11852 ;; Auto vars:     Size  Location     Type
 11853 ;;  sign            1    8[COMRAM] unsigned char 
 11854 ;;  arg             4   10[COMRAM] unsigned long 
 11855 ;;  exp             1    9[COMRAM] unsigned char 
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  4    0[COMRAM] unsigned char 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11866 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11867 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11868 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11869 ;;Total ram usage:       14 bytes
 11870 ;; Hardware stack levels used: 1
 11871 ;; Hardware stack levels required when called: 1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_colour_rel
 11876 ;;		_Colour_decider
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           	psect	text66
 11881   004150                     __ptext66:
 11882                           	callstack 0
 11883   004150                     ___xxtofl:
 11884                           	callstack 28
 11885                           
 11886                           ;incstack = 0
 11887                           ;___xxtofl@sign stored from wreg
 11888   004150  6E09               	movwf	___xxtofl@sign^0,c
 11889   004152  5009               	movf	___xxtofl@sign^0,w,c
 11890   004154  B4D8               	btfsc	status,2,c
 11891   004156  EFAF  F020         	goto	u4861
 11892   00415A  EFB1  F020         	goto	u4860
 11893   00415E                     u4861:
 11894   00415E  EFD3  F020         	goto	l1253
 11895   004162                     u4860:
 11896   004162  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 11897   004164  EFB8  F020         	goto	u4870
 11898   004168  EFB6  F020         	goto	u4871
 11899   00416C                     u4871:
 11900   00416C  EFD3  F020         	goto	l1253
 11901   004170                     u4870:
 11902   004170  C001  F005         	movff	___xxtofl@val,??___xxtofl
 11903   004174  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 11904   004178  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 11905   00417C  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 11906   004180  1E05               	comf	??___xxtofl^0,f,c
 11907   004182  1E06               	comf	(??___xxtofl+1)^0,f,c
 11908   004184  1E07               	comf	(??___xxtofl+2)^0,f,c
 11909   004186  1E08               	comf	(??___xxtofl+3)^0,f,c
 11910   004188  2A05               	incf	??___xxtofl^0,f,c
 11911   00418A  0E00               	movlw	0
 11912   00418C  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11913   00418E  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11914   004190  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11915   004192  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 11916   004196  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 11917   00419A  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 11918   00419E  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 11919   0041A2  EFDB  F020         	goto	l4931
 11920   0041A6                     l1253:
 11921   0041A6  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 11922   0041AA  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 11923   0041AE  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 11924   0041B2  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 11925   0041B6                     l4931:
 11926   0041B6  5001               	movf	___xxtofl@val^0,w,c
 11927   0041B8  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11928   0041BA  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11929   0041BC  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11930   0041BE  A4D8               	btfss	status,2,c
 11931   0041C0  EFE4  F020         	goto	u4881
 11932   0041C4  EFE6  F020         	goto	u4880
 11933   0041C8                     u4881:
 11934   0041C8  EFF0  F020         	goto	l4937
 11935   0041CC                     u4880:
 11936   0041CC  0E00               	movlw	0
 11937   0041CE  6E01               	movwf	?___xxtofl^0,c
 11938   0041D0  0E00               	movlw	0
 11939   0041D2  6E02               	movwf	(?___xxtofl+1)^0,c
 11940   0041D4  0E00               	movlw	0
 11941   0041D6  6E03               	movwf	(?___xxtofl+2)^0,c
 11942   0041D8  0E00               	movlw	0
 11943   0041DA  6E04               	movwf	(?___xxtofl+3)^0,c
 11944   0041DC  EF81  F021         	goto	l1256
 11945   0041E0                     l4937:
 11946   0041E0  0E96               	movlw	150
 11947   0041E2  6E0A               	movwf	___xxtofl@exp^0,c
 11948   0041E4  EFFA  F020         	goto	l4941
 11949   0041E8                     l4939:
 11950   0041E8  2A0A               	incf	___xxtofl@exp^0,f,c
 11951   0041EA  90D8               	bcf	status,0,c
 11952   0041EC  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11953   0041EE  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11954   0041F0  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11955   0041F2  320B               	rrcf	___xxtofl@arg^0,f,c
 11956   0041F4                     l4941:
 11957   0041F4  0E00               	movlw	0
 11958   0041F6  140B               	andwf	___xxtofl@arg^0,w,c
 11959   0041F8  6E05               	movwf	??___xxtofl^0,c
 11960   0041FA  0E00               	movlw	0
 11961   0041FC  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11962   0041FE  6E06               	movwf	(??___xxtofl+1)^0,c
 11963   004200  0E00               	movlw	0
 11964   004202  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11965   004204  6E07               	movwf	(??___xxtofl+2)^0,c
 11966   004206  0EFE               	movlw	254
 11967   004208  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11968   00420A  6E08               	movwf	(??___xxtofl+3)^0,c
 11969   00420C  5005               	movf	??___xxtofl^0,w,c
 11970   00420E  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11971   004210  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11972   004212  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11973   004214  A4D8               	btfss	status,2,c
 11974   004216  EF0F  F021         	goto	u4891
 11975   00421A  EF11  F021         	goto	u4890
 11976   00421E                     u4891:
 11977   00421E  EFF4  F020         	goto	l4939
 11978   004222                     u4890:
 11979   004222  EF1F  F021         	goto	l1260
 11980   004226                     l4943:
 11981   004226  2A0A               	incf	___xxtofl@exp^0,f,c
 11982   004228  0E01               	movlw	1
 11983   00422A  260B               	addwf	___xxtofl@arg^0,f,c
 11984   00422C  0E00               	movlw	0
 11985   00422E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11986   004230  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11987   004232  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11988   004234  90D8               	bcf	status,0,c
 11989   004236  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11990   004238  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11991   00423A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11992   00423C  320B               	rrcf	___xxtofl@arg^0,f,c
 11993   00423E                     l1260:
 11994   00423E  0E00               	movlw	0
 11995   004240  140B               	andwf	___xxtofl@arg^0,w,c
 11996   004242  6E05               	movwf	??___xxtofl^0,c
 11997   004244  0E00               	movlw	0
 11998   004246  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11999   004248  6E06               	movwf	(??___xxtofl+1)^0,c
 12000   00424A  0E00               	movlw	0
 12001   00424C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12002   00424E  6E07               	movwf	(??___xxtofl+2)^0,c
 12003   004250  0EFF               	movlw	255
 12004   004252  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12005   004254  6E08               	movwf	(??___xxtofl+3)^0,c
 12006   004256  5005               	movf	??___xxtofl^0,w,c
 12007   004258  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12008   00425A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12009   00425C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12010   00425E  A4D8               	btfss	status,2,c
 12011   004260  EF34  F021         	goto	u4901
 12012   004264  EF36  F021         	goto	u4900
 12013   004268                     u4901:
 12014   004268  EF13  F021         	goto	l4943
 12015   00426C                     u4900:
 12016   00426C  EF3E  F021         	goto	l4951
 12017   004270                     l4949:
 12018   004270  060A               	decf	___xxtofl@exp^0,f,c
 12019   004272  90D8               	bcf	status,0,c
 12020   004274  360B               	rlcf	___xxtofl@arg^0,f,c
 12021   004276  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12022   004278  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12023   00427A  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12024   00427C                     l4951:
 12025   00427C  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12026   00427E  EF43  F021         	goto	u4911
 12027   004282  EF45  F021         	goto	u4910
 12028   004286                     u4911:
 12029   004286  EF4D  F021         	goto	l1267
 12030   00428A                     u4910:
 12031   00428A  0E02               	movlw	2
 12032   00428C  600A               	cpfslt	___xxtofl@exp^0,c
 12033   00428E  EF4B  F021         	goto	u4921
 12034   004292  EF4D  F021         	goto	u4920
 12035   004296                     u4921:
 12036   004296  EF38  F021         	goto	l4949
 12037   00429A                     u4920:
 12038   00429A                     l1267:
 12039   00429A  B00A               	btfsc	___xxtofl@exp^0,0,c
 12040   00429C  EF52  F021         	goto	u4931
 12041   0042A0  EF54  F021         	goto	u4930
 12042   0042A4                     u4931:
 12043   0042A4  EF55  F021         	goto	l4957
 12044   0042A8                     u4930:
 12045   0042A8  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12046   0042AA                     l4957:
 12047   0042AA  90D8               	bcf	status,0,c
 12048   0042AC  320A               	rrcf	___xxtofl@exp^0,f,c
 12049   0042AE  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 12050   0042B2  6A06               	clrf	(??___xxtofl+1)^0,c
 12051   0042B4  6A07               	clrf	(??___xxtofl+2)^0,c
 12052   0042B6  6A08               	clrf	(??___xxtofl+3)^0,c
 12053   0042B8  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 12054   0042BC  6A07               	clrf	(??___xxtofl+2)^0,c
 12055   0042BE  6A06               	clrf	(??___xxtofl+1)^0,c
 12056   0042C0  6A05               	clrf	??___xxtofl^0,c
 12057   0042C2  5005               	movf	??___xxtofl^0,w,c
 12058   0042C4  120B               	iorwf	___xxtofl@arg^0,f,c
 12059   0042C6  5006               	movf	(??___xxtofl+1)^0,w,c
 12060   0042C8  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12061   0042CA  5007               	movf	(??___xxtofl+2)^0,w,c
 12062   0042CC  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12063   0042CE  5008               	movf	(??___xxtofl+3)^0,w,c
 12064   0042D0  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12065   0042D2  5009               	movf	___xxtofl@sign^0,w,c
 12066   0042D4  B4D8               	btfsc	status,2,c
 12067   0042D6  EF6F  F021         	goto	u4941
 12068   0042DA  EF71  F021         	goto	u4940
 12069   0042DE                     u4941:
 12070   0042DE  EF79  F021         	goto	l4967
 12071   0042E2                     u4940:
 12072   0042E2  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 12073   0042E4  EF78  F021         	goto	u4950
 12074   0042E8  EF76  F021         	goto	u4951
 12075   0042EC                     u4951:
 12076   0042EC  EF79  F021         	goto	l4967
 12077   0042F0                     u4950:
 12078   0042F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12079   0042F2                     l4967:
 12080   0042F2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 12081   0042F6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 12082   0042FA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 12083   0042FE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 12084   004302                     l1256:
 12085   004302  0012               	return		;funcret
 12086   004304                     __end_of___xxtofl:
 12087                           	callstack 0
 12088                           
 12089 ;; *************** function ___flsub *****************
 12090 ;; Defined at:
 12091 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12092 ;; Parameters:    Size  Location     Type
 12093 ;;  b               4   41[COMRAM] unsigned char 
 12094 ;;  a               4   45[COMRAM] unsigned char 
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  4   41[COMRAM] unsigned char 
 12099 ;; Registers used:
 12100 ;;		wreg, status,2, status,0, cstack
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12106 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12109 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12110 ;;Total ram usage:        8 bytes
 12111 ;; Hardware stack levels used: 1
 12112 ;; Hardware stack levels required when called: 2
 12113 ;; This function calls:
 12114 ;;		___fladd
 12115 ;; This function is called by:
 12116 ;;		_Colour_decider
 12117 ;;		_efgtoa
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text67
 12122   00580E                     __ptext67:
 12123                           	callstack 0
 12124   00580E                     ___flsub:
 12125                           	callstack 24
 12126   00580E  0E00               	movlw	0
 12127   005810  1A2E               	xorwf	___flsub@a^0,f,c
 12128   005812  0E00               	movlw	0
 12129   005814  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 12130   005816  0E00               	movlw	0
 12131   005818  1A30               	xorwf	(___flsub@a+2)^0,f,c
 12132   00581A  0E80               	movlw	128
 12133   00581C  1A31               	xorwf	(___flsub@a+3)^0,f,c
 12134   00581E  C02A  F001         	movff	___flsub@b,___fladd@b
 12135   005822  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 12136   005826  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 12137   00582A  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 12138   00582E  C02E  F005         	movff	___flsub@a,___fladd@a
 12139   005832  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 12140   005836  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 12141   00583A  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 12142   00583E  EC1B  F014         	call	___fladd	;wreg free
 12143   005842  C001  F02A         	movff	?___fladd,?___flsub
 12144   005846  C002  F02B         	movff	?___fladd+1,?___flsub+1
 12145   00584A  C003  F02C         	movff	?___fladd+2,?___flsub+2
 12146   00584E  C004  F02D         	movff	?___fladd+3,?___flsub+3
 12147   005852  0012               	return		;funcret
 12148   005854                     __end_of___flsub:
 12149                           	callstack 0
 12150                           
 12151 ;; *************** function ___fladd *****************
 12152 ;; Defined at:
 12153 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 12154 ;; Parameters:    Size  Location     Type
 12155 ;;  b               4    0[COMRAM] unsigned char 
 12156 ;;  a               4    4[COMRAM] unsigned char 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  grs             1   15[COMRAM] unsigned char 
 12159 ;;  bexp            1   14[COMRAM] unsigned char 
 12160 ;;  aexp            1   13[COMRAM] unsigned char 
 12161 ;;  signs           1   12[COMRAM] unsigned char 
 12162 ;; Return value:  Size  Location     Type
 12163 ;;                  4    0[COMRAM] unsigned char 
 12164 ;; Registers used:
 12165 ;;		wreg, status,2, status,0
 12166 ;; Tracked objects:
 12167 ;;		On entry : 0/0
 12168 ;;		On exit  : 0/0
 12169 ;;		Unchanged: 0/0
 12170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12171 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12172 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12174 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12175 ;;Total ram usage:       16 bytes
 12176 ;; Hardware stack levels used: 1
 12177 ;; Hardware stack levels required when called: 1
 12178 ;; This function calls:
 12179 ;;		Nothing
 12180 ;; This function is called by:
 12181 ;;		_colour_rel
 12182 ;;		_Colour_decider
 12183 ;;		___flsub
 12184 ;;		_efgtoa
 12185 ;; This function uses a non-reentrant model
 12186 ;;
 12187                           
 12188                           	psect	text68
 12189   002836                     __ptext68:
 12190                           	callstack 0
 12191   002836                     ___fladd:
 12192                           	callstack 24
 12193   002836  5004               	movf	(___fladd@b+3)^0,w,c
 12194   002838  0B80               	andlw	128
 12195   00283A  6E0D               	movwf	___fladd@signs^0,c
 12196   00283C  5004               	movf	(___fladd@b+3)^0,w,c
 12197   00283E  2404               	addwf	(___fladd@b+3)^0,w,c
 12198   002840  6E0F               	movwf	___fladd@bexp^0,c
 12199   002842  AE03               	btfss	(___fladd@b+2)^0,7,c
 12200   002844  EF26  F014         	goto	u2861
 12201   002848  EF28  F014         	goto	u2860
 12202   00284C                     u2861:
 12203   00284C  EF29  F014         	goto	l3599
 12204   002850                     u2860:
 12205   002850  800F               	bsf	___fladd@bexp^0,0,c
 12206   002852                     l3599:
 12207   002852  500F               	movf	___fladd@bexp^0,w,c
 12208   002854  B4D8               	btfsc	status,2,c
 12209   002856  EF2F  F014         	goto	u2871
 12210   00285A  EF31  F014         	goto	u2870
 12211   00285E                     u2871:
 12212   00285E  EF46  F014         	goto	l3609
 12213   002862                     u2870:
 12214   002862  280F               	incf	___fladd@bexp^0,w,c
 12215   002864  A4D8               	btfss	status,2,c
 12216   002866  EF37  F014         	goto	u2881
 12217   00286A  EF39  F014         	goto	u2880
 12218   00286E                     u2881:
 12219   00286E  EF41  F014         	goto	l3605
 12220   002872                     u2880:
 12221   002872  0E00               	movlw	0
 12222   002874  6E01               	movwf	___fladd@b^0,c
 12223   002876  0E00               	movlw	0
 12224   002878  6E02               	movwf	(___fladd@b+1)^0,c
 12225   00287A  0E00               	movlw	0
 12226   00287C  6E03               	movwf	(___fladd@b+2)^0,c
 12227   00287E  0E00               	movlw	0
 12228   002880  6E04               	movwf	(___fladd@b+3)^0,c
 12229   002882                     l3605:
 12230   002882  8E03               	bsf	(___fladd@b+2)^0,7,c
 12231   002884  0E00               	movlw	0
 12232   002886  6E04               	movwf	(___fladd@b+3)^0,c
 12233   002888  EF4E  F014         	goto	l3611
 12234   00288C                     l3609:
 12235   00288C  0E00               	movlw	0
 12236   00288E  6E01               	movwf	___fladd@b^0,c
 12237   002890  0E00               	movlw	0
 12238   002892  6E02               	movwf	(___fladd@b+1)^0,c
 12239   002894  0E00               	movlw	0
 12240   002896  6E03               	movwf	(___fladd@b+2)^0,c
 12241   002898  0E00               	movlw	0
 12242   00289A  6E04               	movwf	(___fladd@b+3)^0,c
 12243   00289C                     l3611:
 12244   00289C  5008               	movf	(___fladd@a+3)^0,w,c
 12245   00289E  0B80               	andlw	128
 12246   0028A0  6E0E               	movwf	___fladd@aexp^0,c
 12247   0028A2  500D               	movf	___fladd@signs^0,w,c
 12248   0028A4  180E               	xorwf	___fladd@aexp^0,w,c
 12249   0028A6  B4D8               	btfsc	status,2,c
 12250   0028A8  EF58  F014         	goto	u2891
 12251   0028AC  EF5A  F014         	goto	u2890
 12252   0028B0                     u2891:
 12253   0028B0  EF5B  F014         	goto	l3617
 12254   0028B4                     u2890:
 12255   0028B4  8C0D               	bsf	___fladd@signs^0,6,c
 12256   0028B6                     l3617:
 12257   0028B6  5008               	movf	(___fladd@a+3)^0,w,c
 12258   0028B8  2408               	addwf	(___fladd@a+3)^0,w,c
 12259   0028BA  6E0E               	movwf	___fladd@aexp^0,c
 12260   0028BC  AE07               	btfss	(___fladd@a+2)^0,7,c
 12261   0028BE  EF63  F014         	goto	u2901
 12262   0028C2  EF65  F014         	goto	u2900
 12263   0028C6                     u2901:
 12264   0028C6  EF66  F014         	goto	l3623
 12265   0028CA                     u2900:
 12266   0028CA  800E               	bsf	___fladd@aexp^0,0,c
 12267   0028CC                     l3623:
 12268   0028CC  500E               	movf	___fladd@aexp^0,w,c
 12269   0028CE  B4D8               	btfsc	status,2,c
 12270   0028D0  EF6C  F014         	goto	u2911
 12271   0028D4  EF6E  F014         	goto	u2910
 12272   0028D8                     u2911:
 12273   0028D8  EF83  F014         	goto	l3633
 12274   0028DC                     u2910:
 12275   0028DC  280E               	incf	___fladd@aexp^0,w,c
 12276   0028DE  A4D8               	btfss	status,2,c
 12277   0028E0  EF74  F014         	goto	u2921
 12278   0028E4  EF76  F014         	goto	u2920
 12279   0028E8                     u2921:
 12280   0028E8  EF7E  F014         	goto	l3629
 12281   0028EC                     u2920:
 12282   0028EC  0E00               	movlw	0
 12283   0028EE  6E05               	movwf	___fladd@a^0,c
 12284   0028F0  0E00               	movlw	0
 12285   0028F2  6E06               	movwf	(___fladd@a+1)^0,c
 12286   0028F4  0E00               	movlw	0
 12287   0028F6  6E07               	movwf	(___fladd@a+2)^0,c
 12288   0028F8  0E00               	movlw	0
 12289   0028FA  6E08               	movwf	(___fladd@a+3)^0,c
 12290   0028FC                     l3629:
 12291   0028FC  8E07               	bsf	(___fladd@a+2)^0,7,c
 12292   0028FE  0E00               	movlw	0
 12293   002900  6E08               	movwf	(___fladd@a+3)^0,c
 12294   002902  EF8B  F014         	goto	l3635
 12295   002906                     l3633:
 12296   002906  0E00               	movlw	0
 12297   002908  6E05               	movwf	___fladd@a^0,c
 12298   00290A  0E00               	movlw	0
 12299   00290C  6E06               	movwf	(___fladd@a+1)^0,c
 12300   00290E  0E00               	movlw	0
 12301   002910  6E07               	movwf	(___fladd@a+2)^0,c
 12302   002912  0E00               	movlw	0
 12303   002914  6E08               	movwf	(___fladd@a+3)^0,c
 12304   002916                     l3635:
 12305   002916  500F               	movf	___fladd@bexp^0,w,c
 12306   002918  5C0E               	subwf	___fladd@aexp^0,w,c
 12307   00291A  B0D8               	btfsc	status,0,c
 12308   00291C  EF92  F014         	goto	u2931
 12309   002920  EF94  F014         	goto	u2930
 12310   002924                     u2931:
 12311   002924  EFBB  F014         	goto	l3671
 12312   002928                     u2930:
 12313   002928  AC0D               	btfss	___fladd@signs^0,6,c
 12314   00292A  EF99  F014         	goto	u2941
 12315   00292E  EF9B  F014         	goto	u2940
 12316   002932                     u2941:
 12317   002932  EF9D  F014         	goto	l3641
 12318   002936                     u2940:
 12319   002936  0E80               	movlw	128
 12320   002938  1A0D               	xorwf	___fladd@signs^0,f,c
 12321   00293A                     l3641:
 12322   00293A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 12323   00293E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12324   002942  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 12325   002946  C001  F010         	movff	___fladd@b,___fladd@grs
 12326   00294A  C005  F001         	movff	___fladd@a,___fladd@b
 12327   00294E  C010  F005         	movff	___fladd@grs,___fladd@a
 12328   002952  C002  F010         	movff	___fladd@b+1,___fladd@grs
 12329   002956  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 12330   00295A  C010  F006         	movff	___fladd@grs,___fladd@a+1
 12331   00295E  C003  F010         	movff	___fladd@b+2,___fladd@grs
 12332   002962  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 12333   002966  C010  F007         	movff	___fladd@grs,___fladd@a+2
 12334   00296A  C004  F010         	movff	___fladd@b+3,___fladd@grs
 12335   00296E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 12336   002972  C010  F008         	movff	___fladd@grs,___fladd@a+3
 12337   002976                     l3671:
 12338   002976  0E00               	movlw	0
 12339   002978  6E10               	movwf	___fladd@grs^0,c
 12340   00297A  500F               	movf	___fladd@bexp^0,w,c
 12341   00297C  C00E  F009         	movff	___fladd@aexp,??___fladd
 12342   002980  6A0A               	clrf	(??___fladd+1)^0,c
 12343   002982  5E09               	subwf	??___fladd^0,f,c
 12344   002984  0E00               	movlw	0
 12345   002986  5A0A               	subwfb	(??___fladd+1)^0,f,c
 12346   002988  BE0A               	btfsc	(??___fladd+1)^0,7,c
 12347   00298A  EFD0  F014         	goto	u2951
 12348   00298E  500A               	movf	(??___fladd+1)^0,w,c
 12349   002990  E109               	bnz	u2950
 12350   002992  0E1A               	movlw	26
 12351   002994  5C09               	subwf	??___fladd^0,w,c
 12352   002996  A0D8               	btfss	status,0,c
 12353   002998  EFD0  F014         	goto	u2951
 12354   00299C  EFD2  F014         	goto	u2950
 12355   0029A0                     u2951:
 12356   0029A0  EF09  F015         	goto	l1127
 12357   0029A4                     u2950:
 12358   0029A4  5001               	movf	___fladd@b^0,w,c
 12359   0029A6  1002               	iorwf	(___fladd@b+1)^0,w,c
 12360   0029A8  1003               	iorwf	(___fladd@b+2)^0,w,c
 12361   0029AA  1004               	iorwf	(___fladd@b+3)^0,w,c
 12362   0029AC  A4D8               	btfss	status,2,c
 12363   0029AE  EFDB  F014         	goto	u2961
 12364   0029B2  EFDE  F014         	goto	u2960
 12365   0029B6                     u2961:
 12366   0029B6  0E01               	movlw	1
 12367   0029B8  EFDF  F014         	goto	u2970
 12368   0029BC                     u2960:
 12369   0029BC  0E00               	movlw	0
 12370   0029BE                     u2970:
 12371   0029BE  6E10               	movwf	___fladd@grs^0,c
 12372   0029C0  0E00               	movlw	0
 12373   0029C2  6E01               	movwf	___fladd@b^0,c
 12374   0029C4  0E00               	movlw	0
 12375   0029C6  6E02               	movwf	(___fladd@b+1)^0,c
 12376   0029C8  0E00               	movlw	0
 12377   0029CA  6E03               	movwf	(___fladd@b+2)^0,c
 12378   0029CC  0E00               	movlw	0
 12379   0029CE  6E04               	movwf	(___fladd@b+3)^0,c
 12380   0029D0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 12381   0029D4  EF12  F015         	goto	l1126
 12382   0029D8                     l1128:
 12383   0029D8  A010               	btfss	___fladd@grs^0,0,c
 12384   0029DA  EFF1  F014         	goto	u2981
 12385   0029DE  EFF3  F014         	goto	u2980
 12386   0029E2                     u2981:
 12387   0029E2  EFF9  F014         	goto	l3683
 12388   0029E6                     u2980:
 12389   0029E6  90D8               	bcf	status,0,c
 12390   0029E8  3010               	rrcf	___fladd@grs^0,w,c
 12391   0029EA  0901               	iorlw	1
 12392   0029EC  6E10               	movwf	___fladd@grs^0,c
 12393   0029EE  EFFB  F014         	goto	l3685
 12394   0029F2                     l3683:
 12395   0029F2  90D8               	bcf	status,0,c
 12396   0029F4  3210               	rrcf	___fladd@grs^0,f,c
 12397   0029F6                     l3685:
 12398   0029F6  A001               	btfss	___fladd@b^0,0,c
 12399   0029F8  EF00  F015         	goto	u2991
 12400   0029FC  EF02  F015         	goto	u2990
 12401   002A00                     u2991:
 12402   002A00  EF03  F015         	goto	l3689
 12403   002A04                     u2990:
 12404   002A04  8E10               	bsf	___fladd@grs^0,7,c
 12405   002A06                     l3689:
 12406   002A06  3404               	rlcf	(___fladd@b+3)^0,w,c
 12407   002A08  3204               	rrcf	(___fladd@b+3)^0,f,c
 12408   002A0A  3203               	rrcf	(___fladd@b+2)^0,f,c
 12409   002A0C  3202               	rrcf	(___fladd@b+1)^0,f,c
 12410   002A0E  3201               	rrcf	___fladd@b^0,f,c
 12411   002A10  2A0F               	incf	___fladd@bexp^0,f,c
 12412   002A12                     l1127:
 12413   002A12  500E               	movf	___fladd@aexp^0,w,c
 12414   002A14  5C0F               	subwf	___fladd@bexp^0,w,c
 12415   002A16  A0D8               	btfss	status,0,c
 12416   002A18  EF10  F015         	goto	u3001
 12417   002A1C  EF12  F015         	goto	u3000
 12418   002A20                     u3001:
 12419   002A20  EFEC  F014         	goto	l1128
 12420   002A24                     u3000:
 12421   002A24                     l1126:
 12422   002A24  BC0D               	btfsc	___fladd@signs^0,6,c
 12423   002A26  EF17  F015         	goto	u3011
 12424   002A2A  EF19  F015         	goto	u3010
 12425   002A2E                     u3011:
 12426   002A2E  EF59  F015         	goto	l3717
 12427   002A32                     u3010:
 12428   002A32  500F               	movf	___fladd@bexp^0,w,c
 12429   002A34  A4D8               	btfss	status,2,c
 12430   002A36  EF1F  F015         	goto	u3021
 12431   002A3A  EF21  F015         	goto	u3020
 12432   002A3E                     u3021:
 12433   002A3E  EF2B  F015         	goto	l3699
 12434   002A42                     u3020:
 12435   002A42  0E00               	movlw	0
 12436   002A44  6E01               	movwf	?___fladd^0,c
 12437   002A46  0E00               	movlw	0
 12438   002A48  6E02               	movwf	(?___fladd+1)^0,c
 12439   002A4A  0E00               	movlw	0
 12440   002A4C  6E03               	movwf	(?___fladd+2)^0,c
 12441   002A4E  0E00               	movlw	0
 12442   002A50  6E04               	movwf	(?___fladd+3)^0,c
 12443   002A52  EF7A  F016         	goto	l1135
 12444   002A56                     l3699:
 12445   002A56  5005               	movf	___fladd@a^0,w,c
 12446   002A58  2601               	addwf	___fladd@b^0,f,c
 12447   002A5A  5006               	movf	(___fladd@a+1)^0,w,c
 12448   002A5C  2202               	addwfc	(___fladd@b+1)^0,f,c
 12449   002A5E  5007               	movf	(___fladd@a+2)^0,w,c
 12450   002A60  2203               	addwfc	(___fladd@b+2)^0,f,c
 12451   002A62  5008               	movf	(___fladd@a+3)^0,w,c
 12452   002A64  2204               	addwfc	(___fladd@b+3)^0,f,c
 12453   002A66  A004               	btfss	(___fladd@b+3)^0,0,c
 12454   002A68  EF38  F015         	goto	u3031
 12455   002A6C  EF3A  F015         	goto	u3030
 12456   002A70                     u3031:
 12457   002A70  EFE6  F015         	goto	l3753
 12458   002A74                     u3030:
 12459   002A74  A010               	btfss	___fladd@grs^0,0,c
 12460   002A76  EF3F  F015         	goto	u3041
 12461   002A7A  EF41  F015         	goto	u3040
 12462   002A7E                     u3041:
 12463   002A7E  EF47  F015         	goto	l3707
 12464   002A82                     u3040:
 12465   002A82  90D8               	bcf	status,0,c
 12466   002A84  3010               	rrcf	___fladd@grs^0,w,c
 12467   002A86  0901               	iorlw	1
 12468   002A88  6E10               	movwf	___fladd@grs^0,c
 12469   002A8A  EF49  F015         	goto	l3709
 12470   002A8E                     l3707:
 12471   002A8E  90D8               	bcf	status,0,c
 12472   002A90  3210               	rrcf	___fladd@grs^0,f,c
 12473   002A92                     l3709:
 12474   002A92  A001               	btfss	___fladd@b^0,0,c
 12475   002A94  EF4E  F015         	goto	u3051
 12476   002A98  EF50  F015         	goto	u3050
 12477   002A9C                     u3051:
 12478   002A9C  EF51  F015         	goto	l3713
 12479   002AA0                     u3050:
 12480   002AA0  8E10               	bsf	___fladd@grs^0,7,c
 12481   002AA2                     l3713:
 12482   002AA2  3404               	rlcf	(___fladd@b+3)^0,w,c
 12483   002AA4  3204               	rrcf	(___fladd@b+3)^0,f,c
 12484   002AA6  3203               	rrcf	(___fladd@b+2)^0,f,c
 12485   002AA8  3202               	rrcf	(___fladd@b+1)^0,f,c
 12486   002AAA  3201               	rrcf	___fladd@b^0,f,c
 12487   002AAC  2A0F               	incf	___fladd@bexp^0,f,c
 12488   002AAE  EFE6  F015         	goto	l3753
 12489   002AB2                     l3717:
 12490   002AB2  5005               	movf	___fladd@a^0,w,c
 12491   002AB4  5C01               	subwf	___fladd@b^0,w,c
 12492   002AB6  5006               	movf	(___fladd@a+1)^0,w,c
 12493   002AB8  5802               	subwfb	(___fladd@b+1)^0,w,c
 12494   002ABA  5007               	movf	(___fladd@a+2)^0,w,c
 12495   002ABC  5803               	subwfb	(___fladd@b+2)^0,w,c
 12496   002ABE  5004               	movf	(___fladd@b+3)^0,w,c
 12497   002AC0  0A80               	xorlw	128
 12498   002AC2  6E09               	movwf	??___fladd^0,c
 12499   002AC4  5008               	movf	(___fladd@a+3)^0,w,c
 12500   002AC6  0A80               	xorlw	128
 12501   002AC8  5809               	subwfb	??___fladd^0,w,c
 12502   002ACA  B0D8               	btfsc	status,0,c
 12503   002ACC  EF6A  F015         	goto	u3061
 12504   002AD0  EF6C  F015         	goto	u3060
 12505   002AD4                     u3061:
 12506   002AD4  EF97  F015         	goto	l3727
 12507   002AD8                     u3060:
 12508   002AD8  5001               	movf	___fladd@b^0,w,c
 12509   002ADA  5C05               	subwf	___fladd@a^0,w,c
 12510   002ADC  6E09               	movwf	??___fladd^0,c
 12511   002ADE  5002               	movf	(___fladd@b+1)^0,w,c
 12512   002AE0  5806               	subwfb	(___fladd@a+1)^0,w,c
 12513   002AE2  6E0A               	movwf	(??___fladd+1)^0,c
 12514   002AE4  5003               	movf	(___fladd@b+2)^0,w,c
 12515   002AE6  5807               	subwfb	(___fladd@a+2)^0,w,c
 12516   002AE8  6E0B               	movwf	(??___fladd+2)^0,c
 12517   002AEA  5004               	movf	(___fladd@b+3)^0,w,c
 12518   002AEC  5808               	subwfb	(___fladd@a+3)^0,w,c
 12519   002AEE  6E0C               	movwf	(??___fladd+3)^0,c
 12520   002AF0  0EFF               	movlw	255
 12521   002AF2  2409               	addwf	??___fladd^0,w,c
 12522   002AF4  6E01               	movwf	___fladd@b^0,c
 12523   002AF6  0EFF               	movlw	255
 12524   002AF8  200A               	addwfc	(??___fladd+1)^0,w,c
 12525   002AFA  6E02               	movwf	(___fladd@b+1)^0,c
 12526   002AFC  0EFF               	movlw	255
 12527   002AFE  200B               	addwfc	(??___fladd+2)^0,w,c
 12528   002B00  6E03               	movwf	(___fladd@b+2)^0,c
 12529   002B02  0EFF               	movlw	255
 12530   002B04  200C               	addwfc	(??___fladd+3)^0,w,c
 12531   002B06  6E04               	movwf	(___fladd@b+3)^0,c
 12532   002B08  0E80               	movlw	128
 12533   002B0A  1A0D               	xorwf	___fladd@signs^0,f,c
 12534   002B0C  6C10               	negf	___fladd@grs^0,c
 12535   002B0E  5010               	movf	___fladd@grs^0,w,c
 12536   002B10  A4D8               	btfss	status,2,c
 12537   002B12  EF8D  F015         	goto	u3071
 12538   002B16  EF8F  F015         	goto	u3070
 12539   002B1A                     u3071:
 12540   002B1A  EF9F  F015         	goto	l1143
 12541   002B1E                     u3070:
 12542   002B1E  0E01               	movlw	1
 12543   002B20  2601               	addwf	___fladd@b^0,f,c
 12544   002B22  0E00               	movlw	0
 12545   002B24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12546   002B26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12547   002B28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12548   002B2A  EF9F  F015         	goto	l1143
 12549   002B2E                     l3727:
 12550   002B2E  5005               	movf	___fladd@a^0,w,c
 12551   002B30  5E01               	subwf	___fladd@b^0,f,c
 12552   002B32  5006               	movf	(___fladd@a+1)^0,w,c
 12553   002B34  5A02               	subwfb	(___fladd@b+1)^0,f,c
 12554   002B36  5007               	movf	(___fladd@a+2)^0,w,c
 12555   002B38  5A03               	subwfb	(___fladd@b+2)^0,f,c
 12556   002B3A  5008               	movf	(___fladd@a+3)^0,w,c
 12557   002B3C  5A04               	subwfb	(___fladd@b+3)^0,f,c
 12558   002B3E                     l1143:
 12559   002B3E  5001               	movf	___fladd@b^0,w,c
 12560   002B40  1002               	iorwf	(___fladd@b+1)^0,w,c
 12561   002B42  1003               	iorwf	(___fladd@b+2)^0,w,c
 12562   002B44  1004               	iorwf	(___fladd@b+3)^0,w,c
 12563   002B46  A4D8               	btfss	status,2,c
 12564   002B48  EFA8  F015         	goto	u3081
 12565   002B4C  EFAA  F015         	goto	u3080
 12566   002B50                     u3081:
 12567   002B50  EFDF  F015         	goto	l3751
 12568   002B54                     u3080:
 12569   002B54  5010               	movf	___fladd@grs^0,w,c
 12570   002B56  A4D8               	btfss	status,2,c
 12571   002B58  EFB0  F015         	goto	u3091
 12572   002B5C  EFB2  F015         	goto	u3090
 12573   002B60                     u3091:
 12574   002B60  EFDF  F015         	goto	l3751
 12575   002B64                     u3090:
 12576   002B64  0E00               	movlw	0
 12577   002B66  6E01               	movwf	?___fladd^0,c
 12578   002B68  0E00               	movlw	0
 12579   002B6A  6E02               	movwf	(?___fladd+1)^0,c
 12580   002B6C  0E00               	movlw	0
 12581   002B6E  6E03               	movwf	(?___fladd+2)^0,c
 12582   002B70  0E00               	movlw	0
 12583   002B72  6E04               	movwf	(?___fladd+3)^0,c
 12584   002B74  EF7A  F016         	goto	l1135
 12585   002B78                     l3735:
 12586   002B78  90D8               	bcf	status,0,c
 12587   002B7A  3601               	rlcf	___fladd@b^0,f,c
 12588   002B7C  3602               	rlcf	(___fladd@b+1)^0,f,c
 12589   002B7E  3603               	rlcf	(___fladd@b+2)^0,f,c
 12590   002B80  3604               	rlcf	(___fladd@b+3)^0,f,c
 12591   002B82  AE10               	btfss	___fladd@grs^0,7,c
 12592   002B84  EFC6  F015         	goto	u3101
 12593   002B88  EFC8  F015         	goto	u3100
 12594   002B8C                     u3101:
 12595   002B8C  EFC9  F015         	goto	l3741
 12596   002B90                     u3100:
 12597   002B90  8001               	bsf	___fladd@b^0,0,c
 12598   002B92                     l3741:
 12599   002B92  A010               	btfss	___fladd@grs^0,0,c
 12600   002B94  EFCE  F015         	goto	u3111
 12601   002B98  EFD0  F015         	goto	u3110
 12602   002B9C                     u3111:
 12603   002B9C  EFD4  F015         	goto	l3745
 12604   002BA0                     u3110:
 12605   002BA0  80D8               	bsf	status,0,c
 12606   002BA2  3610               	rlcf	___fladd@grs^0,f,c
 12607   002BA4  EFD6  F015         	goto	l3747
 12608   002BA8                     l3745:
 12609   002BA8  90D8               	bcf	status,0,c
 12610   002BAA  3610               	rlcf	___fladd@grs^0,f,c
 12611   002BAC                     l3747:
 12612   002BAC  500F               	movf	___fladd@bexp^0,w,c
 12613   002BAE  B4D8               	btfsc	status,2,c
 12614   002BB0  EFDC  F015         	goto	u3121
 12615   002BB4  EFDE  F015         	goto	u3120
 12616   002BB8                     u3121:
 12617   002BB8  EFDF  F015         	goto	l3751
 12618   002BBC                     u3120:
 12619   002BBC  060F               	decf	___fladd@bexp^0,f,c
 12620   002BBE                     l3751:
 12621   002BBE  AE03               	btfss	(___fladd@b+2)^0,7,c
 12622   002BC0  EFE4  F015         	goto	u3131
 12623   002BC4  EFE6  F015         	goto	u3130
 12624   002BC8                     u3131:
 12625   002BC8  EFBC  F015         	goto	l3735
 12626   002BCC                     u3130:
 12627   002BCC                     l3753:
 12628   002BCC  0E00               	movlw	0
 12629   002BCE  6E0E               	movwf	___fladd@aexp^0,c
 12630   002BD0  AE10               	btfss	___fladd@grs^0,7,c
 12631   002BD2  EFED  F015         	goto	u3141
 12632   002BD6  EFEF  F015         	goto	u3140
 12633   002BDA                     u3141:
 12634   002BDA  EF07  F016         	goto	l1152
 12635   002BDE                     u3140:
 12636   002BDE  C010  F009         	movff	___fladd@grs,??___fladd
 12637   002BE2  0E7F               	movlw	127
 12638   002BE4  1609               	andwf	??___fladd^0,f,c
 12639   002BE6  B4D8               	btfsc	status,2,c
 12640   002BE8  EFF8  F015         	goto	u3151
 12641   002BEC  EFFA  F015         	goto	u3150
 12642   002BF0                     u3151:
 12643   002BF0  EFFE  F015         	goto	l1153
 12644   002BF4                     u3150:
 12645   002BF4                     l3759:
 12646   002BF4  0E01               	movlw	1
 12647   002BF6  6E0E               	movwf	___fladd@aexp^0,c
 12648   002BF8  EF07  F016         	goto	l1152
 12649   002BFC                     l1153:
 12650   002BFC  A001               	btfss	___fladd@b^0,0,c
 12651   002BFE  EF03  F016         	goto	u3161
 12652   002C02  EF05  F016         	goto	u3160
 12653   002C06                     u3161:
 12654   002C06  EF07  F016         	goto	l1152
 12655   002C0A                     u3160:
 12656   002C0A  EFFA  F015         	goto	l3759
 12657   002C0E                     l1152:
 12658   002C0E  500E               	movf	___fladd@aexp^0,w,c
 12659   002C10  B4D8               	btfsc	status,2,c
 12660   002C12  EF0D  F016         	goto	u3171
 12661   002C16  EF0F  F016         	goto	u3170
 12662   002C1A                     u3171:
 12663   002C1A  EF3A  F016         	goto	l3771
 12664   002C1E                     u3170:
 12665   002C1E  0E01               	movlw	1
 12666   002C20  2601               	addwf	___fladd@b^0,f,c
 12667   002C22  0E00               	movlw	0
 12668   002C24  2202               	addwfc	(___fladd@b+1)^0,f,c
 12669   002C26  2203               	addwfc	(___fladd@b+2)^0,f,c
 12670   002C28  2204               	addwfc	(___fladd@b+3)^0,f,c
 12671   002C2A  A004               	btfss	(___fladd@b+3)^0,0,c
 12672   002C2C  EF1A  F016         	goto	u3181
 12673   002C30  EF1C  F016         	goto	u3180
 12674   002C34                     u3181:
 12675   002C34  EF3A  F016         	goto	l3771
 12676   002C38                     u3180:
 12677   002C38  C001  F009         	movff	___fladd@b,??___fladd
 12678   002C3C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 12679   002C40  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 12680   002C44  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 12681   002C48  340C               	rlcf	(??___fladd+3)^0,w,c
 12682   002C4A  320C               	rrcf	(??___fladd+3)^0,f,c
 12683   002C4C  320B               	rrcf	(??___fladd+2)^0,f,c
 12684   002C4E  320A               	rrcf	(??___fladd+1)^0,f,c
 12685   002C50  3209               	rrcf	??___fladd^0,f,c
 12686   002C52  C009  F001         	movff	??___fladd,___fladd@b
 12687   002C56  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 12688   002C5A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 12689   002C5E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 12690   002C62  280F               	incf	___fladd@bexp^0,w,c
 12691   002C64  B4D8               	btfsc	status,2,c
 12692   002C66  EF37  F016         	goto	u3191
 12693   002C6A  EF39  F016         	goto	u3190
 12694   002C6E                     u3191:
 12695   002C6E  EF3A  F016         	goto	l3771
 12696   002C72                     u3190:
 12697   002C72  2A0F               	incf	___fladd@bexp^0,f,c
 12698   002C74                     l3771:
 12699   002C74  280F               	incf	___fladd@bexp^0,w,c
 12700   002C76  B4D8               	btfsc	status,2,c
 12701   002C78  EF40  F016         	goto	u3201
 12702   002C7C  EF42  F016         	goto	u3200
 12703   002C80                     u3201:
 12704   002C80  EF4A  F016         	goto	l3775
 12705   002C84                     u3200:
 12706   002C84  500F               	movf	___fladd@bexp^0,w,c
 12707   002C86  A4D8               	btfss	status,2,c
 12708   002C88  EF48  F016         	goto	u3211
 12709   002C8C  EF4A  F016         	goto	u3210
 12710   002C90                     u3211:
 12711   002C90  EF5C  F016         	goto	l3779
 12712   002C94                     u3210:
 12713   002C94                     l3775:
 12714   002C94  0E00               	movlw	0
 12715   002C96  6E01               	movwf	___fladd@b^0,c
 12716   002C98  0E00               	movlw	0
 12717   002C9A  6E02               	movwf	(___fladd@b+1)^0,c
 12718   002C9C  0E00               	movlw	0
 12719   002C9E  6E03               	movwf	(___fladd@b+2)^0,c
 12720   002CA0  0E00               	movlw	0
 12721   002CA2  6E04               	movwf	(___fladd@b+3)^0,c
 12722   002CA4  500F               	movf	___fladd@bexp^0,w,c
 12723   002CA6  A4D8               	btfss	status,2,c
 12724   002CA8  EF58  F016         	goto	u3221
 12725   002CAC  EF5A  F016         	goto	u3220
 12726   002CB0                     u3221:
 12727   002CB0  EF5C  F016         	goto	l3779
 12728   002CB4                     u3220:
 12729   002CB4  0E00               	movlw	0
 12730   002CB6  6E0D               	movwf	___fladd@signs^0,c
 12731   002CB8                     l3779:
 12732   002CB8  A00F               	btfss	___fladd@bexp^0,0,c
 12733   002CBA  EF61  F016         	goto	u3231
 12734   002CBE  EF63  F016         	goto	u3230
 12735   002CC2                     u3231:
 12736   002CC2  EF66  F016         	goto	l3783
 12737   002CC6                     u3230:
 12738   002CC6  8E03               	bsf	(___fladd@b+2)^0,7,c
 12739   002CC8  EF67  F016         	goto	l3785
 12740   002CCC                     l3783:
 12741   002CCC  9E03               	bcf	(___fladd@b+2)^0,7,c
 12742   002CCE                     l3785:
 12743   002CCE  90D8               	bcf	status,0,c
 12744   002CD0  300F               	rrcf	___fladd@bexp^0,w,c
 12745   002CD2  6E04               	movwf	(___fladd@b+3)^0,c
 12746   002CD4  AE0D               	btfss	___fladd@signs^0,7,c
 12747   002CD6  EF6F  F016         	goto	u3241
 12748   002CDA  EF71  F016         	goto	u3240
 12749   002CDE                     u3241:
 12750   002CDE  EF72  F016         	goto	l3791
 12751   002CE2                     u3240:
 12752   002CE2  8E04               	bsf	(___fladd@b+3)^0,7,c
 12753   002CE4                     l3791:
 12754   002CE4  C001  F001         	movff	___fladd@b,?___fladd
 12755   002CE8  C002  F002         	movff	___fladd@b+1,?___fladd+1
 12756   002CEC  C003  F003         	movff	___fladd@b+2,?___fladd+2
 12757   002CF0  C004  F004         	movff	___fladd@b+3,?___fladd+3
 12758   002CF4                     l1135:
 12759   002CF4  0012               	return		;funcret
 12760   002CF6                     __end_of___fladd:
 12761                           	callstack 0
 12762                           
 12763 ;; *************** function ___flmul *****************
 12764 ;; Defined at:
 12765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 12766 ;; Parameters:    Size  Location     Type
 12767 ;;  b               4   16[COMRAM] unsigned char 
 12768 ;;  a               4   20[COMRAM] unsigned char 
 12769 ;; Auto vars:     Size  Location     Type
 12770 ;;  prod            4   35[COMRAM] struct .
 12771 ;;  grs             4   29[COMRAM] unsigned long 
 12772 ;;  temp            2   39[COMRAM] struct .
 12773 ;;  bexp            1   34[COMRAM] unsigned char 
 12774 ;;  aexp            1   33[COMRAM] unsigned char 
 12775 ;;  sign            1   28[COMRAM] unsigned char 
 12776 ;; Return value:  Size  Location     Type
 12777 ;;                  4   16[COMRAM] unsigned char 
 12778 ;; Registers used:
 12779 ;;		wreg, status,2, status,0, prodl, prodh
 12780 ;; Tracked objects:
 12781 ;;		On entry : 0/0
 12782 ;;		On exit  : 0/0
 12783 ;;		Unchanged: 0/0
 12784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12786 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12788 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12789 ;;Total ram usage:       25 bytes
 12790 ;; Hardware stack levels used: 1
 12791 ;; Hardware stack levels required when called: 1
 12792 ;; This function calls:
 12793 ;;		Nothing
 12794 ;; This function is called by:
 12795 ;;		_Colour_decider
 12796 ;;		_efgtoa
 12797 ;; This function uses a non-reentrant model
 12798 ;;
 12799                           
 12800                           	psect	text69
 12801   002CF6                     __ptext69:
 12802                           	callstack 0
 12803   002CF6                     ___flmul:
 12804                           	callstack 25
 12805   002CF6  5014               	movf	(___flmul@b+3)^0,w,c
 12806   002CF8  0B80               	andlw	128
 12807   002CFA  6E1D               	movwf	___flmul@sign^0,c
 12808   002CFC  5014               	movf	(___flmul@b+3)^0,w,c
 12809   002CFE  2414               	addwf	(___flmul@b+3)^0,w,c
 12810   002D00  6E23               	movwf	___flmul@bexp^0,c
 12811   002D02  AE13               	btfss	(___flmul@b+2)^0,7,c
 12812   002D04  EF86  F016         	goto	u3671
 12813   002D08  EF88  F016         	goto	u3670
 12814   002D0C                     u3671:
 12815   002D0C  EF89  F016         	goto	l4065
 12816   002D10                     u3670:
 12817   002D10  8023               	bsf	___flmul@bexp^0,0,c
 12818   002D12                     l4065:
 12819   002D12  5023               	movf	___flmul@bexp^0,w,c
 12820   002D14  B4D8               	btfsc	status,2,c
 12821   002D16  EF8F  F016         	goto	u3681
 12822   002D1A  EF91  F016         	goto	u3680
 12823   002D1E                     u3681:
 12824   002D1E  EFA4  F016         	goto	l4073
 12825   002D22                     u3680:
 12826   002D22  2823               	incf	___flmul@bexp^0,w,c
 12827   002D24  A4D8               	btfss	status,2,c
 12828   002D26  EF97  F016         	goto	u3691
 12829   002D2A  EF99  F016         	goto	u3690
 12830   002D2E                     u3691:
 12831   002D2E  EFA1  F016         	goto	l4071
 12832   002D32                     u3690:
 12833   002D32  0E00               	movlw	0
 12834   002D34  6E11               	movwf	___flmul@b^0,c
 12835   002D36  0E00               	movlw	0
 12836   002D38  6E12               	movwf	(___flmul@b+1)^0,c
 12837   002D3A  0E00               	movlw	0
 12838   002D3C  6E13               	movwf	(___flmul@b+2)^0,c
 12839   002D3E  0E00               	movlw	0
 12840   002D40  6E14               	movwf	(___flmul@b+3)^0,c
 12841   002D42                     l4071:
 12842   002D42  8E13               	bsf	(___flmul@b+2)^0,7,c
 12843   002D44  EFAC  F016         	goto	l4075
 12844   002D48                     l4073:
 12845   002D48  0E00               	movlw	0
 12846   002D4A  6E11               	movwf	___flmul@b^0,c
 12847   002D4C  0E00               	movlw	0
 12848   002D4E  6E12               	movwf	(___flmul@b+1)^0,c
 12849   002D50  0E00               	movlw	0
 12850   002D52  6E13               	movwf	(___flmul@b+2)^0,c
 12851   002D54  0E00               	movlw	0
 12852   002D56  6E14               	movwf	(___flmul@b+3)^0,c
 12853   002D58                     l4075:
 12854   002D58  5018               	movf	(___flmul@a+3)^0,w,c
 12855   002D5A  0B80               	andlw	128
 12856   002D5C  1A1D               	xorwf	___flmul@sign^0,f,c
 12857   002D5E  5018               	movf	(___flmul@a+3)^0,w,c
 12858   002D60  2418               	addwf	(___flmul@a+3)^0,w,c
 12859   002D62  6E22               	movwf	___flmul@aexp^0,c
 12860   002D64  AE17               	btfss	(___flmul@a+2)^0,7,c
 12861   002D66  EFB7  F016         	goto	u3701
 12862   002D6A  EFB9  F016         	goto	u3700
 12863   002D6E                     u3701:
 12864   002D6E  EFBA  F016         	goto	l4083
 12865   002D72                     u3700:
 12866   002D72  8022               	bsf	___flmul@aexp^0,0,c
 12867   002D74                     l4083:
 12868   002D74  5022               	movf	___flmul@aexp^0,w,c
 12869   002D76  B4D8               	btfsc	status,2,c
 12870   002D78  EFC0  F016         	goto	u3711
 12871   002D7C  EFC2  F016         	goto	u3710
 12872   002D80                     u3711:
 12873   002D80  EFD5  F016         	goto	l4091
 12874   002D84                     u3710:
 12875   002D84  2822               	incf	___flmul@aexp^0,w,c
 12876   002D86  A4D8               	btfss	status,2,c
 12877   002D88  EFC8  F016         	goto	u3721
 12878   002D8C  EFCA  F016         	goto	u3720
 12879   002D90                     u3721:
 12880   002D90  EFD2  F016         	goto	l4089
 12881   002D94                     u3720:
 12882   002D94  0E00               	movlw	0
 12883   002D96  6E15               	movwf	___flmul@a^0,c
 12884   002D98  0E00               	movlw	0
 12885   002D9A  6E16               	movwf	(___flmul@a+1)^0,c
 12886   002D9C  0E00               	movlw	0
 12887   002D9E  6E17               	movwf	(___flmul@a+2)^0,c
 12888   002DA0  0E00               	movlw	0
 12889   002DA2  6E18               	movwf	(___flmul@a+3)^0,c
 12890   002DA4                     l4089:
 12891   002DA4  8E17               	bsf	(___flmul@a+2)^0,7,c
 12892   002DA6  EFDD  F016         	goto	l1212
 12893   002DAA                     l4091:
 12894   002DAA  0E00               	movlw	0
 12895   002DAC  6E15               	movwf	___flmul@a^0,c
 12896   002DAE  0E00               	movlw	0
 12897   002DB0  6E16               	movwf	(___flmul@a+1)^0,c
 12898   002DB2  0E00               	movlw	0
 12899   002DB4  6E17               	movwf	(___flmul@a+2)^0,c
 12900   002DB6  0E00               	movlw	0
 12901   002DB8  6E18               	movwf	(___flmul@a+3)^0,c
 12902   002DBA                     l1212:
 12903   002DBA  5022               	movf	___flmul@aexp^0,w,c
 12904   002DBC  B4D8               	btfsc	status,2,c
 12905   002DBE  EFE3  F016         	goto	u3731
 12906   002DC2  EFE5  F016         	goto	u3730
 12907   002DC6                     u3731:
 12908   002DC6  EFED  F016         	goto	l4095
 12909   002DCA                     u3730:
 12910   002DCA  5023               	movf	___flmul@bexp^0,w,c
 12911   002DCC  A4D8               	btfss	status,2,c
 12912   002DCE  EFEB  F016         	goto	u3741
 12913   002DD2  EFED  F016         	goto	u3740
 12914   002DD6                     u3741:
 12915   002DD6  EFF7  F016         	goto	l4099
 12916   002DDA                     u3740:
 12917   002DDA                     l4095:
 12918   002DDA  0E00               	movlw	0
 12919   002DDC  6E11               	movwf	?___flmul^0,c
 12920   002DDE  0E00               	movlw	0
 12921   002DE0  6E12               	movwf	(?___flmul+1)^0,c
 12922   002DE2  0E00               	movlw	0
 12923   002DE4  6E13               	movwf	(?___flmul+2)^0,c
 12924   002DE6  0E00               	movlw	0
 12925   002DE8  6E14               	movwf	(?___flmul+3)^0,c
 12926   002DEA  EF8F  F018         	goto	l1216
 12927   002DEE                     l4099:
 12928   002DEE  5017               	movf	(___flmul@a+2)^0,w,c
 12929   002DF0  0211               	mulwf	___flmul@b^0,c
 12930   002DF2  CFF3 F028          	movff	prodl,___flmul@temp
 12931   002DF6  CFF4 F029          	movff	prodh,___flmul@temp+1
 12932   002DFA  5028               	movf	___flmul@temp^0,w,c
 12933   002DFC  6E1E               	movwf	___flmul@grs^0,c
 12934   002DFE  6A1F               	clrf	(___flmul@grs+1)^0,c
 12935   002E00  6A20               	clrf	(___flmul@grs+2)^0,c
 12936   002E02  6A21               	clrf	(___flmul@grs+3)^0,c
 12937   002E04  5029               	movf	(___flmul@temp+1)^0,w,c
 12938   002E06  6E24               	movwf	___flmul@prod^0,c
 12939   002E08  6A25               	clrf	(___flmul@prod+1)^0,c
 12940   002E0A  6A26               	clrf	(___flmul@prod+2)^0,c
 12941   002E0C  6A27               	clrf	(___flmul@prod+3)^0,c
 12942   002E0E  5016               	movf	(___flmul@a+1)^0,w,c
 12943   002E10  0212               	mulwf	(___flmul@b+1)^0,c
 12944   002E12  CFF3 F028          	movff	prodl,___flmul@temp
 12945   002E16  CFF4 F029          	movff	prodh,___flmul@temp+1
 12946   002E1A  5028               	movf	___flmul@temp^0,w,c
 12947   002E1C  261E               	addwf	___flmul@grs^0,f,c
 12948   002E1E  0E00               	movlw	0
 12949   002E20  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12950   002E22  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12951   002E24  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12952   002E26  5029               	movf	(___flmul@temp+1)^0,w,c
 12953   002E28  2624               	addwf	___flmul@prod^0,f,c
 12954   002E2A  0E00               	movlw	0
 12955   002E2C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12956   002E2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12957   002E30  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12958   002E32  5015               	movf	___flmul@a^0,w,c
 12959   002E34  0213               	mulwf	(___flmul@b+2)^0,c
 12960   002E36  CFF3 F028          	movff	prodl,___flmul@temp
 12961   002E3A  CFF4 F029          	movff	prodh,___flmul@temp+1
 12962   002E3E  5028               	movf	___flmul@temp^0,w,c
 12963   002E40  261E               	addwf	___flmul@grs^0,f,c
 12964   002E42  0E00               	movlw	0
 12965   002E44  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12966   002E46  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12967   002E48  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12968   002E4A  5029               	movf	(___flmul@temp+1)^0,w,c
 12969   002E4C  2624               	addwf	___flmul@prod^0,f,c
 12970   002E4E  0E00               	movlw	0
 12971   002E50  2225               	addwfc	(___flmul@prod+1)^0,f,c
 12972   002E52  2226               	addwfc	(___flmul@prod+2)^0,f,c
 12973   002E54  2227               	addwfc	(___flmul@prod+3)^0,f,c
 12974   002E56  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 12975   002E5A  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 12976   002E5E  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 12977   002E62  6A1E               	clrf	___flmul@grs^0,c
 12978   002E64  5015               	movf	___flmul@a^0,w,c
 12979   002E66  0212               	mulwf	(___flmul@b+1)^0,c
 12980   002E68  CFF3 F028          	movff	prodl,___flmul@temp
 12981   002E6C  CFF4 F029          	movff	prodh,___flmul@temp+1
 12982   002E70  5028               	movf	___flmul@temp^0,w,c
 12983   002E72  261E               	addwf	___flmul@grs^0,f,c
 12984   002E74  5029               	movf	(___flmul@temp+1)^0,w,c
 12985   002E76  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12986   002E78  0E00               	movlw	0
 12987   002E7A  2220               	addwfc	(___flmul@grs+2)^0,f,c
 12988   002E7C  0E00               	movlw	0
 12989   002E7E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 12990   002E80  5016               	movf	(___flmul@a+1)^0,w,c
 12991   002E82  0211               	mulwf	___flmul@b^0,c
 12992   002E84  CFF3 F028          	movff	prodl,___flmul@temp
 12993   002E88  CFF4 F029          	movff	prodh,___flmul@temp+1
 12994   002E8C  5028               	movf	___flmul@temp^0,w,c
 12995   002E8E  261E               	addwf	___flmul@grs^0,f,c
 12996   002E90  5029               	movf	(___flmul@temp+1)^0,w,c
 12997   002E92  221F               	addwfc	(___flmul@grs+1)^0,f,c
 12998   002E94  0E00               	movlw	0
 12999   002E96  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13000   002E98  0E00               	movlw	0
 13001   002E9A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13002   002E9C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13003   002EA0  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13004   002EA4  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13005   002EA8  6A1E               	clrf	___flmul@grs^0,c
 13006   002EAA  5015               	movf	___flmul@a^0,w,c
 13007   002EAC  0211               	mulwf	___flmul@b^0,c
 13008   002EAE  CFF3 F028          	movff	prodl,___flmul@temp
 13009   002EB2  CFF4 F029          	movff	prodh,___flmul@temp+1
 13010   002EB6  5028               	movf	___flmul@temp^0,w,c
 13011   002EB8  261E               	addwf	___flmul@grs^0,f,c
 13012   002EBA  5029               	movf	(___flmul@temp+1)^0,w,c
 13013   002EBC  221F               	addwfc	(___flmul@grs+1)^0,f,c
 13014   002EBE  0E00               	movlw	0
 13015   002EC0  2220               	addwfc	(___flmul@grs+2)^0,f,c
 13016   002EC2  0E00               	movlw	0
 13017   002EC4  2221               	addwfc	(___flmul@grs+3)^0,f,c
 13018   002EC6  5017               	movf	(___flmul@a+2)^0,w,c
 13019   002EC8  0212               	mulwf	(___flmul@b+1)^0,c
 13020   002ECA  CFF3 F028          	movff	prodl,___flmul@temp
 13021   002ECE  CFF4 F029          	movff	prodh,___flmul@temp+1
 13022   002ED2  5028               	movf	___flmul@temp^0,w,c
 13023   002ED4  2624               	addwf	___flmul@prod^0,f,c
 13024   002ED6  5029               	movf	(___flmul@temp+1)^0,w,c
 13025   002ED8  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13026   002EDA  0E00               	movlw	0
 13027   002EDC  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13028   002EDE  0E00               	movlw	0
 13029   002EE0  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13030   002EE2  5016               	movf	(___flmul@a+1)^0,w,c
 13031   002EE4  0213               	mulwf	(___flmul@b+2)^0,c
 13032   002EE6  CFF3 F028          	movff	prodl,___flmul@temp
 13033   002EEA  CFF4 F029          	movff	prodh,___flmul@temp+1
 13034   002EEE  5028               	movf	___flmul@temp^0,w,c
 13035   002EF0  2624               	addwf	___flmul@prod^0,f,c
 13036   002EF2  5029               	movf	(___flmul@temp+1)^0,w,c
 13037   002EF4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13038   002EF6  0E00               	movlw	0
 13039   002EF8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13040   002EFA  0E00               	movlw	0
 13041   002EFC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13042   002EFE  5017               	movf	(___flmul@a+2)^0,w,c
 13043   002F00  0213               	mulwf	(___flmul@b+2)^0,c
 13044   002F02  CFF3 F028          	movff	prodl,___flmul@temp
 13045   002F06  CFF4 F029          	movff	prodh,___flmul@temp+1
 13046   002F0A  5028               	movf	___flmul@temp^0,w,c
 13047   002F0C  6E19               	movwf	??___flmul^0,c
 13048   002F0E  5029               	movf	(___flmul@temp+1)^0,w,c
 13049   002F10  6E1A               	movwf	(??___flmul+1)^0,c
 13050   002F12  6A1B               	clrf	(??___flmul+2)^0,c
 13051   002F14  6A1C               	clrf	(??___flmul+3)^0,c
 13052   002F16  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 13053   002F1A  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 13054   002F1E  C019  F01A         	movff	??___flmul,??___flmul+1
 13055   002F22  6A19               	clrf	??___flmul^0,c
 13056   002F24  5019               	movf	??___flmul^0,w,c
 13057   002F26  2624               	addwf	___flmul@prod^0,f,c
 13058   002F28  501A               	movf	(??___flmul+1)^0,w,c
 13059   002F2A  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13060   002F2C  501B               	movf	(??___flmul+2)^0,w,c
 13061   002F2E  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13062   002F30  501C               	movf	(??___flmul+3)^0,w,c
 13063   002F32  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13064   002F34  C01E  F019         	movff	___flmul@grs,??___flmul
 13065   002F38  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 13066   002F3C  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 13067   002F40  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 13068   002F44  0E19               	movlw	25
 13069   002F46  EFAA  F017         	goto	u3750
 13070   002F4A                     u3755:
 13071   002F4A  90D8               	bcf	status,0,c
 13072   002F4C  321C               	rrcf	(??___flmul+3)^0,f,c
 13073   002F4E  321B               	rrcf	(??___flmul+2)^0,f,c
 13074   002F50  321A               	rrcf	(??___flmul+1)^0,f,c
 13075   002F52  3219               	rrcf	??___flmul^0,f,c
 13076   002F54                     u3750:
 13077   002F54  2EE8               	decfsz	wreg,f,c
 13078   002F56  EFA5  F017         	goto	u3755
 13079   002F5A  5019               	movf	??___flmul^0,w,c
 13080   002F5C  2624               	addwf	___flmul@prod^0,f,c
 13081   002F5E  501A               	movf	(??___flmul+1)^0,w,c
 13082   002F60  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13083   002F62  501B               	movf	(??___flmul+2)^0,w,c
 13084   002F64  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13085   002F66  501C               	movf	(??___flmul+3)^0,w,c
 13086   002F68  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13087   002F6A  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 13088   002F6E  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 13089   002F72  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 13090   002F76  6A1E               	clrf	___flmul@grs^0,c
 13091   002F78  5022               	movf	___flmul@aexp^0,w,c
 13092   002F7A  C023  F019         	movff	___flmul@bexp,??___flmul
 13093   002F7E  6A1A               	clrf	(??___flmul+1)^0,c
 13094   002F80  2619               	addwf	??___flmul^0,f,c
 13095   002F82  0E00               	movlw	0
 13096   002F84  221A               	addwfc	(??___flmul+1)^0,f,c
 13097   002F86  0E82               	movlw	130
 13098   002F88  2419               	addwf	??___flmul^0,w,c
 13099   002F8A  6E28               	movwf	___flmul@temp^0,c
 13100   002F8C  0EFF               	movlw	255
 13101   002F8E  201A               	addwfc	(??___flmul+1)^0,w,c
 13102   002F90  6E29               	movwf	(___flmul@temp+1)^0,c
 13103   002F92  EFE0  F017         	goto	l4147
 13104   002F96                     l4141:
 13105   002F96  90D8               	bcf	status,0,c
 13106   002F98  3624               	rlcf	___flmul@prod^0,f,c
 13107   002F9A  3625               	rlcf	(___flmul@prod+1)^0,f,c
 13108   002F9C  3626               	rlcf	(___flmul@prod+2)^0,f,c
 13109   002F9E  3627               	rlcf	(___flmul@prod+3)^0,f,c
 13110   002FA0  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13111   002FA2  EFD5  F017         	goto	u3761
 13112   002FA6  EFD7  F017         	goto	u3760
 13113   002FAA                     u3761:
 13114   002FAA  EFD8  F017         	goto	l1219
 13115   002FAE                     u3760:
 13116   002FAE  8024               	bsf	___flmul@prod^0,0,c
 13117   002FB0                     l1219:
 13118   002FB0  90D8               	bcf	status,0,c
 13119   002FB2  361E               	rlcf	___flmul@grs^0,f,c
 13120   002FB4  361F               	rlcf	(___flmul@grs+1)^0,f,c
 13121   002FB6  3620               	rlcf	(___flmul@grs+2)^0,f,c
 13122   002FB8  3621               	rlcf	(___flmul@grs+3)^0,f,c
 13123   002FBA  0628               	decf	___flmul@temp^0,f,c
 13124   002FBC  A0D8               	btfss	status,0,c
 13125   002FBE  0629               	decf	(___flmul@temp+1)^0,f,c
 13126   002FC0                     l4147:
 13127   002FC0  AE26               	btfss	(___flmul@prod+2)^0,7,c
 13128   002FC2  EFE5  F017         	goto	u3771
 13129   002FC6  EFE7  F017         	goto	u3770
 13130   002FCA                     u3771:
 13131   002FCA  EFCB  F017         	goto	l4141
 13132   002FCE                     u3770:
 13133   002FCE  0E00               	movlw	0
 13134   002FD0  6E22               	movwf	___flmul@aexp^0,c
 13135   002FD2  AE21               	btfss	(___flmul@grs+3)^0,7,c
 13136   002FD4  EFEE  F017         	goto	u3781
 13137   002FD8  EFF0  F017         	goto	u3780
 13138   002FDC                     u3781:
 13139   002FDC  EF14  F018         	goto	l1221
 13140   002FE0                     u3780:
 13141   002FE0  0EFF               	movlw	255
 13142   002FE2  141E               	andwf	___flmul@grs^0,w,c
 13143   002FE4  6E19               	movwf	??___flmul^0,c
 13144   002FE6  0EFF               	movlw	255
 13145   002FE8  141F               	andwf	(___flmul@grs+1)^0,w,c
 13146   002FEA  6E1A               	movwf	(??___flmul+1)^0,c
 13147   002FEC  0EFF               	movlw	255
 13148   002FEE  1420               	andwf	(___flmul@grs+2)^0,w,c
 13149   002FF0  6E1B               	movwf	(??___flmul+2)^0,c
 13150   002FF2  0E7F               	movlw	127
 13151   002FF4  1421               	andwf	(___flmul@grs+3)^0,w,c
 13152   002FF6  6E1C               	movwf	(??___flmul+3)^0,c
 13153   002FF8  5019               	movf	??___flmul^0,w,c
 13154   002FFA  101A               	iorwf	(??___flmul+1)^0,w,c
 13155   002FFC  101B               	iorwf	(??___flmul+2)^0,w,c
 13156   002FFE  101C               	iorwf	(??___flmul+3)^0,w,c
 13157   003000  B4D8               	btfsc	status,2,c
 13158   003002  EF05  F018         	goto	u3791
 13159   003006  EF07  F018         	goto	u3790
 13160   00300A                     u3791:
 13161   00300A  EF0B  F018         	goto	l1222
 13162   00300E                     u3790:
 13163   00300E                     l4155:
 13164   00300E  0E01               	movlw	1
 13165   003010  6E22               	movwf	___flmul@aexp^0,c
 13166   003012  EF14  F018         	goto	l1221
 13167   003016                     l1222:
 13168   003016  A024               	btfss	___flmul@prod^0,0,c
 13169   003018  EF10  F018         	goto	u3801
 13170   00301C  EF12  F018         	goto	u3800
 13171   003020                     u3801:
 13172   003020  EF14  F018         	goto	l1221
 13173   003024                     u3800:
 13174   003024  EF07  F018         	goto	l4155
 13175   003028                     l1221:
 13176   003028  5022               	movf	___flmul@aexp^0,w,c
 13177   00302A  B4D8               	btfsc	status,2,c
 13178   00302C  EF1A  F018         	goto	u3811
 13179   003030  EF1C  F018         	goto	u3810
 13180   003034                     u3811:
 13181   003034  EF40  F018         	goto	l4167
 13182   003038                     u3810:
 13183   003038  0E01               	movlw	1
 13184   00303A  2624               	addwf	___flmul@prod^0,f,c
 13185   00303C  0E00               	movlw	0
 13186   00303E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 13187   003040  2226               	addwfc	(___flmul@prod+2)^0,f,c
 13188   003042  2227               	addwfc	(___flmul@prod+3)^0,f,c
 13189   003044  A027               	btfss	(___flmul@prod+3)^0,0,c
 13190   003046  EF27  F018         	goto	u3821
 13191   00304A  EF29  F018         	goto	u3820
 13192   00304E                     u3821:
 13193   00304E  EF40  F018         	goto	l4167
 13194   003052                     u3820:
 13195   003052  C024  F019         	movff	___flmul@prod,??___flmul
 13196   003056  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 13197   00305A  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 13198   00305E  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 13199   003062  341C               	rlcf	(??___flmul+3)^0,w,c
 13200   003064  321C               	rrcf	(??___flmul+3)^0,f,c
 13201   003066  321B               	rrcf	(??___flmul+2)^0,f,c
 13202   003068  321A               	rrcf	(??___flmul+1)^0,f,c
 13203   00306A  3219               	rrcf	??___flmul^0,f,c
 13204   00306C  C019  F024         	movff	??___flmul,___flmul@prod
 13205   003070  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 13206   003074  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 13207   003078  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 13208   00307C  4A28               	infsnz	___flmul@temp^0,f,c
 13209   00307E  2A29               	incf	(___flmul@temp+1)^0,f,c
 13210   003080                     l4167:
 13211   003080  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13212   003082  EF4B  F018         	goto	u3831
 13213   003086  5029               	movf	(___flmul@temp+1)^0,w,c
 13214   003088  E108               	bnz	u3830
 13215   00308A  2828               	incf	___flmul@temp^0,w,c
 13216   00308C  A0D8               	btfss	status,0,c
 13217   00308E  EF4B  F018         	goto	u3831
 13218   003092  EF4D  F018         	goto	u3830
 13219   003096                     u3831:
 13220   003096  EF57  F018         	goto	l4171
 13221   00309A                     u3830:
 13222   00309A  0E00               	movlw	0
 13223   00309C  6E24               	movwf	___flmul@prod^0,c
 13224   00309E  0E00               	movlw	0
 13225   0030A0  6E25               	movwf	(___flmul@prod+1)^0,c
 13226   0030A2  0E80               	movlw	128
 13227   0030A4  6E26               	movwf	(___flmul@prod+2)^0,c
 13228   0030A6  0E7F               	movlw	127
 13229   0030A8  6E27               	movwf	(___flmul@prod+3)^0,c
 13230   0030AA  EF85  F018         	goto	l4183
 13231   0030AE                     l4171:
 13232   0030AE  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 13233   0030B0  EF64  F018         	goto	u3840
 13234   0030B4  5029               	movf	(___flmul@temp+1)^0,w,c
 13235   0030B6  E106               	bnz	u3841
 13236   0030B8  0428               	decf	___flmul@temp^0,w,c
 13237   0030BA  B0D8               	btfsc	status,0,c
 13238   0030BC  EF62  F018         	goto	u3841
 13239   0030C0  EF64  F018         	goto	u3840
 13240   0030C4                     u3841:
 13241   0030C4  EF70  F018         	goto	l1229
 13242   0030C8                     u3840:
 13243   0030C8  0E00               	movlw	0
 13244   0030CA  6E24               	movwf	___flmul@prod^0,c
 13245   0030CC  0E00               	movlw	0
 13246   0030CE  6E25               	movwf	(___flmul@prod+1)^0,c
 13247   0030D0  0E00               	movlw	0
 13248   0030D2  6E26               	movwf	(___flmul@prod+2)^0,c
 13249   0030D4  0E00               	movlw	0
 13250   0030D6  6E27               	movwf	(___flmul@prod+3)^0,c
 13251   0030D8  0E00               	movlw	0
 13252   0030DA  6E1D               	movwf	___flmul@sign^0,c
 13253   0030DC  EF85  F018         	goto	l4183
 13254   0030E0                     l1229:
 13255   0030E0  C028  F023         	movff	___flmul@temp,___flmul@bexp
 13256   0030E4  0EFF               	movlw	255
 13257   0030E6  1624               	andwf	___flmul@prod^0,f,c
 13258   0030E8  0EFF               	movlw	255
 13259   0030EA  1625               	andwf	(___flmul@prod+1)^0,f,c
 13260   0030EC  0E7F               	movlw	127
 13261   0030EE  1626               	andwf	(___flmul@prod+2)^0,f,c
 13262   0030F0  0E00               	movlw	0
 13263   0030F2  1627               	andwf	(___flmul@prod+3)^0,f,c
 13264   0030F4  A023               	btfss	___flmul@bexp^0,0,c
 13265   0030F6  EF7F  F018         	goto	u3851
 13266   0030FA  EF81  F018         	goto	u3850
 13267   0030FE                     u3851:
 13268   0030FE  EF82  F018         	goto	l4181
 13269   003102                     u3850:
 13270   003102  8E26               	bsf	(___flmul@prod+2)^0,7,c
 13271   003104                     l4181:
 13272   003104  90D8               	bcf	status,0,c
 13273   003106  3023               	rrcf	___flmul@bexp^0,w,c
 13274   003108  6E27               	movwf	(___flmul@prod+3)^0,c
 13275   00310A                     l4183:
 13276   00310A  501D               	movf	___flmul@sign^0,w,c
 13277   00310C  1227               	iorwf	(___flmul@prod+3)^0,f,c
 13278   00310E  C024  F011         	movff	___flmul@prod,?___flmul
 13279   003112  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 13280   003116  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 13281   00311A  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 13282   00311E                     l1216:
 13283   00311E  0012               	return		;funcret
 13284   003120                     __end_of___flmul:
 13285                           	callstack 0
 13286                           
 13287 ;; *************** function ___flge *****************
 13288 ;; Defined at:
 13289 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 13290 ;; Parameters:    Size  Location     Type
 13291 ;;  ff1             4   41[COMRAM] unsigned char 
 13292 ;;  ff2             4   45[COMRAM] unsigned char 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;		None
 13295 ;; Return value:  Size  Location     Type
 13296 ;;		None               void
 13297 ;; Registers used:
 13298 ;;		wreg, status,2, status,0
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13304 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13306 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13307 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13308 ;;Total ram usage:       12 bytes
 13309 ;; Hardware stack levels used: 1
 13310 ;; Hardware stack levels required when called: 1
 13311 ;; This function calls:
 13312 ;;		Nothing
 13313 ;; This function is called by:
 13314 ;;		_Colour_decider
 13315 ;;		_efgtoa
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           	psect	text70
 13320   004862                     __ptext70:
 13321                           	callstack 0
 13322   004862                     ___flge:
 13323                           	callstack 25
 13324   004862  0E00               	movlw	0
 13325   004864  142A               	andwf	___flge@ff1^0,w,c
 13326   004866  6E32               	movwf	??___flge^0,c
 13327   004868  0E00               	movlw	0
 13328   00486A  142B               	andwf	(___flge@ff1+1)^0,w,c
 13329   00486C  6E33               	movwf	(??___flge+1)^0,c
 13330   00486E  0E80               	movlw	128
 13331   004870  142C               	andwf	(___flge@ff1+2)^0,w,c
 13332   004872  6E34               	movwf	(??___flge+2)^0,c
 13333   004874  0E7F               	movlw	127
 13334   004876  142D               	andwf	(___flge@ff1+3)^0,w,c
 13335   004878  6E35               	movwf	(??___flge+3)^0,c
 13336   00487A  5032               	movf	??___flge^0,w,c
 13337   00487C  1033               	iorwf	(??___flge+1)^0,w,c
 13338   00487E  1034               	iorwf	(??___flge+2)^0,w,c
 13339   004880  1035               	iorwf	(??___flge+3)^0,w,c
 13340   004882  A4D8               	btfss	status,2,c
 13341   004884  EF46  F024         	goto	u3891
 13342   004888  EF48  F024         	goto	u3890
 13343   00488C                     u3891:
 13344   00488C  EF50  F024         	goto	l4215
 13345   004890                     u3890:
 13346   004890  0E00               	movlw	0
 13347   004892  6E2A               	movwf	___flge@ff1^0,c
 13348   004894  0E00               	movlw	0
 13349   004896  6E2B               	movwf	(___flge@ff1+1)^0,c
 13350   004898  0E00               	movlw	0
 13351   00489A  6E2C               	movwf	(___flge@ff1+2)^0,c
 13352   00489C  0E00               	movlw	0
 13353   00489E  6E2D               	movwf	(___flge@ff1+3)^0,c
 13354   0048A0                     l4215:
 13355   0048A0  0E00               	movlw	0
 13356   0048A2  142E               	andwf	___flge@ff2^0,w,c
 13357   0048A4  6E32               	movwf	??___flge^0,c
 13358   0048A6  0E00               	movlw	0
 13359   0048A8  142F               	andwf	(___flge@ff2+1)^0,w,c
 13360   0048AA  6E33               	movwf	(??___flge+1)^0,c
 13361   0048AC  0E80               	movlw	128
 13362   0048AE  1430               	andwf	(___flge@ff2+2)^0,w,c
 13363   0048B0  6E34               	movwf	(??___flge+2)^0,c
 13364   0048B2  0E7F               	movlw	127
 13365   0048B4  1431               	andwf	(___flge@ff2+3)^0,w,c
 13366   0048B6  6E35               	movwf	(??___flge+3)^0,c
 13367   0048B8  5032               	movf	??___flge^0,w,c
 13368   0048BA  1033               	iorwf	(??___flge+1)^0,w,c
 13369   0048BC  1034               	iorwf	(??___flge+2)^0,w,c
 13370   0048BE  1035               	iorwf	(??___flge+3)^0,w,c
 13371   0048C0  A4D8               	btfss	status,2,c
 13372   0048C2  EF65  F024         	goto	u3901
 13373   0048C6  EF67  F024         	goto	u3900
 13374   0048CA                     u3901:
 13375   0048CA  EF6F  F024         	goto	l4219
 13376   0048CE                     u3900:
 13377   0048CE  0E00               	movlw	0
 13378   0048D0  6E2E               	movwf	___flge@ff2^0,c
 13379   0048D2  0E00               	movlw	0
 13380   0048D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13381   0048D6  0E00               	movlw	0
 13382   0048D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13383   0048DA  0E00               	movlw	0
 13384   0048DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13385   0048DE                     l4219:
 13386   0048DE  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 13387   0048E0  EF74  F024         	goto	u3911
 13388   0048E4  EF76  F024         	goto	u3910
 13389   0048E8                     u3911:
 13390   0048E8  EF7F  F024         	goto	l4223
 13391   0048EC                     u3910:
 13392   0048EC  6C2A               	negf	___flge@ff1^0,c
 13393   0048EE  1E2B               	comf	(___flge@ff1+1)^0,f,c
 13394   0048F0  B0D8               	btfsc	status,0,c
 13395   0048F2  2A2B               	incf	(___flge@ff1+1)^0,f,c
 13396   0048F4  1E2C               	comf	(___flge@ff1+2)^0,f,c
 13397   0048F6  B0D8               	btfsc	status,0,c
 13398   0048F8  2A2C               	incf	(___flge@ff1+2)^0,f,c
 13399   0048FA  0E80               	movlw	128
 13400   0048FC  562D               	subfwb	(___flge@ff1+3)^0,f,c
 13401   0048FE                     l4223:
 13402   0048FE  AE31               	btfss	(___flge@ff2+3)^0,7,c
 13403   004900  EF84  F024         	goto	u3921
 13404   004904  EF86  F024         	goto	u3920
 13405   004908                     u3921:
 13406   004908  EF8F  F024         	goto	l863
 13407   00490C                     u3920:
 13408   00490C  6C2E               	negf	___flge@ff2^0,c
 13409   00490E  1E2F               	comf	(___flge@ff2+1)^0,f,c
 13410   004910  B0D8               	btfsc	status,0,c
 13411   004912  2A2F               	incf	(___flge@ff2+1)^0,f,c
 13412   004914  1E30               	comf	(___flge@ff2+2)^0,f,c
 13413   004916  B0D8               	btfsc	status,0,c
 13414   004918  2A30               	incf	(___flge@ff2+2)^0,f,c
 13415   00491A  0E80               	movlw	128
 13416   00491C  5631               	subfwb	(___flge@ff2+3)^0,f,c
 13417   00491E                     l863:
 13418   00491E  0E00               	movlw	0
 13419   004920  1A2A               	xorwf	___flge@ff1^0,f,c
 13420   004922  0E00               	movlw	0
 13421   004924  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 13422   004926  0E00               	movlw	0
 13423   004928  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 13424   00492A  0E80               	movlw	128
 13425   00492C  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 13426   00492E  0E00               	movlw	0
 13427   004930  1A2E               	xorwf	___flge@ff2^0,f,c
 13428   004932  0E00               	movlw	0
 13429   004934  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 13430   004936  0E00               	movlw	0
 13431   004938  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 13432   00493A  0E80               	movlw	128
 13433   00493C  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 13434   00493E  502E               	movf	___flge@ff2^0,w,c
 13435   004940  5C2A               	subwf	___flge@ff1^0,w,c
 13436   004942  502F               	movf	(___flge@ff2+1)^0,w,c
 13437   004944  582B               	subwfb	(___flge@ff1+1)^0,w,c
 13438   004946  5030               	movf	(___flge@ff2+2)^0,w,c
 13439   004948  582C               	subwfb	(___flge@ff1+2)^0,w,c
 13440   00494A  5031               	movf	(___flge@ff2+3)^0,w,c
 13441   00494C  582D               	subwfb	(___flge@ff1+3)^0,w,c
 13442   00494E  B0D8               	btfsc	status,0,c
 13443   004950  EFAC  F024         	goto	u3931
 13444   004954  EFAE  F024         	goto	u3930
 13445   004958                     u3931:
 13446   004958  EFB1  F024         	goto	l4229
 13447   00495C                     u3930:
 13448   00495C  90D8               	bcf	status,0,c
 13449   00495E  EFB2  F024         	goto	l868
 13450   004962                     l4229:
 13451   004962  80D8               	bsf	status,0,c
 13452   004964                     l868:
 13453   004964  0012               	return		;funcret
 13454   004966                     __end_of___flge:
 13455                           	callstack 0
 13456                           
 13457 ;; *************** function ___fleq *****************
 13458 ;; Defined at:
 13459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  ff1             4   49[COMRAM] unsigned char 
 13462 ;;  ff2             4   53[COMRAM] unsigned char 
 13463 ;; Auto vars:     Size  Location     Type
 13464 ;;		None
 13465 ;; Return value:  Size  Location     Type
 13466 ;;		None               void
 13467 ;; Registers used:
 13468 ;;		wreg, status,2, status,0
 13469 ;; Tracked objects:
 13470 ;;		On entry : 0/0
 13471 ;;		On exit  : 0/0
 13472 ;;		Unchanged: 0/0
 13473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13474 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13477 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13478 ;;Total ram usage:       12 bytes
 13479 ;; Hardware stack levels used: 1
 13480 ;; Hardware stack levels required when called: 1
 13481 ;; This function calls:
 13482 ;;		Nothing
 13483 ;; This function is called by:
 13484 ;;		_Colour_decider
 13485 ;;		_efgtoa
 13486 ;; This function uses a non-reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text71
 13490   004B2E                     __ptext71:
 13491                           	callstack 0
 13492   004B2E                     ___fleq:
 13493                           	callstack 25
 13494   004B2E  0E00               	movlw	0
 13495   004B30  1432               	andwf	___fleq@ff1^0,w,c
 13496   004B32  6E3A               	movwf	??___fleq^0,c
 13497   004B34  0E00               	movlw	0
 13498   004B36  1433               	andwf	(___fleq@ff1+1)^0,w,c
 13499   004B38  6E3B               	movwf	(??___fleq+1)^0,c
 13500   004B3A  0E80               	movlw	128
 13501   004B3C  1434               	andwf	(___fleq@ff1+2)^0,w,c
 13502   004B3E  6E3C               	movwf	(??___fleq+2)^0,c
 13503   004B40  0E7F               	movlw	127
 13504   004B42  1435               	andwf	(___fleq@ff1+3)^0,w,c
 13505   004B44  6E3D               	movwf	(??___fleq+3)^0,c
 13506   004B46  503A               	movf	??___fleq^0,w,c
 13507   004B48  103B               	iorwf	(??___fleq+1)^0,w,c
 13508   004B4A  103C               	iorwf	(??___fleq+2)^0,w,c
 13509   004B4C  103D               	iorwf	(??___fleq+3)^0,w,c
 13510   004B4E  A4D8               	btfss	status,2,c
 13511   004B50  EFAC  F025         	goto	u3861
 13512   004B54  EFAE  F025         	goto	u3860
 13513   004B58                     u3861:
 13514   004B58  EFB6  F025         	goto	l4199
 13515   004B5C                     u3860:
 13516   004B5C  0E00               	movlw	0
 13517   004B5E  6E32               	movwf	___fleq@ff1^0,c
 13518   004B60  0E00               	movlw	0
 13519   004B62  6E33               	movwf	(___fleq@ff1+1)^0,c
 13520   004B64  0E00               	movlw	0
 13521   004B66  6E34               	movwf	(___fleq@ff1+2)^0,c
 13522   004B68  0E00               	movlw	0
 13523   004B6A  6E35               	movwf	(___fleq@ff1+3)^0,c
 13524   004B6C                     l4199:
 13525   004B6C  0E00               	movlw	0
 13526   004B6E  1436               	andwf	___fleq@ff2^0,w,c
 13527   004B70  6E3A               	movwf	??___fleq^0,c
 13528   004B72  0E00               	movlw	0
 13529   004B74  1437               	andwf	(___fleq@ff2+1)^0,w,c
 13530   004B76  6E3B               	movwf	(??___fleq+1)^0,c
 13531   004B78  0E80               	movlw	128
 13532   004B7A  1438               	andwf	(___fleq@ff2+2)^0,w,c
 13533   004B7C  6E3C               	movwf	(??___fleq+2)^0,c
 13534   004B7E  0E7F               	movlw	127
 13535   004B80  1439               	andwf	(___fleq@ff2+3)^0,w,c
 13536   004B82  6E3D               	movwf	(??___fleq+3)^0,c
 13537   004B84  503A               	movf	??___fleq^0,w,c
 13538   004B86  103B               	iorwf	(??___fleq+1)^0,w,c
 13539   004B88  103C               	iorwf	(??___fleq+2)^0,w,c
 13540   004B8A  103D               	iorwf	(??___fleq+3)^0,w,c
 13541   004B8C  A4D8               	btfss	status,2,c
 13542   004B8E  EFCB  F025         	goto	u3871
 13543   004B92  EFCD  F025         	goto	u3870
 13544   004B96                     u3871:
 13545   004B96  EFD5  F025         	goto	l4203
 13546   004B9A                     u3870:
 13547   004B9A  0E00               	movlw	0
 13548   004B9C  6E36               	movwf	___fleq@ff2^0,c
 13549   004B9E  0E00               	movlw	0
 13550   004BA0  6E37               	movwf	(___fleq@ff2+1)^0,c
 13551   004BA2  0E00               	movlw	0
 13552   004BA4  6E38               	movwf	(___fleq@ff2+2)^0,c
 13553   004BA6  0E00               	movlw	0
 13554   004BA8  6E39               	movwf	(___fleq@ff2+3)^0,c
 13555   004BAA                     l4203:
 13556   004BAA  5036               	movf	___fleq@ff2^0,w,c
 13557   004BAC  1832               	xorwf	___fleq@ff1^0,w,c
 13558   004BAE  E10F               	bnz	u3880
 13559   004BB0  5037               	movf	(___fleq@ff2+1)^0,w,c
 13560   004BB2  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 13561   004BB4  E10C               	bnz	u3880
 13562   004BB6  5038               	movf	(___fleq@ff2+2)^0,w,c
 13563   004BB8  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 13564   004BBA  E109               	bnz	u3880
 13565   004BBC  5039               	movf	(___fleq@ff2+3)^0,w,c
 13566   004BBE  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 13567   004BC0  B4D8               	btfsc	status,2,c
 13568   004BC2  EFE5  F025         	goto	u3881
 13569   004BC6  EFE7  F025         	goto	u3880
 13570   004BCA                     u3881:
 13571   004BCA  EFEA  F025         	goto	l4207
 13572   004BCE                     u3880:
 13573   004BCE  90D8               	bcf	status,0,c
 13574   004BD0  EFEB  F025         	goto	l857
 13575   004BD4                     l4207:
 13576   004BD4  80D8               	bsf	status,0,c
 13577   004BD6                     l857:
 13578   004BD6  0012               	return		;funcret
 13579   004BD8                     __end_of___fleq:
 13580                           	callstack 0
 13581                           
 13582 ;; *************** function ___fldiv *****************
 13583 ;; Defined at:
 13584 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 13585 ;; Parameters:    Size  Location     Type
 13586 ;;  b               4   49[COMRAM] unsigned char 
 13587 ;;  a               4   53[COMRAM] unsigned char 
 13588 ;; Auto vars:     Size  Location     Type
 13589 ;;  grs             4   68[COMRAM] unsigned long 
 13590 ;;  rem             4   61[COMRAM] unsigned long 
 13591 ;;  new_exp         2   66[COMRAM] short 
 13592 ;;  aexp            1   73[COMRAM] unsigned char 
 13593 ;;  bexp            1   72[COMRAM] unsigned char 
 13594 ;;  sign            1   65[COMRAM] unsigned char 
 13595 ;; Return value:  Size  Location     Type
 13596 ;;                  4   49[COMRAM] unsigned char 
 13597 ;; Registers used:
 13598 ;;		wreg, status,2, status,0
 13599 ;; Tracked objects:
 13600 ;;		On entry : 0/0
 13601 ;;		On exit  : 0/0
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13604 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13605 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13606 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13607 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13608 ;;Total ram usage:       25 bytes
 13609 ;; Hardware stack levels used: 1
 13610 ;; Hardware stack levels required when called: 1
 13611 ;; This function calls:
 13612 ;;		Nothing
 13613 ;; This function is called by:
 13614 ;;		_colour_rel
 13615 ;;		_Colour_decider
 13616 ;;		_efgtoa
 13617 ;; This function uses a non-reentrant model
 13618 ;;
 13619                           
 13620                           	psect	text72
 13621   003120                     __ptext72:
 13622                           	callstack 0
 13623   003120                     ___fldiv:
 13624                           	callstack 25
 13625   003120  5035               	movf	(___fldiv@b+3)^0,w,c
 13626   003122  0B80               	andlw	128
 13627   003124  6E42               	movwf	___fldiv@sign^0,c
 13628   003126  5035               	movf	(___fldiv@b+3)^0,w,c
 13629   003128  2435               	addwf	(___fldiv@b+3)^0,w,c
 13630   00312A  6E49               	movwf	___fldiv@bexp^0,c
 13631   00312C  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13632   00312E  EF9B  F018         	goto	u3441
 13633   003132  EF9D  F018         	goto	u3440
 13634   003136                     u3441:
 13635   003136  EF9E  F018         	goto	l3927
 13636   00313A                     u3440:
 13637   00313A  8049               	bsf	___fldiv@bexp^0,0,c
 13638   00313C                     l3927:
 13639   00313C  5049               	movf	___fldiv@bexp^0,w,c
 13640   00313E  B4D8               	btfsc	status,2,c
 13641   003140  EFA4  F018         	goto	u3451
 13642   003144  EFA6  F018         	goto	u3450
 13643   003148                     u3451:
 13644   003148  EFBB  F018         	goto	l3937
 13645   00314C                     u3450:
 13646   00314C  2849               	incf	___fldiv@bexp^0,w,c
 13647   00314E  A4D8               	btfss	status,2,c
 13648   003150  EFAC  F018         	goto	u3461
 13649   003154  EFAE  F018         	goto	u3460
 13650   003158                     u3461:
 13651   003158  EFB6  F018         	goto	l3933
 13652   00315C                     u3460:
 13653   00315C  0E00               	movlw	0
 13654   00315E  6E32               	movwf	___fldiv@b^0,c
 13655   003160  0E00               	movlw	0
 13656   003162  6E33               	movwf	(___fldiv@b+1)^0,c
 13657   003164  0E00               	movlw	0
 13658   003166  6E34               	movwf	(___fldiv@b+2)^0,c
 13659   003168  0E00               	movlw	0
 13660   00316A  6E35               	movwf	(___fldiv@b+3)^0,c
 13661   00316C                     l3933:
 13662   00316C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 13663   00316E  0E00               	movlw	0
 13664   003170  6E35               	movwf	(___fldiv@b+3)^0,c
 13665   003172  EFC3  F018         	goto	l3939
 13666   003176                     l3937:
 13667   003176  0E00               	movlw	0
 13668   003178  6E32               	movwf	___fldiv@b^0,c
 13669   00317A  0E00               	movlw	0
 13670   00317C  6E33               	movwf	(___fldiv@b+1)^0,c
 13671   00317E  0E00               	movlw	0
 13672   003180  6E34               	movwf	(___fldiv@b+2)^0,c
 13673   003182  0E00               	movlw	0
 13674   003184  6E35               	movwf	(___fldiv@b+3)^0,c
 13675   003186                     l3939:
 13676   003186  5039               	movf	(___fldiv@a+3)^0,w,c
 13677   003188  0B80               	andlw	128
 13678   00318A  1A42               	xorwf	___fldiv@sign^0,f,c
 13679   00318C  5039               	movf	(___fldiv@a+3)^0,w,c
 13680   00318E  2439               	addwf	(___fldiv@a+3)^0,w,c
 13681   003190  6E4A               	movwf	___fldiv@aexp^0,c
 13682   003192  AE38               	btfss	(___fldiv@a+2)^0,7,c
 13683   003194  EFCE  F018         	goto	u3471
 13684   003198  EFD0  F018         	goto	u3470
 13685   00319C                     u3471:
 13686   00319C  EFD1  F018         	goto	l3947
 13687   0031A0                     u3470:
 13688   0031A0  804A               	bsf	___fldiv@aexp^0,0,c
 13689   0031A2                     l3947:
 13690   0031A2  504A               	movf	___fldiv@aexp^0,w,c
 13691   0031A4  B4D8               	btfsc	status,2,c
 13692   0031A6  EFD7  F018         	goto	u3481
 13693   0031AA  EFD9  F018         	goto	u3480
 13694   0031AE                     u3481:
 13695   0031AE  EFEE  F018         	goto	l3957
 13696   0031B2                     u3480:
 13697   0031B2  284A               	incf	___fldiv@aexp^0,w,c
 13698   0031B4  A4D8               	btfss	status,2,c
 13699   0031B6  EFDF  F018         	goto	u3491
 13700   0031BA  EFE1  F018         	goto	u3490
 13701   0031BE                     u3491:
 13702   0031BE  EFE9  F018         	goto	l3953
 13703   0031C2                     u3490:
 13704   0031C2  0E00               	movlw	0
 13705   0031C4  6E36               	movwf	___fldiv@a^0,c
 13706   0031C6  0E00               	movlw	0
 13707   0031C8  6E37               	movwf	(___fldiv@a+1)^0,c
 13708   0031CA  0E00               	movlw	0
 13709   0031CC  6E38               	movwf	(___fldiv@a+2)^0,c
 13710   0031CE  0E00               	movlw	0
 13711   0031D0  6E39               	movwf	(___fldiv@a+3)^0,c
 13712   0031D2                     l3953:
 13713   0031D2  8E38               	bsf	(___fldiv@a+2)^0,7,c
 13714   0031D4  0E00               	movlw	0
 13715   0031D6  6E39               	movwf	(___fldiv@a+3)^0,c
 13716   0031D8  EFF6  F018         	goto	l3959
 13717   0031DC                     l3957:
 13718   0031DC  0E00               	movlw	0
 13719   0031DE  6E36               	movwf	___fldiv@a^0,c
 13720   0031E0  0E00               	movlw	0
 13721   0031E2  6E37               	movwf	(___fldiv@a+1)^0,c
 13722   0031E4  0E00               	movlw	0
 13723   0031E6  6E38               	movwf	(___fldiv@a+2)^0,c
 13724   0031E8  0E00               	movlw	0
 13725   0031EA  6E39               	movwf	(___fldiv@a+3)^0,c
 13726   0031EC                     l3959:
 13727   0031EC  5036               	movf	___fldiv@a^0,w,c
 13728   0031EE  1037               	iorwf	(___fldiv@a+1)^0,w,c
 13729   0031F0  1038               	iorwf	(___fldiv@a+2)^0,w,c
 13730   0031F2  1039               	iorwf	(___fldiv@a+3)^0,w,c
 13731   0031F4  A4D8               	btfss	status,2,c
 13732   0031F6  EFFF  F018         	goto	u3501
 13733   0031FA  EF01  F019         	goto	u3500
 13734   0031FE                     u3501:
 13735   0031FE  EF19  F019         	goto	l3971
 13736   003202                     u3500:
 13737   003202  0E00               	movlw	0
 13738   003204  6E32               	movwf	___fldiv@b^0,c
 13739   003206  0E00               	movlw	0
 13740   003208  6E33               	movwf	(___fldiv@b+1)^0,c
 13741   00320A  0E00               	movlw	0
 13742   00320C  6E34               	movwf	(___fldiv@b+2)^0,c
 13743   00320E  0E00               	movlw	0
 13744   003210  6E35               	movwf	(___fldiv@b+3)^0,c
 13745   003212  0E80               	movlw	128
 13746   003214  1234               	iorwf	(___fldiv@b+2)^0,f,c
 13747   003216  0E7F               	movlw	127
 13748   003218  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13749   00321A                     l3965:
 13750   00321A  5042               	movf	___fldiv@sign^0,w,c
 13751   00321C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 13752   00321E  C032  F032         	movff	___fldiv@b,?___fldiv
 13753   003222  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 13754   003226  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 13755   00322A  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 13756   00322E  EF5C  F01A         	goto	l1180
 13757   003232                     l3971:
 13758   003232  5049               	movf	___fldiv@bexp^0,w,c
 13759   003234  A4D8               	btfss	status,2,c
 13760   003236  EF1F  F019         	goto	u3511
 13761   00323A  EF21  F019         	goto	u3510
 13762   00323E                     u3511:
 13763   00323E  EF2B  F019         	goto	l3979
 13764   003242                     u3510:
 13765   003242  0E00               	movlw	0
 13766   003244  6E32               	movwf	?___fldiv^0,c
 13767   003246  0E00               	movlw	0
 13768   003248  6E33               	movwf	(?___fldiv+1)^0,c
 13769   00324A  0E00               	movlw	0
 13770   00324C  6E34               	movwf	(?___fldiv+2)^0,c
 13771   00324E  0E00               	movlw	0
 13772   003250  6E35               	movwf	(?___fldiv+3)^0,c
 13773   003252  EF5C  F01A         	goto	l1180
 13774   003256                     l3979:
 13775   003256  504A               	movf	___fldiv@aexp^0,w,c
 13776   003258  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 13777   00325C  6A3B               	clrf	(??___fldiv+1)^0,c
 13778   00325E  5E3A               	subwf	??___fldiv^0,f,c
 13779   003260  0E00               	movlw	0
 13780   003262  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 13781   003264  0E7F               	movlw	127
 13782   003266  243A               	addwf	??___fldiv^0,w,c
 13783   003268  6E43               	movwf	___fldiv@new_exp^0,c
 13784   00326A  0E00               	movlw	0
 13785   00326C  203B               	addwfc	(??___fldiv+1)^0,w,c
 13786   00326E  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 13787   003270  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 13788   003274  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 13789   003278  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 13790   00327C  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 13791   003280  0E00               	movlw	0
 13792   003282  6E32               	movwf	___fldiv@b^0,c
 13793   003284  0E00               	movlw	0
 13794   003286  6E33               	movwf	(___fldiv@b+1)^0,c
 13795   003288  0E00               	movlw	0
 13796   00328A  6E34               	movwf	(___fldiv@b+2)^0,c
 13797   00328C  0E00               	movlw	0
 13798   00328E  6E35               	movwf	(___fldiv@b+3)^0,c
 13799   003290  0E00               	movlw	0
 13800   003292  6E45               	movwf	___fldiv@grs^0,c
 13801   003294  0E00               	movlw	0
 13802   003296  6E46               	movwf	(___fldiv@grs+1)^0,c
 13803   003298  0E00               	movlw	0
 13804   00329A  6E47               	movwf	(___fldiv@grs+2)^0,c
 13805   00329C  0E00               	movlw	0
 13806   00329E  6E48               	movwf	(___fldiv@grs+3)^0,c
 13807   0032A0  0E00               	movlw	0
 13808   0032A2  6E4A               	movwf	___fldiv@aexp^0,c
 13809   0032A4  EF8C  F019         	goto	l1182
 13810   0032A8                     l3989:
 13811   0032A8  504A               	movf	___fldiv@aexp^0,w,c
 13812   0032AA  B4D8               	btfsc	status,2,c
 13813   0032AC  EF5A  F019         	goto	u3521
 13814   0032B0  EF5C  F019         	goto	u3520
 13815   0032B4                     u3521:
 13816   0032B4  EF73  F019         	goto	l3997
 13817   0032B8                     u3520:
 13818   0032B8  90D8               	bcf	status,0,c
 13819   0032BA  363E               	rlcf	___fldiv@rem^0,f,c
 13820   0032BC  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 13821   0032BE  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 13822   0032C0  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 13823   0032C2  90D8               	bcf	status,0,c
 13824   0032C4  3632               	rlcf	___fldiv@b^0,f,c
 13825   0032C6  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13826   0032C8  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13827   0032CA  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13828   0032CC  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13829   0032CE  EF6B  F019         	goto	u3531
 13830   0032D2  EF6D  F019         	goto	u3530
 13831   0032D6                     u3531:
 13832   0032D6  EF6E  F019         	goto	l1185
 13833   0032DA                     u3530:
 13834   0032DA  8032               	bsf	___fldiv@b^0,0,c
 13835   0032DC                     l1185:
 13836   0032DC  90D8               	bcf	status,0,c
 13837   0032DE  3645               	rlcf	___fldiv@grs^0,f,c
 13838   0032E0  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13839   0032E2  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13840   0032E4  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13841   0032E6                     l3997:
 13842   0032E6  5036               	movf	___fldiv@a^0,w,c
 13843   0032E8  5C3E               	subwf	___fldiv@rem^0,w,c
 13844   0032EA  5037               	movf	(___fldiv@a+1)^0,w,c
 13845   0032EC  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 13846   0032EE  5038               	movf	(___fldiv@a+2)^0,w,c
 13847   0032F0  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 13848   0032F2  5039               	movf	(___fldiv@a+3)^0,w,c
 13849   0032F4  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 13850   0032F6  A0D8               	btfss	status,0,c
 13851   0032F8  EF80  F019         	goto	u3541
 13852   0032FC  EF82  F019         	goto	u3540
 13853   003300                     u3541:
 13854   003300  EF8B  F019         	goto	l4003
 13855   003304                     u3540:
 13856   003304  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 13857   003306  5036               	movf	___fldiv@a^0,w,c
 13858   003308  5E3E               	subwf	___fldiv@rem^0,f,c
 13859   00330A  5037               	movf	(___fldiv@a+1)^0,w,c
 13860   00330C  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 13861   00330E  5038               	movf	(___fldiv@a+2)^0,w,c
 13862   003310  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 13863   003312  5039               	movf	(___fldiv@a+3)^0,w,c
 13864   003314  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 13865   003316                     l4003:
 13866   003316  2A4A               	incf	___fldiv@aexp^0,f,c
 13867   003318                     l1182:
 13868   003318  0E19               	movlw	25
 13869   00331A  644A               	cpfsgt	___fldiv@aexp^0,c
 13870   00331C  EF92  F019         	goto	u3551
 13871   003320  EF94  F019         	goto	u3550
 13872   003324                     u3551:
 13873   003324  EF54  F019         	goto	l3989
 13874   003328                     u3550:
 13875   003328  503E               	movf	___fldiv@rem^0,w,c
 13876   00332A  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 13877   00332C  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 13878   00332E  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 13879   003330  B4D8               	btfsc	status,2,c
 13880   003332  EF9D  F019         	goto	u3561
 13881   003336  EF9F  F019         	goto	u3560
 13882   00333A                     u3561:
 13883   00333A  EFB7  F019         	goto	l4015
 13884   00333E                     u3560:
 13885   00333E  8045               	bsf	___fldiv@grs^0,0,c
 13886   003340  EFB7  F019         	goto	l4015
 13887   003344                     l4009:
 13888   003344  90D8               	bcf	status,0,c
 13889   003346  3632               	rlcf	___fldiv@b^0,f,c
 13890   003348  3633               	rlcf	(___fldiv@b+1)^0,f,c
 13891   00334A  3634               	rlcf	(___fldiv@b+2)^0,f,c
 13892   00334C  3635               	rlcf	(___fldiv@b+3)^0,f,c
 13893   00334E  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13894   003350  EFAC  F019         	goto	u3571
 13895   003354  EFAE  F019         	goto	u3570
 13896   003358                     u3571:
 13897   003358  EFAF  F019         	goto	l1191
 13898   00335C                     u3570:
 13899   00335C  8032               	bsf	___fldiv@b^0,0,c
 13900   00335E                     l1191:
 13901   00335E  90D8               	bcf	status,0,c
 13902   003360  3645               	rlcf	___fldiv@grs^0,f,c
 13903   003362  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 13904   003364  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 13905   003366  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 13906   003368  0643               	decf	___fldiv@new_exp^0,f,c
 13907   00336A  A0D8               	btfss	status,0,c
 13908   00336C  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 13909   00336E                     l4015:
 13910   00336E  AE34               	btfss	(___fldiv@b+2)^0,7,c
 13911   003370  EFBC  F019         	goto	u3581
 13912   003374  EFBE  F019         	goto	u3580
 13913   003378                     u3581:
 13914   003378  EFA2  F019         	goto	l4009
 13915   00337C                     u3580:
 13916   00337C  0E00               	movlw	0
 13917   00337E  6E4A               	movwf	___fldiv@aexp^0,c
 13918   003380  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 13919   003382  EFC5  F019         	goto	u3591
 13920   003386  EFC7  F019         	goto	u3590
 13921   00338A                     u3591:
 13922   00338A  EFEB  F019         	goto	l1193
 13923   00338E                     u3590:
 13924   00338E  0EFF               	movlw	255
 13925   003390  1445               	andwf	___fldiv@grs^0,w,c
 13926   003392  6E3A               	movwf	??___fldiv^0,c
 13927   003394  0EFF               	movlw	255
 13928   003396  1446               	andwf	(___fldiv@grs+1)^0,w,c
 13929   003398  6E3B               	movwf	(??___fldiv+1)^0,c
 13930   00339A  0EFF               	movlw	255
 13931   00339C  1447               	andwf	(___fldiv@grs+2)^0,w,c
 13932   00339E  6E3C               	movwf	(??___fldiv+2)^0,c
 13933   0033A0  0E7F               	movlw	127
 13934   0033A2  1448               	andwf	(___fldiv@grs+3)^0,w,c
 13935   0033A4  6E3D               	movwf	(??___fldiv+3)^0,c
 13936   0033A6  503A               	movf	??___fldiv^0,w,c
 13937   0033A8  103B               	iorwf	(??___fldiv+1)^0,w,c
 13938   0033AA  103C               	iorwf	(??___fldiv+2)^0,w,c
 13939   0033AC  103D               	iorwf	(??___fldiv+3)^0,w,c
 13940   0033AE  B4D8               	btfsc	status,2,c
 13941   0033B0  EFDC  F019         	goto	u3601
 13942   0033B4  EFDE  F019         	goto	u3600
 13943   0033B8                     u3601:
 13944   0033B8  EFE2  F019         	goto	l1194
 13945   0033BC                     u3600:
 13946   0033BC                     l4023:
 13947   0033BC  0E01               	movlw	1
 13948   0033BE  6E4A               	movwf	___fldiv@aexp^0,c
 13949   0033C0  EFEB  F019         	goto	l1193
 13950   0033C4                     l1194:
 13951   0033C4  A032               	btfss	___fldiv@b^0,0,c
 13952   0033C6  EFE7  F019         	goto	u3611
 13953   0033CA  EFE9  F019         	goto	u3610
 13954   0033CE                     u3611:
 13955   0033CE  EFEB  F019         	goto	l1193
 13956   0033D2                     u3610:
 13957   0033D2  EFDE  F019         	goto	l4023
 13958   0033D6                     l1193:
 13959   0033D6  504A               	movf	___fldiv@aexp^0,w,c
 13960   0033D8  B4D8               	btfsc	status,2,c
 13961   0033DA  EFF1  F019         	goto	u3621
 13962   0033DE  EFF3  F019         	goto	u3620
 13963   0033E2                     u3621:
 13964   0033E2  EF17  F01A         	goto	l4035
 13965   0033E6                     u3620:
 13966   0033E6  0E01               	movlw	1
 13967   0033E8  2632               	addwf	___fldiv@b^0,f,c
 13968   0033EA  0E00               	movlw	0
 13969   0033EC  2233               	addwfc	(___fldiv@b+1)^0,f,c
 13970   0033EE  2234               	addwfc	(___fldiv@b+2)^0,f,c
 13971   0033F0  2235               	addwfc	(___fldiv@b+3)^0,f,c
 13972   0033F2  A035               	btfss	(___fldiv@b+3)^0,0,c
 13973   0033F4  EFFE  F019         	goto	u3631
 13974   0033F8  EF00  F01A         	goto	u3630
 13975   0033FC                     u3631:
 13976   0033FC  EF17  F01A         	goto	l4035
 13977   003400                     u3630:
 13978   003400  C032  F03A         	movff	___fldiv@b,??___fldiv
 13979   003404  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 13980   003408  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 13981   00340C  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 13982   003410  343D               	rlcf	(??___fldiv+3)^0,w,c
 13983   003412  323D               	rrcf	(??___fldiv+3)^0,f,c
 13984   003414  323C               	rrcf	(??___fldiv+2)^0,f,c
 13985   003416  323B               	rrcf	(??___fldiv+1)^0,f,c
 13986   003418  323A               	rrcf	??___fldiv^0,f,c
 13987   00341A  C03A  F032         	movff	??___fldiv,___fldiv@b
 13988   00341E  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 13989   003422  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 13990   003426  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 13991   00342A  4A43               	infsnz	___fldiv@new_exp^0,f,c
 13992   00342C  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 13993   00342E                     l4035:
 13994   00342E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13995   003430  EF22  F01A         	goto	u3641
 13996   003434  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 13997   003436  E108               	bnz	u3640
 13998   003438  2843               	incf	___fldiv@new_exp^0,w,c
 13999   00343A  A0D8               	btfss	status,0,c
 14000   00343C  EF22  F01A         	goto	u3641
 14001   003440  EF24  F01A         	goto	u3640
 14002   003444                     u3641:
 14003   003444  EF2F  F01A         	goto	l4039
 14004   003448                     u3640:
 14005   003448  0E00               	movlw	0
 14006   00344A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14007   00344C  6843               	setf	___fldiv@new_exp^0,c
 14008   00344E  0E00               	movlw	0
 14009   003450  6E32               	movwf	___fldiv@b^0,c
 14010   003452  0E00               	movlw	0
 14011   003454  6E33               	movwf	(___fldiv@b+1)^0,c
 14012   003456  0E00               	movlw	0
 14013   003458  6E34               	movwf	(___fldiv@b+2)^0,c
 14014   00345A  0E00               	movlw	0
 14015   00345C  6E35               	movwf	(___fldiv@b+3)^0,c
 14016   00345E                     l4039:
 14017   00345E  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 14018   003460  EF3C  F01A         	goto	u3650
 14019   003464  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 14020   003466  E106               	bnz	u3651
 14021   003468  0443               	decf	___fldiv@new_exp^0,w,c
 14022   00346A  B0D8               	btfsc	status,0,c
 14023   00346C  EF3A  F01A         	goto	u3651
 14024   003470  EF3C  F01A         	goto	u3650
 14025   003474                     u3651:
 14026   003474  EF4A  F01A         	goto	l4043
 14027   003478                     u3650:
 14028   003478  0E00               	movlw	0
 14029   00347A  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 14030   00347C  0E00               	movlw	0
 14031   00347E  6E43               	movwf	___fldiv@new_exp^0,c
 14032   003480  0E00               	movlw	0
 14033   003482  6E32               	movwf	___fldiv@b^0,c
 14034   003484  0E00               	movlw	0
 14035   003486  6E33               	movwf	(___fldiv@b+1)^0,c
 14036   003488  0E00               	movlw	0
 14037   00348A  6E34               	movwf	(___fldiv@b+2)^0,c
 14038   00348C  0E00               	movlw	0
 14039   00348E  6E35               	movwf	(___fldiv@b+3)^0,c
 14040   003490  0E00               	movlw	0
 14041   003492  6E42               	movwf	___fldiv@sign^0,c
 14042   003494                     l4043:
 14043   003494  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 14044   003498  A049               	btfss	___fldiv@bexp^0,0,c
 14045   00349A  EF51  F01A         	goto	u3661
 14046   00349E  EF53  F01A         	goto	u3660
 14047   0034A2                     u3661:
 14048   0034A2  EF56  F01A         	goto	l4049
 14049   0034A6                     u3660:
 14050   0034A6  8E34               	bsf	(___fldiv@b+2)^0,7,c
 14051   0034A8  EF57  F01A         	goto	l4051
 14052   0034AC                     l4049:
 14053   0034AC  9E34               	bcf	(___fldiv@b+2)^0,7,c
 14054   0034AE                     l4051:
 14055   0034AE  90D8               	bcf	status,0,c
 14056   0034B0  3049               	rrcf	___fldiv@bexp^0,w,c
 14057   0034B2  6E35               	movwf	(___fldiv@b+3)^0,c
 14058   0034B4  EF0D  F019         	goto	l3965
 14059   0034B8                     l1180:
 14060   0034B8  0012               	return		;funcret
 14061   0034BA                     __end_of___fldiv:
 14062                           	callstack 0
 14063                           
 14064 ;; *************** function _HighISR *****************
 14065 ;; Defined at:
 14066 ;;		line 59 in file "interrupts.c"
 14067 ;; Parameters:    Size  Location     Type
 14068 ;;		None
 14069 ;; Auto vars:     Size  Location     Type
 14070 ;;		None
 14071 ;; Return value:  Size  Location     Type
 14072 ;;                  1    wreg      void 
 14073 ;; Registers used:
 14074 ;;		None
 14075 ;; Tracked objects:
 14076 ;;		On entry : 0/0
 14077 ;;		On exit  : 0/0
 14078 ;;		Unchanged: 0/0
 14079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;Total ram usage:        0 bytes
 14085 ;; Hardware stack levels used: 1
 14086 ;; This function calls:
 14087 ;;		Nothing
 14088 ;; This function is called by:
 14089 ;;		Interrupt level 2
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	intcode
 14094   000008                     __pintcode:
 14095                           	callstack 0
 14096   000008                     _HighISR:
 14097                           	callstack 22
 14098                           
 14099                           ;incstack = 0
 14100   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 14101   00000A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 14102   00000C  0011               	retfie		f
 14103   00000E                     __end_of_HighISR:
 14104                           	callstack 0
 14105                           
 14106                           	psect	rparam
 14107   000000                     
 14108                           	psect	temp
 14109   00005F                     btemp:
 14110                           	callstack 0
 14111   00005F                     	ds	1
 14112   000000                     int$flags	set	btemp
 14113   000000                     wtemp8	set	btemp+1
 14114   000000                     ttemp5	set	btemp+1
 14115   000000                     ttemp6	set	btemp+4
 14116   000000                     ttemp7	set	btemp+8
 14117                           
 14118                           	psect	idloc
 14119                           
 14120                           ;Config register IDLOC0 @ 0x200000
 14121                           ;	unspecified, using default values
 14122   200000                     	org	2097152
 14123   200000  0FFF               	dw	4095
 14124                           
 14125                           ;Config register IDLOC1 @ 0x200002
 14126                           ;	unspecified, using default values
 14127   200002                     	org	2097154
 14128   200002  0FFF               	dw	4095
 14129                           
 14130                           ;Config register IDLOC2 @ 0x200004
 14131                           ;	unspecified, using default values
 14132   200004                     	org	2097156
 14133   200004  0FFF               	dw	4095
 14134                           
 14135                           ;Config register IDLOC3 @ 0x200006
 14136                           ;	unspecified, using default values
 14137   200006                     	org	2097158
 14138   200006  0FFF               	dw	4095
 14139                           
 14140                           ;Config register IDLOC4 @ 0x200008
 14141                           ;	unspecified, using default values
 14142   200008                     	org	2097160
 14143   200008  0FFF               	dw	4095
 14144                           
 14145                           ;Config register IDLOC5 @ 0x20000A
 14146                           ;	unspecified, using default values
 14147   20000A                     	org	2097162
 14148   20000A  0FFF               	dw	4095
 14149                           
 14150                           ;Config register IDLOC6 @ 0x20000C
 14151                           ;	unspecified, using default values
 14152   20000C                     	org	2097164
 14153   20000C  0FFF               	dw	4095
 14154                           
 14155                           ;Config register IDLOC7 @ 0x20000E
 14156                           ;	unspecified, using default values
 14157   20000E                     	org	2097166
 14158   20000E  0FFF               	dw	4095
 14159                           
 14160                           	psect	config
 14161                           
 14162                           ;Config register CONFIG1L @ 0x300000
 14163                           ;	External Oscillator mode Selection bits
 14164                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 14165                           ;	Power-up default value for COSC bits
 14166                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 14167   300000                     	org	3145728
 14168   300000  AA                 	db	170
 14169                           
 14170                           ;Config register CONFIG1H @ 0x300001
 14171                           ;	unspecified, using default values
 14172                           ;	Clock Out Enable bit
 14173                           ;	CLKOUTEN = 0x1, unprogrammed default
 14174                           ;	Clock Switch Enable bit
 14175                           ;	CSWEN = 0x1, unprogrammed default
 14176                           ;	Fail-Safe Clock Monitor Enable bit
 14177                           ;	FCMEN = 0x1, unprogrammed default
 14178   300001                     	org	3145729
 14179   300001  FF                 	db	255
 14180                           
 14181                           ;Config register CONFIG2L @ 0x300002
 14182                           ;	unspecified, using default values
 14183                           ;	Master Clear Enable bit
 14184                           ;	MCLRE = 0x1, unprogrammed default
 14185                           ;	Power-up Timer Enable bit
 14186                           ;	PWRTE = 0x1, unprogrammed default
 14187                           ;	Low-power BOR enable bit
 14188                           ;	LPBOREN = 0x1, unprogrammed default
 14189                           ;	Brown-out Reset Enable bits
 14190                           ;	BOREN = 0x3, unprogrammed default
 14191   300002                     	org	3145730
 14192   300002  FF                 	db	255
 14193                           
 14194                           ;Config register CONFIG2H @ 0x300003
 14195                           ;	unspecified, using default values
 14196                           ;	Brown Out Reset Voltage selection bits
 14197                           ;	BORV = 0x3, unprogrammed default
 14198                           ;	ZCD Disable bit
 14199                           ;	ZCD = 0x1, unprogrammed default
 14200                           ;	PPSLOCK bit One-Way Set Enable bit
 14201                           ;	PPS1WAY = 0x1, unprogrammed default
 14202                           ;	Stack Full/Underflow Reset Enable bit
 14203                           ;	STVREN = 0x1, unprogrammed default
 14204                           ;	Debugger Enable bit
 14205                           ;	DEBUG = 0x1, unprogrammed default
 14206                           ;	Extended Instruction Set Enable bit
 14207                           ;	XINST = 0x1, unprogrammed default
 14208   300003                     	org	3145731
 14209   300003  FF                 	db	255
 14210                           
 14211                           ;Config register CONFIG3L @ 0x300004
 14212                           ;	WDT Period Select bits
 14213                           ;	WDTCPS = 0x1F, unprogrammed default
 14214                           ;	WDT operating mode
 14215                           ;	WDTE = OFF, WDT Disabled
 14216   300004                     	org	3145732
 14217   300004  9F                 	db	159
 14218                           
 14219                           ;Config register CONFIG3H @ 0x300005
 14220                           ;	unspecified, using default values
 14221                           ;	WDT Window Select bits
 14222                           ;	WDTCWS = 0x7, unprogrammed default
 14223                           ;	WDT input clock selector
 14224                           ;	WDTCCS = 0x7, unprogrammed default
 14225   300005                     	org	3145733
 14226   300005  FF                 	db	255
 14227                           
 14228                           ;Config register CONFIG4L @ 0x300006
 14229                           ;	unspecified, using default values
 14230                           ;	Write Protection Block 0
 14231                           ;	WRT0 = 0x1, unprogrammed default
 14232                           ;	Write Protection Block 1
 14233                           ;	WRT1 = 0x1, unprogrammed default
 14234                           ;	Write Protection Block 2
 14235                           ;	WRT2 = 0x1, unprogrammed default
 14236                           ;	Write Protection Block 3
 14237                           ;	WRT3 = 0x1, unprogrammed default
 14238                           ;	Write Protection Block 3
 14239                           ;	WRT4 = 0x1, unprogrammed default
 14240                           ;	Write Protection Block 3
 14241                           ;	WRT5 = 0x1, unprogrammed default
 14242                           ;	Write Protection Block 3
 14243                           ;	WRT6 = 0x1, unprogrammed default
 14244                           ;	Write Protection Block 3
 14245                           ;	WRT7 = 0x1, unprogrammed default
 14246   300006                     	org	3145734
 14247   300006  FF                 	db	255
 14248                           
 14249                           ;Config register CONFIG4H @ 0x300007
 14250                           ;	unspecified, using default values
 14251                           ;	Configuration Register Write Protection bit
 14252                           ;	WRTC = 0x1, unprogrammed default
 14253                           ;	Boot Block Write Protection bit
 14254                           ;	WRTB = 0x1, unprogrammed default
 14255                           ;	Data EEPROM Write Protection bit
 14256                           ;	WRTD = 0x1, unprogrammed default
 14257                           ;	Scanner Enable bit
 14258                           ;	SCANE = 0x1, unprogrammed default
 14259                           ;	Low Voltage Programming Enable bit
 14260                           ;	LVP = 0x1, unprogrammed default
 14261   300007                     	org	3145735
 14262   300007  FF                 	db	255
 14263                           
 14264                           ;Config register CONFIG5L @ 0x300008
 14265                           ;	unspecified, using default values
 14266                           ;	UserNVM Program Memory Code Protection bit
 14267                           ;	CP = 0x1, unprogrammed default
 14268                           ;	DataNVM Memory Code Protection bit
 14269                           ;	CPD = 0x1, unprogrammed default
 14270   300008                     	org	3145736
 14271   300008  FF                 	db	255
 14272                           
 14273                           ;Config register CONFIG5H @ 0x300009
 14274                           ;	unspecified, using default values
 14275   300009                     	org	3145737
 14276   300009  FF                 	db	255
 14277                           
 14278                           ;Config register CONFIG6L @ 0x30000A
 14279                           ;	unspecified, using default values
 14280                           ;	Table Read Protection Block 0
 14281                           ;	EBTR0 = 0x1, unprogrammed default
 14282                           ;	Table Read Protection Block 1
 14283                           ;	EBTR1 = 0x1, unprogrammed default
 14284                           ;	Table Read Protection Block 2
 14285                           ;	EBTR2 = 0x1, unprogrammed default
 14286                           ;	Table Read Protection Block 3
 14287                           ;	EBTR3 = 0x1, unprogrammed default
 14288                           ;	Table Read Protection Block 4
 14289                           ;	EBTR4 = 0x1, unprogrammed default
 14290                           ;	Table Read Protection Block 5
 14291                           ;	EBTR5 = 0x1, unprogrammed default
 14292                           ;	Table Read Protection Block 6
 14293                           ;	EBTR6 = 0x1, unprogrammed default
 14294                           ;	Table Read Protection Block 7
 14295                           ;	EBTR7 = 0x1, unprogrammed default
 14296   30000A                     	org	3145738
 14297   30000A  FF                 	db	255
 14298                           
 14299                           ;Config register CONFIG6H @ 0x30000B
 14300                           ;	unspecified, using default values
 14301                           ;	Boot Block Table Read Protection bit
 14302                           ;	EBTRB = 0x1, unprogrammed default
 14303   30000B                     	org	3145739
 14304   30000B  FF                 	db	255
 14305                           tosu	equ	0xFFF
 14306                           tosh	equ	0xFFE
 14307                           tosl	equ	0xFFD
 14308                           stkptr	equ	0xFFC
 14309                           pclatu	equ	0xFFB
 14310                           pclath	equ	0xFFA
 14311                           pcl	equ	0xFF9
 14312                           tblptru	equ	0xFF8
 14313                           tblptrh	equ	0xFF7
 14314                           tblptrl	equ	0xFF6
 14315                           tablat	equ	0xFF5
 14316                           prodh	equ	0xFF4
 14317                           prodl	equ	0xFF3
 14318                           indf0	equ	0xFEF
 14319                           postinc0	equ	0xFEE
 14320                           postdec0	equ	0xFED
 14321                           preinc0	equ	0xFEC
 14322                           plusw0	equ	0xFEB
 14323                           fsr0h	equ	0xFEA
 14324                           fsr0l	equ	0xFE9
 14325                           wreg	equ	0xFE8
 14326                           indf1	equ	0xFE7
 14327                           postinc1	equ	0xFE6
 14328                           postdec1	equ	0xFE5
 14329                           preinc1	equ	0xFE4
 14330                           plusw1	equ	0xFE3
 14331                           fsr1h	equ	0xFE2
 14332                           fsr1l	equ	0xFE1
 14333                           bsr	equ	0xFE0
 14334                           indf2	equ	0xFDF
 14335                           postinc2	equ	0xFDE
 14336                           postdec2	equ	0xFDD
 14337                           preinc2	equ	0xFDC
 14338                           plusw2	equ	0xFDB
 14339                           fsr2h	equ	0xFDA
 14340                           fsr2l	equ	0xFD9
 14341                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        3
    BSS         481
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     157
    BANK1           256    108     240
    BANK2           256      0      60
    BANK3           256      0     250
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2351$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_2(CODE[34]), STR_1(CODE[45]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2267$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2267$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 250
		 -> WayBack(BANK3[250]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_LightBlueMove
    _go_Home->_OrangeMove
    _go_Home->_RedMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_turnLeft45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_turnRight45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _RetryMove->_fullSpeedAhead
    _RetryMove->_fullSpeedBack
    _RetryMove->_stop
    _fullSpeedAhead->_setMotorPWM
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _stop->_setMotorPWM
    _fullSpeedBack->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0  319238
                                            113 BANK0      2     2      0
                                              0 BANK1    108   108      0
                           _BlueMove
                     _Colour_decider
                   _Forwardhalfblock
                          _GreenMove
                  _I2C_2_Master_Init
                    _Interrupts_init
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                   _color_click_init
                         _colour_rel
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35365
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34858
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34505
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28659
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              5     3      2  111544
                                             34 COMRAM     5     3      2
                           _BlueMove
                   _Forwardhalfblock
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                            _RedMove
                        _ReversePink
                      _ReverseYellow
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   13796
                                             30 COMRAM     4     0      4
                    _ForwardOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   14404
                                             30 COMRAM     4     0      4
                    _ForwardOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    6442
                                             24 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   15468
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   15468
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   14860
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   14860
                                             30 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _Forwardhalfblock                                     6     2      4    6594
                                             24 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   15620
                                             30 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8600
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _YellowMove                                           4     0      4   21910
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    7810
                                             24 COMRAM     6     2      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _RetryMove                                            6     2      4    8947
                                             24 COMRAM     6     2      4
                     _fullSpeedAhead
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       5     1      4    2461
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _PinkMove                                             4     0      4   21302
                                             30 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _turnLeft45                                           6     2      4    7202
                                             24 COMRAM     6     2      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             5     1      4    2157
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverseOneBlock                                      6     2      4    6594
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    7354
                                             24 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    3633
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        5     1      4    2613
                                             19 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23331
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     665
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BlueMove
     _reverseDetect
       _fullSpeedBack
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
     _turnRight45
       _stop
       _turnRight
         _setMotorPWM
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _GreenMove
     _reverseDetect
     _turnLeft45
       _stop
       _turnLeft
         _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LightBlueMove
     _reverseDetect
     _turnLeft45
   _OrangeMove
     _reverseDetect
     _turnRight45
   _PinkMove
     _reverseDetect
     _reverseOneBlock
       _fullSpeedBack
       _stop
     _turnLeft45
   _RedMove
     _reverseDetect
     _turnRight45
   _RetryMove
     _fullSpeedAhead
     _fullSpeedBack
     _stop
   _YellowMove
     _reverseDetect
     _reverseOneBlock
     _turnRight45
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _go_Home
     _BlueMove
     _Forwardhalfblock
     _GreenMove
     _LightBlueMove
     _OrangeMove
     _RedMove
     _ReversePink
       _ForwardOneBlock
         _fullSpeedAhead
         _stop
       _turnRight45
     _ReverseYellow
       _ForwardOneBlock
       _turnLeft45
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FA      11       97.7%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      3C       9       23.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      F0       7       93.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      36        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhlh        E      0       0      33        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRhlll        6      0       0      37        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      35        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRllh         1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     321      60        0.0%
DATA                 0      0     321       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 21:25:40 2023

               _color_read_Red 571E                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 56CE                   ___fldiv@sign 0042                _color_read_Blue 57BE  
                           l42 5B54                             l51 57BC                             l60 37E6  
                           l45 571C                             l70 1934                             l54 580C  
                           l39 55D8                             l48 576C                             l57 51C6  
          ___wmul@multiplicand 0003               _color_read_Green 576E                readColours@vals 000C  
            ??_Interrupts_init 0001                            l203 5B76                            l140 5B0E  
                          l212 5ABC                            l134 5AE6                            l206 5B8A  
                          l143 5BB4                            l152 5B96                            l137 5AE8  
                          l146 5BA0                            l155 591C                            l500 4E2E  
                          l149 5BAA                            l406 2832                            l503 52D4  
                          l512 5388                            l266 5BBC                            l506 532E  
                          l530 5168                            l194 5B72                            l515 5220  
                          l524 5A16                            l509 53E2                            l533 562A  
                          l462 45F6                            l518 527A                            l542 5586  
                          l527 5A54                            l551 59D8                            l455 4EB6  
                          l536 567C                            l712 448A                            l376 23C4  
                          l545 4F38                            l539 5534                            l468 5028  
                          l476 4D98                            l492 4D02                            l484 4C6C  
                          l548 599A                            l725 475A                            l398 27D8  
                          l595 414E                            l589 4144                            l598 5B34  
                          l863 491E                            l872 5A8C                            l857 4BD6  
                          l868 4964                            l895 4860                            _abs 591E  
                          _pad 4F3A                            _rel 015E                            wreg 000FE8  
                 ___flmul@aexp 0022                   ___flmul@bexp 0023                   ___flmul@sign 001D  
                 ___flmul@temp 0028                   ___flmul@prod 0024                   ___fltol@exp1 000A  
              Colour_decider@i 007A                           ?_abs 0013                           l1212 2DBA  
                         l1221 3028                           l1222 3016                           l1126 2A24  
                         l1143 2B3E                           l1135 2CF4                           l1127 2A12  
                         l1216 311E                           l1152 2C0E                           l1128 29D8  
                         l1312 4FB2                           l1320 3BC8                           l1153 2BFC  
                         l1219 2FB0                           l1331 3D6A                           l1180 34B8  
                         l1260 423E                           l1308 4F5C                           l1412 5490  
                         l1229 30E0                           l1253 41A6                           l1317 3B7A  
                         l1182 3318                           l1430 595C                           l1422 4A62  
                         l1342 232E                           l1191 335E                           l1319 3B82  
                         l1168 5852                           l1256 4302                           l1096 509C  
                         l1193 33D6                           l4001 3306                           l1185 32DC  
                         l1089 5094                           l1345 1CC8                           l1194 33C4  
                         l1450 5102                           l4011 334E                           l4003 3316  
                         l1267 429A                           l1427 5954                           l1347 1B0E  
                         l1436 3F7C                           l1276 54E2                           l4021 338E  
                         l4013 335C                           l4005 3328                           l4101 2DFA  
                         l1390 3AEC                           l4031 3400                           l4023 33BC  
                         l4007 333E                           l4015 336E                           l4111 2E4A  
                         l4103 2E04                           l1439 3EC0                           l1447 50F2  
                         l1375 2110                           l1456 56CC                           l4041 3478  
                         l4033 342A                           l4017 337C                           l4009 3344  
                         l4201 4B9A                           l4121 2E8C                           l4113 2E56  
                         l4105 2E1A                           l5001 55CC                           l4051 34AE  
                         l4043 3494                           l4027 33E6                           l4035 342E  
                         l4019 3380                           l4203 4BAA                           l4211 4862  
                         l4131 2EEE                           l4123 2E9C                           l4115 2E64  
                         l4107 2E26                           l5011 55D6                           l5003 55CE  
                         l1468 4B2C                           l1476 58DA                           l4045 3498  
                         l4037 3448                           l4029 33F2                           l4205 4BCE  
                         l4221 48EC                           l4213 4890                           l4141 2F96  
                         l4133 2F0A                           l4125 2EB6                           l4117 2E70  
                         l4109 2E3E                           l4061 2D02                           l5005 55D0  
                         l5021 364E                           l5013 516A                           l4301 5938  
                         l1485 5896                           l4047 34A6                           l4039 345E  
                         l4207 4BD4                           l4223 48FE                           l4215 48A0  
                         l4151 2FD2                           l4143 2FA0                           l4135 2F34  
                         l4127 2EC6                           l4119 2E80                           l4071 2D42  
                         l4063 2D10                           l5103 1462                           l5031 0E84  
                         l5007 55D2                           l5023 3682                           l5015 34BA  
                         l1479 5BBA                           l4311 49F8                           l4303 4966  
                         l4049 34AC                           l4225 490C                           l4217 48CE  
                         l4161 3044                           l4153 2FE0                           l4145 2FAE  
                         l4137 2F6A                           l4129 2EE2                           l4081 2D72  
                         l4073 2D48                           l4065 2D12                           l3601 2862  
                         l5105 1494                           l5033 0E90                           l4401 4D68  
                         l5009 55D4                           l5025 371A                           l5017 3586  
                         l4233 5A56                           l4241 475C                           l4321 4A5A  
                         l4305 4986                           l4227 495C                           l4219 48DE  
                         l4171 30AE                           l4163 3052                           l4155 300E  
                         l4147 2FC0                           l4139 2F78                           l4091 2DAA  
                         l4083 2D74                           l4075 2D58                           l4067 2D22  
                         l4059 2CF6                           l3611 289C                           l3603 2872  
                         l5131 15C6                           l5107 14C6                           l5051 0FBE  
                         l5035 0EC0                           l4403 4D80                           l4411 4C20  
                         l5027 374E                           l5019 35BA                           l4235 5A6C  
                         l4251 47B2                           l4243 4772                           l4307 49C4  
                         l4315 4A04                           l4331 50BC                           l4229 4962  
                         l4181 3104                           l4173 30C8                           l4165 307C  
                         l4149 2FCE                           l4093 2DCA                           l4085 2D84  
                         l4077 2D5E                           l4069 2D32                           l3701 2A66  
                         l3621 28CA                           l3613 28A2                           l3605 2882  
                         l5205 1920                           l5141 163A                           l5133 15F8  
                         l5125 1588                           l5109 1500                           l5117 153E  
                         l5061 10BC                           l5053 1012                           l5045 0F32  
                         l5037 0EF4                           l5029 0E5A                           l4421 4C92  
                         l4413 4C2C                           l4405 4BD8                           l5301 3F7E  
                         l5221 5B6E                           l5213 5B56                           l4237 5A7C  
                         l4253 47C2                           l4317 4A16                           l4309 49EC  
                         l4341 3E04                           l4333 3D6C                           l4325 5854  
                         l4501 193C                           l4175 30E4                           l4183 310A  
                         l4159 3038                           l4167 3080                           l4095 2DDA  
                         l4087 2D94                           l4079 2D64                           l3711 2AA0  
                         l3703 2A74                           l3631 28FE                           l3623 28CC  
                         l3615 28B4                           l3607 2884                           l4191 581E  
                         l5143 1678                           l5119 157C                           l5071 118C  
                         l5055 1044                           l5047 0F84                           l5039 0F28  
                         l4431 4CEA                           l4423 4CAA                           l4407 4BFC  
                         l4415 4C3C                           l5311 3FCC                           l5303 3F86  
                         l5223 5B70                           l5215 5B60                           l5231 5AA4  
                         l4263 47EC                           l4255 47C6                           l4247 4786  
                         l4351 3F20                           l4335 3D8C                           l4327 5864  
                         l4511 198C                           l4503 194C                           l4185 310E  
                         l4177 30F4                           l4169 309A                           l4089 2DA4  
                         l3721 2B0C                           l3713 2AA2                           l3705 2A82  
                         l3641 293A                           l3625 28DC                           l3633 2906  
                         l3617 28B6                           l3609 288C                           l5209 192C  
                         l5153 1690                           l5129 1594                           l5081 132A  
                         l5073 11C4                           l5065 10C8                           l5057 104A  
                         l5049 0FB6                           l3801 504C                           l4441 4DEE  
                         l4433 4D9A                           l4425 4CB6                           l4417 4C54  
                         l4409 4C14                           l5321 4054                           l5313 3FE8  
                         l5217 5B62                           l5225 5A8E                           l4281 4850  
                         l4273 4814                           l4265 47F6                           l4257 47D4  
                         l4249 47B0                           l4353 3F34                           l4345 3E74  
                         l4337 3DE2                           l4329 509E                           l4361 567E  
                         l4601 1D20                           l4521 19C8                           l4513 1994  
                         l4505 195A                           l5401 2350                           l4195 4B2E  
                         l4179 3102                           l4099 2DEE                           l3731 2B64  
                         l3723 2B0E                           l3715 2AAC                           l3707 2A8E  
                         l3651 294E                           l3643 293E                           l3635 2916  
                         l3627 28EC                           l3619 28BC                           l5171 1768  
                         l5155 16C2                           l5075 11D6                           l5083 1382  
                         l5067 10DC                           l5059 1066                           l3811 5086  
                         l3803 5054                           l4435 4DBE                           l4443 4DFE  
                         l4427 4CC2                           l4419 4C6E                           l5331 40D8  
                         l5323 406C                           l5315 4000                           l5307 3F98  
                         l5251 4E46                           l5219 5B6C                           l5227 5A92  
                         l4291 4F68                           l4451 3B22                           l4275 4820  
                         l4267 4800                           l4355 3F5C                           l4347 3EB0  
                         l4339 3DF6                           l4363 5692                           l4371 56B2  
                         l4611 1D6A                           l4603 1D38                           l4531 1A0E  
                         l4515 19A4                           l4523 19CC                           l4507 195E  
                         l5411 235C                           l5403 2352                           l4197 4B5C  
                         l3741 2B92                           l3725 2B1E                           l3709 2A92  
                         l3717 2AB2                           l3661 2962                           l3653 2952  
                         l3645 2942                           l3637 2928                           l3629 28FC  
                         l4189 580E                           l5173 179A                           l5157 16F4  
                         l5149 1684                           l5085 13B4                           l5093 13F2  
                         l5077 1252                           l5069 117C                           l3813 5088  
                         l3805 5062                           l4445 4E16                           l4437 4DD6  
                         l4381 4FD0                           l4429 4CD2                           l4373 5AE8  
                         l5333 40F6                           l5325 408A                           l5317 401E  
                         l5309 3FB4                           l5261 4E90                           l5253 4E48  
                         l5245 4E30                           l5229 5AA0                           l3901 4682  
                         l3581 4AB0                           l3573 4A64                           l3821 58B6  
                         l4293 4F7C                           l4285 4F3A                           l4461 3B9A  
                         l4453 3B32                           l4277 4830                           l4357 3F6C  
                         l4349 3EE4                           l4365 569E                           l4701 2272  
                         l4613 1D7E                           l4621 1E74                           l4605 1D4A  
                         l4533 1A16                           l4525 19F2                           l4541 1A58  
                         l4517 19B4                           l4509 1982                           l5501 2622  
                         l5421 2374                           l5413 235E                           l5405 2354  
                         ?_pad 0011                           l4199 4B6C                           l3743 2BA0  
                         l3735 2B78                           l3751 2BBE                           l3719 2AD8  
                         l3727 2B2E                           l3663 2966                           l3655 2956  
                         l3647 2946                           l3639 2936                           l3671 2976  
                         l5175 17CC                           l5183 1802                           l5095 1424  
                         l5087 13E6                           l5079 12AE                           l3815 508E  
                         l3807 5068                           l3831 4510                           l4439 4DE2  
                         l4383 4FDC                           l4391 4D04                           l4375 5AF8  
                         l5335 410E                           l5327 40A2                           l5319 4036  
                         l5271 4EAA                           l5263 4E92                           l5255 4E5E  
                         l5247 4E42                           l3911 4704                           l3903 4696  
                         l3583 4AE6                           l3575 4A76                           l3823 58BA  
                         l4295 4F80                           l4287 4F48                           l4471 3BD0  
                         l4463 3BA0                           l4455 3B52                           l4447 3AEE  
                         l4279 4840                           l4367 56A2                           l4711 22E0  
                         l4703 227A                           l4631 1F40                           l4623 1E92  
                         l4615 1DE2                           l4607 1D52                           l4551 1AA2  
                         l4543 1A7E                           l4535 1A2E                           l4527 1A04  
                         l4519 19C0                           l5511 2678                           l5503 2636  
                         l5431 2390                           l5423 237C                           l5415 2364  
                         l5407 2358                           l3921 3120                           l3745 2BA8  
                         l3737 2B82                           l3729 2B54                           l3753 2BCC  
                         l3681 29E6                           l3673 297A                           l3665 296A  
                         l3657 295A                           l3649 294A                           l3593 2836  
                         l5185 1834                           l5169 1736                           l5097 1456  
                         l3809 507E                           l3833 4514                           l3825 448C  
                         l4385 4FE8                           l4377 4FB4                           l4393 4D28  
                         l4721 5BAC                           l5337 412C                           l5329 40C0  
                         l5273 4EB4                           l5265 4E9C                           l5257 4E62  
                         l5249 4E44                           l3841 4304                           l3905 46A4  
                         l3913 470A                           l3577 4A88                           l3817 5898  
                         l4297 4F9E                           l4289 4F54                           l4481 3C6E  
                         l4473 3BDA                           l4465 3BB0                           l4457 3B6E  
                         l4449 3B0E                           l4369 56AE                           l4713 22F0  
                         l4705 228A                           l4641 1FF0                           l4633 1F50  
                         l4625 1EC6                           l4617 1E3A                           l4609 1D5A  
                         l4561 1AD8                           l4545 1A90                           l4537 1A38  
                         l4529 1A08                           l4801 3934                           l5281 54B4  
                         l5521 26C0                           l5513 267E                           l5505 263C  
                         l5441 23B8                           l5433 2398                           l5425 2384  
                         l5417 2368                           l5409 235A                           l3931 315C  
                         l3923 312C                           l3763 2C1E                           l3771 2C74  
                         l3755 2BD0                           l3747 2BAC                           l3739 2B90  
                         l3691 2A10                           l3683 29F2                           l3675 29A4  
                         l3667 296E                           l3659 295E                           l3595 2842  
                         l5187 1866                           l3587 5B10                           l3835 4556  
                         l3827 44A8                           l4379 4FB8                           l4387 4FF8  
                         l4395 4D40                           l5291 4EB8                           l4723 5BB0  
                         l4731 5BA6                           l5339 4144                           l5267 4E9E  
                         l5259 4E86                           l3851 4348                           l3843 4308  
                         l3915 471A                           l3907 46D2                           l4299 591E  
                         l3579 4A92                           l3819 58A4                           l4491 3D34  
                         l4475 3BE0                           l4483 3CD2                           l4467 3BBC  
                         l4459 3B8A                           l4715 2306                           l4707 22BA  
                         l4651 2054                           l4643 2024                           l4635 1F60  
                         l4627 1EF8                           l4619 1E6E                           l4571 1B96  
                         l4547 1A94                           l4811 399A                           l4803 393C  
                         l5283 54D0                           l5275 5492                           l5531 2716  
                         l5523 26D4                           l5515 2692                           l5507 2650  
                         l5451 240A                           l5443 23C0                           l5435 23A0  
                         l5427 2388                           l5419 236C                           l3941 318C  
                         l3933 316C                           l3925 313A                           l3781 2CC6  
                         l3773 2C84                           l3765 2C2A                           l3757 2BDE  
                         l3749 2BBC                           l3693 2A32                           l3685 29F6  
                         l3677 29C0                           l3669 2972                           l3597 2850  
                         l5189 18A0                           l5197 18DE                           l3589 5B2C  
                         l3837 4572                           l3829 44FC                           l4389 5010  
                         l4397 4D4C                           l5293 4ECC                           l4725 5B8E  
                         l4901 5236                           l5269 4EA8                           l4741 58EA  
                         l4733 5B98                           l3861 439E                           l3853 4368  
                         l3845 4316                           l3917 473A                           l3909 46F2  
                         l4493 3D3A                           l4485 3CEC                           l4477 3C62  
                         l4469 3BC4                           l4717 230E                           l4709 22C8  
                         l4661 2106                           l4653 205A                           l4645 2038  
                         l4637 1F94                           l4629 1F0E                           l4581 1C56  
                         l4573 1BC8                           l4565 1B1E                           l4549 1A9A  
                         l4821 3A4C                           l4813 39CE                           l5277 54A4  
                         l5541 276C                           l5533 272A                           l5525 26E8  
                         l5517 26A6                           l5509 2664                           l5461 2480  
                         l5453 241A                           l5445 23D2                           l5437 23A8  
                         l5429 238C                           l3951 31C2                           l3943 3192  
                         l3935 316E                           l3927 313C                           l3791 2CE4  
                         l3783 2CCC                           l3775 2C94                           l3767 2C38  
                         l3759 2BF4                           l3695 2A42                           l3687 2A04  
                         l3679 29D0                           l3599 2852                           l3839 45B6  
                         l4399 4D58                           l5295 4EE4                           l4751 527C  
                         l5287 55DA                           l4727 5B92                           l4903 524E  
                         l4911 5A18                           l4743 58F2                           l4735 5B9C  
                         l3871 4420                           l3863 43B2                           l3855 436C  
                         l3847 4336                           l4495 3D4A                           l4487 3D0A  
                         l4479 3C68                           l4671 214A                           l4663 2122  
                         l4655 2062                           l4639 1FEA                           l4647 203C  
                         l4591 1CEC                           l4575 1C06                           l4567 1B24  
                         l4559 1ABE                           l4807 3944                           l5279 54AC  
                         l5551 2812                           l5543 2784                           l5535 273E  
                         l5527 26FC                           l5519 26BA                           l5471 24E2  
                         l5463 249C                           l5455 2426                           l5447 23F0  
                         l5439 23B0                           l5391 2338                           l3961 3202  
                         l3953 31D2                           l3945 31A0                           l3929 314C  
                         l3937 3176                           l3785 2CCE                           l3777 2CB4  
                         l3769 2C72                           l3689 2A06                           l4761 5302  
                         l5289 562C                           l5297 4EF8                           l4753 5290  
                         l4729 5BA2                           l4913 5536                           l4905 59DA  
                         l4921 595E                           l4745 5918                           l4737 58DE  
                         l3881 446A                           l3873 4422                           l3865 43C0  
                         l3857 4378                           l3849 433A                           l4489 3D24  
                         l4673 2152                           l4665 2130                           l4681 2172  
                         l4657 206E                           l4649 204C                           l4593 1CF4  
                         l4577 1C1A                           l4585 1C96                           l4569 1B58  
                         l4817 3A02                           l4809 3976                           l4833 3AC0  
                         l5545 2796                           l5537 2744                           l5529 2702  
                         l5481 257E                           l5473 24EA                           l5465 24B8  
                         l5457 243A                           l5449 2404                           l5553 281E  
                         l5393 233C                           l3963 3212                           l3971 3232  
                         l3955 31D4                           l3947 31A2                           l3939 3186  
                         l3787 2CD4                           l3779 2CB8                           l3699 2A56  
                         l4931 41B6                           l3795 502A                           l4763 538A  
                         l4915 5330                           l5299 4F0C                           l4755 52A8  
                         l4907 54E4                           l4771 51DC                           l4923 599C  
                         l4747 591A                           l4739 58E2                           l3875 4434  
                         l3867 43D2                           l3859 4396                           l3891 462A  
                         l4691 21F8                           l4683 2184                           l4675 2162  
                         l4667 2140                           l4659 20E6                           l4595 1CFC  
                         l4587 1CD0                           l4579 1C4E                           l4499 1936  
                         l4827 3A7E                           l4819 3A2C                           l5651 3958  
                         l5547 27CA                           l5539 2758                           l5491 25CC  
                         l5483 258A                           l5467 24D2                           l5475 2502  
                         l5459 2458                           l5395 2340                           l5387 2330  
                         l3981 3270                           l3973 3242                           l3965 321A  
                         l3949 31B2                           l3957 31DC                           l3789 2CE2  
                         l4941 41F4                           l4933 41CC                           l4925 4152  
                         l3797 5032                           l4765 539E                           l4917 5344  
                         l4757 52D6                           l4861 5ACE                           l4909 5104  
                         l4773 51F4                           l3869 4400                           l3877 443A  
                         l3893 462E                           l3885 45F8                           l4693 222C  
                         l4685 2196                           l4677 2166                           l4669 2144  
                         l4597 1D00                           l4589 1CE0                           l5653 3A16  
                         l4829 3AAE                           l4781 382C                           l5493 25E0  
                         l5485 259E                           l5477 2520                           l5469 24DA  
                         l5549 27DC                           l5397 234C                           l5389 2334  
                         l3991 32B8                           l3983 3280                           l3975 3242  
                         l3967 321E                           l3959 31EC                           l4951 427C  
                         l4943 4226                           l4927 4162                           l3799 5044  
                         l4767 53B6                           l4919 535C                           l4759 52EA  
                         l4863 5AD0                           l4871 56CE                           l3879 444A  
                         l3895 463C                           l3887 45FC                           l4695 2234  
                         l4687 219A                           l4679 216C                           l4599 1D12  
                         l5655 3AA0                           l4791 38D6                           l4783 3830  
                         l4775 37E8                           l5495 25F4                           l5487 25B2  
                         l5479 2528                           l5399 234E                           l3993 32CC  
                         l3985 3290                           l4961 42D2                           l4953 428A  
                         l4945 4228                           l4937 41E0                           l4929 4170  
                         l4865 5AD2                           l4857 5ABE                           l4769 51C8  
                         l4873 5714                           l3897 465C                           l3889 460A  
                         l4689 21A0                           l4697 2238                           l4785 3840  
                         l4777 3810                           l5497 25FA                           l5489 25B8  
                         l3995 32DA                           l3987 32A0                           l3979 3256  
                         l4963 42E2                           l4955 42A8                           l4947 4234  
                         l4939 41E8                           l4867 5AD4                           l4859 5AC8  
                         l4891 5804                           l4883 576E                           l3899 467A  
                         l4699 2256                           l4795 3906                           l4787 3860  
                         l4779 381E                           l4971 543C                           l5499 260E  
                         l3997 32E6                           l3989 32A8                           l4965 42F0  
                         l4957 42AA                           l4949 4270                           l4869 5B38  
                         l4981 5588                           l4885 57B4                           l4877 571E  
                         l4797 3916                           l4789 3880                           l4973 5448  
                         l3999 3304                           l4967 42F2                           l4959 42AE  
                         l4991 55BA                           l4983 558C                           l4879 5764  
                         l4895 5B76                           l4799 392C                           l4975 5466  
                         l4993 55C4                           l4985 5596                           l4889 57BE  
                         l4897 5B86                           l4977 5486                           l4995 55C6  
                         l4987 55A6                           l4899 5222                           l4997 55C8  
                         l4989 55B0                           l4999 55CA                    GreenMove@mL 001F  
                  GreenMove@mR 0021                           STR_1 0E01                           STR_2 0E2E  
                         STR_3 0E50                           STR_6 0E54                           u3000 2A24  
                         u3001 2A20                           u3010 2A32                           u3011 2A2E  
                         u3100 2B90                           u3020 2A42                           u3101 2B8C  
                         u3021 2A3E                           u3110 2BA0                           u3030 2A74  
                         u3111 2B9C                           u3031 2A70                           u3200 2C84  
                         u3120 2BBC                           u3040 2A82                           u4000 4830  
                 _BAUD4CONbits 000EE9                           u3201 2C80                           u3121 2BB8  
                         u3041 2A7E                           u4001 482C                           u3210 2C94  
                         u3130 2BCC                           u3050 2AA0                           u4010 4840  
                         u3211 2C90                           u3131 2BC8                           u3051 2A9C  
                         u4011 483C                           u3220 2CB4                           u3140 2BDE  
                         u3060 2AD8                           u3300 4572                           u4020 4F48  
                         u4100 4A50                           u3221 2CB0                           u3141 2BDA  
                         u3061 2AD4                           u3301 456E                           u4021 4F44  
                         u4101 4A4A                           u3230 2CC6                           u3150 2BF4  
                         u3070 2B1E                           u3310 4316                           u4030 4F9E  
                         u4110 4A52                           u3231 2CC2                           u3151 2BF0  
                         u3071 2B1A                           u3311 4312                           u4031 4F9A  
                         u3240 2CE2                           u3160 2C0A                           u3080 2B54  
                         u5000 1066                           u3320 4348                           u3400 467A  
                         u4040 5938                           u4200 3EB0                           u4120 5896  
                         u3241 2CDE                           u3161 2C06                           u3081 2B50  
                         u5001 1062                           u3321 4344                           u3401 4676  
                         u4041 5934                           u4201 3EAC                           u4121 5892  
                         u3170 2C1E                           u3090 2B64                           u5010 10BC  
                         u3250 5044                           u3410 46A4                           u4050 49A6  
                         u4210 3F04                           u4130 50BC                           _T2PR 000FBC  
                         u3171 2C1A                           u3091 2B60                           u5011 10B8  
                         u3251 5040                           u3331 4372                           u3411 46A0  
                         u4131 50B8                           u3500 3202                           u3180 2C38  
                         u5100 14C6                           u5020 10DC                           u3260 5062  
                         u4300 4D98                           u3340 4396                           u3420 46D2  
                         u4060 49C4                           u4220 3F20                           u4140 3DB4  
                         u3501 31FE                           u3181 2C34                           u5101 14C2  
                         u5021 10D8                           u3261 505E                           u4301 4D94  
                         u3341 4392                           u3421 46CE                           u4061 49C0  
                         u4221 3F1C                           u3510 3242                           u3190 2C72  
                         u5110 1500                           u5030 118C                           u3270 507E  
                         u4310 4C54                           u3350 43C0                           u3430 471A  
                         u4070 49EC                           u4230 3F5C                           u4150 3DE2  
                         u3511 323E                           u3191 2C6E                           u5111 14FC  
                         u5031 1188                           u3271 507A                           u4311 4C50  
                         u3351 43BC                           u3431 4716                           u4071 49E8  
                         u4055 499C                           u4231 3F58                           u4215 3EFA  
                         u4151 3DDE                           u3600 33BC                           u3520 32B8  
                         u3440 313A                           u5200 1732                           u5120 153A  
                         u5040 11D6                           u4320 4C6C                           u3360 4400  
                         u3280 58DA                           u4400 3B6E                           u4080 4A16  
                         u4160 3E04                           u4240 56CC                           u3601 33B8  
                         u3521 32B4                           u3441 3136                           u5201 172E  
                         u5121 1536                           u5041 11D2                           u4321 4C68  
                         u3361 43FC                           u3281 58D6                           u4401 3B6A  
                         u4081 4A12                           u4161 3E00                           u4145 3DAA  
                         u4241 56C8                           u3610 33D2                           u3530 32DA  
                         u3450 314C                           u5210 1768                           u5130 157C  
                         u5050 13B4                           u3290 44A8                           u4330 4CEA  
                         u4250 5AF8                           u3370 444A                           u4410 3B9A  
                         u3611 33CE                           u3531 32D6                           u3451 3148  
                         u5211 1764                           u5131 1578                           u5051 13B0  
                         u3291 44A4                           u4331 4CE6                           u4251 5AF4  
                         u3371 4446                           u4411 3B96                           u3620 33E6  
                         u3540 3304                           u3460 315C                           u3700 2D72  
                         u2900 28CA                           u5220 179A                           u5140 15C6  
                         u5060 13E6                           u4340 4D02                           u4260 5B0E  
                         u5300 5ABC                           u3380 460A                           u2820 4A76  
                         u4420 3BB0                           u4180 3E70                           u4500 19F2  
                         u3621 33E2                           u3541 3300                           u3461 3158  
                         u3701 2D6E                           u2901 28C6                           u5221 1796  
                         u5141 15C2                           u5061 13E2                           u4341 4CFE  
                         u4261 5B0A                           u5301 5AB8                           u3381 4606  
                         u2821 4A72                           u4421 3BAC                           u4181 3E6C  
                         u4501 19EE                           u3630 3400                           u3550 3328  
                         u3470 31A0                           u3710 2D84                           u2910 28DC  
                         u5230 17CC                           u5150 15F8                           u5070 1424  
                         u4350 4E16                           u4270 5010                           u3390 463C  
                         u2830 4A88                           u4430 3CEC                           u4190 3E94  
                         u4510 1A04                           u3631 33FC                           u3551 3324  
                         u3471 319C                           u3711 2D80                           u2911 28D8  
                         u5231 17C8                           u5151 15F4                           u5071 1420  
                         u4351 4E12                           u4271 500C                           u3391 4638  
                         u2831 4A84                           u4431 3CE8                           u4095 4A28  
                         u4175 3E18                           u4511 1A00                           u3640 3448  
                         u3560 333E                           u3480 31B2                           u3800 3024  
                         u3720 2D94                           u2920 28EC                           u5240 17FE  
                         u5160 1636                           u5080 1456                           u4360 4E2E  
                         u4280 5028                           u5400 40C0                           u2840 4AB0  
                         u4440 3D0A                           u4176 3E22                           u4600 1CE0  
                         u4520 1A7E                           u3641 3444                           u3561 333A  
                         u3481 31AE                           u3801 3020                           u3721 2D90  
                         u2921 28E8                           u5241 17FA                           u5161 1632  
                         u5081 1452                           u4361 4E2A                           u4281 5024  
                         u5401 40BC                           u2841 4AAC                           u4441 3D06  
                         u4177 3E32                           u4601 1CDC                           u4521 1A7A  
                         u3650 3478                           u3570 335C                           u3490 31C2  
                         u3810 3038                           u3730 2DCA                           u2930 2928  
                         u5250 1834                           u5170 1678                           u5090 1494  
                         u4290 4D80                           u5410 40F6                           u2850 4AE6  
                         u4450 3D24                           u4370 3B1E                           u4610 1D12  
                         u4530 1A90                           u3651 3474                           u3571 3358  
                         u3491 31BE                           u3811 3034                           u3731 2DC6  
                         u2931 2924                           u5251 1830                           u5171 1674  
                         u5091 1490                           u4291 4D7C                           u5411 40F2  
                         u2851 4AE2                           u4451 3D20                           u4371 3B18  
                         u4195 3E8A                           u4611 1D0E                           u4531 1A8C  
                         u3660 34A6                           u3580 337C                           u3900 48CE  
                         u3820 3052                           u3740 2DDA                           u2940 2936  
                         u2860 2850                           u5260 1866                           u5180 16C2  
                         u5420 412C                           u5340 3F94                           u4460 3D34  
                         u4380 3B20                           u4700 20E6                           u4620 1D20  
                         u4540 1B0A                           u5500 24D2                           u3661 34A2  
                         u3581 3378                           u3901 48CA                           u3821 304E  
                         u3741 2DD6                           u2941 2932                           u2861 284C  
                         u5261 1862                           u5181 16BE                           u5421 4128  
                         u5341 3F90                           u4461 3D30                           u4701 20E2  
                         u4621 1D1C                           u4541 1B06                           u5501 24CE  
                         u3590 338E                           u3910 48EC                           u3830 309A  
                         u3750 2F54                           u3670 2D10                           u2950 29A4  
                         u2870 2862                           u5270 18A0                           u5190 16F4  
                         u5350 3FB4                           u4390 3B32                           u4710 2122  
                         u4630 1D4A                           u4550 1B96                           u4470 195A  
                         u5510 2520                           u3591 338A                           u3911 48E8  
                         u3831 3096                           u3671 2D0C                           u2951 29A0  
                         u2871 285E                           u5271 189C                           u5191 16F0  
                         u5351 3FB0                           u4391 3B2E                           u4711 211E  
                         u4631 1D46                           u4551 1B92                           u4471 1956  
                         u5511 251C                           u3920 490C                           u3840 30C8  
                         u3760 2FAE                           u3680 2D22                           u2960 29BC  
                         u2880 2872                           u5280 18DA                           u5360 3FE8  
                         u4720 2130                           u4640 1E92                           u4560 1BC8  
                         u4480 19A4                           u5600 2796                           u5520 259E  
                         u3921 4908                           u3841 30C4                           u3761 2FAA  
                         u3681 2D1E                           u2961 29B6                           u2881 286E  
                         u5281 18D6                           u5361 3FE4                           u4721 212C  
                         u4641 1E8E                           u4561 1BC4                           u4481 19A0  
                         u5601 2792                           u5521 259A                           u3930 495C  
                         u3850 3102                           u3770 2FCE                           u3690 2D32  
                         u2970 29BE                           u2890 28B4                           u5290 191C  
                         u5370 401E                           u4730 2184                           u4650 1EF8  
                         u4570 1C06                           u4490 19B4                           u4810 3810  
                         u5610 2832                           u5530 25E0                           u3931 4958  
                         u3851 30FE                           u3771 2FCA                           u3755 2F4A  
                         u3691 2D2E                           u2891 28B0                           u5291 1918  
                         u5371 401A                           u4731 2180                           u4651 1EF4  
                         u4571 1C02                           u4491 19B0                           u4811 380C  
                         u5611 282E                           u5531 25DC                           u3860 4B5C  
                         u3780 2FE0                           u2980 29E6                           u4900 426C  
                         u5380 4054                           u3940 5A6C                           u4740 2256  
                         u4660 1F40                           u4580 1C92                           u4820 3860  
                         u5540 2622                           u3861 4B58                           u3781 2FDC  
                         u2981 29E2                           u4901 4268                           u5381 4050  
                         u3941 5A68                           u4741 2252                           u4661 1F3C  
                         u4581 1C8E                           u4821 385C                           u5541 261E  
                         u3870 4B9A                           u3790 300E                           u2990 2A04  
                         u4910 428A                           u5390 408A                           u3950 4772  
                         u4750 2272                           u4670 1F50                           u4590 1CC8  
                         u4830 3880                           u5550 2664                           u3871 4B96  
                         u3791 300A                           u2991 2A00                           u4911 4286  
                         u5391 4086                           u3951 476E                           u4751 226E  
                         u4671 1F4C                           u4591 1CC4                           u4831 387C  
                         u5551 2660                           u3880 4BCE                           u4920 429A  
                         u4808 5908                           u3960 47A6                           u4760 22DA  
                         u4680 1FEA                           u4840 3996                           u5560 26A6  
                         u5480 23D2                           u3881 4BCA                           u4921 4296  
                         u4761 22D4                           u4681 1FE6                           u4841 3992  
                         u5561 26A2                           u5481 23CE                           u3890 4890  
                         u4930 42A8                           u4850 5B86                           u3970 47D4  
                         u4770 22DC                           u4690 2038                           u5570 26E8  
                         u5490 2458                           u3891 488C                           u4931 42A4  
                         u5707 529A                           u4851 5B82                           u3971 47D0  
                         u4691 2034                           u5571 26E4                           u5491 2454  
                         u5627 23DE                           u4940 42E2                           u4860 4162  
                         u3980 47E8                           u4780 22F0                           u5580 272A  
                         u4941 42DE                           u4861 415E                           u5717 52C6  
                         u3981 47E4                           u3965 479C                           u4781 22EC  
                         u5581 2726                           u5637 248C                           u4950 42F0  
                         u4870 4170                           u4790 5906                           u3990 4810  
                         u5590 276C                           u4951 42EC                           u4871 416C  
                         u5807 537A                           u5727 4C32                           u4791 58FE  
                         u3991 480C                           u5591 2768                           u5647 24F6  
                         u4880 41CC                           u4960 5486                           u4881 41C8  
                         u5817 53A8                           u5737 4ED6                           u5657 51E6  
                         u4961 5482                           u4890 4222                           u4891 421E  
                         u4971 0E8A                           u5827 53D4                           u5747 4F16  
                         u5667 5212                           u4980 0F84                           u4981 0F80  
                         u5837 4FEE                           u5757 4CC8                           u5677 5240  
                         u4990 1012                           u4991 100E                           u5847 4DF4  
                         u5767 52F4                           u5687 526C                           u5777 5320  
                         u5697 559C                           u5787 4D5E                           u5797 534E  
                _LightBlueMove 5536                           abs@a 0013                           _dbuf 010E  
                         _labs 509E                           _main 2330                           _dtoa 3AEE  
                         _prec 00F1                           _vals 017C                           pad@i 0018  
                         pad@p 0015                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                           _stop 4FB4  
                ___fpclassifyf 4966                           prodh 000FF4                           prodl 000FF3  
                         start 000E                ___fldiv@new_exp 0043         __end_of_color_read_Red 576E  
              __end_of_HighISR 000E         __end_of_color_read_lum 571E                   ___param_bank 000000  
              ReverseYellow@mL 001F                ReverseYellow@mR 0021                __end_of_RedMove 5A18  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 527C                  ___fltol@sign1 0009                __end_of___aodiv 448C  
                        ?_labs 0001                __end_of___fladd 2CF6                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 475C                __end_of___fldiv 34BA  
              __end_of___flneg 5A8E                __end_of___flmul 3120                __end_of___flsub 5854  
              __end_of___fltol 4862                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 509E                          i2l271 000A                   vfpfcnvrt@fmt 0097  
              __end_of_go_Home 4150        __end_of_sendCharSerial4 5B8C     __end_of_I2C_2_Master_Start 5BB6  
   __end_of_I2C_2_Master_Write 5B98                   YellowMove@mL 001F                          _flags 00F5  
                 YellowMove@mR 0021                          _fputc 4A64                          _fputs 5898  
                        labs@a 0001                          pad@fp 0011                          _width 00EF  
                        _putch 5BBA                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 001F                          tablat 000FF5  
             ??_Colour_decider 004F                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                   main@run_flag 01E8                          status 000FD8  
                        wtemp8 0060                __end_of_sprintf 54E4                 ?___fpclassifyf 0001  
      __end_of_color_read_Blue 580E          _I2C_2_Master_RepStart 5B98               __end_of_BlueMove 516A  
                   PinkMove@mL 001F                     PinkMove@mR 0021                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 53E4                _reverseOneBlock 5330  
                 __end_of_labs 5104                   __end_of_main 2836                   __end_of_dtoa 3D6C  
                 __end_of_stop 502A                _colour_rel$2781 0064                _colour_rel$2782 0068  
                       ??_labs 0005                         ??_main 00D1                         ??_dtoa 0026  
        __end_of_ReverseYellow 599C               __end_of_PinkMove 567E                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 55DA  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 54E4  
             __end_of___xxtofl 4304                      ??_RedMove 0023                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 00AE                  ??_ReversePink 0023                         ___flge 4862  
                       ___fleq 4B2E                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 5B10              ForwardOneBlock@mL 0019  
            ForwardOneBlock@mR 001B                      ??___fldiv 003A                      ??___flneg 0005  
                    ??___flmul 0019                      ??___flsub 0032                      ??___fltol 0005  
                       _efgtoa 1936                      ??___lwdiv 000B                         _floorf 3D6C  
                       _memcpy 567E                         clear_0 5408                         clear_1 5414  
                       clear_2 5420                         clear_3 542C                         _motorL 0173  
                       _motorR 016A                         isa$std 000001                      ??_go_Home 0025  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 5854  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 0019             Forwardhalfblock@mR 001B                         putch@c 0001  
              ??_LightBlueMove 0023               __end_of_vfprintf 5492                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 005F  
             __end_of_turnLeft 4D9A                     ___flge@ff1 002A                     _YellowMove 55DA  
                   ___flge@ff2 002E                ??___fpclassifyf 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0032  
                   ___fleq@ff2 0036                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 5432        __end_of_reverseOneBlock 538A  
                   ___flneg@f1 0001       __end_of_color_read_Green 57BE         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 0001               ?_color_read_Blue 0005  
              _Interrupts_init 5BBC                 __pcstackCOMRAM 0001                  _fullSpeedBack 4D9A  
                 __pidataBANK0 5BB6                  __end_of_fputc 4B2E                  __end_of_fputs 58DC  
                __end_of_putch 5BBC              __end_of_GreenMove 5A56            __end_of_ReversePink 59DA  
                    ?_BlueMove 001F                        ??_fputc 0005                        ??_fputs 000E  
         Colour_decider@F14345 0100          __end_of_reverseDetect 53E4                        ??_putch 0001  
                   __pbssBANK0 00D3                     __pbssBANK1 0100                     __pbssBANK2 0200  
                   __pbssBANK3 0300                reverseDetect@mL 0019                reverseDetect@mR 001B  
                  ?_OrangeMove 001F               _Forwardhalfblock 5222              __end_of_RetryMove 4F3A  
                    ?_PinkMove 001F              _color_writetoaddr 5B36                   _T2CLKCONbits 000FBF  
           Colour_decider@Cmax 0072             Colour_decider@Cmin 0076                 ?_fullSpeedBack 0014  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                   ?_turnRight45 0019  
                      ?_memcpy 0001            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                 go_Home@WayBack 0023                      ?___xxtofl 0001  
                      _SP4BRGH 000EE6                        _SP4BRGL 000EE5              ??_ForwardOneBlock 001D  
                   ??_BlueMove 0023                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                  ?_YellowMove 001F                     _colour_rel 34BA        __end_of_Interrupts_init 5BBE  
       color_writetoaddr@value 0003               ??_color_read_Red 0007               main@consecuitive 01EA  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 0019  
    __end_of_color_writetoaddr 5B56                        _RedMove 59DA             _I2C_2_Master_Start 5BAC  
                   ??_PinkMove 0023                     _initUSART4 5B56             _I2C_2_Master_Write 5B8C  
                      __Hparam 0000                        _WayBack 0300                        __Lparam 0000  
            color_read_Red@tmp 000A                    RetryMove@mL 0019                    RetryMove@mR 001B  
      sendStringSerial4@string 0002              reverseOneBlock@mL 0019              reverseOneBlock@mR 001B  
                  _ReversePink 599C                        ___aodiv 4304                        ___fladd 2836  
                      ___aomod 45F8                        ___fldiv 3120                        ___flneg 5A56  
                      ___flmul 2CF6                        ___flsub 580E                        ___fltol 475C  
          ?_I2C_2_Master_Start 0001                        ___lwdiv 502A            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 00A8                   __psmallconst 0E00                   turnLeft45@mL 0019  
                 turnLeft45@mR 001B                        __pcinit 53E4                        __ramtop 0E00  
                    ?_turnLeft 0014                        _go_Home 3F7E                        __ptext0 2330  
                      __ptext1 5492                        __ptext2 543C                        __ptext3 37E8  
                      __ptext4 1936                        __ptext5 5854                        __ptext6 567E  
                      __ptext7 509E                        __ptext8 3D6C                        __ptext9 4966  
                    _T2CONbits 000FBD                     ??___xxtofl 0005                      _T2HLTbits 000FBE  
                      efgtoa@c 0066                        efgtoa@d 0074                        efgtoa@e 0078  
                      efgtoa@f 0062                        efgtoa@g 008D                        efgtoa@h 0082  
                      efgtoa@i 0080                        efgtoa@l 0086                        efgtoa@m 0076  
                      efgtoa@n 008B                        efgtoa@p 006B                        efgtoa@t 006D  
                      efgtoa@u 0091                        efgtoa@w 007A                  _RxBufWriteCnt 00F9  
            color_read_lum@tmp 000A                        main@buf 0184                        _sprintf 5492  
         ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002           end_of_initialization 5432  
                      floorf@e 0059                        floorf@m 0055                        floorf@u 005B  
                      floorf@x 004B                        memcpy@d 0007                        memcpy@n 0005  
                      memcpy@s 0009                        fputc@fp 0003                        fputs@fp 000C  
            ?_color_click_init 0001                LightBlueMove@mL 001F                LightBlueMove@mR 0021  
              ??_fullSpeedBack 0018             ??_color_click_init 0005                     _move_count 010C  
            __end_of_vfpfcnvrt 3AEE                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 4E30  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
            __end_of_turnRight 4C6E                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
             fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016                  ReversePink@mL 001F  
                ReversePink@mR 0021       color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002  
                  ?_colour_rel 004B               ?_Interrupts_init 0001                    ___flmul@grs 001E  
                  _CCP1CONbits 000FAB                     main@colour 01EC                   _EUSART4RXbuf 00D3  
                 _EUSART4TXbuf 0200                    _CCP2CONbits 000FA7              ?_color_read_Green 0005  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0001                      RedMove@mL 001F                      RedMove@mR 0021  
           ??_color_read_Green 0007                     _turnLeft45 52D6                 __end_of___flge 4966  
               __end_of___fleq 4BD8                 _fullSpeedAhead 4C6E                    vfpfcnvrt@ap 0099  
                  vfpfcnvrt@cp 00A6                    vfpfcnvrt@fp 0095                 __end_of___wmul 5B36  
               __end_of_efgtoa 2330                 __end_of_floorf 3F7E                 __end_of_memcpy 56CE  
                   floorf@F526 00E7       __end_of_Forwardhalfblock 527C                      _GreenMove 5A18  
               __end_of_strcpy 5898            start_initialization 53E4                    __end_of_abs 595E  
                  __end_of_pad 4FB4                  _TxBufWriteCnt 00F7          __end_of_LightBlueMove 5588  
                 ??_OrangeMove 0023          __end_of___fpclassifyf 4A64            color_read_Green@tmp 000A  
      __end_of_initDCmotorsPWM 4EB8                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 4D04  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 4EB8  
                     ??___wmul 0005                  ??_readColours 000E                       ??_efgtoa 0067  
                  __pdataBANK0 00FA                _ForwardOneBlock 51C8                       ??_floorf 004F  
                     ??_memcpy 0007                       ??_strcpy 0005                      ___fladd@a 0005  
                    ___fladd@b 0001                  _ReverseYellow 595E                      ___fldiv@a 0036  
                    ___fldiv@b 0032                     ?_GreenMove 001F                   OrangeMove@mL 001F  
                 OrangeMove@mR 0021             __end_of_OrangeMove 5536                      ___flmul@a 0015  
                    ___flmul@b 0011                      ___flsub@a 002E                      ___flsub@b 002A  
                __pcstackBANK0 0060                  __pcstackBANK1 0184               ___aodiv@dividend 0001  
                 ??_YellowMove 0023                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 001F                    _efgtoa$2410 006F               ___lwdiv@dividend 0007  
                    _dtoa$2379 002E                    ?_turnLeft45 0019                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 001F                     ?_RetryMove 0019  
                     ?___aodiv 0001                       ?___fladd 0001                       ?___aomod 0001  
                     ?___fldiv 0032               ___aodiv@quotient 0013                       ?___flneg 0001  
                     ?___flmul 0011                       ?___flsub 002A                       ?___fltol 0001  
          _Colour_decider$2783 0060                       ?___lwdiv 0007                       ?_go_Home 0023  
         I2C_2_Master_Read@ack 0003                 ?_ReverseYellow 001F             __end_of_YellowMove 562C  
         I2C_2_Master_Read@tmp 0004                    __smallconst 0E00            __end_of_readColours 51C8  
            _I2C_2_Master_Idle 5AE8              _I2C_2_Master_Init 5ABE              _I2C_2_Master_Read 58DC  
            _I2C_2_Master_Stop 5BA2                  _low_threshold 00F3                   _RxBufReadCnt 00F8  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0                 colour_rel@vals 004B  
            _sendStringSerial4 5A8E            ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001  
          ??_I2C_2_Master_Read 0002                 ___wmul@product 0005                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATFbits 000F7E  
                     _LATGbits 000F7F             ?_sendStringSerial4 0002                       _PIE4bits 000E2D  
      __end_of_ForwardOneBlock 5222                    turnRight@mL 0014                    turnRight@mR 0016  
                     _PIR4bits 000E37               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 0E5A            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 37E8      __end_of_I2C_2_Master_Idle 5B10  
    __end_of_I2C_2_Master_Init 5AE8      __end_of_I2C_2_Master_Read 591E              ___wmul@multiplier 0001  
    __end_of_I2C_2_Master_Stop 5BAC                   setMotorPWM@m 000E                       _DataFlag 00FC  
  I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0023              ??_color_read_Blue 0007  
                 _TxBufReadCnt 00F6                       _BlueMove 5104                      _turnRight 4BD8  
                   vfpfcnvrt@c 00A5      __end_of_sendStringSerial4 5ABE                   ??_colour_rel 004F  
                _reverseDetect 538A  __end_of_I2C_2_Master_RepStart 5BA2             color_read_Blue@tmp 000A  
          __end_of_setMotorPWM 45F8                   ??_initUSART4 0001                       _PinkMove 562C  
                     __Hrparam 0000         __end_of_Colour_decider 1936                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
        __end_of_fullSpeedBack 4E30                    ??_RetryMove 001D                    _readColours 516A  
              ??_ReverseYellow 0023                     ?_vfpfcnvrt 0095                ___aodiv@divisor 0009  
              ___aodiv@counter 0011             __end_of_colour_rel 37E8                     _ANSELDbits 000EA7  
           ___fpclassifyf@F465 00EB                     _ANSELFbits 000EB4                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 0019                       ___xxtofl 4150                ___lwdiv@divisor 0009  
           __end_of_initUSART4 5B74                ___lwdiv@counter 000D             ??_Forwardhalfblock 001D  
                   ?_turnRight 0014                       __ptext10 475C                       __ptext11 5A56  
                     __ptext20 5A8E                       __ptext12 3AEE                       __ptext21 5B74  
                     __ptext13 4F3A                       __ptext30 4E30                       __ptext22 516A  
                     __ptext14 5898                       __ptext31 3F7E                       __ptext23 56CE  
                     __ptext15 4A64                       __ptext40 5104                       __ptext32 595E  
                     __ptext24 571E                       __ptext16 5BBA                       __ptext41 34BA  
                     __ptext33 599C                       __ptext25 576E                       __ptext17 591E  
                     __ptext50 527C                       __ptext42 5588                       __ptext34 51C8  
                     __ptext26 57BE                       __ptext18 45F8                       __ptext51 4BD8  
                     __ptext43 5B36                       __ptext35 59DA                       __ptext27 5B98  
                     __ptext19 4304                       __ptext60 4D9A                       __ptext52 4EB8  
                     __ptext44 5B8C                       __ptext36 54E4                       __ptext28 58DC  
                     __ptext61 448C                       __ptext53 4C6E                       __ptext45 5BA2  
                     __ptext37 5536                       __ptext29 5B56                       __ptext70 4862  
                     __ptext62 5B10                       __ptext54 562C                       __ptext46 5BAC  
                     __ptext38 5A18                       __ptext71 4B2E                       __ptext63 502A  
                     __ptext55 52D6                       __ptext47 5AE8                       __ptext39 5222  
                     __ptext72 3120                       __ptext64 5BBC                       __ptext56 4D04  
                     __ptext48 5ABE                       __ptext65 0E5A                       __ptext57 5330  
                     __ptext49 55DA                       __ptext66 4150                       __ptext58 538A  
                     __ptext67 580E                       __ptext59 4FB4                       __ptext68 2836  
                     __ptext69 2CF6                 ?_reverseDetect 0019                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0001                     turnLeft@mL 0014  
                   turnLeft@mR 0016               ?_ForwardOneBlock 0019                       go_Home@i 0026  
              ?_Colour_decider 004B                       efgtoa@fp 0060                       efgtoa@ne 0069  
                     efgtoa@pp 0071                       efgtoa@ou 007C                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005F                       _vfprintf 543C  
                ??_turnRight45 001D                       _turnLeft 4D04               ___aomod@dividend 0001  
            ??_reverseOneBlock 001D                main@prev_colour 01EE                       memcpy@d1 0001  
                     memcpy@s1 0003                    _setMotorPWM 448C                  turnRight45@mL 0019  
                turnRight45@mR 001B                       intlevel2 0000                      sprintf@ap 00C4  
               _high_threshold 00FA               ??_fullSpeedAhead 0018                      strcpy@src 0003  
                 ??_turnLeft45 001D                     BlueMove@mL 001F                     BlueMove@mR 0021  
                  efgtoa@nmode 0073                ___aomod@divisor 0009                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5588                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
          __end_of_turnRight45 52D6                ??_reverseDetect 001D                    ??_turnRight 0018  
                ___fladd@signs 000D             __end_of_turnLeft45 5330                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0012                _sendCharSerial4 5B74                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012  
