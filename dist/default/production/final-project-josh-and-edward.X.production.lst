

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 12:19:14 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 06/04/2022 GMT
    74                           ; 
    75                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F67K40 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataBANK0
   109   003F30                     __pidataBANK0:
   110                           	callstack 0
   111                           
   112                           ;initializer for _high_threshold
   113   003F30  03E8               	dw	1000
   114                           
   115                           ;initializer for _DataFlag
   116   003F32  01                 	db	1
   117   000000                     _TX4REG	set	3812
   118   000000                     _RC4STAbits	set	3815
   119   000000                     _SP4BRGH	set	3814
   120   000000                     _SSP2CON2bits	set	3802
   121   000000                     _INT1PPS	set	3569
   122   000000                     _RX4PPS	set	3605
   123   000000                     _SSP2CLKPPS	set	3612
   124   000000                     _SSP2DATPPS	set	3613
   125   000000                     _ANSELDbits	set	3751
   126   000000                     _SSP2ADD	set	3798
   127   000000                     _SSP2CON1bits	set	3801
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _SSP2CON2	set	3802
   133   000000                     _TRISDbits	set	3972
   134   000000                     _SSP2STAT	set	3800
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _INTCONbits	set	4082
   138   000000                     _SSP2BUF	set	3797
   139   000000                     _IPR0bits	set	3615
   140   000000                     _PIE0bits	set	3625
   141   000000                     _PIE4bits	set	3629
   142   000000                     _PIR4bits	set	3639
   143   000000                     _RC0PPS	set	3682
   144   000000                     _RD5PPS	set	3695
   145   000000                     _ANSELBbits	set	3738
   146   000000                     _RD6PPS	set	3696
   147   000000                     _LATAbits	set	3961
   148   000000                     _LATDbits	set	3964
   149   000000                     _TRISBbits	set	3970
   150   000000                     _PIR0bits	set	3635
   151   000000                     _PIE2bits	set	3627
   152   000000                     _LATFbits	set	3966
   153   000000                     _LATGbits	set	3967
   154   000000                     _LATHbits	set	3968
   155   000000                     _TRISAbits	set	3969
   156   000000                     _TRISHbits	set	3976
   157                           
   158                           	psect	smallconst
   159   000E00                     __psmallconst:
   160                           	callstack 0
   161   000E00  00                 	db	0
   162   000E01                     STR_1:
   163                           
   164                           ; BSR set to: 14
   165   000E01  72                 	db	114	;'r'
   166   000E02  65                 	db	101	;'e'
   167   000E03  64                 	db	100	;'d'
   168   000E04  3D                 	db	61	;'='
   169   000E05  25                 	db	37
   170   000E06  66                 	db	102	;'f'
   171   000E07  20                 	db	32
   172   000E08  67                 	db	103	;'g'
   173   000E09  72                 	db	114	;'r'
   174   000E0A  65                 	db	101	;'e'
   175   000E0B  65                 	db	101	;'e'
   176   000E0C  6E                 	db	110	;'n'
   177   000E0D  3D                 	db	61	;'='
   178   000E0E  25                 	db	37
   179   000E0F  66                 	db	102	;'f'
   180   000E10  20                 	db	32
   181   000E11  62                 	db	98	;'b'
   182   000E12  6C                 	db	108	;'l'
   183   000E13  75                 	db	117	;'u'
   184   000E14  65                 	db	101	;'e'
   185   000E15  3D                 	db	61	;'='
   186   000E16  25                 	db	37
   187   000E17  66                 	db	102	;'f'
   188   000E18  20                 	db	32
   189   000E19  6C                 	db	108	;'l'
   190   000E1A  75                 	db	117	;'u'
   191   000E1B  6D                 	db	109	;'m'
   192   000E1C  3D                 	db	61	;'='
   193   000E1D  25                 	db	37
   194   000E1E  64                 	db	100	;'d'
   195   000E1F  0D                 	db	13
   196   000E20  0A                 	db	10
   197   000E21  00                 	db	0
   198   000E22                     STR_2:
   199                           
   200                           ; BSR set to: 14
   201   000E22  69                 	db	105	;'i'
   202   000E23  6E                 	db	110	;'n'
   203   000E24  66                 	db	102	;'f'
   204   000E25  00                 	db	0
   205   000E26                     STR_5:
   206                           
   207                           ; BSR set to: 14
   208   000E26  6E                 	db	110	;'n'
   209   000E27  61                 	db	97	;'a'
   210   000E28  6E                 	db	110	;'n'
   211   000E29  00                 	db	0
   212   000E2A  00                 	db	0	; dummy byte at the end
   213   000000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217   003B74                     __pcinit:
   218                           	callstack 0
   219   003B74                     start_initialization:
   220                           	callstack 0
   221   003B74                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to BANK0 (3 bytes)
   225                           ; load TBLPTR registers with __pidataBANK0
   226   003B74  0E30               	movlw	low __pidataBANK0
   227   003B76  6EF6               	movwf	tblptrl,c
   228   003B78  0E3F               	movlw	high __pidataBANK0
   229   003B7A  6EF7               	movwf	tblptrh,c
   230   003B7C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   231   003B7E  6EF8               	movwf	tblptru,c
   232   003B80  0009               	tblrd		*+	;fetch initializer
   233   003B82  CFF5 F0F9          	movff	tablat,__pdataBANK0
   234   003B86  0009               	tblrd		*+	;fetch initializer
   235   003B88  CFF5 F0FA          	movff	tablat,__pdataBANK0+1
   236   003B8C  0009               	tblrd		*+	;fetch initializer
   237   003B8E  CFF5 F0FB          	movff	tablat,__pdataBANK0+2
   238                           
   239                           ; Clear objects allocated to BANK1 (176 bytes)
   240   003B92  EE01  F000         	lfsr	0,__pbssBANK1
   241   003B96  0EB0               	movlw	176
   242   003B98                     clear_0:
   243   003B98  6AEE               	clrf	postinc0,c
   244   003B9A  06E8               	decf	wreg,f,c
   245   003B9C  E1FD               	bnz	clear_0
   246                           
   247                           ; Clear objects allocated to BANK0 (20 bytes)
   248   003B9E  EE00  F0E5         	lfsr	0,__pbssBANK0
   249   003BA2  0E14               	movlw	20
   250   003BA4                     clear_1:
   251   003BA4  6AEE               	clrf	postinc0,c
   252   003BA6  06E8               	decf	wreg,f,c
   253   003BA8  E1FD               	bnz	clear_1
   254                           
   255                           ; Clear objects allocated to COMRAM (7 bytes)
   256   003BAA  EE00  F056         	lfsr	0,__pbssCOMRAM
   257   003BAE  0E07               	movlw	7
   258   003BB0                     clear_2:
   259   003BB0  6AEE               	clrf	postinc0,c
   260   003BB2  06E8               	decf	wreg,f,c
   261   003BB4  E1FD               	bnz	clear_2
   262   003BB6                     end_of_initialization:
   263                           	callstack 0
   264   003BB6                     __end_of__initialization:
   265                           	callstack 0
   266   003BB6  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   267   003BB8  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   268   003BBA  0100               	movlb	0
   269   003BBC  EF35  F019         	goto	_main	;jump to C main() function
   270                           
   271                           	psect	bssCOMRAM
   272   000056                     __pbssCOMRAM:
   273                           	callstack 0
   274   000056                     _prec:
   275                           	callstack 0
   276   000056                     	ds	2
   277   000058                     _flags:
   278                           	callstack 0
   279   000058                     	ds	1
   280   000059                     _TxBufReadCnt:
   281                           	callstack 0
   282   000059                     	ds	1
   283   00005A                     _TxBufWriteCnt:
   284                           	callstack 0
   285   00005A                     	ds	1
   286   00005B                     _RxBufReadCnt:
   287                           	callstack 0
   288   00005B                     	ds	1
   289   00005C                     _RxBufWriteCnt:
   290                           	callstack 0
   291   00005C                     	ds	1
   292                           
   293                           	psect	bssBANK0
   294   0000E5                     __pbssBANK0:
   295                           	callstack 0
   296   0000E5                     floorf@F526:
   297                           	callstack 0
   298   0000E5                     	ds	4
   299   0000E9                     ___fpclassifyf@F465:
   300                           	callstack 0
   301   0000E9                     	ds	4
   302   0000ED                     _width:
   303                           	callstack 0
   304   0000ED                     	ds	2
   305   0000EF                     _low_threshold:
   306                           	callstack 0
   307   0000EF                     	ds	2
   308   0000F1                     _vals:
   309                           	callstack 0
   310   0000F1                     	ds	8
   311                           
   312                           	psect	dataBANK0
   313   0000F9                     __pdataBANK0:
   314                           	callstack 0
   315   0000F9                     _high_threshold:
   316                           	callstack 0
   317   0000F9                     	ds	2
   318   0000FB                     _DataFlag:
   319                           	callstack 0
   320   0000FB                     	ds	1
   321                           
   322                           	psect	bssBANK1
   323   000100                     __pbssBANK1:
   324                           	callstack 0
   325   000100                     _EUSART4TXbuf:
   326                           	callstack 0
   327   000100                     	ds	60
   328   00013C                     _EUSART4RXbuf:
   329                           	callstack 0
   330   00013C                     	ds	20
   331   000150                     _dbuf:
   332                           	callstack 0
   333   000150                     	ds	80
   334   0001A0                     _rel:
   335                           	callstack 0
   336   0001A0                     	ds	16
   337                           
   338                           	psect	cstackBANK0
   339   000060                     __pcstackBANK0:
   340                           	callstack 0
   341   000060                     efgtoa@ne:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x0
   345   000060                     	ds	2
   346   000062                     efgtoa@p:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x2
   350   000062                     	ds	2
   351   000064                     efgtoa@t:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x4
   355   000064                     	ds	2
   356   000066                     _efgtoa$1769:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x6
   360   000066                     	ds	2
   361   000068                     efgtoa@pp:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x8
   365   000068                     	ds	1
   366   000069                     efgtoa@mode:
   367                           	callstack 0
   368                           
   369                           ; 1 bytes @ 0x9
   370   000069                     	ds	1
   371   00006A                     efgtoa@nmode:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0xA
   375   00006A                     	ds	1
   376   00006B                     efgtoa@d:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0xB
   380   00006B                     	ds	2
   381   00006D                     efgtoa@m:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0xD
   385   00006D                     	ds	2
   386   00006F                     efgtoa@e:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xF
   390   00006F                     	ds	2
   391   000071                     efgtoa@w:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x11
   395   000071                     	ds	2
   396   000073                     efgtoa@ou:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x13
   400   000073                     	ds	4
   401   000077                     efgtoa@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405   000077                     	ds	2
   406   000079                     efgtoa@h:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x19
   410   000079                     	ds	4
   411   00007D                     efgtoa@l:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x1D
   415   00007D                     	ds	4
   416   000081                     efgtoa@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x21
   420   000081                     	ds	1
   421   000082                     efgtoa@n:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x22
   425   000082                     	ds	2
   426   000084                     efgtoa@g:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x24
   430   000084                     	ds	4
   431   000088                     efgtoa@u:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x28
   435   000088                     	ds	4
   436   00008C                     ?_vfprintf:
   437                           	callstack 0
   438   00008C                     vfprintf@fp:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x2C
   442   00008C                     	ds	2
   443   00008E                     vfprintf@fmt:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x2E
   447   00008E                     	ds	2
   448   000090                     vfprintf@ap:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x30
   452   000090                     	ds	2
   453   000092                     ?_sprintf:
   454                           	callstack 0
   455   000092                     sprintf@s:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x32
   459   000092                     	ds	2
   460   000094                     sprintf@fmt:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x34
   464   000094                     	ds	16
   465   0000A4                     sprintf@ap:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x44
   469   0000A4                     	ds	2
   470   0000A6                     sprintf@f:
   471                           	callstack 0
   472                           
   473                           ; 11 bytes @ 0x46
   474   0000A6                     	ds	11
   475   0000B1                     ??_main:
   476                           
   477                           ; 1 bytes @ 0x51
   478   0000B1                     	ds	2
   479   0000B3                     main@buf:
   480                           	callstack 0
   481                           
   482                           ; 50 bytes @ 0x53
   483   0000B3                     	ds	50
   484                           
   485                           	psect	cstackCOMRAM
   486   000001                     __pcstackCOMRAM:
   487                           	callstack 0
   488   000001                     ??i2_I2C_2_Master_Idle:
   489   000001                     
   490                           ; 1 bytes @ 0x0
   491   000001                     	ds	1
   492   000002                     i2I2C_2_Master_Write@data_byte:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x1
   496   000002                     	ds	1
   497   000003                     ??_I2C_2_Master_Idle:
   498   000003                     ?___fpclassifyf:
   499                           	callstack 0
   500   000003                     ?___fladd:
   501                           	callstack 0
   502   000003                     ?___fldiv:
   503                           	callstack 0
   504   000003                     ?___flmul:
   505                           	callstack 0
   506   000003                     ?_labs:
   507                           	callstack 0
   508   000003                     ?___flneg:
   509                           	callstack 0
   510   000003                     ?___fltol:
   511                           	callstack 0
   512   000003                     ?___xxtofl:
   513                           	callstack 0
   514   000003                     ?___aodiv:
   515                           	callstack 0
   516   000003                     ?___aomod:
   517                           	callstack 0
   518   000003                     putCharToTxBuf@byte:
   519                           	callstack 0
   520   000003                     memcpy@d1:
   521                           	callstack 0
   522   000003                     fputc@c:
   523                           	callstack 0
   524   000003                     strcpy@dest:
   525                           	callstack 0
   526   000003                     ___fleq@ff1:
   527                           	callstack 0
   528   000003                     ___flneg@f1:
   529                           	callstack 0
   530   000003                     ___fltol@f1:
   531                           	callstack 0
   532   000003                     ___fladd@b:
   533                           	callstack 0
   534   000003                     ___fldiv@b:
   535                           	callstack 0
   536   000003                     ___flmul@b:
   537                           	callstack 0
   538   000003                     ___xxtofl@val:
   539                           	callstack 0
   540   000003                     ___fpclassifyf@x:
   541                           	callstack 0
   542   000003                     labs@a:
   543                           	callstack 0
   544   000003                     ___aodiv@dividend:
   545                           	callstack 0
   546   000003                     ___aomod@dividend:
   547                           	callstack 0
   548                           
   549                           ; 8 bytes @ 0x2
   550   000003                     	ds	1
   551   000004                     ??_I2C_2_Master_Read:
   552   000004                     I2C_2_Master_Write@data_byte:
   553                           	callstack 0
   554   000004                     TxBufferedString@string:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x3
   558   000004                     	ds	1
   559   000005                     color_writetoaddr@value:
   560                           	callstack 0
   561   000005                     I2C_2_Master_Read@ack:
   562                           	callstack 0
   563   000005                     memcpy@s1:
   564                           	callstack 0
   565   000005                     fputc@fp:
   566                           	callstack 0
   567   000005                     strcpy@src:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x4
   571   000005                     	ds	1
   572   000006                     color_writetoaddr@address:
   573                           	callstack 0
   574   000006                     I2C_2_Master_Read@tmp:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x5
   578   000006                     	ds	1
   579   000007                     ??_fputc:
   580   000007                     ??___fpclassifyf:
   581   000007                     ??_labs:
   582   000007                     ??_color_click_init:
   583   000007                     ??___fltol:
   584   000007                     ??___xxtofl:
   585   000007                     ?_color_read_lum:
   586                           	callstack 0
   587   000007                     ?_color_read_Red:
   588                           	callstack 0
   589   000007                     ?_color_read_Green:
   590                           	callstack 0
   591   000007                     ?_color_read_Blue:
   592                           	callstack 0
   593   000007                     memcpy@n:
   594                           	callstack 0
   595   000007                     strcpy@s:
   596                           	callstack 0
   597   000007                     ___fleq@ff2:
   598                           	callstack 0
   599   000007                     ___fladd@a:
   600                           	callstack 0
   601   000007                     ___fldiv@a:
   602                           	callstack 0
   603   000007                     ___flmul@a:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x6
   607   000007                     	ds	2
   608   000009                     ??_color_read_lum:
   609   000009                     ??_color_read_Red:
   610   000009                     ??_color_read_Green:
   611   000009                     ??_color_read_Blue:
   612   000009                     memcpy@d:
   613                           	callstack 0
   614   000009                     strcpy@d:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x8
   618   000009                     	ds	2
   619   00000B                     ??___fladd:
   620   00000B                     ??___fldiv:
   621   00000B                     ??___flmul:
   622   00000B                     ??___fleq:
   623   00000B                     ___fltol@sign1:
   624                           	callstack 0
   625   00000B                     ___xxtofl@sign:
   626                           	callstack 0
   627   00000B                     ___fpclassifyf@e:
   628                           	callstack 0
   629   00000B                     memcpy@s:
   630                           	callstack 0
   631   00000B                     ___aodiv@divisor:
   632                           	callstack 0
   633   00000B                     ___aomod@divisor:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0xA
   637   00000B                     	ds	1
   638   00000C                     ___fltol@exp1:
   639                           	callstack 0
   640   00000C                     ___xxtofl@exp:
   641                           	callstack 0
   642   00000C                     color_read_lum@tmp:
   643                           	callstack 0
   644   00000C                     color_read_Red@tmp:
   645                           	callstack 0
   646   00000C                     color_read_Green@tmp:
   647                           	callstack 0
   648   00000C                     color_read_Blue@tmp:
   649                           	callstack 0
   650   00000C                     fputs@s:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0xB
   654   00000C                     	ds	1
   655   00000D                     memcpy@tmp:
   656                           	callstack 0
   657   00000D                     ___xxtofl@arg:
   658                           	callstack 0
   659   00000D                     ___fpclassifyf@u:
   660                           	callstack 0
   661                           
   662                           ; 4 bytes @ 0xC
   663   00000D                     	ds	1
   664   00000E                     readColours@vals:
   665                           	callstack 0
   666   00000E                     fputs@fp:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0xD
   670   00000E                     	ds	1
   671   00000F                     ___fladd@signs:
   672                           	callstack 0
   673   00000F                     ___flmul@sign:
   674                           	callstack 0
   675   00000F                     ___fldiv@rem:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0xE
   679   00000F                     	ds	1
   680   000010                     ___fladd@aexp:
   681                           	callstack 0
   682   000010                     fputs@c:
   683                           	callstack 0
   684   000010                     ___flmul@grs:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0xF
   688   000010                     	ds	1
   689   000011                     ___fladd@bexp:
   690                           	callstack 0
   691   000011                     fputs@i:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x10
   695   000011                     	ds	1
   696   000012                     ___fladd@grs:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x11
   700   000012                     	ds	1
   701   000013                     ___aodiv@counter:
   702                           	callstack 0
   703   000013                     ___aomod@counter:
   704                           	callstack 0
   705   000013                     ___fldiv@sign:
   706                           	callstack 0
   707   000013                     pad@fp:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x12
   711   000013                     	ds	1
   712   000014                     ___aodiv@sign:
   713                           	callstack 0
   714   000014                     ___aomod@sign:
   715                           	callstack 0
   716   000014                     ___flmul@aexp:
   717                           	callstack 0
   718   000014                     ___fldiv@new_exp:
   719                           	callstack 0
   720                           
   721                           ; 2 bytes @ 0x13
   722   000014                     	ds	1
   723   000015                     ?_abs:
   724                           	callstack 0
   725   000015                     ___flmul@bexp:
   726                           	callstack 0
   727   000015                     pad@buf:
   728                           	callstack 0
   729   000015                     abs@a:
   730                           	callstack 0
   731   000015                     ___aodiv@quotient:
   732                           	callstack 0
   733                           
   734                           ; 8 bytes @ 0x14
   735   000015                     	ds	1
   736   000016                     ___fldiv@grs:
   737                           	callstack 0
   738   000016                     ___flmul@prod:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x15
   742   000016                     	ds	1
   743   000017                     ??_abs:
   744   000017                     pad@p:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x16
   748   000017                     	ds	2
   749   000019                     ??_pad:
   750                           
   751                           ; 1 bytes @ 0x18
   752   000019                     	ds	1
   753   00001A                     ___fldiv@bexp:
   754                           	callstack 0
   755   00001A                     ___flmul@temp:
   756                           	callstack 0
   757   00001A                     pad@i:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x19
   761   00001A                     	ds	1
   762   00001B                     ___fldiv@aexp:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x1A
   766   00001B                     	ds	1
   767   00001C                     ?___flsub:
   768                           	callstack 0
   769   00001C                     ?_floorf:
   770                           	callstack 0
   771   00001C                     colour_rel@vals:
   772                           	callstack 0
   773   00001C                     pad@w:
   774                           	callstack 0
   775   00001C                     ___flge@ff1:
   776                           	callstack 0
   777   00001C                     ___flsub@b:
   778                           	callstack 0
   779   00001C                     floorf@x:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x1B
   783   00001C                     	ds	2
   784   00001E                     colour_rel@rel:
   785                           	callstack 0
   786   00001E                     dtoa@fp:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x1D
   790   00001E                     	ds	2
   791   000020                     ??_floorf:
   792   000020                     colour_rel@R:
   793                           	callstack 0
   794   000020                     ___flge@ff2:
   795                           	callstack 0
   796   000020                     ___flsub@a:
   797                           	callstack 0
   798   000020                     dtoa@d:
   799                           	callstack 0
   800                           
   801                           ; 8 bytes @ 0x1F
   802   000020                     	ds	4
   803   000024                     ??___flge:
   804   000024                     colour_rel@G:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x23
   808   000024                     	ds	2
   809   000026                     floorf@m:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x25
   813   000026                     	ds	2
   814   000028                     ??_dtoa:
   815   000028                     colour_rel@B:
   816                           	callstack 0
   817                           
   818                           ; 4 bytes @ 0x27
   819   000028                     	ds	2
   820   00002A                     floorf@e:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x29
   824   00002A                     	ds	2
   825   00002C                     colour_rel@L:
   826                           	callstack 0
   827   00002C                     floorf@u:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x2B
   831   00002C                     	ds	4
   832   000030                     _dtoa$1738:
   833                           	callstack 0
   834   000030                     efgtoa@fp:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x2F
   838   000030                     	ds	2
   839   000032                     dtoa@p:
   840                           	callstack 0
   841   000032                     efgtoa@f:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x31
   845   000032                     	ds	2
   846   000034                     dtoa@w:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x33
   850   000034                     	ds	2
   851   000036                     efgtoa@c:
   852                           	callstack 0
   853   000036                     dtoa@n:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x35
   857   000036                     	ds	1
   858   000037                     ??_efgtoa:
   859                           
   860                           ; 1 bytes @ 0x36
   861   000037                     	ds	7
   862   00003E                     dtoa@i:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x3D
   866   00003E                     	ds	2
   867   000040                     dtoa@s:
   868                           	callstack 0
   869                           
   870                           ; 1 bytes @ 0x3F
   871   000040                     	ds	1
   872   000041                     vfpfcnvrt@fp:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x40
   876   000041                     	ds	2
   877   000043                     vfpfcnvrt@fmt:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x42
   881   000043                     	ds	2
   882   000045                     vfpfcnvrt@ap:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x44
   886   000045                     	ds	2
   887   000047                     ??_vfpfcnvrt:
   888                           
   889                           ; 1 bytes @ 0x46
   890   000047                     	ds	2
   891   000049                     vfpfcnvrt@convarg:
   892                           	callstack 0
   893                           
   894                           ; 8 bytes @ 0x48
   895   000049                     	ds	8
   896   000051                     vfpfcnvrt@c:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x50
   900   000051                     	ds	1
   901   000052                     vfpfcnvrt@cp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x51
   905   000052                     	ds	2
   906   000054                     vfprintf@cfmt:
   907                           	callstack 0
   908                           
   909                           ; 2 bytes @ 0x53
   910   000054                     	ds	2
   911   000056                     
   912                           ; 1 bytes @ 0x55
   913 ;;
   914 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   915 ;;
   916 ;; *************** function _main *****************
   917 ;; Defined at:
   918 ;;		line 28 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  buf            50   83[BANK0 ] unsigned char [50]
   923 ;;  ADC             2    0        unsigned int 
   924 ;;  frac_part       2    0        unsigned int 
   925 ;;  int_part        2    0        unsigned int 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   938 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   939 ;;Total ram usage:       52 bytes
   940 ;; Hardware stack levels required when called: 12
   941 ;; This function calls:
   942 ;;		_I2C_2_Master_Init
   943 ;;		_TxBufferedString
   944 ;;		_color_click_init
   945 ;;		_color_writetoaddr
   946 ;;		_colour_rel
   947 ;;		_initUSART4
   948 ;;		_readColours
   949 ;;		_sendTxBuf
   950 ;;		_sprintf
   951 ;; This function is called by:
   952 ;;		Startup code after reset
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text0
   957   00326A                     __ptext0:
   958                           	callstack 0
   959   00326A                     _main:
   960                           	callstack 19
   961   00326A                     
   962                           ;main.c: 29:     initUSART4();
   963   00326A  EC4D  F01F         	call	_initUSART4	;wreg free
   964   00326E                     
   965                           ;main.c: 31:     color_click_init();
   966   00326E  ECA4  F01E         	call	_color_click_init	;wreg free
   967   003272                     
   968                           ;main.c: 32:     I2C_2_Master_Init();
   969   003272  ECEB  F01E         	call	_I2C_2_Master_Init	;wreg free
   970                           
   971                           ;main.c: 33:     char buf[50];;main.c: 34:     unsigned int int_part;;main.c: 35:     un
      +                          signed int frac_part;;main.c: 36:     unsigned int ADC;;main.c: 45:     color_writetoadd
      +                          r(0x00, 0x01);
   972   003276  0E01               	movlw	1
   973   003278  6E05               	movwf	color_writetoaddr@value^0,c
   974   00327A  0E00               	movlw	0
   975   00327C  EC3D  F01F         	call	_color_writetoaddr
   976   003280                     
   977                           ;main.c: 55:     TRISGbits.TRISG1=0;
   978   003280  9287               	bcf	135,1,c	;volatile
   979   003282                     
   980                           ;main.c: 56:     TRISAbits.TRISA4=0;
   981   003282  9881               	bcf	129,4,c	;volatile
   982   003284                     
   983                           ;main.c: 57:     TRISFbits.TRISF7=0;
   984   003284  9E86               	bcf	134,7,c	;volatile
   985   003286                     
   986                           ;main.c: 59:     TRISDbits.TRISD7=0;
   987   003286  9E84               	bcf	132,7,c	;volatile
   988   003288                     
   989                           ;main.c: 60:     LATDbits.LATD7=1;
   990   003288  8E7C               	bsf	124,7,c	;volatile
   991   00328A                     
   992                           ;main.c: 62:     TRISHbits.TRISH3=0;
   993   00328A  9688               	bcf	136,3,c	;volatile
   994   00328C                     
   995                           ;main.c: 63:     LATHbits.LATH3=1;
   996   00328C  8680               	bsf	128,3,c	;volatile
   997   00328E                     
   998                           ;main.c: 65:     LATGbits.LATG1=0;
   999   00328E  927F               	bcf	127,1,c	;volatile
  1000   003290                     
  1001                           ;main.c: 66:     LATAbits.LATA4=0;
  1002   003290  9879               	bcf	121,4,c	;volatile
  1003   003292                     
  1004                           ;main.c: 68:     LATFbits.LATF7=0;
  1005   003292  9E7E               	bcf	126,7,c	;volatile
  1006   003294                     
  1007                           ;main.c: 70:     LATGbits.LATG1=1;
  1008   003294  827F               	bsf	127,1,c	;volatile
  1009   003296                     
  1010                           ;main.c: 71:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1011   003296  0E52               	movlw	82
  1012   003298  0100               	movlb	0	; () banked
  1013   00329A  6FB2               	movwf	(??_main+1)& (0+255),b
  1014   00329C  0E2B               	movlw	43
  1015   00329E  6FB1               	movwf	??_main& (0+255),b
  1016   0032A0  0E00               	movlw	0
  1017   0032A2                     u4317:
  1018   0032A2  2EE8               	decfsz	wreg,f,c
  1019   0032A4  D7FE               	bra	u4317
  1020   0032A6  2FB1               	decfsz	??_main& (0+255),f,b
  1021   0032A8  D7FC               	bra	u4317
  1022   0032AA  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1023   0032AC  D7FA               	bra	u4317
  1024   0032AE  F000               	nop	
  1025   0032B0                     
  1026                           ;main.c: 72:     LATAbits.LATA4=1;
  1027   0032B0  8879               	bsf	121,4,c	;volatile
  1028   0032B2                     
  1029                           ;main.c: 73:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1030   0032B2  0E52               	movlw	82
  1031   0032B4  0100               	movlb	0	; () banked
  1032   0032B6  6FB2               	movwf	(??_main+1)& (0+255),b
  1033   0032B8  0E2B               	movlw	43
  1034   0032BA  6FB1               	movwf	??_main& (0+255),b
  1035   0032BC  0E00               	movlw	0
  1036   0032BE                     u4327:
  1037   0032BE  2EE8               	decfsz	wreg,f,c
  1038   0032C0  D7FE               	bra	u4327
  1039   0032C2  2FB1               	decfsz	??_main& (0+255),f,b
  1040   0032C4  D7FC               	bra	u4327
  1041   0032C6  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1042   0032C8  D7FA               	bra	u4327
  1043   0032CA  F000               	nop	
  1044   0032CC                     
  1045                           ;main.c: 74:     LATFbits.LATF7=1;
  1046   0032CC  8E7E               	bsf	126,7,c	;volatile
  1047   0032CE                     
  1048                           ;main.c: 75:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1049   0032CE  0E52               	movlw	82
  1050   0032D0  0100               	movlb	0	; () banked
  1051   0032D2  6FB2               	movwf	(??_main+1)& (0+255),b
  1052   0032D4  0E2B               	movlw	43
  1053   0032D6  6FB1               	movwf	??_main& (0+255),b
  1054   0032D8  0E00               	movlw	0
  1055   0032DA                     u4337:
  1056   0032DA  2EE8               	decfsz	wreg,f,c
  1057   0032DC  D7FE               	bra	u4337
  1058   0032DE  2FB1               	decfsz	??_main& (0+255),f,b
  1059   0032E0  D7FC               	bra	u4337
  1060   0032E2  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  1061   0032E4  D7FA               	bra	u4337
  1062   0032E6  F000               	nop	
  1063   0032E8                     l4402:
  1064                           
  1065                           ;main.c: 79:     {;main.c: 87:     readColours(&vals);
  1066   0032E8  0EF1               	movlw	low _vals
  1067   0032EA  6E0E               	movwf	readColours@vals^0,c
  1068   0032EC  0E00               	movlw	high _vals
  1069   0032EE  6E0F               	movwf	(readColours@vals+1)^0,c
  1070   0032F0  EC70  F01C         	call	_readColours	;wreg free
  1071   0032F4                     
  1072                           ;main.c: 88:     colour_rel(&vals, &rel);
  1073   0032F4  0EF1               	movlw	low _vals
  1074   0032F6  6E1C               	movwf	colour_rel@vals^0,c
  1075   0032F8  0E00               	movlw	high _vals
  1076   0032FA  6E1D               	movwf	(colour_rel@vals+1)^0,c
  1077   0032FC  0EA0               	movlw	low _rel
  1078   0032FE  6E1E               	movwf	colour_rel@rel^0,c
  1079   003300  0E01               	movlw	high _rel
  1080   003302  6E1F               	movwf	(colour_rel@rel+1)^0,c
  1081   003304  ECFA  F016         	call	_colour_rel	;wreg free
  1082   003308                     
  1083                           ;main.c: 90:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
  1084   003308  0EB3               	movlw	low main@buf
  1085   00330A  0100               	movlb	0	; () banked
  1086   00330C  6F92               	movwf	sprintf@s& (0+255),b
  1087   00330E  0E00               	movlw	high main@buf
  1088   003310  6F93               	movwf	(sprintf@s+1)& (0+255),b
  1089   003312  0E01               	movlw	low STR_1
  1090   003314  6F94               	movwf	sprintf@fmt& (0+255),b
  1091   003316  0E0E               	movlw	high STR_1
  1092   003318  6F95               	movwf	(sprintf@fmt+1)& (0+255),b
  1093   00331A  C1A0  F096         	movff	_rel,?_sprintf+4
  1094   00331E  C1A1  F097         	movff	_rel+1,?_sprintf+5
  1095   003322  C1A2  F098         	movff	_rel+2,?_sprintf+6
  1096   003326  C1A3  F099         	movff	_rel+3,?_sprintf+7
  1097   00332A  C1A4  F09A         	movff	_rel+4,?_sprintf+8
  1098   00332E  C1A5  F09B         	movff	_rel+5,?_sprintf+9
  1099   003332  C1A6  F09C         	movff	_rel+6,?_sprintf+10
  1100   003336  C1A7  F09D         	movff	_rel+7,?_sprintf+11
  1101   00333A  C1A8  F09E         	movff	_rel+8,?_sprintf+12
  1102   00333E  C1A9  F09F         	movff	_rel+9,?_sprintf+13
  1103   003342  C1AA  F0A0         	movff	_rel+10,?_sprintf+14
  1104   003346  C1AB  F0A1         	movff	_rel+11,?_sprintf+15
  1105   00334A  C0F7  F0A2         	movff	_vals+6,?_sprintf+16
  1106   00334E  C0F8  F0A3         	movff	_vals+7,?_sprintf+17
  1107   003352  ECC9  F01C         	call	_sprintf	;wreg free
  1108   003356                     
  1109                           ;main.c: 92:     TxBufferedString(buf);
  1110   003356  0EB3               	movlw	low main@buf
  1111   003358  6E04               	movwf	TxBufferedString@string^0,c
  1112   00335A  0E00               	movlw	high main@buf
  1113   00335C  6E05               	movwf	(TxBufferedString@string+1)^0,c
  1114   00335E  ECBE  F01E         	call	_TxBufferedString	;wreg free
  1115                           
  1116                           ;main.c: 97:         while (DataFlag){
  1117   003362  EFB5  F019         	goto	l4412
  1118   003366                     l4410:
  1119                           
  1120                           ; BSR set to: 0
  1121                           ;main.c: 98:             sendTxBuf();
  1122   003366  ECD6  F01E         	call	_sendTxBuf	;wreg free
  1123   00336A                     l4412:
  1124                           
  1125                           ;main.c: 97:         while (DataFlag){
  1126   00336A  0100               	movlb	0	; () banked
  1127   00336C  51FB               	movf	_DataFlag& (0+255),w,b	;volatile
  1128   00336E  A4D8               	btfss	status,2,c
  1129   003370  EFBC  F019         	goto	u4301
  1130   003374  EFBE  F019         	goto	u4300
  1131   003378                     u4301:
  1132   003378  EFB3  F019         	goto	l4410
  1133   00337C                     u4300:
  1134   00337C  EF74  F019         	goto	l4402
  1135   003380  EF14  F000         	goto	start
  1136   003384                     __end_of_main:
  1137                           	callstack 0
  1138                           
  1139 ;; *************** function _sprintf *****************
  1140 ;; Defined at:
  1141 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  s               2   50[BANK0 ] PTR unsigned char 
  1144 ;;		 -> main@buf(50), 
  1145 ;;  fmt             2   52[BANK0 ] PTR const unsigned char 
  1146 ;;		 -> STR_1(33), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  f              11   70[BANK0 ] struct _IO_FILE
  1149 ;;  ap              2   68[BANK0 ] PTR void [1]
  1150 ;;		 -> ?_sprintf(2), 
  1151 ;;  ret             2    0        int 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  2   50[BANK0 ] int 
  1154 ;; Registers used:
  1155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1161 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;Total ram usage:       31 bytes
  1166 ;; Hardware stack levels used: 1
  1167 ;; Hardware stack levels required when called: 11
  1168 ;; This function calls:
  1169 ;;		_vfprintf
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           
  1175                           	psect	text1
  1176   003992                     __ptext1:
  1177                           	callstack 0
  1178   003992                     _sprintf:
  1179                           	callstack 19
  1180   003992  0E96               	movlw	low (?_sprintf+4)
  1181   003994  0100               	movlb	0	; () banked
  1182   003996  6FA4               	movwf	sprintf@ap& (0+255),b
  1183   003998  0E00               	movlw	high (?_sprintf+4)
  1184   00399A  6FA5               	movwf	(sprintf@ap+1)& (0+255),b
  1185   00399C  C092  F0A6         	movff	sprintf@s,sprintf@f
  1186   0039A0  C093  F0A7         	movff	sprintf@s+1,sprintf@f+1
  1187   0039A4                     
  1188                           ; BSR set to: 0
  1189   0039A4  0E00               	movlw	0
  1190   0039A6  6FAA               	movwf	(sprintf@f+4)& (0+255),b
  1191   0039A8  0E00               	movlw	0
  1192   0039AA  6FA9               	movwf	(sprintf@f+3)& (0+255),b
  1193   0039AC                     
  1194                           ; BSR set to: 0
  1195   0039AC  0E00               	movlw	0
  1196   0039AE  6FB0               	movwf	(sprintf@f+10)& (0+255),b
  1197   0039B0  0E00               	movlw	0
  1198   0039B2  6FAF               	movwf	(sprintf@f+9)& (0+255),b
  1199   0039B4                     
  1200                           ; BSR set to: 0
  1201   0039B4  0EA6               	movlw	low sprintf@f
  1202   0039B6  6F8C               	movwf	vfprintf@fp& (0+255),b
  1203   0039B8  0E00               	movlw	high sprintf@f
  1204   0039BA  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1205   0039BC  C094  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1206   0039C0  C095  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1207   0039C4  0EA4               	movlw	low sprintf@ap
  1208   0039C6  6F90               	movwf	vfprintf@ap& (0+255),b
  1209   0039C8  0E00               	movlw	high sprintf@ap
  1210   0039CA  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1211   0039CC  EC9F  F01C         	call	_vfprintf	;wreg free
  1212   0039D0  0100               	movlb	0	; () banked
  1213   0039D2  51A9               	movf	(sprintf@f+3)& (0+255),w,b
  1214   0039D4  2592               	addwf	sprintf@s& (0+255),w,b
  1215   0039D6  6ED9               	movwf	fsr2l,c
  1216   0039D8  51AA               	movf	(sprintf@f+4)& (0+255),w,b
  1217   0039DA  2193               	addwfc	(sprintf@s+1)& (0+255),w,b
  1218   0039DC  6EDA               	movwf	fsr2h,c
  1219   0039DE  0E00               	movlw	0
  1220   0039E0  6EDF               	movwf	indf2,c
  1221   0039E2                     
  1222                           ; BSR set to: 0
  1223   0039E2  0012               	return		;funcret
  1224   0039E4                     __end_of_sprintf:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _vfprintf *****************
  1228 ;; Defined at:
  1229 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1232 ;;		 -> sprintf@f(11), 
  1233 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1234 ;;		 -> STR_1(33), 
  1235 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1236 ;;		 -> sprintf@ap(2), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  cfmt            2   83[COMRAM] PTR unsigned char 
  1239 ;;		 -> STR_1(33), 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  2   44[BANK0 ] int 
  1242 ;; Registers used:
  1243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1249 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;Total ram usage:        8 bytes
  1254 ;; Hardware stack levels used: 1
  1255 ;; Hardware stack levels required when called: 10
  1256 ;; This function calls:
  1257 ;;		_vfpfcnvrt
  1258 ;; This function is called by:
  1259 ;;		_sprintf
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text2
  1264   00393E                     __ptext2:
  1265                           	callstack 0
  1266   00393E                     _vfprintf:
  1267                           	callstack 19
  1268   00393E                     
  1269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1270   00393E  C08E  F054         	movff	vfprintf@fmt,vfprintf@cfmt
  1271   003942  C08F  F055         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1274   003946  EFB3  F01C         	goto	l4040
  1275   00394A                     l4038:
  1276                           
  1277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1278   00394A  C08C  F041         	movff	vfprintf@fp,vfpfcnvrt@fp
  1279   00394E  C08D  F042         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1280   003952  0E54               	movlw	low vfprintf@cfmt
  1281   003954  6E43               	movwf	vfpfcnvrt@fmt^0,c
  1282   003956  0E00               	movlw	high vfprintf@cfmt
  1283   003958  6E44               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1284   00395A  C090  F045         	movff	vfprintf@ap,vfpfcnvrt@ap
  1285   00395E  C091  F046         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1286   003962  EC56  F012         	call	_vfpfcnvrt	;wreg free
  1287   003966                     l4040:
  1288                           
  1289                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1290   003966  C054  FFF6         	movff	vfprintf@cfmt,tblptrl
  1291   00396A  C055  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1292   00396E                     	if	0	;tblptru may be non-zero
  1293   00396E                     	endif
  1294   00396E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1295   00396E  0E00               	movlw	low (__mediumconst shr (0+16))
  1296   003970  6EF8               	movwf	tblptru,c
  1297   003972                     	endif
  1298   003972  0008               	tblrd		*
  1299   003974  50F5               	movf	tablat,w,c
  1300   003976  0900               	iorlw	0
  1301   003978  A4D8               	btfss	status,2,c
  1302   00397A  EFC1  F01C         	goto	u4201
  1303   00397E  EFC3  F01C         	goto	u4200
  1304   003982                     u4201:
  1305   003982  EFA5  F01C         	goto	l4038
  1306   003986                     u4200:
  1307   003986                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1309   003986  0E00               	movlw	0
  1310   003988  0100               	movlb	0	; () banked
  1311   00398A  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1312   00398C  0E00               	movlw	0
  1313   00398E  6F8C               	movwf	?_vfprintf& (0+255),b
  1314   003990                     
  1315                           ; BSR set to: 0
  1316   003990  0012               	return		;funcret
  1317   003992                     __end_of_vfprintf:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _vfpfcnvrt *****************
  1321 ;; Defined at:
  1322 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  fp              2   64[COMRAM] PTR struct _IO_FILE
  1325 ;;		 -> sprintf@f(11), 
  1326 ;;  fmt             2   66[COMRAM] PTR PTR unsigned char 
  1327 ;;		 -> vfprintf@cfmt(2), 
  1328 ;;  ap              2   68[COMRAM] PTR PTR void 
  1329 ;;		 -> sprintf@ap(2), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  convarg         8   72[COMRAM] struct .
  1332 ;;  cp              2   81[COMRAM] PTR unsigned char 
  1333 ;;		 -> STR_1(33), 
  1334 ;;  i               2    0        int 
  1335 ;;  done            2    0        int 
  1336 ;;  c               1   80[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1349 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1350 ;;Total ram usage:       19 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 9
  1353 ;; This function calls:
  1354 ;;		_dtoa
  1355 ;;		_efgtoa
  1356 ;;		_fputc
  1357 ;; This function is called by:
  1358 ;;		_vfprintf
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text3
  1363   0024AC                     __ptext3:
  1364                           	callstack 0
  1365   0024AC                     _vfpfcnvrt:
  1366                           	callstack 19
  1367   0024AC                     
  1368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1369   0024AC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1370   0024B0  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1371   0024B4  CFDE FFF6          	movff	postinc2,tblptrl
  1372   0024B8  CFDD FFF7          	movff	postdec2,tblptrh
  1373   0024BC                     	if	0	;tblptru may be non-zero
  1374   0024BC                     	endif
  1375   0024BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1376   0024BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1377   0024BE  6EF8               	movwf	tblptru,c
  1378   0024C0                     	endif
  1379   0024C0  0008               	tblrd		*
  1380   0024C2  50F5               	movf	tablat,w,c
  1381   0024C4  0A25               	xorlw	37
  1382   0024C6  A4D8               	btfss	status,2,c
  1383   0024C8  EF68  F012         	goto	u4011
  1384   0024CC  EF6A  F012         	goto	u4010
  1385   0024D0                     u4011:
  1386   0024D0  EFC2  F013         	goto	l3906
  1387   0024D4                     u4010:
  1388   0024D4                     
  1389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1390   0024D4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1391   0024D8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1392   0024DC  2ADE               	incf	postinc2,f,c
  1393   0024DE  0E00               	movlw	0
  1394   0024E0  22DD               	addwfc	postdec2,f,c
  1395   0024E2                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1397   0024E2  0E00               	movlw	0
  1398   0024E4  0100               	movlb	0	; () banked
  1399   0024E6  6FEE               	movwf	(_width+1)& (0+255),b
  1400   0024E8  0E00               	movlw	0
  1401   0024EA  6FED               	movwf	_width& (0+255),b
  1402   0024EC  C0ED  F058         	movff	_width,_flags
  1403   0024F0                     
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1406   0024F0  6856               	setf	_prec^0,c
  1407   0024F2  6857               	setf	(_prec+1)^0,c
  1408   0024F4                     
  1409                           ; BSR set to: 0
  1410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1411   0024F4  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1412   0024F8  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1413   0024FC  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1414   002500  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1415   002504                     
  1416                           ; BSR set to: 0
  1417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1418   002504  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1419   002508  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1420   00250C                     	if	0	;tblptru may be non-zero
  1421   00250C                     	endif
  1422   00250C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1423   00250C  0E00               	movlw	low (__mediumconst shr (0+16))
  1424   00250E  6EF8               	movwf	tblptru,c
  1425   002510                     	endif
  1426   002510  0008               	tblrd		*
  1427   002512  50F5               	movf	tablat,w,c
  1428   002514  0A64               	xorlw	100
  1429   002516  B4D8               	btfsc	status,2,c
  1430   002518  EF90  F012         	goto	u4021
  1431   00251C  EF92  F012         	goto	u4020
  1432   002520                     u4021:
  1433   002520  EFA2  F012         	goto	l3862
  1434   002524                     u4020:
  1435   002524                     
  1436                           ; BSR set to: 0
  1437   002524  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1438   002528  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1439   00252C                     	if	0	;tblptru may be non-zero
  1440   00252C                     	endif
  1441   00252C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1442   00252C  0E00               	movlw	low (__mediumconst shr (0+16))
  1443   00252E  6EF8               	movwf	tblptru,c
  1444   002530                     	endif
  1445   002530  0008               	tblrd		*
  1446   002532  50F5               	movf	tablat,w,c
  1447   002534  0A69               	xorlw	105
  1448   002536  A4D8               	btfss	status,2,c
  1449   002538  EFA0  F012         	goto	u4031
  1450   00253C  EFA2  F012         	goto	u4030
  1451   002540                     u4031:
  1452   002540  EFE5  F012         	goto	l3868
  1453   002544                     u4030:
  1454   002544                     l3862:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1458   002544  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1459   002548  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1460   00254C  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1461   002550  0E02               	movlw	2
  1462   002552  26DE               	addwf	postinc2,f,c
  1463   002554  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1464   002558  0E00               	movlw	0
  1465   00255A  22DD               	addwfc	postdec2,f,c
  1466   00255C  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1467   002560  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1468   002564  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1469   002568  CFDD F04A          	movff	postdec2,vfpfcnvrt@convarg+1
  1470   00256C  0E00               	movlw	0
  1471   00256E  BE4A               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1472   002570  0EFF               	movlw	-1
  1473   002572  6E4B               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1474   002574  6E4C               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1475   002576  6E4D               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1476   002578  6E4E               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1477   00257A  6E4F               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1478   00257C  6E50               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1481   00257E  0E01               	movlw	1
  1482   002580  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1483   002582  6E47               	movwf	??_vfpfcnvrt^0,c
  1484   002584  0E00               	movlw	0
  1485   002586  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1486   002588  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1487   00258A  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1488   00258E  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1489   002592  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1490   002596  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1491   00259A                     
  1492                           ; BSR set to: 0
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1494   00259A  C041  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1495   00259E  C042  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1496   0025A2  C049  F020         	movff	vfpfcnvrt@convarg,dtoa@d
  1497   0025A6  C04A  F021         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1498   0025AA  C04B  F022         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1499   0025AE  C04C  F023         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1500   0025B2  C04D  F024         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1501   0025B6  C04E  F025         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1502   0025BA  C04F  F026         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1503   0025BE  C050  F027         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1504   0025C2  ECD9  F013         	call	_dtoa	;wreg free
  1505   0025C6  EFD8  F013         	goto	l1123
  1506   0025CA                     l3868:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1510   0025CA  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1511   0025CE  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1512   0025D2  CFDE F052          	movff	postinc2,vfpfcnvrt@cp
  1513   0025D6  CFDD F053          	movff	postdec2,vfpfcnvrt@cp+1
  1514   0025DA                     
  1515                           ; BSR set to: 0
  1516                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1517   0025DA  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1518   0025DE  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1519   0025E2                     	if	0	;tblptru may be non-zero
  1520   0025E2                     	endif
  1521   0025E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1522   0025E2  0E00               	movlw	low (__mediumconst shr (0+16))
  1523   0025E4  6EF8               	movwf	tblptru,c
  1524   0025E6                     	endif
  1525   0025E6  0008               	tblrd		*
  1526   0025E8  CFF5 F051          	movff	tablat,vfpfcnvrt@c
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1529   0025EC  EF04  F013         	goto	l3880
  1530   0025F0                     l3872:
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1534   0025F0  4A52               	infsnz	vfpfcnvrt@cp^0,f,c
  1535   0025F2  2A53               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1536                           
  1537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1538   0025F4  EF1D  F013         	goto	l3882
  1539   0025F8                     l3874:
  1540                           
  1541                           ; BSR set to: 0
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1543   0025F8  0E6C               	movlw	108
  1544   0025FA  6E51               	movwf	vfpfcnvrt@c^0,c
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1547   0025FC  EF1D  F013         	goto	l3882
  1548   002600                     l3876:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1552   002600  0E00               	movlw	0
  1553   002602  6E51               	movwf	vfpfcnvrt@c^0,c
  1554                           
  1555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1556   002604  EF1D  F013         	goto	l3882
  1557   002608                     l3880:
  1558                           
  1559                           ; BSR set to: 0
  1560   002608  5051               	movf	vfpfcnvrt@c^0,w,c
  1561   00260A  6E47               	movwf	??_vfpfcnvrt^0,c
  1562   00260C  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1563                           
  1564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1565                           ; Switch size 1, requested type "simple"
  1566                           ; Number of cases is 1, Range of values is 0 to 0
  1567                           ; switch strategies available:
  1568                           ; Name         Instructions Cycles
  1569                           ; simple_byte            4     3 (average)
  1570                           ;	Chosen strategy is simple_byte
  1571   00260E  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1572   002610  0A00               	xorlw	0	; case 0
  1573   002612  B4D8               	btfsc	status,2,c
  1574   002614  EF0E  F013         	goto	l4534
  1575   002618  EF00  F013         	goto	l3876
  1576   00261C                     l4534:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 3, Range of values is 76 to 108
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte           10     6 (average)
  1584                           ;	Chosen strategy is simple_byte
  1585   00261C  5047               	movf	??_vfpfcnvrt^0,w,c
  1586   00261E  0A4C               	xorlw	76	; case 76
  1587   002620  B4D8               	btfsc	status,2,c
  1588   002622  EFF8  F012         	goto	l3872
  1589   002626  0A2A               	xorlw	42	; case 102
  1590   002628  B4D8               	btfsc	status,2,c
  1591   00262A  EFFC  F012         	goto	l3874
  1592   00262E  0A0A               	xorlw	10	; case 108
  1593   002630  B4D8               	btfsc	status,2,c
  1594   002632  EFF8  F012         	goto	l3872
  1595   002636  EF00  F013         	goto	l3876
  1596   00263A                     l3882:
  1597                           
  1598                           ; BSR set to: 0
  1599   00263A  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1600   00263E  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1601   002642                     	if	0	;tblptru may be non-zero
  1602   002642                     	endif
  1603   002642                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1604   002642  0E00               	movlw	low (__mediumconst shr (0+16))
  1605   002644  6EF8               	movwf	tblptru,c
  1606   002646                     	endif
  1607   002646  0008               	tblrd		*
  1608   002648  50F5               	movf	tablat,w,c
  1609   00264A  0A66               	xorlw	102
  1610   00264C  A4D8               	btfss	status,2,c
  1611   00264E  EF2B  F013         	goto	u4041
  1612   002652  EF2D  F013         	goto	u4040
  1613   002656                     u4041:
  1614   002656  EFB9  F013         	goto	l3902
  1615   00265A                     u4040:
  1616   00265A  EF63  F013         	goto	l3890
  1617   00265E                     l3884:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1621   00265E  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1622   002662  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1623   002666  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1624   00266A  0E04               	movlw	4
  1625   00266C  26DE               	addwf	postinc2,f,c
  1626   00266E  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1627   002672  0E00               	movlw	0
  1628   002674  22DD               	addwfc	postdec2,f,c
  1629   002676  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1630   00267A  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1631   00267E  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1632   002682  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg+1
  1633   002686  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg+2
  1634   00268A  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+3
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1637   00268E  EF78  F013         	goto	l3892
  1638   002692                     l3886:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1642   002692  C045  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1643   002696  C046  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1644   00269A  CFDF F047          	movff	indf2,??_vfpfcnvrt
  1645   00269E  0E04               	movlw	4
  1646   0026A0  26DE               	addwf	postinc2,f,c
  1647   0026A2  CFDF F048          	movff	indf2,??_vfpfcnvrt+1
  1648   0026A6  0E00               	movlw	0
  1649   0026A8  22DD               	addwfc	postdec2,f,c
  1650   0026AA  C047  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1651   0026AE  C048  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1652   0026B2  CFDE F049          	movff	postinc2,vfpfcnvrt@convarg
  1653   0026B6  CFDE F04A          	movff	postinc2,vfpfcnvrt@convarg+1
  1654   0026BA  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg+2
  1655   0026BE  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+3
  1656                           
  1657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1658   0026C2  EF78  F013         	goto	l3892
  1659   0026C6                     l3890:
  1660                           
  1661                           ; BSR set to: 0
  1662   0026C6  5051               	movf	vfpfcnvrt@c^0,w,c
  1663   0026C8  6E47               	movwf	??_vfpfcnvrt^0,c
  1664   0026CA  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1665                           
  1666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 1, Range of values is 0 to 0
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            4     3 (average)
  1672                           ;	Chosen strategy is simple_byte
  1673   0026CC  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1674   0026CE  0A00               	xorlw	0	; case 0
  1675   0026D0  B4D8               	btfsc	status,2,c
  1676   0026D2  EF6D  F013         	goto	l4536
  1677   0026D6  EF78  F013         	goto	l3892
  1678   0026DA                     l4536:
  1679                           
  1680                           ; BSR set to: 0
  1681                           ; Switch size 1, requested type "simple"
  1682                           ; Number of cases is 2, Range of values is 76 to 108
  1683                           ; switch strategies available:
  1684                           ; Name         Instructions Cycles
  1685                           ; simple_byte            7     4 (average)
  1686                           ;	Chosen strategy is simple_byte
  1687   0026DA  5047               	movf	??_vfpfcnvrt^0,w,c
  1688   0026DC  0A4C               	xorlw	76	; case 76
  1689   0026DE  B4D8               	btfsc	status,2,c
  1690   0026E0  EF49  F013         	goto	l3886
  1691   0026E4  0A20               	xorlw	32	; case 108
  1692   0026E6  B4D8               	btfsc	status,2,c
  1693   0026E8  EF2F  F013         	goto	l3884
  1694   0026EC  EF78  F013         	goto	l3892
  1695   0026F0                     l3892:
  1696                           
  1697                           ; BSR set to: 0
  1698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1699   0026F0  0E01               	movlw	1
  1700   0026F2  2452               	addwf	vfpfcnvrt@cp^0,w,c
  1701   0026F4  6E47               	movwf	??_vfpfcnvrt^0,c
  1702   0026F6  0E00               	movlw	0
  1703   0026F8  2053               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1704   0026FA  6E48               	movwf	(??_vfpfcnvrt+1)^0,c
  1705   0026FC  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1706   002700  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1707   002704  C047  FFDE         	movff	??_vfpfcnvrt,postinc2
  1708   002708  C048  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1711   00270C  EFA1  F013         	goto	l3900
  1712   002710                     l3894:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1716   002710  C041  F030         	movff	vfpfcnvrt@fp,efgtoa@fp
  1717   002714  C042  F031         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1718   002718  C049  F032         	movff	vfpfcnvrt@convarg,efgtoa@f
  1719   00271C  C04A  F033         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1720   002720  C04B  F034         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1721   002724  C04C  F035         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1722   002728  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1723   00272C  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1724   002730                     	if	0	;tblptru may be non-zero
  1725   002730                     	endif
  1726   002730                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1727   002730  0E00               	movlw	low (__mediumconst shr (0+16))
  1728   002732  6EF8               	movwf	tblptru,c
  1729   002734                     	endif
  1730   002734  0008               	tblrd		*
  1731   002736  CFF5 F036          	movff	tablat,efgtoa@c
  1732   00273A  EC16  F007         	call	_efgtoa	;wreg free
  1733   00273E  EFD8  F013         	goto	l1123
  1734   002742                     l3900:
  1735                           
  1736                           ; BSR set to: 0
  1737   002742  C052  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1738   002746  C053  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1739   00274A                     	if	0	;tblptru may be non-zero
  1740   00274A                     	endif
  1741   00274A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1742   00274A  0E00               	movlw	low (__mediumconst shr (0+16))
  1743   00274C  6EF8               	movwf	tblptru,c
  1744   00274E                     	endif
  1745   00274E  0008               	tblrd		*
  1746   002750  50F5               	movf	tablat,w,c
  1747   002752  6E47               	movwf	??_vfpfcnvrt^0,c
  1748   002754  6A48               	clrf	(??_vfpfcnvrt+1)^0,c
  1749                           
  1750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1751                           ; Switch size 1, requested type "simple"
  1752                           ; Number of cases is 1, Range of values is 0 to 0
  1753                           ; switch strategies available:
  1754                           ; Name         Instructions Cycles
  1755                           ; simple_byte            4     3 (average)
  1756                           ;	Chosen strategy is simple_byte
  1757   002756  5048               	movf	(??_vfpfcnvrt+1)^0,w,c
  1758   002758  0A00               	xorlw	0	; case 0
  1759   00275A  B4D8               	btfsc	status,2,c
  1760   00275C  EFB2  F013         	goto	l4538
  1761   002760  EFB9  F013         	goto	l3902
  1762   002764                     l4538:
  1763                           
  1764                           ; BSR set to: 0
  1765                           ; Switch size 1, requested type "simple"
  1766                           ; Number of cases is 1, Range of values is 102 to 102
  1767                           ; switch strategies available:
  1768                           ; Name         Instructions Cycles
  1769                           ; simple_byte            4     3 (average)
  1770                           ;	Chosen strategy is simple_byte
  1771   002764  5047               	movf	??_vfpfcnvrt^0,w,c
  1772   002766  0A66               	xorlw	102	; case 102
  1773   002768  B4D8               	btfsc	status,2,c
  1774   00276A  EF88  F013         	goto	l3894
  1775   00276E  EFB9  F013         	goto	l3902
  1776   002772                     l3902:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1779   002772  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1780   002776  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1781   00277A  2ADE               	incf	postinc2,f,c
  1782   00277C  0E00               	movlw	0
  1783   00277E  22DD               	addwfc	postdec2,f,c
  1784   002780  EFD8  F013         	goto	l1123
  1785   002784                     l3906:
  1786                           
  1787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1788   002784  C043  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1789   002788  C044  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1790   00278C  CFDE FFF6          	movff	postinc2,tblptrl
  1791   002790  CFDD FFF7          	movff	postdec2,tblptrh
  1792   002794                     	if	0	;tblptru may be non-zero
  1793   002794                     	endif
  1794   002794                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1795   002794  0E00               	movlw	low (__mediumconst shr (0+16))
  1796   002796  6EF8               	movwf	tblptru,c
  1797   002798                     	endif
  1798   002798  0008               	tblrd		*
  1799   00279A  50F5               	movf	tablat,w,c
  1800   00279C  6E03               	movwf	fputc@c^0,c
  1801   00279E  6A04               	clrf	(fputc@c+1)^0,c
  1802   0027A0  C041  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1803   0027A4  C042  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1804   0027A8  EC46  F01B         	call	_fputc	;wreg free
  1805   0027AC  EFB9  F013         	goto	l3902
  1806   0027B0                     l1123:
  1807   0027B0  0012               	return		;funcret
  1808   0027B2                     __end_of_vfpfcnvrt:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _efgtoa *****************
  1812 ;; Defined at:
  1813 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;  fp              2   47[COMRAM] PTR struct _IO_FILE
  1816 ;;		 -> sprintf@f(11), 
  1817 ;;  f               4   49[COMRAM] PTR struct _IO_FILE
  1818 ;;  c               1   53[COMRAM] unsigned char 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  u               4   40[BANK0 ] struct flui
  1821 ;;  g               4   36[BANK0 ] struct flui
  1822 ;;  l               4   29[BANK0 ] struct flui
  1823 ;;  h               4   25[BANK0 ] struct flui
  1824 ;;  ou              4   19[BANK0 ] struct flui
  1825 ;;  n               2   34[BANK0 ] int 
  1826 ;;  i               2   23[BANK0 ] int 
  1827 ;;  w               2   17[BANK0 ] int 
  1828 ;;  e               2   15[BANK0 ] int 
  1829 ;;  m               2   13[BANK0 ] int 
  1830 ;;  d               2   11[BANK0 ] int 
  1831 ;;  t               2    4[BANK0 ] int 
  1832 ;;  p               2    2[BANK0 ] int 
  1833 ;;  ne              2    0[BANK0 ] int 
  1834 ;;  sign            1   33[BANK0 ] unsigned char 
  1835 ;;  nmode           1   10[BANK0 ] unsigned char 
  1836 ;;  mode            1    9[BANK0 ] unsigned char 
  1837 ;;  pp              1    8[BANK0 ] unsigned char 
  1838 ;;  esign           1    0        unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1848 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1849 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1851 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1852 ;;Total ram usage:       53 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 8
  1855 ;; This function calls:
  1856 ;;		___fladd
  1857 ;;		___fldiv
  1858 ;;		___fleq
  1859 ;;		___flge
  1860 ;;		___flmul
  1861 ;;		___flneg
  1862 ;;		___flsub
  1863 ;;		___fltol
  1864 ;;		___fpclassifyf
  1865 ;;		_floorf
  1866 ;;		_labs
  1867 ;;		_memcpy
  1868 ;;		_pad
  1869 ;;		_strcpy
  1870 ;; This function is called by:
  1871 ;;		_vfpfcnvrt
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text4
  1876   000E2C                     __ptext4:
  1877                           	callstack 0
  1878   000E2C                     _efgtoa:
  1879                           	callstack 19
  1880   000E2C                     
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1882   000E2C  0E00               	movlw	0
  1883   000E2E  0100               	movlb	0	; () banked
  1884   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1885   000E32                     
  1886                           ; BSR set to: 0
  1887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1888   000E32  C032  F084         	movff	efgtoa@f,efgtoa@g
  1889   000E36  C033  F085         	movff	efgtoa@f+1,efgtoa@g+1
  1890   000E3A  C034  F086         	movff	efgtoa@f+2,efgtoa@g+2
  1891   000E3E  C035  F087         	movff	efgtoa@f+3,efgtoa@g+3
  1892   000E42                     
  1893                           ; BSR set to: 0
  1894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1895   000E42  BF87               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1896   000E44  EF28  F007         	goto	u3670
  1897   000E48  EF26  F007         	goto	u3671
  1898   000E4C                     u3671:
  1899   000E4C  EF3C  F007         	goto	l3606
  1900   000E50                     u3670:
  1901   000E50                     
  1902                           ; BSR set to: 0
  1903                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1904   000E50  0E01               	movlw	1
  1905   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1906   000E54                     
  1907                           ; BSR set to: 0
  1908                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1909   000E54  C084  F003         	movff	efgtoa@g,___flneg@f1
  1910   000E58  C085  F004         	movff	efgtoa@g+1,___flneg@f1+1
  1911   000E5C  C086  F005         	movff	efgtoa@g+2,___flneg@f1+2
  1912   000E60  C087  F006         	movff	efgtoa@g+3,___flneg@f1+3
  1913   000E64  EC88  F01E         	call	___flneg	;wreg free
  1914   000E68  C003  F084         	movff	?___flneg,efgtoa@g
  1915   000E6C  C004  F085         	movff	?___flneg+1,efgtoa@g+1
  1916   000E70  C005  F086         	movff	?___flneg+2,efgtoa@g+2
  1917   000E74  C006  F087         	movff	?___flneg+3,efgtoa@g+3
  1918   000E78                     l3606:
  1919                           
  1920                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1921   000E78  0E00               	movlw	0
  1922   000E7A  0100               	movlb	0	; () banked
  1923   000E7C  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  1924   000E7E  0E00               	movlw	0
  1925   000E80  6F82               	movwf	efgtoa@n& (0+255),b
  1926   000E82                     
  1927                           ; BSR set to: 0
  1928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1929   000E82  C0ED  F071         	movff	_width,efgtoa@w
  1930   000E86  C0EE  F072         	movff	_width+1,efgtoa@w+1
  1931   000E8A                     
  1932                           ; BSR set to: 0
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1934   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1935   000E8C  B4D8               	btfsc	status,2,c
  1936   000E8E  EF4B  F007         	goto	u3681
  1937   000E92  EF4D  F007         	goto	u3680
  1938   000E96                     u3681:
  1939   000E96  EF61  F007         	goto	l3620
  1940   000E9A                     u3680:
  1941   000E9A                     
  1942                           ; BSR set to: 0
  1943                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1944   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1945   000E9C  A4D8               	btfss	status,2,c
  1946   000E9E  EF53  F007         	goto	u3691
  1947   000EA2  EF55  F007         	goto	u3690
  1948   000EA6                     u3691:
  1949   000EA6  EF5B  F007         	goto	l3616
  1950   000EAA                     u3690:
  1951   000EAA                     
  1952                           ; BSR set to: 0
  1953   000EAA  0E00               	movlw	0
  1954   000EAC  6F67               	movwf	(_efgtoa$1769+1)& (0+255),b
  1955   000EAE  0E2B               	movlw	43
  1956   000EB0  6F66               	movwf	_efgtoa$1769& (0+255),b
  1957   000EB2  EF5F  F007         	goto	l3618
  1958   000EB6                     l3616:
  1959                           
  1960                           ; BSR set to: 0
  1961   000EB6  0E00               	movlw	0
  1962   000EB8  6F67               	movwf	(_efgtoa$1769+1)& (0+255),b
  1963   000EBA  0E2D               	movlw	45
  1964   000EBC  6F66               	movwf	_efgtoa$1769& (0+255),b
  1965   000EBE                     l3618:
  1966                           
  1967                           ; BSR set to: 0
  1968   000EBE  C066  F081         	movff	_efgtoa$1769,efgtoa@sign
  1969   000EC2                     l3620:
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1973   000EC2  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  1974   000EC6  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1975   000ECA  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1976   000ECE  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1977   000ED2  ECC7  F01A         	call	___fpclassifyf	;wreg free
  1978   000ED6  0403               	decf	?___fpclassifyf^0,w,c
  1979   000ED8  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  1980   000EDA  A4D8               	btfss	status,2,c
  1981   000EDC  EF72  F007         	goto	u3701
  1982   000EE0  EF74  F007         	goto	u3700
  1983   000EE4                     u3701:
  1984   000EE4  EFA7  F007         	goto	l3638
  1985   000EE8                     u3700:
  1986   000EE8                     
  1987                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1988   000EE8  0100               	movlb	0	; () banked
  1989   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1990   000EEC  B4D8               	btfsc	status,2,c
  1991   000EEE  EF7B  F007         	goto	u3711
  1992   000EF2  EF7D  F007         	goto	u3710
  1993   000EF6                     u3711:
  1994   000EF6  EF86  F007         	goto	l3630
  1995   000EFA                     u3710:
  1996   000EFA                     
  1997                           ; BSR set to: 0
  1998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1999   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  2000   000EFE                     
  2001                           ; BSR set to: 0
  2002                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  2003   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  2004   000F00  A0D8               	btfss	status,0,c
  2005   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2006   000F04                     
  2007                           ; BSR set to: 0
  2008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  2009   000F04  0E00               	movlw	0
  2010   000F06  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2011   000F08  0E01               	movlw	1
  2012   000F0A  6F82               	movwf	efgtoa@n& (0+255),b
  2013   000F0C                     l3630:
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  2017   000F0C  0E50               	movlw	low _dbuf
  2018   000F0E  2582               	addwf	efgtoa@n& (0+255),w,b
  2019   000F10  6E03               	movwf	strcpy@dest^0,c
  2020   000F12  0E01               	movlw	high _dbuf
  2021   000F14  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2022   000F16  6E04               	movwf	(strcpy@dest+1)^0,c
  2023   000F18  0E22               	movlw	low STR_2
  2024   000F1A  6E05               	movwf	strcpy@src^0,c
  2025   000F1C  0E0E               	movlw	high STR_2
  2026   000F1E  6E06               	movwf	(strcpy@src+1)^0,c
  2027   000F20  EC03  F01E         	call	_strcpy	;wreg free
  2028   000F24                     l3632:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2031   000F24  0100               	movlb	0	; () banked
  2032   000F26  0EFD               	movlw	253
  2033   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  2034   000F2A  0EFF               	movlw	255
  2035   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2036   000F2E                     
  2037                           ; BSR set to: 0
  2038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2039   000F2E  C030  F013         	movff	efgtoa@fp,pad@fp
  2040   000F32  C031  F014         	movff	efgtoa@fp+1,pad@fp+1
  2041   000F36  0E50               	movlw	low _dbuf
  2042   000F38  6E15               	movwf	pad@buf^0,c
  2043   000F3A  0E01               	movlw	high _dbuf
  2044   000F3C  6E16               	movwf	(pad@buf+1)^0,c
  2045   000F3E  C071  F017         	movff	efgtoa@w,pad@p
  2046   000F42  C072  F018         	movff	efgtoa@w+1,pad@p+1
  2047   000F46  EC00  F01C         	call	_pad	;wreg free
  2048   000F4A  EF13  F00C         	goto	l1075
  2049   000F4E                     l3638:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2052   000F4E  C084  F003         	movff	efgtoa@g,___fpclassifyf@x
  2053   000F52  C085  F004         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2054   000F56  C086  F005         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2055   000F5A  C087  F006         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2056   000F5E  ECC7  F01A         	call	___fpclassifyf	;wreg free
  2057   000F62  5003               	movf	?___fpclassifyf^0,w,c
  2058   000F64  1004               	iorwf	(?___fpclassifyf+1)^0,w,c
  2059   000F66  A4D8               	btfss	status,2,c
  2060   000F68  EFB8  F007         	goto	u3721
  2061   000F6C  EFBA  F007         	goto	u3720
  2062   000F70                     u3721:
  2063   000F70  EFDA  F007         	goto	l3656
  2064   000F74                     u3720:
  2065   000F74                     
  2066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  2067   000F74  0100               	movlb	0	; () banked
  2068   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  2069   000F78  B4D8               	btfsc	status,2,c
  2070   000F7A  EFC1  F007         	goto	u3731
  2071   000F7E  EFC3  F007         	goto	u3730
  2072   000F82                     u3731:
  2073   000F82  EFCC  F007         	goto	l3648
  2074   000F86                     u3730:
  2075   000F86                     
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  2078   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  2079   000F8A                     
  2080                           ; BSR set to: 0
  2081                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  2082   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  2083   000F8C  A0D8               	btfss	status,0,c
  2084   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2085   000F90                     
  2086                           ; BSR set to: 0
  2087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  2088   000F90  0E00               	movlw	0
  2089   000F92  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  2090   000F94  0E01               	movlw	1
  2091   000F96  6F82               	movwf	efgtoa@n& (0+255),b
  2092   000F98                     l3648:
  2093                           
  2094                           ; BSR set to: 0
  2095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  2096   000F98  0E50               	movlw	low _dbuf
  2097   000F9A  2582               	addwf	efgtoa@n& (0+255),w,b
  2098   000F9C  6E03               	movwf	strcpy@dest^0,c
  2099   000F9E  0E01               	movlw	high _dbuf
  2100   000FA0  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2101   000FA2  6E04               	movwf	(strcpy@dest+1)^0,c
  2102   000FA4  0E26               	movlw	low STR_5
  2103   000FA6  6E05               	movwf	strcpy@src^0,c
  2104   000FA8  0E0E               	movlw	high STR_5
  2105   000FAA  6E06               	movwf	(strcpy@src+1)^0,c
  2106   000FAC  EC03  F01E         	call	_strcpy	;wreg free
  2107   000FB0  EF92  F007         	goto	l3632
  2108   000FB4                     l3656:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2111   000FB4  0E00               	movlw	0
  2112   000FB6  0100               	movlb	0	; () banked
  2113   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2114   000FBA  0E00               	movlw	0
  2115   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2116   000FBE  0E80               	movlw	128
  2117   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2118   000FC2  0E3F               	movlw	63
  2119   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2120                           
  2121                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2122   000FC6  0E00               	movlw	0
  2123   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2124   000FCA  0E00               	movlw	0
  2125   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2126   000FCE                     
  2127                           ; BSR set to: 0
  2128                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2129   000FCE  C084  F003         	movff	efgtoa@g,___fleq@ff1
  2130   000FD2  C085  F004         	movff	efgtoa@g+1,___fleq@ff1+1
  2131   000FD6  C086  F005         	movff	efgtoa@g+2,___fleq@ff1+2
  2132   000FDA  C087  F006         	movff	efgtoa@g+3,___fleq@ff1+3
  2133   000FDE  0E00               	movlw	0
  2134   000FE0  6E07               	movwf	___fleq@ff2^0,c
  2135   000FE2  0E00               	movlw	0
  2136   000FE4  6E08               	movwf	(___fleq@ff2+1)^0,c
  2137   000FE6  0E00               	movlw	0
  2138   000FE8  6E09               	movwf	(___fleq@ff2+2)^0,c
  2139   000FEA  0E00               	movlw	0
  2140   000FEC  6E0A               	movwf	(___fleq@ff2+3)^0,c
  2141   000FEE  ECAB  F01B         	call	___fleq	;wreg free
  2142   000FF2  B0D8               	btfsc	status,0,c
  2143   000FF4  EFFE  F007         	goto	u3741
  2144   000FF8  EF00  F008         	goto	u3740
  2145   000FFC                     u3741:
  2146   000FFC  EFDF  F008         	goto	l1078
  2147   001000                     u3740:
  2148   001000  EF0D  F008         	goto	l3664
  2149   001004                     l1080:
  2150                           
  2151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2152   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2153   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2154   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2155   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2156   001014                     
  2157                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2158   001014  0100               	movlb	0	; () banked
  2159   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2160   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2161   00101A                     l3664:
  2162                           
  2163                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2164   00101A  C088  F003         	movff	efgtoa@u,___flmul@b
  2165   00101E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2166   001022  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2167   001026  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2168   00102A  0E00               	movlw	0
  2169   00102C  6E07               	movwf	___flmul@a^0,c
  2170   00102E  0E00               	movlw	0
  2171   001030  6E08               	movwf	(___flmul@a+1)^0,c
  2172   001032  0E20               	movlw	32
  2173   001034  6E09               	movwf	(___flmul@a+2)^0,c
  2174   001036  0E41               	movlw	65
  2175   001038  6E0A               	movwf	(___flmul@a+3)^0,c
  2176   00103A  EC74  F00E         	call	___flmul	;wreg free
  2177   00103E  C003  F073         	movff	?___flmul,efgtoa@ou
  2178   001042  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  2179   001046  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  2180   00104A  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  2181   00104E  0100               	movlb	0	; () banked
  2182   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2183   001052  5D84               	subwf	efgtoa@g& (0+255),w,b
  2184   001054  6E03               	movwf	labs@a^0,c
  2185   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2186   001058  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2187   00105A  6E04               	movwf	(labs@a+1)^0,c
  2188   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2189   00105E  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2190   001060  6E05               	movwf	(labs@a+2)^0,c
  2191   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2192   001064  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2193   001066  6E06               	movwf	(labs@a+3)^0,c
  2194   001068  EC3D  F01C         	call	_labs	;wreg free
  2195   00106C  BE06               	btfsc	(?_labs+3)^0,7,c
  2196   00106E  EF44  F008         	goto	u3751
  2197   001072  5006               	movf	(?_labs+3)^0,w,c
  2198   001074  1005               	iorwf	(?_labs+2)^0,w,c
  2199   001076  1004               	iorwf	(?_labs+1)^0,w,c
  2200   001078  E109               	bnz	u3750
  2201   00107A  0E02               	movlw	2
  2202   00107C  5C03               	subwf	?_labs^0,w,c
  2203   00107E  A0D8               	btfss	status,0,c
  2204   001080  EF44  F008         	goto	u3751
  2205   001084  EF46  F008         	goto	u3750
  2206   001088                     u3751:
  2207   001088  EF02  F008         	goto	l1080
  2208   00108C                     u3750:
  2209   00108C  C073  F01C         	movff	efgtoa@ou,___flge@ff1
  2210   001090  C074  F01D         	movff	efgtoa@ou+1,___flge@ff1+1
  2211   001094  C075  F01E         	movff	efgtoa@ou+2,___flge@ff1+2
  2212   001098  C076  F01F         	movff	efgtoa@ou+3,___flge@ff1+3
  2213   00109C  C084  F020         	movff	efgtoa@g,___flge@ff2
  2214   0010A0  C085  F021         	movff	efgtoa@g+1,___flge@ff2+1
  2215   0010A4  C086  F022         	movff	efgtoa@g+2,___flge@ff2+2
  2216   0010A8  C087  F023         	movff	efgtoa@g+3,___flge@ff2+3
  2217   0010AC  EC45  F01A         	call	___flge	;wreg free
  2218   0010B0  A0D8               	btfss	status,0,c
  2219   0010B2  EF5D  F008         	goto	u3761
  2220   0010B6  EF5F  F008         	goto	u3760
  2221   0010BA                     u3761:
  2222   0010BA  EF02  F008         	goto	l1080
  2223   0010BE                     u3760:
  2224   0010BE                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2226   0010BE  0100               	movlb	0	; () banked
  2227   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2228   0010C2  5D84               	subwf	efgtoa@g& (0+255),w,b
  2229   0010C4  6E03               	movwf	labs@a^0,c
  2230   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2231   0010C8  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2232   0010CA  6E04               	movwf	(labs@a+1)^0,c
  2233   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2234   0010CE  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2235   0010D0  6E05               	movwf	(labs@a+2)^0,c
  2236   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2237   0010D4  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2238   0010D6  6E06               	movwf	(labs@a+3)^0,c
  2239   0010D8  EC3D  F01C         	call	_labs	;wreg free
  2240   0010DC  BE06               	btfsc	(?_labs+3)^0,7,c
  2241   0010DE  EF7E  F008         	goto	u3770
  2242   0010E2  5006               	movf	(?_labs+3)^0,w,c
  2243   0010E4  1005               	iorwf	(?_labs+2)^0,w,c
  2244   0010E6  1004               	iorwf	(?_labs+1)^0,w,c
  2245   0010E8  E107               	bnz	u3771
  2246   0010EA  0E02               	movlw	2
  2247   0010EC  5C03               	subwf	?_labs^0,w,c
  2248   0010EE  B0D8               	btfsc	status,0,c
  2249   0010F0  EF7C  F008         	goto	u3771
  2250   0010F4  EF7E  F008         	goto	u3770
  2251   0010F8                     u3771:
  2252   0010F8  EFC6  F008         	goto	l3682
  2253   0010FC                     u3770:
  2254   0010FC                     l3672:
  2255                           
  2256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2257   0010FC  C088  F084         	movff	efgtoa@u,efgtoa@g
  2258   001100  C089  F085         	movff	efgtoa@u+1,efgtoa@g+1
  2259   001104  C08A  F086         	movff	efgtoa@u+2,efgtoa@g+2
  2260   001108  C08B  F087         	movff	efgtoa@u+3,efgtoa@g+3
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2263   00110C  EFDF  F008         	goto	l1078
  2264   001110                     l3674:
  2265                           
  2266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2267   001110  C088  F003         	movff	efgtoa@u,___fldiv@b
  2268   001114  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2269   001118  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2270   00111C  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2271   001120  0E00               	movlw	0
  2272   001122  6E07               	movwf	___fldiv@a^0,c
  2273   001124  0E00               	movlw	0
  2274   001126  6E08               	movwf	(___fldiv@a+1)^0,c
  2275   001128  0E20               	movlw	32
  2276   00112A  6E09               	movwf	(___fldiv@a+2)^0,c
  2277   00112C  0E41               	movlw	65
  2278   00112E  6E0A               	movwf	(___fldiv@a+3)^0,c
  2279   001130  EC89  F010         	call	___fldiv	;wreg free
  2280   001134  C003  F088         	movff	?___fldiv,efgtoa@u
  2281   001138  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2282   00113C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2283   001140  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2284   001144                     
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2286   001144  0100               	movlb	0	; () banked
  2287   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2288   001148  A0D8               	btfss	status,0,c
  2289   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2290   00114C                     
  2291                           ; BSR set to: 0
  2292                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2293   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2294   00114E  5D84               	subwf	efgtoa@g& (0+255),w,b
  2295   001150  6E03               	movwf	labs@a^0,c
  2296   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2297   001154  5985               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2298   001156  6E04               	movwf	(labs@a+1)^0,c
  2299   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2300   00115A  5986               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2301   00115C  6E05               	movwf	(labs@a+2)^0,c
  2302   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2303   001160  5987               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2304   001162  6E06               	movwf	(labs@a+3)^0,c
  2305   001164  EC3D  F01C         	call	_labs	;wreg free
  2306   001168  BE06               	btfsc	(?_labs+3)^0,7,c
  2307   00116A  EFC4  F008         	goto	u3780
  2308   00116E  5006               	movf	(?_labs+3)^0,w,c
  2309   001170  1005               	iorwf	(?_labs+2)^0,w,c
  2310   001172  1004               	iorwf	(?_labs+1)^0,w,c
  2311   001174  E107               	bnz	u3781
  2312   001176  0E02               	movlw	2
  2313   001178  5C03               	subwf	?_labs^0,w,c
  2314   00117A  B0D8               	btfsc	status,0,c
  2315   00117C  EFC2  F008         	goto	u3781
  2316   001180  EFC4  F008         	goto	u3780
  2317   001184                     u3781:
  2318   001184  EFC6  F008         	goto	l3682
  2319   001188                     u3780:
  2320   001188  EF7E  F008         	goto	l3672
  2321   00118C                     l3682:
  2322                           
  2323                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2324   00118C  C084  F01C         	movff	efgtoa@g,___flge@ff1
  2325   001190  C085  F01D         	movff	efgtoa@g+1,___flge@ff1+1
  2326   001194  C086  F01E         	movff	efgtoa@g+2,___flge@ff1+2
  2327   001198  C087  F01F         	movff	efgtoa@g+3,___flge@ff1+3
  2328   00119C  C088  F020         	movff	efgtoa@u,___flge@ff2
  2329   0011A0  C089  F021         	movff	efgtoa@u+1,___flge@ff2+1
  2330   0011A4  C08A  F022         	movff	efgtoa@u+2,___flge@ff2+2
  2331   0011A8  C08B  F023         	movff	efgtoa@u+3,___flge@ff2+3
  2332   0011AC  EC45  F01A         	call	___flge	;wreg free
  2333   0011B0  A0D8               	btfss	status,0,c
  2334   0011B2  EFDD  F008         	goto	u3791
  2335   0011B6  EFDF  F008         	goto	u3790
  2336   0011BA                     u3791:
  2337   0011BA  EF88  F008         	goto	l3674
  2338   0011BE                     u3790:
  2339   0011BE                     l1078:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2342   0011BE  C036  F069         	movff	efgtoa@c,efgtoa@mode
  2343                           
  2344                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2345   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2346   0011C6                     
  2347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2348   0011C6  BE57               	btfsc	(_prec+1)^0,7,c
  2349   0011C8  EFE8  F008         	goto	u3801
  2350   0011CC  EFEA  F008         	goto	u3800
  2351   0011D0                     u3801:
  2352   0011D0  EFF0  F008         	goto	l3688
  2353   0011D4                     u3800:
  2354   0011D4  C056  F062         	movff	_prec,efgtoa@p
  2355   0011D8  C057  F063         	movff	_prec+1,efgtoa@p+1
  2356   0011DC  EFF5  F008         	goto	l3690
  2357   0011E0                     l3688:
  2358   0011E0  0E00               	movlw	0
  2359   0011E2  0100               	movlb	0	; () banked
  2360   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2361   0011E6  0E06               	movlw	6
  2362   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2363   0011EA                     l3690:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2366   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2367   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2368   0011F2                     
  2369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2370   0011F2  0100               	movlb	0	; () banked
  2371   0011F4  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2372   0011F6  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2373   0011F8                     
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2376   0011F8  0E66               	movlw	102
  2377   0011FA  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2378   0011FC  A4D8               	btfss	status,2,c
  2379   0011FE  EF03  F009         	goto	u3811
  2380   001202  EF05  F009         	goto	u3810
  2381   001206                     u3811:
  2382   001206  EF25  F009         	goto	l3704
  2383   00120A                     u3810:
  2384   00120A                     
  2385                           ; BSR set to: 0
  2386                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2387   00120A  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2388   00120C  EF0C  F009         	goto	u3820
  2389   001210  EF0A  F009         	goto	u3821
  2390   001214                     u3821:
  2391   001214  EF18  F009         	goto	l3700
  2392   001218                     u3820:
  2393   001218                     
  2394                           ; BSR set to: 0
  2395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2396   001218  0E00               	movlw	0
  2397   00121A  6F88               	movwf	efgtoa@u& (0+255),b
  2398   00121C  0E00               	movlw	0
  2399   00121E  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2400   001220  0E80               	movlw	128
  2401   001222  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2402   001224  0E3F               	movlw	63
  2403   001226  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2406   001228  0E00               	movlw	0
  2407   00122A  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2408   00122C  0E00               	movlw	0
  2409   00122E  6F6F               	movwf	efgtoa@e& (0+255),b
  2410   001230                     l3700:
  2411                           
  2412                           ; BSR set to: 0
  2413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2414   001230  0E67               	movlw	103
  2415   001232  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2416   001234  B4D8               	btfsc	status,2,c
  2417   001236  EF1F  F009         	goto	u3831
  2418   00123A  EF21  F009         	goto	u3830
  2419   00123E                     u3831:
  2420   00123E  EF25  F009         	goto	l3704
  2421   001242                     u3830:
  2422   001242                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2425   001242  516F               	movf	efgtoa@e& (0+255),w,b
  2426   001244  276D               	addwf	efgtoa@m& (0+255),f,b
  2427   001246  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2428   001248  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2429   00124A                     l3704:
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2433   00124A  0E00               	movlw	0
  2434   00124C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2435   00124E  0E00               	movlw	0
  2436   001250  6F77               	movwf	efgtoa@i& (0+255),b
  2437   001252                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2440   001252  C084  F079         	movff	efgtoa@g,efgtoa@h
  2441   001256  C085  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2442   00125A  C086  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2443   00125E  C087  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2444   001262                     
  2445                           ; BSR set to: 0
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2447   001262  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2448   001266  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2449   00126A  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2450   00126E  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2453   001272  EFB6  F009         	goto	l3718
  2454   001276                     l3710:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2458   001276  C079  F003         	movff	efgtoa@h,___fldiv@b
  2459   00127A  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  2460   00127E  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  2461   001282  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  2462   001286  C088  F007         	movff	efgtoa@u,___fldiv@a
  2463   00128A  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  2464   00128E  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  2465   001292  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  2466   001296  EC89  F010         	call	___fldiv	;wreg free
  2467   00129A  C003  F01C         	movff	?___fldiv,floorf@x
  2468   00129E  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  2469   0012A2  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  2470   0012A6  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  2471   0012AA  EC17  F015         	call	_floorf	;wreg free
  2472   0012AE  C01C  F07D         	movff	?_floorf,efgtoa@l
  2473   0012B2  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  2474   0012B6  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  2475   0012BA  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2478   0012BE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2479   0012C2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2480   0012C6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2481   0012CA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2482   0012CE  ECC2  F019         	call	___fltol	;wreg free
  2483   0012D2  C003  F06B         	movff	?___fltol,efgtoa@d
  2484   0012D6  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  2485   0012DA                     
  2486                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2487   0012DA  C079  F01C         	movff	efgtoa@h,___flsub@b
  2488   0012DE  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  2489   0012E2  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  2490   0012E6  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  2491   0012EA  C07D  F007         	movff	efgtoa@l,___flmul@a
  2492   0012EE  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  2493   0012F2  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  2494   0012F6  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  2495   0012FA  C088  F003         	movff	efgtoa@u,___flmul@b
  2496   0012FE  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2497   001302  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2498   001306  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2499   00130A  EC74  F00E         	call	___flmul	;wreg free
  2500   00130E  C003  F020         	movff	?___flmul,___flsub@a
  2501   001312  C004  F021         	movff	?___flmul+1,___flsub@a+1
  2502   001316  C005  F022         	movff	?___flmul+2,___flsub@a+2
  2503   00131A  C006  F023         	movff	?___flmul+3,___flsub@a+3
  2504   00131E  ECE0  F01D         	call	___flsub	;wreg free
  2505   001322  C01C  F079         	movff	?___flsub,efgtoa@h
  2506   001326  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  2507   00132A  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  2508   00132E  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  2509   001332                     
  2510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2511   001332  C088  F003         	movff	efgtoa@u,___fldiv@b
  2512   001336  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2513   00133A  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2514   00133E  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2515   001342  0E00               	movlw	0
  2516   001344  6E07               	movwf	___fldiv@a^0,c
  2517   001346  0E00               	movlw	0
  2518   001348  6E08               	movwf	(___fldiv@a+1)^0,c
  2519   00134A  0E20               	movlw	32
  2520   00134C  6E09               	movwf	(___fldiv@a+2)^0,c
  2521   00134E  0E41               	movlw	65
  2522   001350  6E0A               	movwf	(___fldiv@a+3)^0,c
  2523   001352  EC89  F010         	call	___fldiv	;wreg free
  2524   001356  C003  F088         	movff	?___fldiv,efgtoa@u
  2525   00135A  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2526   00135E  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2527   001362  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2528   001366                     
  2529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2530   001366  0100               	movlb	0	; () banked
  2531   001368  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2532   00136A  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2533   00136C                     l3718:
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2537   00136C  516D               	movf	efgtoa@m& (0+255),w,b
  2538   00136E  5D77               	subwf	efgtoa@i& (0+255),w,b
  2539   001370  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2540   001372  0A80               	xorlw	128
  2541   001374  6E37               	movwf	??_efgtoa^0,c
  2542   001376  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2543   001378  0A80               	xorlw	128
  2544   00137A  5837               	subwfb	??_efgtoa^0,w,c
  2545   00137C  A0D8               	btfss	status,0,c
  2546   00137E  EFC3  F009         	goto	u3841
  2547   001382  EFC5  F009         	goto	u3840
  2548   001386                     u3841:
  2549   001386  EF3B  F009         	goto	l3710
  2550   00138A                     u3840:
  2551   00138A                     
  2552                           ; BSR set to: 0
  2553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2554   00138A  C088  F003         	movff	efgtoa@u,___flmul@b
  2555   00138E  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2556   001392  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2557   001396  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2558   00139A  0E00               	movlw	0
  2559   00139C  6E07               	movwf	___flmul@a^0,c
  2560   00139E  0E00               	movlw	0
  2561   0013A0  6E08               	movwf	(___flmul@a+1)^0,c
  2562   0013A2  0EA0               	movlw	160
  2563   0013A4  6E09               	movwf	(___flmul@a+2)^0,c
  2564   0013A6  0E40               	movlw	64
  2565   0013A8  6E0A               	movwf	(___flmul@a+3)^0,c
  2566   0013AA  EC74  F00E         	call	___flmul	;wreg free
  2567   0013AE  C003  F07D         	movff	?___flmul,efgtoa@l
  2568   0013B2  C004  F07E         	movff	?___flmul+1,efgtoa@l+1
  2569   0013B6  C005  F07F         	movff	?___flmul+2,efgtoa@l+2
  2570   0013BA  C006  F080         	movff	?___flmul+3,efgtoa@l+3
  2571   0013BE                     
  2572                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2573   0013BE  C079  F01C         	movff	efgtoa@h,___flge@ff1
  2574   0013C2  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  2575   0013C6  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  2576   0013CA  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  2577   0013CE  C07D  F020         	movff	efgtoa@l,___flge@ff2
  2578   0013D2  C07E  F021         	movff	efgtoa@l+1,___flge@ff2+1
  2579   0013D6  C07F  F022         	movff	efgtoa@l+2,___flge@ff2+2
  2580   0013DA  C080  F023         	movff	efgtoa@l+3,___flge@ff2+3
  2581   0013DE  EC45  F01A         	call	___flge	;wreg free
  2582   0013E2  B0D8               	btfsc	status,0,c
  2583   0013E4  EFF6  F009         	goto	u3851
  2584   0013E8  EFF8  F009         	goto	u3850
  2585   0013EC                     u3851:
  2586   0013EC  EF03  F00A         	goto	l3726
  2587   0013F0                     u3850:
  2588   0013F0                     
  2589                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2590   0013F0  0E00               	movlw	0
  2591   0013F2  0100               	movlb	0	; () banked
  2592   0013F4  6F7D               	movwf	efgtoa@l& (0+255),b
  2593   0013F6  0E00               	movlw	0
  2594   0013F8  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2595   0013FA  0E00               	movlw	0
  2596   0013FC  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2597   0013FE  0E00               	movlw	0
  2598   001400  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2601   001402  EF2C  F00A         	goto	l3732
  2602   001406                     l3726:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2605   001406  C079  F003         	movff	efgtoa@h,___fleq@ff1
  2606   00140A  C07A  F004         	movff	efgtoa@h+1,___fleq@ff1+1
  2607   00140E  C07B  F005         	movff	efgtoa@h+2,___fleq@ff1+2
  2608   001412  C07C  F006         	movff	efgtoa@h+3,___fleq@ff1+3
  2609   001416  C07D  F007         	movff	efgtoa@l,___fleq@ff2
  2610   00141A  C07E  F008         	movff	efgtoa@l+1,___fleq@ff2+1
  2611   00141E  C07F  F009         	movff	efgtoa@l+2,___fleq@ff2+2
  2612   001422  C080  F00A         	movff	efgtoa@l+3,___fleq@ff2+3
  2613   001426  ECAB  F01B         	call	___fleq	;wreg free
  2614   00142A  A0D8               	btfss	status,0,c
  2615   00142C  EF1A  F00A         	goto	u3861
  2616   001430  EF1C  F00A         	goto	u3860
  2617   001434                     u3861:
  2618   001434  EF2C  F00A         	goto	l3732
  2619   001438                     u3860:
  2620   001438  0100               	movlb	0	; () banked
  2621   00143A  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2622   00143C  EF22  F00A         	goto	u3871
  2623   001440  EF24  F00A         	goto	u3870
  2624   001444                     u3871:
  2625   001444  EF2C  F00A         	goto	l3732
  2626   001448                     u3870:
  2627   001448                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2630   001448  0E00               	movlw	0
  2631   00144A  6F7D               	movwf	efgtoa@l& (0+255),b
  2632   00144C  0E00               	movlw	0
  2633   00144E  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2634   001450  0E00               	movlw	0
  2635   001452  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2636   001454  0E00               	movlw	0
  2637   001456  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2638   001458                     l3732:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2641   001458  C084  F003         	movff	efgtoa@g,___fladd@b
  2642   00145C  C085  F004         	movff	efgtoa@g+1,___fladd@b+1
  2643   001460  C086  F005         	movff	efgtoa@g+2,___fladd@b+2
  2644   001464  C087  F006         	movff	efgtoa@g+3,___fladd@b+3
  2645   001468  C07D  F007         	movff	efgtoa@l,___fladd@a
  2646   00146C  C07E  F008         	movff	efgtoa@l+1,___fladd@a+1
  2647   001470  C07F  F009         	movff	efgtoa@l+2,___fladd@a+2
  2648   001474  C080  F00A         	movff	efgtoa@l+3,___fladd@a+3
  2649   001478  EC14  F00C         	call	___fladd	;wreg free
  2650   00147C  C003  F079         	movff	?___fladd,efgtoa@h
  2651   001480  C004  F07A         	movff	?___fladd+1,efgtoa@h+1
  2652   001484  C005  F07B         	movff	?___fladd+2,efgtoa@h+2
  2653   001488  C006  F07C         	movff	?___fladd+3,efgtoa@h+3
  2654   00148C                     
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2656   00148C  C079  F01C         	movff	efgtoa@h,___flge@ff1
  2657   001490  C07A  F01D         	movff	efgtoa@h+1,___flge@ff1+1
  2658   001494  C07B  F01E         	movff	efgtoa@h+2,___flge@ff1+2
  2659   001498  C07C  F01F         	movff	efgtoa@h+3,___flge@ff1+3
  2660   00149C  0E00               	movlw	0
  2661   00149E  6E07               	movwf	___flmul@a^0,c
  2662   0014A0  0E00               	movlw	0
  2663   0014A2  6E08               	movwf	(___flmul@a+1)^0,c
  2664   0014A4  0E20               	movlw	32
  2665   0014A6  6E09               	movwf	(___flmul@a+2)^0,c
  2666   0014A8  0E41               	movlw	65
  2667   0014AA  6E0A               	movwf	(___flmul@a+3)^0,c
  2668   0014AC  C073  F003         	movff	efgtoa@ou,___flmul@b
  2669   0014B0  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  2670   0014B4  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  2671   0014B8  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  2672   0014BC  EC74  F00E         	call	___flmul	;wreg free
  2673   0014C0  C003  F020         	movff	?___flmul,___flge@ff2
  2674   0014C4  C004  F021         	movff	?___flmul+1,___flge@ff2+1
  2675   0014C8  C005  F022         	movff	?___flmul+2,___flge@ff2+2
  2676   0014CC  C006  F023         	movff	?___flmul+3,___flge@ff2+3
  2677   0014D0  EC45  F01A         	call	___flge	;wreg free
  2678   0014D4  A0D8               	btfss	status,0,c
  2679   0014D6  EF6F  F00A         	goto	u3881
  2680   0014DA  EF71  F00A         	goto	u3880
  2681   0014DE                     u3881:
  2682   0014DE  EF9A  F00A         	goto	l3744
  2683   0014E2                     u3880:
  2684   0014E2                     
  2685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2686   0014E2  0100               	movlb	0	; () banked
  2687   0014E4  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2688   0014E6  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2689   0014E8                     
  2690                           ; BSR set to: 0
  2691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2692   0014E8  C073  F003         	movff	efgtoa@ou,___flmul@b
  2693   0014EC  C074  F004         	movff	efgtoa@ou+1,___flmul@b+1
  2694   0014F0  C075  F005         	movff	efgtoa@ou+2,___flmul@b+2
  2695   0014F4  C076  F006         	movff	efgtoa@ou+3,___flmul@b+3
  2696   0014F8  0E00               	movlw	0
  2697   0014FA  6E07               	movwf	___flmul@a^0,c
  2698   0014FC  0E00               	movlw	0
  2699   0014FE  6E08               	movwf	(___flmul@a+1)^0,c
  2700   001500  0E20               	movlw	32
  2701   001502  6E09               	movwf	(___flmul@a+2)^0,c
  2702   001504  0E41               	movlw	65
  2703   001506  6E0A               	movwf	(___flmul@a+3)^0,c
  2704   001508  EC74  F00E         	call	___flmul	;wreg free
  2705   00150C  C003  F073         	movff	?___flmul,efgtoa@ou
  2706   001510  C004  F074         	movff	?___flmul+1,efgtoa@ou+1
  2707   001514  C005  F075         	movff	?___flmul+2,efgtoa@ou+2
  2708   001518  C006  F076         	movff	?___flmul+3,efgtoa@ou+3
  2709   00151C                     
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2711   00151C  0E66               	movlw	102
  2712   00151E  0100               	movlb	0	; () banked
  2713   001520  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2714   001522  A4D8               	btfss	status,2,c
  2715   001524  EF96  F00A         	goto	u3891
  2716   001528  EF98  F00A         	goto	u3890
  2717   00152C                     u3891:
  2718   00152C  EF9A  F00A         	goto	l3744
  2719   001530                     u3890:
  2720   001530                     
  2721                           ; BSR set to: 0
  2722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2723   001530  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2724   001532  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2725   001534                     l3744:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2728   001534  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2729   001538  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2730   00153C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2731   001540  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2732   001544                     
  2733                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2734   001544  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2735   001548  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2736   00154C                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2738   00154C  0E00               	movlw	0
  2739   00154E  0100               	movlb	0	; () banked
  2740   001550  6F68               	movwf	efgtoa@pp& (0+255),b
  2741   001552                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2744   001552  0E00               	movlw	0
  2745   001554  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2746   001556  0E00               	movlw	0
  2747   001558  6F64               	movwf	efgtoa@t& (0+255),b
  2748   00155A                     
  2749                           ; BSR set to: 0
  2750                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2751   00155A  0E00               	movlw	0
  2752   00155C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2753   00155E  0E00               	movlw	0
  2754   001560  6F77               	movwf	efgtoa@i& (0+255),b
  2755                           
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2757   001562  EF98  F00B         	goto	l3794
  2758   001566                     l3754:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2762   001566  C079  F003         	movff	efgtoa@h,___fldiv@b
  2763   00156A  C07A  F004         	movff	efgtoa@h+1,___fldiv@b+1
  2764   00156E  C07B  F005         	movff	efgtoa@h+2,___fldiv@b+2
  2765   001572  C07C  F006         	movff	efgtoa@h+3,___fldiv@b+3
  2766   001576  C088  F007         	movff	efgtoa@u,___fldiv@a
  2767   00157A  C089  F008         	movff	efgtoa@u+1,___fldiv@a+1
  2768   00157E  C08A  F009         	movff	efgtoa@u+2,___fldiv@a+2
  2769   001582  C08B  F00A         	movff	efgtoa@u+3,___fldiv@a+3
  2770   001586  EC89  F010         	call	___fldiv	;wreg free
  2771   00158A  C003  F01C         	movff	?___fldiv,floorf@x
  2772   00158E  C004  F01D         	movff	?___fldiv+1,floorf@x+1
  2773   001592  C005  F01E         	movff	?___fldiv+2,floorf@x+2
  2774   001596  C006  F01F         	movff	?___fldiv+3,floorf@x+3
  2775   00159A  EC17  F015         	call	_floorf	;wreg free
  2776   00159E  C01C  F07D         	movff	?_floorf,efgtoa@l
  2777   0015A2  C01D  F07E         	movff	?_floorf+1,efgtoa@l+1
  2778   0015A6  C01E  F07F         	movff	?_floorf+2,efgtoa@l+2
  2779   0015AA  C01F  F080         	movff	?_floorf+3,efgtoa@l+3
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2782   0015AE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2783   0015B2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2784   0015B6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2785   0015BA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2786   0015BE  ECC2  F019         	call	___fltol	;wreg free
  2787   0015C2  BE04               	btfsc	(?___fltol+1)^0,7,c
  2788   0015C4  EFEF  F00A         	goto	u3900
  2789   0015C8  5004               	movf	(?___fltol+1)^0,w,c
  2790   0015CA  E107               	bnz	u3901
  2791   0015CC  0E0A               	movlw	10
  2792   0015CE  5C03               	subwf	?___fltol^0,w,c
  2793   0015D0  B0D8               	btfsc	status,0,c
  2794   0015D2  EFED  F00A         	goto	u3901
  2795   0015D6  EFEF  F00A         	goto	u3900
  2796   0015DA                     u3901:
  2797   0015DA  EFFF  F00A         	goto	l3758
  2798   0015DE                     u3900:
  2799   0015DE  C07D  F003         	movff	efgtoa@l,___fltol@f1
  2800   0015E2  C07E  F004         	movff	efgtoa@l+1,___fltol@f1+1
  2801   0015E6  C07F  F005         	movff	efgtoa@l+2,___fltol@f1+2
  2802   0015EA  C080  F006         	movff	efgtoa@l+3,___fltol@f1+3
  2803   0015EE  ECC2  F019         	call	___fltol	;wreg free
  2804   0015F2  C003  F06B         	movff	?___fltol,efgtoa@d
  2805   0015F6  C004  F06C         	movff	?___fltol+1,efgtoa@d+1
  2806   0015FA  EF04  F00B         	goto	l1108
  2807   0015FE                     l3758:
  2808   0015FE  0E00               	movlw	0
  2809   001600  0100               	movlb	0	; () banked
  2810   001602  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2811   001604  0E09               	movlw	9
  2812   001606  6F6B               	movwf	efgtoa@d& (0+255),b
  2813   001608                     l1108:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2816   001608  0100               	movlb	0	; () banked
  2817   00160A  5168               	movf	efgtoa@pp& (0+255),w,b
  2818   00160C  A4D8               	btfss	status,2,c
  2819   00160E  EF0B  F00B         	goto	u3911
  2820   001612  EF0D  F00B         	goto	u3910
  2821   001616                     u3911:
  2822   001616  EF35  F00B         	goto	l3778
  2823   00161A                     u3910:
  2824   00161A                     
  2825                           ; BSR set to: 0
  2826   00161A  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2827   00161C  EF14  F00B         	goto	u3920
  2828   001620  EF12  F00B         	goto	u3921
  2829   001624                     u3921:
  2830   001624  EF35  F00B         	goto	l3778
  2831   001628                     u3920:
  2832   001628                     
  2833                           ; BSR set to: 0
  2834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2835   001628  0E50               	movlw	low _dbuf
  2836   00162A  2582               	addwf	efgtoa@n& (0+255),w,b
  2837   00162C  6ED9               	movwf	fsr2l,c
  2838   00162E  0E01               	movlw	high _dbuf
  2839   001630  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2840   001632  6EDA               	movwf	fsr2h,c
  2841   001634  0E2E               	movlw	46
  2842   001636  6EDF               	movwf	indf2,c
  2843   001638                     
  2844                           ; BSR set to: 0
  2845   001638  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2846   00163A  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2847   00163C                     
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2850   00163C  0771               	decf	efgtoa@w& (0+255),f,b
  2851   00163E  A0D8               	btfss	status,0,c
  2852   001640  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2853   001642                     
  2854                           ; BSR set to: 0
  2855                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2856   001642  0E01               	movlw	1
  2857   001644  6F68               	movwf	efgtoa@pp& (0+255),b
  2858   001646  EF35  F00B         	goto	l3778
  2859   00164A                     l3770:
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2863   00164A  0E50               	movlw	low _dbuf
  2864   00164C  2582               	addwf	efgtoa@n& (0+255),w,b
  2865   00164E  6ED9               	movwf	fsr2l,c
  2866   001650  0E01               	movlw	high _dbuf
  2867   001652  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2868   001654  6EDA               	movwf	fsr2h,c
  2869   001656  0E30               	movlw	48
  2870   001658  6EDF               	movwf	indf2,c
  2871   00165A                     
  2872                           ; BSR set to: 0
  2873   00165A  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2874   00165C  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2875   00165E                     
  2876                           ; BSR set to: 0
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2878   00165E  0771               	decf	efgtoa@w& (0+255),f,b
  2879   001660  A0D8               	btfss	status,0,c
  2880   001662  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2881   001664                     
  2882                           ; BSR set to: 0
  2883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2884   001664  0764               	decf	efgtoa@t& (0+255),f,b
  2885   001666  A0D8               	btfss	status,0,c
  2886   001668  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2887   00166A                     l3778:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2891   00166A  5164               	movf	efgtoa@t& (0+255),w,b
  2892   00166C  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2893   00166E  A4D8               	btfss	status,2,c
  2894   001670  EF3C  F00B         	goto	u3931
  2895   001674  EF3E  F00B         	goto	u3930
  2896   001678                     u3931:
  2897   001678  EF25  F00B         	goto	l3770
  2898   00167C                     u3930:
  2899   00167C                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2902   00167C  0E50               	movlw	low _dbuf
  2903   00167E  2582               	addwf	efgtoa@n& (0+255),w,b
  2904   001680  6ED9               	movwf	fsr2l,c
  2905   001682  0E01               	movlw	high _dbuf
  2906   001684  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2907   001686  6EDA               	movwf	fsr2h,c
  2908   001688  516B               	movf	efgtoa@d& (0+255),w,b
  2909   00168A  0F30               	addlw	48
  2910   00168C  6EDF               	movwf	indf2,c
  2911   00168E                     
  2912                           ; BSR set to: 0
  2913   00168E  4B82               	infsnz	efgtoa@n& (0+255),f,b
  2914   001690  2B83               	incf	(efgtoa@n+1)& (0+255),f,b
  2915   001692                     
  2916                           ; BSR set to: 0
  2917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2918   001692  0771               	decf	efgtoa@w& (0+255),f,b
  2919   001694  A0D8               	btfss	status,0,c
  2920   001696  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2921   001698                     
  2922                           ; BSR set to: 0
  2923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2924   001698  C079  F01C         	movff	efgtoa@h,___flsub@b
  2925   00169C  C07A  F01D         	movff	efgtoa@h+1,___flsub@b+1
  2926   0016A0  C07B  F01E         	movff	efgtoa@h+2,___flsub@b+2
  2927   0016A4  C07C  F01F         	movff	efgtoa@h+3,___flsub@b+3
  2928   0016A8  C07D  F007         	movff	efgtoa@l,___flmul@a
  2929   0016AC  C07E  F008         	movff	efgtoa@l+1,___flmul@a+1
  2930   0016B0  C07F  F009         	movff	efgtoa@l+2,___flmul@a+2
  2931   0016B4  C080  F00A         	movff	efgtoa@l+3,___flmul@a+3
  2932   0016B8  C088  F003         	movff	efgtoa@u,___flmul@b
  2933   0016BC  C089  F004         	movff	efgtoa@u+1,___flmul@b+1
  2934   0016C0  C08A  F005         	movff	efgtoa@u+2,___flmul@b+2
  2935   0016C4  C08B  F006         	movff	efgtoa@u+3,___flmul@b+3
  2936   0016C8  EC74  F00E         	call	___flmul	;wreg free
  2937   0016CC  C003  F020         	movff	?___flmul,___flsub@a
  2938   0016D0  C004  F021         	movff	?___flmul+1,___flsub@a+1
  2939   0016D4  C005  F022         	movff	?___flmul+2,___flsub@a+2
  2940   0016D8  C006  F023         	movff	?___flmul+3,___flsub@a+3
  2941   0016DC  ECE0  F01D         	call	___flsub	;wreg free
  2942   0016E0  C01C  F079         	movff	?___flsub,efgtoa@h
  2943   0016E4  C01D  F07A         	movff	?___flsub+1,efgtoa@h+1
  2944   0016E8  C01E  F07B         	movff	?___flsub+2,efgtoa@h+2
  2945   0016EC  C01F  F07C         	movff	?___flsub+3,efgtoa@h+3
  2946   0016F0                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2948   0016F0  C088  F003         	movff	efgtoa@u,___fldiv@b
  2949   0016F4  C089  F004         	movff	efgtoa@u+1,___fldiv@b+1
  2950   0016F8  C08A  F005         	movff	efgtoa@u+2,___fldiv@b+2
  2951   0016FC  C08B  F006         	movff	efgtoa@u+3,___fldiv@b+3
  2952   001700  0E00               	movlw	0
  2953   001702  6E07               	movwf	___fldiv@a^0,c
  2954   001704  0E00               	movlw	0
  2955   001706  6E08               	movwf	(___fldiv@a+1)^0,c
  2956   001708  0E20               	movlw	32
  2957   00170A  6E09               	movwf	(___fldiv@a+2)^0,c
  2958   00170C  0E41               	movlw	65
  2959   00170E  6E0A               	movwf	(___fldiv@a+3)^0,c
  2960   001710  EC89  F010         	call	___fldiv	;wreg free
  2961   001714  C003  F088         	movff	?___fldiv,efgtoa@u
  2962   001718  C004  F089         	movff	?___fldiv+1,efgtoa@u+1
  2963   00171C  C005  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2964   001720  C006  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2965   001724                     
  2966                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2967   001724  0100               	movlb	0	; () banked
  2968   001726  0760               	decf	efgtoa@ne& (0+255),f,b
  2969   001728  A0D8               	btfss	status,0,c
  2970   00172A  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2971   00172C                     
  2972                           ; BSR set to: 0
  2973                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2974   00172C  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2975   00172E  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2976   001730                     l3794:
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2980   001730  516D               	movf	efgtoa@m& (0+255),w,b
  2981   001732  5D77               	subwf	efgtoa@i& (0+255),w,b
  2982   001734  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2983   001736  0A80               	xorlw	128
  2984   001738  6E37               	movwf	??_efgtoa^0,c
  2985   00173A  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2986   00173C  0A80               	xorlw	128
  2987   00173E  5837               	subwfb	??_efgtoa^0,w,c
  2988   001740  B0D8               	btfsc	status,0,c
  2989   001742  EFA5  F00B         	goto	u3941
  2990   001746  EFA7  F00B         	goto	u3940
  2991   00174A                     u3941:
  2992   00174A  EFB5  F00B         	goto	l3798
  2993   00174E                     u3940:
  2994   00174E                     
  2995                           ; BSR set to: 0
  2996   00174E  BF83               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2997   001750  EFB3  F00B         	goto	u3951
  2998   001754  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  2999   001756  E109               	bnz	u3950
  3000   001758  0E4B               	movlw	75
  3001   00175A  5D82               	subwf	efgtoa@n& (0+255),w,b
  3002   00175C  A0D8               	btfss	status,0,c
  3003   00175E  EFB3  F00B         	goto	u3951
  3004   001762  EFB5  F00B         	goto	u3950
  3005   001766                     u3951:
  3006   001766  EFB3  F00A         	goto	l3754
  3007   00176A                     u3950:
  3008   00176A                     l3798:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  3012   00176A  0E00               	movlw	0
  3013   00176C  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3014   00176E  0E4F               	movlw	79
  3015   001770  6F77               	movwf	efgtoa@i& (0+255),b
  3016   001772                     
  3017                           ; BSR set to: 0
  3018                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  3019   001772  0E50               	movlw	low _dbuf
  3020   001774  2577               	addwf	efgtoa@i& (0+255),w,b
  3021   001776  6ED9               	movwf	fsr2l,c
  3022   001778  0E01               	movlw	high _dbuf
  3023   00177A  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3024   00177C  6EDA               	movwf	fsr2h,c
  3025   00177E  0E00               	movlw	0
  3026   001780  6EDF               	movwf	indf2,c
  3027   001782                     
  3028                           ; BSR set to: 0
  3029                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  3030   001782  0E50               	movlw	low _dbuf
  3031   001784  6E37               	movwf	??_efgtoa^0,c
  3032   001786  0E01               	movlw	high _dbuf
  3033   001788  6E38               	movwf	(??_efgtoa+1)^0,c
  3034   00178A  5182               	movf	efgtoa@n& (0+255),w,b
  3035   00178C  5E37               	subwf	??_efgtoa^0,f,c
  3036   00178E  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3037   001790  5A38               	subwfb	(??_efgtoa+1)^0,f,c
  3038   001792  5177               	movf	efgtoa@i& (0+255),w,b
  3039   001794  2437               	addwf	??_efgtoa^0,w,c
  3040   001796  6E03               	movwf	memcpy@d1^0,c
  3041   001798  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3042   00179A  2038               	addwfc	(??_efgtoa+1)^0,w,c
  3043   00179C  6E04               	movwf	(memcpy@d1+1)^0,c
  3044   00179E  0E50               	movlw	low _dbuf
  3045   0017A0  6E05               	movwf	memcpy@s1^0,c
  3046   0017A2  0E01               	movlw	high _dbuf
  3047   0017A4  6E06               	movwf	(memcpy@s1+1)^0,c
  3048   0017A6  C082  F007         	movff	efgtoa@n,memcpy@n
  3049   0017AA  C083  F008         	movff	efgtoa@n+1,memcpy@n+1
  3050   0017AE  ECF2  F01C         	call	_memcpy	;wreg free
  3051   0017B2                     
  3052                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  3053   0017B2  0100               	movlb	0	; () banked
  3054   0017B4  5182               	movf	efgtoa@n& (0+255),w,b
  3055   0017B6  5D77               	subwf	efgtoa@i& (0+255),w,b
  3056   0017B8  6F82               	movwf	efgtoa@n& (0+255),b
  3057   0017BA  5183               	movf	(efgtoa@n+1)& (0+255),w,b
  3058   0017BC  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  3059   0017BE  6F83               	movwf	(efgtoa@n+1)& (0+255),b
  3060   0017C0                     
  3061                           ; BSR set to: 0
  3062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  3063   0017C0  5181               	movf	efgtoa@sign& (0+255),w,b
  3064   0017C2  A4D8               	btfss	status,2,c
  3065   0017C4  EFE6  F00B         	goto	u3961
  3066   0017C8  EFE9  F00B         	goto	u3960
  3067   0017CC                     u3961:
  3068   0017CC  0E01               	movlw	1
  3069   0017CE  EFEA  F00B         	goto	u3970
  3070   0017D2                     u3960:
  3071   0017D2  0E00               	movlw	0
  3072   0017D4                     u3970:
  3073   0017D4  6F77               	movwf	efgtoa@i& (0+255),b
  3074   0017D6  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  3075   0017D8                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  3078   0017D8  5181               	movf	efgtoa@sign& (0+255),w,b
  3079   0017DA  B4D8               	btfsc	status,2,c
  3080   0017DC  EFF2  F00B         	goto	u3981
  3081   0017E0  EFF4  F00B         	goto	u3980
  3082   0017E4                     u3981:
  3083   0017E4  EFFF  F00B         	goto	l3812
  3084   0017E8                     u3980:
  3085   0017E8                     
  3086                           ; BSR set to: 0
  3087                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  3088   0017E8  0782               	decf	efgtoa@n& (0+255),f,b
  3089   0017EA  A0D8               	btfss	status,0,c
  3090   0017EC  0783               	decf	(efgtoa@n+1)& (0+255),f,b
  3091   0017EE  0E50               	movlw	low _dbuf
  3092   0017F0  2582               	addwf	efgtoa@n& (0+255),w,b
  3093   0017F2  6ED9               	movwf	fsr2l,c
  3094   0017F4  0E01               	movlw	high _dbuf
  3095   0017F6  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3096   0017F8  6EDA               	movwf	fsr2h,c
  3097   0017FA  C081  FFDF         	movff	efgtoa@sign,indf2
  3098   0017FE                     l3812:
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3102   0017FE  5177               	movf	efgtoa@i& (0+255),w,b
  3103   001800  5F71               	subwf	efgtoa@w& (0+255),f,b
  3104   001802  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3105   001804  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3106   001806                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3109   001806  C030  F013         	movff	efgtoa@fp,pad@fp
  3110   00180A  C031  F014         	movff	efgtoa@fp+1,pad@fp+1
  3111   00180E  0E50               	movlw	low _dbuf
  3112   001810  2582               	addwf	efgtoa@n& (0+255),w,b
  3113   001812  6E15               	movwf	pad@buf^0,c
  3114   001814  0E01               	movlw	high _dbuf
  3115   001816  2183               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3116   001818  6E16               	movwf	(pad@buf+1)^0,c
  3117   00181A  C071  F017         	movff	efgtoa@w,pad@p
  3118   00181E  C072  F018         	movff	efgtoa@w+1,pad@p+1
  3119   001822  EC00  F01C         	call	_pad	;wreg free
  3120   001826                     l1075:
  3121   001826  0012               	return		;funcret
  3122   001828                     __end_of_efgtoa:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _strcpy *****************
  3126 ;; Defined at:
  3127 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;  dest            2    2[COMRAM] PTR unsigned char 
  3130 ;;		 -> dbuf(80), 
  3131 ;;  src             2    4[COMRAM] PTR const unsigned char 
  3132 ;;		 -> STR_5(4), STR_2(4), 
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;  d               2    8[COMRAM] PTR unsigned char 
  3135 ;;		 -> dbuf(80), 
  3136 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3137 ;;		 -> STR_5(4), STR_2(4), 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    2[COMRAM] PTR unsigned char 
  3140 ;; Registers used:
  3141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3148 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;Total ram usage:        8 bytes
  3152 ;; Hardware stack levels used: 1
  3153 ;; Hardware stack levels required when called: 4
  3154 ;; This function calls:
  3155 ;;		Nothing
  3156 ;; This function is called by:
  3157 ;;		_efgtoa
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text5
  3162   003C06                     __ptext5:
  3163                           	callstack 0
  3164   003C06                     _strcpy:
  3165                           	callstack 22
  3166   003C06  C005  F007         	movff	strcpy@src,strcpy@s
  3167   003C0A  C006  F008         	movff	strcpy@src+1,strcpy@s+1
  3168   003C0E  C003  F009         	movff	strcpy@dest,strcpy@d
  3169   003C12  C004  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3170   003C16                     l3494:
  3171   003C16  C007  FFF6         	movff	strcpy@s,tblptrl
  3172   003C1A  C008  FFF7         	movff	strcpy@s+1,tblptrh
  3173   003C1E  4A07               	infsnz	strcpy@s^0,f,c
  3174   003C20  2A08               	incf	(strcpy@s+1)^0,f,c
  3175   003C22                     	if	0	;tblptru may be non-zero
  3176   003C22                     	endif
  3177   003C22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3178   003C22  0E00               	movlw	low (__mediumconst shr (0+16))
  3179   003C24  6EF8               	movwf	tblptru,c
  3180   003C26                     	endif
  3181   003C26  C009  FFD9         	movff	strcpy@d,fsr2l
  3182   003C2A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3183   003C2E  4A09               	infsnz	strcpy@d^0,f,c
  3184   003C30  2A0A               	incf	(strcpy@d+1)^0,f,c
  3185   003C32  0008               	tblrd		*
  3186   003C34  CFF5 FFDF          	movff	tablat,indf2
  3187   003C38  50DF               	movf	indf2,w,c
  3188   003C3A  A4D8               	btfss	status,2,c
  3189   003C3C  EF22  F01E         	goto	u3421
  3190   003C40  EF24  F01E         	goto	u3420
  3191   003C44                     u3421:
  3192   003C44  EF0B  F01E         	goto	l3494
  3193   003C48                     u3420:
  3194   003C48  0012               	return		;funcret
  3195   003C4A                     __end_of_strcpy:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _memcpy *****************
  3199 ;; Defined at:
  3200 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  d1              2    2[COMRAM] PTR void 
  3203 ;;		 -> dbuf(80), 
  3204 ;;  s1              2    4[COMRAM] PTR const void 
  3205 ;;		 -> dbuf(80), 
  3206 ;;  n               2    6[COMRAM] unsigned int 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  s               2   10[COMRAM] PTR const unsigned char 
  3209 ;;		 -> dbuf(80), 
  3210 ;;  d               2    8[COMRAM] PTR unsigned char 
  3211 ;;		 -> dbuf(80), 
  3212 ;;  tmp             1   12[COMRAM] unsigned char 
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  2    2[COMRAM] PTR void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3222 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3225 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3226 ;;Total ram usage:       11 bytes
  3227 ;; Hardware stack levels used: 1
  3228 ;; Hardware stack levels required when called: 4
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_efgtoa
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text6
  3237   0039E4                     __ptext6:
  3238                           	callstack 0
  3239   0039E4                     _memcpy:
  3240                           	callstack 22
  3241   0039E4  C005  F00B         	movff	memcpy@s1,memcpy@s
  3242   0039E8  C006  F00C         	movff	memcpy@s1+1,memcpy@s+1
  3243   0039EC  C003  F009         	movff	memcpy@d1,memcpy@d
  3244   0039F0  C004  F00A         	movff	memcpy@d1+1,memcpy@d+1
  3245   0039F4  EF0C  F01D         	goto	l3538
  3246   0039F8                     l3530:
  3247   0039F8  C00B  FFD9         	movff	memcpy@s,fsr2l
  3248   0039FC  C00C  FFDA         	movff	memcpy@s+1,fsr2h
  3249   003A00  50DF               	movf	indf2,w,c
  3250   003A02  6E0D               	movwf	memcpy@tmp^0,c
  3251   003A04  4A0B               	infsnz	memcpy@s^0,f,c
  3252   003A06  2A0C               	incf	(memcpy@s+1)^0,f,c
  3253   003A08  C009  FFD9         	movff	memcpy@d,fsr2l
  3254   003A0C  C00A  FFDA         	movff	memcpy@d+1,fsr2h
  3255   003A10  C00D  FFDF         	movff	memcpy@tmp,indf2
  3256   003A14  4A09               	infsnz	memcpy@d^0,f,c
  3257   003A16  2A0A               	incf	(memcpy@d+1)^0,f,c
  3258   003A18                     l3538:
  3259   003A18  0607               	decf	memcpy@n^0,f,c
  3260   003A1A  A0D8               	btfss	status,0,c
  3261   003A1C  0608               	decf	(memcpy@n+1)^0,f,c
  3262   003A1E  2807               	incf	memcpy@n^0,w,c
  3263   003A20  E106               	bnz	u3541
  3264   003A22  2808               	incf	(memcpy@n+1)^0,w,c
  3265   003A24  A4D8               	btfss	status,2,c
  3266   003A26  EF17  F01D         	goto	u3541
  3267   003A2A  EF19  F01D         	goto	u3540
  3268   003A2E                     u3541:
  3269   003A2E  EFFC  F01C         	goto	l3530
  3270   003A32                     u3540:
  3271   003A32  0012               	return		;funcret
  3272   003A34                     __end_of_memcpy:
  3273                           	callstack 0
  3274                           
  3275 ;; *************** function _labs *****************
  3276 ;; Defined at:
  3277 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  a               4    2[COMRAM] long 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  4    2[COMRAM] long 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        8 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 4
  3298 ;; This function calls:
  3299 ;;		Nothing
  3300 ;; This function is called by:
  3301 ;;		_efgtoa
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text7
  3306   00387A                     __ptext7:
  3307                           	callstack 0
  3308   00387A                     _labs:
  3309                           	callstack 22
  3310   00387A  BE06               	btfsc	(labs@a+3)^0,7,c
  3311   00387C  EF4C  F01C         	goto	u3430
  3312   003880  5006               	movf	(labs@a+3)^0,w,c
  3313   003882  1005               	iorwf	(labs@a+2)^0,w,c
  3314   003884  1004               	iorwf	(labs@a+1)^0,w,c
  3315   003886  E106               	bnz	u3431
  3316   003888  0403               	decf	labs@a^0,w,c
  3317   00388A  B0D8               	btfsc	status,0,c
  3318   00388C  EF4A  F01C         	goto	u3431
  3319   003890  EF4C  F01C         	goto	u3430
  3320   003894                     u3431:
  3321   003894  EF67  F01C         	goto	l1180
  3322   003898                     u3430:
  3323   003898  C003  F007         	movff	labs@a,??_labs
  3324   00389C  C004  F008         	movff	labs@a+1,??_labs+1
  3325   0038A0  C005  F009         	movff	labs@a+2,??_labs+2
  3326   0038A4  C006  F00A         	movff	labs@a+3,??_labs+3
  3327   0038A8  1E07               	comf	??_labs^0,f,c
  3328   0038AA  1E08               	comf	(??_labs+1)^0,f,c
  3329   0038AC  1E09               	comf	(??_labs+2)^0,f,c
  3330   0038AE  1E0A               	comf	(??_labs+3)^0,f,c
  3331   0038B0  2A07               	incf	??_labs^0,f,c
  3332   0038B2  0E00               	movlw	0
  3333   0038B4  2208               	addwfc	(??_labs+1)^0,f,c
  3334   0038B6  2209               	addwfc	(??_labs+2)^0,f,c
  3335   0038B8  220A               	addwfc	(??_labs+3)^0,f,c
  3336   0038BA  C007  F003         	movff	??_labs,?_labs
  3337   0038BE  C008  F004         	movff	??_labs+1,?_labs+1
  3338   0038C2  C009  F005         	movff	??_labs+2,?_labs+2
  3339   0038C6  C00A  F006         	movff	??_labs+3,?_labs+3
  3340   0038CA  EF6F  F01C         	goto	l1183
  3341   0038CE                     l1180:
  3342   0038CE  C003  F003         	movff	labs@a,?_labs
  3343   0038D2  C004  F004         	movff	labs@a+1,?_labs+1
  3344   0038D6  C005  F005         	movff	labs@a+2,?_labs+2
  3345   0038DA  C006  F006         	movff	labs@a+3,?_labs+3
  3346   0038DE                     l1183:
  3347   0038DE  0012               	return		;funcret
  3348   0038E0                     __end_of_labs:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _floorf *****************
  3352 ;; Defined at:
  3353 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  x               4   27[COMRAM] float 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  u               4   43[COMRAM] struct .
  3358 ;;  m               4   37[COMRAM] unsigned long 
  3359 ;;  e               2   41[COMRAM] int 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  4   27[COMRAM] float 
  3362 ;; Registers used:
  3363 ;;		wreg, status,2, status,0
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3370 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3371 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3372 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;Total ram usage:       20 bytes
  3374 ;; Hardware stack levels used: 1
  3375 ;; Hardware stack levels required when called: 4
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_efgtoa
  3380 ;; This function uses a non-reentrant model
  3381 ;;
  3382                           
  3383                           	psect	text8
  3384   002A2E                     __ptext8:
  3385                           	callstack 0
  3386   002A2E                     _floorf:
  3387                           	callstack 22
  3388   002A2E  C0E5  F02C         	movff	floorf@F526,floorf@u
  3389   002A32  C0E6  F02D         	movff	floorf@F526+1,floorf@u+1
  3390   002A36  C0E7  F02E         	movff	floorf@F526+2,floorf@u+2
  3391   002A3A  C0E8  F02F         	movff	floorf@F526+3,floorf@u+3
  3392   002A3E  C01C  F02C         	movff	floorf@x,floorf@u
  3393   002A42  C01D  F02D         	movff	floorf@x+1,floorf@u+1
  3394   002A46  C01E  F02E         	movff	floorf@x+2,floorf@u+2
  3395   002A4A  C01F  F02F         	movff	floorf@x+3,floorf@u+3
  3396   002A4E  0E81               	movlw	129
  3397   002A50  6E20               	movwf	??_floorf^0,c
  3398   002A52  0EFF               	movlw	255
  3399   002A54  6E21               	movwf	(??_floorf+1)^0,c
  3400   002A56  C02C  F022         	movff	floorf@u,??_floorf+2
  3401   002A5A  C02D  F023         	movff	floorf@u+1,??_floorf+3
  3402   002A5E  C02E  F024         	movff	floorf@u+2,??_floorf+4
  3403   002A62  C02F  F025         	movff	floorf@u+3,??_floorf+5
  3404   002A66  0E18               	movlw	24
  3405   002A68  EF3B  F015         	goto	u3440
  3406   002A6C                     u3445:
  3407   002A6C  90D8               	bcf	status,0,c
  3408   002A6E  3225               	rrcf	(??_floorf+5)^0,f,c
  3409   002A70  3224               	rrcf	(??_floorf+4)^0,f,c
  3410   002A72  3223               	rrcf	(??_floorf+3)^0,f,c
  3411   002A74  3222               	rrcf	(??_floorf+2)^0,f,c
  3412   002A76                     u3440:
  3413   002A76  2EE8               	decfsz	wreg,f,c
  3414   002A78  EF36  F015         	goto	u3445
  3415   002A7C  5022               	movf	(??_floorf+2)^0,w,c
  3416   002A7E  2420               	addwf	??_floorf^0,w,c
  3417   002A80  6E2A               	movwf	floorf@e^0,c
  3418   002A82  0E00               	movlw	0
  3419   002A84  2021               	addwfc	(??_floorf+1)^0,w,c
  3420   002A86  6E2B               	movwf	(floorf@e+1)^0,c
  3421   002A88  BE2B               	btfsc	(floorf@e+1)^0,7,c
  3422   002A8A  EF50  F015         	goto	u3451
  3423   002A8E  502B               	movf	(floorf@e+1)^0,w,c
  3424   002A90  E109               	bnz	u3450
  3425   002A92  0E17               	movlw	23
  3426   002A94  5C2A               	subwf	floorf@e^0,w,c
  3427   002A96  A0D8               	btfss	status,0,c
  3428   002A98  EF50  F015         	goto	u3451
  3429   002A9C  EF52  F015         	goto	u3450
  3430   002AA0                     u3451:
  3431   002AA0  EF5C  F015         	goto	l3506
  3432   002AA4                     u3450:
  3433   002AA4                     l3504:
  3434   002AA4  C01C  F01C         	movff	floorf@x,?_floorf
  3435   002AA8  C01D  F01D         	movff	floorf@x+1,?_floorf+1
  3436   002AAC  C01E  F01E         	movff	floorf@x+2,?_floorf+2
  3437   002AB0  C01F  F01F         	movff	floorf@x+3,?_floorf+3
  3438   002AB4  EF1F  F016         	goto	l1169
  3439   002AB8                     l3506:
  3440   002AB8  BE2B               	btfsc	(floorf@e+1)^0,7,c
  3441   002ABA  EF61  F015         	goto	u3461
  3442   002ABE  EF63  F015         	goto	u3460
  3443   002AC2                     u3461:
  3444   002AC2  EFD3  F015         	goto	l3516
  3445   002AC6                     u3460:
  3446   002AC6  C02A  F020         	movff	floorf@e,??_floorf
  3447   002ACA  0EFF               	movlw	255
  3448   002ACC  6E21               	movwf	(??_floorf+1)^0,c
  3449   002ACE  0EFF               	movlw	255
  3450   002AD0  6E22               	movwf	(??_floorf+2)^0,c
  3451   002AD2  0E7F               	movlw	127
  3452   002AD4  6E23               	movwf	(??_floorf+3)^0,c
  3453   002AD6  0E00               	movlw	0
  3454   002AD8  6E24               	movwf	(??_floorf+4)^0,c
  3455   002ADA                     u3475:
  3456   002ADA  6620               	tstfsz	??_floorf^0,c
  3457   002ADC  EF72  F015         	goto	u3476
  3458   002AE0  EF7A  F015         	goto	u3477
  3459   002AE4                     u3476:
  3460   002AE4  3424               	rlcf	(??_floorf+4)^0,w,c
  3461   002AE6  3224               	rrcf	(??_floorf+4)^0,f,c
  3462   002AE8  3223               	rrcf	(??_floorf+3)^0,f,c
  3463   002AEA  3222               	rrcf	(??_floorf+2)^0,f,c
  3464   002AEC  3221               	rrcf	(??_floorf+1)^0,f,c
  3465   002AEE  2E20               	decfsz	??_floorf^0,f,c
  3466   002AF0  EF6D  F015         	goto	u3475
  3467   002AF4                     u3477:
  3468   002AF4  C021  F026         	movff	??_floorf+1,floorf@m
  3469   002AF8  C022  F027         	movff	??_floorf+2,floorf@m+1
  3470   002AFC  C023  F028         	movff	??_floorf+3,floorf@m+2
  3471   002B00  C024  F029         	movff	??_floorf+4,floorf@m+3
  3472   002B04  5026               	movf	floorf@m^0,w,c
  3473   002B06  142C               	andwf	floorf@u^0,w,c
  3474   002B08  6E20               	movwf	??_floorf^0,c
  3475   002B0A  5027               	movf	(floorf@m+1)^0,w,c
  3476   002B0C  142D               	andwf	(floorf@u+1)^0,w,c
  3477   002B0E  6E21               	movwf	(??_floorf+1)^0,c
  3478   002B10  5028               	movf	(floorf@m+2)^0,w,c
  3479   002B12  142E               	andwf	(floorf@u+2)^0,w,c
  3480   002B14  6E22               	movwf	(??_floorf+2)^0,c
  3481   002B16  5029               	movf	(floorf@m+3)^0,w,c
  3482   002B18  142F               	andwf	(floorf@u+3)^0,w,c
  3483   002B1A  6E23               	movwf	(??_floorf+3)^0,c
  3484   002B1C  5020               	movf	??_floorf^0,w,c
  3485   002B1E  1021               	iorwf	(??_floorf+1)^0,w,c
  3486   002B20  1022               	iorwf	(??_floorf+2)^0,w,c
  3487   002B22  1023               	iorwf	(??_floorf+3)^0,w,c
  3488   002B24  A4D8               	btfss	status,2,c
  3489   002B26  EF97  F015         	goto	u3481
  3490   002B2A  EF99  F015         	goto	u3480
  3491   002B2E                     u3481:
  3492   002B2E  EF9B  F015         	goto	l3512
  3493   002B32                     u3480:
  3494   002B32  EF52  F015         	goto	l3504
  3495   002B36                     l3512:
  3496   002B36  C02C  F020         	movff	floorf@u,??_floorf
  3497   002B3A  C02D  F021         	movff	floorf@u+1,??_floorf+1
  3498   002B3E  C02E  F022         	movff	floorf@u+2,??_floorf+2
  3499   002B42  C02F  F023         	movff	floorf@u+3,??_floorf+3
  3500   002B46  0E20               	movlw	32
  3501   002B48  EFAB  F015         	goto	u3490
  3502   002B4C                     u3495:
  3503   002B4C  90D8               	bcf	status,0,c
  3504   002B4E  3223               	rrcf	(??_floorf+3)^0,f,c
  3505   002B50  3222               	rrcf	(??_floorf+2)^0,f,c
  3506   002B52  3221               	rrcf	(??_floorf+1)^0,f,c
  3507   002B54  3220               	rrcf	??_floorf^0,f,c
  3508   002B56                     u3490:
  3509   002B56  2EE8               	decfsz	wreg,f,c
  3510   002B58  EFA6  F015         	goto	u3495
  3511   002B5C  5020               	movf	??_floorf^0,w,c
  3512   002B5E  1021               	iorwf	(??_floorf+1)^0,w,c
  3513   002B60  1022               	iorwf	(??_floorf+2)^0,w,c
  3514   002B62  1023               	iorwf	(??_floorf+3)^0,w,c
  3515   002B64  B4D8               	btfsc	status,2,c
  3516   002B66  EFB7  F015         	goto	u3501
  3517   002B6A  EFB9  F015         	goto	u3500
  3518   002B6E                     u3501:
  3519   002B6E  EFC1  F015         	goto	l1172
  3520   002B72                     u3500:
  3521   002B72  5026               	movf	floorf@m^0,w,c
  3522   002B74  262C               	addwf	floorf@u^0,f,c
  3523   002B76  5027               	movf	(floorf@m+1)^0,w,c
  3524   002B78  222D               	addwfc	(floorf@u+1)^0,f,c
  3525   002B7A  5028               	movf	(floorf@m+2)^0,w,c
  3526   002B7C  222E               	addwfc	(floorf@u+2)^0,f,c
  3527   002B7E  5029               	movf	(floorf@m+3)^0,w,c
  3528   002B80  222F               	addwfc	(floorf@u+3)^0,f,c
  3529   002B82                     l1172:
  3530   002B82  1C26               	comf	floorf@m^0,w,c
  3531   002B84  6E20               	movwf	??_floorf^0,c
  3532   002B86  1C27               	comf	(floorf@m+1)^0,w,c
  3533   002B88  6E21               	movwf	(??_floorf+1)^0,c
  3534   002B8A  1C28               	comf	(floorf@m+2)^0,w,c
  3535   002B8C  6E22               	movwf	(??_floorf+2)^0,c
  3536   002B8E  1C29               	comf	(floorf@m+3)^0,w,c
  3537   002B90  6E23               	movwf	(??_floorf+3)^0,c
  3538   002B92  5020               	movf	??_floorf^0,w,c
  3539   002B94  162C               	andwf	floorf@u^0,f,c
  3540   002B96  5021               	movf	(??_floorf+1)^0,w,c
  3541   002B98  162D               	andwf	(floorf@u+1)^0,f,c
  3542   002B9A  5022               	movf	(??_floorf+2)^0,w,c
  3543   002B9C  162E               	andwf	(floorf@u+2)^0,f,c
  3544   002B9E  5023               	movf	(??_floorf+3)^0,w,c
  3545   002BA0  162F               	andwf	(floorf@u+3)^0,f,c
  3546   002BA2  EF17  F016         	goto	l3524
  3547   002BA6                     l3516:
  3548   002BA6  C02C  F020         	movff	floorf@u,??_floorf
  3549   002BAA  C02D  F021         	movff	floorf@u+1,??_floorf+1
  3550   002BAE  C02E  F022         	movff	floorf@u+2,??_floorf+2
  3551   002BB2  C02F  F023         	movff	floorf@u+3,??_floorf+3
  3552   002BB6  0E20               	movlw	32
  3553   002BB8  EFE3  F015         	goto	u3510
  3554   002BBC                     u3515:
  3555   002BBC  90D8               	bcf	status,0,c
  3556   002BBE  3223               	rrcf	(??_floorf+3)^0,f,c
  3557   002BC0  3222               	rrcf	(??_floorf+2)^0,f,c
  3558   002BC2  3221               	rrcf	(??_floorf+1)^0,f,c
  3559   002BC4  3220               	rrcf	??_floorf^0,f,c
  3560   002BC6                     u3510:
  3561   002BC6  2EE8               	decfsz	wreg,f,c
  3562   002BC8  EFDE  F015         	goto	u3515
  3563   002BCC  5020               	movf	??_floorf^0,w,c
  3564   002BCE  1021               	iorwf	(??_floorf+1)^0,w,c
  3565   002BD0  1022               	iorwf	(??_floorf+2)^0,w,c
  3566   002BD2  1023               	iorwf	(??_floorf+3)^0,w,c
  3567   002BD4  A4D8               	btfss	status,2,c
  3568   002BD6  EFEF  F015         	goto	u3521
  3569   002BDA  EFF1  F015         	goto	u3520
  3570   002BDE                     u3521:
  3571   002BDE  EFFB  F015         	goto	l3520
  3572   002BE2                     u3520:
  3573   002BE2  0E00               	movlw	0
  3574   002BE4  6E2C               	movwf	floorf@u^0,c
  3575   002BE6  0E00               	movlw	0
  3576   002BE8  6E2D               	movwf	(floorf@u+1)^0,c
  3577   002BEA  0E00               	movlw	0
  3578   002BEC  6E2E               	movwf	(floorf@u+2)^0,c
  3579   002BEE  0E00               	movlw	0
  3580   002BF0  6E2F               	movwf	(floorf@u+3)^0,c
  3581   002BF2  EF17  F016         	goto	l3524
  3582   002BF6                     l3520:
  3583   002BF6  90D8               	bcf	status,0,c
  3584   002BF8  342C               	rlcf	floorf@u^0,w,c
  3585   002BFA  6E20               	movwf	??_floorf^0,c
  3586   002BFC  342D               	rlcf	(floorf@u+1)^0,w,c
  3587   002BFE  6E21               	movwf	(??_floorf+1)^0,c
  3588   002C00  342E               	rlcf	(floorf@u+2)^0,w,c
  3589   002C02  6E22               	movwf	(??_floorf+2)^0,c
  3590   002C04  342F               	rlcf	(floorf@u+3)^0,w,c
  3591   002C06  6E23               	movwf	(??_floorf+3)^0,c
  3592   002C08  5020               	movf	??_floorf^0,w,c
  3593   002C0A  1021               	iorwf	(??_floorf+1)^0,w,c
  3594   002C0C  1022               	iorwf	(??_floorf+2)^0,w,c
  3595   002C0E  1023               	iorwf	(??_floorf+3)^0,w,c
  3596   002C10  B4D8               	btfsc	status,2,c
  3597   002C12  EF0D  F016         	goto	u3531
  3598   002C16  EF0F  F016         	goto	u3530
  3599   002C1A                     u3531:
  3600   002C1A  EF17  F016         	goto	l3524
  3601   002C1E                     u3530:
  3602   002C1E  0E00               	movlw	0
  3603   002C20  6E2C               	movwf	floorf@u^0,c
  3604   002C22  0E00               	movlw	0
  3605   002C24  6E2D               	movwf	(floorf@u+1)^0,c
  3606   002C26  0E80               	movlw	128
  3607   002C28  6E2E               	movwf	(floorf@u+2)^0,c
  3608   002C2A  0EBF               	movlw	191
  3609   002C2C  6E2F               	movwf	(floorf@u+3)^0,c
  3610   002C2E                     l3524:
  3611   002C2E  C02C  F01C         	movff	floorf@u,?_floorf
  3612   002C32  C02D  F01D         	movff	floorf@u+1,?_floorf+1
  3613   002C36  C02E  F01E         	movff	floorf@u+2,?_floorf+2
  3614   002C3A  C02F  F01F         	movff	floorf@u+3,?_floorf+3
  3615   002C3E                     l1169:
  3616   002C3E  0012               	return		;funcret
  3617   002C40                     __end_of_floorf:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function ___fpclassifyf *****************
  3621 ;; Defined at:
  3622 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;  x               4    2[COMRAM] float 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  u               4   12[COMRAM] struct .
  3627 ;;  e               2   10[COMRAM] int 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  2    2[COMRAM] int 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3641 ;;Total ram usage:       14 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 4
  3644 ;; This function calls:
  3645 ;;		Nothing
  3646 ;; This function is called by:
  3647 ;;		_efgtoa
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text9
  3652   00358E                     __ptext9:
  3653                           	callstack 0
  3654   00358E                     ___fpclassifyf:
  3655                           	callstack 22
  3656   00358E  C0E9  F00D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3657   003592  C0EA  F00E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3658   003596  C0EB  F00F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3659   00359A  C0EC  F010         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3660   00359E  C003  F00D         	movff	___fpclassifyf@x,___fpclassifyf@u
  3661   0035A2  C004  F00E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3662   0035A6  C005  F00F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3663   0035AA  C006  F010         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3664   0035AE  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  3665   0035B2  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3666   0035B6  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3667   0035BA  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3668   0035BE  0E18               	movlw	24
  3669   0035C0  EFE7  F01A         	goto	u3350
  3670   0035C4                     u3355:
  3671   0035C4  90D8               	bcf	status,0,c
  3672   0035C6  320A               	rrcf	(??___fpclassifyf+3)^0,f,c
  3673   0035C8  3209               	rrcf	(??___fpclassifyf+2)^0,f,c
  3674   0035CA  3208               	rrcf	(??___fpclassifyf+1)^0,f,c
  3675   0035CC  3207               	rrcf	??___fpclassifyf^0,f,c
  3676   0035CE                     u3350:
  3677   0035CE  2EE8               	decfsz	wreg,f,c
  3678   0035D0  EFE2  F01A         	goto	u3355
  3679   0035D4  5007               	movf	??___fpclassifyf^0,w,c
  3680   0035D6  6E0B               	movwf	___fpclassifyf@e^0,c
  3681   0035D8  6A0C               	clrf	(___fpclassifyf@e+1)^0,c
  3682   0035DA  500B               	movf	___fpclassifyf@e^0,w,c
  3683   0035DC  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3684   0035DE  A4D8               	btfss	status,2,c
  3685   0035E0  EFF4  F01A         	goto	u3361
  3686   0035E4  EFF6  F01A         	goto	u3360
  3687   0035E8                     u3361:
  3688   0035E8  EF16  F01B         	goto	l3482
  3689   0035EC                     u3360:
  3690   0035EC  90D8               	bcf	status,0,c
  3691   0035EE  340D               	rlcf	___fpclassifyf@u^0,w,c
  3692   0035F0  6E07               	movwf	??___fpclassifyf^0,c
  3693   0035F2  340E               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3694   0035F4  6E08               	movwf	(??___fpclassifyf+1)^0,c
  3695   0035F6  340F               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3696   0035F8  6E09               	movwf	(??___fpclassifyf+2)^0,c
  3697   0035FA  3410               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3698   0035FC  6E0A               	movwf	(??___fpclassifyf+3)^0,c
  3699   0035FE  5007               	movf	??___fpclassifyf^0,w,c
  3700   003600  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  3701   003602  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  3702   003604  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  3703   003606  A4D8               	btfss	status,2,c
  3704   003608  EF08  F01B         	goto	u3371
  3705   00360C  EF0A  F01B         	goto	u3370
  3706   003610                     u3371:
  3707   003610  EF10  F01B         	goto	l3478
  3708   003614                     u3370:
  3709   003614  0E00               	movlw	0
  3710   003616  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3711   003618  0E02               	movlw	2
  3712   00361A  6E03               	movwf	?___fpclassifyf^0,c
  3713   00361C  EF45  F01B         	goto	l1155
  3714   003620                     l3478:
  3715   003620  0E00               	movlw	0
  3716   003622  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3717   003624  0E03               	movlw	3
  3718   003626  6E03               	movwf	?___fpclassifyf^0,c
  3719   003628  EF45  F01B         	goto	l1155
  3720   00362C                     l3482:
  3721   00362C  280B               	incf	___fpclassifyf@e^0,w,c
  3722   00362E  100C               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3723   003630  A4D8               	btfss	status,2,c
  3724   003632  EF1D  F01B         	goto	u3381
  3725   003636  EF1F  F01B         	goto	u3380
  3726   00363A                     u3381:
  3727   00363A  EF41  F01B         	goto	l3488
  3728   00363E                     u3380:
  3729   00363E  C00D  F007         	movff	___fpclassifyf@u,??___fpclassifyf
  3730   003642  C00E  F008         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3731   003646  C00F  F009         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3732   00364A  C010  F00A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3733   00364E  0E09               	movlw	9
  3734   003650                     u3395:
  3735   003650  90D8               	bcf	status,0,c
  3736   003652  3607               	rlcf	??___fpclassifyf^0,f,c
  3737   003654  3608               	rlcf	(??___fpclassifyf+1)^0,f,c
  3738   003656  3609               	rlcf	(??___fpclassifyf+2)^0,f,c
  3739   003658  360A               	rlcf	(??___fpclassifyf+3)^0,f,c
  3740   00365A  2EE8               	decfsz	wreg,f,c
  3741   00365C  EF28  F01B         	goto	u3395
  3742   003660  5007               	movf	??___fpclassifyf^0,w,c
  3743   003662  1008               	iorwf	(??___fpclassifyf+1)^0,w,c
  3744   003664  1009               	iorwf	(??___fpclassifyf+2)^0,w,c
  3745   003666  100A               	iorwf	(??___fpclassifyf+3)^0,w,c
  3746   003668  B4D8               	btfsc	status,2,c
  3747   00366A  EF39  F01B         	goto	u3401
  3748   00366E  EF3C  F01B         	goto	u3400
  3749   003672                     u3401:
  3750   003672  0E01               	movlw	1
  3751   003674  EF3D  F01B         	goto	u3410
  3752   003678                     u3400:
  3753   003678  0E00               	movlw	0
  3754   00367A                     u3410:
  3755   00367A  6E03               	movwf	?___fpclassifyf^0,c
  3756   00367C  6A04               	clrf	(?___fpclassifyf+1)^0,c
  3757   00367E  EF45  F01B         	goto	l1155
  3758   003682                     l3488:
  3759   003682  0E00               	movlw	0
  3760   003684  6E04               	movwf	(?___fpclassifyf+1)^0,c
  3761   003686  0E04               	movlw	4
  3762   003688  6E03               	movwf	?___fpclassifyf^0,c
  3763   00368A                     l1155:
  3764   00368A  0012               	return		;funcret
  3765   00368C                     __end_of___fpclassifyf:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function ___fltol *****************
  3769 ;; Defined at:
  3770 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  f1              4    2[COMRAM] int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  exp1            1   11[COMRAM] unsigned char 
  3775 ;;  sign1           1   10[COMRAM] unsigned char 
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  4    2[COMRAM] long 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0
  3780 ;; Tracked objects:
  3781 ;;		On entry : 0/0
  3782 ;;		On exit  : 0/0
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3785 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3789 ;;Total ram usage:       10 bytes
  3790 ;; Hardware stack levels used: 1
  3791 ;; Hardware stack levels required when called: 4
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_efgtoa
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text10
  3800   003384                     __ptext10:
  3801                           	callstack 0
  3802   003384                     ___fltol:
  3803                           	callstack 22
  3804   003384  3405               	rlcf	(___fltol@f1+2)^0,w,c
  3805   003386  3406               	rlcf	(___fltol@f1+3)^0,w,c
  3806   003388  6E0C               	movwf	___fltol@exp1^0,c
  3807   00338A  500C               	movf	___fltol@exp1^0,w,c
  3808   00338C  A4D8               	btfss	status,2,c
  3809   00338E  EFCB  F019         	goto	u3251
  3810   003392  EFCD  F019         	goto	u3250
  3811   003396                     u3251:
  3812   003396  EFD7  F019         	goto	l3414
  3813   00339A                     u3250:
  3814   00339A                     l3410:
  3815   00339A  0E00               	movlw	0
  3816   00339C  6E03               	movwf	?___fltol^0,c
  3817   00339E  0E00               	movlw	0
  3818   0033A0  6E04               	movwf	(?___fltol+1)^0,c
  3819   0033A2  0E00               	movlw	0
  3820   0033A4  6E05               	movwf	(?___fltol+2)^0,c
  3821   0033A6  0E00               	movlw	0
  3822   0033A8  6E06               	movwf	(?___fltol+3)^0,c
  3823   0033AA  EF44  F01A         	goto	l628
  3824   0033AE                     l3414:
  3825   0033AE  C003  F007         	movff	___fltol@f1,??___fltol
  3826   0033B2  C004  F008         	movff	___fltol@f1+1,??___fltol+1
  3827   0033B6  C005  F009         	movff	___fltol@f1+2,??___fltol+2
  3828   0033BA  C006  F00A         	movff	___fltol@f1+3,??___fltol+3
  3829   0033BE  0E20               	movlw	32
  3830   0033C0  EFE7  F019         	goto	u3260
  3831   0033C4                     u3265:
  3832   0033C4  90D8               	bcf	status,0,c
  3833   0033C6  320A               	rrcf	(??___fltol+3)^0,f,c
  3834   0033C8  3209               	rrcf	(??___fltol+2)^0,f,c
  3835   0033CA  3208               	rrcf	(??___fltol+1)^0,f,c
  3836   0033CC  3207               	rrcf	??___fltol^0,f,c
  3837   0033CE                     u3260:
  3838   0033CE  2EE8               	decfsz	wreg,f,c
  3839   0033D0  EFE2  F019         	goto	u3265
  3840   0033D4  5007               	movf	??___fltol^0,w,c
  3841   0033D6  6E0B               	movwf	___fltol@sign1^0,c
  3842   0033D8  8E05               	bsf	(___fltol@f1+2)^0,7,c
  3843   0033DA  0EFF               	movlw	255
  3844   0033DC  1603               	andwf	___fltol@f1^0,f,c
  3845   0033DE  0EFF               	movlw	255
  3846   0033E0  1604               	andwf	(___fltol@f1+1)^0,f,c
  3847   0033E2  0EFF               	movlw	255
  3848   0033E4  1605               	andwf	(___fltol@f1+2)^0,f,c
  3849   0033E6  0E00               	movlw	0
  3850   0033E8  1606               	andwf	(___fltol@f1+3)^0,f,c
  3851   0033EA  0E96               	movlw	150
  3852   0033EC  5E0C               	subwf	___fltol@exp1^0,f,c
  3853   0033EE  BE0C               	btfsc	___fltol@exp1^0,7,c
  3854   0033F0  EFFE  F019         	goto	u3270
  3855   0033F4  EFFC  F019         	goto	u3271
  3856   0033F8                     u3271:
  3857   0033F8  EF14  F01A         	goto	l3434
  3858   0033FC                     u3270:
  3859   0033FC  500C               	movf	___fltol@exp1^0,w,c
  3860   0033FE  0A80               	xorlw	128
  3861   003400  0F97               	addlw	151
  3862   003402  B0D8               	btfsc	status,0,c
  3863   003404  EF06  F01A         	goto	u3281
  3864   003408  EF08  F01A         	goto	u3280
  3865   00340C                     u3281:
  3866   00340C  EF0A  F01A         	goto	l3430
  3867   003410                     u3280:
  3868   003410  EFCD  F019         	goto	l3410
  3869   003414                     l3430:
  3870   003414  90D8               	bcf	status,0,c
  3871   003416  3206               	rrcf	(___fltol@f1+3)^0,f,c
  3872   003418  3205               	rrcf	(___fltol@f1+2)^0,f,c
  3873   00341A  3204               	rrcf	(___fltol@f1+1)^0,f,c
  3874   00341C  3203               	rrcf	___fltol@f1^0,f,c
  3875   00341E  3E0C               	incfsz	___fltol@exp1^0,f,c
  3876   003420  EF0A  F01A         	goto	l3430
  3877   003424  EF2C  F01A         	goto	l3444
  3878   003428                     l3434:
  3879   003428  0E1F               	movlw	31
  3880   00342A  640C               	cpfsgt	___fltol@exp1^0,c
  3881   00342C  EF1A  F01A         	goto	u3291
  3882   003430  EF1C  F01A         	goto	u3290
  3883   003434                     u3291:
  3884   003434  EF24  F01A         	goto	l3442
  3885   003438                     u3290:
  3886   003438  EFCD  F019         	goto	l3410
  3887   00343C                     l3440:
  3888   00343C  90D8               	bcf	status,0,c
  3889   00343E  3603               	rlcf	___fltol@f1^0,f,c
  3890   003440  3604               	rlcf	(___fltol@f1+1)^0,f,c
  3891   003442  3605               	rlcf	(___fltol@f1+2)^0,f,c
  3892   003444  3606               	rlcf	(___fltol@f1+3)^0,f,c
  3893   003446  060C               	decf	___fltol@exp1^0,f,c
  3894   003448                     l3442:
  3895   003448  500C               	movf	___fltol@exp1^0,w,c
  3896   00344A  A4D8               	btfss	status,2,c
  3897   00344C  EF2A  F01A         	goto	u3301
  3898   003450  EF2C  F01A         	goto	u3300
  3899   003454                     u3301:
  3900   003454  EF1E  F01A         	goto	l3440
  3901   003458                     u3300:
  3902   003458                     l3444:
  3903   003458  500B               	movf	___fltol@sign1^0,w,c
  3904   00345A  B4D8               	btfsc	status,2,c
  3905   00345C  EF32  F01A         	goto	u3311
  3906   003460  EF34  F01A         	goto	u3310
  3907   003464                     u3311:
  3908   003464  EF3C  F01A         	goto	l3448
  3909   003468                     u3310:
  3910   003468  1E06               	comf	(___fltol@f1+3)^0,f,c
  3911   00346A  1E05               	comf	(___fltol@f1+2)^0,f,c
  3912   00346C  1E04               	comf	(___fltol@f1+1)^0,f,c
  3913   00346E  6C03               	negf	___fltol@f1^0,c
  3914   003470  0E00               	movlw	0
  3915   003472  2204               	addwfc	(___fltol@f1+1)^0,f,c
  3916   003474  2205               	addwfc	(___fltol@f1+2)^0,f,c
  3917   003476  2206               	addwfc	(___fltol@f1+3)^0,f,c
  3918   003478                     l3448:
  3919   003478  C003  F003         	movff	___fltol@f1,?___fltol
  3920   00347C  C004  F004         	movff	___fltol@f1+1,?___fltol+1
  3921   003480  C005  F005         	movff	___fltol@f1+2,?___fltol+2
  3922   003484  C006  F006         	movff	___fltol@f1+3,?___fltol+3
  3923   003488                     l628:
  3924   003488  0012               	return		;funcret
  3925   00348A                     __end_of___fltol:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function ___flsub *****************
  3929 ;; Defined at:
  3930 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  b               4   27[COMRAM] long 
  3933 ;;  a               4   31[COMRAM] long 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  4   27[COMRAM] long 
  3938 ;; Registers used:
  3939 ;;		wreg, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        8 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 5
  3952 ;; This function calls:
  3953 ;;		___fladd
  3954 ;; This function is called by:
  3955 ;;		_efgtoa
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text11
  3960   003BC0                     __ptext11:
  3961                           	callstack 0
  3962   003BC0                     ___flsub:
  3963                           	callstack 21
  3964   003BC0  0E00               	movlw	0
  3965   003BC2  1A20               	xorwf	___flsub@a^0,f,c
  3966   003BC4  0E00               	movlw	0
  3967   003BC6  1A21               	xorwf	(___flsub@a+1)^0,f,c
  3968   003BC8  0E00               	movlw	0
  3969   003BCA  1A22               	xorwf	(___flsub@a+2)^0,f,c
  3970   003BCC  0E80               	movlw	128
  3971   003BCE  1A23               	xorwf	(___flsub@a+3)^0,f,c
  3972   003BD0  C01C  F003         	movff	___flsub@b,___fladd@b
  3973   003BD4  C01D  F004         	movff	___flsub@b+1,___fladd@b+1
  3974   003BD8  C01E  F005         	movff	___flsub@b+2,___fladd@b+2
  3975   003BDC  C01F  F006         	movff	___flsub@b+3,___fladd@b+3
  3976   003BE0  C020  F007         	movff	___flsub@a,___fladd@a
  3977   003BE4  C021  F008         	movff	___flsub@a+1,___fladd@a+1
  3978   003BE8  C022  F009         	movff	___flsub@a+2,___fladd@a+2
  3979   003BEC  C023  F00A         	movff	___flsub@a+3,___fladd@a+3
  3980   003BF0  EC14  F00C         	call	___fladd	;wreg free
  3981   003BF4  C003  F01C         	movff	?___fladd,?___flsub
  3982   003BF8  C004  F01D         	movff	?___fladd+1,?___flsub+1
  3983   003BFC  C005  F01E         	movff	?___fladd+2,?___flsub+2
  3984   003C00  C006  F01F         	movff	?___fladd+3,?___flsub+3
  3985   003C04  0012               	return		;funcret
  3986   003C06                     __end_of___flsub:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function ___fladd *****************
  3990 ;; Defined at:
  3991 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  b               4    2[COMRAM] long 
  3994 ;;  a               4    6[COMRAM] long 
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  grs             1   17[COMRAM] unsigned char 
  3997 ;;  bexp            1   16[COMRAM] unsigned char 
  3998 ;;  aexp            1   15[COMRAM] unsigned char 
  3999 ;;  signs           1   14[COMRAM] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  4    2[COMRAM] unsigned char 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4009 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4010 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;Total ram usage:       16 bytes
  4014 ;; Hardware stack levels used: 1
  4015 ;; Hardware stack levels required when called: 4
  4016 ;; This function calls:
  4017 ;;		Nothing
  4018 ;; This function is called by:
  4019 ;;		___flsub
  4020 ;;		_efgtoa
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           	psect	text12
  4025   001828                     __ptext12:
  4026                           	callstack 0
  4027   001828                     ___fladd:
  4028                           	callstack 21
  4029   001828  5006               	movf	(___fladd@b+3)^0,w,c
  4030   00182A  0B80               	andlw	128
  4031   00182C  6E0F               	movwf	___fladd@signs^0,c
  4032   00182E  5006               	movf	(___fladd@b+3)^0,w,c
  4033   001830  2406               	addwf	(___fladd@b+3)^0,w,c
  4034   001832  6E11               	movwf	___fladd@bexp^0,c
  4035   001834  AE05               	btfss	(___fladd@b+2)^0,7,c
  4036   001836  EF1F  F00C         	goto	u2211
  4037   00183A  EF21  F00C         	goto	u2210
  4038   00183E                     u2211:
  4039   00183E  EF22  F00C         	goto	l2804
  4040   001842                     u2210:
  4041   001842  8011               	bsf	___fladd@bexp^0,0,c
  4042   001844                     l2804:
  4043   001844  5011               	movf	___fladd@bexp^0,w,c
  4044   001846  B4D8               	btfsc	status,2,c
  4045   001848  EF28  F00C         	goto	u2221
  4046   00184C  EF2A  F00C         	goto	u2220
  4047   001850                     u2221:
  4048   001850  EF3F  F00C         	goto	l2814
  4049   001854                     u2220:
  4050   001854  2811               	incf	___fladd@bexp^0,w,c
  4051   001856  A4D8               	btfss	status,2,c
  4052   001858  EF30  F00C         	goto	u2231
  4053   00185C  EF32  F00C         	goto	u2230
  4054   001860                     u2231:
  4055   001860  EF3A  F00C         	goto	l2810
  4056   001864                     u2230:
  4057   001864  0E00               	movlw	0
  4058   001866  6E03               	movwf	___fladd@b^0,c
  4059   001868  0E00               	movlw	0
  4060   00186A  6E04               	movwf	(___fladd@b+1)^0,c
  4061   00186C  0E00               	movlw	0
  4062   00186E  6E05               	movwf	(___fladd@b+2)^0,c
  4063   001870  0E00               	movlw	0
  4064   001872  6E06               	movwf	(___fladd@b+3)^0,c
  4065   001874                     l2810:
  4066   001874  8E05               	bsf	(___fladd@b+2)^0,7,c
  4067   001876  0E00               	movlw	0
  4068   001878  6E06               	movwf	(___fladd@b+3)^0,c
  4069   00187A  EF47  F00C         	goto	l2816
  4070   00187E                     l2814:
  4071   00187E  0E00               	movlw	0
  4072   001880  6E03               	movwf	___fladd@b^0,c
  4073   001882  0E00               	movlw	0
  4074   001884  6E04               	movwf	(___fladd@b+1)^0,c
  4075   001886  0E00               	movlw	0
  4076   001888  6E05               	movwf	(___fladd@b+2)^0,c
  4077   00188A  0E00               	movlw	0
  4078   00188C  6E06               	movwf	(___fladd@b+3)^0,c
  4079   00188E                     l2816:
  4080   00188E  500A               	movf	(___fladd@a+3)^0,w,c
  4081   001890  0B80               	andlw	128
  4082   001892  6E10               	movwf	___fladd@aexp^0,c
  4083   001894  500F               	movf	___fladd@signs^0,w,c
  4084   001896  1810               	xorwf	___fladd@aexp^0,w,c
  4085   001898  B4D8               	btfsc	status,2,c
  4086   00189A  EF51  F00C         	goto	u2241
  4087   00189E  EF53  F00C         	goto	u2240
  4088   0018A2                     u2241:
  4089   0018A2  EF54  F00C         	goto	l2822
  4090   0018A6                     u2240:
  4091   0018A6  8C0F               	bsf	___fladd@signs^0,6,c
  4092   0018A8                     l2822:
  4093   0018A8  500A               	movf	(___fladd@a+3)^0,w,c
  4094   0018AA  240A               	addwf	(___fladd@a+3)^0,w,c
  4095   0018AC  6E10               	movwf	___fladd@aexp^0,c
  4096   0018AE  AE09               	btfss	(___fladd@a+2)^0,7,c
  4097   0018B0  EF5C  F00C         	goto	u2251
  4098   0018B4  EF5E  F00C         	goto	u2250
  4099   0018B8                     u2251:
  4100   0018B8  EF5F  F00C         	goto	l2828
  4101   0018BC                     u2250:
  4102   0018BC  8010               	bsf	___fladd@aexp^0,0,c
  4103   0018BE                     l2828:
  4104   0018BE  5010               	movf	___fladd@aexp^0,w,c
  4105   0018C0  B4D8               	btfsc	status,2,c
  4106   0018C2  EF65  F00C         	goto	u2261
  4107   0018C6  EF67  F00C         	goto	u2260
  4108   0018CA                     u2261:
  4109   0018CA  EF7C  F00C         	goto	l2838
  4110   0018CE                     u2260:
  4111   0018CE  2810               	incf	___fladd@aexp^0,w,c
  4112   0018D0  A4D8               	btfss	status,2,c
  4113   0018D2  EF6D  F00C         	goto	u2271
  4114   0018D6  EF6F  F00C         	goto	u2270
  4115   0018DA                     u2271:
  4116   0018DA  EF77  F00C         	goto	l2834
  4117   0018DE                     u2270:
  4118   0018DE  0E00               	movlw	0
  4119   0018E0  6E07               	movwf	___fladd@a^0,c
  4120   0018E2  0E00               	movlw	0
  4121   0018E4  6E08               	movwf	(___fladd@a+1)^0,c
  4122   0018E6  0E00               	movlw	0
  4123   0018E8  6E09               	movwf	(___fladd@a+2)^0,c
  4124   0018EA  0E00               	movlw	0
  4125   0018EC  6E0A               	movwf	(___fladd@a+3)^0,c
  4126   0018EE                     l2834:
  4127   0018EE  8E09               	bsf	(___fladd@a+2)^0,7,c
  4128   0018F0  0E00               	movlw	0
  4129   0018F2  6E0A               	movwf	(___fladd@a+3)^0,c
  4130   0018F4  EF84  F00C         	goto	l2840
  4131   0018F8                     l2838:
  4132   0018F8  0E00               	movlw	0
  4133   0018FA  6E07               	movwf	___fladd@a^0,c
  4134   0018FC  0E00               	movlw	0
  4135   0018FE  6E08               	movwf	(___fladd@a+1)^0,c
  4136   001900  0E00               	movlw	0
  4137   001902  6E09               	movwf	(___fladd@a+2)^0,c
  4138   001904  0E00               	movlw	0
  4139   001906  6E0A               	movwf	(___fladd@a+3)^0,c
  4140   001908                     l2840:
  4141   001908  5011               	movf	___fladd@bexp^0,w,c
  4142   00190A  5C10               	subwf	___fladd@aexp^0,w,c
  4143   00190C  B0D8               	btfsc	status,0,c
  4144   00190E  EF8B  F00C         	goto	u2281
  4145   001912  EF8D  F00C         	goto	u2280
  4146   001916                     u2281:
  4147   001916  EFB4  F00C         	goto	l2876
  4148   00191A                     u2280:
  4149   00191A  AC0F               	btfss	___fladd@signs^0,6,c
  4150   00191C  EF92  F00C         	goto	u2291
  4151   001920  EF94  F00C         	goto	u2290
  4152   001924                     u2291:
  4153   001924  EF96  F00C         	goto	l2846
  4154   001928                     u2290:
  4155   001928  0E80               	movlw	128
  4156   00192A  1A0F               	xorwf	___fladd@signs^0,f,c
  4157   00192C                     l2846:
  4158   00192C  C011  F012         	movff	___fladd@bexp,___fladd@grs
  4159   001930  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4160   001934  C012  F010         	movff	___fladd@grs,___fladd@aexp
  4161   001938  C003  F012         	movff	___fladd@b,___fladd@grs
  4162   00193C  C007  F003         	movff	___fladd@a,___fladd@b
  4163   001940  C012  F007         	movff	___fladd@grs,___fladd@a
  4164   001944  C004  F012         	movff	___fladd@b+1,___fladd@grs
  4165   001948  C008  F004         	movff	___fladd@a+1,___fladd@b+1
  4166   00194C  C012  F008         	movff	___fladd@grs,___fladd@a+1
  4167   001950  C005  F012         	movff	___fladd@b+2,___fladd@grs
  4168   001954  C009  F005         	movff	___fladd@a+2,___fladd@b+2
  4169   001958  C012  F009         	movff	___fladd@grs,___fladd@a+2
  4170   00195C  C006  F012         	movff	___fladd@b+3,___fladd@grs
  4171   001960  C00A  F006         	movff	___fladd@a+3,___fladd@b+3
  4172   001964  C012  F00A         	movff	___fladd@grs,___fladd@a+3
  4173   001968                     l2876:
  4174   001968  0E00               	movlw	0
  4175   00196A  6E12               	movwf	___fladd@grs^0,c
  4176   00196C  5011               	movf	___fladd@bexp^0,w,c
  4177   00196E  C010  F00B         	movff	___fladd@aexp,??___fladd
  4178   001972  6A0C               	clrf	(??___fladd+1)^0,c
  4179   001974  5E0B               	subwf	??___fladd^0,f,c
  4180   001976  0E00               	movlw	0
  4181   001978  5A0C               	subwfb	(??___fladd+1)^0,f,c
  4182   00197A  BE0C               	btfsc	(??___fladd+1)^0,7,c
  4183   00197C  EFC9  F00C         	goto	u2301
  4184   001980  500C               	movf	(??___fladd+1)^0,w,c
  4185   001982  E109               	bnz	u2300
  4186   001984  0E1A               	movlw	26
  4187   001986  5C0B               	subwf	??___fladd^0,w,c
  4188   001988  A0D8               	btfss	status,0,c
  4189   00198A  EFC9  F00C         	goto	u2301
  4190   00198E  EFCB  F00C         	goto	u2300
  4191   001992                     u2301:
  4192   001992  EF02  F00D         	goto	l860
  4193   001996                     u2300:
  4194   001996  5003               	movf	___fladd@b^0,w,c
  4195   001998  1004               	iorwf	(___fladd@b+1)^0,w,c
  4196   00199A  1005               	iorwf	(___fladd@b+2)^0,w,c
  4197   00199C  1006               	iorwf	(___fladd@b+3)^0,w,c
  4198   00199E  A4D8               	btfss	status,2,c
  4199   0019A0  EFD4  F00C         	goto	u2311
  4200   0019A4  EFD7  F00C         	goto	u2310
  4201   0019A8                     u2311:
  4202   0019A8  0E01               	movlw	1
  4203   0019AA  EFD8  F00C         	goto	u2320
  4204   0019AE                     u2310:
  4205   0019AE  0E00               	movlw	0
  4206   0019B0                     u2320:
  4207   0019B0  6E12               	movwf	___fladd@grs^0,c
  4208   0019B2  0E00               	movlw	0
  4209   0019B4  6E03               	movwf	___fladd@b^0,c
  4210   0019B6  0E00               	movlw	0
  4211   0019B8  6E04               	movwf	(___fladd@b+1)^0,c
  4212   0019BA  0E00               	movlw	0
  4213   0019BC  6E05               	movwf	(___fladd@b+2)^0,c
  4214   0019BE  0E00               	movlw	0
  4215   0019C0  6E06               	movwf	(___fladd@b+3)^0,c
  4216   0019C2  C010  F011         	movff	___fladd@aexp,___fladd@bexp
  4217   0019C6  EF0B  F00D         	goto	l859
  4218   0019CA                     l861:
  4219   0019CA  A012               	btfss	___fladd@grs^0,0,c
  4220   0019CC  EFEA  F00C         	goto	u2331
  4221   0019D0  EFEC  F00C         	goto	u2330
  4222   0019D4                     u2331:
  4223   0019D4  EFF2  F00C         	goto	l2888
  4224   0019D8                     u2330:
  4225   0019D8  90D8               	bcf	status,0,c
  4226   0019DA  3012               	rrcf	___fladd@grs^0,w,c
  4227   0019DC  0901               	iorlw	1
  4228   0019DE  6E12               	movwf	___fladd@grs^0,c
  4229   0019E0  EFF4  F00C         	goto	l2890
  4230   0019E4                     l2888:
  4231   0019E4  90D8               	bcf	status,0,c
  4232   0019E6  3212               	rrcf	___fladd@grs^0,f,c
  4233   0019E8                     l2890:
  4234   0019E8  A003               	btfss	___fladd@b^0,0,c
  4235   0019EA  EFF9  F00C         	goto	u2341
  4236   0019EE  EFFB  F00C         	goto	u2340
  4237   0019F2                     u2341:
  4238   0019F2  EFFC  F00C         	goto	l2894
  4239   0019F6                     u2340:
  4240   0019F6  8E12               	bsf	___fladd@grs^0,7,c
  4241   0019F8                     l2894:
  4242   0019F8  3406               	rlcf	(___fladd@b+3)^0,w,c
  4243   0019FA  3206               	rrcf	(___fladd@b+3)^0,f,c
  4244   0019FC  3205               	rrcf	(___fladd@b+2)^0,f,c
  4245   0019FE  3204               	rrcf	(___fladd@b+1)^0,f,c
  4246   001A00  3203               	rrcf	___fladd@b^0,f,c
  4247   001A02  2A11               	incf	___fladd@bexp^0,f,c
  4248   001A04                     l860:
  4249   001A04  5010               	movf	___fladd@aexp^0,w,c
  4250   001A06  5C11               	subwf	___fladd@bexp^0,w,c
  4251   001A08  A0D8               	btfss	status,0,c
  4252   001A0A  EF09  F00D         	goto	u2351
  4253   001A0E  EF0B  F00D         	goto	u2350
  4254   001A12                     u2351:
  4255   001A12  EFE5  F00C         	goto	l861
  4256   001A16                     u2350:
  4257   001A16                     l859:
  4258   001A16  BC0F               	btfsc	___fladd@signs^0,6,c
  4259   001A18  EF10  F00D         	goto	u2361
  4260   001A1C  EF12  F00D         	goto	u2360
  4261   001A20                     u2361:
  4262   001A20  EF52  F00D         	goto	l2922
  4263   001A24                     u2360:
  4264   001A24  5011               	movf	___fladd@bexp^0,w,c
  4265   001A26  A4D8               	btfss	status,2,c
  4266   001A28  EF18  F00D         	goto	u2371
  4267   001A2C  EF1A  F00D         	goto	u2370
  4268   001A30                     u2371:
  4269   001A30  EF24  F00D         	goto	l2904
  4270   001A34                     u2370:
  4271   001A34  0E00               	movlw	0
  4272   001A36  6E03               	movwf	?___fladd^0,c
  4273   001A38  0E00               	movlw	0
  4274   001A3A  6E04               	movwf	(?___fladd+1)^0,c
  4275   001A3C  0E00               	movlw	0
  4276   001A3E  6E05               	movwf	(?___fladd+2)^0,c
  4277   001A40  0E00               	movlw	0
  4278   001A42  6E06               	movwf	(?___fladd+3)^0,c
  4279   001A44  EF73  F00E         	goto	l868
  4280   001A48                     l2904:
  4281   001A48  5007               	movf	___fladd@a^0,w,c
  4282   001A4A  2603               	addwf	___fladd@b^0,f,c
  4283   001A4C  5008               	movf	(___fladd@a+1)^0,w,c
  4284   001A4E  2204               	addwfc	(___fladd@b+1)^0,f,c
  4285   001A50  5009               	movf	(___fladd@a+2)^0,w,c
  4286   001A52  2205               	addwfc	(___fladd@b+2)^0,f,c
  4287   001A54  500A               	movf	(___fladd@a+3)^0,w,c
  4288   001A56  2206               	addwfc	(___fladd@b+3)^0,f,c
  4289   001A58  A006               	btfss	(___fladd@b+3)^0,0,c
  4290   001A5A  EF31  F00D         	goto	u2381
  4291   001A5E  EF33  F00D         	goto	u2380
  4292   001A62                     u2381:
  4293   001A62  EFDF  F00D         	goto	l2958
  4294   001A66                     u2380:
  4295   001A66  A012               	btfss	___fladd@grs^0,0,c
  4296   001A68  EF38  F00D         	goto	u2391
  4297   001A6C  EF3A  F00D         	goto	u2390
  4298   001A70                     u2391:
  4299   001A70  EF40  F00D         	goto	l2912
  4300   001A74                     u2390:
  4301   001A74  90D8               	bcf	status,0,c
  4302   001A76  3012               	rrcf	___fladd@grs^0,w,c
  4303   001A78  0901               	iorlw	1
  4304   001A7A  6E12               	movwf	___fladd@grs^0,c
  4305   001A7C  EF42  F00D         	goto	l2914
  4306   001A80                     l2912:
  4307   001A80  90D8               	bcf	status,0,c
  4308   001A82  3212               	rrcf	___fladd@grs^0,f,c
  4309   001A84                     l2914:
  4310   001A84  A003               	btfss	___fladd@b^0,0,c
  4311   001A86  EF47  F00D         	goto	u2401
  4312   001A8A  EF49  F00D         	goto	u2400
  4313   001A8E                     u2401:
  4314   001A8E  EF4A  F00D         	goto	l2918
  4315   001A92                     u2400:
  4316   001A92  8E12               	bsf	___fladd@grs^0,7,c
  4317   001A94                     l2918:
  4318   001A94  3406               	rlcf	(___fladd@b+3)^0,w,c
  4319   001A96  3206               	rrcf	(___fladd@b+3)^0,f,c
  4320   001A98  3205               	rrcf	(___fladd@b+2)^0,f,c
  4321   001A9A  3204               	rrcf	(___fladd@b+1)^0,f,c
  4322   001A9C  3203               	rrcf	___fladd@b^0,f,c
  4323   001A9E  2A11               	incf	___fladd@bexp^0,f,c
  4324   001AA0  EFDF  F00D         	goto	l2958
  4325   001AA4                     l2922:
  4326   001AA4  5007               	movf	___fladd@a^0,w,c
  4327   001AA6  5C03               	subwf	___fladd@b^0,w,c
  4328   001AA8  5008               	movf	(___fladd@a+1)^0,w,c
  4329   001AAA  5804               	subwfb	(___fladd@b+1)^0,w,c
  4330   001AAC  5009               	movf	(___fladd@a+2)^0,w,c
  4331   001AAE  5805               	subwfb	(___fladd@b+2)^0,w,c
  4332   001AB0  5006               	movf	(___fladd@b+3)^0,w,c
  4333   001AB2  0A80               	xorlw	128
  4334   001AB4  6E0B               	movwf	??___fladd^0,c
  4335   001AB6  500A               	movf	(___fladd@a+3)^0,w,c
  4336   001AB8  0A80               	xorlw	128
  4337   001ABA  580B               	subwfb	??___fladd^0,w,c
  4338   001ABC  B0D8               	btfsc	status,0,c
  4339   001ABE  EF63  F00D         	goto	u2411
  4340   001AC2  EF65  F00D         	goto	u2410
  4341   001AC6                     u2411:
  4342   001AC6  EF90  F00D         	goto	l2932
  4343   001ACA                     u2410:
  4344   001ACA  5003               	movf	___fladd@b^0,w,c
  4345   001ACC  5C07               	subwf	___fladd@a^0,w,c
  4346   001ACE  6E0B               	movwf	??___fladd^0,c
  4347   001AD0  5004               	movf	(___fladd@b+1)^0,w,c
  4348   001AD2  5808               	subwfb	(___fladd@a+1)^0,w,c
  4349   001AD4  6E0C               	movwf	(??___fladd+1)^0,c
  4350   001AD6  5005               	movf	(___fladd@b+2)^0,w,c
  4351   001AD8  5809               	subwfb	(___fladd@a+2)^0,w,c
  4352   001ADA  6E0D               	movwf	(??___fladd+2)^0,c
  4353   001ADC  5006               	movf	(___fladd@b+3)^0,w,c
  4354   001ADE  580A               	subwfb	(___fladd@a+3)^0,w,c
  4355   001AE0  6E0E               	movwf	(??___fladd+3)^0,c
  4356   001AE2  0EFF               	movlw	255
  4357   001AE4  240B               	addwf	??___fladd^0,w,c
  4358   001AE6  6E03               	movwf	___fladd@b^0,c
  4359   001AE8  0EFF               	movlw	255
  4360   001AEA  200C               	addwfc	(??___fladd+1)^0,w,c
  4361   001AEC  6E04               	movwf	(___fladd@b+1)^0,c
  4362   001AEE  0EFF               	movlw	255
  4363   001AF0  200D               	addwfc	(??___fladd+2)^0,w,c
  4364   001AF2  6E05               	movwf	(___fladd@b+2)^0,c
  4365   001AF4  0EFF               	movlw	255
  4366   001AF6  200E               	addwfc	(??___fladd+3)^0,w,c
  4367   001AF8  6E06               	movwf	(___fladd@b+3)^0,c
  4368   001AFA  0E80               	movlw	128
  4369   001AFC  1A0F               	xorwf	___fladd@signs^0,f,c
  4370   001AFE  6C12               	negf	___fladd@grs^0,c
  4371   001B00  5012               	movf	___fladd@grs^0,w,c
  4372   001B02  A4D8               	btfss	status,2,c
  4373   001B04  EF86  F00D         	goto	u2421
  4374   001B08  EF88  F00D         	goto	u2420
  4375   001B0C                     u2421:
  4376   001B0C  EF98  F00D         	goto	l876
  4377   001B10                     u2420:
  4378   001B10  0E01               	movlw	1
  4379   001B12  2603               	addwf	___fladd@b^0,f,c
  4380   001B14  0E00               	movlw	0
  4381   001B16  2204               	addwfc	(___fladd@b+1)^0,f,c
  4382   001B18  2205               	addwfc	(___fladd@b+2)^0,f,c
  4383   001B1A  2206               	addwfc	(___fladd@b+3)^0,f,c
  4384   001B1C  EF98  F00D         	goto	l876
  4385   001B20                     l2932:
  4386   001B20  5007               	movf	___fladd@a^0,w,c
  4387   001B22  5E03               	subwf	___fladd@b^0,f,c
  4388   001B24  5008               	movf	(___fladd@a+1)^0,w,c
  4389   001B26  5A04               	subwfb	(___fladd@b+1)^0,f,c
  4390   001B28  5009               	movf	(___fladd@a+2)^0,w,c
  4391   001B2A  5A05               	subwfb	(___fladd@b+2)^0,f,c
  4392   001B2C  500A               	movf	(___fladd@a+3)^0,w,c
  4393   001B2E  5A06               	subwfb	(___fladd@b+3)^0,f,c
  4394   001B30                     l876:
  4395   001B30  5003               	movf	___fladd@b^0,w,c
  4396   001B32  1004               	iorwf	(___fladd@b+1)^0,w,c
  4397   001B34  1005               	iorwf	(___fladd@b+2)^0,w,c
  4398   001B36  1006               	iorwf	(___fladd@b+3)^0,w,c
  4399   001B38  A4D8               	btfss	status,2,c
  4400   001B3A  EFA1  F00D         	goto	u2431
  4401   001B3E  EFA3  F00D         	goto	u2430
  4402   001B42                     u2431:
  4403   001B42  EFD8  F00D         	goto	l2956
  4404   001B46                     u2430:
  4405   001B46  5012               	movf	___fladd@grs^0,w,c
  4406   001B48  A4D8               	btfss	status,2,c
  4407   001B4A  EFA9  F00D         	goto	u2441
  4408   001B4E  EFAB  F00D         	goto	u2440
  4409   001B52                     u2441:
  4410   001B52  EFD8  F00D         	goto	l2956
  4411   001B56                     u2440:
  4412   001B56  0E00               	movlw	0
  4413   001B58  6E03               	movwf	?___fladd^0,c
  4414   001B5A  0E00               	movlw	0
  4415   001B5C  6E04               	movwf	(?___fladd+1)^0,c
  4416   001B5E  0E00               	movlw	0
  4417   001B60  6E05               	movwf	(?___fladd+2)^0,c
  4418   001B62  0E00               	movlw	0
  4419   001B64  6E06               	movwf	(?___fladd+3)^0,c
  4420   001B66  EF73  F00E         	goto	l868
  4421   001B6A                     l2940:
  4422   001B6A  90D8               	bcf	status,0,c
  4423   001B6C  3603               	rlcf	___fladd@b^0,f,c
  4424   001B6E  3604               	rlcf	(___fladd@b+1)^0,f,c
  4425   001B70  3605               	rlcf	(___fladd@b+2)^0,f,c
  4426   001B72  3606               	rlcf	(___fladd@b+3)^0,f,c
  4427   001B74  AE12               	btfss	___fladd@grs^0,7,c
  4428   001B76  EFBF  F00D         	goto	u2451
  4429   001B7A  EFC1  F00D         	goto	u2450
  4430   001B7E                     u2451:
  4431   001B7E  EFC2  F00D         	goto	l2946
  4432   001B82                     u2450:
  4433   001B82  8003               	bsf	___fladd@b^0,0,c
  4434   001B84                     l2946:
  4435   001B84  A012               	btfss	___fladd@grs^0,0,c
  4436   001B86  EFC7  F00D         	goto	u2461
  4437   001B8A  EFC9  F00D         	goto	u2460
  4438   001B8E                     u2461:
  4439   001B8E  EFCD  F00D         	goto	l2950
  4440   001B92                     u2460:
  4441   001B92  80D8               	bsf	status,0,c
  4442   001B94  3612               	rlcf	___fladd@grs^0,f,c
  4443   001B96  EFCF  F00D         	goto	l2952
  4444   001B9A                     l2950:
  4445   001B9A  90D8               	bcf	status,0,c
  4446   001B9C  3612               	rlcf	___fladd@grs^0,f,c
  4447   001B9E                     l2952:
  4448   001B9E  5011               	movf	___fladd@bexp^0,w,c
  4449   001BA0  B4D8               	btfsc	status,2,c
  4450   001BA2  EFD5  F00D         	goto	u2471
  4451   001BA6  EFD7  F00D         	goto	u2470
  4452   001BAA                     u2471:
  4453   001BAA  EFD8  F00D         	goto	l2956
  4454   001BAE                     u2470:
  4455   001BAE  0611               	decf	___fladd@bexp^0,f,c
  4456   001BB0                     l2956:
  4457   001BB0  AE05               	btfss	(___fladd@b+2)^0,7,c
  4458   001BB2  EFDD  F00D         	goto	u2481
  4459   001BB6  EFDF  F00D         	goto	u2480
  4460   001BBA                     u2481:
  4461   001BBA  EFB5  F00D         	goto	l2940
  4462   001BBE                     u2480:
  4463   001BBE                     l2958:
  4464   001BBE  0E00               	movlw	0
  4465   001BC0  6E10               	movwf	___fladd@aexp^0,c
  4466   001BC2  AE12               	btfss	___fladd@grs^0,7,c
  4467   001BC4  EFE6  F00D         	goto	u2491
  4468   001BC8  EFE8  F00D         	goto	u2490
  4469   001BCC                     u2491:
  4470   001BCC  EF00  F00E         	goto	l885
  4471   001BD0                     u2490:
  4472   001BD0  C012  F00B         	movff	___fladd@grs,??___fladd
  4473   001BD4  0E7F               	movlw	127
  4474   001BD6  160B               	andwf	??___fladd^0,f,c
  4475   001BD8  B4D8               	btfsc	status,2,c
  4476   001BDA  EFF1  F00D         	goto	u2501
  4477   001BDE  EFF3  F00D         	goto	u2500
  4478   001BE2                     u2501:
  4479   001BE2  EFF7  F00D         	goto	l886
  4480   001BE6                     u2500:
  4481   001BE6                     l2964:
  4482   001BE6  0E01               	movlw	1
  4483   001BE8  6E10               	movwf	___fladd@aexp^0,c
  4484   001BEA  EF00  F00E         	goto	l885
  4485   001BEE                     l886:
  4486   001BEE  A003               	btfss	___fladd@b^0,0,c
  4487   001BF0  EFFC  F00D         	goto	u2511
  4488   001BF4  EFFE  F00D         	goto	u2510
  4489   001BF8                     u2511:
  4490   001BF8  EF00  F00E         	goto	l885
  4491   001BFC                     u2510:
  4492   001BFC  EFF3  F00D         	goto	l2964
  4493   001C00                     l885:
  4494   001C00  5010               	movf	___fladd@aexp^0,w,c
  4495   001C02  B4D8               	btfsc	status,2,c
  4496   001C04  EF06  F00E         	goto	u2521
  4497   001C08  EF08  F00E         	goto	u2520
  4498   001C0C                     u2521:
  4499   001C0C  EF33  F00E         	goto	l2976
  4500   001C10                     u2520:
  4501   001C10  0E01               	movlw	1
  4502   001C12  2603               	addwf	___fladd@b^0,f,c
  4503   001C14  0E00               	movlw	0
  4504   001C16  2204               	addwfc	(___fladd@b+1)^0,f,c
  4505   001C18  2205               	addwfc	(___fladd@b+2)^0,f,c
  4506   001C1A  2206               	addwfc	(___fladd@b+3)^0,f,c
  4507   001C1C  A006               	btfss	(___fladd@b+3)^0,0,c
  4508   001C1E  EF13  F00E         	goto	u2531
  4509   001C22  EF15  F00E         	goto	u2530
  4510   001C26                     u2531:
  4511   001C26  EF33  F00E         	goto	l2976
  4512   001C2A                     u2530:
  4513   001C2A  C003  F00B         	movff	___fladd@b,??___fladd
  4514   001C2E  C004  F00C         	movff	___fladd@b+1,??___fladd+1
  4515   001C32  C005  F00D         	movff	___fladd@b+2,??___fladd+2
  4516   001C36  C006  F00E         	movff	___fladd@b+3,??___fladd+3
  4517   001C3A  340E               	rlcf	(??___fladd+3)^0,w,c
  4518   001C3C  320E               	rrcf	(??___fladd+3)^0,f,c
  4519   001C3E  320D               	rrcf	(??___fladd+2)^0,f,c
  4520   001C40  320C               	rrcf	(??___fladd+1)^0,f,c
  4521   001C42  320B               	rrcf	??___fladd^0,f,c
  4522   001C44  C00B  F003         	movff	??___fladd,___fladd@b
  4523   001C48  C00C  F004         	movff	??___fladd+1,___fladd@b+1
  4524   001C4C  C00D  F005         	movff	??___fladd+2,___fladd@b+2
  4525   001C50  C00E  F006         	movff	??___fladd+3,___fladd@b+3
  4526   001C54  2811               	incf	___fladd@bexp^0,w,c
  4527   001C56  B4D8               	btfsc	status,2,c
  4528   001C58  EF30  F00E         	goto	u2541
  4529   001C5C  EF32  F00E         	goto	u2540
  4530   001C60                     u2541:
  4531   001C60  EF33  F00E         	goto	l2976
  4532   001C64                     u2540:
  4533   001C64  2A11               	incf	___fladd@bexp^0,f,c
  4534   001C66                     l2976:
  4535   001C66  2811               	incf	___fladd@bexp^0,w,c
  4536   001C68  B4D8               	btfsc	status,2,c
  4537   001C6A  EF39  F00E         	goto	u2551
  4538   001C6E  EF3B  F00E         	goto	u2550
  4539   001C72                     u2551:
  4540   001C72  EF43  F00E         	goto	l2980
  4541   001C76                     u2550:
  4542   001C76  5011               	movf	___fladd@bexp^0,w,c
  4543   001C78  A4D8               	btfss	status,2,c
  4544   001C7A  EF41  F00E         	goto	u2561
  4545   001C7E  EF43  F00E         	goto	u2560
  4546   001C82                     u2561:
  4547   001C82  EF55  F00E         	goto	l2984
  4548   001C86                     u2560:
  4549   001C86                     l2980:
  4550   001C86  0E00               	movlw	0
  4551   001C88  6E03               	movwf	___fladd@b^0,c
  4552   001C8A  0E00               	movlw	0
  4553   001C8C  6E04               	movwf	(___fladd@b+1)^0,c
  4554   001C8E  0E00               	movlw	0
  4555   001C90  6E05               	movwf	(___fladd@b+2)^0,c
  4556   001C92  0E00               	movlw	0
  4557   001C94  6E06               	movwf	(___fladd@b+3)^0,c
  4558   001C96  5011               	movf	___fladd@bexp^0,w,c
  4559   001C98  A4D8               	btfss	status,2,c
  4560   001C9A  EF51  F00E         	goto	u2571
  4561   001C9E  EF53  F00E         	goto	u2570
  4562   001CA2                     u2571:
  4563   001CA2  EF55  F00E         	goto	l2984
  4564   001CA6                     u2570:
  4565   001CA6  0E00               	movlw	0
  4566   001CA8  6E0F               	movwf	___fladd@signs^0,c
  4567   001CAA                     l2984:
  4568   001CAA  A011               	btfss	___fladd@bexp^0,0,c
  4569   001CAC  EF5A  F00E         	goto	u2581
  4570   001CB0  EF5C  F00E         	goto	u2580
  4571   001CB4                     u2581:
  4572   001CB4  EF5F  F00E         	goto	l2988
  4573   001CB8                     u2580:
  4574   001CB8  8E05               	bsf	(___fladd@b+2)^0,7,c
  4575   001CBA  EF60  F00E         	goto	l2990
  4576   001CBE                     l2988:
  4577   001CBE  9E05               	bcf	(___fladd@b+2)^0,7,c
  4578   001CC0                     l2990:
  4579   001CC0  90D8               	bcf	status,0,c
  4580   001CC2  3011               	rrcf	___fladd@bexp^0,w,c
  4581   001CC4  6E06               	movwf	(___fladd@b+3)^0,c
  4582   001CC6  AE0F               	btfss	___fladd@signs^0,7,c
  4583   001CC8  EF68  F00E         	goto	u2591
  4584   001CCC  EF6A  F00E         	goto	u2590
  4585   001CD0                     u2591:
  4586   001CD0  EF6B  F00E         	goto	l2996
  4587   001CD4                     u2590:
  4588   001CD4  8E06               	bsf	(___fladd@b+3)^0,7,c
  4589   001CD6                     l2996:
  4590   001CD6  C003  F003         	movff	___fladd@b,?___fladd
  4591   001CDA  C004  F004         	movff	___fladd@b+1,?___fladd+1
  4592   001CDE  C005  F005         	movff	___fladd@b+2,?___fladd+2
  4593   001CE2  C006  F006         	movff	___fladd@b+3,?___fladd+3
  4594   001CE6                     l868:
  4595   001CE6  0012               	return		;funcret
  4596   001CE8                     __end_of___fladd:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function ___flneg *****************
  4600 ;; Defined at:
  4601 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  f1              4    2[COMRAM] unsigned char 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  4    2[COMRAM] unsigned char 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;Total ram usage:        4 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 4
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_efgtoa
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text13
  4630   003D10                     __ptext13:
  4631                           	callstack 0
  4632   003D10                     ___flneg:
  4633                           	callstack 22
  4634   003D10  5003               	movf	___flneg@f1^0,w,c
  4635   003D12  1004               	iorwf	(___flneg@f1+1)^0,w,c
  4636   003D14  1005               	iorwf	(___flneg@f1+2)^0,w,c
  4637   003D16  1006               	iorwf	(___flneg@f1+3)^0,w,c
  4638   003D18  B4D8               	btfsc	status,2,c
  4639   003D1A  EF91  F01E         	goto	u3241
  4640   003D1E  EF93  F01E         	goto	u3240
  4641   003D22                     u3241:
  4642   003D22  EF9B  F01E         	goto	l3404
  4643   003D26                     u3240:
  4644   003D26  0E00               	movlw	0
  4645   003D28  1A03               	xorwf	___flneg@f1^0,f,c
  4646   003D2A  0E00               	movlw	0
  4647   003D2C  1A04               	xorwf	(___flneg@f1+1)^0,f,c
  4648   003D2E  0E00               	movlw	0
  4649   003D30  1A05               	xorwf	(___flneg@f1+2)^0,f,c
  4650   003D32  0E80               	movlw	128
  4651   003D34  1A06               	xorwf	(___flneg@f1+3)^0,f,c
  4652   003D36                     l3404:
  4653   003D36  C003  F003         	movff	___flneg@f1,?___flneg
  4654   003D3A  C004  F004         	movff	___flneg@f1+1,?___flneg+1
  4655   003D3E  C005  F005         	movff	___flneg@f1+2,?___flneg+2
  4656   003D42  C006  F006         	movff	___flneg@f1+3,?___flneg+3
  4657   003D46  0012               	return		;funcret
  4658   003D48                     __end_of___flneg:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function ___flmul *****************
  4662 ;; Defined at:
  4663 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  b               4    2[COMRAM] unsigned char 
  4666 ;;  a               4    6[COMRAM] unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  prod            4   21[COMRAM] struct .
  4669 ;;  grs             4   15[COMRAM] unsigned long 
  4670 ;;  temp            2   25[COMRAM] struct .
  4671 ;;  bexp            1   20[COMRAM] unsigned char 
  4672 ;;  aexp            1   19[COMRAM] unsigned char 
  4673 ;;  sign            1   14[COMRAM] unsigned char 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  4    2[COMRAM] unsigned char 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, prodl, prodh
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:       25 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 4
  4690 ;; This function calls:
  4691 ;;		Nothing
  4692 ;; This function is called by:
  4693 ;;		_efgtoa
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text14
  4698   001CE8                     __ptext14:
  4699                           	callstack 0
  4700   001CE8                     ___flmul:
  4701                           	callstack 22
  4702   001CE8  5006               	movf	(___flmul@b+3)^0,w,c
  4703   001CEA  0B80               	andlw	128
  4704   001CEC  6E0F               	movwf	___flmul@sign^0,c
  4705   001CEE  5006               	movf	(___flmul@b+3)^0,w,c
  4706   001CF0  2406               	addwf	(___flmul@b+3)^0,w,c
  4707   001CF2  6E15               	movwf	___flmul@bexp^0,c
  4708   001CF4  AE05               	btfss	(___flmul@b+2)^0,7,c
  4709   001CF6  EF7F  F00E         	goto	u2971
  4710   001CFA  EF81  F00E         	goto	u2970
  4711   001CFE                     u2971:
  4712   001CFE  EF82  F00E         	goto	l3232
  4713   001D02                     u2970:
  4714   001D02  8015               	bsf	___flmul@bexp^0,0,c
  4715   001D04                     l3232:
  4716   001D04  5015               	movf	___flmul@bexp^0,w,c
  4717   001D06  B4D8               	btfsc	status,2,c
  4718   001D08  EF88  F00E         	goto	u2981
  4719   001D0C  EF8A  F00E         	goto	u2980
  4720   001D10                     u2981:
  4721   001D10  EF9D  F00E         	goto	l3240
  4722   001D14                     u2980:
  4723   001D14  2815               	incf	___flmul@bexp^0,w,c
  4724   001D16  A4D8               	btfss	status,2,c
  4725   001D18  EF90  F00E         	goto	u2991
  4726   001D1C  EF92  F00E         	goto	u2990
  4727   001D20                     u2991:
  4728   001D20  EF9A  F00E         	goto	l3238
  4729   001D24                     u2990:
  4730   001D24  0E00               	movlw	0
  4731   001D26  6E03               	movwf	___flmul@b^0,c
  4732   001D28  0E00               	movlw	0
  4733   001D2A  6E04               	movwf	(___flmul@b+1)^0,c
  4734   001D2C  0E00               	movlw	0
  4735   001D2E  6E05               	movwf	(___flmul@b+2)^0,c
  4736   001D30  0E00               	movlw	0
  4737   001D32  6E06               	movwf	(___flmul@b+3)^0,c
  4738   001D34                     l3238:
  4739   001D34  8E05               	bsf	(___flmul@b+2)^0,7,c
  4740   001D36  EFA5  F00E         	goto	l3242
  4741   001D3A                     l3240:
  4742   001D3A  0E00               	movlw	0
  4743   001D3C  6E03               	movwf	___flmul@b^0,c
  4744   001D3E  0E00               	movlw	0
  4745   001D40  6E04               	movwf	(___flmul@b+1)^0,c
  4746   001D42  0E00               	movlw	0
  4747   001D44  6E05               	movwf	(___flmul@b+2)^0,c
  4748   001D46  0E00               	movlw	0
  4749   001D48  6E06               	movwf	(___flmul@b+3)^0,c
  4750   001D4A                     l3242:
  4751   001D4A  500A               	movf	(___flmul@a+3)^0,w,c
  4752   001D4C  0B80               	andlw	128
  4753   001D4E  1A0F               	xorwf	___flmul@sign^0,f,c
  4754   001D50  500A               	movf	(___flmul@a+3)^0,w,c
  4755   001D52  240A               	addwf	(___flmul@a+3)^0,w,c
  4756   001D54  6E14               	movwf	___flmul@aexp^0,c
  4757   001D56  AE09               	btfss	(___flmul@a+2)^0,7,c
  4758   001D58  EFB0  F00E         	goto	u3001
  4759   001D5C  EFB2  F00E         	goto	u3000
  4760   001D60                     u3001:
  4761   001D60  EFB3  F00E         	goto	l3250
  4762   001D64                     u3000:
  4763   001D64  8014               	bsf	___flmul@aexp^0,0,c
  4764   001D66                     l3250:
  4765   001D66  5014               	movf	___flmul@aexp^0,w,c
  4766   001D68  B4D8               	btfsc	status,2,c
  4767   001D6A  EFB9  F00E         	goto	u3011
  4768   001D6E  EFBB  F00E         	goto	u3010
  4769   001D72                     u3011:
  4770   001D72  EFCE  F00E         	goto	l3258
  4771   001D76                     u3010:
  4772   001D76  2814               	incf	___flmul@aexp^0,w,c
  4773   001D78  A4D8               	btfss	status,2,c
  4774   001D7A  EFC1  F00E         	goto	u3021
  4775   001D7E  EFC3  F00E         	goto	u3020
  4776   001D82                     u3021:
  4777   001D82  EFCB  F00E         	goto	l3256
  4778   001D86                     u3020:
  4779   001D86  0E00               	movlw	0
  4780   001D88  6E07               	movwf	___flmul@a^0,c
  4781   001D8A  0E00               	movlw	0
  4782   001D8C  6E08               	movwf	(___flmul@a+1)^0,c
  4783   001D8E  0E00               	movlw	0
  4784   001D90  6E09               	movwf	(___flmul@a+2)^0,c
  4785   001D92  0E00               	movlw	0
  4786   001D94  6E0A               	movwf	(___flmul@a+3)^0,c
  4787   001D96                     l3256:
  4788   001D96  8E09               	bsf	(___flmul@a+2)^0,7,c
  4789   001D98  EFD6  F00E         	goto	l945
  4790   001D9C                     l3258:
  4791   001D9C  0E00               	movlw	0
  4792   001D9E  6E07               	movwf	___flmul@a^0,c
  4793   001DA0  0E00               	movlw	0
  4794   001DA2  6E08               	movwf	(___flmul@a+1)^0,c
  4795   001DA4  0E00               	movlw	0
  4796   001DA6  6E09               	movwf	(___flmul@a+2)^0,c
  4797   001DA8  0E00               	movlw	0
  4798   001DAA  6E0A               	movwf	(___flmul@a+3)^0,c
  4799   001DAC                     l945:
  4800   001DAC  5014               	movf	___flmul@aexp^0,w,c
  4801   001DAE  B4D8               	btfsc	status,2,c
  4802   001DB0  EFDC  F00E         	goto	u3031
  4803   001DB4  EFDE  F00E         	goto	u3030
  4804   001DB8                     u3031:
  4805   001DB8  EFE6  F00E         	goto	l3262
  4806   001DBC                     u3030:
  4807   001DBC  5015               	movf	___flmul@bexp^0,w,c
  4808   001DBE  A4D8               	btfss	status,2,c
  4809   001DC0  EFE4  F00E         	goto	u3041
  4810   001DC4  EFE6  F00E         	goto	u3040
  4811   001DC8                     u3041:
  4812   001DC8  EFF0  F00E         	goto	l3266
  4813   001DCC                     u3040:
  4814   001DCC                     l3262:
  4815   001DCC  0E00               	movlw	0
  4816   001DCE  6E03               	movwf	?___flmul^0,c
  4817   001DD0  0E00               	movlw	0
  4818   001DD2  6E04               	movwf	(?___flmul+1)^0,c
  4819   001DD4  0E00               	movlw	0
  4820   001DD6  6E05               	movwf	(?___flmul+2)^0,c
  4821   001DD8  0E00               	movlw	0
  4822   001DDA  6E06               	movwf	(?___flmul+3)^0,c
  4823   001DDC  EF88  F010         	goto	l949
  4824   001DE0                     l3266:
  4825   001DE0  5009               	movf	(___flmul@a+2)^0,w,c
  4826   001DE2  0203               	mulwf	___flmul@b^0,c
  4827   001DE4  CFF3 F01A          	movff	prodl,___flmul@temp
  4828   001DE8  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4829   001DEC  501A               	movf	___flmul@temp^0,w,c
  4830   001DEE  6E10               	movwf	___flmul@grs^0,c
  4831   001DF0  6A11               	clrf	(___flmul@grs+1)^0,c
  4832   001DF2  6A12               	clrf	(___flmul@grs+2)^0,c
  4833   001DF4  6A13               	clrf	(___flmul@grs+3)^0,c
  4834   001DF6  501B               	movf	(___flmul@temp+1)^0,w,c
  4835   001DF8  6E16               	movwf	___flmul@prod^0,c
  4836   001DFA  6A17               	clrf	(___flmul@prod+1)^0,c
  4837   001DFC  6A18               	clrf	(___flmul@prod+2)^0,c
  4838   001DFE  6A19               	clrf	(___flmul@prod+3)^0,c
  4839   001E00  5008               	movf	(___flmul@a+1)^0,w,c
  4840   001E02  0204               	mulwf	(___flmul@b+1)^0,c
  4841   001E04  CFF3 F01A          	movff	prodl,___flmul@temp
  4842   001E08  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4843   001E0C  501A               	movf	___flmul@temp^0,w,c
  4844   001E0E  2610               	addwf	___flmul@grs^0,f,c
  4845   001E10  0E00               	movlw	0
  4846   001E12  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4847   001E14  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4848   001E16  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4849   001E18  501B               	movf	(___flmul@temp+1)^0,w,c
  4850   001E1A  2616               	addwf	___flmul@prod^0,f,c
  4851   001E1C  0E00               	movlw	0
  4852   001E1E  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4853   001E20  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4854   001E22  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4855   001E24  5007               	movf	___flmul@a^0,w,c
  4856   001E26  0205               	mulwf	(___flmul@b+2)^0,c
  4857   001E28  CFF3 F01A          	movff	prodl,___flmul@temp
  4858   001E2C  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4859   001E30  501A               	movf	___flmul@temp^0,w,c
  4860   001E32  2610               	addwf	___flmul@grs^0,f,c
  4861   001E34  0E00               	movlw	0
  4862   001E36  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4863   001E38  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4864   001E3A  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4865   001E3C  501B               	movf	(___flmul@temp+1)^0,w,c
  4866   001E3E  2616               	addwf	___flmul@prod^0,f,c
  4867   001E40  0E00               	movlw	0
  4868   001E42  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4869   001E44  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4870   001E46  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4871   001E48  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4872   001E4C  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4873   001E50  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4874   001E54  6A10               	clrf	___flmul@grs^0,c
  4875   001E56  5007               	movf	___flmul@a^0,w,c
  4876   001E58  0204               	mulwf	(___flmul@b+1)^0,c
  4877   001E5A  CFF3 F01A          	movff	prodl,___flmul@temp
  4878   001E5E  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4879   001E62  501A               	movf	___flmul@temp^0,w,c
  4880   001E64  2610               	addwf	___flmul@grs^0,f,c
  4881   001E66  501B               	movf	(___flmul@temp+1)^0,w,c
  4882   001E68  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4883   001E6A  0E00               	movlw	0
  4884   001E6C  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4885   001E6E  0E00               	movlw	0
  4886   001E70  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4887   001E72  5008               	movf	(___flmul@a+1)^0,w,c
  4888   001E74  0203               	mulwf	___flmul@b^0,c
  4889   001E76  CFF3 F01A          	movff	prodl,___flmul@temp
  4890   001E7A  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4891   001E7E  501A               	movf	___flmul@temp^0,w,c
  4892   001E80  2610               	addwf	___flmul@grs^0,f,c
  4893   001E82  501B               	movf	(___flmul@temp+1)^0,w,c
  4894   001E84  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4895   001E86  0E00               	movlw	0
  4896   001E88  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4897   001E8A  0E00               	movlw	0
  4898   001E8C  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4899   001E8E  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4900   001E92  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4901   001E96  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4902   001E9A  6A10               	clrf	___flmul@grs^0,c
  4903   001E9C  5007               	movf	___flmul@a^0,w,c
  4904   001E9E  0203               	mulwf	___flmul@b^0,c
  4905   001EA0  CFF3 F01A          	movff	prodl,___flmul@temp
  4906   001EA4  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4907   001EA8  501A               	movf	___flmul@temp^0,w,c
  4908   001EAA  2610               	addwf	___flmul@grs^0,f,c
  4909   001EAC  501B               	movf	(___flmul@temp+1)^0,w,c
  4910   001EAE  2211               	addwfc	(___flmul@grs+1)^0,f,c
  4911   001EB0  0E00               	movlw	0
  4912   001EB2  2212               	addwfc	(___flmul@grs+2)^0,f,c
  4913   001EB4  0E00               	movlw	0
  4914   001EB6  2213               	addwfc	(___flmul@grs+3)^0,f,c
  4915   001EB8  5009               	movf	(___flmul@a+2)^0,w,c
  4916   001EBA  0204               	mulwf	(___flmul@b+1)^0,c
  4917   001EBC  CFF3 F01A          	movff	prodl,___flmul@temp
  4918   001EC0  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4919   001EC4  501A               	movf	___flmul@temp^0,w,c
  4920   001EC6  2616               	addwf	___flmul@prod^0,f,c
  4921   001EC8  501B               	movf	(___flmul@temp+1)^0,w,c
  4922   001ECA  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4923   001ECC  0E00               	movlw	0
  4924   001ECE  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4925   001ED0  0E00               	movlw	0
  4926   001ED2  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4927   001ED4  5008               	movf	(___flmul@a+1)^0,w,c
  4928   001ED6  0205               	mulwf	(___flmul@b+2)^0,c
  4929   001ED8  CFF3 F01A          	movff	prodl,___flmul@temp
  4930   001EDC  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4931   001EE0  501A               	movf	___flmul@temp^0,w,c
  4932   001EE2  2616               	addwf	___flmul@prod^0,f,c
  4933   001EE4  501B               	movf	(___flmul@temp+1)^0,w,c
  4934   001EE6  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4935   001EE8  0E00               	movlw	0
  4936   001EEA  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4937   001EEC  0E00               	movlw	0
  4938   001EEE  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4939   001EF0  5009               	movf	(___flmul@a+2)^0,w,c
  4940   001EF2  0205               	mulwf	(___flmul@b+2)^0,c
  4941   001EF4  CFF3 F01A          	movff	prodl,___flmul@temp
  4942   001EF8  CFF4 F01B          	movff	prodh,___flmul@temp+1
  4943   001EFC  501A               	movf	___flmul@temp^0,w,c
  4944   001EFE  6E0B               	movwf	??___flmul^0,c
  4945   001F00  501B               	movf	(___flmul@temp+1)^0,w,c
  4946   001F02  6E0C               	movwf	(??___flmul+1)^0,c
  4947   001F04  6A0D               	clrf	(??___flmul+2)^0,c
  4948   001F06  6A0E               	clrf	(??___flmul+3)^0,c
  4949   001F08  C00D  F00E         	movff	??___flmul+2,??___flmul+3
  4950   001F0C  C00C  F00D         	movff	??___flmul+1,??___flmul+2
  4951   001F10  C00B  F00C         	movff	??___flmul,??___flmul+1
  4952   001F14  6A0B               	clrf	??___flmul^0,c
  4953   001F16  500B               	movf	??___flmul^0,w,c
  4954   001F18  2616               	addwf	___flmul@prod^0,f,c
  4955   001F1A  500C               	movf	(??___flmul+1)^0,w,c
  4956   001F1C  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4957   001F1E  500D               	movf	(??___flmul+2)^0,w,c
  4958   001F20  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4959   001F22  500E               	movf	(??___flmul+3)^0,w,c
  4960   001F24  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4961   001F26  C010  F00B         	movff	___flmul@grs,??___flmul
  4962   001F2A  C011  F00C         	movff	___flmul@grs+1,??___flmul+1
  4963   001F2E  C012  F00D         	movff	___flmul@grs+2,??___flmul+2
  4964   001F32  C013  F00E         	movff	___flmul@grs+3,??___flmul+3
  4965   001F36  0E19               	movlw	25
  4966   001F38  EFA3  F00F         	goto	u3050
  4967   001F3C                     u3055:
  4968   001F3C  90D8               	bcf	status,0,c
  4969   001F3E  320E               	rrcf	(??___flmul+3)^0,f,c
  4970   001F40  320D               	rrcf	(??___flmul+2)^0,f,c
  4971   001F42  320C               	rrcf	(??___flmul+1)^0,f,c
  4972   001F44  320B               	rrcf	??___flmul^0,f,c
  4973   001F46                     u3050:
  4974   001F46  2EE8               	decfsz	wreg,f,c
  4975   001F48  EF9E  F00F         	goto	u3055
  4976   001F4C  500B               	movf	??___flmul^0,w,c
  4977   001F4E  2616               	addwf	___flmul@prod^0,f,c
  4978   001F50  500C               	movf	(??___flmul+1)^0,w,c
  4979   001F52  2217               	addwfc	(___flmul@prod+1)^0,f,c
  4980   001F54  500D               	movf	(??___flmul+2)^0,w,c
  4981   001F56  2218               	addwfc	(___flmul@prod+2)^0,f,c
  4982   001F58  500E               	movf	(??___flmul+3)^0,w,c
  4983   001F5A  2219               	addwfc	(___flmul@prod+3)^0,f,c
  4984   001F5C  C012  F013         	movff	___flmul@grs+2,___flmul@grs+3
  4985   001F60  C011  F012         	movff	___flmul@grs+1,___flmul@grs+2
  4986   001F64  C010  F011         	movff	___flmul@grs,___flmul@grs+1
  4987   001F68  6A10               	clrf	___flmul@grs^0,c
  4988   001F6A  5014               	movf	___flmul@aexp^0,w,c
  4989   001F6C  C015  F00B         	movff	___flmul@bexp,??___flmul
  4990   001F70  6A0C               	clrf	(??___flmul+1)^0,c
  4991   001F72  260B               	addwf	??___flmul^0,f,c
  4992   001F74  0E00               	movlw	0
  4993   001F76  220C               	addwfc	(??___flmul+1)^0,f,c
  4994   001F78  0E82               	movlw	130
  4995   001F7A  240B               	addwf	??___flmul^0,w,c
  4996   001F7C  6E1A               	movwf	___flmul@temp^0,c
  4997   001F7E  0EFF               	movlw	255
  4998   001F80  200C               	addwfc	(??___flmul+1)^0,w,c
  4999   001F82  6E1B               	movwf	(___flmul@temp+1)^0,c
  5000   001F84  EFD9  F00F         	goto	l3314
  5001   001F88                     l3308:
  5002   001F88  90D8               	bcf	status,0,c
  5003   001F8A  3616               	rlcf	___flmul@prod^0,f,c
  5004   001F8C  3617               	rlcf	(___flmul@prod+1)^0,f,c
  5005   001F8E  3618               	rlcf	(___flmul@prod+2)^0,f,c
  5006   001F90  3619               	rlcf	(___flmul@prod+3)^0,f,c
  5007   001F92  AE13               	btfss	(___flmul@grs+3)^0,7,c
  5008   001F94  EFCE  F00F         	goto	u3061
  5009   001F98  EFD0  F00F         	goto	u3060
  5010   001F9C                     u3061:
  5011   001F9C  EFD1  F00F         	goto	l952
  5012   001FA0                     u3060:
  5013   001FA0  8016               	bsf	___flmul@prod^0,0,c
  5014   001FA2                     l952:
  5015   001FA2  90D8               	bcf	status,0,c
  5016   001FA4  3610               	rlcf	___flmul@grs^0,f,c
  5017   001FA6  3611               	rlcf	(___flmul@grs+1)^0,f,c
  5018   001FA8  3612               	rlcf	(___flmul@grs+2)^0,f,c
  5019   001FAA  3613               	rlcf	(___flmul@grs+3)^0,f,c
  5020   001FAC  061A               	decf	___flmul@temp^0,f,c
  5021   001FAE  A0D8               	btfss	status,0,c
  5022   001FB0  061B               	decf	(___flmul@temp+1)^0,f,c
  5023   001FB2                     l3314:
  5024   001FB2  AE18               	btfss	(___flmul@prod+2)^0,7,c
  5025   001FB4  EFDE  F00F         	goto	u3071
  5026   001FB8  EFE0  F00F         	goto	u3070
  5027   001FBC                     u3071:
  5028   001FBC  EFC4  F00F         	goto	l3308
  5029   001FC0                     u3070:
  5030   001FC0  0E00               	movlw	0
  5031   001FC2  6E14               	movwf	___flmul@aexp^0,c
  5032   001FC4  AE13               	btfss	(___flmul@grs+3)^0,7,c
  5033   001FC6  EFE7  F00F         	goto	u3081
  5034   001FCA  EFE9  F00F         	goto	u3080
  5035   001FCE                     u3081:
  5036   001FCE  EF0D  F010         	goto	l954
  5037   001FD2                     u3080:
  5038   001FD2  0EFF               	movlw	255
  5039   001FD4  1410               	andwf	___flmul@grs^0,w,c
  5040   001FD6  6E0B               	movwf	??___flmul^0,c
  5041   001FD8  0EFF               	movlw	255
  5042   001FDA  1411               	andwf	(___flmul@grs+1)^0,w,c
  5043   001FDC  6E0C               	movwf	(??___flmul+1)^0,c
  5044   001FDE  0EFF               	movlw	255
  5045   001FE0  1412               	andwf	(___flmul@grs+2)^0,w,c
  5046   001FE2  6E0D               	movwf	(??___flmul+2)^0,c
  5047   001FE4  0E7F               	movlw	127
  5048   001FE6  1413               	andwf	(___flmul@grs+3)^0,w,c
  5049   001FE8  6E0E               	movwf	(??___flmul+3)^0,c
  5050   001FEA  500B               	movf	??___flmul^0,w,c
  5051   001FEC  100C               	iorwf	(??___flmul+1)^0,w,c
  5052   001FEE  100D               	iorwf	(??___flmul+2)^0,w,c
  5053   001FF0  100E               	iorwf	(??___flmul+3)^0,w,c
  5054   001FF2  B4D8               	btfsc	status,2,c
  5055   001FF4  EFFE  F00F         	goto	u3091
  5056   001FF8  EF00  F010         	goto	u3090
  5057   001FFC                     u3091:
  5058   001FFC  EF04  F010         	goto	l955
  5059   002000                     u3090:
  5060   002000                     l3322:
  5061   002000  0E01               	movlw	1
  5062   002002  6E14               	movwf	___flmul@aexp^0,c
  5063   002004  EF0D  F010         	goto	l954
  5064   002008                     l955:
  5065   002008  A016               	btfss	___flmul@prod^0,0,c
  5066   00200A  EF09  F010         	goto	u3101
  5067   00200E  EF0B  F010         	goto	u3100
  5068   002012                     u3101:
  5069   002012  EF0D  F010         	goto	l954
  5070   002016                     u3100:
  5071   002016  EF00  F010         	goto	l3322
  5072   00201A                     l954:
  5073   00201A  5014               	movf	___flmul@aexp^0,w,c
  5074   00201C  B4D8               	btfsc	status,2,c
  5075   00201E  EF13  F010         	goto	u3111
  5076   002022  EF15  F010         	goto	u3110
  5077   002026                     u3111:
  5078   002026  EF39  F010         	goto	l3334
  5079   00202A                     u3110:
  5080   00202A  0E01               	movlw	1
  5081   00202C  2616               	addwf	___flmul@prod^0,f,c
  5082   00202E  0E00               	movlw	0
  5083   002030  2217               	addwfc	(___flmul@prod+1)^0,f,c
  5084   002032  2218               	addwfc	(___flmul@prod+2)^0,f,c
  5085   002034  2219               	addwfc	(___flmul@prod+3)^0,f,c
  5086   002036  A019               	btfss	(___flmul@prod+3)^0,0,c
  5087   002038  EF20  F010         	goto	u3121
  5088   00203C  EF22  F010         	goto	u3120
  5089   002040                     u3121:
  5090   002040  EF39  F010         	goto	l3334
  5091   002044                     u3120:
  5092   002044  C016  F00B         	movff	___flmul@prod,??___flmul
  5093   002048  C017  F00C         	movff	___flmul@prod+1,??___flmul+1
  5094   00204C  C018  F00D         	movff	___flmul@prod+2,??___flmul+2
  5095   002050  C019  F00E         	movff	___flmul@prod+3,??___flmul+3
  5096   002054  340E               	rlcf	(??___flmul+3)^0,w,c
  5097   002056  320E               	rrcf	(??___flmul+3)^0,f,c
  5098   002058  320D               	rrcf	(??___flmul+2)^0,f,c
  5099   00205A  320C               	rrcf	(??___flmul+1)^0,f,c
  5100   00205C  320B               	rrcf	??___flmul^0,f,c
  5101   00205E  C00B  F016         	movff	??___flmul,___flmul@prod
  5102   002062  C00C  F017         	movff	??___flmul+1,___flmul@prod+1
  5103   002066  C00D  F018         	movff	??___flmul+2,___flmul@prod+2
  5104   00206A  C00E  F019         	movff	??___flmul+3,___flmul@prod+3
  5105   00206E  4A1A               	infsnz	___flmul@temp^0,f,c
  5106   002070  2A1B               	incf	(___flmul@temp+1)^0,f,c
  5107   002072                     l3334:
  5108   002072  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  5109   002074  EF44  F010         	goto	u3131
  5110   002078  501B               	movf	(___flmul@temp+1)^0,w,c
  5111   00207A  E108               	bnz	u3130
  5112   00207C  281A               	incf	___flmul@temp^0,w,c
  5113   00207E  A0D8               	btfss	status,0,c
  5114   002080  EF44  F010         	goto	u3131
  5115   002084  EF46  F010         	goto	u3130
  5116   002088                     u3131:
  5117   002088  EF50  F010         	goto	l3338
  5118   00208C                     u3130:
  5119   00208C  0E00               	movlw	0
  5120   00208E  6E16               	movwf	___flmul@prod^0,c
  5121   002090  0E00               	movlw	0
  5122   002092  6E17               	movwf	(___flmul@prod+1)^0,c
  5123   002094  0E80               	movlw	128
  5124   002096  6E18               	movwf	(___flmul@prod+2)^0,c
  5125   002098  0E7F               	movlw	127
  5126   00209A  6E19               	movwf	(___flmul@prod+3)^0,c
  5127   00209C  EF7E  F010         	goto	l3350
  5128   0020A0                     l3338:
  5129   0020A0  BE1B               	btfsc	(___flmul@temp+1)^0,7,c
  5130   0020A2  EF5D  F010         	goto	u3140
  5131   0020A6  501B               	movf	(___flmul@temp+1)^0,w,c
  5132   0020A8  E106               	bnz	u3141
  5133   0020AA  041A               	decf	___flmul@temp^0,w,c
  5134   0020AC  B0D8               	btfsc	status,0,c
  5135   0020AE  EF5B  F010         	goto	u3141
  5136   0020B2  EF5D  F010         	goto	u3140
  5137   0020B6                     u3141:
  5138   0020B6  EF69  F010         	goto	l962
  5139   0020BA                     u3140:
  5140   0020BA  0E00               	movlw	0
  5141   0020BC  6E16               	movwf	___flmul@prod^0,c
  5142   0020BE  0E00               	movlw	0
  5143   0020C0  6E17               	movwf	(___flmul@prod+1)^0,c
  5144   0020C2  0E00               	movlw	0
  5145   0020C4  6E18               	movwf	(___flmul@prod+2)^0,c
  5146   0020C6  0E00               	movlw	0
  5147   0020C8  6E19               	movwf	(___flmul@prod+3)^0,c
  5148   0020CA  0E00               	movlw	0
  5149   0020CC  6E0F               	movwf	___flmul@sign^0,c
  5150   0020CE  EF7E  F010         	goto	l3350
  5151   0020D2                     l962:
  5152   0020D2  C01A  F015         	movff	___flmul@temp,___flmul@bexp
  5153   0020D6  0EFF               	movlw	255
  5154   0020D8  1616               	andwf	___flmul@prod^0,f,c
  5155   0020DA  0EFF               	movlw	255
  5156   0020DC  1617               	andwf	(___flmul@prod+1)^0,f,c
  5157   0020DE  0E7F               	movlw	127
  5158   0020E0  1618               	andwf	(___flmul@prod+2)^0,f,c
  5159   0020E2  0E00               	movlw	0
  5160   0020E4  1619               	andwf	(___flmul@prod+3)^0,f,c
  5161   0020E6  A015               	btfss	___flmul@bexp^0,0,c
  5162   0020E8  EF78  F010         	goto	u3151
  5163   0020EC  EF7A  F010         	goto	u3150
  5164   0020F0                     u3151:
  5165   0020F0  EF7B  F010         	goto	l3348
  5166   0020F4                     u3150:
  5167   0020F4  8E18               	bsf	(___flmul@prod+2)^0,7,c
  5168   0020F6                     l3348:
  5169   0020F6  90D8               	bcf	status,0,c
  5170   0020F8  3015               	rrcf	___flmul@bexp^0,w,c
  5171   0020FA  6E19               	movwf	(___flmul@prod+3)^0,c
  5172   0020FC                     l3350:
  5173   0020FC  500F               	movf	___flmul@sign^0,w,c
  5174   0020FE  1219               	iorwf	(___flmul@prod+3)^0,f,c
  5175   002100  C016  F003         	movff	___flmul@prod,?___flmul
  5176   002104  C017  F004         	movff	___flmul@prod+1,?___flmul+1
  5177   002108  C018  F005         	movff	___flmul@prod+2,?___flmul+2
  5178   00210C  C019  F006         	movff	___flmul@prod+3,?___flmul+3
  5179   002110                     l949:
  5180   002110  0012               	return		;funcret
  5181   002112                     __end_of___flmul:
  5182                           	callstack 0
  5183                           
  5184 ;; *************** function ___flge *****************
  5185 ;; Defined at:
  5186 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  ff1             4   27[COMRAM] unsigned char 
  5189 ;;  ff2             4   31[COMRAM] unsigned char 
  5190 ;; Auto vars:     Size  Location     Type
  5191 ;;		None
  5192 ;; Return value:  Size  Location     Type
  5193 ;;		None               void
  5194 ;; Registers used:
  5195 ;;		wreg, status,2, status,0
  5196 ;; Tracked objects:
  5197 ;;		On entry : 0/0
  5198 ;;		On exit  : 0/0
  5199 ;;		Unchanged: 0/0
  5200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5204 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5205 ;;Total ram usage:       12 bytes
  5206 ;; Hardware stack levels used: 1
  5207 ;; Hardware stack levels required when called: 4
  5208 ;; This function calls:
  5209 ;;		Nothing
  5210 ;; This function is called by:
  5211 ;;		_efgtoa
  5212 ;;		_Colour_decider
  5213 ;; This function uses a non-reentrant model
  5214 ;;
  5215                           
  5216                           	psect	text15
  5217   00348A                     __ptext15:
  5218                           	callstack 0
  5219   00348A                     ___flge:
  5220                           	callstack 22
  5221   00348A  0E00               	movlw	0
  5222   00348C  141C               	andwf	___flge@ff1^0,w,c
  5223   00348E  6E24               	movwf	??___flge^0,c
  5224   003490  0E00               	movlw	0
  5225   003492  141D               	andwf	(___flge@ff1+1)^0,w,c
  5226   003494  6E25               	movwf	(??___flge+1)^0,c
  5227   003496  0E80               	movlw	128
  5228   003498  141E               	andwf	(___flge@ff1+2)^0,w,c
  5229   00349A  6E26               	movwf	(??___flge+2)^0,c
  5230   00349C  0E7F               	movlw	127
  5231   00349E  141F               	andwf	(___flge@ff1+3)^0,w,c
  5232   0034A0  6E27               	movwf	(??___flge+3)^0,c
  5233   0034A2  5024               	movf	??___flge^0,w,c
  5234   0034A4  1025               	iorwf	(??___flge+1)^0,w,c
  5235   0034A6  1026               	iorwf	(??___flge+2)^0,w,c
  5236   0034A8  1027               	iorwf	(??___flge+3)^0,w,c
  5237   0034AA  A4D8               	btfss	status,2,c
  5238   0034AC  EF5A  F01A         	goto	u3191
  5239   0034B0  EF5C  F01A         	goto	u3190
  5240   0034B4                     u3191:
  5241   0034B4  EF64  F01A         	goto	l3382
  5242   0034B8                     u3190:
  5243   0034B8  0E00               	movlw	0
  5244   0034BA  6E1C               	movwf	___flge@ff1^0,c
  5245   0034BC  0E00               	movlw	0
  5246   0034BE  6E1D               	movwf	(___flge@ff1+1)^0,c
  5247   0034C0  0E00               	movlw	0
  5248   0034C2  6E1E               	movwf	(___flge@ff1+2)^0,c
  5249   0034C4  0E00               	movlw	0
  5250   0034C6  6E1F               	movwf	(___flge@ff1+3)^0,c
  5251   0034C8                     l3382:
  5252   0034C8  0E00               	movlw	0
  5253   0034CA  1420               	andwf	___flge@ff2^0,w,c
  5254   0034CC  6E24               	movwf	??___flge^0,c
  5255   0034CE  0E00               	movlw	0
  5256   0034D0  1421               	andwf	(___flge@ff2+1)^0,w,c
  5257   0034D2  6E25               	movwf	(??___flge+1)^0,c
  5258   0034D4  0E80               	movlw	128
  5259   0034D6  1422               	andwf	(___flge@ff2+2)^0,w,c
  5260   0034D8  6E26               	movwf	(??___flge+2)^0,c
  5261   0034DA  0E7F               	movlw	127
  5262   0034DC  1423               	andwf	(___flge@ff2+3)^0,w,c
  5263   0034DE  6E27               	movwf	(??___flge+3)^0,c
  5264   0034E0  5024               	movf	??___flge^0,w,c
  5265   0034E2  1025               	iorwf	(??___flge+1)^0,w,c
  5266   0034E4  1026               	iorwf	(??___flge+2)^0,w,c
  5267   0034E6  1027               	iorwf	(??___flge+3)^0,w,c
  5268   0034E8  A4D8               	btfss	status,2,c
  5269   0034EA  EF79  F01A         	goto	u3201
  5270   0034EE  EF7B  F01A         	goto	u3200
  5271   0034F2                     u3201:
  5272   0034F2  EF83  F01A         	goto	l3386
  5273   0034F6                     u3200:
  5274   0034F6  0E00               	movlw	0
  5275   0034F8  6E20               	movwf	___flge@ff2^0,c
  5276   0034FA  0E00               	movlw	0
  5277   0034FC  6E21               	movwf	(___flge@ff2+1)^0,c
  5278   0034FE  0E00               	movlw	0
  5279   003500  6E22               	movwf	(___flge@ff2+2)^0,c
  5280   003502  0E00               	movlw	0
  5281   003504  6E23               	movwf	(___flge@ff2+3)^0,c
  5282   003506                     l3386:
  5283   003506  AE1F               	btfss	(___flge@ff1+3)^0,7,c
  5284   003508  EF88  F01A         	goto	u3211
  5285   00350C  EF8A  F01A         	goto	u3210
  5286   003510                     u3211:
  5287   003510  EF93  F01A         	goto	l3390
  5288   003514                     u3210:
  5289   003514  6C1C               	negf	___flge@ff1^0,c
  5290   003516  1E1D               	comf	(___flge@ff1+1)^0,f,c
  5291   003518  B0D8               	btfsc	status,0,c
  5292   00351A  2A1D               	incf	(___flge@ff1+1)^0,f,c
  5293   00351C  1E1E               	comf	(___flge@ff1+2)^0,f,c
  5294   00351E  B0D8               	btfsc	status,0,c
  5295   003520  2A1E               	incf	(___flge@ff1+2)^0,f,c
  5296   003522  0E80               	movlw	128
  5297   003524  561F               	subfwb	(___flge@ff1+3)^0,f,c
  5298   003526                     l3390:
  5299   003526  AE23               	btfss	(___flge@ff2+3)^0,7,c
  5300   003528  EF98  F01A         	goto	u3221
  5301   00352C  EF9A  F01A         	goto	u3220
  5302   003530                     u3221:
  5303   003530  EFA3  F01A         	goto	l596
  5304   003534                     u3220:
  5305   003534  6C20               	negf	___flge@ff2^0,c
  5306   003536  1E21               	comf	(___flge@ff2+1)^0,f,c
  5307   003538  B0D8               	btfsc	status,0,c
  5308   00353A  2A21               	incf	(___flge@ff2+1)^0,f,c
  5309   00353C  1E22               	comf	(___flge@ff2+2)^0,f,c
  5310   00353E  B0D8               	btfsc	status,0,c
  5311   003540  2A22               	incf	(___flge@ff2+2)^0,f,c
  5312   003542  0E80               	movlw	128
  5313   003544  5623               	subfwb	(___flge@ff2+3)^0,f,c
  5314   003546                     l596:
  5315   003546  0E00               	movlw	0
  5316   003548  1A1C               	xorwf	___flge@ff1^0,f,c
  5317   00354A  0E00               	movlw	0
  5318   00354C  1A1D               	xorwf	(___flge@ff1+1)^0,f,c
  5319   00354E  0E00               	movlw	0
  5320   003550  1A1E               	xorwf	(___flge@ff1+2)^0,f,c
  5321   003552  0E80               	movlw	128
  5322   003554  1A1F               	xorwf	(___flge@ff1+3)^0,f,c
  5323   003556  0E00               	movlw	0
  5324   003558  1A20               	xorwf	___flge@ff2^0,f,c
  5325   00355A  0E00               	movlw	0
  5326   00355C  1A21               	xorwf	(___flge@ff2+1)^0,f,c
  5327   00355E  0E00               	movlw	0
  5328   003560  1A22               	xorwf	(___flge@ff2+2)^0,f,c
  5329   003562  0E80               	movlw	128
  5330   003564  1A23               	xorwf	(___flge@ff2+3)^0,f,c
  5331   003566  5020               	movf	___flge@ff2^0,w,c
  5332   003568  5C1C               	subwf	___flge@ff1^0,w,c
  5333   00356A  5021               	movf	(___flge@ff2+1)^0,w,c
  5334   00356C  581D               	subwfb	(___flge@ff1+1)^0,w,c
  5335   00356E  5022               	movf	(___flge@ff2+2)^0,w,c
  5336   003570  581E               	subwfb	(___flge@ff1+2)^0,w,c
  5337   003572  5023               	movf	(___flge@ff2+3)^0,w,c
  5338   003574  581F               	subwfb	(___flge@ff1+3)^0,w,c
  5339   003576  B0D8               	btfsc	status,0,c
  5340   003578  EFC0  F01A         	goto	u3231
  5341   00357C  EFC2  F01A         	goto	u3230
  5342   003580                     u3231:
  5343   003580  EFC5  F01A         	goto	l3396
  5344   003584                     u3230:
  5345   003584  90D8               	bcf	status,0,c
  5346   003586  EFC6  F01A         	goto	l601
  5347   00358A                     l3396:
  5348   00358A  80D8               	bsf	status,0,c
  5349   00358C                     l601:
  5350   00358C  0012               	return		;funcret
  5351   00358E                     __end_of___flge:
  5352                           	callstack 0
  5353                           
  5354 ;; *************** function ___fleq *****************
  5355 ;; Defined at:
  5356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  ff1             4    2[COMRAM] unsigned char 
  5359 ;;  ff2             4    6[COMRAM] unsigned char 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5371 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5374 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5375 ;;Total ram usage:       12 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 4
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_efgtoa
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           	psect	text16
  5386   003756                     __ptext16:
  5387                           	callstack 0
  5388   003756                     ___fleq:
  5389                           	callstack 22
  5390   003756  0E00               	movlw	0
  5391   003758  1403               	andwf	___fleq@ff1^0,w,c
  5392   00375A  6E0B               	movwf	??___fleq^0,c
  5393   00375C  0E00               	movlw	0
  5394   00375E  1404               	andwf	(___fleq@ff1+1)^0,w,c
  5395   003760  6E0C               	movwf	(??___fleq+1)^0,c
  5396   003762  0E80               	movlw	128
  5397   003764  1405               	andwf	(___fleq@ff1+2)^0,w,c
  5398   003766  6E0D               	movwf	(??___fleq+2)^0,c
  5399   003768  0E7F               	movlw	127
  5400   00376A  1406               	andwf	(___fleq@ff1+3)^0,w,c
  5401   00376C  6E0E               	movwf	(??___fleq+3)^0,c
  5402   00376E  500B               	movf	??___fleq^0,w,c
  5403   003770  100C               	iorwf	(??___fleq+1)^0,w,c
  5404   003772  100D               	iorwf	(??___fleq+2)^0,w,c
  5405   003774  100E               	iorwf	(??___fleq+3)^0,w,c
  5406   003776  A4D8               	btfss	status,2,c
  5407   003778  EFC0  F01B         	goto	u3161
  5408   00377C  EFC2  F01B         	goto	u3160
  5409   003780                     u3161:
  5410   003780  EFCA  F01B         	goto	l3366
  5411   003784                     u3160:
  5412   003784  0E00               	movlw	0
  5413   003786  6E03               	movwf	___fleq@ff1^0,c
  5414   003788  0E00               	movlw	0
  5415   00378A  6E04               	movwf	(___fleq@ff1+1)^0,c
  5416   00378C  0E00               	movlw	0
  5417   00378E  6E05               	movwf	(___fleq@ff1+2)^0,c
  5418   003790  0E00               	movlw	0
  5419   003792  6E06               	movwf	(___fleq@ff1+3)^0,c
  5420   003794                     l3366:
  5421   003794  0E00               	movlw	0
  5422   003796  1407               	andwf	___fleq@ff2^0,w,c
  5423   003798  6E0B               	movwf	??___fleq^0,c
  5424   00379A  0E00               	movlw	0
  5425   00379C  1408               	andwf	(___fleq@ff2+1)^0,w,c
  5426   00379E  6E0C               	movwf	(??___fleq+1)^0,c
  5427   0037A0  0E80               	movlw	128
  5428   0037A2  1409               	andwf	(___fleq@ff2+2)^0,w,c
  5429   0037A4  6E0D               	movwf	(??___fleq+2)^0,c
  5430   0037A6  0E7F               	movlw	127
  5431   0037A8  140A               	andwf	(___fleq@ff2+3)^0,w,c
  5432   0037AA  6E0E               	movwf	(??___fleq+3)^0,c
  5433   0037AC  500B               	movf	??___fleq^0,w,c
  5434   0037AE  100C               	iorwf	(??___fleq+1)^0,w,c
  5435   0037B0  100D               	iorwf	(??___fleq+2)^0,w,c
  5436   0037B2  100E               	iorwf	(??___fleq+3)^0,w,c
  5437   0037B4  A4D8               	btfss	status,2,c
  5438   0037B6  EFDF  F01B         	goto	u3171
  5439   0037BA  EFE1  F01B         	goto	u3170
  5440   0037BE                     u3171:
  5441   0037BE  EFE9  F01B         	goto	l3370
  5442   0037C2                     u3170:
  5443   0037C2  0E00               	movlw	0
  5444   0037C4  6E07               	movwf	___fleq@ff2^0,c
  5445   0037C6  0E00               	movlw	0
  5446   0037C8  6E08               	movwf	(___fleq@ff2+1)^0,c
  5447   0037CA  0E00               	movlw	0
  5448   0037CC  6E09               	movwf	(___fleq@ff2+2)^0,c
  5449   0037CE  0E00               	movlw	0
  5450   0037D0  6E0A               	movwf	(___fleq@ff2+3)^0,c
  5451   0037D2                     l3370:
  5452   0037D2  5007               	movf	___fleq@ff2^0,w,c
  5453   0037D4  1803               	xorwf	___fleq@ff1^0,w,c
  5454   0037D6  E10F               	bnz	u3180
  5455   0037D8  5008               	movf	(___fleq@ff2+1)^0,w,c
  5456   0037DA  1804               	xorwf	(___fleq@ff1+1)^0,w,c
  5457   0037DC  E10C               	bnz	u3180
  5458   0037DE  5009               	movf	(___fleq@ff2+2)^0,w,c
  5459   0037E0  1805               	xorwf	(___fleq@ff1+2)^0,w,c
  5460   0037E2  E109               	bnz	u3180
  5461   0037E4  500A               	movf	(___fleq@ff2+3)^0,w,c
  5462   0037E6  1806               	xorwf	(___fleq@ff1+3)^0,w,c
  5463   0037E8  B4D8               	btfsc	status,2,c
  5464   0037EA  EFF9  F01B         	goto	u3181
  5465   0037EE  EFFB  F01B         	goto	u3180
  5466   0037F2                     u3181:
  5467   0037F2  EFFE  F01B         	goto	l3374
  5468   0037F6                     u3180:
  5469   0037F6  90D8               	bcf	status,0,c
  5470   0037F8  EFFF  F01B         	goto	l590
  5471   0037FC                     l3374:
  5472   0037FC  80D8               	bsf	status,0,c
  5473   0037FE                     l590:
  5474   0037FE  0012               	return		;funcret
  5475   003800                     __end_of___fleq:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _dtoa *****************
  5479 ;; Defined at:
  5480 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  5483 ;;		 -> sprintf@f(11), 
  5484 ;;  d               8   31[COMRAM] long long 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;  n               8   53[COMRAM] long long 
  5487 ;;  i               2   61[COMRAM] int 
  5488 ;;  w               2   51[COMRAM] int 
  5489 ;;  p               2   49[COMRAM] int 
  5490 ;;  s               1   63[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  1    wreg      void 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5500 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5501 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5502 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5503 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5504 ;;Total ram usage:       35 bytes
  5505 ;; Hardware stack levels used: 1
  5506 ;; Hardware stack levels required when called: 8
  5507 ;; This function calls:
  5508 ;;		___aodiv
  5509 ;;		___aomod
  5510 ;;		_abs
  5511 ;;		_pad
  5512 ;; This function is called by:
  5513 ;;		_vfpfcnvrt
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text17
  5518   0027B2                     __ptext17:
  5519                           	callstack 0
  5520   0027B2                     _dtoa:
  5521                           	callstack 19
  5522   0027B2                     
  5523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5524   0027B2  C020  F036         	movff	dtoa@d,dtoa@n
  5525   0027B6  C021  F037         	movff	dtoa@d+1,dtoa@n+1
  5526   0027BA  C022  F038         	movff	dtoa@d+2,dtoa@n+2
  5527   0027BE  C023  F039         	movff	dtoa@d+3,dtoa@n+3
  5528   0027C2  C024  F03A         	movff	dtoa@d+4,dtoa@n+4
  5529   0027C6  C025  F03B         	movff	dtoa@d+5,dtoa@n+5
  5530   0027CA  C026  F03C         	movff	dtoa@d+6,dtoa@n+6
  5531   0027CE  C027  F03D         	movff	dtoa@d+7,dtoa@n+7
  5532   0027D2                     
  5533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5534   0027D2  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  5535   0027D4  EFEE  F013         	goto	u3571
  5536   0027D8  EFF1  F013         	goto	u3570
  5537   0027DC                     u3571:
  5538   0027DC  0E01               	movlw	1
  5539   0027DE  EFF2  F013         	goto	u3580
  5540   0027E2                     u3570:
  5541   0027E2  0E00               	movlw	0
  5542   0027E4                     u3580:
  5543   0027E4  6E40               	movwf	dtoa@s^0,c
  5544   0027E6                     
  5545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5546   0027E6  5040               	movf	dtoa@s^0,w,c
  5547   0027E8  B4D8               	btfsc	status,2,c
  5548   0027EA  EFF9  F013         	goto	u3591
  5549   0027EE  EFFB  F013         	goto	u3590
  5550   0027F2                     u3591:
  5551   0027F2  EF0B  F014         	goto	l3552
  5552   0027F6                     u3590:
  5553   0027F6                     
  5554                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5555   0027F6  1E3D               	comf	(dtoa@n+7)^0,f,c
  5556   0027F8  1E3C               	comf	(dtoa@n+6)^0,f,c
  5557   0027FA  1E3B               	comf	(dtoa@n+5)^0,f,c
  5558   0027FC  1E3A               	comf	(dtoa@n+4)^0,f,c
  5559   0027FE  1E39               	comf	(dtoa@n+3)^0,f,c
  5560   002800  1E38               	comf	(dtoa@n+2)^0,f,c
  5561   002802  1E37               	comf	(dtoa@n+1)^0,f,c
  5562   002804  6C36               	negf	dtoa@n^0,c
  5563   002806  0E00               	movlw	0
  5564   002808  2237               	addwfc	(dtoa@n+1)^0,f,c
  5565   00280A  2238               	addwfc	(dtoa@n+2)^0,f,c
  5566   00280C  2239               	addwfc	(dtoa@n+3)^0,f,c
  5567   00280E  223A               	addwfc	(dtoa@n+4)^0,f,c
  5568   002810  223B               	addwfc	(dtoa@n+5)^0,f,c
  5569   002812  223C               	addwfc	(dtoa@n+6)^0,f,c
  5570   002814  223D               	addwfc	(dtoa@n+7)^0,f,c
  5571   002816                     l3552:
  5572                           
  5573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5574   002816  BE57               	btfsc	(_prec+1)^0,7,c
  5575   002818  EF18  F014         	goto	u3600
  5576   00281C  5057               	movf	(_prec+1)^0,w,c
  5577   00281E  E106               	bnz	u3601
  5578   002820  0456               	decf	_prec^0,w,c
  5579   002822  B0D8               	btfsc	status,0,c
  5580   002824  EF16  F014         	goto	u3601
  5581   002828  EF18  F014         	goto	u3600
  5582   00282C                     u3601:
  5583   00282C  EF1E  F014         	goto	l1050
  5584   002830                     u3600:
  5585   002830  0E00               	movlw	0
  5586   002832  6E33               	movwf	(dtoa@p+1)^0,c
  5587   002834  0E01               	movlw	1
  5588   002836  6E32               	movwf	dtoa@p^0,c
  5589   002838  EF22  F014         	goto	l1052
  5590   00283C                     l1050:
  5591   00283C  C056  F032         	movff	_prec,dtoa@p
  5592   002840  C057  F033         	movff	_prec+1,dtoa@p+1
  5593   002844                     l1052:
  5594                           
  5595                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5596   002844  C0ED  F034         	movff	_width,dtoa@w
  5597   002848  C0EE  F035         	movff	_width+1,dtoa@w+1
  5598   00284C                     
  5599                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5600   00284C  5040               	movf	dtoa@s^0,w,c
  5601   00284E  B4D8               	btfsc	status,2,c
  5602   002850  EF2C  F014         	goto	u3611
  5603   002854  EF2E  F014         	goto	u3610
  5604   002858                     u3611:
  5605   002858  EF45  F014         	goto	l1053
  5606   00285C                     u3610:
  5607   00285C                     
  5608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5609   00285C  0634               	decf	dtoa@w^0,f,c
  5610   00285E  A0D8               	btfss	status,0,c
  5611   002860  0635               	decf	(dtoa@w+1)^0,f,c
  5612   002862                     
  5613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5614   002862  5040               	movf	dtoa@s^0,w,c
  5615   002864  A4D8               	btfss	status,2,c
  5616   002866  EF37  F014         	goto	u3621
  5617   00286A  EF39  F014         	goto	u3620
  5618   00286E                     u3621:
  5619   00286E  EF3F  F014         	goto	l3564
  5620   002872                     u3620:
  5621   002872  0E00               	movlw	0
  5622   002874  6E31               	movwf	(_dtoa$1738+1)^0,c
  5623   002876  0E2B               	movlw	43
  5624   002878  6E30               	movwf	_dtoa$1738^0,c
  5625   00287A  EF43  F014         	goto	l3566
  5626   00287E                     l3564:
  5627   00287E  0E00               	movlw	0
  5628   002880  6E31               	movwf	(_dtoa$1738+1)^0,c
  5629   002882  0E2D               	movlw	45
  5630   002884  6E30               	movwf	_dtoa$1738^0,c
  5631   002886                     l3566:
  5632   002886  C030  F040         	movff	_dtoa$1738,dtoa@s
  5633   00288A                     l1053:
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5636   00288A  0E00               	movlw	0
  5637   00288C  6E3F               	movwf	(dtoa@i+1)^0,c
  5638   00288E  0E4F               	movlw	79
  5639   002890  6E3E               	movwf	dtoa@i^0,c
  5640   002892                     
  5641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5642   002892  0E00               	movlw	0
  5643   002894  0101               	movlb	1	; () banked
  5644   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5645                           
  5646                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5647   002898  EFCA  F014         	goto	l3580
  5648   00289C                     l3570:
  5649                           
  5650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5651   00289C  063E               	decf	dtoa@i^0,f,c
  5652   00289E  A0D8               	btfss	status,0,c
  5653   0028A0  063F               	decf	(dtoa@i+1)^0,f,c
  5654   0028A2                     
  5655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5656   0028A2  0E50               	movlw	low _dbuf
  5657   0028A4  243E               	addwf	dtoa@i^0,w,c
  5658   0028A6  6ED9               	movwf	fsr2l,c
  5659   0028A8  0E01               	movlw	high _dbuf
  5660   0028AA  203F               	addwfc	(dtoa@i+1)^0,w,c
  5661   0028AC  6EDA               	movwf	fsr2h,c
  5662   0028AE  C036  F003         	movff	dtoa@n,___aomod@dividend
  5663   0028B2  C037  F004         	movff	dtoa@n+1,___aomod@dividend+1
  5664   0028B6  C038  F005         	movff	dtoa@n+2,___aomod@dividend+2
  5665   0028BA  C039  F006         	movff	dtoa@n+3,___aomod@dividend+3
  5666   0028BE  C03A  F007         	movff	dtoa@n+4,___aomod@dividend+4
  5667   0028C2  C03B  F008         	movff	dtoa@n+5,___aomod@dividend+5
  5668   0028C6  C03C  F009         	movff	dtoa@n+6,___aomod@dividend+6
  5669   0028CA  C03D  F00A         	movff	dtoa@n+7,___aomod@dividend+7
  5670   0028CE  0E0A               	movlw	10
  5671   0028D0  6E0B               	movwf	___aomod@divisor^0,c
  5672   0028D2  0E00               	movlw	0
  5673   0028D4  6E0C               	movwf	(___aomod@divisor+1)^0,c
  5674   0028D6  0E00               	movlw	0
  5675   0028D8  6E0D               	movwf	(___aomod@divisor+2)^0,c
  5676   0028DA  0E00               	movlw	0
  5677   0028DC  6E0E               	movwf	(___aomod@divisor+3)^0,c
  5678   0028DE  0E00               	movlw	0
  5679   0028E0  6E0F               	movwf	(___aomod@divisor+4)^0,c
  5680   0028E2  0E00               	movlw	0
  5681   0028E4  6E10               	movwf	(___aomod@divisor+5)^0,c
  5682   0028E6  0E00               	movlw	0
  5683   0028E8  6E11               	movwf	(___aomod@divisor+6)^0,c
  5684   0028EA  0E00               	movlw	0
  5685   0028EC  6E12               	movwf	(___aomod@divisor+7)^0,c
  5686   0028EE  EC83  F018         	call	___aomod	;wreg free
  5687   0028F2  C003  F028         	movff	?___aomod,??_dtoa
  5688   0028F6  C004  F029         	movff	?___aomod+1,??_dtoa+1
  5689   0028FA  C005  F02A         	movff	?___aomod+2,??_dtoa+2
  5690   0028FE  C006  F02B         	movff	?___aomod+3,??_dtoa+3
  5691   002902  C007  F02C         	movff	?___aomod+4,??_dtoa+4
  5692   002906  C008  F02D         	movff	?___aomod+5,??_dtoa+5
  5693   00290A  C009  F02E         	movff	?___aomod+6,??_dtoa+6
  5694   00290E  C00A  F02F         	movff	?___aomod+7,??_dtoa+7
  5695   002912  C028  F015         	movff	??_dtoa,abs@a
  5696   002916  C029  F016         	movff	??_dtoa+1,abs@a+1
  5697   00291A  EC68  F01E         	call	_abs	;wreg free
  5698   00291E  5015               	movf	?_abs^0,w,c
  5699   002920  0F30               	addlw	48
  5700   002922  6EDF               	movwf	indf2,c
  5701   002924                     
  5702                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5703   002924  0632               	decf	dtoa@p^0,f,c
  5704   002926  A0D8               	btfss	status,0,c
  5705   002928  0633               	decf	(dtoa@p+1)^0,f,c
  5706   00292A                     
  5707                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5708   00292A  0634               	decf	dtoa@w^0,f,c
  5709   00292C  A0D8               	btfss	status,0,c
  5710   00292E  0635               	decf	(dtoa@w+1)^0,f,c
  5711   002930                     
  5712                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5713   002930  C036  F003         	movff	dtoa@n,___aodiv@dividend
  5714   002934  C037  F004         	movff	dtoa@n+1,___aodiv@dividend+1
  5715   002938  C038  F005         	movff	dtoa@n+2,___aodiv@dividend+2
  5716   00293C  C039  F006         	movff	dtoa@n+3,___aodiv@dividend+3
  5717   002940  C03A  F007         	movff	dtoa@n+4,___aodiv@dividend+4
  5718   002944  C03B  F008         	movff	dtoa@n+5,___aodiv@dividend+5
  5719   002948  C03C  F009         	movff	dtoa@n+6,___aodiv@dividend+6
  5720   00294C  C03D  F00A         	movff	dtoa@n+7,___aodiv@dividend+7
  5721   002950  0E0A               	movlw	10
  5722   002952  6E0B               	movwf	___aodiv@divisor^0,c
  5723   002954  0E00               	movlw	0
  5724   002956  6E0C               	movwf	(___aodiv@divisor+1)^0,c
  5725   002958  0E00               	movlw	0
  5726   00295A  6E0D               	movwf	(___aodiv@divisor+2)^0,c
  5727   00295C  0E00               	movlw	0
  5728   00295E  6E0E               	movwf	(___aodiv@divisor+3)^0,c
  5729   002960  0E00               	movlw	0
  5730   002962  6E0F               	movwf	(___aodiv@divisor+4)^0,c
  5731   002964  0E00               	movlw	0
  5732   002966  6E10               	movwf	(___aodiv@divisor+5)^0,c
  5733   002968  0E00               	movlw	0
  5734   00296A  6E11               	movwf	(___aodiv@divisor+6)^0,c
  5735   00296C  0E00               	movlw	0
  5736   00296E  6E12               	movwf	(___aodiv@divisor+7)^0,c
  5737   002970  ECBF  F017         	call	___aodiv	;wreg free
  5738   002974  C003  F036         	movff	?___aodiv,dtoa@n
  5739   002978  C004  F037         	movff	?___aodiv+1,dtoa@n+1
  5740   00297C  C005  F038         	movff	?___aodiv+2,dtoa@n+2
  5741   002980  C006  F039         	movff	?___aodiv+3,dtoa@n+3
  5742   002984  C007  F03A         	movff	?___aodiv+4,dtoa@n+4
  5743   002988  C008  F03B         	movff	?___aodiv+5,dtoa@n+5
  5744   00298C  C009  F03C         	movff	?___aodiv+6,dtoa@n+6
  5745   002990  C00A  F03D         	movff	?___aodiv+7,dtoa@n+7
  5746   002994                     l3580:
  5747                           
  5748                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5749   002994  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  5750   002996  EFD5  F014         	goto	u3631
  5751   00299A  503F               	movf	(dtoa@i+1)^0,w,c
  5752   00299C  E108               	bnz	u3630
  5753   00299E  043E               	decf	dtoa@i^0,w,c
  5754   0029A0  A0D8               	btfss	status,0,c
  5755   0029A2  EFD5  F014         	goto	u3631
  5756   0029A6  EFD7  F014         	goto	u3630
  5757   0029AA                     u3631:
  5758   0029AA  EFF3  F014         	goto	l3586
  5759   0029AE                     u3630:
  5760   0029AE  5036               	movf	dtoa@n^0,w,c
  5761   0029B0  1037               	iorwf	(dtoa@n+1)^0,w,c
  5762   0029B2  1038               	iorwf	(dtoa@n+2)^0,w,c
  5763   0029B4  1039               	iorwf	(dtoa@n+3)^0,w,c
  5764   0029B6  103A               	iorwf	(dtoa@n+4)^0,w,c
  5765   0029B8  103B               	iorwf	(dtoa@n+5)^0,w,c
  5766   0029BA  103C               	iorwf	(dtoa@n+6)^0,w,c
  5767   0029BC  103D               	iorwf	(dtoa@n+7)^0,w,c
  5768   0029BE  A4D8               	btfss	status,2,c
  5769   0029C0  EFE4  F014         	goto	u3641
  5770   0029C4  EFE6  F014         	goto	u3640
  5771   0029C8                     u3641:
  5772   0029C8  EF4E  F014         	goto	l3570
  5773   0029CC                     u3640:
  5774   0029CC  BE33               	btfsc	(dtoa@p+1)^0,7,c
  5775   0029CE  EFF3  F014         	goto	u3650
  5776   0029D2  5033               	movf	(dtoa@p+1)^0,w,c
  5777   0029D4  E106               	bnz	u3651
  5778   0029D6  0432               	decf	dtoa@p^0,w,c
  5779   0029D8  B0D8               	btfsc	status,0,c
  5780   0029DA  EFF1  F014         	goto	u3651
  5781   0029DE  EFF3  F014         	goto	u3650
  5782   0029E2                     u3651:
  5783   0029E2  EF4E  F014         	goto	l3570
  5784   0029E6                     u3650:
  5785   0029E6                     l3586:
  5786                           
  5787                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5788   0029E6  5040               	movf	dtoa@s^0,w,c
  5789   0029E8  B4D8               	btfsc	status,2,c
  5790   0029EA  EFF9  F014         	goto	u3661
  5791   0029EE  EFFB  F014         	goto	u3660
  5792   0029F2                     u3661:
  5793   0029F2  EF06  F015         	goto	l3592
  5794   0029F6                     u3660:
  5795   0029F6                     
  5796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5797   0029F6  063E               	decf	dtoa@i^0,f,c
  5798   0029F8  A0D8               	btfss	status,0,c
  5799   0029FA  063F               	decf	(dtoa@i+1)^0,f,c
  5800   0029FC                     
  5801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5802   0029FC  0E50               	movlw	low _dbuf
  5803   0029FE  243E               	addwf	dtoa@i^0,w,c
  5804   002A00  6ED9               	movwf	fsr2l,c
  5805   002A02  0E01               	movlw	high _dbuf
  5806   002A04  203F               	addwfc	(dtoa@i+1)^0,w,c
  5807   002A06  6EDA               	movwf	fsr2h,c
  5808   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5809   002A0C                     l3592:
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5812   002A0C  C01E  F013         	movff	dtoa@fp,pad@fp
  5813   002A10  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  5814   002A14  0E50               	movlw	low _dbuf
  5815   002A16  243E               	addwf	dtoa@i^0,w,c
  5816   002A18  6E15               	movwf	pad@buf^0,c
  5817   002A1A  0E01               	movlw	high _dbuf
  5818   002A1C  203F               	addwfc	(dtoa@i+1)^0,w,c
  5819   002A1E  6E16               	movwf	(pad@buf+1)^0,c
  5820   002A20  C034  F017         	movff	dtoa@w,pad@p
  5821   002A24  C035  F018         	movff	dtoa@w+1,pad@p+1
  5822   002A28  EC00  F01C         	call	_pad	;wreg free
  5823   002A2C  0012               	return		;funcret
  5824   002A2E                     __end_of_dtoa:
  5825                           	callstack 0
  5826                           
  5827 ;; *************** function _pad *****************
  5828 ;; Defined at:
  5829 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  5832 ;;		 -> sprintf@f(11), 
  5833 ;;  buf             2   20[COMRAM] PTR unsigned char 
  5834 ;;		 -> dbuf(80), 
  5835 ;;  p               2   22[COMRAM] int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  w               2   27[COMRAM] int 
  5838 ;;  i               2   25[COMRAM] int 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;                  1    wreg      void 
  5841 ;; Registers used:
  5842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;Total ram usage:       11 bytes
  5853 ;; Hardware stack levels used: 1
  5854 ;; Hardware stack levels required when called: 7
  5855 ;; This function calls:
  5856 ;;		_fputc
  5857 ;;		_fputs
  5858 ;; This function is called by:
  5859 ;;		_dtoa
  5860 ;;		_efgtoa
  5861 ;; This function uses a non-reentrant model
  5862 ;;
  5863                           
  5864                           	psect	text18
  5865   003800                     __ptext18:
  5866                           	callstack 0
  5867   003800                     _pad:
  5868                           	callstack 19
  5869   003800                     
  5870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5871   003800  BE18               	btfsc	(pad@p+1)^0,7,c
  5872   003802  EF05  F01C         	goto	u3321
  5873   003806  EF07  F01C         	goto	u3320
  5874   00380A                     u3321:
  5875   00380A  EF0D  F01C         	goto	l3456
  5876   00380E                     u3320:
  5877   00380E  C017  F01C         	movff	pad@p,pad@w
  5878   003812  C018  F01D         	movff	pad@p+1,pad@w+1
  5879   003816  EF11  F01C         	goto	l1041
  5880   00381A                     l3456:
  5881   00381A  0E00               	movlw	0
  5882   00381C  6E1D               	movwf	(pad@w+1)^0,c
  5883   00381E  0E00               	movlw	0
  5884   003820  6E1C               	movwf	pad@w^0,c
  5885   003822                     l1041:
  5886                           
  5887                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5888   003822  0E00               	movlw	0
  5889   003824  6E1B               	movwf	(pad@i+1)^0,c
  5890   003826  0E00               	movlw	0
  5891   003828  6E1A               	movwf	pad@i^0,c
  5892                           
  5893                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5894   00382A  EF23  F01C         	goto	l3462
  5895   00382E                     l3458:
  5896                           
  5897                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5898   00382E  0E00               	movlw	0
  5899   003830  6E04               	movwf	(fputc@c+1)^0,c
  5900   003832  0E20               	movlw	32
  5901   003834  6E03               	movwf	fputc@c^0,c
  5902   003836  C013  F005         	movff	pad@fp,fputc@fp
  5903   00383A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  5904   00383E  EC46  F01B         	call	_fputc	;wreg free
  5905   003842                     
  5906                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5907   003842  4A1A               	infsnz	pad@i^0,f,c
  5908   003844  2A1B               	incf	(pad@i+1)^0,f,c
  5909   003846                     l3462:
  5910                           
  5911                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5912   003846  501C               	movf	pad@w^0,w,c
  5913   003848  5C1A               	subwf	pad@i^0,w,c
  5914   00384A  501B               	movf	(pad@i+1)^0,w,c
  5915   00384C  0A80               	xorlw	128
  5916   00384E  6E19               	movwf	??_pad^0,c
  5917   003850  501D               	movf	(pad@w+1)^0,w,c
  5918   003852  0A80               	xorlw	128
  5919   003854  5819               	subwfb	??_pad^0,w,c
  5920   003856  A0D8               	btfss	status,0,c
  5921   003858  EF30  F01C         	goto	u3331
  5922   00385C  EF32  F01C         	goto	u3330
  5923   003860                     u3331:
  5924   003860  EF17  F01C         	goto	l3458
  5925   003864                     u3330:
  5926   003864                     
  5927                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5928   003864  C015  F00C         	movff	pad@buf,fputs@s
  5929   003868  C016  F00D         	movff	pad@buf+1,fputs@s+1
  5930   00386C  C013  F00E         	movff	pad@fp,fputs@fp
  5931   003870  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  5932   003874  EC25  F01E         	call	_fputs	;wreg free
  5933   003878  0012               	return		;funcret
  5934   00387A                     __end_of_pad:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function _fputs *****************
  5938 ;; Defined at:
  5939 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  s               2   11[COMRAM] PTR const unsigned char 
  5942 ;;		 -> dbuf(80), 
  5943 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  5944 ;;		 -> sprintf@f(11), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  i               2   16[COMRAM] int 
  5947 ;;  c               1   15[COMRAM] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   11[COMRAM] int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;Total ram usage:        7 bytes
  5962 ;; Hardware stack levels used: 1
  5963 ;; Hardware stack levels required when called: 6
  5964 ;; This function calls:
  5965 ;;		_fputc
  5966 ;; This function is called by:
  5967 ;;		_pad
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text19
  5972   003C4A                     __ptext19:
  5973                           	callstack 0
  5974   003C4A                     _fputs:
  5975                           	callstack 19
  5976   003C4A  0E00               	movlw	0
  5977   003C4C  6E12               	movwf	(fputs@i+1)^0,c
  5978   003C4E  0E00               	movlw	0
  5979   003C50  6E11               	movwf	fputs@i^0,c
  5980   003C52  EF36  F01E         	goto	l3006
  5981   003C56                     l3002:
  5982   003C56  C010  F003         	movff	fputs@c,fputc@c
  5983   003C5A  6A04               	clrf	(fputc@c+1)^0,c
  5984   003C5C  C00E  F005         	movff	fputs@fp,fputc@fp
  5985   003C60  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  5986   003C64  EC46  F01B         	call	_fputc	;wreg free
  5987   003C68  4A11               	infsnz	fputs@i^0,f,c
  5988   003C6A  2A12               	incf	(fputs@i+1)^0,f,c
  5989   003C6C                     l3006:
  5990   003C6C  5011               	movf	fputs@i^0,w,c
  5991   003C6E  240C               	addwf	fputs@s^0,w,c
  5992   003C70  6ED9               	movwf	fsr2l,c
  5993   003C72  5012               	movf	(fputs@i+1)^0,w,c
  5994   003C74  200D               	addwfc	(fputs@s+1)^0,w,c
  5995   003C76  6EDA               	movwf	fsr2h,c
  5996   003C78  50DF               	movf	indf2,w,c
  5997   003C7A  6E10               	movwf	fputs@c^0,c
  5998   003C7C  5010               	movf	fputs@c^0,w,c
  5999   003C7E  A4D8               	btfss	status,2,c
  6000   003C80  EF44  F01E         	goto	u2601
  6001   003C84  EF46  F01E         	goto	u2600
  6002   003C88                     u2601:
  6003   003C88  EF2B  F01E         	goto	l3002
  6004   003C8C                     u2600:
  6005   003C8C  0012               	return		;funcret
  6006   003C8E                     __end_of_fputs:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _fputc *****************
  6010 ;; Defined at:
  6011 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  c               2    2[COMRAM] int 
  6014 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  6015 ;;		 -> sprintf@f(11), 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  2    2[COMRAM] int 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;Total ram usage:        9 bytes
  6032 ;; Hardware stack levels used: 1
  6033 ;; Hardware stack levels required when called: 5
  6034 ;; This function calls:
  6035 ;;		_putch
  6036 ;; This function is called by:
  6037 ;;		_pad
  6038 ;;		_vfpfcnvrt
  6039 ;;		_fputs
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text20
  6044   00368C                     __ptext20:
  6045                           	callstack 0
  6046   00368C                     _fputc:
  6047                           	callstack 22
  6048   00368C  5005               	movf	fputc@fp^0,w,c
  6049   00368E  1006               	iorwf	(fputc@fp+1)^0,w,c
  6050   003690  B4D8               	btfsc	status,2,c
  6051   003692  EF4D  F01B         	goto	u2171
  6052   003696  EF4F  F01B         	goto	u2170
  6053   00369A                     u2171:
  6054   00369A  EF58  F01B         	goto	l2788
  6055   00369E                     u2170:
  6056   00369E  5005               	movf	fputc@fp^0,w,c
  6057   0036A0  1006               	iorwf	(fputc@fp+1)^0,w,c
  6058   0036A2  A4D8               	btfss	status,2,c
  6059   0036A4  EF56  F01B         	goto	u2181
  6060   0036A8  EF58  F01B         	goto	u2180
  6061   0036AC                     u2181:
  6062   0036AC  EF5D  F01B         	goto	l2790
  6063   0036B0                     u2180:
  6064   0036B0                     l2788:
  6065   0036B0  5003               	movf	fputc@c^0,w,c
  6066   0036B2  EC9A  F01F         	call	_putch
  6067   0036B6  EFAA  F01B         	goto	l1201
  6068   0036BA                     l2790:
  6069   0036BA  EE20 F009          	lfsr	2,9
  6070   0036BE  5005               	movf	fputc@fp^0,w,c
  6071   0036C0  26D9               	addwf	fsr2l,f,c
  6072   0036C2  5006               	movf	(fputc@fp+1)^0,w,c
  6073   0036C4  22DA               	addwfc	fsr2h,f,c
  6074   0036C6  50DE               	movf	postinc2,w,c
  6075   0036C8  10DE               	iorwf	postinc2,w,c
  6076   0036CA  B4D8               	btfsc	status,2,c
  6077   0036CC  EF6A  F01B         	goto	u2191
  6078   0036D0  EF6C  F01B         	goto	u2190
  6079   0036D4                     u2191:
  6080   0036D4  EF87  F01B         	goto	l2794
  6081   0036D8                     u2190:
  6082   0036D8  EE20 F009          	lfsr	2,9
  6083   0036DC  5005               	movf	fputc@fp^0,w,c
  6084   0036DE  26D9               	addwf	fsr2l,f,c
  6085   0036E0  5006               	movf	(fputc@fp+1)^0,w,c
  6086   0036E2  22DA               	addwfc	fsr2h,f,c
  6087   0036E4  EE10 F003          	lfsr	1,3
  6088   0036E8  5005               	movf	fputc@fp^0,w,c
  6089   0036EA  26E1               	addwf	fsr1l,f,c
  6090   0036EC  5006               	movf	(fputc@fp+1)^0,w,c
  6091   0036EE  22E2               	addwfc	fsr1h,f,c
  6092   0036F0  50DE               	movf	postinc2,w,c
  6093   0036F2  5CE6               	subwf	postinc1,w,c
  6094   0036F4  50E6               	movf	postinc1,w,c
  6095   0036F6  0A80               	xorlw	128
  6096   0036F8  6E0B               	movwf	(??_fputc+4)^0,c
  6097   0036FA  50DE               	movf	postinc2,w,c
  6098   0036FC  0A80               	xorlw	128
  6099   0036FE  580B               	subwfb	(??_fputc+4)^0,w,c
  6100   003700  B0D8               	btfsc	status,0,c
  6101   003702  EF85  F01B         	goto	u2201
  6102   003706  EF87  F01B         	goto	u2200
  6103   00370A                     u2201:
  6104   00370A  EFAA  F01B         	goto	l1201
  6105   00370E                     u2200:
  6106   00370E                     l2794:
  6107   00370E  EE20 F003          	lfsr	2,3
  6108   003712  5005               	movf	fputc@fp^0,w,c
  6109   003714  26D9               	addwf	fsr2l,f,c
  6110   003716  5006               	movf	(fputc@fp+1)^0,w,c
  6111   003718  22DA               	addwfc	fsr2h,f,c
  6112   00371A  CFDE F007          	movff	postinc2,??_fputc
  6113   00371E  CFDD F008          	movff	postdec2,??_fputc+1
  6114   003722  C005  FFD9         	movff	fputc@fp,fsr2l
  6115   003726  C006  FFDA         	movff	fputc@fp+1,fsr2h
  6116   00372A  CFDE F009          	movff	postinc2,??_fputc+2
  6117   00372E  CFDD F00A          	movff	postdec2,??_fputc+3
  6118   003732  5007               	movf	??_fputc^0,w,c
  6119   003734  2409               	addwf	(??_fputc+2)^0,w,c
  6120   003736  6ED9               	movwf	fsr2l,c
  6121   003738  5008               	movf	(??_fputc+1)^0,w,c
  6122   00373A  200A               	addwfc	(??_fputc+3)^0,w,c
  6123   00373C  6EDA               	movwf	fsr2h,c
  6124   00373E  C003  FFDF         	movff	fputc@c,indf2
  6125   003742  EE20 F003          	lfsr	2,3
  6126   003746  5005               	movf	fputc@fp^0,w,c
  6127   003748  26D9               	addwf	fsr2l,f,c
  6128   00374A  5006               	movf	(fputc@fp+1)^0,w,c
  6129   00374C  22DA               	addwfc	fsr2h,f,c
  6130   00374E  2ADE               	incf	postinc2,f,c
  6131   003750  0E00               	movlw	0
  6132   003752  22DD               	addwfc	postdec2,f,c
  6133   003754                     l1201:
  6134   003754  0012               	return		;funcret
  6135   003756                     __end_of_fputc:
  6136                           	callstack 0
  6137                           
  6138 ;; *************** function _putch *****************
  6139 ;; Defined at:
  6140 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  c               1    wreg     unsigned char 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  c               1    0[COMRAM] unsigned char 
  6145 ;; Return value:  Size  Location     Type
  6146 ;;                  1    wreg      void 
  6147 ;; Registers used:
  6148 ;;		wreg
  6149 ;; Tracked objects:
  6150 ;;		On entry : 0/0
  6151 ;;		On exit  : 0/0
  6152 ;;		Unchanged: 0/0
  6153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6158 ;;Total ram usage:        0 bytes
  6159 ;; Hardware stack levels used: 1
  6160 ;; Hardware stack levels required when called: 4
  6161 ;; This function calls:
  6162 ;;		Nothing
  6163 ;; This function is called by:
  6164 ;;		_fputc
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text21
  6169   003F34                     __ptext21:
  6170                           	callstack 0
  6171   003F34                     _putch:
  6172                           	callstack 22
  6173   003F34  0012               	return		;funcret
  6174   003F36                     __end_of_putch:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function _abs *****************
  6178 ;; Defined at:
  6179 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;  a               2   20[COMRAM] int 
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  2   20[COMRAM] int 
  6186 ;; Registers used:
  6187 ;;		wreg, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6197 ;;Total ram usage:        4 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; Hardware stack levels required when called: 4
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_dtoa
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text22
  6208   003CD0                     __ptext22:
  6209                           	callstack 0
  6210   003CD0                     _abs:
  6211                           	callstack 22
  6212   003CD0  BE16               	btfsc	(abs@a+1)^0,7,c
  6213   003CD2  EF75  F01E         	goto	u3340
  6214   003CD6  5016               	movf	(abs@a+1)^0,w,c
  6215   003CD8  E106               	bnz	u3341
  6216   003CDA  0415               	decf	abs@a^0,w,c
  6217   003CDC  B0D8               	btfsc	status,0,c
  6218   003CDE  EF73  F01E         	goto	u3341
  6219   003CE2  EF75  F01E         	goto	u3340
  6220   003CE6                     u3341:
  6221   003CE6  EF83  F01E         	goto	l1160
  6222   003CEA                     u3340:
  6223   003CEA  C015  F017         	movff	abs@a,??_abs
  6224   003CEE  C016  F018         	movff	abs@a+1,??_abs+1
  6225   003CF2  1E17               	comf	??_abs^0,f,c
  6226   003CF4  1E18               	comf	(??_abs+1)^0,f,c
  6227   003CF6  4A17               	infsnz	??_abs^0,f,c
  6228   003CF8  2A18               	incf	(??_abs+1)^0,f,c
  6229   003CFA  C017  F015         	movff	??_abs,?_abs
  6230   003CFE  C018  F016         	movff	??_abs+1,?_abs+1
  6231   003D02  EF87  F01E         	goto	l1163
  6232   003D06                     l1160:
  6233   003D06  C015  F015         	movff	abs@a,?_abs
  6234   003D0A  C016  F016         	movff	abs@a+1,?_abs+1
  6235   003D0E                     l1163:
  6236   003D0E  0012               	return		;funcret
  6237   003D10                     __end_of_abs:
  6238                           	callstack 0
  6239                           
  6240 ;; *************** function ___aomod *****************
  6241 ;; Defined at:
  6242 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  dividend        8    2[COMRAM] long long 
  6245 ;;  divisor         8   10[COMRAM] long long 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  sign            1   19[COMRAM] unsigned char 
  6248 ;;  counter         1   18[COMRAM] unsigned char 
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  8    2[COMRAM] long long 
  6251 ;; Registers used:
  6252 ;;		wreg, status,2, status,0
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/0
  6255 ;;		On exit  : 0/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6258 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6261 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6262 ;;Total ram usage:       18 bytes
  6263 ;; Hardware stack levels used: 1
  6264 ;; Hardware stack levels required when called: 4
  6265 ;; This function calls:
  6266 ;;		Nothing
  6267 ;; This function is called by:
  6268 ;;		_dtoa
  6269 ;; This function uses a non-reentrant model
  6270 ;;
  6271                           
  6272                           	psect	text23
  6273   003106                     __ptext23:
  6274                           	callstack 0
  6275   003106                     ___aomod:
  6276                           	callstack 22
  6277   003106  0E00               	movlw	0
  6278   003108  6E14               	movwf	___aomod@sign^0,c
  6279   00310A  BE0A               	btfsc	(___aomod@dividend+7)^0,7,c
  6280   00310C  EF8C  F018         	goto	u2680
  6281   003110  EF8A  F018         	goto	u2681
  6282   003114                     u2681:
  6283   003114  EF9E  F018         	goto	l3060
  6284   003118                     u2680:
  6285   003118  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6286   00311A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6287   00311C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6288   00311E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6289   003120  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6290   003122  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6291   003124  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6292   003126  6C03               	negf	___aomod@dividend^0,c
  6293   003128  0E00               	movlw	0
  6294   00312A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6295   00312C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6296   00312E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6297   003130  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6298   003132  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6299   003134  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6300   003136  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6301   003138  0E01               	movlw	1
  6302   00313A  6E14               	movwf	___aomod@sign^0,c
  6303   00313C                     l3060:
  6304   00313C  BE12               	btfsc	(___aomod@divisor+7)^0,7,c
  6305   00313E  EFA5  F018         	goto	u2690
  6306   003142  EFA3  F018         	goto	u2691
  6307   003146                     u2691:
  6308   003146  EFB5  F018         	goto	l3064
  6309   00314A                     u2690:
  6310   00314A  1E12               	comf	(___aomod@divisor+7)^0,f,c
  6311   00314C  1E11               	comf	(___aomod@divisor+6)^0,f,c
  6312   00314E  1E10               	comf	(___aomod@divisor+5)^0,f,c
  6313   003150  1E0F               	comf	(___aomod@divisor+4)^0,f,c
  6314   003152  1E0E               	comf	(___aomod@divisor+3)^0,f,c
  6315   003154  1E0D               	comf	(___aomod@divisor+2)^0,f,c
  6316   003156  1E0C               	comf	(___aomod@divisor+1)^0,f,c
  6317   003158  6C0B               	negf	___aomod@divisor^0,c
  6318   00315A  0E00               	movlw	0
  6319   00315C  220C               	addwfc	(___aomod@divisor+1)^0,f,c
  6320   00315E  220D               	addwfc	(___aomod@divisor+2)^0,f,c
  6321   003160  220E               	addwfc	(___aomod@divisor+3)^0,f,c
  6322   003162  220F               	addwfc	(___aomod@divisor+4)^0,f,c
  6323   003164  2210               	addwfc	(___aomod@divisor+5)^0,f,c
  6324   003166  2211               	addwfc	(___aomod@divisor+6)^0,f,c
  6325   003168  2212               	addwfc	(___aomod@divisor+7)^0,f,c
  6326   00316A                     l3064:
  6327   00316A  500B               	movf	___aomod@divisor^0,w,c
  6328   00316C  100C               	iorwf	(___aomod@divisor+1)^0,w,c
  6329   00316E  100D               	iorwf	(___aomod@divisor+2)^0,w,c
  6330   003170  100E               	iorwf	(___aomod@divisor+3)^0,w,c
  6331   003172  100F               	iorwf	(___aomod@divisor+4)^0,w,c
  6332   003174  1010               	iorwf	(___aomod@divisor+5)^0,w,c
  6333   003176  1011               	iorwf	(___aomod@divisor+6)^0,w,c
  6334   003178  1012               	iorwf	(___aomod@divisor+7)^0,w,c
  6335   00317A  B4D8               	btfsc	status,2,c
  6336   00317C  EFC2  F018         	goto	u2701
  6337   003180  EFC4  F018         	goto	u2700
  6338   003184                     u2701:
  6339   003184  EF0C  F019         	goto	l3080
  6340   003188                     u2700:
  6341   003188  0E01               	movlw	1
  6342   00318A  6E13               	movwf	___aomod@counter^0,c
  6343   00318C  EFD2  F018         	goto	l3070
  6344   003190                     l3068:
  6345   003190  90D8               	bcf	status,0,c
  6346   003192  360B               	rlcf	___aomod@divisor^0,f,c
  6347   003194  360C               	rlcf	(___aomod@divisor+1)^0,f,c
  6348   003196  360D               	rlcf	(___aomod@divisor+2)^0,f,c
  6349   003198  360E               	rlcf	(___aomod@divisor+3)^0,f,c
  6350   00319A  360F               	rlcf	(___aomod@divisor+4)^0,f,c
  6351   00319C  3610               	rlcf	(___aomod@divisor+5)^0,f,c
  6352   00319E  3611               	rlcf	(___aomod@divisor+6)^0,f,c
  6353   0031A0  3612               	rlcf	(___aomod@divisor+7)^0,f,c
  6354   0031A2  2A13               	incf	___aomod@counter^0,f,c
  6355   0031A4                     l3070:
  6356   0031A4  AE12               	btfss	(___aomod@divisor+7)^0,7,c
  6357   0031A6  EFD7  F018         	goto	u2711
  6358   0031AA  EFD9  F018         	goto	u2710
  6359   0031AE                     u2711:
  6360   0031AE  EFC8  F018         	goto	l3068
  6361   0031B2                     u2710:
  6362   0031B2                     l3072:
  6363   0031B2  500B               	movf	___aomod@divisor^0,w,c
  6364   0031B4  5C03               	subwf	___aomod@dividend^0,w,c
  6365   0031B6  500C               	movf	(___aomod@divisor+1)^0,w,c
  6366   0031B8  5804               	subwfb	(___aomod@dividend+1)^0,w,c
  6367   0031BA  500D               	movf	(___aomod@divisor+2)^0,w,c
  6368   0031BC  5805               	subwfb	(___aomod@dividend+2)^0,w,c
  6369   0031BE  500E               	movf	(___aomod@divisor+3)^0,w,c
  6370   0031C0  5806               	subwfb	(___aomod@dividend+3)^0,w,c
  6371   0031C2  500F               	movf	(___aomod@divisor+4)^0,w,c
  6372   0031C4  5807               	subwfb	(___aomod@dividend+4)^0,w,c
  6373   0031C6  5010               	movf	(___aomod@divisor+5)^0,w,c
  6374   0031C8  5808               	subwfb	(___aomod@dividend+5)^0,w,c
  6375   0031CA  5011               	movf	(___aomod@divisor+6)^0,w,c
  6376   0031CC  5809               	subwfb	(___aomod@dividend+6)^0,w,c
  6377   0031CE  5012               	movf	(___aomod@divisor+7)^0,w,c
  6378   0031D0  580A               	subwfb	(___aomod@dividend+7)^0,w,c
  6379   0031D2  A0D8               	btfss	status,0,c
  6380   0031D4  EFEE  F018         	goto	u2721
  6381   0031D8  EFF0  F018         	goto	u2720
  6382   0031DC                     u2721:
  6383   0031DC  EF00  F019         	goto	l3076
  6384   0031E0                     u2720:
  6385   0031E0  500B               	movf	___aomod@divisor^0,w,c
  6386   0031E2  5E03               	subwf	___aomod@dividend^0,f,c
  6387   0031E4  500C               	movf	(___aomod@divisor+1)^0,w,c
  6388   0031E6  5A04               	subwfb	(___aomod@dividend+1)^0,f,c
  6389   0031E8  500D               	movf	(___aomod@divisor+2)^0,w,c
  6390   0031EA  5A05               	subwfb	(___aomod@dividend+2)^0,f,c
  6391   0031EC  500E               	movf	(___aomod@divisor+3)^0,w,c
  6392   0031EE  5A06               	subwfb	(___aomod@dividend+3)^0,f,c
  6393   0031F0  500F               	movf	(___aomod@divisor+4)^0,w,c
  6394   0031F2  5A07               	subwfb	(___aomod@dividend+4)^0,f,c
  6395   0031F4  5010               	movf	(___aomod@divisor+5)^0,w,c
  6396   0031F6  5A08               	subwfb	(___aomod@dividend+5)^0,f,c
  6397   0031F8  5011               	movf	(___aomod@divisor+6)^0,w,c
  6398   0031FA  5A09               	subwfb	(___aomod@dividend+6)^0,f,c
  6399   0031FC  5012               	movf	(___aomod@divisor+7)^0,w,c
  6400   0031FE  5A0A               	subwfb	(___aomod@dividend+7)^0,f,c
  6401   003200                     l3076:
  6402   003200  90D8               	bcf	status,0,c
  6403   003202  3212               	rrcf	(___aomod@divisor+7)^0,f,c
  6404   003204  3211               	rrcf	(___aomod@divisor+6)^0,f,c
  6405   003206  3210               	rrcf	(___aomod@divisor+5)^0,f,c
  6406   003208  320F               	rrcf	(___aomod@divisor+4)^0,f,c
  6407   00320A  320E               	rrcf	(___aomod@divisor+3)^0,f,c
  6408   00320C  320D               	rrcf	(___aomod@divisor+2)^0,f,c
  6409   00320E  320C               	rrcf	(___aomod@divisor+1)^0,f,c
  6410   003210  320B               	rrcf	___aomod@divisor^0,f,c
  6411   003212  2E13               	decfsz	___aomod@counter^0,f,c
  6412   003214  EFD9  F018         	goto	l3072
  6413   003218                     l3080:
  6414   003218  5014               	movf	___aomod@sign^0,w,c
  6415   00321A  B4D8               	btfsc	status,2,c
  6416   00321C  EF12  F019         	goto	u2731
  6417   003220  EF14  F019         	goto	u2730
  6418   003224                     u2731:
  6419   003224  EF24  F019         	goto	l3084
  6420   003228                     u2730:
  6421   003228  1E0A               	comf	(___aomod@dividend+7)^0,f,c
  6422   00322A  1E09               	comf	(___aomod@dividend+6)^0,f,c
  6423   00322C  1E08               	comf	(___aomod@dividend+5)^0,f,c
  6424   00322E  1E07               	comf	(___aomod@dividend+4)^0,f,c
  6425   003230  1E06               	comf	(___aomod@dividend+3)^0,f,c
  6426   003232  1E05               	comf	(___aomod@dividend+2)^0,f,c
  6427   003234  1E04               	comf	(___aomod@dividend+1)^0,f,c
  6428   003236  6C03               	negf	___aomod@dividend^0,c
  6429   003238  0E00               	movlw	0
  6430   00323A  2204               	addwfc	(___aomod@dividend+1)^0,f,c
  6431   00323C  2205               	addwfc	(___aomod@dividend+2)^0,f,c
  6432   00323E  2206               	addwfc	(___aomod@dividend+3)^0,f,c
  6433   003240  2207               	addwfc	(___aomod@dividend+4)^0,f,c
  6434   003242  2208               	addwfc	(___aomod@dividend+5)^0,f,c
  6435   003244  2209               	addwfc	(___aomod@dividend+6)^0,f,c
  6436   003246  220A               	addwfc	(___aomod@dividend+7)^0,f,c
  6437   003248                     l3084:
  6438   003248  C003  F003         	movff	___aomod@dividend,?___aomod
  6439   00324C  C004  F004         	movff	___aomod@dividend+1,?___aomod+1
  6440   003250  C005  F005         	movff	___aomod@dividend+2,?___aomod+2
  6441   003254  C006  F006         	movff	___aomod@dividend+3,?___aomod+3
  6442   003258  C007  F007         	movff	___aomod@dividend+4,?___aomod+4
  6443   00325C  C008  F008         	movff	___aomod@dividend+5,?___aomod+5
  6444   003260  C009  F009         	movff	___aomod@dividend+6,?___aomod+6
  6445   003264  C00A  F00A         	movff	___aomod@dividend+7,?___aomod+7
  6446   003268  0012               	return		;funcret
  6447   00326A                     __end_of___aomod:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function ___aodiv *****************
  6451 ;; Defined at:
  6452 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  dividend        8    2[COMRAM] long long 
  6455 ;;  divisor         8   10[COMRAM] long long 
  6456 ;; Auto vars:     Size  Location     Type
  6457 ;;  quotient        8   20[COMRAM] long long 
  6458 ;;  sign            1   19[COMRAM] unsigned char 
  6459 ;;  counter         1   18[COMRAM] unsigned char 
  6460 ;; Return value:  Size  Location     Type
  6461 ;;                  8    2[COMRAM] long long 
  6462 ;; Registers used:
  6463 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6464 ;; Tracked objects:
  6465 ;;		On entry : 0/0
  6466 ;;		On exit  : 0/0
  6467 ;;		Unchanged: 0/0
  6468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6469 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6470 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6472 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6473 ;;Total ram usage:       26 bytes
  6474 ;; Hardware stack levels used: 1
  6475 ;; Hardware stack levels required when called: 4
  6476 ;; This function calls:
  6477 ;;		Nothing
  6478 ;; This function is called by:
  6479 ;;		_dtoa
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text24
  6484   002F7E                     __ptext24:
  6485                           	callstack 0
  6486   002F7E                     ___aodiv:
  6487                           	callstack 22
  6488   002F7E  0E00               	movlw	0
  6489   002F80  6E14               	movwf	___aodiv@sign^0,c
  6490   002F82  BE12               	btfsc	(___aodiv@divisor+7)^0,7,c
  6491   002F84  EFC8  F017         	goto	u2610
  6492   002F88  EFC6  F017         	goto	u2611
  6493   002F8C                     u2611:
  6494   002F8C  EFDA  F017         	goto	l3016
  6495   002F90                     u2610:
  6496   002F90  1E12               	comf	(___aodiv@divisor+7)^0,f,c
  6497   002F92  1E11               	comf	(___aodiv@divisor+6)^0,f,c
  6498   002F94  1E10               	comf	(___aodiv@divisor+5)^0,f,c
  6499   002F96  1E0F               	comf	(___aodiv@divisor+4)^0,f,c
  6500   002F98  1E0E               	comf	(___aodiv@divisor+3)^0,f,c
  6501   002F9A  1E0D               	comf	(___aodiv@divisor+2)^0,f,c
  6502   002F9C  1E0C               	comf	(___aodiv@divisor+1)^0,f,c
  6503   002F9E  6C0B               	negf	___aodiv@divisor^0,c
  6504   002FA0  0E00               	movlw	0
  6505   002FA2  220C               	addwfc	(___aodiv@divisor+1)^0,f,c
  6506   002FA4  220D               	addwfc	(___aodiv@divisor+2)^0,f,c
  6507   002FA6  220E               	addwfc	(___aodiv@divisor+3)^0,f,c
  6508   002FA8  220F               	addwfc	(___aodiv@divisor+4)^0,f,c
  6509   002FAA  2210               	addwfc	(___aodiv@divisor+5)^0,f,c
  6510   002FAC  2211               	addwfc	(___aodiv@divisor+6)^0,f,c
  6511   002FAE  2212               	addwfc	(___aodiv@divisor+7)^0,f,c
  6512   002FB0  0E01               	movlw	1
  6513   002FB2  6E14               	movwf	___aodiv@sign^0,c
  6514   002FB4                     l3016:
  6515   002FB4  BE0A               	btfsc	(___aodiv@dividend+7)^0,7,c
  6516   002FB6  EFE1  F017         	goto	u2620
  6517   002FBA  EFDF  F017         	goto	u2621
  6518   002FBE                     u2621:
  6519   002FBE  EFF3  F017         	goto	l3022
  6520   002FC2                     u2620:
  6521   002FC2  1E0A               	comf	(___aodiv@dividend+7)^0,f,c
  6522   002FC4  1E09               	comf	(___aodiv@dividend+6)^0,f,c
  6523   002FC6  1E08               	comf	(___aodiv@dividend+5)^0,f,c
  6524   002FC8  1E07               	comf	(___aodiv@dividend+4)^0,f,c
  6525   002FCA  1E06               	comf	(___aodiv@dividend+3)^0,f,c
  6526   002FCC  1E05               	comf	(___aodiv@dividend+2)^0,f,c
  6527   002FCE  1E04               	comf	(___aodiv@dividend+1)^0,f,c
  6528   002FD0  6C03               	negf	___aodiv@dividend^0,c
  6529   002FD2  0E00               	movlw	0
  6530   002FD4  2204               	addwfc	(___aodiv@dividend+1)^0,f,c
  6531   002FD6  2205               	addwfc	(___aodiv@dividend+2)^0,f,c
  6532   002FD8  2206               	addwfc	(___aodiv@dividend+3)^0,f,c
  6533   002FDA  2207               	addwfc	(___aodiv@dividend+4)^0,f,c
  6534   002FDC  2208               	addwfc	(___aodiv@dividend+5)^0,f,c
  6535   002FDE  2209               	addwfc	(___aodiv@dividend+6)^0,f,c
  6536   002FE0  220A               	addwfc	(___aodiv@dividend+7)^0,f,c
  6537   002FE2  0E01               	movlw	1
  6538   002FE4  1A14               	xorwf	___aodiv@sign^0,f,c
  6539   002FE6                     l3022:
  6540   002FE6  EE20  F015         	lfsr	2,___aodiv@quotient
  6541   002FEA  0E07               	movlw	7
  6542   002FEC                     u2631:
  6543   002FEC  6ADE               	clrf	postinc2,c
  6544   002FEE  06E8               	decf	wreg,f,c
  6545   002FF0  E2FD               	bc	u2631
  6546   002FF2  500B               	movf	___aodiv@divisor^0,w,c
  6547   002FF4  100C               	iorwf	(___aodiv@divisor+1)^0,w,c
  6548   002FF6  100D               	iorwf	(___aodiv@divisor+2)^0,w,c
  6549   002FF8  100E               	iorwf	(___aodiv@divisor+3)^0,w,c
  6550   002FFA  100F               	iorwf	(___aodiv@divisor+4)^0,w,c
  6551   002FFC  1010               	iorwf	(___aodiv@divisor+5)^0,w,c
  6552   002FFE  1011               	iorwf	(___aodiv@divisor+6)^0,w,c
  6553   003000  1012               	iorwf	(___aodiv@divisor+7)^0,w,c
  6554   003002  B4D8               	btfsc	status,2,c
  6555   003004  EF06  F018         	goto	u2641
  6556   003008  EF08  F018         	goto	u2640
  6557   00300C                     u2641:
  6558   00300C  EF5A  F018         	goto	l3044
  6559   003010                     u2640:
  6560   003010  0E01               	movlw	1
  6561   003012  6E13               	movwf	___aodiv@counter^0,c
  6562   003014  EF16  F018         	goto	l3030
  6563   003018                     l3028:
  6564   003018  90D8               	bcf	status,0,c
  6565   00301A  360B               	rlcf	___aodiv@divisor^0,f,c
  6566   00301C  360C               	rlcf	(___aodiv@divisor+1)^0,f,c
  6567   00301E  360D               	rlcf	(___aodiv@divisor+2)^0,f,c
  6568   003020  360E               	rlcf	(___aodiv@divisor+3)^0,f,c
  6569   003022  360F               	rlcf	(___aodiv@divisor+4)^0,f,c
  6570   003024  3610               	rlcf	(___aodiv@divisor+5)^0,f,c
  6571   003026  3611               	rlcf	(___aodiv@divisor+6)^0,f,c
  6572   003028  3612               	rlcf	(___aodiv@divisor+7)^0,f,c
  6573   00302A  2A13               	incf	___aodiv@counter^0,f,c
  6574   00302C                     l3030:
  6575   00302C  AE12               	btfss	(___aodiv@divisor+7)^0,7,c
  6576   00302E  EF1B  F018         	goto	u2651
  6577   003032  EF1D  F018         	goto	u2650
  6578   003036                     u2651:
  6579   003036  EF0C  F018         	goto	l3028
  6580   00303A                     u2650:
  6581   00303A                     l3032:
  6582   00303A  90D8               	bcf	status,0,c
  6583   00303C  3615               	rlcf	___aodiv@quotient^0,f,c
  6584   00303E  3616               	rlcf	(___aodiv@quotient+1)^0,f,c
  6585   003040  3617               	rlcf	(___aodiv@quotient+2)^0,f,c
  6586   003042  3618               	rlcf	(___aodiv@quotient+3)^0,f,c
  6587   003044  3619               	rlcf	(___aodiv@quotient+4)^0,f,c
  6588   003046  361A               	rlcf	(___aodiv@quotient+5)^0,f,c
  6589   003048  361B               	rlcf	(___aodiv@quotient+6)^0,f,c
  6590   00304A  361C               	rlcf	(___aodiv@quotient+7)^0,f,c
  6591   00304C  500B               	movf	___aodiv@divisor^0,w,c
  6592   00304E  5C03               	subwf	___aodiv@dividend^0,w,c
  6593   003050  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6594   003052  5804               	subwfb	(___aodiv@dividend+1)^0,w,c
  6595   003054  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6596   003056  5805               	subwfb	(___aodiv@dividend+2)^0,w,c
  6597   003058  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6598   00305A  5806               	subwfb	(___aodiv@dividend+3)^0,w,c
  6599   00305C  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6600   00305E  5807               	subwfb	(___aodiv@dividend+4)^0,w,c
  6601   003060  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6602   003062  5808               	subwfb	(___aodiv@dividend+5)^0,w,c
  6603   003064  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6604   003066  5809               	subwfb	(___aodiv@dividend+6)^0,w,c
  6605   003068  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6606   00306A  580A               	subwfb	(___aodiv@dividend+7)^0,w,c
  6607   00306C  A0D8               	btfss	status,0,c
  6608   00306E  EF3B  F018         	goto	u2661
  6609   003072  EF3D  F018         	goto	u2660
  6610   003076                     u2661:
  6611   003076  EF4E  F018         	goto	l3040
  6612   00307A                     u2660:
  6613   00307A  500B               	movf	___aodiv@divisor^0,w,c
  6614   00307C  5E03               	subwf	___aodiv@dividend^0,f,c
  6615   00307E  500C               	movf	(___aodiv@divisor+1)^0,w,c
  6616   003080  5A04               	subwfb	(___aodiv@dividend+1)^0,f,c
  6617   003082  500D               	movf	(___aodiv@divisor+2)^0,w,c
  6618   003084  5A05               	subwfb	(___aodiv@dividend+2)^0,f,c
  6619   003086  500E               	movf	(___aodiv@divisor+3)^0,w,c
  6620   003088  5A06               	subwfb	(___aodiv@dividend+3)^0,f,c
  6621   00308A  500F               	movf	(___aodiv@divisor+4)^0,w,c
  6622   00308C  5A07               	subwfb	(___aodiv@dividend+4)^0,f,c
  6623   00308E  5010               	movf	(___aodiv@divisor+5)^0,w,c
  6624   003090  5A08               	subwfb	(___aodiv@dividend+5)^0,f,c
  6625   003092  5011               	movf	(___aodiv@divisor+6)^0,w,c
  6626   003094  5A09               	subwfb	(___aodiv@dividend+6)^0,f,c
  6627   003096  5012               	movf	(___aodiv@divisor+7)^0,w,c
  6628   003098  5A0A               	subwfb	(___aodiv@dividend+7)^0,f,c
  6629   00309A  8015               	bsf	___aodiv@quotient^0,0,c
  6630   00309C                     l3040:
  6631   00309C  90D8               	bcf	status,0,c
  6632   00309E  3212               	rrcf	(___aodiv@divisor+7)^0,f,c
  6633   0030A0  3211               	rrcf	(___aodiv@divisor+6)^0,f,c
  6634   0030A2  3210               	rrcf	(___aodiv@divisor+5)^0,f,c
  6635   0030A4  320F               	rrcf	(___aodiv@divisor+4)^0,f,c
  6636   0030A6  320E               	rrcf	(___aodiv@divisor+3)^0,f,c
  6637   0030A8  320D               	rrcf	(___aodiv@divisor+2)^0,f,c
  6638   0030AA  320C               	rrcf	(___aodiv@divisor+1)^0,f,c
  6639   0030AC  320B               	rrcf	___aodiv@divisor^0,f,c
  6640   0030AE  2E13               	decfsz	___aodiv@counter^0,f,c
  6641   0030B0  EF1D  F018         	goto	l3032
  6642   0030B4                     l3044:
  6643   0030B4  5014               	movf	___aodiv@sign^0,w,c
  6644   0030B6  B4D8               	btfsc	status,2,c
  6645   0030B8  EF60  F018         	goto	u2671
  6646   0030BC  EF62  F018         	goto	u2670
  6647   0030C0                     u2671:
  6648   0030C0  EF72  F018         	goto	l3048
  6649   0030C4                     u2670:
  6650   0030C4  1E1C               	comf	(___aodiv@quotient+7)^0,f,c
  6651   0030C6  1E1B               	comf	(___aodiv@quotient+6)^0,f,c
  6652   0030C8  1E1A               	comf	(___aodiv@quotient+5)^0,f,c
  6653   0030CA  1E19               	comf	(___aodiv@quotient+4)^0,f,c
  6654   0030CC  1E18               	comf	(___aodiv@quotient+3)^0,f,c
  6655   0030CE  1E17               	comf	(___aodiv@quotient+2)^0,f,c
  6656   0030D0  1E16               	comf	(___aodiv@quotient+1)^0,f,c
  6657   0030D2  6C15               	negf	___aodiv@quotient^0,c
  6658   0030D4  0E00               	movlw	0
  6659   0030D6  2216               	addwfc	(___aodiv@quotient+1)^0,f,c
  6660   0030D8  2217               	addwfc	(___aodiv@quotient+2)^0,f,c
  6661   0030DA  2218               	addwfc	(___aodiv@quotient+3)^0,f,c
  6662   0030DC  2219               	addwfc	(___aodiv@quotient+4)^0,f,c
  6663   0030DE  221A               	addwfc	(___aodiv@quotient+5)^0,f,c
  6664   0030E0  221B               	addwfc	(___aodiv@quotient+6)^0,f,c
  6665   0030E2  221C               	addwfc	(___aodiv@quotient+7)^0,f,c
  6666   0030E4                     l3048:
  6667   0030E4  C015  F003         	movff	___aodiv@quotient,?___aodiv
  6668   0030E8  C016  F004         	movff	___aodiv@quotient+1,?___aodiv+1
  6669   0030EC  C017  F005         	movff	___aodiv@quotient+2,?___aodiv+2
  6670   0030F0  C018  F006         	movff	___aodiv@quotient+3,?___aodiv+3
  6671   0030F4  C019  F007         	movff	___aodiv@quotient+4,?___aodiv+4
  6672   0030F8  C01A  F008         	movff	___aodiv@quotient+5,?___aodiv+5
  6673   0030FC  C01B  F009         	movff	___aodiv@quotient+6,?___aodiv+6
  6674   003100  C01C  F00A         	movff	___aodiv@quotient+7,?___aodiv+7
  6675   003104  0012               	return		;funcret
  6676   003106                     __end_of___aodiv:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _sendTxBuf *****************
  6680 ;; Defined at:
  6681 ;;		line 93 in file "serial.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2, status,0, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; Hardware stack levels required when called: 5
  6702 ;; This function calls:
  6703 ;;		_isDataInTxBuf
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           	psect	text25
  6710   003DAC                     __ptext25:
  6711                           	callstack 0
  6712   003DAC                     _sendTxBuf:
  6713                           	callstack 25
  6714   003DAC                     
  6715                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6716   003DAC  EC5C  F01F         	call	_isDataInTxBuf	;wreg free
  6717   003DB0  0900               	iorlw	0
  6718   003DB2  B4D8               	btfsc	status,2,c
  6719   003DB4  EFDE  F01E         	goto	u4221
  6720   003DB8  EFE0  F01E         	goto	u4220
  6721   003DBC                     u4221:
  6722   003DBC  EFE7  F01E         	goto	l4098
  6723   003DC0                     u4220:
  6724   003DC0  010E               	movlb	14	; () banked
  6725   003DC2  852D               	bsf	45,2,b	;volatile
  6726   003DC4                     
  6727                           ; BSR set to: 14
  6728                           ;serial.c: 95:     DataFlag =1;}
  6729   003DC4  0E01               	movlw	1
  6730   003DC6  0100               	movlb	0	; () banked
  6731   003DC8  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6732   003DCA  EFEA  F01E         	goto	l184
  6733   003DCE                     l4098:
  6734                           
  6735                           ;serial.c: 97:         DataFlag=0;}
  6736   003DCE  0E00               	movlw	0
  6737   003DD0  0100               	movlb	0	; () banked
  6738   003DD2  6FFB               	movwf	_DataFlag& (0+255),b	;volatile
  6739   003DD4                     l184:
  6740                           
  6741                           ; BSR set to: 0
  6742   003DD4  0012               	return		;funcret
  6743   003DD6                     __end_of_sendTxBuf:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _isDataInTxBuf *****************
  6747 ;; Defined at:
  6748 ;;		line 80 in file "serial.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      unsigned char 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 4
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_sendTxBuf
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text26
  6777   003EB8                     __ptext26:
  6778                           	callstack 0
  6779   003EB8                     _isDataInTxBuf:
  6780                           	callstack 25
  6781   003EB8                     
  6782                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6783   003EB8  5059               	movf	_TxBufReadCnt^0,w,c	;volatile
  6784   003EBA  185A               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6785   003EBC  A4D8               	btfss	status,2,c
  6786   003EBE  EF63  F01F         	goto	u4081
  6787   003EC2  EF66  F01F         	goto	u4080
  6788   003EC6                     u4081:
  6789   003EC6  0E01               	movlw	1
  6790   003EC8  EF67  F01F         	goto	u4090
  6791   003ECC                     u4080:
  6792   003ECC  0E00               	movlw	0
  6793   003ECE                     u4090:
  6794   003ECE  0012               	return		;funcret
  6795   003ED0                     __end_of_isDataInTxBuf:
  6796                           	callstack 0
  6797                           
  6798 ;; *************** function _readColours *****************
  6799 ;; Defined at:
  6800 ;;		line 87 in file "color.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;  vals            2   13[COMRAM] PTR struct RGB
  6803 ;;		 -> vals(8), 
  6804 ;; Auto vars:     Size  Location     Type
  6805 ;;		None
  6806 ;; Return value:  Size  Location     Type
  6807 ;;                  1    wreg      void 
  6808 ;; Registers used:
  6809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6810 ;; Tracked objects:
  6811 ;;		On entry : 0/0
  6812 ;;		On exit  : 0/0
  6813 ;;		Unchanged: 0/0
  6814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6819 ;;Total ram usage:        2 bytes
  6820 ;; Hardware stack levels used: 1
  6821 ;; Hardware stack levels required when called: 7
  6822 ;; This function calls:
  6823 ;;		_color_read_Blue
  6824 ;;		_color_read_Green
  6825 ;;		_color_read_Red
  6826 ;;		_color_read_lum
  6827 ;; This function is called by:
  6828 ;;		_main
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text27
  6833   0038E0                     __ptext27:
  6834                           	callstack 0
  6835   0038E0                     _readColours:
  6836                           	callstack 23
  6837   0038E0                     
  6838                           ;color.c: 88:     vals ->R = color_read_Red();
  6839   0038E0  EC42  F01D         	call	_color_read_Red	;wreg free
  6840   0038E4  C00E  FFD9         	movff	readColours@vals,fsr2l
  6841   0038E8  C00F  FFDA         	movff	readColours@vals+1,fsr2h
  6842   0038EC  C007  FFDE         	movff	?_color_read_Red,postinc2
  6843   0038F0  C008  FFDD         	movff	?_color_read_Red+1,postdec2
  6844                           
  6845                           ;color.c: 89:     vals ->B = color_read_Blue();
  6846   0038F4  EC92  F01D         	call	_color_read_Blue	;wreg free
  6847   0038F8  EE20 F004          	lfsr	2,4
  6848   0038FC  500E               	movf	readColours@vals^0,w,c
  6849   0038FE  26D9               	addwf	fsr2l,f,c
  6850   003900  500F               	movf	(readColours@vals+1)^0,w,c
  6851   003902  22DA               	addwfc	fsr2h,f,c
  6852   003904  C007  FFDE         	movff	?_color_read_Blue,postinc2
  6853   003908  C008  FFDD         	movff	?_color_read_Blue+1,postdec2
  6854                           
  6855                           ;color.c: 90:     vals ->G = color_read_Green();
  6856   00390C  EC6A  F01D         	call	_color_read_Green	;wreg free
  6857   003910  EE20 F002          	lfsr	2,2
  6858   003914  500E               	movf	readColours@vals^0,w,c
  6859   003916  26D9               	addwf	fsr2l,f,c
  6860   003918  500F               	movf	(readColours@vals+1)^0,w,c
  6861   00391A  22DA               	addwfc	fsr2h,f,c
  6862   00391C  C007  FFDE         	movff	?_color_read_Green,postinc2
  6863   003920  C008  FFDD         	movff	?_color_read_Green+1,postdec2
  6864                           
  6865                           ;color.c: 91:     vals ->L = color_read_lum();
  6866   003924  EC1A  F01D         	call	_color_read_lum	;wreg free
  6867   003928  EE20 F006          	lfsr	2,6
  6868   00392C  500E               	movf	readColours@vals^0,w,c
  6869   00392E  26D9               	addwf	fsr2l,f,c
  6870   003930  500F               	movf	(readColours@vals+1)^0,w,c
  6871   003932  22DA               	addwfc	fsr2h,f,c
  6872   003934  C007  FFDE         	movff	?_color_read_lum,postinc2
  6873   003938  C008  FFDD         	movff	?_color_read_lum+1,postdec2
  6874   00393C  0012               	return		;funcret
  6875   00393E                     __end_of_readColours:
  6876                           	callstack 0
  6877                           
  6878 ;; *************** function _color_read_lum *****************
  6879 ;; Defined at:
  6880 ;;		line 31 in file "color.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;  tmp             2   11[COMRAM] unsigned int 
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  2    6[COMRAM] unsigned int 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6894 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6896 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6898 ;;Total ram usage:        7 bytes
  6899 ;; Hardware stack levels used: 1
  6900 ;; Hardware stack levels required when called: 6
  6901 ;; This function calls:
  6902 ;;		_I2C_2_Master_Read
  6903 ;;		_I2C_2_Master_RepStart
  6904 ;;		_I2C_2_Master_Start
  6905 ;;		_I2C_2_Master_Stop
  6906 ;;		_I2C_2_Master_Write
  6907 ;; This function is called by:
  6908 ;;		_readColours
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text28
  6913   003A34                     __ptext28:
  6914                           	callstack 0
  6915   003A34                     _color_read_lum:
  6916                           	callstack 23
  6917   003A34                     
  6918                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  6919   003A34  EC89  F01F         	call	_I2C_2_Master_Start	;wreg free
  6920                           
  6921                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  6922   003A38  0E52               	movlw	82
  6923   003A3A  EC73  F01F         	call	_I2C_2_Master_Write
  6924                           
  6925                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x14);
  6926   003A3E  0EB4               	movlw	180
  6927   003A40  EC73  F01F         	call	_I2C_2_Master_Write
  6928                           
  6929                           ;color.c: 37:  I2C_2_Master_RepStart();
  6930   003A44  EC7F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6931                           
  6932                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  6933   003A48  0E53               	movlw	83
  6934   003A4A  EC73  F01F         	call	_I2C_2_Master_Write
  6935                           
  6936                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  6937   003A4E  0E01               	movlw	1
  6938   003A50  EC47  F01E         	call	_I2C_2_Master_Read
  6939   003A54  6E09               	movwf	??_color_read_lum^0,c
  6940   003A56  5009               	movf	??_color_read_lum^0,w,c
  6941   003A58  6E0C               	movwf	color_read_lum@tmp^0,c
  6942   003A5A  6A0D               	clrf	(color_read_lum@tmp+1)^0,c
  6943                           
  6944                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6945   003A5C  0E00               	movlw	0
  6946   003A5E  EC47  F01E         	call	_I2C_2_Master_Read
  6947   003A62  6E09               	movwf	??_color_read_lum^0,c
  6948   003A64  5009               	movf	??_color_read_lum^0,w,c
  6949   003A66  6E0B               	movwf	(??_color_read_lum+2)^0,c
  6950   003A68  6A0A               	clrf	(??_color_read_lum+1)^0,c
  6951   003A6A  500C               	movf	color_read_lum@tmp^0,w,c
  6952   003A6C  100A               	iorwf	(??_color_read_lum+1)^0,w,c
  6953   003A6E  6E0C               	movwf	color_read_lum@tmp^0,c
  6954   003A70  500D               	movf	(color_read_lum@tmp+1)^0,w,c
  6955   003A72  100B               	iorwf	(??_color_read_lum+2)^0,w,c
  6956   003A74  6E0D               	movwf	(color_read_lum@tmp+1)^0,c
  6957                           
  6958                           ;color.c: 41:  I2C_2_Master_Stop();
  6959   003A76  EC84  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6960   003A7A                     
  6961                           ;color.c: 42:  return tmp;
  6962   003A7A  C00C  F007         	movff	color_read_lum@tmp,?_color_read_lum
  6963   003A7E  C00D  F008         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6964   003A82  0012               	return		;funcret
  6965   003A84                     __end_of_color_read_lum:
  6966                           	callstack 0
  6967                           
  6968 ;; *************** function _color_read_Red *****************
  6969 ;; Defined at:
  6970 ;;		line 45 in file "color.c"
  6971 ;; Parameters:    Size  Location     Type
  6972 ;;		None
  6973 ;; Auto vars:     Size  Location     Type
  6974 ;;  tmp             2   11[COMRAM] unsigned int 
  6975 ;; Return value:  Size  Location     Type
  6976 ;;                  2    6[COMRAM] unsigned int 
  6977 ;; Registers used:
  6978 ;;		wreg, status,2, status,0, cstack
  6979 ;; Tracked objects:
  6980 ;;		On entry : 0/0
  6981 ;;		On exit  : 0/0
  6982 ;;		Unchanged: 0/0
  6983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6984 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6985 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6986 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6987 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6988 ;;Total ram usage:        7 bytes
  6989 ;; Hardware stack levels used: 1
  6990 ;; Hardware stack levels required when called: 6
  6991 ;; This function calls:
  6992 ;;		_I2C_2_Master_Read
  6993 ;;		_I2C_2_Master_RepStart
  6994 ;;		_I2C_2_Master_Start
  6995 ;;		_I2C_2_Master_Stop
  6996 ;;		_I2C_2_Master_Write
  6997 ;; This function is called by:
  6998 ;;		_readColours
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           	psect	text29
  7003   003A84                     __ptext29:
  7004                           	callstack 0
  7005   003A84                     _color_read_Red:
  7006                           	callstack 23
  7007   003A84                     
  7008                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  7009   003A84  EC89  F01F         	call	_I2C_2_Master_Start	;wreg free
  7010                           
  7011                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  7012   003A88  0E52               	movlw	82
  7013   003A8A  EC73  F01F         	call	_I2C_2_Master_Write
  7014                           
  7015                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x16);
  7016   003A8E  0EB6               	movlw	182
  7017   003A90  EC73  F01F         	call	_I2C_2_Master_Write
  7018                           
  7019                           ;color.c: 51:  I2C_2_Master_RepStart();
  7020   003A94  EC7F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7021                           
  7022                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  7023   003A98  0E53               	movlw	83
  7024   003A9A  EC73  F01F         	call	_I2C_2_Master_Write
  7025                           
  7026                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  7027   003A9E  0E01               	movlw	1
  7028   003AA0  EC47  F01E         	call	_I2C_2_Master_Read
  7029   003AA4  6E09               	movwf	??_color_read_Red^0,c
  7030   003AA6  5009               	movf	??_color_read_Red^0,w,c
  7031   003AA8  6E0C               	movwf	color_read_Red@tmp^0,c
  7032   003AAA  6A0D               	clrf	(color_read_Red@tmp+1)^0,c
  7033                           
  7034                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7035   003AAC  0E00               	movlw	0
  7036   003AAE  EC47  F01E         	call	_I2C_2_Master_Read
  7037   003AB2  6E09               	movwf	??_color_read_Red^0,c
  7038   003AB4  5009               	movf	??_color_read_Red^0,w,c
  7039   003AB6  6E0B               	movwf	(??_color_read_Red+2)^0,c
  7040   003AB8  6A0A               	clrf	(??_color_read_Red+1)^0,c
  7041   003ABA  500C               	movf	color_read_Red@tmp^0,w,c
  7042   003ABC  100A               	iorwf	(??_color_read_Red+1)^0,w,c
  7043   003ABE  6E0C               	movwf	color_read_Red@tmp^0,c
  7044   003AC0  500D               	movf	(color_read_Red@tmp+1)^0,w,c
  7045   003AC2  100B               	iorwf	(??_color_read_Red+2)^0,w,c
  7046   003AC4  6E0D               	movwf	(color_read_Red@tmp+1)^0,c
  7047                           
  7048                           ;color.c: 55:  I2C_2_Master_Stop();
  7049   003AC6  EC84  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7050   003ACA                     
  7051                           ;color.c: 56:  return tmp;
  7052   003ACA  C00C  F007         	movff	color_read_Red@tmp,?_color_read_Red
  7053   003ACE  C00D  F008         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7054   003AD2  0012               	return		;funcret
  7055   003AD4                     __end_of_color_read_Red:
  7056                           	callstack 0
  7057                           
  7058 ;; *************** function _color_read_Green *****************
  7059 ;; Defined at:
  7060 ;;		line 58 in file "color.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;		None
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  tmp             2   11[COMRAM] unsigned int 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  2    6[COMRAM] unsigned int 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7074 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;Total ram usage:        7 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 6
  7081 ;; This function calls:
  7082 ;;		_I2C_2_Master_Read
  7083 ;;		_I2C_2_Master_RepStart
  7084 ;;		_I2C_2_Master_Start
  7085 ;;		_I2C_2_Master_Stop
  7086 ;;		_I2C_2_Master_Write
  7087 ;; This function is called by:
  7088 ;;		_readColours
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           	psect	text30
  7093   003AD4                     __ptext30:
  7094                           	callstack 0
  7095   003AD4                     _color_read_Green:
  7096                           	callstack 23
  7097   003AD4                     
  7098                           ;color.c: 60:  unsigned int tmp;;color.c: 61:  I2C_2_Master_Start();
  7099   003AD4  EC89  F01F         	call	_I2C_2_Master_Start	;wreg free
  7100                           
  7101                           ;color.c: 62:  I2C_2_Master_Write(0x52 | 0x00);
  7102   003AD8  0E52               	movlw	82
  7103   003ADA  EC73  F01F         	call	_I2C_2_Master_Write
  7104                           
  7105                           ;color.c: 63:  I2C_2_Master_Write(0xA0 | 0x16);
  7106   003ADE  0EB6               	movlw	182
  7107   003AE0  EC73  F01F         	call	_I2C_2_Master_Write
  7108                           
  7109                           ;color.c: 64:  I2C_2_Master_RepStart();
  7110   003AE4  EC7F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7111                           
  7112                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x01);
  7113   003AE8  0E53               	movlw	83
  7114   003AEA  EC73  F01F         	call	_I2C_2_Master_Write
  7115                           
  7116                           ;color.c: 66:  tmp=I2C_2_Master_Read(1);
  7117   003AEE  0E01               	movlw	1
  7118   003AF0  EC47  F01E         	call	_I2C_2_Master_Read
  7119   003AF4  6E09               	movwf	??_color_read_Green^0,c
  7120   003AF6  5009               	movf	??_color_read_Green^0,w,c
  7121   003AF8  6E0C               	movwf	color_read_Green@tmp^0,c
  7122   003AFA  6A0D               	clrf	(color_read_Green@tmp+1)^0,c
  7123                           
  7124                           ;color.c: 67:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7125   003AFC  0E00               	movlw	0
  7126   003AFE  EC47  F01E         	call	_I2C_2_Master_Read
  7127   003B02  6E09               	movwf	??_color_read_Green^0,c
  7128   003B04  5009               	movf	??_color_read_Green^0,w,c
  7129   003B06  6E0B               	movwf	(??_color_read_Green+2)^0,c
  7130   003B08  6A0A               	clrf	(??_color_read_Green+1)^0,c
  7131   003B0A  500C               	movf	color_read_Green@tmp^0,w,c
  7132   003B0C  100A               	iorwf	(??_color_read_Green+1)^0,w,c
  7133   003B0E  6E0C               	movwf	color_read_Green@tmp^0,c
  7134   003B10  500D               	movf	(color_read_Green@tmp+1)^0,w,c
  7135   003B12  100B               	iorwf	(??_color_read_Green+2)^0,w,c
  7136   003B14  6E0D               	movwf	(color_read_Green@tmp+1)^0,c
  7137                           
  7138                           ;color.c: 68:  I2C_2_Master_Stop();
  7139   003B16  EC84  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7140   003B1A                     
  7141                           ;color.c: 69:  return tmp;
  7142   003B1A  C00C  F007         	movff	color_read_Green@tmp,?_color_read_Green
  7143   003B1E  C00D  F008         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7144   003B22  0012               	return		;funcret
  7145   003B24                     __end_of_color_read_Green:
  7146                           	callstack 0
  7147                           
  7148 ;; *************** function _color_read_Blue *****************
  7149 ;; Defined at:
  7150 ;;		line 72 in file "color.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;		None
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  tmp             2   11[COMRAM] unsigned int 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  2    6[COMRAM] unsigned int 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;Total ram usage:        7 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 6
  7171 ;; This function calls:
  7172 ;;		_I2C_2_Master_Read
  7173 ;;		_I2C_2_Master_RepStart
  7174 ;;		_I2C_2_Master_Start
  7175 ;;		_I2C_2_Master_Stop
  7176 ;;		_I2C_2_Master_Write
  7177 ;; This function is called by:
  7178 ;;		_readColours
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           	psect	text31
  7183   003B24                     __ptext31:
  7184                           	callstack 0
  7185   003B24                     _color_read_Blue:
  7186                           	callstack 23
  7187   003B24                     
  7188                           ;color.c: 74:  unsigned int tmp;;color.c: 75:  I2C_2_Master_Start();
  7189   003B24  EC89  F01F         	call	_I2C_2_Master_Start	;wreg free
  7190                           
  7191                           ;color.c: 76:  I2C_2_Master_Write(0x52 | 0x00);
  7192   003B28  0E52               	movlw	82
  7193   003B2A  EC73  F01F         	call	_I2C_2_Master_Write
  7194                           
  7195                           ;color.c: 77:  I2C_2_Master_Write(0xA0 | 0x1A);
  7196   003B2E  0EBA               	movlw	186
  7197   003B30  EC73  F01F         	call	_I2C_2_Master_Write
  7198                           
  7199                           ;color.c: 78:  I2C_2_Master_RepStart();
  7200   003B34  EC7F  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7201                           
  7202                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x01);
  7203   003B38  0E53               	movlw	83
  7204   003B3A  EC73  F01F         	call	_I2C_2_Master_Write
  7205                           
  7206                           ;color.c: 80:  tmp=I2C_2_Master_Read(1);
  7207   003B3E  0E01               	movlw	1
  7208   003B40  EC47  F01E         	call	_I2C_2_Master_Read
  7209   003B44  6E09               	movwf	??_color_read_Blue^0,c
  7210   003B46  5009               	movf	??_color_read_Blue^0,w,c
  7211   003B48  6E0C               	movwf	color_read_Blue@tmp^0,c
  7212   003B4A  6A0D               	clrf	(color_read_Blue@tmp+1)^0,c
  7213                           
  7214                           ;color.c: 81:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7215   003B4C  0E00               	movlw	0
  7216   003B4E  EC47  F01E         	call	_I2C_2_Master_Read
  7217   003B52  6E09               	movwf	??_color_read_Blue^0,c
  7218   003B54  5009               	movf	??_color_read_Blue^0,w,c
  7219   003B56  6E0B               	movwf	(??_color_read_Blue+2)^0,c
  7220   003B58  6A0A               	clrf	(??_color_read_Blue+1)^0,c
  7221   003B5A  500C               	movf	color_read_Blue@tmp^0,w,c
  7222   003B5C  100A               	iorwf	(??_color_read_Blue+1)^0,w,c
  7223   003B5E  6E0C               	movwf	color_read_Blue@tmp^0,c
  7224   003B60  500D               	movf	(color_read_Blue@tmp+1)^0,w,c
  7225   003B62  100B               	iorwf	(??_color_read_Blue+2)^0,w,c
  7226   003B64  6E0D               	movwf	(color_read_Blue@tmp+1)^0,c
  7227                           
  7228                           ;color.c: 82:  I2C_2_Master_Stop();
  7229   003B66  EC84  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7230   003B6A                     
  7231                           ;color.c: 83:  return tmp;
  7232   003B6A  C00C  F007         	movff	color_read_Blue@tmp,?_color_read_Blue
  7233   003B6E  C00D  F008         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7234   003B72  0012               	return		;funcret
  7235   003B74                     __end_of_color_read_Blue:
  7236                           	callstack 0
  7237                           
  7238 ;; *************** function _I2C_2_Master_RepStart *****************
  7239 ;; Defined at:
  7240 ;;		line 33 in file "i2c.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;		None
  7245 ;; Return value:  Size  Location     Type
  7246 ;;                  1    wreg      void 
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;Total ram usage:        0 bytes
  7259 ;; Hardware stack levels used: 1
  7260 ;; Hardware stack levels required when called: 5
  7261 ;; This function calls:
  7262 ;;		_I2C_2_Master_Idle
  7263 ;; This function is called by:
  7264 ;;		_color_read_lum
  7265 ;;		_color_read_Red
  7266 ;;		_color_read_Green
  7267 ;;		_color_read_Blue
  7268 ;; This function uses a non-reentrant model
  7269 ;;
  7270                           
  7271                           	psect	text32
  7272   003EFE                     __ptext32:
  7273                           	callstack 0
  7274   003EFE                     _I2C_2_Master_RepStart:
  7275                           	callstack 23
  7276   003EFE                     
  7277                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7278   003EFE  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7279   003F02                     
  7280                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7281   003F02  010E               	movlb	14	; () banked
  7282   003F04  83DA               	bsf	218,1,b	;volatile
  7283   003F06                     
  7284                           ; BSR set to: 14
  7285   003F06  0012               	return		;funcret
  7286   003F08                     __end_of_I2C_2_Master_RepStart:
  7287                           	callstack 0
  7288                           
  7289 ;; *************** function _I2C_2_Master_Read *****************
  7290 ;; Defined at:
  7291 ;;		line 51 in file "i2c.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  ack             1    wreg     unsigned char 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  ack             1    4[COMRAM] unsigned char 
  7296 ;;  tmp             1    5[COMRAM] unsigned char 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      unsigned char 
  7299 ;; Registers used:
  7300 ;;		wreg, status,2, status,0, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;Total ram usage:        3 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 5
  7313 ;; This function calls:
  7314 ;;		_I2C_2_Master_Idle
  7315 ;; This function is called by:
  7316 ;;		_color_read_lum
  7317 ;;		_color_read_Red
  7318 ;;		_color_read_Green
  7319 ;;		_color_read_Blue
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text33
  7324   003C8E                     __ptext33:
  7325                           	callstack 0
  7326   003C8E                     _I2C_2_Master_Read:
  7327                           	callstack 23
  7328                           
  7329                           ; BSR set to: 14
  7330                           ;incstack = 0
  7331                           ;I2C_2_Master_Read@ack stored from wreg
  7332   003C8E  6E05               	movwf	I2C_2_Master_Read@ack^0,c
  7333   003C90                     
  7334                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7335   003C90  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7336   003C94                     
  7337                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7338   003C94  010E               	movlb	14	; () banked
  7339   003C96  87DA               	bsf	218,3,b	;volatile
  7340                           
  7341                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7342   003C98  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7343   003C9C                     
  7344                           ;i2c.c: 57:   tmp = SSP2BUF;
  7345   003C9C  CED5 F006          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7346                           
  7347                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7348   003CA0  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7349   003CA4                     
  7350                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7351   003CA4  5005               	movf	I2C_2_Master_Read@ack^0,w,c
  7352   003CA6  B4D8               	btfsc	status,2,c
  7353   003CA8  EF58  F01E         	goto	u3991
  7354   003CAC  EF5C  F01E         	goto	u3990
  7355   003CB0                     u3991:
  7356   003CB0  6A04               	clrf	??_I2C_2_Master_Read^0,c
  7357   003CB2  2A04               	incf	??_I2C_2_Master_Read^0,f,c
  7358   003CB4  EF5D  F01E         	goto	u4008
  7359   003CB8                     u3990:
  7360   003CB8  6A04               	clrf	??_I2C_2_Master_Read^0,c
  7361   003CBA                     u4008:
  7362   003CBA  3A04               	swapf	??_I2C_2_Master_Read^0,f,c
  7363   003CBC  4604               	rlncf	??_I2C_2_Master_Read^0,f,c
  7364   003CBE  010E               	movlb	14	; () banked
  7365   003CC0  51DA               	movf	218,w,b	;volatile
  7366   003CC2  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  7367   003CC4  0BDF               	andlw	-33
  7368   003CC6  1804               	xorwf	??_I2C_2_Master_Read^0,w,c
  7369   003CC8  6FDA               	movwf	218,b	;volatile
  7370   003CCA                     
  7371                           ; BSR set to: 14
  7372                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7373   003CCA  89DA               	bsf	218,4,b	;volatile
  7374   003CCC                     
  7375                           ; BSR set to: 14
  7376                           ;i2c.c: 61:   return tmp;
  7377   003CCC  5006               	movf	I2C_2_Master_Read@tmp^0,w,c
  7378   003CCE                     
  7379                           ; BSR set to: 14
  7380   003CCE  0012               	return		;funcret
  7381   003CD0                     __end_of_I2C_2_Master_Read:
  7382                           	callstack 0
  7383                           
  7384 ;; *************** function _initUSART4 *****************
  7385 ;; Defined at:
  7386 ;;		line 4 in file "serial.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      void 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 4
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_main
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text34
  7415   003E9A                     __ptext34:
  7416                           	callstack 0
  7417   003E9A                     _initUSART4:
  7418                           	callstack 26
  7419   003E9A                     
  7420                           ;serial.c: 5:     RC0PPS = 0x12;
  7421   003E9A  0E12               	movlw	18
  7422   003E9C  010E               	movlb	14	; () banked
  7423   003E9E  6F62               	movwf	98,b	;volatile
  7424                           
  7425                           ;serial.c: 6:     RX4PPS = 0x11;
  7426   003EA0  0E11               	movlw	17
  7427   003EA2  6F15               	movwf	21,b	;volatile
  7428   003EA4                     
  7429                           ; BSR set to: 14
  7430                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7431   003EA4  97E9               	bcf	233,3,b	;volatile
  7432   003EA6                     
  7433                           ; BSR set to: 14
  7434                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7435   003EA6  95E8               	bcf	232,2,b	;volatile
  7436                           
  7437                           ;serial.c: 9:     SP4BRGL = 51;
  7438   003EA8  0E33               	movlw	51
  7439   003EAA  6FE5               	movwf	229,b	;volatile
  7440                           
  7441                           ;serial.c: 10:     SP4BRGH = 0;
  7442   003EAC  0E00               	movlw	0
  7443   003EAE  6FE6               	movwf	230,b	;volatile
  7444   003EB0                     
  7445                           ; BSR set to: 14
  7446                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7447   003EB0  89E7               	bsf	231,4,b	;volatile
  7448   003EB2                     
  7449                           ; BSR set to: 14
  7450                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7451   003EB2  8BE8               	bsf	232,5,b	;volatile
  7452   003EB4                     
  7453                           ; BSR set to: 14
  7454                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7455   003EB4  8FE7               	bsf	231,7,b	;volatile
  7456   003EB6                     
  7457                           ; BSR set to: 14
  7458   003EB6  0012               	return		;funcret
  7459   003EB8                     __end_of_initUSART4:
  7460                           	callstack 0
  7461                           
  7462 ;; *************** function _colour_rel *****************
  7463 ;; Defined at:
  7464 ;;		line 95 in file "color.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  vals            2   27[COMRAM] PTR struct RGB
  7467 ;;		 -> vals(8), 
  7468 ;;  rel             2   29[COMRAM] PTR struct RGB_rel
  7469 ;;		 -> rel(16), 
  7470 ;; Auto vars:     Size  Location     Type
  7471 ;;  L               4   43[COMRAM] float 
  7472 ;;  B               4   39[COMRAM] float 
  7473 ;;  G               4   35[COMRAM] float 
  7474 ;;  R               4   31[COMRAM] float 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;Total ram usage:       20 bytes
  7489 ;; Hardware stack levels used: 1
  7490 ;; Hardware stack levels required when called: 5
  7491 ;; This function calls:
  7492 ;;		___fldiv
  7493 ;;		___xxtofl
  7494 ;; This function is called by:
  7495 ;;		_main
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text35
  7500   002DF4                     __ptext35:
  7501                           	callstack 0
  7502   002DF4                     _colour_rel:
  7503                           	callstack 25
  7504   002DF4                     
  7505                           ;color.c: 96:     float R = vals->R;
  7506   002DF4  C01C  FFD9         	movff	colour_rel@vals,fsr2l
  7507   002DF8  C01D  FFDA         	movff	colour_rel@vals+1,fsr2h
  7508   002DFC  CFDE F003          	movff	postinc2,___xxtofl@val
  7509   002E00  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7510   002E04  0E00               	movlw	0
  7511   002E06  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7512   002E08  0EFF               	movlw	-1
  7513   002E0A  6E05               	movwf	(___xxtofl@val+2)^0,c
  7514   002E0C  6E06               	movwf	(___xxtofl@val+3)^0,c
  7515   002E0E  0E01               	movlw	1
  7516   002E10  EC20  F016         	call	___xxtofl
  7517   002E14  C003  F020         	movff	?___xxtofl,colour_rel@R
  7518   002E18  C004  F021         	movff	?___xxtofl+1,colour_rel@R+1
  7519   002E1C  C005  F022         	movff	?___xxtofl+2,colour_rel@R+2
  7520   002E20  C006  F023         	movff	?___xxtofl+3,colour_rel@R+3
  7521                           
  7522                           ;color.c: 97:     float G = vals->G;
  7523   002E24  EE20 F002          	lfsr	2,2
  7524   002E28  501C               	movf	colour_rel@vals^0,w,c
  7525   002E2A  26D9               	addwf	fsr2l,f,c
  7526   002E2C  501D               	movf	(colour_rel@vals+1)^0,w,c
  7527   002E2E  22DA               	addwfc	fsr2h,f,c
  7528   002E30  CFDE F003          	movff	postinc2,___xxtofl@val
  7529   002E34  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7530   002E38  0E00               	movlw	0
  7531   002E3A  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7532   002E3C  0EFF               	movlw	-1
  7533   002E3E  6E05               	movwf	(___xxtofl@val+2)^0,c
  7534   002E40  6E06               	movwf	(___xxtofl@val+3)^0,c
  7535   002E42  0E01               	movlw	1
  7536   002E44  EC20  F016         	call	___xxtofl
  7537   002E48  C003  F024         	movff	?___xxtofl,colour_rel@G
  7538   002E4C  C004  F025         	movff	?___xxtofl+1,colour_rel@G+1
  7539   002E50  C005  F026         	movff	?___xxtofl+2,colour_rel@G+2
  7540   002E54  C006  F027         	movff	?___xxtofl+3,colour_rel@G+3
  7541                           
  7542                           ;color.c: 98:     float B = vals->B;
  7543   002E58  EE20 F004          	lfsr	2,4
  7544   002E5C  501C               	movf	colour_rel@vals^0,w,c
  7545   002E5E  26D9               	addwf	fsr2l,f,c
  7546   002E60  501D               	movf	(colour_rel@vals+1)^0,w,c
  7547   002E62  22DA               	addwfc	fsr2h,f,c
  7548   002E64  CFDE F003          	movff	postinc2,___xxtofl@val
  7549   002E68  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7550   002E6C  0E00               	movlw	0
  7551   002E6E  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7552   002E70  0EFF               	movlw	-1
  7553   002E72  6E05               	movwf	(___xxtofl@val+2)^0,c
  7554   002E74  6E06               	movwf	(___xxtofl@val+3)^0,c
  7555   002E76  0E01               	movlw	1
  7556   002E78  EC20  F016         	call	___xxtofl
  7557   002E7C  C003  F028         	movff	?___xxtofl,colour_rel@B
  7558   002E80  C004  F029         	movff	?___xxtofl+1,colour_rel@B+1
  7559   002E84  C005  F02A         	movff	?___xxtofl+2,colour_rel@B+2
  7560   002E88  C006  F02B         	movff	?___xxtofl+3,colour_rel@B+3
  7561                           
  7562                           ;color.c: 99:     float L = vals->L;
  7563   002E8C  EE20 F006          	lfsr	2,6
  7564   002E90  501C               	movf	colour_rel@vals^0,w,c
  7565   002E92  26D9               	addwf	fsr2l,f,c
  7566   002E94  501D               	movf	(colour_rel@vals+1)^0,w,c
  7567   002E96  22DA               	addwfc	fsr2h,f,c
  7568   002E98  CFDE F003          	movff	postinc2,___xxtofl@val
  7569   002E9C  CFDD F004          	movff	postdec2,___xxtofl@val+1
  7570   002EA0  0E00               	movlw	0
  7571   002EA2  BE04               	btfsc	(___xxtofl@val+1)^0,7,c
  7572   002EA4  0EFF               	movlw	-1
  7573   002EA6  6E05               	movwf	(___xxtofl@val+2)^0,c
  7574   002EA8  6E06               	movwf	(___xxtofl@val+3)^0,c
  7575   002EAA  0E01               	movlw	1
  7576   002EAC  EC20  F016         	call	___xxtofl
  7577   002EB0  C003  F02C         	movff	?___xxtofl,colour_rel@L
  7578   002EB4  C004  F02D         	movff	?___xxtofl+1,colour_rel@L+1
  7579   002EB8  C005  F02E         	movff	?___xxtofl+2,colour_rel@L+2
  7580   002EBC  C006  F02F         	movff	?___xxtofl+3,colour_rel@L+3
  7581                           
  7582                           ;color.c: 100:     rel -> R = R/L;
  7583   002EC0  C020  F003         	movff	colour_rel@R,___fldiv@b
  7584   002EC4  C021  F004         	movff	colour_rel@R+1,___fldiv@b+1
  7585   002EC8  C022  F005         	movff	colour_rel@R+2,___fldiv@b+2
  7586   002ECC  C023  F006         	movff	colour_rel@R+3,___fldiv@b+3
  7587   002ED0  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7588   002ED4  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7589   002ED8  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7590   002EDC  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7591   002EE0  EC89  F010         	call	___fldiv	;wreg free
  7592   002EE4  C01E  FFD9         	movff	colour_rel@rel,fsr2l
  7593   002EE8  C01F  FFDA         	movff	colour_rel@rel+1,fsr2h
  7594   002EEC  C003  FFDE         	movff	?___fldiv,postinc2
  7595   002EF0  C004  FFDE         	movff	?___fldiv+1,postinc2
  7596   002EF4  C005  FFDE         	movff	?___fldiv+2,postinc2
  7597   002EF8  C006  FFDE         	movff	?___fldiv+3,postinc2
  7598                           
  7599                           ;color.c: 101:     rel -> B = B/L;
  7600   002EFC  C028  F003         	movff	colour_rel@B,___fldiv@b
  7601   002F00  C029  F004         	movff	colour_rel@B+1,___fldiv@b+1
  7602   002F04  C02A  F005         	movff	colour_rel@B+2,___fldiv@b+2
  7603   002F08  C02B  F006         	movff	colour_rel@B+3,___fldiv@b+3
  7604   002F0C  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7605   002F10  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7606   002F14  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7607   002F18  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7608   002F1C  EC89  F010         	call	___fldiv	;wreg free
  7609   002F20  EE20 F008          	lfsr	2,8
  7610   002F24  501E               	movf	colour_rel@rel^0,w,c
  7611   002F26  26D9               	addwf	fsr2l,f,c
  7612   002F28  501F               	movf	(colour_rel@rel+1)^0,w,c
  7613   002F2A  22DA               	addwfc	fsr2h,f,c
  7614   002F2C  C003  FFDE         	movff	?___fldiv,postinc2
  7615   002F30  C004  FFDE         	movff	?___fldiv+1,postinc2
  7616   002F34  C005  FFDE         	movff	?___fldiv+2,postinc2
  7617   002F38  C006  FFDE         	movff	?___fldiv+3,postinc2
  7618                           
  7619                           ;color.c: 102:     rel -> G = G/L;
  7620   002F3C  C024  F003         	movff	colour_rel@G,___fldiv@b
  7621   002F40  C025  F004         	movff	colour_rel@G+1,___fldiv@b+1
  7622   002F44  C026  F005         	movff	colour_rel@G+2,___fldiv@b+2
  7623   002F48  C027  F006         	movff	colour_rel@G+3,___fldiv@b+3
  7624   002F4C  C02C  F007         	movff	colour_rel@L,___fldiv@a
  7625   002F50  C02D  F008         	movff	colour_rel@L+1,___fldiv@a+1
  7626   002F54  C02E  F009         	movff	colour_rel@L+2,___fldiv@a+2
  7627   002F58  C02F  F00A         	movff	colour_rel@L+3,___fldiv@a+3
  7628   002F5C  EC89  F010         	call	___fldiv	;wreg free
  7629   002F60  EE20 F004          	lfsr	2,4
  7630   002F64  501E               	movf	colour_rel@rel^0,w,c
  7631   002F66  26D9               	addwf	fsr2l,f,c
  7632   002F68  501F               	movf	(colour_rel@rel+1)^0,w,c
  7633   002F6A  22DA               	addwfc	fsr2h,f,c
  7634   002F6C  C003  FFDE         	movff	?___fldiv,postinc2
  7635   002F70  C004  FFDE         	movff	?___fldiv+1,postinc2
  7636   002F74  C005  FFDE         	movff	?___fldiv+2,postinc2
  7637   002F78  C006  FFDE         	movff	?___fldiv+3,postinc2
  7638   002F7C  0012               	return		;funcret
  7639   002F7E                     __end_of_colour_rel:
  7640                           	callstack 0
  7641                           
  7642 ;; *************** function ___xxtofl *****************
  7643 ;; Defined at:
  7644 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  sign            1    wreg     unsigned char 
  7647 ;;  val             4    2[COMRAM] long 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  sign            1   10[COMRAM] unsigned char 
  7650 ;;  arg             4   12[COMRAM] unsigned long 
  7651 ;;  exp             1   11[COMRAM] unsigned char 
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  4    2[COMRAM] unsigned char 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2, status,0
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;Total ram usage:       14 bytes
  7666 ;; Hardware stack levels used: 1
  7667 ;; Hardware stack levels required when called: 4
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_colour_rel
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text36
  7676   002C40                     __ptext36:
  7677                           	callstack 0
  7678   002C40                     ___xxtofl:
  7679                           	callstack 25
  7680                           
  7681                           ;incstack = 0
  7682                           ;___xxtofl@sign stored from wreg
  7683   002C40  6E0B               	movwf	___xxtofl@sign^0,c
  7684   002C42  500B               	movf	___xxtofl@sign^0,w,c
  7685   002C44  B4D8               	btfsc	status,2,c
  7686   002C46  EF27  F016         	goto	u4101
  7687   002C4A  EF29  F016         	goto	u4100
  7688   002C4E                     u4101:
  7689   002C4E  EF4B  F016         	goto	l986
  7690   002C52                     u4100:
  7691   002C52  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  7692   002C54  EF30  F016         	goto	u4110
  7693   002C58  EF2E  F016         	goto	u4111
  7694   002C5C                     u4111:
  7695   002C5C  EF4B  F016         	goto	l986
  7696   002C60                     u4110:
  7697   002C60  C003  F007         	movff	___xxtofl@val,??___xxtofl
  7698   002C64  C004  F008         	movff	___xxtofl@val+1,??___xxtofl+1
  7699   002C68  C005  F009         	movff	___xxtofl@val+2,??___xxtofl+2
  7700   002C6C  C006  F00A         	movff	___xxtofl@val+3,??___xxtofl+3
  7701   002C70  1E07               	comf	??___xxtofl^0,f,c
  7702   002C72  1E08               	comf	(??___xxtofl+1)^0,f,c
  7703   002C74  1E09               	comf	(??___xxtofl+2)^0,f,c
  7704   002C76  1E0A               	comf	(??___xxtofl+3)^0,f,c
  7705   002C78  2A07               	incf	??___xxtofl^0,f,c
  7706   002C7A  0E00               	movlw	0
  7707   002C7C  2208               	addwfc	(??___xxtofl+1)^0,f,c
  7708   002C7E  2209               	addwfc	(??___xxtofl+2)^0,f,c
  7709   002C80  220A               	addwfc	(??___xxtofl+3)^0,f,c
  7710   002C82  C007  F00D         	movff	??___xxtofl,___xxtofl@arg
  7711   002C86  C008  F00E         	movff	??___xxtofl+1,___xxtofl@arg+1
  7712   002C8A  C009  F00F         	movff	??___xxtofl+2,___xxtofl@arg+2
  7713   002C8E  C00A  F010         	movff	??___xxtofl+3,___xxtofl@arg+3
  7714   002C92  EF53  F016         	goto	l3996
  7715   002C96                     l986:
  7716   002C96  C003  F00D         	movff	___xxtofl@val,___xxtofl@arg
  7717   002C9A  C004  F00E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7718   002C9E  C005  F00F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7719   002CA2  C006  F010         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7720   002CA6                     l3996:
  7721   002CA6  5003               	movf	___xxtofl@val^0,w,c
  7722   002CA8  1004               	iorwf	(___xxtofl@val+1)^0,w,c
  7723   002CAA  1005               	iorwf	(___xxtofl@val+2)^0,w,c
  7724   002CAC  1006               	iorwf	(___xxtofl@val+3)^0,w,c
  7725   002CAE  A4D8               	btfss	status,2,c
  7726   002CB0  EF5C  F016         	goto	u4121
  7727   002CB4  EF5E  F016         	goto	u4120
  7728   002CB8                     u4121:
  7729   002CB8  EF68  F016         	goto	l4002
  7730   002CBC                     u4120:
  7731   002CBC  0E00               	movlw	0
  7732   002CBE  6E03               	movwf	?___xxtofl^0,c
  7733   002CC0  0E00               	movlw	0
  7734   002CC2  6E04               	movwf	(?___xxtofl+1)^0,c
  7735   002CC4  0E00               	movlw	0
  7736   002CC6  6E05               	movwf	(?___xxtofl+2)^0,c
  7737   002CC8  0E00               	movlw	0
  7738   002CCA  6E06               	movwf	(?___xxtofl+3)^0,c
  7739   002CCC  EFF9  F016         	goto	l989
  7740   002CD0                     l4002:
  7741   002CD0  0E96               	movlw	150
  7742   002CD2  6E0C               	movwf	___xxtofl@exp^0,c
  7743   002CD4  EF72  F016         	goto	l4006
  7744   002CD8                     l4004:
  7745   002CD8  2A0C               	incf	___xxtofl@exp^0,f,c
  7746   002CDA  90D8               	bcf	status,0,c
  7747   002CDC  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  7748   002CDE  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  7749   002CE0  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  7750   002CE2  320D               	rrcf	___xxtofl@arg^0,f,c
  7751   002CE4                     l4006:
  7752   002CE4  0E00               	movlw	0
  7753   002CE6  140D               	andwf	___xxtofl@arg^0,w,c
  7754   002CE8  6E07               	movwf	??___xxtofl^0,c
  7755   002CEA  0E00               	movlw	0
  7756   002CEC  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  7757   002CEE  6E08               	movwf	(??___xxtofl+1)^0,c
  7758   002CF0  0E00               	movlw	0
  7759   002CF2  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  7760   002CF4  6E09               	movwf	(??___xxtofl+2)^0,c
  7761   002CF6  0EFE               	movlw	254
  7762   002CF8  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  7763   002CFA  6E0A               	movwf	(??___xxtofl+3)^0,c
  7764   002CFC  5007               	movf	??___xxtofl^0,w,c
  7765   002CFE  1008               	iorwf	(??___xxtofl+1)^0,w,c
  7766   002D00  1009               	iorwf	(??___xxtofl+2)^0,w,c
  7767   002D02  100A               	iorwf	(??___xxtofl+3)^0,w,c
  7768   002D04  A4D8               	btfss	status,2,c
  7769   002D06  EF87  F016         	goto	u4131
  7770   002D0A  EF89  F016         	goto	u4130
  7771   002D0E                     u4131:
  7772   002D0E  EF6C  F016         	goto	l4004
  7773   002D12                     u4130:
  7774   002D12  EF97  F016         	goto	l993
  7775   002D16                     l4008:
  7776   002D16  2A0C               	incf	___xxtofl@exp^0,f,c
  7777   002D18  0E01               	movlw	1
  7778   002D1A  260D               	addwf	___xxtofl@arg^0,f,c
  7779   002D1C  0E00               	movlw	0
  7780   002D1E  220E               	addwfc	(___xxtofl@arg+1)^0,f,c
  7781   002D20  220F               	addwfc	(___xxtofl@arg+2)^0,f,c
  7782   002D22  2210               	addwfc	(___xxtofl@arg+3)^0,f,c
  7783   002D24  90D8               	bcf	status,0,c
  7784   002D26  3210               	rrcf	(___xxtofl@arg+3)^0,f,c
  7785   002D28  320F               	rrcf	(___xxtofl@arg+2)^0,f,c
  7786   002D2A  320E               	rrcf	(___xxtofl@arg+1)^0,f,c
  7787   002D2C  320D               	rrcf	___xxtofl@arg^0,f,c
  7788   002D2E                     l993:
  7789   002D2E  0E00               	movlw	0
  7790   002D30  140D               	andwf	___xxtofl@arg^0,w,c
  7791   002D32  6E07               	movwf	??___xxtofl^0,c
  7792   002D34  0E00               	movlw	0
  7793   002D36  140E               	andwf	(___xxtofl@arg+1)^0,w,c
  7794   002D38  6E08               	movwf	(??___xxtofl+1)^0,c
  7795   002D3A  0E00               	movlw	0
  7796   002D3C  140F               	andwf	(___xxtofl@arg+2)^0,w,c
  7797   002D3E  6E09               	movwf	(??___xxtofl+2)^0,c
  7798   002D40  0EFF               	movlw	255
  7799   002D42  1410               	andwf	(___xxtofl@arg+3)^0,w,c
  7800   002D44  6E0A               	movwf	(??___xxtofl+3)^0,c
  7801   002D46  5007               	movf	??___xxtofl^0,w,c
  7802   002D48  1008               	iorwf	(??___xxtofl+1)^0,w,c
  7803   002D4A  1009               	iorwf	(??___xxtofl+2)^0,w,c
  7804   002D4C  100A               	iorwf	(??___xxtofl+3)^0,w,c
  7805   002D4E  A4D8               	btfss	status,2,c
  7806   002D50  EFAC  F016         	goto	u4141
  7807   002D54  EFAE  F016         	goto	u4140
  7808   002D58                     u4141:
  7809   002D58  EF8B  F016         	goto	l4008
  7810   002D5C                     u4140:
  7811   002D5C  EFB6  F016         	goto	l4016
  7812   002D60                     l4014:
  7813   002D60  060C               	decf	___xxtofl@exp^0,f,c
  7814   002D62  90D8               	bcf	status,0,c
  7815   002D64  360D               	rlcf	___xxtofl@arg^0,f,c
  7816   002D66  360E               	rlcf	(___xxtofl@arg+1)^0,f,c
  7817   002D68  360F               	rlcf	(___xxtofl@arg+2)^0,f,c
  7818   002D6A  3610               	rlcf	(___xxtofl@arg+3)^0,f,c
  7819   002D6C                     l4016:
  7820   002D6C  BE0F               	btfsc	(___xxtofl@arg+2)^0,7,c
  7821   002D6E  EFBB  F016         	goto	u4151
  7822   002D72  EFBD  F016         	goto	u4150
  7823   002D76                     u4151:
  7824   002D76  EFC5  F016         	goto	l1000
  7825   002D7A                     u4150:
  7826   002D7A  0E02               	movlw	2
  7827   002D7C  600C               	cpfslt	___xxtofl@exp^0,c
  7828   002D7E  EFC3  F016         	goto	u4161
  7829   002D82  EFC5  F016         	goto	u4160
  7830   002D86                     u4161:
  7831   002D86  EFB0  F016         	goto	l4014
  7832   002D8A                     u4160:
  7833   002D8A                     l1000:
  7834   002D8A  B00C               	btfsc	___xxtofl@exp^0,0,c
  7835   002D8C  EFCA  F016         	goto	u4171
  7836   002D90  EFCC  F016         	goto	u4170
  7837   002D94                     u4171:
  7838   002D94  EFCD  F016         	goto	l4022
  7839   002D98                     u4170:
  7840   002D98  9E0F               	bcf	(___xxtofl@arg+2)^0,7,c
  7841   002D9A                     l4022:
  7842   002D9A  90D8               	bcf	status,0,c
  7843   002D9C  320C               	rrcf	___xxtofl@exp^0,f,c
  7844   002D9E  C00C  F007         	movff	___xxtofl@exp,??___xxtofl
  7845   002DA2  6A08               	clrf	(??___xxtofl+1)^0,c
  7846   002DA4  6A09               	clrf	(??___xxtofl+2)^0,c
  7847   002DA6  6A0A               	clrf	(??___xxtofl+3)^0,c
  7848   002DA8  C007  F00A         	movff	??___xxtofl,??___xxtofl+3
  7849   002DAC  6A09               	clrf	(??___xxtofl+2)^0,c
  7850   002DAE  6A08               	clrf	(??___xxtofl+1)^0,c
  7851   002DB0  6A07               	clrf	??___xxtofl^0,c
  7852   002DB2  5007               	movf	??___xxtofl^0,w,c
  7853   002DB4  120D               	iorwf	___xxtofl@arg^0,f,c
  7854   002DB6  5008               	movf	(??___xxtofl+1)^0,w,c
  7855   002DB8  120E               	iorwf	(___xxtofl@arg+1)^0,f,c
  7856   002DBA  5009               	movf	(??___xxtofl+2)^0,w,c
  7857   002DBC  120F               	iorwf	(___xxtofl@arg+2)^0,f,c
  7858   002DBE  500A               	movf	(??___xxtofl+3)^0,w,c
  7859   002DC0  1210               	iorwf	(___xxtofl@arg+3)^0,f,c
  7860   002DC2  500B               	movf	___xxtofl@sign^0,w,c
  7861   002DC4  B4D8               	btfsc	status,2,c
  7862   002DC6  EFE7  F016         	goto	u4181
  7863   002DCA  EFE9  F016         	goto	u4180
  7864   002DCE                     u4181:
  7865   002DCE  EFF1  F016         	goto	l4032
  7866   002DD2                     u4180:
  7867   002DD2  BE06               	btfsc	(___xxtofl@val+3)^0,7,c
  7868   002DD4  EFF0  F016         	goto	u4190
  7869   002DD8  EFEE  F016         	goto	u4191
  7870   002DDC                     u4191:
  7871   002DDC  EFF1  F016         	goto	l4032
  7872   002DE0                     u4190:
  7873   002DE0  8E10               	bsf	(___xxtofl@arg+3)^0,7,c
  7874   002DE2                     l4032:
  7875   002DE2  C00D  F003         	movff	___xxtofl@arg,?___xxtofl
  7876   002DE6  C00E  F004         	movff	___xxtofl@arg+1,?___xxtofl+1
  7877   002DEA  C00F  F005         	movff	___xxtofl@arg+2,?___xxtofl+2
  7878   002DEE  C010  F006         	movff	___xxtofl@arg+3,?___xxtofl+3
  7879   002DF2                     l989:
  7880   002DF2  0012               	return		;funcret
  7881   002DF4                     __end_of___xxtofl:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function ___fldiv *****************
  7885 ;; Defined at:
  7886 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  b               4    2[COMRAM] unsigned char 
  7889 ;;  a               4    6[COMRAM] unsigned char 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  grs             4   21[COMRAM] unsigned long 
  7892 ;;  rem             4   14[COMRAM] unsigned long 
  7893 ;;  new_exp         2   19[COMRAM] short 
  7894 ;;  aexp            1   26[COMRAM] unsigned char 
  7895 ;;  bexp            1   25[COMRAM] unsigned char 
  7896 ;;  sign            1   18[COMRAM] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  4    2[COMRAM] unsigned char 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;Total ram usage:       25 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 4
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_colour_rel
  7917 ;;		_efgtoa
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text37
  7922   002112                     __ptext37:
  7923                           	callstack 0
  7924   002112                     ___fldiv:
  7925                           	callstack 22
  7926   002112  5006               	movf	(___fldiv@b+3)^0,w,c
  7927   002114  0B80               	andlw	128
  7928   002116  6E13               	movwf	___fldiv@sign^0,c
  7929   002118  5006               	movf	(___fldiv@b+3)^0,w,c
  7930   00211A  2406               	addwf	(___fldiv@b+3)^0,w,c
  7931   00211C  6E1A               	movwf	___fldiv@bexp^0,c
  7932   00211E  AE05               	btfss	(___fldiv@b+2)^0,7,c
  7933   002120  EF94  F010         	goto	u2741
  7934   002124  EF96  F010         	goto	u2740
  7935   002128                     u2741:
  7936   002128  EF97  F010         	goto	l3094
  7937   00212C                     u2740:
  7938   00212C  801A               	bsf	___fldiv@bexp^0,0,c
  7939   00212E                     l3094:
  7940   00212E  501A               	movf	___fldiv@bexp^0,w,c
  7941   002130  B4D8               	btfsc	status,2,c
  7942   002132  EF9D  F010         	goto	u2751
  7943   002136  EF9F  F010         	goto	u2750
  7944   00213A                     u2751:
  7945   00213A  EFB4  F010         	goto	l3104
  7946   00213E                     u2750:
  7947   00213E  281A               	incf	___fldiv@bexp^0,w,c
  7948   002140  A4D8               	btfss	status,2,c
  7949   002142  EFA5  F010         	goto	u2761
  7950   002146  EFA7  F010         	goto	u2760
  7951   00214A                     u2761:
  7952   00214A  EFAF  F010         	goto	l3100
  7953   00214E                     u2760:
  7954   00214E  0E00               	movlw	0
  7955   002150  6E03               	movwf	___fldiv@b^0,c
  7956   002152  0E00               	movlw	0
  7957   002154  6E04               	movwf	(___fldiv@b+1)^0,c
  7958   002156  0E00               	movlw	0
  7959   002158  6E05               	movwf	(___fldiv@b+2)^0,c
  7960   00215A  0E00               	movlw	0
  7961   00215C  6E06               	movwf	(___fldiv@b+3)^0,c
  7962   00215E                     l3100:
  7963   00215E  8E05               	bsf	(___fldiv@b+2)^0,7,c
  7964   002160  0E00               	movlw	0
  7965   002162  6E06               	movwf	(___fldiv@b+3)^0,c
  7966   002164  EFBC  F010         	goto	l3106
  7967   002168                     l3104:
  7968   002168  0E00               	movlw	0
  7969   00216A  6E03               	movwf	___fldiv@b^0,c
  7970   00216C  0E00               	movlw	0
  7971   00216E  6E04               	movwf	(___fldiv@b+1)^0,c
  7972   002170  0E00               	movlw	0
  7973   002172  6E05               	movwf	(___fldiv@b+2)^0,c
  7974   002174  0E00               	movlw	0
  7975   002176  6E06               	movwf	(___fldiv@b+3)^0,c
  7976   002178                     l3106:
  7977   002178  500A               	movf	(___fldiv@a+3)^0,w,c
  7978   00217A  0B80               	andlw	128
  7979   00217C  1A13               	xorwf	___fldiv@sign^0,f,c
  7980   00217E  500A               	movf	(___fldiv@a+3)^0,w,c
  7981   002180  240A               	addwf	(___fldiv@a+3)^0,w,c
  7982   002182  6E1B               	movwf	___fldiv@aexp^0,c
  7983   002184  AE09               	btfss	(___fldiv@a+2)^0,7,c
  7984   002186  EFC7  F010         	goto	u2771
  7985   00218A  EFC9  F010         	goto	u2770
  7986   00218E                     u2771:
  7987   00218E  EFCA  F010         	goto	l3114
  7988   002192                     u2770:
  7989   002192  801B               	bsf	___fldiv@aexp^0,0,c
  7990   002194                     l3114:
  7991   002194  501B               	movf	___fldiv@aexp^0,w,c
  7992   002196  B4D8               	btfsc	status,2,c
  7993   002198  EFD0  F010         	goto	u2781
  7994   00219C  EFD2  F010         	goto	u2780
  7995   0021A0                     u2781:
  7996   0021A0  EFE7  F010         	goto	l3124
  7997   0021A4                     u2780:
  7998   0021A4  281B               	incf	___fldiv@aexp^0,w,c
  7999   0021A6  A4D8               	btfss	status,2,c
  8000   0021A8  EFD8  F010         	goto	u2791
  8001   0021AC  EFDA  F010         	goto	u2790
  8002   0021B0                     u2791:
  8003   0021B0  EFE2  F010         	goto	l3120
  8004   0021B4                     u2790:
  8005   0021B4  0E00               	movlw	0
  8006   0021B6  6E07               	movwf	___fldiv@a^0,c
  8007   0021B8  0E00               	movlw	0
  8008   0021BA  6E08               	movwf	(___fldiv@a+1)^0,c
  8009   0021BC  0E00               	movlw	0
  8010   0021BE  6E09               	movwf	(___fldiv@a+2)^0,c
  8011   0021C0  0E00               	movlw	0
  8012   0021C2  6E0A               	movwf	(___fldiv@a+3)^0,c
  8013   0021C4                     l3120:
  8014   0021C4  8E09               	bsf	(___fldiv@a+2)^0,7,c
  8015   0021C6  0E00               	movlw	0
  8016   0021C8  6E0A               	movwf	(___fldiv@a+3)^0,c
  8017   0021CA  EFEF  F010         	goto	l3126
  8018   0021CE                     l3124:
  8019   0021CE  0E00               	movlw	0
  8020   0021D0  6E07               	movwf	___fldiv@a^0,c
  8021   0021D2  0E00               	movlw	0
  8022   0021D4  6E08               	movwf	(___fldiv@a+1)^0,c
  8023   0021D6  0E00               	movlw	0
  8024   0021D8  6E09               	movwf	(___fldiv@a+2)^0,c
  8025   0021DA  0E00               	movlw	0
  8026   0021DC  6E0A               	movwf	(___fldiv@a+3)^0,c
  8027   0021DE                     l3126:
  8028   0021DE  5007               	movf	___fldiv@a^0,w,c
  8029   0021E0  1008               	iorwf	(___fldiv@a+1)^0,w,c
  8030   0021E2  1009               	iorwf	(___fldiv@a+2)^0,w,c
  8031   0021E4  100A               	iorwf	(___fldiv@a+3)^0,w,c
  8032   0021E6  A4D8               	btfss	status,2,c
  8033   0021E8  EFF8  F010         	goto	u2801
  8034   0021EC  EFFA  F010         	goto	u2800
  8035   0021F0                     u2801:
  8036   0021F0  EF12  F011         	goto	l3138
  8037   0021F4                     u2800:
  8038   0021F4  0E00               	movlw	0
  8039   0021F6  6E03               	movwf	___fldiv@b^0,c
  8040   0021F8  0E00               	movlw	0
  8041   0021FA  6E04               	movwf	(___fldiv@b+1)^0,c
  8042   0021FC  0E00               	movlw	0
  8043   0021FE  6E05               	movwf	(___fldiv@b+2)^0,c
  8044   002200  0E00               	movlw	0
  8045   002202  6E06               	movwf	(___fldiv@b+3)^0,c
  8046   002204  0E80               	movlw	128
  8047   002206  1205               	iorwf	(___fldiv@b+2)^0,f,c
  8048   002208  0E7F               	movlw	127
  8049   00220A  1206               	iorwf	(___fldiv@b+3)^0,f,c
  8050   00220C                     l3132:
  8051   00220C  5013               	movf	___fldiv@sign^0,w,c
  8052   00220E  1206               	iorwf	(___fldiv@b+3)^0,f,c
  8053   002210  C003  F003         	movff	___fldiv@b,?___fldiv
  8054   002214  C004  F004         	movff	___fldiv@b+1,?___fldiv+1
  8055   002218  C005  F005         	movff	___fldiv@b+2,?___fldiv+2
  8056   00221C  C006  F006         	movff	___fldiv@b+3,?___fldiv+3
  8057   002220  EF55  F012         	goto	l913
  8058   002224                     l3138:
  8059   002224  501A               	movf	___fldiv@bexp^0,w,c
  8060   002226  A4D8               	btfss	status,2,c
  8061   002228  EF18  F011         	goto	u2811
  8062   00222C  EF1A  F011         	goto	u2810
  8063   002230                     u2811:
  8064   002230  EF24  F011         	goto	l3146
  8065   002234                     u2810:
  8066   002234  0E00               	movlw	0
  8067   002236  6E03               	movwf	?___fldiv^0,c
  8068   002238  0E00               	movlw	0
  8069   00223A  6E04               	movwf	(?___fldiv+1)^0,c
  8070   00223C  0E00               	movlw	0
  8071   00223E  6E05               	movwf	(?___fldiv+2)^0,c
  8072   002240  0E00               	movlw	0
  8073   002242  6E06               	movwf	(?___fldiv+3)^0,c
  8074   002244  EF55  F012         	goto	l913
  8075   002248                     l3146:
  8076   002248  501B               	movf	___fldiv@aexp^0,w,c
  8077   00224A  C01A  F00B         	movff	___fldiv@bexp,??___fldiv
  8078   00224E  6A0C               	clrf	(??___fldiv+1)^0,c
  8079   002250  5E0B               	subwf	??___fldiv^0,f,c
  8080   002252  0E00               	movlw	0
  8081   002254  5A0C               	subwfb	(??___fldiv+1)^0,f,c
  8082   002256  0E7F               	movlw	127
  8083   002258  240B               	addwf	??___fldiv^0,w,c
  8084   00225A  6E14               	movwf	___fldiv@new_exp^0,c
  8085   00225C  0E00               	movlw	0
  8086   00225E  200C               	addwfc	(??___fldiv+1)^0,w,c
  8087   002260  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8088   002262  C003  F00F         	movff	___fldiv@b,___fldiv@rem
  8089   002266  C004  F010         	movff	___fldiv@b+1,___fldiv@rem+1
  8090   00226A  C005  F011         	movff	___fldiv@b+2,___fldiv@rem+2
  8091   00226E  C006  F012         	movff	___fldiv@b+3,___fldiv@rem+3
  8092   002272  0E00               	movlw	0
  8093   002274  6E03               	movwf	___fldiv@b^0,c
  8094   002276  0E00               	movlw	0
  8095   002278  6E04               	movwf	(___fldiv@b+1)^0,c
  8096   00227A  0E00               	movlw	0
  8097   00227C  6E05               	movwf	(___fldiv@b+2)^0,c
  8098   00227E  0E00               	movlw	0
  8099   002280  6E06               	movwf	(___fldiv@b+3)^0,c
  8100   002282  0E00               	movlw	0
  8101   002284  6E16               	movwf	___fldiv@grs^0,c
  8102   002286  0E00               	movlw	0
  8103   002288  6E17               	movwf	(___fldiv@grs+1)^0,c
  8104   00228A  0E00               	movlw	0
  8105   00228C  6E18               	movwf	(___fldiv@grs+2)^0,c
  8106   00228E  0E00               	movlw	0
  8107   002290  6E19               	movwf	(___fldiv@grs+3)^0,c
  8108   002292  0E00               	movlw	0
  8109   002294  6E1B               	movwf	___fldiv@aexp^0,c
  8110   002296  EF85  F011         	goto	l915
  8111   00229A                     l3156:
  8112   00229A  501B               	movf	___fldiv@aexp^0,w,c
  8113   00229C  B4D8               	btfsc	status,2,c
  8114   00229E  EF53  F011         	goto	u2821
  8115   0022A2  EF55  F011         	goto	u2820
  8116   0022A6                     u2821:
  8117   0022A6  EF6C  F011         	goto	l3164
  8118   0022AA                     u2820:
  8119   0022AA  90D8               	bcf	status,0,c
  8120   0022AC  360F               	rlcf	___fldiv@rem^0,f,c
  8121   0022AE  3610               	rlcf	(___fldiv@rem+1)^0,f,c
  8122   0022B0  3611               	rlcf	(___fldiv@rem+2)^0,f,c
  8123   0022B2  3612               	rlcf	(___fldiv@rem+3)^0,f,c
  8124   0022B4  90D8               	bcf	status,0,c
  8125   0022B6  3603               	rlcf	___fldiv@b^0,f,c
  8126   0022B8  3604               	rlcf	(___fldiv@b+1)^0,f,c
  8127   0022BA  3605               	rlcf	(___fldiv@b+2)^0,f,c
  8128   0022BC  3606               	rlcf	(___fldiv@b+3)^0,f,c
  8129   0022BE  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8130   0022C0  EF64  F011         	goto	u2831
  8131   0022C4  EF66  F011         	goto	u2830
  8132   0022C8                     u2831:
  8133   0022C8  EF67  F011         	goto	l918
  8134   0022CC                     u2830:
  8135   0022CC  8003               	bsf	___fldiv@b^0,0,c
  8136   0022CE                     l918:
  8137   0022CE  90D8               	bcf	status,0,c
  8138   0022D0  3616               	rlcf	___fldiv@grs^0,f,c
  8139   0022D2  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  8140   0022D4  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  8141   0022D6  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  8142   0022D8                     l3164:
  8143   0022D8  5007               	movf	___fldiv@a^0,w,c
  8144   0022DA  5C0F               	subwf	___fldiv@rem^0,w,c
  8145   0022DC  5008               	movf	(___fldiv@a+1)^0,w,c
  8146   0022DE  5810               	subwfb	(___fldiv@rem+1)^0,w,c
  8147   0022E0  5009               	movf	(___fldiv@a+2)^0,w,c
  8148   0022E2  5811               	subwfb	(___fldiv@rem+2)^0,w,c
  8149   0022E4  500A               	movf	(___fldiv@a+3)^0,w,c
  8150   0022E6  5812               	subwfb	(___fldiv@rem+3)^0,w,c
  8151   0022E8  A0D8               	btfss	status,0,c
  8152   0022EA  EF79  F011         	goto	u2841
  8153   0022EE  EF7B  F011         	goto	u2840
  8154   0022F2                     u2841:
  8155   0022F2  EF84  F011         	goto	l3170
  8156   0022F6                     u2840:
  8157   0022F6  8C19               	bsf	(___fldiv@grs+3)^0,6,c
  8158   0022F8  5007               	movf	___fldiv@a^0,w,c
  8159   0022FA  5E0F               	subwf	___fldiv@rem^0,f,c
  8160   0022FC  5008               	movf	(___fldiv@a+1)^0,w,c
  8161   0022FE  5A10               	subwfb	(___fldiv@rem+1)^0,f,c
  8162   002300  5009               	movf	(___fldiv@a+2)^0,w,c
  8163   002302  5A11               	subwfb	(___fldiv@rem+2)^0,f,c
  8164   002304  500A               	movf	(___fldiv@a+3)^0,w,c
  8165   002306  5A12               	subwfb	(___fldiv@rem+3)^0,f,c
  8166   002308                     l3170:
  8167   002308  2A1B               	incf	___fldiv@aexp^0,f,c
  8168   00230A                     l915:
  8169   00230A  0E19               	movlw	25
  8170   00230C  641B               	cpfsgt	___fldiv@aexp^0,c
  8171   00230E  EF8B  F011         	goto	u2851
  8172   002312  EF8D  F011         	goto	u2850
  8173   002316                     u2851:
  8174   002316  EF4D  F011         	goto	l3156
  8175   00231A                     u2850:
  8176   00231A  500F               	movf	___fldiv@rem^0,w,c
  8177   00231C  1010               	iorwf	(___fldiv@rem+1)^0,w,c
  8178   00231E  1011               	iorwf	(___fldiv@rem+2)^0,w,c
  8179   002320  1012               	iorwf	(___fldiv@rem+3)^0,w,c
  8180   002322  B4D8               	btfsc	status,2,c
  8181   002324  EF96  F011         	goto	u2861
  8182   002328  EF98  F011         	goto	u2860
  8183   00232C                     u2861:
  8184   00232C  EFB0  F011         	goto	l3182
  8185   002330                     u2860:
  8186   002330  8016               	bsf	___fldiv@grs^0,0,c
  8187   002332  EFB0  F011         	goto	l3182
  8188   002336                     l3176:
  8189   002336  90D8               	bcf	status,0,c
  8190   002338  3603               	rlcf	___fldiv@b^0,f,c
  8191   00233A  3604               	rlcf	(___fldiv@b+1)^0,f,c
  8192   00233C  3605               	rlcf	(___fldiv@b+2)^0,f,c
  8193   00233E  3606               	rlcf	(___fldiv@b+3)^0,f,c
  8194   002340  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8195   002342  EFA5  F011         	goto	u2871
  8196   002346  EFA7  F011         	goto	u2870
  8197   00234A                     u2871:
  8198   00234A  EFA8  F011         	goto	l924
  8199   00234E                     u2870:
  8200   00234E  8003               	bsf	___fldiv@b^0,0,c
  8201   002350                     l924:
  8202   002350  90D8               	bcf	status,0,c
  8203   002352  3616               	rlcf	___fldiv@grs^0,f,c
  8204   002354  3617               	rlcf	(___fldiv@grs+1)^0,f,c
  8205   002356  3618               	rlcf	(___fldiv@grs+2)^0,f,c
  8206   002358  3619               	rlcf	(___fldiv@grs+3)^0,f,c
  8207   00235A  0614               	decf	___fldiv@new_exp^0,f,c
  8208   00235C  A0D8               	btfss	status,0,c
  8209   00235E  0615               	decf	(___fldiv@new_exp+1)^0,f,c
  8210   002360                     l3182:
  8211   002360  AE05               	btfss	(___fldiv@b+2)^0,7,c
  8212   002362  EFB5  F011         	goto	u2881
  8213   002366  EFB7  F011         	goto	u2880
  8214   00236A                     u2881:
  8215   00236A  EF9B  F011         	goto	l3176
  8216   00236E                     u2880:
  8217   00236E  0E00               	movlw	0
  8218   002370  6E1B               	movwf	___fldiv@aexp^0,c
  8219   002372  AE19               	btfss	(___fldiv@grs+3)^0,7,c
  8220   002374  EFBE  F011         	goto	u2891
  8221   002378  EFC0  F011         	goto	u2890
  8222   00237C                     u2891:
  8223   00237C  EFE4  F011         	goto	l926
  8224   002380                     u2890:
  8225   002380  0EFF               	movlw	255
  8226   002382  1416               	andwf	___fldiv@grs^0,w,c
  8227   002384  6E0B               	movwf	??___fldiv^0,c
  8228   002386  0EFF               	movlw	255
  8229   002388  1417               	andwf	(___fldiv@grs+1)^0,w,c
  8230   00238A  6E0C               	movwf	(??___fldiv+1)^0,c
  8231   00238C  0EFF               	movlw	255
  8232   00238E  1418               	andwf	(___fldiv@grs+2)^0,w,c
  8233   002390  6E0D               	movwf	(??___fldiv+2)^0,c
  8234   002392  0E7F               	movlw	127
  8235   002394  1419               	andwf	(___fldiv@grs+3)^0,w,c
  8236   002396  6E0E               	movwf	(??___fldiv+3)^0,c
  8237   002398  500B               	movf	??___fldiv^0,w,c
  8238   00239A  100C               	iorwf	(??___fldiv+1)^0,w,c
  8239   00239C  100D               	iorwf	(??___fldiv+2)^0,w,c
  8240   00239E  100E               	iorwf	(??___fldiv+3)^0,w,c
  8241   0023A0  B4D8               	btfsc	status,2,c
  8242   0023A2  EFD5  F011         	goto	u2901
  8243   0023A6  EFD7  F011         	goto	u2900
  8244   0023AA                     u2901:
  8245   0023AA  EFDB  F011         	goto	l927
  8246   0023AE                     u2900:
  8247   0023AE                     l3190:
  8248   0023AE  0E01               	movlw	1
  8249   0023B0  6E1B               	movwf	___fldiv@aexp^0,c
  8250   0023B2  EFE4  F011         	goto	l926
  8251   0023B6                     l927:
  8252   0023B6  A003               	btfss	___fldiv@b^0,0,c
  8253   0023B8  EFE0  F011         	goto	u2911
  8254   0023BC  EFE2  F011         	goto	u2910
  8255   0023C0                     u2911:
  8256   0023C0  EFE4  F011         	goto	l926
  8257   0023C4                     u2910:
  8258   0023C4  EFD7  F011         	goto	l3190
  8259   0023C8                     l926:
  8260   0023C8  501B               	movf	___fldiv@aexp^0,w,c
  8261   0023CA  B4D8               	btfsc	status,2,c
  8262   0023CC  EFEA  F011         	goto	u2921
  8263   0023D0  EFEC  F011         	goto	u2920
  8264   0023D4                     u2921:
  8265   0023D4  EF10  F012         	goto	l3202
  8266   0023D8                     u2920:
  8267   0023D8  0E01               	movlw	1
  8268   0023DA  2603               	addwf	___fldiv@b^0,f,c
  8269   0023DC  0E00               	movlw	0
  8270   0023DE  2204               	addwfc	(___fldiv@b+1)^0,f,c
  8271   0023E0  2205               	addwfc	(___fldiv@b+2)^0,f,c
  8272   0023E2  2206               	addwfc	(___fldiv@b+3)^0,f,c
  8273   0023E4  A006               	btfss	(___fldiv@b+3)^0,0,c
  8274   0023E6  EFF7  F011         	goto	u2931
  8275   0023EA  EFF9  F011         	goto	u2930
  8276   0023EE                     u2931:
  8277   0023EE  EF10  F012         	goto	l3202
  8278   0023F2                     u2930:
  8279   0023F2  C003  F00B         	movff	___fldiv@b,??___fldiv
  8280   0023F6  C004  F00C         	movff	___fldiv@b+1,??___fldiv+1
  8281   0023FA  C005  F00D         	movff	___fldiv@b+2,??___fldiv+2
  8282   0023FE  C006  F00E         	movff	___fldiv@b+3,??___fldiv+3
  8283   002402  340E               	rlcf	(??___fldiv+3)^0,w,c
  8284   002404  320E               	rrcf	(??___fldiv+3)^0,f,c
  8285   002406  320D               	rrcf	(??___fldiv+2)^0,f,c
  8286   002408  320C               	rrcf	(??___fldiv+1)^0,f,c
  8287   00240A  320B               	rrcf	??___fldiv^0,f,c
  8288   00240C  C00B  F003         	movff	??___fldiv,___fldiv@b
  8289   002410  C00C  F004         	movff	??___fldiv+1,___fldiv@b+1
  8290   002414  C00D  F005         	movff	??___fldiv+2,___fldiv@b+2
  8291   002418  C00E  F006         	movff	??___fldiv+3,___fldiv@b+3
  8292   00241C  4A14               	infsnz	___fldiv@new_exp^0,f,c
  8293   00241E  2A15               	incf	(___fldiv@new_exp+1)^0,f,c
  8294   002420                     l3202:
  8295   002420  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8296   002422  EF1B  F012         	goto	u2941
  8297   002426  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  8298   002428  E108               	bnz	u2940
  8299   00242A  2814               	incf	___fldiv@new_exp^0,w,c
  8300   00242C  A0D8               	btfss	status,0,c
  8301   00242E  EF1B  F012         	goto	u2941
  8302   002432  EF1D  F012         	goto	u2940
  8303   002436                     u2941:
  8304   002436  EF28  F012         	goto	l3206
  8305   00243A                     u2940:
  8306   00243A  0E00               	movlw	0
  8307   00243C  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8308   00243E  6814               	setf	___fldiv@new_exp^0,c
  8309   002440  0E00               	movlw	0
  8310   002442  6E03               	movwf	___fldiv@b^0,c
  8311   002444  0E00               	movlw	0
  8312   002446  6E04               	movwf	(___fldiv@b+1)^0,c
  8313   002448  0E00               	movlw	0
  8314   00244A  6E05               	movwf	(___fldiv@b+2)^0,c
  8315   00244C  0E00               	movlw	0
  8316   00244E  6E06               	movwf	(___fldiv@b+3)^0,c
  8317   002450                     l3206:
  8318   002450  BE15               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8319   002452  EF35  F012         	goto	u2950
  8320   002456  5015               	movf	(___fldiv@new_exp+1)^0,w,c
  8321   002458  E106               	bnz	u2951
  8322   00245A  0414               	decf	___fldiv@new_exp^0,w,c
  8323   00245C  B0D8               	btfsc	status,0,c
  8324   00245E  EF33  F012         	goto	u2951
  8325   002462  EF35  F012         	goto	u2950
  8326   002466                     u2951:
  8327   002466  EF43  F012         	goto	l3210
  8328   00246A                     u2950:
  8329   00246A  0E00               	movlw	0
  8330   00246C  6E15               	movwf	(___fldiv@new_exp+1)^0,c
  8331   00246E  0E00               	movlw	0
  8332   002470  6E14               	movwf	___fldiv@new_exp^0,c
  8333   002472  0E00               	movlw	0
  8334   002474  6E03               	movwf	___fldiv@b^0,c
  8335   002476  0E00               	movlw	0
  8336   002478  6E04               	movwf	(___fldiv@b+1)^0,c
  8337   00247A  0E00               	movlw	0
  8338   00247C  6E05               	movwf	(___fldiv@b+2)^0,c
  8339   00247E  0E00               	movlw	0
  8340   002480  6E06               	movwf	(___fldiv@b+3)^0,c
  8341   002482  0E00               	movlw	0
  8342   002484  6E13               	movwf	___fldiv@sign^0,c
  8343   002486                     l3210:
  8344   002486  C014  F01A         	movff	___fldiv@new_exp,___fldiv@bexp
  8345   00248A  A01A               	btfss	___fldiv@bexp^0,0,c
  8346   00248C  EF4A  F012         	goto	u2961
  8347   002490  EF4C  F012         	goto	u2960
  8348   002494                     u2961:
  8349   002494  EF4F  F012         	goto	l3216
  8350   002498                     u2960:
  8351   002498  8E05               	bsf	(___fldiv@b+2)^0,7,c
  8352   00249A  EF50  F012         	goto	l3218
  8353   00249E                     l3216:
  8354   00249E  9E05               	bcf	(___fldiv@b+2)^0,7,c
  8355   0024A0                     l3218:
  8356   0024A0  90D8               	bcf	status,0,c
  8357   0024A2  301A               	rrcf	___fldiv@bexp^0,w,c
  8358   0024A4  6E06               	movwf	(___fldiv@b+3)^0,c
  8359   0024A6  EF06  F011         	goto	l3132
  8360   0024AA                     l913:
  8361   0024AA  0012               	return		;funcret
  8362   0024AC                     __end_of___fldiv:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function _color_click_init *****************
  8366 ;; Defined at:
  8367 ;;		line 5 in file "color.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;		None
  8370 ;; Auto vars:     Size  Location     Type
  8371 ;;		None
  8372 ;; Return value:  Size  Location     Type
  8373 ;;                  1    wreg      void 
  8374 ;; Registers used:
  8375 ;;		wreg, status,2, status,0, cstack
  8376 ;; Tracked objects:
  8377 ;;		On entry : 0/0
  8378 ;;		On exit  : 0/0
  8379 ;;		Unchanged: 0/0
  8380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8385 ;;Total ram usage:        1 bytes
  8386 ;; Hardware stack levels used: 1
  8387 ;; Hardware stack levels required when called: 7
  8388 ;; This function calls:
  8389 ;;		_I2C_2_Master_Init
  8390 ;;		_color_writetoaddr
  8391 ;; This function is called by:
  8392 ;;		_main
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text38
  8397   003D48                     __ptext38:
  8398                           	callstack 0
  8399   003D48                     _color_click_init:
  8400                           	callstack 23
  8401   003D48                     
  8402                           ;color.c: 8:     I2C_2_Master_Init();
  8403   003D48  ECEB  F01E         	call	_I2C_2_Master_Init	;wreg free
  8404   003D4C                     
  8405                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8406   003D4C  0E01               	movlw	1
  8407   003D4E  6E05               	movwf	color_writetoaddr@value^0,c
  8408   003D50  0E00               	movlw	0
  8409   003D52  EC3D  F01F         	call	_color_writetoaddr
  8410   003D56                     
  8411                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8412   003D56  0E3F               	movlw	63
  8413   003D58  6E07               	movwf	??_color_click_init^0,c
  8414   003D5A  0E55               	movlw	85
  8415   003D5C                     u4347:
  8416   003D5C  2EE8               	decfsz	wreg,f,c
  8417   003D5E  D7FE               	bra	u4347
  8418   003D60  2E07               	decfsz	??_color_click_init^0,f,c
  8419   003D62  D7FC               	bra	u4347
  8420   003D64  F000               	nop	
  8421   003D66                     
  8422                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8423   003D66  0E03               	movlw	3
  8424   003D68  6E05               	movwf	color_writetoaddr@value^0,c
  8425   003D6A  0E00               	movlw	0
  8426   003D6C  EC3D  F01F         	call	_color_writetoaddr
  8427   003D70                     
  8428                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8429   003D70  0ED5               	movlw	213
  8430   003D72  6E05               	movwf	color_writetoaddr@value^0,c
  8431   003D74  0E01               	movlw	1
  8432   003D76  EC3D  F01F         	call	_color_writetoaddr
  8433   003D7A  0012               	return		;funcret
  8434   003D7C                     __end_of_color_click_init:
  8435                           	callstack 0
  8436                           
  8437 ;; *************** function _color_writetoaddr *****************
  8438 ;; Defined at:
  8439 ;;		line 23 in file "color.c"
  8440 ;; Parameters:    Size  Location     Type
  8441 ;;  address         1    wreg     unsigned char 
  8442 ;;  value           1    4[COMRAM] unsigned char 
  8443 ;; Auto vars:     Size  Location     Type
  8444 ;;  address         1    5[COMRAM] unsigned char 
  8445 ;; Return value:  Size  Location     Type
  8446 ;;                  1    wreg      void 
  8447 ;; Registers used:
  8448 ;;		wreg, status,2, status,0, cstack
  8449 ;; Tracked objects:
  8450 ;;		On entry : 0/0
  8451 ;;		On exit  : 0/0
  8452 ;;		Unchanged: 0/0
  8453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;Total ram usage:        2 bytes
  8459 ;; Hardware stack levels used: 1
  8460 ;; Hardware stack levels required when called: 6
  8461 ;; This function calls:
  8462 ;;		_I2C_2_Master_Start
  8463 ;;		_I2C_2_Master_Stop
  8464 ;;		_I2C_2_Master_Write
  8465 ;; This function is called by:
  8466 ;;		_color_click_init
  8467 ;;		_main
  8468 ;;		_colour_interrupt_init
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text39
  8473   003E7A                     __ptext39:
  8474                           	callstack 0
  8475   003E7A                     _color_writetoaddr:
  8476                           	callstack 24
  8477                           
  8478                           ;incstack = 0
  8479                           ;color_writetoaddr@address stored from wreg
  8480   003E7A  6E06               	movwf	color_writetoaddr@address^0,c
  8481   003E7C                     
  8482                           ;color.c: 24:     I2C_2_Master_Start();
  8483   003E7C  EC89  F01F         	call	_I2C_2_Master_Start	;wreg free
  8484                           
  8485                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  8486   003E80  0E52               	movlw	82
  8487   003E82  EC73  F01F         	call	_I2C_2_Master_Write
  8488                           
  8489                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  8490   003E86  5006               	movf	color_writetoaddr@address^0,w,c
  8491   003E88  0980               	iorlw	128
  8492   003E8A  EC73  F01F         	call	_I2C_2_Master_Write
  8493                           
  8494                           ;color.c: 27:     I2C_2_Master_Write(value);
  8495   003E8E  5005               	movf	color_writetoaddr@value^0,w,c
  8496   003E90  EC73  F01F         	call	_I2C_2_Master_Write
  8497                           
  8498                           ;color.c: 28:     I2C_2_Master_Stop();
  8499   003E94  EC84  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8500   003E98  0012               	return		;funcret
  8501   003E9A                     __end_of_color_writetoaddr:
  8502                           	callstack 0
  8503                           
  8504 ;; *************** function _I2C_2_Master_Write *****************
  8505 ;; Defined at:
  8506 ;;		line 45 in file "i2c.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;  data_byte       1    wreg     unsigned char 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  data_byte       1    3[COMRAM] unsigned char 
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8524 ;;Total ram usage:        1 bytes
  8525 ;; Hardware stack levels used: 1
  8526 ;; Hardware stack levels required when called: 5
  8527 ;; This function calls:
  8528 ;;		_I2C_2_Master_Idle
  8529 ;; This function is called by:
  8530 ;;		_color_writetoaddr
  8531 ;;		_color_read_lum
  8532 ;;		_color_read_Red
  8533 ;;		_color_read_Green
  8534 ;;		_color_read_Blue
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text40
  8539   003EE6                     __ptext40:
  8540                           	callstack 0
  8541   003EE6                     _I2C_2_Master_Write:
  8542                           	callstack 23
  8543                           
  8544                           ;incstack = 0
  8545                           ;I2C_2_Master_Write@data_byte stored from wreg
  8546   003EE6  6E04               	movwf	I2C_2_Master_Write@data_byte^0,c
  8547   003EE8                     
  8548                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8549   003EE8  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8550   003EEC                     
  8551                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8552   003EEC  C004  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8553   003EF0  0012               	return		;funcret
  8554   003EF2                     __end_of_I2C_2_Master_Write:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function _I2C_2_Master_Stop *****************
  8558 ;; Defined at:
  8559 ;;		line 39 in file "i2c.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used: 1
  8579 ;; Hardware stack levels required when called: 5
  8580 ;; This function calls:
  8581 ;;		_I2C_2_Master_Idle
  8582 ;; This function is called by:
  8583 ;;		_color_writetoaddr
  8584 ;;		_color_read_lum
  8585 ;;		_color_read_Red
  8586 ;;		_color_read_Green
  8587 ;;		_color_read_Blue
  8588 ;; This function uses a non-reentrant model
  8589 ;;
  8590                           
  8591                           	psect	text41
  8592   003F08                     __ptext41:
  8593                           	callstack 0
  8594   003F08                     _I2C_2_Master_Stop:
  8595                           	callstack 23
  8596   003F08                     
  8597                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8598   003F08  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8599   003F0C                     
  8600                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8601   003F0C  010E               	movlb	14	; () banked
  8602   003F0E  85DA               	bsf	218,2,b	;volatile
  8603   003F10                     
  8604                           ; BSR set to: 14
  8605   003F10  0012               	return		;funcret
  8606   003F12                     __end_of_I2C_2_Master_Stop:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _I2C_2_Master_Start *****************
  8610 ;; Defined at:
  8611 ;;		line 27 in file "i2c.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;		None
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;Total ram usage:        0 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; Hardware stack levels required when called: 5
  8632 ;; This function calls:
  8633 ;;		_I2C_2_Master_Idle
  8634 ;; This function is called by:
  8635 ;;		_color_writetoaddr
  8636 ;;		_color_read_lum
  8637 ;;		_color_read_Red
  8638 ;;		_color_read_Green
  8639 ;;		_color_read_Blue
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text42
  8644   003F12                     __ptext42:
  8645                           	callstack 0
  8646   003F12                     _I2C_2_Master_Start:
  8647                           	callstack 23
  8648   003F12                     
  8649                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8650   003F12  EC15  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8651   003F16                     
  8652                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8653   003F16  010E               	movlb	14	; () banked
  8654   003F18  81DA               	bsf	218,0,b	;volatile
  8655   003F1A                     
  8656                           ; BSR set to: 14
  8657   003F1A  0012               	return		;funcret
  8658   003F1C                     __end_of_I2C_2_Master_Start:
  8659                           	callstack 0
  8660                           
  8661 ;; *************** function _I2C_2_Master_Idle *****************
  8662 ;; Defined at:
  8663 ;;		line 22 in file "i2c.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;		None
  8666 ;; Auto vars:     Size  Location     Type
  8667 ;;		None
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      void 
  8670 ;; Registers used:
  8671 ;;		wreg, status,2, status,0
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;Total ram usage:        1 bytes
  8682 ;; Hardware stack levels used: 1
  8683 ;; Hardware stack levels required when called: 4
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_I2C_2_Master_Start
  8688 ;;		_I2C_2_Master_RepStart
  8689 ;;		_I2C_2_Master_Stop
  8690 ;;		_I2C_2_Master_Write
  8691 ;;		_I2C_2_Master_Read
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	text43
  8696   003E2A                     __ptext43:
  8697                           	callstack 0
  8698   003E2A                     _I2C_2_Master_Idle:
  8699                           	callstack 23
  8700   003E2A                     l76:
  8701   003E2A  010E               	movlb	14	; () banked
  8702   003E2C  B5D8               	btfsc	216,2,b	;volatile
  8703   003E2E  EF1B  F01F         	goto	u3551
  8704   003E32  EF1D  F01F         	goto	u3550
  8705   003E36                     u3551:
  8706   003E36  EF15  F01F         	goto	l76
  8707   003E3A                     u3550:
  8708   003E3A                     
  8709                           ; BSR set to: 14
  8710   003E3A  CEDA F003          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8711   003E3E  0E1F               	movlw	31
  8712   003E40  1603               	andwf	??_I2C_2_Master_Idle^0,f,c
  8713   003E42  A4D8               	btfss	status,2,c
  8714   003E44  EF26  F01F         	goto	u3561
  8715   003E48  EF28  F01F         	goto	u3560
  8716   003E4C                     u3561:
  8717   003E4C  EF15  F01F         	goto	l76
  8718   003E50                     u3560:
  8719   003E50                     
  8720                           ; BSR set to: 14
  8721   003E50  0012               	return		;funcret
  8722   003E52                     __end_of_I2C_2_Master_Idle:
  8723                           	callstack 0
  8724                           
  8725 ;; *************** function _I2C_2_Master_Init *****************
  8726 ;; Defined at:
  8727 ;;		line 4 in file "i2c.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;		None
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;		None
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:        0 bytes
  8746 ;; Hardware stack levels used: 1
  8747 ;; Hardware stack levels required when called: 4
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_color_click_init
  8752 ;;		_main
  8753 ;; This function uses a non-reentrant model
  8754 ;;
  8755                           
  8756                           	psect	text44
  8757   003DD6                     __ptext44:
  8758                           	callstack 0
  8759   003DD6                     _I2C_2_Master_Init:
  8760                           	callstack 25
  8761   003DD6                     
  8762                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8763   003DD6  010E               	movlb	14	; () banked
  8764   003DD8  51D9               	movf	217,w,b	;volatile
  8765   003DDA  0BF0               	andlw	-16
  8766   003DDC  0908               	iorlw	8
  8767   003DDE  6FD9               	movwf	217,b	;volatile
  8768   003DE0                     
  8769                           ; BSR set to: 14
  8770                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8771   003DE0  8BD9               	bsf	217,5,b	;volatile
  8772                           
  8773                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8774   003DE2  0E9F               	movlw	159
  8775   003DE4  6FD6               	movwf	214,b	;volatile
  8776   003DE6                     
  8777                           ; BSR set to: 14
  8778                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8779   003DE6  8A84               	bsf	132,5,c	;volatile
  8780   003DE8                     
  8781                           ; BSR set to: 14
  8782                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8783   003DE8  8C84               	bsf	132,6,c	;volatile
  8784   003DEA                     
  8785                           ; BSR set to: 14
  8786                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8787   003DEA  9BA7               	bcf	167,5,b	;volatile
  8788   003DEC                     
  8789                           ; BSR set to: 14
  8790                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8791   003DEC  9DA7               	bcf	167,6,b	;volatile
  8792                           
  8793                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8794   003DEE  0E1D               	movlw	29
  8795   003DF0  6F1D               	movwf	29,b	;volatile
  8796                           
  8797                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8798   003DF2  0E1E               	movlw	30
  8799   003DF4  6F1C               	movwf	28,b	;volatile
  8800                           
  8801                           ;i2c.c: 18:   RD5PPS=0x1C;
  8802   003DF6  0E1C               	movlw	28
  8803   003DF8  6F6F               	movwf	111,b	;volatile
  8804                           
  8805                           ;i2c.c: 19:   RD6PPS=0x1B;
  8806   003DFA  0E1B               	movlw	27
  8807   003DFC  6F70               	movwf	112,b	;volatile
  8808   003DFE                     
  8809                           ; BSR set to: 14
  8810   003DFE  0012               	return		;funcret
  8811   003E00                     __end_of_I2C_2_Master_Init:
  8812                           	callstack 0
  8813                           
  8814 ;; *************** function _TxBufferedString *****************
  8815 ;; Defined at:
  8816 ;;		line 85 in file "serial.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  string          2    3[COMRAM] PTR unsigned char 
  8819 ;;		 -> main@buf(50), 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8834 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;Total ram usage:        2 bytes
  8836 ;; Hardware stack levels used: 1
  8837 ;; Hardware stack levels required when called: 5
  8838 ;; This function calls:
  8839 ;;		_putCharToTxBuf
  8840 ;; This function is called by:
  8841 ;;		_main
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           	psect	text45
  8846   003D7C                     __ptext45:
  8847                           	callstack 0
  8848   003D7C                     _TxBufferedString:
  8849                           	callstack 25
  8850   003D7C                     
  8851                           ;serial.c: 86:  while (*string!=0){
  8852   003D7C  EFC9  F01E         	goto	l4090
  8853   003D80                     l4086:
  8854                           
  8855                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8856   003D80  C004  FFD9         	movff	TxBufferedString@string,fsr2l
  8857   003D84  C005  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8858   003D88  50DF               	movf	indf2,w,c
  8859   003D8A  EC00  F01F         	call	_putCharToTxBuf
  8860   003D8E  4A04               	infsnz	TxBufferedString@string^0,f,c
  8861   003D90  2A05               	incf	(TxBufferedString@string+1)^0,f,c
  8862   003D92                     l4090:
  8863                           
  8864                           ;serial.c: 86:  while (*string!=0){
  8865   003D92  C004  FFD9         	movff	TxBufferedString@string,fsr2l
  8866   003D96  C005  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8867   003D9A  50DF               	movf	indf2,w,c
  8868   003D9C  A4D8               	btfss	status,2,c
  8869   003D9E  EFD3  F01E         	goto	u4211
  8870   003DA2  EFD5  F01E         	goto	u4210
  8871   003DA6                     u4211:
  8872   003DA6  EFC0  F01E         	goto	l4086
  8873   003DAA                     u4210:
  8874   003DAA  0012               	return		;funcret
  8875   003DAC                     __end_of_TxBufferedString:
  8876                           	callstack 0
  8877                           
  8878 ;; *************** function _putCharToTxBuf *****************
  8879 ;; Defined at:
  8880 ;;		line 72 in file "serial.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  byte            1    wreg     unsigned char 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  byte            1    2[COMRAM] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:        1 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; Hardware stack levels required when called: 4
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_TxBufferedString
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text46
  8909   003E00                     __ptext46:
  8910                           	callstack 0
  8911   003E00                     _putCharToTxBuf:
  8912                           	callstack 25
  8913                           
  8914                           ;incstack = 0
  8915                           ;putCharToTxBuf@byte stored from wreg
  8916   003E00  6E03               	movwf	putCharToTxBuf@byte^0,c
  8917   003E02                     
  8918                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8919   003E02  0E3B               	movlw	59
  8920   003E04  645A               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8921   003E06  EF07  F01F         	goto	u4071
  8922   003E0A  EF09  F01F         	goto	u4070
  8923   003E0E                     u4071:
  8924   003E0E  EF0B  F01F         	goto	l3982
  8925   003E12                     u4070:
  8926   003E12  0E00               	movlw	0
  8927   003E14  6E5A               	movwf	_TxBufWriteCnt^0,c	;volatile
  8928   003E16                     l3982:
  8929                           
  8930                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8931   003E16  0E00               	movlw	low _EUSART4TXbuf
  8932   003E18  245A               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8933   003E1A  6ED9               	movwf	fsr2l,c
  8934   003E1C  6ADA               	clrf	fsr2h,c
  8935   003E1E  0E01               	movlw	high _EUSART4TXbuf
  8936   003E20  22DA               	addwfc	fsr2h,f,c
  8937   003E22  C003  FFDF         	movff	putCharToTxBuf@byte,indf2
  8938   003E26  2A5A               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8939   003E28  0012               	return		;funcret
  8940   003E2A                     __end_of_putCharToTxBuf:
  8941                           	callstack 0
  8942                           
  8943 ;; *************** function _HighISR *****************
  8944 ;; Defined at:
  8945 ;;		line 56 in file "interrupts.c"
  8946 ;; Parameters:    Size  Location     Type
  8947 ;;		None
  8948 ;; Auto vars:     Size  Location     Type
  8949 ;;		None
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  1    wreg      void 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0, cstack
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8963 ;;Total ram usage:        0 bytes
  8964 ;; Hardware stack levels used: 1
  8965 ;; Hardware stack levels required when called: 3
  8966 ;; This function calls:
  8967 ;;		_clear_int
  8968 ;; This function is called by:
  8969 ;;		Interrupt level 2
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	intcode
  8974   000008                     __pintcode:
  8975                           	callstack 0
  8976   000008                     _HighISR:
  8977                           	callstack 19
  8978                           
  8979                           ;incstack = 0
  8980   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8981   00000A                     
  8982                           ;interrupts.c: 69:     if (PIR0bits.INT1IF){
  8983   00000A  010E               	movlb	14	; () banked
  8984   00000C  A333               	btfss	51,1,b	;volatile
  8985   00000E  EF0B  F000         	goto	i2u428_41
  8986   000012  EF0D  F000         	goto	i2u428_40
  8987   000016                     i2u428_41:
  8988   000016  EF12  F000         	goto	i2l251
  8989   00001A                     i2u428_40:
  8990   00001A                     
  8991                           ; BSR set to: 14
  8992                           ;interrupts.c: 70:         clear_int();
  8993   00001A  EC68  F01F         	call	_clear_int	;wreg free
  8994   00001E                     
  8995                           ;interrupts.c: 71:         LATDbits.LATD7=1;
  8996   00001E  8E7C               	bsf	124,7,c	;volatile
  8997   000020                     
  8998                           ;interrupts.c: 72:         PIR0bits.INT1IF = 0;
  8999   000020  010E               	movlb	14	; () banked
  9000   000022  9333               	bcf	51,1,b	;volatile
  9001   000024                     i2l251:
  9002                           
  9003                           ; BSR set to: 14
  9004   000024  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9005   000026  0011               	retfie		f
  9006   000028                     __end_of_HighISR:
  9007                           	callstack 0
  9008                           
  9009 ;; *************** function _clear_int *****************
  9010 ;; Defined at:
  9011 ;;		line 32 in file "interrupts.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;		None
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;		None
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0, cstack
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9029 ;;Total ram usage:        0 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 2
  9032 ;; This function calls:
  9033 ;;		i2_I2C_2_Master_Start
  9034 ;;		i2_I2C_2_Master_Stop
  9035 ;;		i2_I2C_2_Master_Write
  9036 ;; This function is called by:
  9037 ;;		_HighISR
  9038 ;;		_colour_interrupt_init
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text48
  9043   003ED0                     __ptext48:
  9044                           	callstack 0
  9045   003ED0                     _clear_int:
  9046                           	callstack 19
  9047   003ED0                     
  9048                           ;interrupts.c: 33:     I2C_2_Master_Start();
  9049   003ED0  EC93  F01F         	call	i2_I2C_2_Master_Start	;wreg free
  9050                           
  9051                           ;interrupts.c: 34:  I2C_2_Master_Write(0x52 | 0x00);
  9052   003ED4  0E52               	movlw	82
  9053   003ED6  EC79  F01F         	call	i2_I2C_2_Master_Write
  9054                           
  9055                           ;interrupts.c: 35:     I2C_2_Master_Write(0b11100110);
  9056   003EDA  0EE6               	movlw	230
  9057   003EDC  EC79  F01F         	call	i2_I2C_2_Master_Write
  9058                           
  9059                           ;interrupts.c: 36:     I2C_2_Master_Stop();
  9060   003EE0  EC8E  F01F         	call	i2_I2C_2_Master_Stop	;wreg free
  9061   003EE4  0012               	return		;funcret
  9062   003EE6                     __end_of_clear_int:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function i2_I2C_2_Master_Write *****************
  9066 ;; Defined at:
  9067 ;;		line 45 in file "i2c.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;  data_byte       1    wreg     unsigned char 
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;  data_byte       1    1[COMRAM] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9085 ;;Total ram usage:        1 bytes
  9086 ;; Hardware stack levels used: 1
  9087 ;; Hardware stack levels required when called: 1
  9088 ;; This function calls:
  9089 ;;		i2_I2C_2_Master_Idle
  9090 ;; This function is called by:
  9091 ;;		_clear_int
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text49
  9096   003EF2                     __ptext49:
  9097                           	callstack 0
  9098   003EF2                     i2_I2C_2_Master_Write:
  9099                           	callstack 19
  9100                           
  9101                           ;incstack = 0
  9102                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9103   003EF2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9104   003EF4                     
  9105                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9106   003EF4  EC29  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9107   003EF8                     
  9108                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9109   003EF8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9110   003EFC  0012               	return		;funcret
  9111   003EFE                     __end_ofi2_I2C_2_Master_Write:
  9112                           	callstack 0
  9113                           
  9114 ;; *************** function i2_I2C_2_Master_Stop *****************
  9115 ;; Defined at:
  9116 ;;		line 39 in file "i2c.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;		None
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      void 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9134 ;;Total ram usage:        0 bytes
  9135 ;; Hardware stack levels used: 1
  9136 ;; Hardware stack levels required when called: 1
  9137 ;; This function calls:
  9138 ;;		i2_I2C_2_Master_Idle
  9139 ;; This function is called by:
  9140 ;;		_clear_int
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           	psect	text50
  9145   003F1C                     __ptext50:
  9146                           	callstack 0
  9147   003F1C                     i2_I2C_2_Master_Stop:
  9148                           	callstack 19
  9149   003F1C                     
  9150                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9151   003F1C  EC29  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9152   003F20                     
  9153                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9154   003F20  010E               	movlb	14	; () banked
  9155   003F22  85DA               	bsf	218,2,b	;volatile
  9156   003F24                     
  9157                           ; BSR set to: 14
  9158   003F24  0012               	return		;funcret
  9159   003F26                     __end_ofi2_I2C_2_Master_Stop:
  9160                           	callstack 0
  9161                           
  9162 ;; *************** function i2_I2C_2_Master_Start *****************
  9163 ;; Defined at:
  9164 ;;		line 27 in file "i2c.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;		None
  9167 ;; Auto vars:     Size  Location     Type
  9168 ;;		None
  9169 ;; Return value:  Size  Location     Type
  9170 ;;                  1    wreg      void 
  9171 ;; Registers used:
  9172 ;;		wreg, status,2, status,0, cstack
  9173 ;; Tracked objects:
  9174 ;;		On entry : 0/0
  9175 ;;		On exit  : 0/0
  9176 ;;		Unchanged: 0/0
  9177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9182 ;;Total ram usage:        0 bytes
  9183 ;; Hardware stack levels used: 1
  9184 ;; Hardware stack levels required when called: 1
  9185 ;; This function calls:
  9186 ;;		i2_I2C_2_Master_Idle
  9187 ;; This function is called by:
  9188 ;;		_clear_int
  9189 ;; This function uses a non-reentrant model
  9190 ;;
  9191                           
  9192                           	psect	text51
  9193   003F26                     __ptext51:
  9194                           	callstack 0
  9195   003F26                     i2_I2C_2_Master_Start:
  9196                           	callstack 19
  9197   003F26                     
  9198                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9199   003F26  EC29  F01F         	call	i2_I2C_2_Master_Idle	;wreg free
  9200   003F2A                     
  9201                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9202   003F2A  010E               	movlb	14	; () banked
  9203   003F2C  81DA               	bsf	218,0,b	;volatile
  9204   003F2E                     
  9205                           ; BSR set to: 14
  9206   003F2E  0012               	return		;funcret
  9207   003F30                     __end_ofi2_I2C_2_Master_Start:
  9208                           	callstack 0
  9209                           
  9210 ;; *************** function i2_I2C_2_Master_Idle *****************
  9211 ;; Defined at:
  9212 ;;		line 22 in file "i2c.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;		None
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;		None
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9229 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9230 ;;Total ram usage:        1 bytes
  9231 ;; Hardware stack levels used: 1
  9232 ;; This function calls:
  9233 ;;		Nothing
  9234 ;; This function is called by:
  9235 ;;		i2_I2C_2_Master_Start
  9236 ;;		i2_I2C_2_Master_Stop
  9237 ;;		i2_I2C_2_Master_Write
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text52
  9242   003E52                     __ptext52:
  9243                           	callstack 0
  9244   003E52                     i2_I2C_2_Master_Idle:
  9245                           	callstack 19
  9246   003E52                     i2l76:
  9247   003E52  010E               	movlb	14	; () banked
  9248   003E54  B5D8               	btfsc	216,2,b	;volatile
  9249   003E56  EF2F  F01F         	goto	i2u405_41
  9250   003E5A  EF31  F01F         	goto	i2u405_40
  9251   003E5E                     i2u405_41:
  9252   003E5E  EF29  F01F         	goto	i2l76
  9253   003E62                     i2u405_40:
  9254   003E62                     
  9255                           ; BSR set to: 14
  9256   003E62  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9257   003E66  0E1F               	movlw	31
  9258   003E68  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9259   003E6A  A4D8               	btfss	status,2,c
  9260   003E6C  EF3A  F01F         	goto	i2u406_41
  9261   003E70  EF3C  F01F         	goto	i2u406_40
  9262   003E74                     i2u406_41:
  9263   003E74  EF29  F01F         	goto	i2l76
  9264   003E78                     i2u406_40:
  9265   003E78                     
  9266                           ; BSR set to: 14
  9267   003E78  0012               	return		;funcret
  9268   003E7A                     __end_ofi2_I2C_2_Master_Idle:
  9269                           	callstack 0
  9270                           
  9271                           	psect	rparam
  9272   000000                     
  9273                           	psect	temp
  9274   00005D                     btemp:
  9275                           	callstack 0
  9276   00005D                     	ds	1
  9277   000000                     int$flags	set	btemp
  9278   000000                     wtemp8	set	btemp+1
  9279   000000                     ttemp5	set	btemp+1
  9280   000000                     ttemp6	set	btemp+4
  9281   000000                     ttemp7	set	btemp+8
  9282                           
  9283                           	psect	idloc
  9284                           
  9285                           ;Config register IDLOC0 @ 0x200000
  9286                           ;	unspecified, using default values
  9287   200000                     	org	2097152
  9288   200000  0FFF               	dw	4095
  9289                           
  9290                           ;Config register IDLOC1 @ 0x200002
  9291                           ;	unspecified, using default values
  9292   200002                     	org	2097154
  9293   200002  0FFF               	dw	4095
  9294                           
  9295                           ;Config register IDLOC2 @ 0x200004
  9296                           ;	unspecified, using default values
  9297   200004                     	org	2097156
  9298   200004  0FFF               	dw	4095
  9299                           
  9300                           ;Config register IDLOC3 @ 0x200006
  9301                           ;	unspecified, using default values
  9302   200006                     	org	2097158
  9303   200006  0FFF               	dw	4095
  9304                           
  9305                           ;Config register IDLOC4 @ 0x200008
  9306                           ;	unspecified, using default values
  9307   200008                     	org	2097160
  9308   200008  0FFF               	dw	4095
  9309                           
  9310                           ;Config register IDLOC5 @ 0x20000A
  9311                           ;	unspecified, using default values
  9312   20000A                     	org	2097162
  9313   20000A  0FFF               	dw	4095
  9314                           
  9315                           ;Config register IDLOC6 @ 0x20000C
  9316                           ;	unspecified, using default values
  9317   20000C                     	org	2097164
  9318   20000C  0FFF               	dw	4095
  9319                           
  9320                           ;Config register IDLOC7 @ 0x20000E
  9321                           ;	unspecified, using default values
  9322   20000E                     	org	2097166
  9323   20000E  0FFF               	dw	4095
  9324                           
  9325                           	psect	config
  9326                           
  9327                           ;Config register CONFIG1L @ 0x300000
  9328                           ;	External Oscillator mode Selection bits
  9329                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9330                           ;	Power-up default value for COSC bits
  9331                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9332   300000                     	org	3145728
  9333   300000  AA                 	db	170
  9334                           
  9335                           ;Config register CONFIG1H @ 0x300001
  9336                           ;	unspecified, using default values
  9337                           ;	Clock Out Enable bit
  9338                           ;	CLKOUTEN = 0x1, unprogrammed default
  9339                           ;	Clock Switch Enable bit
  9340                           ;	CSWEN = 0x1, unprogrammed default
  9341                           ;	Fail-Safe Clock Monitor Enable bit
  9342                           ;	FCMEN = 0x1, unprogrammed default
  9343   300001                     	org	3145729
  9344   300001  FF                 	db	255
  9345                           
  9346                           ;Config register CONFIG2L @ 0x300002
  9347                           ;	unspecified, using default values
  9348                           ;	Master Clear Enable bit
  9349                           ;	MCLRE = 0x1, unprogrammed default
  9350                           ;	Power-up Timer Enable bit
  9351                           ;	PWRTE = 0x1, unprogrammed default
  9352                           ;	Low-power BOR enable bit
  9353                           ;	LPBOREN = 0x1, unprogrammed default
  9354                           ;	Brown-out Reset Enable bits
  9355                           ;	BOREN = 0x3, unprogrammed default
  9356   300002                     	org	3145730
  9357   300002  FF                 	db	255
  9358                           
  9359                           ;Config register CONFIG2H @ 0x300003
  9360                           ;	unspecified, using default values
  9361                           ;	Brown Out Reset Voltage selection bits
  9362                           ;	BORV = 0x3, unprogrammed default
  9363                           ;	ZCD Disable bit
  9364                           ;	ZCD = 0x1, unprogrammed default
  9365                           ;	PPSLOCK bit One-Way Set Enable bit
  9366                           ;	PPS1WAY = 0x1, unprogrammed default
  9367                           ;	Stack Full/Underflow Reset Enable bit
  9368                           ;	STVREN = 0x1, unprogrammed default
  9369                           ;	Debugger Enable bit
  9370                           ;	DEBUG = 0x1, unprogrammed default
  9371                           ;	Extended Instruction Set Enable bit
  9372                           ;	XINST = 0x1, unprogrammed default
  9373   300003                     	org	3145731
  9374   300003  FF                 	db	255
  9375                           
  9376                           ;Config register CONFIG3L @ 0x300004
  9377                           ;	WDT Period Select bits
  9378                           ;	WDTCPS = 0x1F, unprogrammed default
  9379                           ;	WDT operating mode
  9380                           ;	WDTE = OFF, WDT Disabled
  9381   300004                     	org	3145732
  9382   300004  9F                 	db	159
  9383                           
  9384                           ;Config register CONFIG3H @ 0x300005
  9385                           ;	unspecified, using default values
  9386                           ;	WDT Window Select bits
  9387                           ;	WDTCWS = 0x7, unprogrammed default
  9388                           ;	WDT input clock selector
  9389                           ;	WDTCCS = 0x7, unprogrammed default
  9390   300005                     	org	3145733
  9391   300005  FF                 	db	255
  9392                           
  9393                           ;Config register CONFIG4L @ 0x300006
  9394                           ;	unspecified, using default values
  9395                           ;	Write Protection Block 0
  9396                           ;	WRT0 = 0x1, unprogrammed default
  9397                           ;	Write Protection Block 1
  9398                           ;	WRT1 = 0x1, unprogrammed default
  9399                           ;	Write Protection Block 2
  9400                           ;	WRT2 = 0x1, unprogrammed default
  9401                           ;	Write Protection Block 3
  9402                           ;	WRT3 = 0x1, unprogrammed default
  9403                           ;	Write Protection Block 3
  9404                           ;	WRT4 = 0x1, unprogrammed default
  9405                           ;	Write Protection Block 3
  9406                           ;	WRT5 = 0x1, unprogrammed default
  9407                           ;	Write Protection Block 3
  9408                           ;	WRT6 = 0x1, unprogrammed default
  9409                           ;	Write Protection Block 3
  9410                           ;	WRT7 = 0x1, unprogrammed default
  9411   300006                     	org	3145734
  9412   300006  FF                 	db	255
  9413                           
  9414                           ;Config register CONFIG4H @ 0x300007
  9415                           ;	unspecified, using default values
  9416                           ;	Configuration Register Write Protection bit
  9417                           ;	WRTC = 0x1, unprogrammed default
  9418                           ;	Boot Block Write Protection bit
  9419                           ;	WRTB = 0x1, unprogrammed default
  9420                           ;	Data EEPROM Write Protection bit
  9421                           ;	WRTD = 0x1, unprogrammed default
  9422                           ;	Scanner Enable bit
  9423                           ;	SCANE = 0x1, unprogrammed default
  9424                           ;	Low Voltage Programming Enable bit
  9425                           ;	LVP = 0x1, unprogrammed default
  9426   300007                     	org	3145735
  9427   300007  FF                 	db	255
  9428                           
  9429                           ;Config register CONFIG5L @ 0x300008
  9430                           ;	unspecified, using default values
  9431                           ;	UserNVM Program Memory Code Protection bit
  9432                           ;	CP = 0x1, unprogrammed default
  9433                           ;	DataNVM Memory Code Protection bit
  9434                           ;	CPD = 0x1, unprogrammed default
  9435   300008                     	org	3145736
  9436   300008  FF                 	db	255
  9437                           
  9438                           ;Config register CONFIG5H @ 0x300009
  9439                           ;	unspecified, using default values
  9440   300009                     	org	3145737
  9441   300009  FF                 	db	255
  9442                           
  9443                           ;Config register CONFIG6L @ 0x30000A
  9444                           ;	unspecified, using default values
  9445                           ;	Table Read Protection Block 0
  9446                           ;	EBTR0 = 0x1, unprogrammed default
  9447                           ;	Table Read Protection Block 1
  9448                           ;	EBTR1 = 0x1, unprogrammed default
  9449                           ;	Table Read Protection Block 2
  9450                           ;	EBTR2 = 0x1, unprogrammed default
  9451                           ;	Table Read Protection Block 3
  9452                           ;	EBTR3 = 0x1, unprogrammed default
  9453                           ;	Table Read Protection Block 4
  9454                           ;	EBTR4 = 0x1, unprogrammed default
  9455                           ;	Table Read Protection Block 5
  9456                           ;	EBTR5 = 0x1, unprogrammed default
  9457                           ;	Table Read Protection Block 6
  9458                           ;	EBTR6 = 0x1, unprogrammed default
  9459                           ;	Table Read Protection Block 7
  9460                           ;	EBTR7 = 0x1, unprogrammed default
  9461   30000A                     	org	3145738
  9462   30000A  FF                 	db	255
  9463                           
  9464                           ;Config register CONFIG6H @ 0x30000B
  9465                           ;	unspecified, using default values
  9466                           ;	Boot Block Table Read Protection bit
  9467                           ;	EBTRB = 0x1, unprogrammed default
  9468   30000B                     	org	3145739
  9469   30000B  FF                 	db	255
  9470                           tosu	equ	0xFFF
  9471                           tosh	equ	0xFFE
  9472                           tosl	equ	0xFFD
  9473                           stkptr	equ	0xFFC
  9474                           pclatu	equ	0xFFB
  9475                           pclath	equ	0xFFA
  9476                           pcl	equ	0xFF9
  9477                           tblptru	equ	0xFF8
  9478                           tblptrh	equ	0xFF7
  9479                           tblptrl	equ	0xFF6
  9480                           tablat	equ	0xFF5
  9481                           prodh	equ	0xFF4
  9482                           prodl	equ	0xFF3
  9483                           indf0	equ	0xFEF
  9484                           postinc0	equ	0xFEE
  9485                           postdec0	equ	0xFED
  9486                           preinc0	equ	0xFEC
  9487                           plusw0	equ	0xFEB
  9488                           fsr0h	equ	0xFEA
  9489                           fsr0l	equ	0xFE9
  9490                           wreg	equ	0xFE8
  9491                           indf1	equ	0xFE7
  9492                           postinc1	equ	0xFE6
  9493                           postdec1	equ	0xFE5
  9494                           preinc1	equ	0xFE4
  9495                           plusw1	equ	0xFE3
  9496                           fsr1h	equ	0xFE2
  9497                           fsr1l	equ	0xFE1
  9498                           bsr	equ	0xFE0
  9499                           indf2	equ	0xFDF
  9500                           postinc2	equ	0xFDE
  9501                           postdec2	equ	0xFDD
  9502                           preinc2	equ	0xFDC
  9503                           plusw2	equ	0xFDB
  9504                           fsr2h	equ	0xFDA
  9505                           fsr2l	equ	0xFD9
  9506                           status	equ	0xFD8

Data Sizes:
    Strings     41
    Constant    0
    Data        3
    BSS         203
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      92
    BANK0           160    133     156
    BANK1           256      0     176
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1710$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1626$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1626$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 16
		 -> rel(BANK1[16]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _clear_int->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   32189
                                             81 BANK0     52    52      0
                  _I2C_2_Master_Init
                   _TxBufferedString
                   _color_click_init
                  _color_writetoaddr
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   26275
                                             50 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   25920
                                             83 COMRAM     2     2      0
                                             44 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   25567
                                             64 COMRAM    19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   19721
                                             47 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             27 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2504
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1246
                                             27 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             29 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             20 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              2 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              2 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             13 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              6 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              3 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    3423
                                             27 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     518
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     826
                                              6 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _color_writetoaddr                                    2     1      1     826
                                              4 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              3 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              3 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0      22
                          _clear_int
 ---------------------------------------------------------------------------------
 (10) _clear_int                                           0     0      0      22
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_writetoaddr
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _clear_int
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      B0       7       68.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     85      9C       5       97.5%
BITBIGSFRhlhlll     8F      0       0      38        0.0%
BITBIGSFRhhlh       69      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5C       1       97.9%
BITBIGSFRllh        2D      0       0      41        0.0%
BITBIGSFRlllhll     2A      0       0      45        0.0%
BITBIGSFRlllhhl     29      0       0      43        0.0%
BITBIGSFRlllllh     23      0       0      53        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      42        0.0%
BITBIGSFRlllhlh      C      0       0      44        0.0%
BITBIGSFRlllhll      9      0       0      50        0.0%
BITBIGSFRhllll       8      0       0      39        0.0%
BITBIGSFRllllh       6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      47        0.0%
BITBIGSFRlllhll      3      0       0      46        0.0%
BITBIGSFRhlhllh      2      0       0      37        0.0%
BITBIGSFRllllll      2      0       0      54        0.0%
BITBIGSFRhlhlh       1      0       0      36        0.0%
BITBIGSFRlllhll      1      0       0      48        0.0%
BITBIGSFRlllhll      1      0       0      49        0.0%
BITBIGSFRhlhh        1      0       0      35        0.0%
BITBIGSFRlllhll      1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      34        0.0%
BITBIGSFRlh          1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A8      55        0.0%
DATA                 0      0     1A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 12:19:14 2023

               _color_read_Red 3A84                   ___fldiv@aexp 001B                   ___fldiv@bexp 001A  
               _color_read_lum 3A34                   ___fldiv@sign 0013                _color_read_Blue 3B24  
                           l21 3D7A                             l30 3AD2                             l24 3E98  
                           l33 3B22                             l42 2F7C                             l27 3A82  
                           l36 3B72                             l39 393C                             l73 3DFE  
                           l82 3F1A                             l91 3EF0                             l76 3E2A  
                           l85 3F06                             l94 3CCE                             l79 3E50  
                           l88 3F10               _color_read_Green 3AD4                readColours@vals 000E  
                          l133 3EB6                            l170 3E28                            l173 3ECE  
                          l184 3DD4                            l601 358C                            l179 3DAA  
                          l445 3104                            l605 3D46                            l458 3268  
                          l628 3488                            l901 3C04                            l590 37FE  
                          l913 24AA                            l915 230A                            l924 2350  
                          l596 3546                            l860 1A04                            l861 19CA  
                          l926 23C8                            l918 22CE                            l927 23B6  
                          l952 1FA2                            l945 1DAC                            l962 20D2  
                          l954 201A                            l955 2008                            l859 1A16  
                          l876 1B30                            l868 1CE6                            l949 2110  
                          l885 1C00                            l886 1BEE                            l993 2D2E  
                          l986 2C96                            l989 2DF2                            _abs 3CD0  
                          _pad 3800                            _rel 01A0                            wreg 000FE8  
                 ___flmul@aexp 0014                   ___flmul@bexp 0015                   ___flmul@sign 000F  
                 ___flmul@temp 001A                   ___flmul@prod 0016                   ___fltol@exp1 000C  
                         l1000 2D8A                           l1201 3754                           l1041 3822  
                         l1009 39E2                           l1050 283C                           l1123 27B0  
                         ?_abs 0015                           l1212 3F34                           l1052 2844  
                         l1108 1608                           l1045 3878                           l1053 288A  
                         l1160 3D06                           l3000 3C4A                           l1064 2A2C  
                         l1080 1004                           l1209 3C8C                           l1145 3990  
                         l3010 2F82                           l3002 3C56                           l1218 3C48  
                         l1163 3D0E                           l1155 368A                           l1075 1826  
                         l3100 215E                           l3020 2FE2                           l3012 2F90  
                         l3004 3C68                           l1172 2B82                           l1180 38CE  
                         l3110 2184                           l3102 2160                           l3030 302C  
                         l3022 2FE6                           l3014 2FB0                           l3006 3C6C  
                         l1078 11BE                           l1183 38DE                           l3200 241C  
                         l3120 21C4                           l3112 2192                           l3104 2168  
                         l3040 309C                           l3032 303A                           l3024 2FF2  
                         l3016 2FB4                           l3008 2F7E                           l1169 2C3E  
                         l3210 2486                           l3202 2420                           l3130 2204  
                         l3122 21C6                           l3114 2194                           l3106 2178  
                         l4010 2D18                           l4002 2CD0                           l3042 30AE  
                         l3034 304C                           l3026 3010                           l3018 2FC2  
                         l3212 248A                           l3204 243A                           l3140 2234  
                         l3132 220C                           l3116 21A4                           l3124 21CE  
                         l3108 217E                           l4020 2D98                           l4012 2D24  
                         l4004 2CD8                           l3036 307A                           l3028 3018  
                         l3044 30B4                           l3060 313C                           l3052 3106  
                         l3300 1EFC                           l1189 3A32                           l3214 2498  
                         l3206 2450                           l3150 2272                           l3142 2234  
                         l3134 2210                           l3126 21DE                           l3118 21B4  
                         l4030 2DE0                           l4022 2D9A                           l4014 2D60  
                         l4006 2CE4                           l3046 30C4                           l3038 309A  
                         l3070 31A4                           l3062 314A                           l3054 310A  
                         l3310 1F92                           l3302 1F26                           l3230 1D02  
                         l4110 39D0                           l4102 3992                           l3216 249E  
                         l3208 246A                           l3160 22BE                           l3152 2282  
                         l3128 21F4                           l4032 2DE2                           l4024 2D9E  
                         l4016 2D6C                           l4008 2D16                           l3048 30E4  
                         l3072 31B2                           l3080 3218                           l3064 316A  
                         l3056 3118                           l3320 1FD2                           l3312 1FA0  
                         l3304 1F5C                           l3240 1D3A                           l3232 1D04  
                         l3400 3D10                           l4040 3966                           l4104 39A4  
                         l3218 24A0                           l3170 2308                           l3162 22CC  
                         l3154 2292                           l3146 2248                           l3138 2224  
                         l3090 211E                           l4026 2DC2                           l4018 2D7A  
                         l3082 3228                           l3074 31E0                           l3066 3188  
                         l3058 3138                           l3330 2044                           l3322 2000  
                         l3314 1FB2                           l3306 1F6A                           l3250 1D66  
                         l3242 1D4A                           l3234 1D14                           l3226 1CE8  
                         l3402 3D26                           l3410 339A                           l4042 3986  
                         l4106 39AC                           l4060 3D4C                           l3180 234E  
                         l3172 231A                           l3164 22D8                           l3156 229A  
                         l3148 2262                           l3092 212C                           l4028 2DD2  
                         l3084 3248                           l3076 3200                           l3068 3190  
                         l3340 20BA                           l3332 206E                           l3316 1FC0  
                         l3308 1F88                           l3260 1DBC                           l3252 1D76  
                         l3244 1D50                           l3236 1D24                           l3228 1CF4  
                         l3404 3D36                           l3420 33EA                           l3500 2A2E  
                         l4036 393E                           l4108 39B4                           l4062 3D56  
                         l3190 23AE                           l3174 2330                           l3182 2360  
                         l3166 22F6                           l3158 22AA                           l3094 212E  
                         l4070 2DF4                           l3078 3212                           l3342 20D6  
                         l3350 20FC                           l3326 202A                           l3334 2072  
                         l3318 1FC4                           l3270 1DF6                           l3262 1DCC  
                         l3254 1D86                           l3246 1D56                           l3238 1D34  
                         l3430 3414                           l3422 33EE                           l3414 33AE  
                         l3502 2A4E                           l4038 394A                           l4064 3D66  
                         l3184 236E                           l3176 2336                           l3168 22F8  
                         l3096 213E                           l3088 2112                           l4080 3EB2  
                         l4072 3E9A                           l3352 2100                           l3344 20E6  
                         l3336 208C                           l3328 2036                           l3280 1E48  
                         l3272 1E0C                           l3256 1D96                           l3248 1D64  
                         l2800 1834                           l3440 343C                           l3432 341E  
                         l3424 33FC                           l3416 33D8                           l3408 3384  
                         l3520 2BF6                           l3512 2B36                           l3504 2AA4  
                         l3600 0E42                           l4400 32CE                           l4090 3D92  
                         l4066 3D70                           l4058 3D48                           l3194 23D8  
                         l3186 2372                           l3178 2340                           l3098 214E  
                         l4082 3EB4                           l4074 3EA4                           l3370 37D2  
                         l3362 3756                           l3346 20F4                           l3338 20A0  
                         l3290 1E8E                           l3282 1E56                           l3274 1E18  
                         l3266 1DE0                           l3258 1D9C                           l2810 1874  
                         l2802 1842                           l3442 3448                           l3434 3428  
                         l3418 33DA                           l3522 2C1E                           l3514 2B72  
                         l3506 2AB8                           l3530 39F8                           l3610 0E8A  
                         l3602 0E50                           l4410 3366                           l4402 32E8  
                         l4084 3D7C                           l3540 3E2A                           l3196 23E4  
                         l3188 2380                           l4076 3EA6                           l4068 38E0  
                         l4092 3DAC                           l3460 3842                           l3452 3800  
                         l3372 37F6                           l3364 3784                           l3380 34B8  
                         l3348 20F6                           l3292 1EA8                           l3284 1E62  
                         l3276 1E30                           l3268 1DEC                           l2900 1A34  
                         l2820 18A6                           l2812 1876                           l2804 1844  
                         l3356 3BC0                           l3444 3458                           l3524 2C2E  
                         l3508 2AC6                           l3516 2BA6                           l3532 3A04  
                         l3700 1230                           l3612 0E9A                           l3620 0EC2  
                         l3604 0E54                           l4412 336A                           l4404 32F4  
                         l4086 3D80                           l3542 3E3A                           l3198 23F2  
                         l4078 3EB0                           l4094 3DC0                           l3462 3846  
                         l3454 380E                           l3550 27F6                           l3374 37FC  
                         l3366 3794                           l3390 3526                           l3382 34C8  
                         l3294 1EB8                           l3286 1E72                           l3278 1E3C  
                         l2910 1A74                           l2830 18CE                           l2822 18A8  
                         l2806 1854                           l2814 187E                           l3358 3BD0  
                         l3446 3468                           l3470 358E                           l3518 2BE2  
                         l3534 3A08                           l3710 1276                           l3702 1242  
                         l3630 0F0C                           l3622 0EE8                           l3614 0EAA  
                         l3606 0E78                           l4406 3308                           l4088 3D8E  
                         l4096 3DC4                           l3464 3864                           l3456 381A  
                         l3560 2862                           l3552 2816                           l3544 27B2  
                         l3368 37C2                           l3392 3534                           l3384 34F6  
                         l3296 1ED4                           l3288 1E7E                           l2920 1A9E  
                         l2912 1A80                           l2904 1A48                           l2840 1908  
                         l2832 18DE                           l2824 18AE                           l2816 188E  
                         l2808 1864                           l3448 3478                           l3472 35AE  
                         l3536 3A14                           l3528 39E4                           l3800 1772  
                         l3720 138A                           l3712 12DA                           l3704 124A  
                         l3640 0F74                           l3632 0F24                           l3624 0EFA  
                         l3616 0EB6                           l3608 0E82                           l4408 3356  
                         l4098 3DCE                           l3466 3CD0                           l3458 382E  
                         l3570 289C                           l3562 2872                           l3554 2830  
                         l3546 27D2                           l3394 3584                           l3386 3506  
                         l3378 348A                           l3298 1EE0                           l2930 1B10  
                         l2914 1A84                           l2906 1A58                           l2922 1AA4  
                         l2850 1934                           l2842 191A                           l2834 18EE  
                         l2826 18BC                           l2818 1894                           l3474 35EC  
                         l3482 362C                           l3538 3A18                           l3810 17E8  
                         l3802 1782                           l3730 1448                           l3722 13BE  
                         l3714 1332                           l3706 1252                           l3642 0F86  
                         l3634 0F2E                           l3626 0EFE                           l3618 0EBE  
                         l4370 3280                           l3820 3F16                           l3468 3CEA  
                         l3572 28A2                           l3580 2994                           l3564 287E  
                         l3556 284C                           l3548 27E6                           l3396 358A  
                         l3388 3514                           l2940 1B6A                           l2924 1ACA  
                         l2932 1B20                           l2916 1A92                           l2908 1A66  
                         l2860 1948                           l2852 1938                           l2844 1928  
                         l2836 18F0                           l2828 18BE                           l3484 363E  
                         l3476 3614                           l3492 3C06                           l3812 17FE  
                         l3804 17B2                           l3740 151C                           l3732 1458  
                         l3724 13F0                           l3716 1366                           l3708 1262  
                         l3644 0F8A                           l3628 0F04                           l3900 2742  
                         l4380 328A                           l4372 3282                           l4364 326A  
                         l3822 3EE8                           l3830 3EFE                           l2790 36BA  
                         l3590 29FC                           l3582 29AE                           l3574 2924  
                         l3566 2886                           l3558 285C                           l2950 1B9A  
                         l2942 1B74                           l2934 1B46                           l2926 1AFE  
                         l2918 1A94                           l2870 195C                           l2862 194C  
                         l2854 193C                           l2846 192C                           l2838 18F8  
                         l3478 3620                           l3494 3C16                           l3814 1806  
                         l3806 17C0                           l3750 1552                           l3742 1530  
                         l3734 148C                           l3726 1406                           l3718 136C  
                         l3670 10BE                           l3662 1014                           l3646 0F90  
                         l3638 0F4E                           l3902 2772                           l4534 261C  
                         l4390 3294                           l4382 328C                           l4374 3284  
                         l4366 326E                           ?_pad 0013                           l3824 3EEC  
                         l3840 3CA4                           l3832 3F02                           l2792 36D8  
                         l2784 368C                           l3592 2A0C                           l3584 29CC  
                         l3576 292A                           l3568 2892                           l2960 1BC2  
                         l2952 1B9E                           l2944 1B82                           l2936 1B56  
                         l2928 1B00                           l2880 1996                           l2872 1960  
                         l2864 1950                           l2856 1940                           l2848 1930  
                         l3488 3682                           l3496 387A                           l3808 17D8  
                         l3760 161A                           l3752 155A                           l3736 14E2  
                         l3744 1534                           l3728 1438                           l3672 10FC  
                         l3664 101A                           l3648 0F98                           l3656 0FB4  
                         l4536 26DA                           l4392 3296                           l4384 328E  
                         l4376 3286                           l4368 3272                           l3818 3F12  
                         l3826 3F08                           l3842 3CCA                           l3834 3C90  
                         l2794 370E                           l2786 369E                           l3586 29E6  
                         l3578 2930                           l2970 1C1C                           l2962 1BD0  
                         l2954 1BAE                           l2946 1B84                           l2890 19E8  
                         l2882 19B2                           l2874 1964                           l2866 1954  
                         l2858 1944                           l3498 3898                           l3770 164A  
                         l3762 1628                           l3754 1566                           l3746 1544  
                         l3738 14E8                           l3690 11EA                           l3674 1110  
                         l3682 118C                           l3666 104E                           l3658 0FCE  
                         l4538 2764                           l3850 24D4                           l3906 2784  
                         l4394 32B0                           l4386 3290                           l4378 3288  
                         l3940 3DD6                           l3828 3F0C                           l3844 3CCC  
                         l3836 3C94                           l2788 36B0                           l3588 29F6  
                         l2980 1C86                           l2972 1C2A                           l2964 1BE6  
                         l2948 1B92                           l2956 1BB0                           l2892 19F6  
                         l2884 19C2                           l2868 1958                           l2876 1968  
                         l3780 167C                           l3772 165A                           l3764 1638  
                         l3756 15DE                           l3748 154C                           l3692 11F2  
                         l3684 11C6                           l3676 1144                           l3668 108C  
                         l3596 0E2C                           l3860 2524                           l3852 24E2  
                         l4396 32B2                           l4388 3292                           l3950 3DEC  
                         l3942 3DE0                           l3838 3C9C                           l2990 1CC0  
                         l2982 1CA6                           l2974 1C64                           l2958 1BBE  
                         l2894 19F8                           l2886 19D8                           l2878 196C  
                         l2798 1828                           l3790 1724                           l3782 168E  
                         l3774 165E                           l3766 163C                           l3758 15FE  
                         l3694 11F8                           l3686 11D4                           l3678 114C  
                         l3598 0E32                           l3870 25DA                           l3862 2544  
                         l3854 24F0                           l4398 32CC                           l3944 3DE6  
                         l3952 3E7C                           l3960 3A84                           l2992 1CC6  
                         l2984 1CAA                           l2968 1C10                           l2976 1C66  
                         l2896 1A02                           l2888 19E4                           l3792 172C  
                         l3784 1692                           l3776 1664                           l3768 1642  
                         l3696 120A                           l3688 11E0                           l3872 25F0  
                         l3880 2608                           l3864 259A                           l3856 24F4  
                         l3848 24AC                           l3946 3DE8                           l3962 3ACA  
                         l3954 3A34                           l2994 1CD4                           l2986 1CB8  
                         l2978 1C76                           l2898 1A24                           l3786 1698  
                         l3778 166A                           l3794 1730                           l3698 1218  
                         l3890 26C6                           l3874 25F8                           l3882 263A  
                         l3858 2504                           l3980 3E12                           l3948 3DEA  
                         l3972 3B24                           l3956 3A7A                           l2996 1CD6  
                         l2988 1CBE                           l3796 174E                           l3788 16F0  
                         l3892 26F0                           l3884 265E                           l3876 2600  
                         l3868 25CA                           l3982 3E16                           l3990 2C42  
                         l3974 3B6A                           l3966 3AD4                           l3798 176A  
                         l3894 2710                           l3886 2692                           l3984 3E26  
                         l3992 2C52                           l3968 3B1A                           l3978 3E02  
                         l3994 2C60                           l3986 3EB8                           l3996 2CA6  
                         l3998 2CBC                           STR_1 0E01                           STR_2 0E22  
                         STR_5 0E26                           u2200 370E                           u3000 1D64  
                         u2201 370A                           u3001 1D60                           u3010 1D76  
                         u2210 1842                           u3011 1D72                           u2211 183E  
                         u3100 2016                           u3020 1D86                           u2300 1996  
                         u2220 1854                           u3101 2012                           u3021 1D82  
                         u2301 1992                           u2221 1850                           u3110 202A  
                         u3030 1DBC                           u2310 19AE                           u2230 1864  
                         u3111 2026                           u3031 1DB8                           u2311 19A8  
                         u2231 1860                           u3200 34F6                           u3120 2044  
                         u3040 1DCC                           u2400 1A92                           u2320 19B0  
                         u2240 18A6                   _BAUD4CONbits 000EE9                           u3201 34F2  
                         u3121 2040                           u3041 1DC8                           u2401 1A8E  
                         u2241 18A2                           u2170 369E                           u3210 3514  
                         u3130 208C                           u3050 1F46                           u2410 1ACA  
                         u2330 19D8                           u2250 18BC                           u4010 24D4  
                         u2171 369A                           u3211 3510                           u3131 2088  
                         u2411 1AC6                           u2331 19D4                           u2251 18B8  
                         u4011 24D0                           u4100 2C52                           u2180 36B0  
                         u3220 3534                           u3140 20BA                           u3060 1FA0  
                         u2500 1BE6                           u2420 1B10                           u2340 19F6  
                         u2260 18CE                           u3300 3458                           u4020 2524  
                         u4101 2C4E                           u2181 36AC                           u3221 3530  
                         u3141 20B6                           u3061 1F9C                           u2501 1BE2  
                         u2421 1B0C                           u2341 19F2                           u2261 18CA  
                         u3301 3454                           u4021 2520                           u4110 2C60  
                         u2190 36D8                           u3230 3584                           u3150 20F4  
                         u3070 1FC0                           u2510 1BFC                           u2430 1B46  
                         u2350 1A16                           u2270 18DE                           u3310 3468  
                         u4030 2544                           u4111 2C5C                           u2191 36D4  
                         u3231 3580                           u3151 20F0                           u3071 1FBC  
                         u3055 1F3C                           u2511 1BF8                           u2431 1B42  
                         u2351 1A12                           u2271 18DA                           u3311 3464  
                         u4031 2540                           u4120 2CBC                           u4008 3CBA  
                         u2600 3C8C                           u3320 380E                           u3160 3784  
                         u3080 1FD2                           u3240 3D26                           u2520 1C10  
                         u2440 1B56                           u2360 1A24                           u2280 191A  
                         u3400 3678                           u4040 265A                           u4200 3986  
                         u4121 2CB8                           u2601 3C88                           u3321 380A  
                         u3161 3780                           u3081 1FCE                           u3241 3D22  
                         u2521 1C0C                           u2441 1B52                           u2361 1A20  
                         u2281 1916                           u3401 3672                           u4041 2656  
                         u4201 3982                           u4210 3DAA                           u4130 2D12  
                         u2610 2F90                           u3330 3864                           u3170 37C2  
                         u3090 2000                           u2530 1C2A                           u2450 1B82  
                         u2370 1A34                           u2290 1928                           u3250 339A  
                         u3410 367A                           u4211 3DA6                           u4131 2D0E  
                         u2611 2F8C                           u3331 3860                           u3171 37BE  
                         u3091 1FFC                           u2531 1C26                           u2451 1B7E  
                         u2371 1A30                           u2291 1924                           u3251 3396  
                         u4140 2D5C                           u4220 3DC0                           u2620 2FC2  
                         u2700 3188                           u3340 3CEA                           u3180 37F6  
                         u2540 1C64                           u2460 1B92                           u2380 1A66  
                         u3260 33CE                           u3500 2B72                           u3420 3C48  
                         u4300 337C                           u4141 2D58                           u4221 3DBC  
                         u2621 2FBE                           u2701 3184                           u3341 3CE6  
                         u3181 37F2                           u2541 1C60                           u2461 1B8E  
                         u2381 1A62                           u3501 2B6E                           u3421 3C44  
                         u4301 3378                           u4070 3E12                           u4150 2D7A  
                         u2710 31B2                           u3190 34B8                           u2550 1C76  
                         u2470 1BAE                           u2390 1A74                           u3270 33FC  
                         u3350 35CE                           u3510 2BC6                           u3430 3898  
                         u4071 3E0E                           u4151 2D76                           u2631 2FEC  
                         u2711 31AE                           u3191 34B4                           u2551 1C72  
                         u2471 1BAA                           u2391 1A70                           u3271 33F8  
                         u3431 3894                           u2800 21F4                           u4160 2D8A  
                         u4080 3ECC                           u2640 3010                           u2720 31E0  
                         u3600 2830                           u2560 1C86                           u2480 1BBE  
                         u3280 3410                           u3360 35EC                           u3520 2BE2  
                         u3440 2A76                           u2801 21F0                           u4161 2D86  
                         u4081 3EC6                           u2641 300C                           u2721 31DC  
                         u3601 282C                           u2561 1C82                           u2481 1BBA  
                         u3281 340C                           u3265 33C4                           u3361 35E8  
                         u3521 2BDE                           u2810 2234                           u4170 2D98  
                         u4090 3ECE                           u2650 303A                           u2730 3228  
                         u3610 285C                           u2570 1CA6                           u2490 1BD0  
                         u3290 3438                           u3370 3614                           u3530 2C1E  
                         u3450 2AA4                           u2811 2230                           u4171 2D94  
                         u2651 3036                           u2731 3224                           u3611 2858  
                         u2571 1CA2                           u2491 1BCC                           u3291 3434  
                         u3371 3610                           u3355 35C4                           u3531 2C1A  
                         u3515 2BBC                           u3451 2AA0                           u2900 23AE  
                         u2820 22AA                           u2740 212C                           u4180 2DD2  
                         u2660 307A                           u3620 2872                           u2580 1CB8  
                         u3380 363E                           u3460 2AC6                           u3540 3A32  
                         u3700 0EE8                           u2901 23AA                           u2821 22A6  
                         u2741 2128                           u4181 2DCE                           u2661 3076  
                         u3621 286E                           u2581 1CB4                           u3381 363A  
                         u3461 2AC2                           u3445 2A6C                           u3541 3A2E  
                         u3701 0EE4                           u4317 32A2                           u3550 3E3A  
                         u2910 23C4                           u2830 22CC                           u2750 213E  
                         u4190 2DE0                           u2670 30C4                           u3630 29AE  
                         u2590 1CD4                           u3710 0EFA                           u3551 3E36  
                         u2911 23C0                           u2831 22C8                           u2751 213A  
                         u4191 2DDC                           u2671 30C0                           u3631 29AA  
                         u2591 1CD0                           u3711 0EF6                           u4327 32BE  
                         u3560 3E50                           u2920 23D8                           u2840 22F6  
                         u2760 214E                           u2680 3118                           u3640 29CC  
                         u3480 2B32                           u3800 11D4                           u3720 0F74  
                         u3561 3E4C                           u2921 23D4                           u2841 22F2  
                         u2761 214A                           u2681 3114                           u3641 29C8  
                         u3481 2B2E                           u3801 11D0                           u3721 0F70  
                         u4337 32DA                           u2930 23F2                           u2850 231A  
                         u2770 2192                           u2690 314A                           u3650 29E6  
                         u3570 27E2                           u3490 2B56                           u3810 120A  
                         u3730 0F86                           u4347 3D5C                           u2931 23EE  
                         u2851 2316                           u2771 218E                           u2691 3146  
                         u3651 29E2                           u3571 27DC                           u3395 3650  
                         u3475 2ADA                           u3811 1206                           u3731 0F82  
                         u2940 243A                           u2860 2330                           u2780 21A4  
                         u3660 29F6                           u3580 27E4                           u3476 2AE4  
                         u3900 15DE                           u3820 1218                           u3740 1000  
                         u2941 2436                           u2861 232C                           u2781 21A0  
                         u3661 29F2                           u3477 2AF4                           u3901 15DA  
                         u3821 1214                           u3741 0FFC                           u2950 246A  
                         u2870 234E                           u2790 21B4                           u3590 27F6  
                         u3910 161A                           u3830 1242                           u3750 108C  
                         u3670 0E50                           u2951 2466                           u2871 234A  
                         u2791 21B0                           u3591 27F2                           u3495 2B4C  
                         u3911 1616                           u3831 123E                           u3751 1088  
                         u3671 0E4C                           u2960 2498                           u2880 236E  
                         u3920 1628                           u3840 138A                           u3760 10BE  
                         u3680 0E9A                           u2961 2494                           u2881 236A  
                         u3921 1624                           u3841 1386                           u3761 10BA  
                         u3681 0E96                           u2890 2380                           u2970 1D02  
                         u3930 167C                           u3850 13F0                           u3770 10FC  
                         u3690 0EAA                           u2891 237C                           u2971 1CFE  
                         u3931 1678                           u3851 13EC                           u3771 10F8  
                         u3691 0EA6                           u2980 1D14                           u3940 174E  
                         u3860 1438                           u3780 1188                           u2981 1D10  
                         u3941 174A                           u3861 1434                           u3781 1184  
                         u2990 1D24                           u3950 176A                           u3870 1448  
                         u3790 11BE                           u2991 1D20                           u3951 1766  
                         u3871 1444                           u3791 11BA                           u3960 17D2  
                         u3880 14E2                           u3961 17CC                           u3881 14DE  
                         u3970 17D4                           u3890 1530                           u3891 152C  
                         u3980 17E8                           u3981 17E4                           u3990 3CB8  
                         u3991 3CB0                           i2l82 3F2E                           i2l91 3EFC  
                         i2l76 3E52                           i2l79 3E78                           i2l88 3F24  
                         abs@a 0015                           _dbuf 0150                           _labs 387A  
                         _main 326A                           _dtoa 27B2                           _prec 0056  
                         _vals 00F1                           pad@i 001A                           pad@p 0017  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001C                           fsr2l 000FD9  
                         btemp 005D                  ___fpclassifyf 358E                           prodh 000FF4  
                         prodl 000FF3                           start 0028                ___fldiv@new_exp 0014  
       __end_of_color_read_Red 3AD4                __end_of_HighISR 0028         __end_of_color_read_lum 3A84  
                 ___param_bank 000000                          ??_abs 0017                          ??_pad 0019  
                 ?_readColours 000E                  ___fltol@sign1 000B                __end_of___aodiv 3106  
                        ?_labs 0003                __end_of___fladd 1CE8                          ?_main 0001  
                        ?_dtoa 001E                __end_of___aomod 326A                __end_of___fldiv 24AC  
              __end_of___flneg 3D48                __end_of___flmul 2112                __end_of___flsub 3C06  
              __end_of___fltol 348A                    colour_rel@B 0028                    colour_rel@G 0024  
                  colour_rel@L 002C                    colour_rel@R 0020                          i2l242 3EE4  
                        i2l251 0024                   vfpfcnvrt@fmt 0043     __end_of_I2C_2_Master_Start 3F1C  
   __end_of_I2C_2_Master_Write 3EF2                          _flags 0058                          _fputc 368C  
                        _fputs 3C4A                          labs@a 0003                          pad@fp 0013  
                        _width 00ED                          _putch 3F34                          dtoa@d 0020  
                        dtoa@i 003E                          dtoa@n 0036                          dtoa@p 0032  
                        dtoa@s 0040                          dtoa@w 0034                          tablat 000FF5  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        status 000FD8                          wtemp8 005E                __end_of_sprintf 39E4  
               ?___fpclassifyf 0003        __end_of_color_read_Blue 3B74          _I2C_2_Master_RepStart 3EFE  
              ?_color_read_Red 0007                ?_color_read_lum 0007                __initialization 3B74  
                 __end_of_labs 38E0                   __end_of_main 3384                   __end_of_dtoa 2A2E  
           putCharToTxBuf@byte 0003                         ??_labs 0007                         ??_main 00B1  
                       ??_dtoa 0028                  __activetblptr 000003                         ?_fputc 0003  
                       ?_fputs 000C                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RD5PPS 000E6F                         _RD6PPS 000E70  
                       i2l4100 3ED0                         i2l4050 3F1C                         i2l4052 3F20  
                       i2l4046 3F26                         i2l4054 3EF4                         i2l4048 3F2A  
                       i2l4056 3EF8                         i2l4190 001E                         i2l4192 0020  
                       i2l4186 000A                         i2l4188 001A                         i2l3936 3E52  
                       i2l3938 3E62                      ??_HighISR 0003       __end_of_color_click_init 3D7C  
                       _RX4PPS 000E15                         _TX4REG 000EE4               __end_of___xxtofl 2DF4  
                 vfprintf@cfmt 0054                         ___flge 348A                         ___fleq 3756  
                    ??___aodiv 0013                      ??___fladd 000B                      ??___aomod 0013  
                    ??___fldiv 000B                      ??___flneg 0007                      ??___flmul 000B  
                    ??___flsub 0024                      ??___fltol 0007                         _efgtoa 0E2C  
                       _floorf 2A2E                         _memcpy 39E4                         clear_0 3B98  
                       clear_1 3BA4                         clear_2 3BB0                         isa$std 000001  
                       pad@buf 0015                         dtoa@fp 001E                         _strcpy 3C06  
                       fputc@c 0003              ?_TxBufferedString 0004                         fputs@c 0010  
                       fputs@i 0011                         fputs@s 000C                ___fpclassifyf@e 000B  
              ___fpclassifyf@u 000D                ___fpclassifyf@x 0003                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
           ??_TxBufferedString 0006                         putch@c 0001               __end_of_vfprintf 3992  
                    ??_sprintf 0056                     ___flge@ff1 001C                     ___flge@ff2 0020  
              ??___fpclassifyf 0007                   ___xxtofl@arg 000D                   ___xxtofl@exp 000C  
                 ___xxtofl@val 0003                     ___fleq@ff1 0003                     ___fleq@ff2 0007  
        __end_of_isDataInTxBuf 3ED0                     __accesstop 0060        __end_of__initialization 3BB6  
                   ___flneg@f1 0003       __end_of_color_read_Green 3B24         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                     ___fltol@f1 0003               ?_color_read_Blue 0007  
               __pcstackCOMRAM 0001                   __pidataBANK0 3F30                  __end_of_fputc 3756  
                __end_of_fputs 3C8E                  __end_of_putch 3F36                        ??_fputc 0007  
                      ??_fputs 0010                        ??_putch 0003                     __pbssBANK0 00E5  
                   __pbssBANK1 0100              _color_writetoaddr 3E7A                        ?___flge 001C  
                      ?___fleq 0003             ?_color_writetoaddr 0005                        ?_efgtoa 0030  
                      ?_floorf 001C                        ?_memcpy 0003            ??_color_writetoaddr 0006  
                      ?_strcpy 0003                  colour_rel@rel 001E                        _INT1PPS 000DF1  
                    ?___xxtofl 0003                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5                     _colour_rel 2DF4  
       color_writetoaddr@value 0005               ??_color_read_Red 0009                        _HighISR 0008  
             ??_color_read_lum 0009              __end_of_clear_int 3EE6      __end_of_color_writetoaddr 3E9A  
           _I2C_2_Master_Start 3F12                     _initUSART4 3E9A            i2_I2C_2_Master_Idle 3E52  
           _I2C_2_Master_Write 3EE6                        __Hparam 0000            i2_I2C_2_Master_Stop 3F1C  
                      __Lparam 0000              color_read_Red@tmp 000C                        ___aodiv 2F7E  
                      ___fladd 1828                        ___aomod 3106                        ___fldiv 2112  
                      ___flneg 3D10                        ___flmul 1CE8                        ___flsub 3BC0  
                      ___fltol 3384            ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001  
                    ?_vfprintf 008C                   __psmallconst 0E00                        __pcinit 3B74  
                      __ramtop 0E00                        __ptext0 326A                        __ptext1 3992  
                      __ptext2 393E                        __ptext3 24AC                        __ptext4 0E2C  
                      __ptext5 3C06                        __ptext6 39E4                        __ptext7 387A  
                      __ptext8 2A2E                        __ptext9 358E           ?i2_I2C_2_Master_Idle 0001  
                   ??___xxtofl 0007           ?i2_I2C_2_Master_Stop 0001                        efgtoa@c 0036  
                      efgtoa@d 006B                        efgtoa@e 006F                        efgtoa@f 0032  
                      efgtoa@g 0084                        efgtoa@h 0079                        efgtoa@i 0077  
                      efgtoa@l 007D                        efgtoa@m 006D                        efgtoa@n 0082  
                      efgtoa@p 0062                        efgtoa@t 0064                        efgtoa@u 0088  
                      efgtoa@w 0071                  _RxBufWriteCnt 005C              color_read_lum@tmp 000C  
                      main@buf 00B3                        _sprintf 3992           ??_I2C_2_Master_Start 0004  
         ??_I2C_2_Master_Write 0004           end_of_initialization 3BB6              __end_of_sendTxBuf 3DD6  
                      floorf@e 002A                        floorf@m 0026                        floorf@u 002C  
                      floorf@x 001C                        memcpy@d 0009                        memcpy@n 0007  
                      memcpy@s 000B                        fputc@fp 0005                        fputs@fp 000E  
            ?_color_click_init 0001             ??_color_click_init 0007              __end_of_vfpfcnvrt 27B2  
                   efgtoa@mode 0069                     efgtoa@sign 0081                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0049                     ??_vfprintf 0054                        strcpy@d 0009  
                      strcpy@s 0007          ??i2_I2C_2_Master_Idle 0001          ??i2_I2C_2_Master_Stop 0002  
                  ___fladd@grs 0012                  ___xxtofl@sign 000B                      _TRISAbits 000F81  
                    _TRISBbits 000F82                      _TRISDbits 000F84                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0016  
                  ___fldiv@rem 000F       color_writetoaddr@address 0006        ??_I2C_2_Master_RepStart 0004  
                  ?_colour_rel 001C                    ___flmul@grs 0010                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100              ?_color_read_Green 0007                    ?_initUSART4 0001  
           ??_color_read_Green 0009                 __end_of___flge 358E                 __end_of___fleq 3800  
                  vfpfcnvrt@ap 0045                    vfpfcnvrt@cp 0052                    vfpfcnvrt@fp 0041  
               __end_of_efgtoa 1828                 __end_of_floorf 2C40                 __end_of_memcpy 3A34  
                   floorf@F526 00E5                 __end_of_strcpy 3C4A            start_initialization 3B74  
                  __end_of_abs 3D10                    __end_of_pad 387A                  _TxBufWriteCnt 005A  
        __end_of___fpclassifyf 368C            color_read_Green@tmp 000C                    vfprintf@fmt 008E  
                     ??___flge 0024                       ??___fleq 000B                  ??_readColours 0010  
                     ??_efgtoa 0037                 _putCharToTxBuf 3E00                    __pdataBANK0 00F9  
i2I2C_2_Master_Write@data_byte 0002                       ??_floorf 0020                       ??_memcpy 0009  
                     ??_strcpy 0007   __end_ofi2_I2C_2_Master_Start 3F30   __end_ofi2_I2C_2_Master_Write 3EFE  
                    ___fladd@a 0007                      ___fladd@b 0003                      ___fldiv@a 0007  
                    ___fldiv@b 0003                      ___flmul@a 0007                      ___flmul@b 0003  
                  __pbssCOMRAM 0056                      ___flsub@a 0020                      ___flsub@b 001C  
                __pcstackBANK0 0060               ___aodiv@dividend 0003                       ?_HighISR 0001  
                  _efgtoa$1769 0066                      _dtoa$1738 0030                      _clear_int 3ED0  
       __end_of_putCharToTxBuf 3E2A                      __pintcode 0008                       ?___aodiv 0003  
                     ?___fladd 0003                       ?___aomod 0003                       ?___fldiv 0003  
             ___aodiv@quotient 0015                       ?___flneg 0003                       ?___flmul 0003  
                     ?___flsub 001C                       ?___fltol 0003         TxBufferedString@string 0004  
         I2C_2_Master_Read@ack 0005           I2C_2_Master_Read@tmp 0006                    __smallconst 0E00  
          __end_of_readColours 393E              _I2C_2_Master_Idle 3E2A              _I2C_2_Master_Init 3DD6  
            _I2C_2_Master_Read 3C8E              _I2C_2_Master_Stop 3F08                  _low_threshold 00EF  
                 _RxBufReadCnt 005B             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 0092  
               colour_rel@vals 001C            ??_I2C_2_Master_Idle 0003            ??_I2C_2_Master_Init 0003  
          ??_I2C_2_Master_Read 0004                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0004  
                _isDataInTxBuf 3EB8                       _LATDbits 000F7C                       _LATFbits 000F7E  
             _TxBufferedString 3D7C                       _LATGbits 000F7F                       _LATHbits 000F80  
                    _sendTxBuf 3DAC                       _IPR0bits 000E1F                       _PIE0bits 000E29  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u405_40 3E62  
                     i2u405_41 3E5E                       i2u406_40 3E78                       i2u406_41 3E74  
                     _PIR0bits 000E33                       i2u428_40 001A                       i2u428_41 0016  
                     _PIR4bits 000E37                     ?_clear_int 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 24AC  
    __end_of_I2C_2_Master_Idle 3E52      __end_of_I2C_2_Master_Init 3E00      __end_of_I2C_2_Master_Read 3CD0  
    __end_of_I2C_2_Master_Stop 3F12                       _DataFlag 00FB    I2C_2_Master_Write@data_byte 0004  
            ??_color_read_Blue 0009                   _TxBufReadCnt 0059                     vfpfcnvrt@c 0051  
                 ??_colour_rel 0020                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 3F08  
           color_read_Blue@tmp 000C                     ?_sendTxBuf 0001                   ??_initUSART4 0003  
         i2_I2C_2_Master_Start 3F26           i2_I2C_2_Master_Write 3EF2                       __Hrparam 0000  
                    memcpy@tmp 000D                     vfprintf@ap 0090                       __Lrparam 0000  
                   vfprintf@fp 008C    __end_ofi2_I2C_2_Master_Idle 3E7A                    _readColours 38E0  
  __end_ofi2_I2C_2_Master_Stop 3F26                     ?_vfpfcnvrt 0041                ___aodiv@divisor 000B  
              ___aodiv@counter 0013             __end_of_colour_rel 2F7E                     _ANSELBbits 000E9A  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00E9                     sprintf@fmt 0094  
                     ___xxtofl 2C40             __end_of_initUSART4 3EB8                       __ptext10 3384  
                     __ptext11 3BC0                       __ptext20 368C                       __ptext12 1828  
                     __ptext21 3F34                       __ptext13 3D10                       __ptext30 3AD4  
                     __ptext22 3CD0                       __ptext14 1CE8                       __ptext31 3B24  
                     __ptext23 3106                       __ptext15 348A                       __ptext40 3EE6  
                     __ptext32 3EFE                       __ptext24 2F7E                       __ptext16 3756  
                     __ptext41 3F08                       __ptext33 3C8E                       __ptext25 3DAC  
                     __ptext17 27B2                       __ptext50 3F1C                       __ptext42 3F12  
                     __ptext34 3E9A                       __ptext26 3EB8                       __ptext18 3800  
                     __ptext51 3F26                       __ptext43 3E2A                       __ptext35 2DF4  
                     __ptext27 38E0                       __ptext19 3C4A                       __ptext52 3E52  
                     __ptext44 3DD6                       __ptext36 2C40                       __ptext28 3A34  
                     __ptext45 3D7C                       __ptext37 2112                       __ptext29 3A84  
                     __ptext46 3E00                       __ptext38 3D48                       __ptext39 3E7A  
                     __ptext48 3ED0                       __ptext49 3EF2                   _SSP2CON1bits 000ED9  
                 _SSP2CON2bits 000EDA                     strcpy@dest 0003          ?i2_I2C_2_Master_Start 0001  
        ?i2_I2C_2_Master_Write 0001                    ??_clear_int 0003                       efgtoa@fp 0030  
                     efgtoa@ne 0060                       efgtoa@pp 0068                       efgtoa@ou 0073  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005D  
                     _vfprintf 393E               ___aomod@dividend 0003                     _INTCONbits 000FF2  
                     memcpy@d1 0003                       memcpy@s1 0005                ??_isDataInTxBuf 0003  
                     intlevel2 0000                      sprintf@ap 00A4                 _high_threshold 00F9  
                  ??_sendTxBuf 0003                      strcpy@src 0005                    efgtoa@nmode 006A  
              ___aomod@divisor 000B                    ??_vfpfcnvrt 0047                ___aomod@counter 0013  
             _color_click_init 3D48       __end_of_TxBufferedString 3DAC                       sprintf@f 00A6  
                     sprintf@s 0092                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                ___fladd@signs 000F                     _TX4STAbits 000EE8                   ___aodiv@sign 0014  
       ??i2_I2C_2_Master_Start 0002                   ___fladd@aexp 0010         ??i2_I2C_2_Master_Write 0002  
                 ___fladd@bexp 0011               ??_putCharToTxBuf 0003                   ___aomod@sign 0014  
