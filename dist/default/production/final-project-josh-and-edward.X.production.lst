

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Mar 15 20:18:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   105                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   106                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   107                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   108                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   109   000000                     
   110                           ; Generated 06/04/2022 GMT
   111                           ; 
   112                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
   113                           ; All rights reserved.
   114                           ; 
   115                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   116                           ; 
   117                           ; Redistribution and use in source and binary forms, with or without modification, are
   118                           ; permitted provided that the following conditions are met:
   119                           ; 
   120                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   121                           ;        conditions and the following disclaimer.
   122                           ; 
   123                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   124                           ;        of conditions and the following disclaimer in the documentation and/or other
   125                           ;        materials provided with the distribution. Publication is not required when
   126                           ;        this file is used in an embedded application.
   127                           ; 
   128                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   129                           ;        software without specific prior written permission.
   130                           ; 
   131                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   132                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   133                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   134                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   135                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   136                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   137                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   138                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   139                           ; 
   140                           ; 
   141                           ; Code-generator required, PIC18F67K40 Definitions
   142                           ; 
   143                           ; SFR Addresses
   144   000000                     
   145                           	psect	idataBANK0
   146   00620E                     __pidataBANK0:
   147                           	callstack 0
   148                           
   149                           ;initializer for _RunOneBlockTime
   150   00620E  041A               	dw	1050
   151                           
   152                           ;initializer for _Turn45Delay
   153   006210  003C               	dw	60
   154                           
   155                           ;initializer for _power
   156   006212  0032               	dw	50
   157                           
   158                           	psect	idataBANK1
   159   006214                     __pidataBANK1:
   160                           	callstack 0
   161                           
   162                           ;initializer for _run_flag
   163   006214  0001               	dw	1
   164                           
   165                           ;initializer for _move_count
   166   006216  FFFF               	dw	65535
   167   000000                     _LATHbits	set	3968
   168   000000                     _TRISEbits	set	3973
   169   000000                     _TX4REG	set	3812
   170   000000                     _RC4STAbits	set	3815
   171   000000                     _SP4BRGH	set	3814
   172   000000                     _SSP2CON2bits	set	3802
   173   000000                     _RX4PPS	set	3605
   174   000000                     _SSP2CLKPPS	set	3612
   175   000000                     _SSP2DATPPS	set	3613
   176   000000                     _ANSELDbits	set	3751
   177   000000                     _SSP2ADD	set	3798
   178   000000                     _SSP2CON1bits	set	3801
   179   000000                     _LATAbits	set	3961
   180   000000                     _LATFbits	set	3966
   181   000000                     _LATGbits	set	3967
   182   000000                     _TRISAbits	set	3969
   183   000000                     _TRISGbits	set	3975
   184   000000                     _TRISHbits	set	3976
   185   000000                     _PORTFbits	set	3982
   186   000000                     _TMR0L	set	4051
   187   000000                     _TMR0H	set	4052
   188   000000                     _INTCONbits	set	4082
   189   000000                     _CCPR2H	set	4006
   190   000000                     _CCPR1H	set	4010
   191   000000                     _TRISCbits	set	3971
   192   000000                     _TRISDbits	set	3972
   193   000000                     _TRISFbits	set	3974
   194   000000                     _LATDbits	set	3964
   195   000000                     _RC4REG	set	3811
   196   000000                     _SP4BRGL	set	3813
   197   000000                     _TX4STAbits	set	3816
   198   000000                     _BAUD4CONbits	set	3817
   199   000000                     _SSP2CON2	set	3802
   200   000000                     _SSP2STAT	set	3800
   201   000000                     _ANSELFbits	set	3764
   202   000000                     _SSP2BUF	set	3797
   203   000000                     _PIE0bits	set	3625
   204   000000                     _PIR4bits	set	3639
   205   000000                     _RC0PPS	set	3682
   206   000000                     _RD5PPS	set	3695
   207   000000                     _RE2PPS	set	3700
   208   000000                     _RD6PPS	set	3696
   209   000000                     _RC7PPS	set	3689
   210   000000                     _CCPR4H	set	3873
   211   000000                     _CCPR3H	set	3877
   212   000000                     _PIR0bits	set	3635
   213   000000                     _T0CON1bits	set	4054
   214   000000                     _T0CON0bits	set	4053
   215   000000                     _CCP1CONbits	set	4011
   216   000000                     _CCPTMRS0bits	set	4013
   217   000000                     _T2PR	set	4028
   218   000000                     _T2CONbits	set	4029
   219   000000                     _CCP2CONbits	set	4007
   220   000000                     _CCP3CONbits	set	3878
   221   000000                     _CCP4CONbits	set	3874
   222   000000                     _RE4PPS	set	3702
   223   000000                     _RG6PPS	set	3720
   224   000000                     _T2CLKCONbits	set	4031
   225   000000                     _T2HLTbits	set	4030
   226                           
   227                           	psect	smallconst
   228   000E00                     __psmallconst:
   229                           	callstack 0
   230   000E00  00                 	db	0
   231   000E01                     STR_1:
   232                           
   233                           ; BSR set to: 14
   234   000E01  72                 	db	114	;'r'
   235   000E02  65                 	db	101	;'e'
   236   000E03  64                 	db	100	;'d'
   237   000E04  3D                 	db	61	;'='
   238   000E05  25                 	db	37
   239   000E06  66                 	db	102	;'f'
   240   000E07  20                 	db	32
   241   000E08  67                 	db	103	;'g'
   242   000E09  72                 	db	114	;'r'
   243   000E0A  65                 	db	101	;'e'
   244   000E0B  65                 	db	101	;'e'
   245   000E0C  6E                 	db	110	;'n'
   246   000E0D  3D                 	db	61	;'='
   247   000E0E  25                 	db	37
   248   000E0F  66                 	db	102	;'f'
   249   000E10  20                 	db	32
   250   000E11  62                 	db	98	;'b'
   251   000E12  6C                 	db	108	;'l'
   252   000E13  75                 	db	117	;'u'
   253   000E14  65                 	db	101	;'e'
   254   000E15  3D                 	db	61	;'='
   255   000E16  25                 	db	37
   256   000E17  66                 	db	102	;'f'
   257   000E18  20                 	db	32
   258   000E19  6C                 	db	108	;'l'
   259   000E1A  75                 	db	117	;'u'
   260   000E1B  6D                 	db	109	;'m'
   261   000E1C  3D                 	db	61	;'='
   262   000E1D  25                 	db	37
   263   000E1E  64                 	db	100	;'d'
   264   000E1F  20                 	db	32
   265   000E20  61                 	db	97	;'a'
   266   000E21  63                 	db	99	;'c'
   267   000E22  74                 	db	116	;'t'
   268   000E23  75                 	db	117	;'u'
   269   000E24  61                 	db	97	;'a'
   270   000E25  6C                 	db	108	;'l'
   271   000E26  5F                 	db	95	;'_'
   272   000E27  63                 	db	99	;'c'
   273   000E28  6F                 	db	111	;'o'
   274   000E29  6C                 	db	108	;'l'
   275   000E2A  6F                 	db	111	;'o'
   276   000E2B  75                 	db	117	;'u'
   277   000E2C  72                 	db	114	;'r'
   278   000E2D  3D                 	db	61	;'='
   279   000E2E  25                 	db	37
   280   000E2F  64                 	db	100	;'d'
   281   000E30  20                 	db	32
   282   000E31  0D                 	db	13
   283   000E32  0A                 	db	10
   284   000E33  00                 	db	0
   285   000E34                     STR_2:
   286                           
   287                           ; BSR set to: 14
   288   000E34  69                 	db	105	;'i'
   289   000E35  6E                 	db	110	;'n'
   290   000E36  66                 	db	102	;'f'
   291   000E37  00                 	db	0
   292   000E38                     STR_5:
   293                           
   294                           ; BSR set to: 14
   295   000E38  6E                 	db	110	;'n'
   296   000E39  61                 	db	97	;'a'
   297   000E3A  6E                 	db	110	;'n'
   298   000E3B  00                 	db	0
   299   000E3C  00                 	db	0	; dummy byte at the end
   300   000000                     
   301                           ; #config settings
   302                           
   303                           	psect	cinit
   304   0054C8                     __pcinit:
   305                           	callstack 0
   306   0054C8                     start_initialization:
   307                           	callstack 0
   308   0054C8                     __initialization:
   309                           	callstack 0
   310                           
   311                           ; Initialize objects allocated to BANK1 (4 bytes)
   312                           ; load TBLPTR registers with __pidataBANK1
   313   0054C8  0E14               	movlw	low __pidataBANK1
   314   0054CA  6EF6               	movwf	tblptrl,c
   315   0054CC  0E62               	movlw	high __pidataBANK1
   316   0054CE  6EF7               	movwf	tblptrh,c
   317   0054D0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   318   0054D2  6EF8               	movwf	tblptru,c
   319   0054D4  EE01  F0D8         	lfsr	0,__pdataBANK1
   320   0054D8  EE10 F004          	lfsr	1,4
   321   0054DC                     copy_data0:
   322   0054DC  0009               	tblrd		*+
   323   0054DE  CFF5 FFEE          	movff	tablat,postinc0
   324   0054E2  50E5               	movf	postdec1,w,c
   325   0054E4  50E1               	movf	fsr1l,w,c
   326   0054E6  E1FA               	bnz	copy_data0
   327                           
   328                           ; Initialize objects allocated to BANK0 (6 bytes)
   329                           ; load TBLPTR registers with __pidataBANK0
   330   0054E8  0E0E               	movlw	low __pidataBANK0
   331   0054EA  6EF6               	movwf	tblptrl,c
   332   0054EC  0E62               	movlw	high __pidataBANK0
   333   0054EE  6EF7               	movwf	tblptrh,c
   334   0054F0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   335   0054F2  6EF8               	movwf	tblptru,c
   336   0054F4  EE00  F0F2         	lfsr	0,__pdataBANK0
   337   0054F8  EE10 F006          	lfsr	1,6
   338   0054FC                     copy_data1:
   339   0054FC  0009               	tblrd		*+
   340   0054FE  CFF5 FFEE          	movff	tablat,postinc0
   341   005502  50E5               	movf	postdec1,w,c
   342   005504  50E1               	movf	fsr1l,w,c
   343   005506  E1FA               	bnz	copy_data1
   344                           
   345                           ; Clear objects allocated to BANK2 (240 bytes)
   346   005508  EE02  F000         	lfsr	0,__pbssBANK2
   347   00550C  0EF0               	movlw	240
   348   00550E                     clear_0:
   349   00550E  6AEE               	clrf	postinc0,c
   350   005510  06E8               	decf	wreg,f,c
   351   005512  E1FD               	bnz	clear_0
   352                           
   353                           ; Clear objects allocated to BANK1 (114 bytes)
   354   005514  EE01  F000         	lfsr	0,__pbssBANK1
   355   005518  0E72               	movlw	114
   356   00551A                     clear_1:
   357   00551A  6AEE               	clrf	postinc0,c
   358   00551C  06E8               	decf	wreg,f,c
   359   00551E  E1FD               	bnz	clear_1
   360                           
   361                           ; Clear objects allocated to BANK0 (31 bytes)
   362   005520  EE00  F0D3         	lfsr	0,__pbssBANK0
   363   005524  0E1F               	movlw	31
   364   005526                     clear_2:
   365   005526  6AEE               	clrf	postinc0,c
   366   005528  06E8               	decf	wreg,f,c
   367   00552A  E1FD               	bnz	clear_2
   368   00552C                     end_of_initialization:
   369                           	callstack 0
   370   00552C                     __end_of__initialization:
   371                           	callstack 0
   372   00552C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373   00552E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374   005530  0100               	movlb	0
   375   005532  EFE2  F01B         	goto	_main	;jump to C main() function
   376                           
   377                           	psect	bssBANK0
   378   0000D3                     __pbssBANK0:
   379                           	callstack 0
   380   0000D3                     	ds	12
   381   0000DF                     floorf@F526:
   382                           	callstack 0
   383   0000DF                     	ds	4
   384   0000E3                     ___fpclassifyf@F465:
   385                           	callstack 0
   386   0000E3                     	ds	4
   387   0000E7                     _width:
   388                           	callstack 0
   389   0000E7                     	ds	2
   390   0000E9                     _prec:
   391                           	callstack 0
   392   0000E9                     	ds	2
   393   0000EB                     _lost_count:
   394                           	callstack 0
   395   0000EB                     	ds	2
   396   0000ED                     _flags:
   397                           	callstack 0
   398   0000ED                     	ds	1
   399   0000EE                     _TxBufReadCnt:
   400                           	callstack 0
   401   0000EE                     	ds	1
   402   0000EF                     _TxBufWriteCnt:
   403                           	callstack 0
   404   0000EF                     	ds	1
   405   0000F0                     _RxBufReadCnt:
   406                           	callstack 0
   407   0000F0                     	ds	1
   408   0000F1                     _RxBufWriteCnt:
   409                           	callstack 0
   410   0000F1                     	ds	1
   411                           
   412                           	psect	dataBANK0
   413   0000F2                     __pdataBANK0:
   414                           	callstack 0
   415   0000F2                     _RunOneBlockTime:
   416                           	callstack 0
   417   0000F2                     	ds	2
   418   0000F4                     _Turn45Delay:
   419                           	callstack 0
   420   0000F4                     	ds	2
   421   0000F6                     _power:
   422                           	callstack 0
   423   0000F6                     	ds	2
   424                           
   425                           	psect	bssBANK1
   426   000100                     __pbssBANK1:
   427                           	callstack 0
   428   000100                     _EUSART4RXbuf:
   429                           	callstack 0
   430   000100                     	ds	20
   431   000114                     _lost_flag:
   432                           	callstack 0
   433   000114                     	ds	2
   434   000116                     _consecuitive:
   435                           	callstack 0
   436   000116                     	ds	2
   437   000118                     _prev_colour:
   438                           	callstack 0
   439   000118                     	ds	2
   440   00011A                     _WayBack:
   441                           	callstack 0
   442   00011A                     	ds	50
   443   00014C                     _rel:
   444                           	callstack 0
   445   00014C                     	ds	12
   446   000158                     _motorR:
   447                           	callstack 0
   448   000158                     	ds	9
   449   000161                     _motorL:
   450                           	callstack 0
   451   000161                     	ds	9
   452   00016A                     _vals:
   453                           	callstack 0
   454   00016A                     	ds	8
   455                           
   456                           	psect	dataBANK1
   457   0001D8                     __pdataBANK1:
   458                           	callstack 0
   459   0001D8                     _run_flag:
   460                           	callstack 0
   461   0001D8                     	ds	2
   462   0001DA                     _move_count:
   463                           	callstack 0
   464   0001DA                     	ds	2
   465                           
   466                           	psect	bssBANK2
   467   000200                     __pbssBANK2:
   468                           	callstack 0
   469   000200                     _EUSART4TXbuf:
   470                           	callstack 0
   471   000200                     	ds	60
   472   00023C                     _Time_forward:
   473                           	callstack 0
   474   00023C                     	ds	100
   475   0002A0                     _dbuf:
   476                           	callstack 0
   477   0002A0                     	ds	80
   478                           
   479                           	psect	cstackBANK1
   480   000172                     __pcstackBANK1:
   481                           	callstack 0
   482   000172                     main@buf:
   483                           	callstack 0
   484                           
   485                           ; 100 bytes @ 0x0
   486   000172                     	ds	100
   487   0001D6                     main@colour:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x64
   491   0001D6                     	ds	2
   492                           
   493                           	psect	cstackBANK0
   494   000060                     __pcstackBANK0:
   495                           	callstack 0
   496   000060                     efgtoa@fp:
   497                           	callstack 0
   498   000060                     colour_rel@L:
   499                           	callstack 0
   500   000060                     _Colour_decider$3281:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x0
   504   000060                     	ds	2
   505   000062                     efgtoa@f:
   506                           	callstack 0
   507                           
   508                           ; 4 bytes @ 0x2
   509   000062                     	ds	2
   510   000064                     Colour_decider@Cmax_i:
   511                           	callstack 0
   512   000064                     _colour_rel$3279:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x4
   516   000064                     	ds	2
   517   000066                     efgtoa@c:
   518                           	callstack 0
   519   000066                     Colour_decider@RGB_col:
   520                           	callstack 0
   521                           
   522                           ; 12 bytes @ 0x6
   523   000066                     	ds	1
   524   000067                     ??_efgtoa:
   525                           
   526                           ; 1 bytes @ 0x7
   527   000067                     	ds	1
   528   000068                     _colour_rel$3280:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x8
   532   000068                     	ds	1
   533   000069                     efgtoa@ne:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x9
   537   000069                     	ds	2
   538   00006B                     efgtoa@p:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0xB
   542   00006B                     	ds	1
   543   00006C                     colour_rel@R:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0xC
   547   00006C                     	ds	1
   548   00006D                     efgtoa@t:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0xD
   552   00006D                     	ds	2
   553   00006F                     _efgtoa$2902:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0xF
   557   00006F                     	ds	1
   558   000070                     colour_rel@G:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x10
   562   000070                     	ds	1
   563   000071                     efgtoa@pp:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x11
   567   000071                     	ds	1
   568   000072                     efgtoa@mode:
   569                           	callstack 0
   570   000072                     Colour_decider@Cmax:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x12
   574   000072                     	ds	1
   575   000073                     efgtoa@nmode:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x13
   579   000073                     	ds	1
   580   000074                     efgtoa@d:
   581                           	callstack 0
   582   000074                     colour_rel@B:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x14
   586   000074                     	ds	2
   587   000076                     efgtoa@m:
   588                           	callstack 0
   589   000076                     Colour_decider@Cmin:
   590                           	callstack 0
   591                           
   592                           ; 4 bytes @ 0x16
   593   000076                     	ds	2
   594   000078                     efgtoa@e:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x18
   598   000078                     	ds	2
   599   00007A                     Colour_decider@i:
   600                           	callstack 0
   601   00007A                     efgtoa@w:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x1A
   605   00007A                     	ds	2
   606   00007C                     Colour_decider@Hue:
   607                           	callstack 0
   608   00007C                     efgtoa@ou:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x1C
   612   00007C                     	ds	4
   613   000080                     efgtoa@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x20
   617   000080                     	ds	2
   618   000082                     efgtoa@h:
   619                           	callstack 0
   620                           
   621                           ; 4 bytes @ 0x22
   622   000082                     	ds	4
   623   000086                     efgtoa@l:
   624                           	callstack 0
   625                           
   626                           ; 4 bytes @ 0x26
   627   000086                     	ds	4
   628   00008A                     efgtoa@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x2A
   632   00008A                     	ds	1
   633   00008B                     efgtoa@n:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x2B
   637   00008B                     	ds	2
   638   00008D                     efgtoa@g:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x2D
   642   00008D                     	ds	4
   643   000091                     efgtoa@u:
   644                           	callstack 0
   645                           
   646                           ; 4 bytes @ 0x31
   647   000091                     	ds	4
   648   000095                     vfpfcnvrt@fp:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x35
   652   000095                     	ds	2
   653   000097                     vfpfcnvrt@fmt:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x37
   657   000097                     	ds	2
   658   000099                     vfpfcnvrt@ap:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x39
   662   000099                     	ds	2
   663   00009B                     ??_vfpfcnvrt:
   664                           
   665                           ; 1 bytes @ 0x3B
   666   00009B                     	ds	2
   667   00009D                     vfpfcnvrt@convarg:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x3D
   671   00009D                     	ds	8
   672   0000A5                     vfpfcnvrt@c:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x45
   676   0000A5                     	ds	1
   677   0000A6                     vfpfcnvrt@cp:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x46
   681   0000A6                     	ds	2
   682   0000A8                     ?_vfprintf:
   683                           	callstack 0
   684   0000A8                     vfprintf@fp:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x48
   688   0000A8                     	ds	2
   689   0000AA                     vfprintf@fmt:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x4A
   693   0000AA                     	ds	2
   694   0000AC                     vfprintf@ap:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x4C
   698   0000AC                     	ds	2
   699   0000AE                     vfprintf@cfmt:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x4E
   703   0000AE                     	ds	2
   704   0000B0                     ?_sprintf:
   705                           	callstack 0
   706   0000B0                     sprintf@s:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x50
   710   0000B0                     	ds	2
   711   0000B2                     sprintf@fmt:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x52
   715   0000B2                     	ds	18
   716   0000C4                     sprintf@ap:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x64
   720   0000C4                     	ds	2
   721   0000C6                     sprintf@f:
   722                           	callstack 0
   723                           
   724                           ; 11 bytes @ 0x66
   725   0000C6                     	ds	11
   726   0000D1                     ??_main:
   727                           
   728                           ; 1 bytes @ 0x71
   729   0000D1                     	ds	2
   730                           
   731                           	psect	cstackCOMRAM
   732   000001                     __pcstackCOMRAM:
   733                           	callstack 0
   734   000001                     ??_getTMR0val:
   735   000001                     ??_I2C_2_Master_Idle:
   736   000001                     ?___fpclassifyf:
   737                           	callstack 0
   738   000001                     ?___wmul:
   739                           	callstack 0
   740   000001                     ?___fladd:
   741                           	callstack 0
   742   000001                     ?_labs:
   743                           	callstack 0
   744   000001                     ?___flneg:
   745                           	callstack 0
   746   000001                     ?___fltol:
   747                           	callstack 0
   748   000001                     ?___xxtofl:
   749                           	callstack 0
   750   000001                     ?___aodiv:
   751                           	callstack 0
   752   000001                     ?___aomod:
   753                           	callstack 0
   754   000001                     sendCharSerial4@charToSend:
   755                           	callstack 0
   756   000001                     initDCmotorsPWM@PWMperiod:
   757                           	callstack 0
   758   000001                     TurnDelay@Turn45Delay:
   759                           	callstack 0
   760   000001                     delayed_ms@time:
   761                           	callstack 0
   762   000001                     ___wmul@multiplier:
   763                           	callstack 0
   764   000001                     memcpy@d1:
   765                           	callstack 0
   766   000001                     fputc@c:
   767                           	callstack 0
   768   000001                     strcpy@dest:
   769                           	callstack 0
   770   000001                     ___flneg@f1:
   771                           	callstack 0
   772   000001                     ___fltol@f1:
   773                           	callstack 0
   774   000001                     ___fladd@b:
   775                           	callstack 0
   776   000001                     ___xxtofl@val:
   777                           	callstack 0
   778   000001                     ___fpclassifyf@x:
   779                           	callstack 0
   780   000001                     labs@a:
   781                           	callstack 0
   782   000001                     ___aodiv@dividend:
   783                           	callstack 0
   784   000001                     ___aomod@dividend:
   785                           	callstack 0
   786                           
   787                           ; 8 bytes @ 0x0
   788   000001                     	ds	1
   789   000002                     ??_I2C_2_Master_Read:
   790   000002                     I2C_2_Master_Write@data_byte:
   791                           	callstack 0
   792   000002                     sendStringSerial4@string:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x1
   796   000002                     	ds	1
   797   000003                     ??_delayed_ms:
   798   000003                     ??_TurnDelay:
   799   000003                     color_writetoaddr@value:
   800                           	callstack 0
   801   000003                     I2C_2_Master_Read@ack:
   802                           	callstack 0
   803   000003                     getTMR0val@temp:
   804                           	callstack 0
   805   000003                     ___wmul@multiplicand:
   806                           	callstack 0
   807   000003                     memcpy@s1:
   808                           	callstack 0
   809   000003                     fputc@fp:
   810                           	callstack 0
   811   000003                     strcpy@src:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x2
   815   000003                     	ds	1
   816   000004                     color_writetoaddr@address:
   817                           	callstack 0
   818   000004                     I2C_2_Master_Read@tmp:
   819                           	callstack 0
   820   000004                     delayed_ms@i:
   821                           	callstack 0
   822                           
   823                           ; 2 bytes @ 0x3
   824   000004                     	ds	1
   825   000005                     ??_fputc:
   826   000005                     ??___fpclassifyf:
   827   000005                     ??_labs:
   828   000005                     ??_color_click_init:
   829   000005                     ??___fltol:
   830   000005                     ??___xxtofl:
   831   000005                     ?_color_read_lum:
   832                           	callstack 0
   833   000005                     ?_color_read_Red:
   834                           	callstack 0
   835   000005                     ?_color_read_Green:
   836                           	callstack 0
   837   000005                     ?_color_read_Blue:
   838                           	callstack 0
   839   000005                     getTMR0val@moving:
   840                           	callstack 0
   841   000005                     ___wmul@product:
   842                           	callstack 0
   843   000005                     memcpy@n:
   844                           	callstack 0
   845   000005                     strcpy@s:
   846                           	callstack 0
   847   000005                     ___fladd@a:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x4
   851   000005                     	ds	2
   852   000007                     ??_color_read_lum:
   853   000007                     ??_color_read_Red:
   854   000007                     ??_color_read_Green:
   855   000007                     ??_color_read_Blue:
   856   000007                     ?___lwdiv:
   857                           	callstack 0
   858   000007                     ___lwdiv@dividend:
   859                           	callstack 0
   860   000007                     memcpy@d:
   861                           	callstack 0
   862   000007                     strcpy@d:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x6
   866   000007                     	ds	2
   867   000009                     ??___fladd:
   868   000009                     ___fltol@sign1:
   869                           	callstack 0
   870   000009                     ___xxtofl@sign:
   871                           	callstack 0
   872   000009                     ___lwdiv@divisor:
   873                           	callstack 0
   874   000009                     ___fpclassifyf@e:
   875                           	callstack 0
   876   000009                     memcpy@s:
   877                           	callstack 0
   878   000009                     ___aodiv@divisor:
   879                           	callstack 0
   880   000009                     ___aomod@divisor:
   881                           	callstack 0
   882                           
   883                           ; 8 bytes @ 0x8
   884   000009                     	ds	1
   885   00000A                     ___fltol@exp1:
   886                           	callstack 0
   887   00000A                     ___xxtofl@exp:
   888                           	callstack 0
   889   00000A                     color_read_lum@tmp:
   890                           	callstack 0
   891   00000A                     color_read_Red@tmp:
   892                           	callstack 0
   893   00000A                     color_read_Green@tmp:
   894                           	callstack 0
   895   00000A                     color_read_Blue@tmp:
   896                           	callstack 0
   897   00000A                     fputs@s:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x9
   901   00000A                     	ds	1
   902   00000B                     memcpy@tmp:
   903                           	callstack 0
   904   00000B                     ___lwdiv@quotient:
   905                           	callstack 0
   906   00000B                     ___xxtofl@arg:
   907                           	callstack 0
   908   00000B                     ___fpclassifyf@u:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0xA
   912   00000B                     	ds	1
   913   00000C                     readColours@vals:
   914                           	callstack 0
   915   00000C                     fputs@fp:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xB
   919   00000C                     	ds	1
   920   00000D                     ___lwdiv@counter:
   921                           	callstack 0
   922   00000D                     ___fladd@signs:
   923                           	callstack 0
   924                           
   925                           ; 1 bytes @ 0xC
   926   00000D                     	ds	1
   927   00000E                     ___fladd@aexp:
   928                           	callstack 0
   929   00000E                     fputs@c:
   930                           	callstack 0
   931   00000E                     setMotorPWM@m:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xD
   935   00000E                     	ds	1
   936   00000F                     ___fladd@bexp:
   937                           	callstack 0
   938   00000F                     fputs@i:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0xE
   942   00000F                     	ds	1
   943   000010                     ??_setMotorPWM:
   944   000010                     ___fladd@grs:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0xF
   948   000010                     	ds	1
   949   000011                     ?___flmul:
   950                           	callstack 0
   951   000011                     ___aodiv@counter:
   952                           	callstack 0
   953   000011                     ___aomod@counter:
   954                           	callstack 0
   955   000011                     pad@fp:
   956                           	callstack 0
   957   000011                     ___flmul@b:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x10
   961   000011                     	ds	1
   962   000012                     setMotorPWM@posDuty:
   963                           	callstack 0
   964   000012                     ___aodiv@sign:
   965                           	callstack 0
   966   000012                     ___aomod@sign:
   967                           	callstack 0
   968                           
   969                           ; 1 bytes @ 0x11
   970   000012                     	ds	1
   971   000013                     ?_abs:
   972                           	callstack 0
   973   000013                     setMotorPWM@negDuty:
   974                           	callstack 0
   975   000013                     pad@buf:
   976                           	callstack 0
   977   000013                     abs@a:
   978                           	callstack 0
   979   000013                     ___aodiv@quotient:
   980                           	callstack 0
   981                           
   982                           ; 8 bytes @ 0x12
   983   000013                     	ds	1
   984   000014                     stop@mL:
   985                           	callstack 0
   986   000014                     turnLeft@mL:
   987                           	callstack 0
   988   000014                     turnRight@mL:
   989                           	callstack 0
   990   000014                     fullSpeedAhead@mL:
   991                           	callstack 0
   992   000014                     timed_forward@mL:
   993                           	callstack 0
   994   000014                     fullSpeedBack@mL:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x13
   998   000014                     	ds	1
   999   000015                     ??_abs:
  1000   000015                     pad@p:
  1001                           	callstack 0
  1002   000015                     ___flmul@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x14
  1006   000015                     	ds	1
  1007   000016                     stop@mR:
  1008                           	callstack 0
  1009   000016                     turnLeft@mR:
  1010                           	callstack 0
  1011   000016                     turnRight@mR:
  1012                           	callstack 0
  1013   000016                     fullSpeedAhead@mR:
  1014                           	callstack 0
  1015   000016                     timed_forward@mR:
  1016                           	callstack 0
  1017   000016                     fullSpeedBack@mR:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x15
  1021   000016                     	ds	1
  1022   000017                     ??_pad:
  1023                           
  1024                           ; 1 bytes @ 0x16
  1025   000017                     	ds	1
  1026   000018                     ??_fullSpeedAhead:
  1027   000018                     ??_stop:
  1028   000018                     ??_turnLeft:
  1029   000018                     ??_turnRight:
  1030   000018                     ??_fullSpeedBack:
  1031   000018                     timed_forward@time:
  1032                           	callstack 0
  1033   000018                     pad@i:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x17
  1037   000018                     	ds	1
  1038   000019                     ??___flmul:
  1039                           
  1040                           ; 1 bytes @ 0x18
  1041   000019                     	ds	1
  1042   00001A                     ??_timed_forward:
  1043   00001A                     turnRight45@mL:
  1044                           	callstack 0
  1045   00001A                     turnLeft45@mL:
  1046                           	callstack 0
  1047   00001A                     reverseDetect@mL:
  1048                           	callstack 0
  1049   00001A                     reverseOneBlock@mL:
  1050                           	callstack 0
  1051   00001A                     ForwardOneBlock@mL:
  1052                           	callstack 0
  1053   00001A                     Forwardhalfblock@mL:
  1054                           	callstack 0
  1055   00001A                     quaterForward@mL:
  1056                           	callstack 0
  1057   00001A                     Backhalfblock@mL:
  1058                           	callstack 0
  1059   00001A                     pad@w:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x19
  1063   00001A                     	ds	2
  1064   00001C                     turnRight45@mR:
  1065                           	callstack 0
  1066   00001C                     turnLeft45@mR:
  1067                           	callstack 0
  1068   00001C                     reverseDetect@mR:
  1069                           	callstack 0
  1070   00001C                     reverseOneBlock@mR:
  1071                           	callstack 0
  1072   00001C                     ForwardOneBlock@mR:
  1073                           	callstack 0
  1074   00001C                     Forwardhalfblock@mR:
  1075                           	callstack 0
  1076   00001C                     quaterForward@mR:
  1077                           	callstack 0
  1078   00001C                     Backhalfblock@mR:
  1079                           	callstack 0
  1080   00001C                     dtoa@fp:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x1B
  1084   00001C                     	ds	1
  1085   00001D                     ___flmul@sign:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x1C
  1089   00001D                     	ds	1
  1090   00001E                     ??_Forwardhalfblock:
  1091   00001E                     ??_turnRight45:
  1092   00001E                     ??_turnLeft45:
  1093   00001E                     ??_reverseDetect:
  1094   00001E                     ??_reverseOneBlock:
  1095   00001E                     ??_ForwardOneBlock:
  1096   00001E                     ??_quaterForward:
  1097   00001E                     ??_Backhalfblock:
  1098   00001E                     ___flmul@grs:
  1099                           	callstack 0
  1100   00001E                     dtoa@d:
  1101                           	callstack 0
  1102                           
  1103                           ; 8 bytes @ 0x1D
  1104   00001E                     	ds	2
  1105   000020                     RedMove@mL:
  1106                           	callstack 0
  1107   000020                     GreenMove@mL:
  1108                           	callstack 0
  1109   000020                     BlueMove@mL:
  1110                           	callstack 0
  1111   000020                     YellowMove@mL:
  1112                           	callstack 0
  1113   000020                     PinkMove@mL:
  1114                           	callstack 0
  1115   000020                     OrangeMove@mL:
  1116                           	callstack 0
  1117   000020                     LightBlueMove@mL:
  1118                           	callstack 0
  1119   000020                     RetryMove@mL:
  1120                           	callstack 0
  1121   000020                     ReverseYellow@mL:
  1122                           	callstack 0
  1123   000020                     ReversePink@mL:
  1124                           	callstack 0
  1125   000020                     ReverseOrangeMove@mL:
  1126                           	callstack 0
  1127   000020                     ReverseLightBlueMove@mL:
  1128                           	callstack 0
  1129   000020                     turnCalibration@mL:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x1F
  1133   000020                     	ds	2
  1134   000022                     ___flmul@aexp:
  1135                           	callstack 0
  1136   000022                     RedMove@mR:
  1137                           	callstack 0
  1138   000022                     GreenMove@mR:
  1139                           	callstack 0
  1140   000022                     BlueMove@mR:
  1141                           	callstack 0
  1142   000022                     YellowMove@mR:
  1143                           	callstack 0
  1144   000022                     PinkMove@mR:
  1145                           	callstack 0
  1146   000022                     OrangeMove@mR:
  1147                           	callstack 0
  1148   000022                     LightBlueMove@mR:
  1149                           	callstack 0
  1150   000022                     RetryMove@mR:
  1151                           	callstack 0
  1152   000022                     ReverseYellow@mR:
  1153                           	callstack 0
  1154   000022                     ReversePink@mR:
  1155                           	callstack 0
  1156   000022                     ReverseOrangeMove@mR:
  1157                           	callstack 0
  1158   000022                     ReverseLightBlueMove@mR:
  1159                           	callstack 0
  1160   000022                     turnCalibration@mR:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x21
  1164   000022                     	ds	1
  1165   000023                     ___flmul@bexp:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x22
  1169   000023                     	ds	1
  1170   000024                     ??_turnCalibration:
  1171   000024                     ??_RetryMove:
  1172   000024                     go_Home@WayBack:
  1173                           	callstack 0
  1174   000024                     ___flmul@prod:
  1175                           	callstack 0
  1176                           
  1177                           ; 4 bytes @ 0x23
  1178   000024                     	ds	2
  1179   000026                     ??_dtoa:
  1180   000026                     go_Home@Time_forward:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x25
  1184   000026                     	ds	2
  1185   000028                     ??_go_Home:
  1186   000028                     ___flmul@temp:
  1187                           	callstack 0
  1188                           
  1189                           ; 2 bytes @ 0x27
  1190   000028                     	ds	2
  1191   00002A                     ?___flsub:
  1192                           	callstack 0
  1193   00002A                     ___flge@ff1:
  1194                           	callstack 0
  1195   00002A                     ___flsub@b:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x29
  1199   00002A                     	ds	1
  1200   00002B                     go_Home@i:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x2A
  1204   00002B                     	ds	2
  1205   00002D                     colour_move@recognized_colour:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x2C
  1209   00002D                     	ds	1
  1210   00002E                     _dtoa$2871:
  1211                           	callstack 0
  1212   00002E                     ___flge@ff2:
  1213                           	callstack 0
  1214   00002E                     ___flsub@a:
  1215                           	callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x2D
  1218   00002E                     	ds	1
  1219   00002F                     
  1220                           ; 1 bytes @ 0x2E
  1221   00002F                     	ds	1
  1222   000030                     dtoa@p:
  1223                           	callstack 0
  1224                           
  1225                           ; 2 bytes @ 0x2F
  1226   000030                     	ds	2
  1227   000032                     ??___flge:
  1228   000032                     ?___fldiv:
  1229                           	callstack 0
  1230   000032                     dtoa@w:
  1231                           	callstack 0
  1232   000032                     ___fleq@ff1:
  1233                           	callstack 0
  1234   000032                     ___fldiv@b:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x31
  1238   000032                     	ds	2
  1239   000034                     dtoa@n:
  1240                           	callstack 0
  1241                           
  1242                           ; 8 bytes @ 0x33
  1243   000034                     	ds	2
  1244   000036                     ___fleq@ff2:
  1245                           	callstack 0
  1246   000036                     ___fldiv@a:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x35
  1250   000036                     	ds	4
  1251   00003A                     ??___fldiv:
  1252   00003A                     ??___fleq:
  1253                           
  1254                           ; 1 bytes @ 0x39
  1255   00003A                     	ds	2
  1256   00003C                     dtoa@i:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x3B
  1260   00003C                     	ds	2
  1261   00003E                     dtoa@s:
  1262                           	callstack 0
  1263   00003E                     ___fldiv@rem:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x3D
  1267   00003E                     	ds	4
  1268   000042                     ___fldiv@sign:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x41
  1272   000042                     	ds	1
  1273   000043                     ___fldiv@new_exp:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x42
  1277   000043                     	ds	2
  1278   000045                     ___fldiv@grs:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x44
  1282   000045                     	ds	4
  1283   000049                     ___fldiv@bexp:
  1284                           	callstack 0
  1285                           
  1286                           ; 1 bytes @ 0x48
  1287   000049                     	ds	1
  1288   00004A                     ___fldiv@aexp:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x49
  1292   00004A                     	ds	1
  1293   00004B                     ?_Colour_decider:
  1294                           	callstack 0
  1295   00004B                     ?_floorf:
  1296                           	callstack 0
  1297   00004B                     colour_rel@vals:
  1298                           	callstack 0
  1299   00004B                     Colour_decider@vals:
  1300                           	callstack 0
  1301   00004B                     floorf@x:
  1302                           	callstack 0
  1303                           
  1304                           ; 4 bytes @ 0x4A
  1305   00004B                     	ds	2
  1306   00004D                     colour_rel@rel:
  1307                           	callstack 0
  1308   00004D                     Colour_decider@rel:
  1309                           	callstack 0
  1310                           
  1311                           ; 2 bytes @ 0x4C
  1312   00004D                     	ds	2
  1313   00004F                     ??_floorf:
  1314   00004F                     ??_Colour_decider:
  1315                           
  1316                           ; 1 bytes @ 0x4E
  1317   00004F                     	ds	6
  1318   000055                     floorf@m:
  1319                           	callstack 0
  1320                           
  1321                           ; 4 bytes @ 0x54
  1322   000055                     	ds	4
  1323   000059                     floorf@e:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x58
  1327   000059                     	ds	2
  1328   00005B                     floorf@u:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x5A
  1332   00005B                     	ds	4
  1333   00005F                     
  1334                           ; 1 bytes @ 0x5E
  1335 ;;
  1336 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1337 ;;
  1338 ;; *************** function _main *****************
  1339 ;; Defined at:
  1340 ;;		line 33 in file "main.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;		None
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  colour          2  100[BANK1 ] int 
  1345 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;Total ram usage:      104 bytes
  1360 ;; Hardware stack levels required when called: 9
  1361 ;; This function calls:
  1362 ;;		_Buttons_init
  1363 ;;		_Colour_decider
  1364 ;;		_Forwardhalfblock
  1365 ;;		_I2C_2_Master_Init
  1366 ;;		_Interrupts_init
  1367 ;;		_LED_init
  1368 ;;		_Timer0_init
  1369 ;;		_color_click_init
  1370 ;;		_colour_move
  1371 ;;		_colour_rel
  1372 ;;		_fullSpeedAhead
  1373 ;;		_getTMR0val
  1374 ;;		_go_Home
  1375 ;;		_initDCmotorsPWM
  1376 ;;		_initUSART4
  1377 ;;		_readColours
  1378 ;;		_sendStringSerial4
  1379 ;;		_sprintf
  1380 ;;		_turnCalibration
  1381 ;; This function is called by:
  1382 ;;		Startup code after reset
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text0
  1387   0037C4                     __ptext0:
  1388                           	callstack 0
  1389   0037C4                     _main:
  1390                           	callstack 22
  1391   0037C4                     
  1392                           ;main.c: 34:     initUSART4();
  1393   0037C4  ECCB  F030         	call	_initUSART4	;wreg free
  1394   0037C8                     
  1395                           ;main.c: 35:     Interrupts_init();
  1396   0037C8  ECEC  F030         	call	_Interrupts_init	;wreg free
  1397   0037CC                     
  1398                           ;main.c: 36:     color_click_init();
  1399   0037CC  ECCC  F02D         	call	_color_click_init	;wreg free
  1400   0037D0                     
  1401                           ;main.c: 37:     I2C_2_Master_Init();
  1402   0037D0  EC5C  F030         	call	_I2C_2_Master_Init	;wreg free
  1403   0037D4                     
  1404                           ;main.c: 38:     LED_init();
  1405   0037D4  EC85  F030         	call	_LED_init	;wreg free
  1406   0037D8                     
  1407                           ;main.c: 39:     Buttons_init();
  1408   0037D8  ECF2  F030         	call	_Buttons_init	;wreg free
  1409   0037DC                     
  1410                           ;main.c: 40:     initDCmotorsPWM(200);
  1411   0037DC  0E00               	movlw	0
  1412   0037DE  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1413   0037E0  0EC8               	movlw	200
  1414   0037E2  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1415   0037E4  EC2D  F029         	call	_initDCmotorsPWM	;wreg free
  1416   0037E8                     
  1417                           ;main.c: 41:     Timer0_init();
  1418   0037E8  ECBB  F030         	call	_Timer0_init	;wreg free
  1419   0037EC                     
  1420                           ;main.c: 43:     motorL.power=0;
  1421   0037EC  0E00               	movlw	0
  1422   0037EE  0101               	movlb	1	; () banked
  1423   0037F0  6F61               	movwf	_motorL& (0+255),b
  1424   0037F2                     
  1425                           ; BSR set to: 1
  1426                           ;main.c: 44:     motorL.direction=1;
  1427   0037F2  0E01               	movlw	1
  1428   0037F4  6F62               	movwf	(_motorL+1)& (0+255),b
  1429   0037F6                     
  1430                           ; BSR set to: 1
  1431                           ;main.c: 45:     motorL.brakemode=1;
  1432   0037F6  0E01               	movlw	1
  1433   0037F8  6F63               	movwf	(_motorL+2)& (0+255),b
  1434   0037FA                     
  1435                           ; BSR set to: 1
  1436                           ;main.c: 46:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1437   0037FA  0EAA               	movlw	170
  1438   0037FC  6F66               	movwf	(_motorL+5)& (0+255),b
  1439   0037FE  0E0F               	movlw	15
  1440   003800  6F67               	movwf	(_motorL+6)& (0+255),b
  1441   003802                     
  1442                           ; BSR set to: 1
  1443                           ;main.c: 47:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1444   003802  0EA6               	movlw	166
  1445   003804  6F68               	movwf	(_motorL+7)& (0+255),b
  1446   003806  0E0F               	movlw	15
  1447   003808  6F69               	movwf	(_motorL+8)& (0+255),b
  1448   00380A                     
  1449                           ; BSR set to: 1
  1450                           ;main.c: 48:     motorL.PWMperiod=200;
  1451   00380A  0E00               	movlw	0
  1452   00380C  6F65               	movwf	(_motorL+4)& (0+255),b
  1453   00380E  0EC8               	movlw	200
  1454   003810  6F64               	movwf	(_motorL+3)& (0+255),b
  1455   003812                     
  1456                           ; BSR set to: 1
  1457                           ;main.c: 49:     motorR.power=0;
  1458   003812  0E00               	movlw	0
  1459   003814  6F58               	movwf	_motorR& (0+255),b
  1460   003816                     
  1461                           ; BSR set to: 1
  1462                           ;main.c: 50:     motorR.direction=1;
  1463   003816  0E01               	movlw	1
  1464   003818  6F59               	movwf	(_motorR+1)& (0+255),b
  1465   00381A                     
  1466                           ; BSR set to: 1
  1467                           ;main.c: 51:     motorR.brakemode=1;
  1468   00381A  0E01               	movlw	1
  1469   00381C  6F5A               	movwf	(_motorR+2)& (0+255),b
  1470   00381E                     
  1471                           ; BSR set to: 1
  1472                           ;main.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1473   00381E  0E25               	movlw	37
  1474   003820  6F5D               	movwf	(_motorR+5)& (0+255),b
  1475   003822  0E0F               	movlw	15
  1476   003824  6F5E               	movwf	(_motorR+6)& (0+255),b
  1477   003826                     
  1478                           ; BSR set to: 1
  1479                           ;main.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1480   003826  0E21               	movlw	33
  1481   003828  6F5F               	movwf	(_motorR+7)& (0+255),b
  1482   00382A  0E0F               	movlw	15
  1483   00382C  6F60               	movwf	(_motorR+8)& (0+255),b
  1484   00382E                     
  1485                           ; BSR set to: 1
  1486                           ;main.c: 54:     motorR.PWMperiod=200;
  1487   00382E  0E00               	movlw	0
  1488   003830  6F5C               	movwf	(_motorR+4)& (0+255),b
  1489   003832  0EC8               	movlw	200
  1490   003834  6F5B               	movwf	(_motorR+3)& (0+255),b
  1491   003836                     
  1492                           ; BSR set to: 1
  1493                           ;main.c: 56:     char buf[100];;main.c: 59:     turnCalibration(&motorL,&motorR);
  1494   003836  0E61               	movlw	low _motorL
  1495   003838  6E20               	movwf	turnCalibration@mL^0,c
  1496   00383A  0E01               	movlw	high _motorL
  1497   00383C  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1498   00383E  0E58               	movlw	low _motorR
  1499   003840  6E22               	movwf	turnCalibration@mR^0,c
  1500   003842  0E01               	movlw	high _motorR
  1501   003844  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1502   003846  ECA6  F021         	call	_turnCalibration	;wreg free
  1503   00384A                     
  1504                           ;main.c: 61:     LATFbits.LATF0=0;
  1505   00384A  907E               	bcf	126,0,c	;volatile
  1506   00384C                     
  1507                           ;main.c: 62:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1508   00384C  0E52               	movlw	82
  1509   00384E  0100               	movlb	0	; () banked
  1510   003850  6FD2               	movwf	(??_main+1)& (0+255),b
  1511   003852  0E2B               	movlw	43
  1512   003854  6FD1               	movwf	??_main& (0+255),b
  1513   003856  0E00               	movlw	0
  1514   003858                     u5827:
  1515   003858  2EE8               	decfsz	wreg,f,c
  1516   00385A  D7FE               	bra	u5827
  1517   00385C  2FD1               	decfsz	??_main& (0+255),f,b
  1518   00385E  D7FC               	bra	u5827
  1519   003860  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1520   003862  D7FA               	bra	u5827
  1521   003864  F000               	nop	
  1522   003866                     l330:
  1523   003866  B48E               	btfsc	142,2,c	;volatile
  1524   003868  EF38  F01C         	goto	u5691
  1525   00386C  EF3A  F01C         	goto	u5690
  1526   003870                     u5691:
  1527   003870  EF33  F01C         	goto	l330
  1528   003874                     u5690:
  1529   003874                     
  1530                           ;main.c: 66:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1531   003874  0E52               	movlw	82
  1532   003876  0100               	movlb	0	; () banked
  1533   003878  6FD2               	movwf	(??_main+1)& (0+255),b
  1534   00387A  0E2B               	movlw	43
  1535   00387C  6FD1               	movwf	??_main& (0+255),b
  1536   00387E  0E00               	movlw	0
  1537   003880                     u5837:
  1538   003880  2EE8               	decfsz	wreg,f,c
  1539   003882  D7FE               	bra	u5837
  1540   003884  2FD1               	decfsz	??_main& (0+255),f,b
  1541   003886  D7FC               	bra	u5837
  1542   003888  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1543   00388A  D7FA               	bra	u5837
  1544   00388C  F000               	nop	
  1545   00388E                     
  1546                           ;main.c: 68:     T0CON0bits.T0EN=1;
  1547   00388E  8ED5               	bsf	213,7,c	;volatile
  1548                           
  1549                           ;main.c: 69:     while (run_flag)
  1550   003890  EF3C  F01D         	goto	l5910
  1551   003894                     l5858:
  1552                           
  1553                           ; BSR set to: 1
  1554                           ;main.c: 70:     {;main.c: 71:         consecuitive=0;
  1555   003894  0E00               	movlw	0
  1556   003896  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1557   003898  0E00               	movlw	0
  1558   00389A  6F16               	movwf	_consecuitive& (0+255),b
  1559   00389C                     
  1560                           ; BSR set to: 1
  1561                           ;main.c: 73:         fullSpeedAhead(&motorL,&motorR);
  1562   00389C  0E61               	movlw	low _motorL
  1563   00389E  6E14               	movwf	fullSpeedAhead@mL^0,c
  1564   0038A0  0E01               	movlw	high _motorL
  1565   0038A2  6E15               	movwf	(fullSpeedAhead@mL+1)^0,c
  1566   0038A4  0E58               	movlw	low _motorR
  1567   0038A6  6E16               	movwf	fullSpeedAhead@mR^0,c
  1568   0038A8  0E01               	movlw	high _motorR
  1569   0038AA  6E17               	movwf	(fullSpeedAhead@mR+1)^0,c
  1570   0038AC  ECDE  F028         	call	_fullSpeedAhead	;wreg free
  1571   0038B0                     
  1572                           ;main.c: 75:         readColours(&vals);
  1573   0038B0  0E6A               	movlw	low _vals
  1574   0038B2  6E0C               	movwf	readColours@vals^0,c
  1575   0038B4  0E01               	movlw	high _vals
  1576   0038B6  6E0D               	movwf	(readColours@vals+1)^0,c
  1577   0038B8  EC9A  F02B         	call	_readColours	;wreg free
  1578   0038BC                     
  1579                           ;main.c: 80:         if (vals.L>=500){
  1580   0038BC  0101               	movlb	1	; () banked
  1581   0038BE  BF71               	btfsc	(_vals+7)& (0+255),7,b
  1582   0038C0  EF6B  F01C         	goto	u5701
  1583   0038C4  0EF4               	movlw	244
  1584   0038C6  5D70               	subwf	(_vals+6)& (0+255),w,b
  1585   0038C8  0E01               	movlw	1
  1586   0038CA  5971               	subwfb	(_vals+7)& (0+255),w,b
  1587   0038CC  A0D8               	btfss	status,0,c
  1588   0038CE  EF6B  F01C         	goto	u5701
  1589   0038D2  EF6D  F01C         	goto	u5700
  1590   0038D6                     u5701:
  1591   0038D6  EF22  F01D         	goto	l5902
  1592   0038DA                     u5700:
  1593   0038DA                     
  1594                           ; BSR set to: 1
  1595                           ;main.c: 81:             move_count++;
  1596   0038DA  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1597   0038DC  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1598   0038DE                     
  1599                           ; BSR set to: 1
  1600                           ;main.c: 82:             if (move_count>98){
  1601   0038DE  51DB               	movf	(_move_count+1)& (0+255),w,b	;volatile
  1602   0038E0  E109               	bnz	u5710
  1603   0038E2  0E63               	movlw	99
  1604   0038E4  5DDA               	subwf	_move_count& (0+255),w,b	;volatile
  1605   0038E6  A0D8               	btfss	status,0,c
  1606   0038E8  EF78  F01C         	goto	u5711
  1607   0038EC  EF7A  F01C         	goto	u5710
  1608   0038F0                     u5711:
  1609   0038F0  EF88  F01C         	goto	l5874
  1610   0038F4                     u5710:
  1611   0038F4                     
  1612                           ; BSR set to: 1
  1613                           ;main.c: 83:                 getTMR0val();
  1614   0038F4  EC69  F02B         	call	_getTMR0val	;wreg free
  1615   0038F8                     l5872:
  1616                           
  1617                           ;main.c: 84:                 go_Home(WayBack, Time_forward);
  1618   0038F8  0E1A               	movlw	low _WayBack
  1619   0038FA  6E24               	movwf	go_Home@WayBack^0,c
  1620   0038FC  0E01               	movlw	high _WayBack
  1621   0038FE  6E25               	movwf	(go_Home@WayBack+1)^0,c
  1622   003900  0E3C               	movlw	low _Time_forward
  1623   003902  6E26               	movwf	go_Home@Time_forward^0,c
  1624   003904  0E02               	movlw	high _Time_forward
  1625   003906  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  1626   003908  EC72  F01A         	call	_go_Home	;wreg free
  1627                           
  1628                           ;main.c: 85:             }
  1629   00390C  EF3C  F01D         	goto	l5910
  1630   003910                     l5874:
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;main.c: 87:                 getTMR0val();
  1634   003910  EC69  F02B         	call	_getTMR0val	;wreg free
  1635   003914                     
  1636                           ;main.c: 89:                 Forwardhalfblock(&motorL,&motorR);
  1637   003914  0E61               	movlw	low _motorL
  1638   003916  6E1A               	movwf	Forwardhalfblock@mL^0,c
  1639   003918  0E01               	movlw	high _motorL
  1640   00391A  6E1B               	movwf	(Forwardhalfblock@mL+1)^0,c
  1641   00391C  0E58               	movlw	low _motorR
  1642   00391E  6E1C               	movwf	Forwardhalfblock@mR^0,c
  1643   003920  0E01               	movlw	high _motorR
  1644   003922  6E1D               	movwf	(Forwardhalfblock@mR+1)^0,c
  1645   003924  EC23  F02C         	call	_Forwardhalfblock	;wreg free
  1646                           
  1647                           ;main.c: 90:                 while (consecuitive<20){
  1648   003928  EFDA  F01C         	goto	l5894
  1649   00392C                     l5878:
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;main.c: 91:                     _delay((unsigned long)((100)*(64000000/4000.0)));
  1653   00392C  0E09               	movlw	9
  1654   00392E  0100               	movlb	0	; () banked
  1655   003930  6FD2               	movwf	(??_main+1)& (0+255),b
  1656   003932  0E1E               	movlw	30
  1657   003934  6FD1               	movwf	??_main& (0+255),b
  1658   003936  0EE4               	movlw	228
  1659   003938                     u5847:
  1660   003938  2EE8               	decfsz	wreg,f,c
  1661   00393A  D7FE               	bra	u5847
  1662   00393C  2FD1               	decfsz	??_main& (0+255),f,b
  1663   00393E  D7FC               	bra	u5847
  1664   003940  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1665   003942  D7FA               	bra	u5847
  1666   003944  F000               	nop	
  1667   003946                     
  1668                           ;main.c: 92:                     readColours(&vals);
  1669   003946  0E6A               	movlw	low _vals
  1670   003948  6E0C               	movwf	readColours@vals^0,c
  1671   00394A  0E01               	movlw	high _vals
  1672   00394C  6E0D               	movwf	(readColours@vals+1)^0,c
  1673   00394E  EC9A  F02B         	call	_readColours	;wreg free
  1674   003952                     
  1675                           ;main.c: 93:                     colour_rel(&vals, &rel);
  1676   003952  0E6A               	movlw	low _vals
  1677   003954  6E4B               	movwf	colour_rel@vals^0,c
  1678   003956  0E01               	movlw	high _vals
  1679   003958  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1680   00395A  0E4C               	movlw	low _rel
  1681   00395C  6E4D               	movwf	colour_rel@rel^0,c
  1682   00395E  0E01               	movlw	high _rel
  1683   003960  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1684   003962  EC58  F017         	call	_colour_rel	;wreg free
  1685   003966                     
  1686                           ;main.c: 94:                     int colour = Colour_decider(&vals, &rel);
  1687   003966  0E6A               	movlw	low _vals
  1688   003968  6E4B               	movwf	Colour_decider@vals^0,c
  1689   00396A  0E01               	movlw	high _vals
  1690   00396C  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1691   00396E  0E4C               	movlw	low _rel
  1692   003970  6E4D               	movwf	Colour_decider@rel^0,c
  1693   003972  0E01               	movlw	high _rel
  1694   003974  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1695   003976  EC1C  F00C         	call	_Colour_decider	;wreg free
  1696   00397A  C04B  F1D6         	movff	?_Colour_decider,main@colour
  1697   00397E  C04C  F1D7         	movff	?_Colour_decider+1,main@colour+1
  1698   003982                     
  1699                           ;main.c: 95:                     if (colour==prev_colour){
  1700   003982  0101               	movlb	1	; () banked
  1701   003984  5118               	movf	_prev_colour& (0+255),w,b
  1702   003986  19D6               	xorwf	main@colour& (0+255),w,b
  1703   003988  E107               	bnz	u5721
  1704   00398A  5119               	movf	(_prev_colour+1)& (0+255),w,b
  1705   00398C  19D7               	xorwf	(main@colour+1)& (0+255),w,b
  1706   00398E  A4D8               	btfss	status,2,c
  1707   003990  EFCC  F01C         	goto	u5721
  1708   003994  EFCE  F01C         	goto	u5720
  1709   003998                     u5721:
  1710   003998  EFD2  F01C         	goto	l5890
  1711   00399C                     u5720:
  1712   00399C                     
  1713                           ; BSR set to: 1
  1714                           ;main.c: 96:                         consecuitive++;
  1715   00399C  4B16               	infsnz	_consecuitive& (0+255),f,b
  1716   00399E  2B17               	incf	(_consecuitive+1)& (0+255),f,b
  1717                           
  1718                           ;main.c: 97:                     }
  1719   0039A0  EFD6  F01C         	goto	l5892
  1720   0039A4                     l5890:
  1721                           
  1722                           ; BSR set to: 1
  1723                           ;main.c: 99:                         consecuitive=0;
  1724   0039A4  0E00               	movlw	0
  1725   0039A6  6F17               	movwf	(_consecuitive+1)& (0+255),b
  1726   0039A8  0E00               	movlw	0
  1727   0039AA  6F16               	movwf	_consecuitive& (0+255),b
  1728   0039AC                     l5892:
  1729                           
  1730                           ; BSR set to: 1
  1731                           ;main.c: 101:                     prev_colour=colour;
  1732   0039AC  C1D6  F118         	movff	main@colour,_prev_colour
  1733   0039B0  C1D7  F119         	movff	main@colour+1,_prev_colour+1
  1734   0039B4                     l5894:
  1735                           
  1736                           ;main.c: 90:                 while (consecuitive<20){
  1737   0039B4  0101               	movlb	1	; () banked
  1738   0039B6  BF17               	btfsc	(_consecuitive+1)& (0+255),7,b
  1739   0039B8  EFE7  F01C         	goto	u5731
  1740   0039BC  5117               	movf	(_consecuitive+1)& (0+255),w,b
  1741   0039BE  E109               	bnz	u5730
  1742   0039C0  0E14               	movlw	20
  1743   0039C2  5D16               	subwf	_consecuitive& (0+255),w,b
  1744   0039C4  A0D8               	btfss	status,0,c
  1745   0039C6  EFE7  F01C         	goto	u5731
  1746   0039CA  EFE9  F01C         	goto	u5730
  1747   0039CE                     u5731:
  1748   0039CE  EF96  F01C         	goto	l5878
  1749   0039D2                     u5730:
  1750   0039D2                     
  1751                           ; BSR set to: 1
  1752                           ;main.c: 105:                 sprintf(buf,"red=%f green=%f blue=%f lum=%d actual_colour=
      +                          %d \r\n",rel.R, rel.G,rel.B,vals.L, prev_colour);
  1753   0039D2  0E72               	movlw	low main@buf
  1754   0039D4  0100               	movlb	0	; () banked
  1755   0039D6  6FB0               	movwf	sprintf@s& (0+255),b
  1756   0039D8  0E01               	movlw	high main@buf
  1757   0039DA  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1758   0039DC  0E01               	movlw	low STR_1
  1759   0039DE  6FB2               	movwf	sprintf@fmt& (0+255),b
  1760   0039E0  0E0E               	movlw	high STR_1
  1761   0039E2  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1762   0039E4  C14C  F0B4         	movff	_rel,?_sprintf+4
  1763   0039E8  C14D  F0B5         	movff	_rel+1,?_sprintf+5
  1764   0039EC  C14E  F0B6         	movff	_rel+2,?_sprintf+6
  1765   0039F0  C14F  F0B7         	movff	_rel+3,?_sprintf+7
  1766   0039F4  C150  F0B8         	movff	_rel+4,?_sprintf+8
  1767   0039F8  C151  F0B9         	movff	_rel+5,?_sprintf+9
  1768   0039FC  C152  F0BA         	movff	_rel+6,?_sprintf+10
  1769   003A00  C153  F0BB         	movff	_rel+7,?_sprintf+11
  1770   003A04  C154  F0BC         	movff	_rel+8,?_sprintf+12
  1771   003A08  C155  F0BD         	movff	_rel+9,?_sprintf+13
  1772   003A0C  C156  F0BE         	movff	_rel+10,?_sprintf+14
  1773   003A10  C157  F0BF         	movff	_rel+11,?_sprintf+15
  1774   003A14  C170  F0C0         	movff	_vals+6,?_sprintf+16
  1775   003A18  C171  F0C1         	movff	_vals+7,?_sprintf+17
  1776   003A1C  C118  F0C2         	movff	_prev_colour,?_sprintf+18
  1777   003A20  C119  F0C3         	movff	_prev_colour+1,?_sprintf+19
  1778   003A24  ECFF  F02C         	call	_sprintf	;wreg free
  1779   003A28                     
  1780                           ;main.c: 106:                 sendStringSerial4(buf);
  1781   003A28  0E72               	movlw	low main@buf
  1782   003A2A  6E02               	movwf	sendStringSerial4@string^0,c
  1783   003A2C  0E01               	movlw	high main@buf
  1784   003A2E  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1785   003A30  EC44  F030         	call	_sendStringSerial4	;wreg free
  1786   003A34                     
  1787                           ;main.c: 108:                 colour_move (prev_colour);
  1788   003A34  C118  F02D         	movff	_prev_colour,colour_move@recognized_colour
  1789   003A38  C119  F02E         	movff	_prev_colour+1,colour_move@recognized_colour+1
  1790   003A3C  EC87  F01E         	call	_colour_move	;wreg free
  1791   003A40  EF3C  F01D         	goto	l5910
  1792   003A44                     l5902:
  1793                           
  1794                           ; BSR set to: 1
  1795   003A44  5114               	movf	_lost_flag& (0+255),w,b
  1796   003A46  1115               	iorwf	(_lost_flag+1)& (0+255),w,b
  1797   003A48  B4D8               	btfsc	status,2,c
  1798   003A4A  EF29  F01D         	goto	u5741
  1799   003A4E  EF2B  F01D         	goto	u5740
  1800   003A52                     u5741:
  1801   003A52  EF3C  F01D         	goto	l5910
  1802   003A56                     u5740:
  1803   003A56                     
  1804                           ; BSR set to: 1
  1805                           ;main.c: 111:             move_count++;
  1806   003A56  4BDA               	infsnz	_move_count& (0+255),f,b	;volatile
  1807   003A58  2BDB               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1808   003A5A                     
  1809                           ; BSR set to: 1
  1810                           ;main.c: 112:             Time_forward[move_count]=65535;
  1811   003A5A  90D8               	bcf	status,0,c
  1812   003A5C  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  1813   003A5E  6ED9               	movwf	fsr2l,c
  1814   003A60  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  1815   003A62  6EDA               	movwf	fsr2h,c
  1816   003A64  0E3C               	movlw	low _Time_forward
  1817   003A66  26D9               	addwf	fsr2l,f,c
  1818   003A68  0E02               	movlw	high _Time_forward
  1819   003A6A  22DA               	addwfc	fsr2h,f,c
  1820   003A6C  0EFF               	movlw	255
  1821   003A6E  6EDE               	movwf	postinc2,c
  1822   003A70  0EFF               	movlw	255
  1823   003A72  6EDD               	movwf	postdec2,c
  1824   003A74  EF7C  F01C         	goto	l5872
  1825   003A78                     l5910:
  1826                           
  1827                           ;main.c: 69:     while (run_flag)
  1828   003A78  0101               	movlb	1	; () banked
  1829   003A7A  51D8               	movf	_run_flag& (0+255),w,b
  1830   003A7C  11D9               	iorwf	(_run_flag+1)& (0+255),w,b
  1831   003A7E  A4D8               	btfss	status,2,c
  1832   003A80  EF44  F01D         	goto	u5751
  1833   003A84  EF46  F01D         	goto	u5750
  1834   003A88                     u5751:
  1835   003A88  EF4A  F01C         	goto	l5858
  1836   003A8C                     u5750:
  1837   003A8C                     
  1838                           ; BSR set to: 1
  1839   003A8C  EF1A  F000         	goto	start
  1840   003A90                     __end_of_main:
  1841                           	callstack 0
  1842                           
  1843 ;; *************** function _turnCalibration *****************
  1844 ;; Defined at:
  1845 ;;		line 392 in file "dc_motor.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1848 ;;		 -> motorL(9), 
  1849 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1850 ;;		 -> motorR(9), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;		None
  1853 ;; Return value:  Size  Location     Type
  1854 ;;                  1    wreg      void 
  1855 ;; Registers used:
  1856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1857 ;; Tracked objects:
  1858 ;;		On entry : 0/0
  1859 ;;		On exit  : 0/0
  1860 ;;		Unchanged: 0/0
  1861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;Total ram usage:        6 bytes
  1867 ;; Hardware stack levels used: 1
  1868 ;; Hardware stack levels required when called: 5
  1869 ;; This function calls:
  1870 ;;		_turnLeft45
  1871 ;; This function is called by:
  1872 ;;		_main
  1873 ;; This function uses a non-reentrant model
  1874 ;;
  1875                           
  1876                           	psect	text1
  1877   00434C                     __ptext1:
  1878                           	callstack 0
  1879   00434C                     _turnCalibration:
  1880                           	callstack 25
  1881   00434C                     
  1882                           ;dc_motor.c: 393:     LATFbits.LATF0=1;
  1883   00434C  807E               	bsf	126,0,c	;volatile
  1884   00434E                     
  1885                           ;dc_motor.c: 394:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1886   00434E  0E52               	movlw	82
  1887   004350  6E25               	movwf	(??_turnCalibration+1)^0,c
  1888   004352  0E2B               	movlw	43
  1889   004354  6E24               	movwf	??_turnCalibration^0,c
  1890   004356  0E00               	movlw	0
  1891   004358                     u5857:
  1892   004358  2EE8               	decfsz	wreg,f,c
  1893   00435A  D7FE               	bra	u5857
  1894   00435C  2E24               	decfsz	??_turnCalibration^0,f,c
  1895   00435E  D7FC               	bra	u5857
  1896   004360  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1897   004362  D7FA               	bra	u5857
  1898   004364  D000               	nop2	
  1899                           
  1900                           ;dc_motor.c: 396:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  1901   004366  EF60  F022         	goto	l5668
  1902   00436A                     l541:
  1903                           
  1904                           ;dc_motor.c: 397:         LATDbits.LATD3=1;
  1905   00436A  867C               	bsf	124,3,c	;volatile
  1906   00436C                     
  1907                           ;dc_motor.c: 399:         turnLeft45(&motorL, &motorR);
  1908   00436C  0E61               	movlw	low _motorL
  1909   00436E  6E1A               	movwf	turnLeft45@mL^0,c
  1910   004370  0E01               	movlw	high _motorL
  1911   004372  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1912   004374  0E58               	movlw	low _motorR
  1913   004376  6E1C               	movwf	turnLeft45@mR^0,c
  1914   004378  0E01               	movlw	high _motorR
  1915   00437A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1916   00437C  ECE4  F02E         	call	_turnLeft45	;wreg free
  1917                           
  1918                           ;dc_motor.c: 400:         turnLeft45(&motorL, &motorR);
  1919   004380  0E61               	movlw	low _motorL
  1920   004382  6E1A               	movwf	turnLeft45@mL^0,c
  1921   004384  0E01               	movlw	high _motorL
  1922   004386  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1923   004388  0E58               	movlw	low _motorR
  1924   00438A  6E1C               	movwf	turnLeft45@mR^0,c
  1925   00438C  0E01               	movlw	high _motorR
  1926   00438E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1927   004390  ECE4  F02E         	call	_turnLeft45	;wreg free
  1928                           
  1929                           ;dc_motor.c: 401:         turnLeft45(&motorL, &motorR);
  1930   004394  0E61               	movlw	low _motorL
  1931   004396  6E1A               	movwf	turnLeft45@mL^0,c
  1932   004398  0E01               	movlw	high _motorL
  1933   00439A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1934   00439C  0E58               	movlw	low _motorR
  1935   00439E  6E1C               	movwf	turnLeft45@mR^0,c
  1936   0043A0  0E01               	movlw	high _motorR
  1937   0043A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1938   0043A4  ECE4  F02E         	call	_turnLeft45	;wreg free
  1939                           
  1940                           ;dc_motor.c: 402:         turnLeft45(&motorL, &motorR);
  1941   0043A8  0E61               	movlw	low _motorL
  1942   0043AA  6E1A               	movwf	turnLeft45@mL^0,c
  1943   0043AC  0E01               	movlw	high _motorL
  1944   0043AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1945   0043B0  0E58               	movlw	low _motorR
  1946   0043B2  6E1C               	movwf	turnLeft45@mR^0,c
  1947   0043B4  0E01               	movlw	high _motorR
  1948   0043B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1949   0043B8  ECE4  F02E         	call	_turnLeft45	;wreg free
  1950                           
  1951                           ;dc_motor.c: 404:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1952   0043BC  EF45  F022         	goto	l5662
  1953   0043C0                     l543:
  1954                           
  1955                           ;dc_motor.c: 407:               LATDbits.LATD4=1;
  1956   0043C0  887C               	bsf	124,4,c	;volatile
  1957   0043C2                     
  1958                           ;dc_motor.c: 408:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1959   0043C2  0EA3               	movlw	163
  1960   0043C4  6E25               	movwf	(??_turnCalibration+1)^0,c
  1961   0043C6  0E57               	movlw	87
  1962   0043C8  6E24               	movwf	??_turnCalibration^0,c
  1963   0043CA  0E02               	movlw	2
  1964   0043CC                     u5867:
  1965   0043CC  2EE8               	decfsz	wreg,f,c
  1966   0043CE  D7FE               	bra	u5867
  1967   0043D0  2E24               	decfsz	??_turnCalibration^0,f,c
  1968   0043D2  D7FC               	bra	u5867
  1969   0043D4  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1970   0043D6  D7FA               	bra	u5867
  1971   0043D8  D000               	nop2	
  1972   0043DA                     
  1973                           ;dc_motor.c: 409:             if(!PORTFbits.RF3 && !PORTFbits.RF2){
  1974   0043DA  B68E               	btfsc	142,3,c	;volatile
  1975   0043DC  EFF2  F021         	goto	u5491
  1976   0043E0  EFF4  F021         	goto	u5490
  1977   0043E4                     u5491:
  1978   0043E4  EF0D  F022         	goto	l544
  1979   0043E8                     u5490:
  1980   0043E8  B48E               	btfsc	142,2,c	;volatile
  1981   0043EA  EFF9  F021         	goto	u5501
  1982   0043EE  EFFB  F021         	goto	u5500
  1983   0043F2                     u5501:
  1984   0043F2  EF0D  F022         	goto	l544
  1985   0043F6                     u5500:
  1986   0043F6                     
  1987                           ;dc_motor.c: 410:                 LATHbits.LATH3=1;
  1988   0043F6  8680               	bsf	128,3,c	;volatile
  1989                           
  1990                           ;dc_motor.c: 411:                 LATDbits.LATD7=1;
  1991   0043F8  8E7C               	bsf	124,7,c	;volatile
  1992   0043FA                     
  1993                           ;dc_motor.c: 412:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1994   0043FA  0E52               	movlw	82
  1995   0043FC  6E25               	movwf	(??_turnCalibration+1)^0,c
  1996   0043FE  0E2B               	movlw	43
  1997   004400  6E24               	movwf	??_turnCalibration^0,c
  1998   004402  0E00               	movlw	0
  1999   004404                     u5877:
  2000   004404  2EE8               	decfsz	wreg,f,c
  2001   004406  D7FE               	bra	u5877
  2002   004408  2E24               	decfsz	??_turnCalibration^0,f,c
  2003   00440A  D7FC               	bra	u5877
  2004   00440C  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2005   00440E  D7FA               	bra	u5877
  2006   004410  D000               	nop2	
  2007   004412                     
  2008                           ;dc_motor.c: 413:                 LATHbits.LATH3=0;
  2009   004412  9680               	bcf	128,3,c	;volatile
  2010   004414                     
  2011                           ;dc_motor.c: 414:                 LATDbits.LATD7=0;
  2012   004414  9E7C               	bcf	124,7,c	;volatile
  2013                           
  2014                           ;dc_motor.c: 415:             }
  2015   004416  EF45  F022         	goto	l5662
  2016   00441A                     l544:
  2017   00441A  B68E               	btfsc	142,3,c	;volatile
  2018   00441C  EF12  F022         	goto	u5511
  2019   004420  EF14  F022         	goto	u5510
  2020   004424                     u5511:
  2021   004424  EF29  F022         	goto	l546
  2022   004428                     u5510:
  2023   004428                     
  2024                           ;dc_motor.c: 418:                 Turn45Delay+=10;
  2025   004428  0E0A               	movlw	10
  2026   00442A  0100               	movlb	0	; () banked
  2027   00442C  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2028   00442E  0E00               	movlw	0
  2029   004430  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2030   004432                     
  2031                           ; BSR set to: 0
  2032                           ;dc_motor.c: 419:                 LATHbits.LATH3=1;
  2033   004432  8680               	bsf	128,3,c	;volatile
  2034   004434                     
  2035                           ; BSR set to: 0
  2036                           ;dc_motor.c: 420:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2037   004434  0E52               	movlw	82
  2038   004436  6E25               	movwf	(??_turnCalibration+1)^0,c
  2039   004438  0E2B               	movlw	43
  2040   00443A  6E24               	movwf	??_turnCalibration^0,c
  2041   00443C  0E00               	movlw	0
  2042   00443E                     u5887:
  2043   00443E  2EE8               	decfsz	wreg,f,c
  2044   004440  D7FE               	bra	u5887
  2045   004442  2E24               	decfsz	??_turnCalibration^0,f,c
  2046   004444  D7FC               	bra	u5887
  2047   004446  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2048   004448  D7FA               	bra	u5887
  2049   00444A  D000               	nop2	
  2050   00444C                     
  2051                           ;dc_motor.c: 421:                 LATHbits.LATH3=0;
  2052   00444C  9680               	bcf	128,3,c	;volatile
  2053                           
  2054                           ;dc_motor.c: 422:             }
  2055   00444E  EF45  F022         	goto	l5662
  2056   004452                     l546:
  2057   004452  B48E               	btfsc	142,2,c	;volatile
  2058   004454  EF2E  F022         	goto	u5521
  2059   004458  EF30  F022         	goto	u5520
  2060   00445C                     u5521:
  2061   00445C  EF45  F022         	goto	l545
  2062   004460                     u5520:
  2063   004460                     
  2064                           ;dc_motor.c: 425:                 Turn45Delay-=10;
  2065   004460  0100               	movlb	0	; () banked
  2066   004462  0EF6               	movlw	246
  2067   004464  27F4               	addwf	_Turn45Delay& (0+255),f,b
  2068   004466  0EFF               	movlw	255
  2069   004468  23F5               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  2070   00446A                     
  2071                           ; BSR set to: 0
  2072                           ;dc_motor.c: 426:                 LATDbits.LATD7=1;
  2073   00446A  8E7C               	bsf	124,7,c	;volatile
  2074   00446C                     
  2075                           ; BSR set to: 0
  2076                           ;dc_motor.c: 427:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  2077   00446C  0E52               	movlw	82
  2078   00446E  6E25               	movwf	(??_turnCalibration+1)^0,c
  2079   004470  0E2B               	movlw	43
  2080   004472  6E24               	movwf	??_turnCalibration^0,c
  2081   004474  0E00               	movlw	0
  2082   004476                     u5897:
  2083   004476  2EE8               	decfsz	wreg,f,c
  2084   004478  D7FE               	bra	u5897
  2085   00447A  2E24               	decfsz	??_turnCalibration^0,f,c
  2086   00447C  D7FC               	bra	u5897
  2087   00447E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2088   004480  D7FA               	bra	u5897
  2089   004482  D000               	nop2	
  2090   004484                     
  2091                           ;dc_motor.c: 428:                 LATDbits.LATD7=0;
  2092   004484  9E7C               	bcf	124,7,c	;volatile
  2093   004486  EF45  F022         	goto	l5662
  2094   00448A                     l545:
  2095   00448A                     l5662:
  2096                           
  2097                           ;dc_motor.c: 404:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  2098   00448A  A48E               	btfss	142,2,c	;volatile
  2099   00448C  EF4A  F022         	goto	u5531
  2100   004490  EF4C  F022         	goto	u5530
  2101   004494                     u5531:
  2102   004494  EF53  F022         	goto	l551
  2103   004498                     u5530:
  2104   004498  B68E               	btfsc	142,3,c	;volatile
  2105   00449A  EF51  F022         	goto	u5541
  2106   00449E  EF53  F022         	goto	u5540
  2107   0044A2                     u5541:
  2108   0044A2  EFE0  F021         	goto	l543
  2109   0044A6                     u5540:
  2110   0044A6                     l551:
  2111                           
  2112                           ;dc_motor.c: 431:         LATDbits.LATD4=0;
  2113   0044A6  987C               	bcf	124,4,c	;volatile
  2114   0044A8                     
  2115                           ;dc_motor.c: 432:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2116   0044A8  0EA3               	movlw	163
  2117   0044AA  6E25               	movwf	(??_turnCalibration+1)^0,c
  2118   0044AC  0E57               	movlw	87
  2119   0044AE  6E24               	movwf	??_turnCalibration^0,c
  2120   0044B0  0E02               	movlw	2
  2121   0044B2                     u5907:
  2122   0044B2  2EE8               	decfsz	wreg,f,c
  2123   0044B4  D7FE               	bra	u5907
  2124   0044B6  2E24               	decfsz	??_turnCalibration^0,f,c
  2125   0044B8  D7FC               	bra	u5907
  2126   0044BA  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2127   0044BC  D7FA               	bra	u5907
  2128   0044BE  D000               	nop2	
  2129   0044C0                     l5668:
  2130                           
  2131                           ;dc_motor.c: 396:     while (!(!PORTFbits.RF2 && !PORTFbits.RF3)){
  2132   0044C0  B48E               	btfsc	142,2,c	;volatile
  2133   0044C2  EF65  F022         	goto	u5551
  2134   0044C6  EF67  F022         	goto	u5550
  2135   0044CA                     u5551:
  2136   0044CA  EFB5  F021         	goto	l541
  2137   0044CE                     u5550:
  2138   0044CE  B68E               	btfsc	142,3,c	;volatile
  2139   0044D0  EF6C  F022         	goto	u5561
  2140   0044D4  EF6E  F022         	goto	u5560
  2141   0044D8                     u5561:
  2142   0044D8  EFB5  F021         	goto	l541
  2143   0044DC                     u5560:
  2144   0044DC                     
  2145                           ;dc_motor.c: 434:     LATDbits.LATD3=0;
  2146   0044DC  967C               	bcf	124,3,c	;volatile
  2147   0044DE                     
  2148                           ;dc_motor.c: 435:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  2149   0044DE  0EA3               	movlw	163
  2150   0044E0  6E25               	movwf	(??_turnCalibration+1)^0,c
  2151   0044E2  0E57               	movlw	87
  2152   0044E4  6E24               	movwf	??_turnCalibration^0,c
  2153   0044E6  0E02               	movlw	2
  2154   0044E8                     u5917:
  2155   0044E8  2EE8               	decfsz	wreg,f,c
  2156   0044EA  D7FE               	bra	u5917
  2157   0044EC  2E24               	decfsz	??_turnCalibration^0,f,c
  2158   0044EE  D7FC               	bra	u5917
  2159   0044F0  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  2160   0044F2  D7FA               	bra	u5917
  2161   0044F4  D000               	nop2	
  2162   0044F6  0012               	return		;funcret
  2163   0044F8                     __end_of_turnCalibration:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _sprintf *****************
  2167 ;; Defined at:
  2168 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2171 ;;		 -> main@buf(100), 
  2172 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2173 ;;		 -> STR_1(51), 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2176 ;;  ap              2  100[BANK0 ] PTR void [1]
  2177 ;;		 -> ?_sprintf(2), 
  2178 ;;  ret             2    0        int 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  2   80[BANK0 ] int 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2188 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;Total ram usage:       33 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 8
  2195 ;; This function calls:
  2196 ;;		_vfprintf
  2197 ;; This function is called by:
  2198 ;;		_main
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text2
  2203   0059FE                     __ptext2:
  2204                           	callstack 0
  2205   0059FE                     _sprintf:
  2206                           	callstack 22
  2207   0059FE  0EB4               	movlw	low (?_sprintf+4)
  2208   005A00  0100               	movlb	0	; () banked
  2209   005A02  6FC4               	movwf	sprintf@ap& (0+255),b
  2210   005A04  0E00               	movlw	high (?_sprintf+4)
  2211   005A06  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2212   005A08  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2213   005A0C  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2214   005A10                     
  2215                           ; BSR set to: 0
  2216   005A10  0E00               	movlw	0
  2217   005A12  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2218   005A14  0E00               	movlw	0
  2219   005A16  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2220   005A18                     
  2221                           ; BSR set to: 0
  2222   005A18  0E00               	movlw	0
  2223   005A1A  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2224   005A1C  0E00               	movlw	0
  2225   005A1E  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2226   005A20                     
  2227                           ; BSR set to: 0
  2228   005A20  0EC6               	movlw	low sprintf@f
  2229   005A22  6FA8               	movwf	vfprintf@fp& (0+255),b
  2230   005A24  0E00               	movlw	high sprintf@f
  2231   005A26  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2232   005A28  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2233   005A2C  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2234   005A30  0EC4               	movlw	low sprintf@ap
  2235   005A32  6FAC               	movwf	vfprintf@ap& (0+255),b
  2236   005A34  0E00               	movlw	high sprintf@ap
  2237   005A36  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2238   005A38  ECD4  F02C         	call	_vfprintf	;wreg free
  2239   005A3C  0100               	movlb	0	; () banked
  2240   005A3E  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2241   005A40  25B0               	addwf	sprintf@s& (0+255),w,b
  2242   005A42  6ED9               	movwf	fsr2l,c
  2243   005A44  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2244   005A46  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2245   005A48  6EDA               	movwf	fsr2h,c
  2246   005A4A  0E00               	movlw	0
  2247   005A4C  6EDF               	movwf	indf2,c
  2248   005A4E                     
  2249                           ; BSR set to: 0
  2250   005A4E  0012               	return		;funcret
  2251   005A50                     __end_of_sprintf:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function _vfprintf *****************
  2255 ;; Defined at:
  2256 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2259 ;;		 -> sprintf@f(11), 
  2260 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2261 ;;		 -> STR_1(51), 
  2262 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2263 ;;		 -> sprintf@ap(2), 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2266 ;;		 -> STR_1(51), 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2   72[BANK0 ] int 
  2269 ;; Registers used:
  2270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2276 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;Total ram usage:        8 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 7
  2283 ;; This function calls:
  2284 ;;		_vfpfcnvrt
  2285 ;; This function is called by:
  2286 ;;		_sprintf
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text3
  2291   0059A8                     __ptext3:
  2292                           	callstack 0
  2293   0059A8                     _vfprintf:
  2294                           	callstack 22
  2295   0059A8                     
  2296                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2297   0059A8  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2298   0059AC  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2301   0059B0  EFE9  F02C         	goto	l5352
  2302   0059B4                     l5350:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2305   0059B4  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2306   0059B8  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2307   0059BC  0EAE               	movlw	low vfprintf@cfmt
  2308   0059BE  0100               	movlb	0	; () banked
  2309   0059C0  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2310   0059C2  0E00               	movlw	high vfprintf@cfmt
  2311   0059C4  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2312   0059C6  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2313   0059CA  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2314   0059CE  ECEF  F018         	call	_vfpfcnvrt	;wreg free
  2315   0059D2                     l5352:
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2318   0059D2  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2319   0059D6  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2320   0059DA                     	if	0	;tblptru may be non-zero
  2321   0059DA                     	endif
  2322   0059DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2323   0059DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2324   0059DC  6EF8               	movwf	tblptru,c
  2325   0059DE                     	endif
  2326   0059DE  0008               	tblrd		*
  2327   0059E0  50F5               	movf	tablat,w,c
  2328   0059E2  0900               	iorlw	0
  2329   0059E4  A4D8               	btfss	status,2,c
  2330   0059E6  EFF7  F02C         	goto	u5181
  2331   0059EA  EFF9  F02C         	goto	u5180
  2332   0059EE                     u5181:
  2333   0059EE  EFDA  F02C         	goto	l5350
  2334   0059F2                     u5180:
  2335   0059F2                     
  2336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2337   0059F2  0E00               	movlw	0
  2338   0059F4  0100               	movlb	0	; () banked
  2339   0059F6  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2340   0059F8  0E00               	movlw	0
  2341   0059FA  6FA8               	movwf	?_vfprintf& (0+255),b
  2342   0059FC                     
  2343                           ; BSR set to: 0
  2344   0059FC  0012               	return		;funcret
  2345   0059FE                     __end_of_vfprintf:
  2346                           	callstack 0
  2347                           
  2348 ;; *************** function _vfpfcnvrt *****************
  2349 ;; Defined at:
  2350 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2353 ;;		 -> sprintf@f(11), 
  2354 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2355 ;;		 -> vfprintf@cfmt(2), 
  2356 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2357 ;;		 -> sprintf@ap(2), 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  convarg         8   61[BANK0 ] struct .
  2360 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2361 ;;		 -> STR_1(51), 
  2362 ;;  i               2    0        int 
  2363 ;;  done            2    0        int 
  2364 ;;  c               1   69[BANK0 ] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2374 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2375 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;Total ram usage:       19 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; Hardware stack levels required when called: 6
  2381 ;; This function calls:
  2382 ;;		_dtoa
  2383 ;;		_efgtoa
  2384 ;;		_fputc
  2385 ;; This function is called by:
  2386 ;;		_vfprintf
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text4
  2391   0031DE                     __ptext4:
  2392                           	callstack 0
  2393   0031DE                     _vfpfcnvrt:
  2394                           	callstack 22
  2395   0031DE                     
  2396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2397   0031DE  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2398   0031E2  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2399   0031E6  CFDE FFF6          	movff	postinc2,tblptrl
  2400   0031EA  CFDD FFF7          	movff	postdec2,tblptrh
  2401   0031EE                     	if	0	;tblptru may be non-zero
  2402   0031EE                     	endif
  2403   0031EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2404   0031EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2405   0031F0  6EF8               	movwf	tblptru,c
  2406   0031F2                     	endif
  2407   0031F2  0008               	tblrd		*
  2408   0031F4  50F5               	movf	tablat,w,c
  2409   0031F6  0A25               	xorlw	37
  2410   0031F8  A4D8               	btfss	status,2,c
  2411   0031FA  EF01  F019         	goto	u4951
  2412   0031FE  EF03  F019         	goto	u4950
  2413   003202                     u4951:
  2414   003202  EF5B  F01A         	goto	l5176
  2415   003206                     u4950:
  2416   003206                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2418   003206  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2419   00320A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2420   00320E  2ADE               	incf	postinc2,f,c
  2421   003210  0E00               	movlw	0
  2422   003212  22DD               	addwfc	postdec2,f,c
  2423   003214                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2425   003214  0E00               	movlw	0
  2426   003216  0100               	movlb	0	; () banked
  2427   003218  6FE8               	movwf	(_width+1)& (0+255),b
  2428   00321A  0E00               	movlw	0
  2429   00321C  6FE7               	movwf	_width& (0+255),b
  2430   00321E  C0E7  F0ED         	movff	_width,_flags
  2431   003222                     
  2432                           ; BSR set to: 0
  2433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2434   003222  69E9               	setf	_prec& (0+255),b
  2435   003224  69EA               	setf	(_prec+1)& (0+255),b
  2436   003226                     
  2437                           ; BSR set to: 0
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2439   003226  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2440   00322A  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2441   00322E  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2442   003232  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2443   003236                     
  2444                           ; BSR set to: 0
  2445                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2446   003236  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2447   00323A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2448   00323E                     	if	0	;tblptru may be non-zero
  2449   00323E                     	endif
  2450   00323E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2451   00323E  0E00               	movlw	low (__mediumconst shr (0+16))
  2452   003240  6EF8               	movwf	tblptru,c
  2453   003242                     	endif
  2454   003242  0008               	tblrd		*
  2455   003244  50F5               	movf	tablat,w,c
  2456   003246  0A64               	xorlw	100
  2457   003248  B4D8               	btfsc	status,2,c
  2458   00324A  EF29  F019         	goto	u4961
  2459   00324E  EF2B  F019         	goto	u4960
  2460   003252                     u4961:
  2461   003252  EF3B  F019         	goto	l5132
  2462   003256                     u4960:
  2463   003256                     
  2464                           ; BSR set to: 0
  2465   003256  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2466   00325A  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2467   00325E                     	if	0	;tblptru may be non-zero
  2468   00325E                     	endif
  2469   00325E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2470   00325E  0E00               	movlw	low (__mediumconst shr (0+16))
  2471   003260  6EF8               	movwf	tblptru,c
  2472   003262                     	endif
  2473   003262  0008               	tblrd		*
  2474   003264  50F5               	movf	tablat,w,c
  2475   003266  0A69               	xorlw	105
  2476   003268  A4D8               	btfss	status,2,c
  2477   00326A  EF39  F019         	goto	u4971
  2478   00326E  EF3B  F019         	goto	u4970
  2479   003272                     u4971:
  2480   003272  EF7E  F019         	goto	l5138
  2481   003276                     u4970:
  2482   003276                     l5132:
  2483                           
  2484                           ; BSR set to: 0
  2485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2486   003276  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2487   00327A  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2488   00327E  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2489   003282  0E02               	movlw	2
  2490   003284  26DE               	addwf	postinc2,f,c
  2491   003286  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2492   00328A  0E00               	movlw	0
  2493   00328C  22DD               	addwfc	postdec2,f,c
  2494   00328E  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2495   003292  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2496   003296  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2497   00329A  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  2498   00329E  0E00               	movlw	0
  2499   0032A0  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2500   0032A2  0EFF               	movlw	-1
  2501   0032A4  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2502   0032A6  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2503   0032A8  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2504   0032AA  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2505   0032AC  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2506   0032AE  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2509   0032B0  0E01               	movlw	1
  2510   0032B2  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2511   0032B4  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2512   0032B6  0E00               	movlw	0
  2513   0032B8  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2514   0032BA  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2515   0032BC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2516   0032C0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2517   0032C4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2518   0032C8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2519   0032CC                     
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2522   0032CC  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  2523   0032D0  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2524   0032D4  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  2525   0032D8  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2526   0032DC  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2527   0032E0  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2528   0032E4  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2529   0032E8  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2530   0032EC  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2531   0032F0  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2532   0032F4  EC48  F01D         	call	_dtoa	;wreg free
  2533   0032F8  EF71  F01A         	goto	l1549
  2534   0032FC                     l5138:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  2538   0032FC  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2539   003300  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2540   003304  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  2541   003308  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  2542   00330C                     
  2543                           ; BSR set to: 0
  2544                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  2545   00330C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2546   003310  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2547   003314                     	if	0	;tblptru may be non-zero
  2548   003314                     	endif
  2549   003314                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2550   003314  0E00               	movlw	low (__mediumconst shr (0+16))
  2551   003316  6EF8               	movwf	tblptru,c
  2552   003318                     	endif
  2553   003318  0008               	tblrd		*
  2554   00331A  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  2557   00331E  EF9D  F019         	goto	l5150
  2558   003322                     l5142:
  2559                           
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  2562   003322  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  2563   003324  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  2564                           
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  2566   003326  EFB6  F019         	goto	l5152
  2567   00332A                     l5144:
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  2571   00332A  0E6C               	movlw	108
  2572   00332C  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  2575   00332E  EFB6  F019         	goto	l5152
  2576   003332                     l5146:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  2580   003332  0E00               	movlw	0
  2581   003334  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  2582                           
  2583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  2584   003336  EFB6  F019         	goto	l5152
  2585   00333A                     l5150:
  2586                           
  2587                           ; BSR set to: 0
  2588   00333A  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2589   00333C  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2590   00333E  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2591                           
  2592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2593                           ; Switch size 1, requested type "simple"
  2594                           ; Number of cases is 1, Range of values is 0 to 0
  2595                           ; switch strategies available:
  2596                           ; Name         Instructions Cycles
  2597                           ; simple_byte            4     3 (average)
  2598                           ;	Chosen strategy is simple_byte
  2599   003340  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2600   003342  0A00               	xorlw	0	; case 0
  2601   003344  B4D8               	btfsc	status,2,c
  2602   003346  EFA7  F019         	goto	l6052
  2603   00334A  EF99  F019         	goto	l5146
  2604   00334E                     l6052:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ; Switch size 1, requested type "simple"
  2608                           ; Number of cases is 3, Range of values is 76 to 108
  2609                           ; switch strategies available:
  2610                           ; Name         Instructions Cycles
  2611                           ; simple_byte           10     6 (average)
  2612                           ;	Chosen strategy is simple_byte
  2613   00334E  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2614   003350  0A4C               	xorlw	76	; case 76
  2615   003352  B4D8               	btfsc	status,2,c
  2616   003354  EF91  F019         	goto	l5142
  2617   003358  0A2A               	xorlw	42	; case 102
  2618   00335A  B4D8               	btfsc	status,2,c
  2619   00335C  EF95  F019         	goto	l5144
  2620   003360  0A0A               	xorlw	10	; case 108
  2621   003362  B4D8               	btfsc	status,2,c
  2622   003364  EF91  F019         	goto	l5142
  2623   003368  EF99  F019         	goto	l5146
  2624   00336C                     l5152:
  2625                           
  2626                           ; BSR set to: 0
  2627   00336C  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2628   003370  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2629   003374                     	if	0	;tblptru may be non-zero
  2630   003374                     	endif
  2631   003374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2632   003374  0E00               	movlw	low (__mediumconst shr (0+16))
  2633   003376  6EF8               	movwf	tblptru,c
  2634   003378                     	endif
  2635   003378  0008               	tblrd		*
  2636   00337A  50F5               	movf	tablat,w,c
  2637   00337C  0A66               	xorlw	102
  2638   00337E  A4D8               	btfss	status,2,c
  2639   003380  EFC4  F019         	goto	u4981
  2640   003384  EFC6  F019         	goto	u4980
  2641   003388                     u4981:
  2642   003388  EF52  F01A         	goto	l5172
  2643   00338C                     u4980:
  2644   00338C  EFFC  F019         	goto	l5160
  2645   003390                     l5154:
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2649   003390  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2650   003394  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2651   003398  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2652   00339C  0E04               	movlw	4
  2653   00339E  26DE               	addwf	postinc2,f,c
  2654   0033A0  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2655   0033A4  0E00               	movlw	0
  2656   0033A6  22DD               	addwfc	postdec2,f,c
  2657   0033A8  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2658   0033AC  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2659   0033B0  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2660   0033B4  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2661   0033B8  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2662   0033BC  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2663                           
  2664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  2665   0033C0  EF11  F01A         	goto	l5162
  2666   0033C4                     l5156:
  2667                           
  2668                           ; BSR set to: 0
  2669                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2670   0033C4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2671   0033C8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2672   0033CC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  2673   0033D0  0E04               	movlw	4
  2674   0033D2  26DE               	addwf	postinc2,f,c
  2675   0033D4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  2676   0033D8  0E00               	movlw	0
  2677   0033DA  22DD               	addwfc	postdec2,f,c
  2678   0033DC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2679   0033E0  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2680   0033E4  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  2681   0033E8  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  2682   0033EC  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  2683   0033F0  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  2684                           
  2685                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  2686   0033F4  EF11  F01A         	goto	l5162
  2687   0033F8                     l5160:
  2688                           
  2689                           ; BSR set to: 0
  2690   0033F8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  2691   0033FA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2692   0033FC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2693                           
  2694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2695                           ; Switch size 1, requested type "simple"
  2696                           ; Number of cases is 1, Range of values is 0 to 0
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte            4     3 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701   0033FE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2702   003400  0A00               	xorlw	0	; case 0
  2703   003402  B4D8               	btfsc	status,2,c
  2704   003404  EF06  F01A         	goto	l6054
  2705   003408  EF11  F01A         	goto	l5162
  2706   00340C                     l6054:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ; Switch size 1, requested type "simple"
  2710                           ; Number of cases is 2, Range of values is 76 to 108
  2711                           ; switch strategies available:
  2712                           ; Name         Instructions Cycles
  2713                           ; simple_byte            7     4 (average)
  2714                           ;	Chosen strategy is simple_byte
  2715   00340C  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2716   00340E  0A4C               	xorlw	76	; case 76
  2717   003410  B4D8               	btfsc	status,2,c
  2718   003412  EFE2  F019         	goto	l5156
  2719   003416  0A20               	xorlw	32	; case 108
  2720   003418  B4D8               	btfsc	status,2,c
  2721   00341A  EFC8  F019         	goto	l5154
  2722   00341E  EF11  F01A         	goto	l5162
  2723   003422                     l5162:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  2727   003422  0E01               	movlw	1
  2728   003424  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2729   003426  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2730   003428  0E00               	movlw	0
  2731   00342A  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2732   00342C  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2733   00342E  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2734   003432  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2735   003436  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  2736   00343A  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  2739   00343E  EF3A  F01A         	goto	l5170
  2740   003442                     l5164:
  2741                           
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2744   003442  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  2745   003446  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2746   00344A  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  2747   00344E  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2748   003452  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2749   003456  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2750   00345A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2751   00345E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2752   003462                     	if	0	;tblptru may be non-zero
  2753   003462                     	endif
  2754   003462                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2755   003462  0E00               	movlw	low (__mediumconst shr (0+16))
  2756   003464  6EF8               	movwf	tblptru,c
  2757   003466                     	endif
  2758   003466  0008               	tblrd		*
  2759   003468  CFF5 F066          	movff	tablat,efgtoa@c
  2760   00346C  EC1F  F007         	call	_efgtoa	;wreg free
  2761   003470  EF71  F01A         	goto	l1549
  2762   003474                     l5170:
  2763                           
  2764                           ; BSR set to: 0
  2765   003474  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2766   003478  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2767   00347C                     	if	0	;tblptru may be non-zero
  2768   00347C                     	endif
  2769   00347C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2770   00347C  0E00               	movlw	low (__mediumconst shr (0+16))
  2771   00347E  6EF8               	movwf	tblptru,c
  2772   003480                     	endif
  2773   003480  0008               	tblrd		*
  2774   003482  50F5               	movf	tablat,w,c
  2775   003484  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  2776   003486  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  2777                           
  2778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2779                           ; Switch size 1, requested type "simple"
  2780                           ; Number of cases is 1, Range of values is 0 to 0
  2781                           ; switch strategies available:
  2782                           ; Name         Instructions Cycles
  2783                           ; simple_byte            4     3 (average)
  2784                           ;	Chosen strategy is simple_byte
  2785   003488  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2786   00348A  0A00               	xorlw	0	; case 0
  2787   00348C  B4D8               	btfsc	status,2,c
  2788   00348E  EF4B  F01A         	goto	l6056
  2789   003492  EF52  F01A         	goto	l5172
  2790   003496                     l6056:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ; Switch size 1, requested type "simple"
  2794                           ; Number of cases is 1, Range of values is 102 to 102
  2795                           ; switch strategies available:
  2796                           ; Name         Instructions Cycles
  2797                           ; simple_byte            4     3 (average)
  2798                           ;	Chosen strategy is simple_byte
  2799   003496  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  2800   003498  0A66               	xorlw	102	; case 102
  2801   00349A  B4D8               	btfsc	status,2,c
  2802   00349C  EF21  F01A         	goto	l5164
  2803   0034A0  EF52  F01A         	goto	l5172
  2804   0034A4                     l5172:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2807   0034A4  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2808   0034A8  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2809   0034AC  2ADE               	incf	postinc2,f,c
  2810   0034AE  0E00               	movlw	0
  2811   0034B0  22DD               	addwfc	postdec2,f,c
  2812   0034B2  EF71  F01A         	goto	l1549
  2813   0034B6                     l5176:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2816   0034B6  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2817   0034BA  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2818   0034BE  CFDE FFF6          	movff	postinc2,tblptrl
  2819   0034C2  CFDD FFF7          	movff	postdec2,tblptrh
  2820   0034C6                     	if	0	;tblptru may be non-zero
  2821   0034C6                     	endif
  2822   0034C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2823   0034C6  0E00               	movlw	low (__mediumconst shr (0+16))
  2824   0034C8  6EF8               	movwf	tblptru,c
  2825   0034CA                     	endif
  2826   0034CA  0008               	tblrd		*
  2827   0034CC  50F5               	movf	tablat,w,c
  2828   0034CE  6E01               	movwf	fputc@c^0,c
  2829   0034D0  6A02               	clrf	(fputc@c+1)^0,c
  2830   0034D2  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2831   0034D6  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2832   0034DA  EC2C  F026         	call	_fputc	;wreg free
  2833   0034DE  EF52  F01A         	goto	l5172
  2834   0034E2                     l1549:
  2835   0034E2  0012               	return		;funcret
  2836   0034E4                     __end_of_vfpfcnvrt:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _efgtoa *****************
  2840 ;; Defined at:
  2841 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2844 ;;		 -> sprintf@f(11), 
  2845 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  2846 ;;  c               1    6[BANK0 ] unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  u               4   49[BANK0 ] struct flui
  2849 ;;  g               4   45[BANK0 ] struct flui
  2850 ;;  l               4   38[BANK0 ] struct flui
  2851 ;;  h               4   34[BANK0 ] struct flui
  2852 ;;  ou              4   28[BANK0 ] struct flui
  2853 ;;  n               2   43[BANK0 ] int 
  2854 ;;  i               2   32[BANK0 ] int 
  2855 ;;  w               2   26[BANK0 ] int 
  2856 ;;  e               2   24[BANK0 ] int 
  2857 ;;  m               2   22[BANK0 ] int 
  2858 ;;  d               2   20[BANK0 ] int 
  2859 ;;  t               2   13[BANK0 ] int 
  2860 ;;  p               2   11[BANK0 ] int 
  2861 ;;  ne              2    9[BANK0 ] int 
  2862 ;;  sign            1   42[BANK0 ] unsigned char 
  2863 ;;  nmode           1   19[BANK0 ] unsigned char 
  2864 ;;  mode            1   18[BANK0 ] unsigned char 
  2865 ;;  pp              1   17[BANK0 ] unsigned char 
  2866 ;;  esign           1    0        unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2876 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;Total ram usage:       53 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; Hardware stack levels required when called: 5
  2883 ;; This function calls:
  2884 ;;		___fladd
  2885 ;;		___fldiv
  2886 ;;		___fleq
  2887 ;;		___flge
  2888 ;;		___flmul
  2889 ;;		___flneg
  2890 ;;		___flsub
  2891 ;;		___fltol
  2892 ;;		___fpclassifyf
  2893 ;;		_floorf
  2894 ;;		_labs
  2895 ;;		_memcpy
  2896 ;;		_pad
  2897 ;;		_strcpy
  2898 ;; This function is called by:
  2899 ;;		_vfpfcnvrt
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           	psect	text5
  2904   000E3E                     __ptext5:
  2905                           	callstack 0
  2906   000E3E                     _efgtoa:
  2907                           	callstack 22
  2908   000E3E                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  2910   000E3E  0E00               	movlw	0
  2911   000E40  0100               	movlb	0	; () banked
  2912   000E42  6F8A               	movwf	efgtoa@sign& (0+255),b
  2913   000E44                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  2916   000E44  C062  F08D         	movff	efgtoa@f,efgtoa@g
  2917   000E48  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  2918   000E4C  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  2919   000E50  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  2920   000E54                     
  2921                           ; BSR set to: 0
  2922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  2923   000E54  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2924   000E56  EF31  F007         	goto	u4590
  2925   000E5A  EF2F  F007         	goto	u4591
  2926   000E5E                     u4591:
  2927   000E5E  EF45  F007         	goto	l4834
  2928   000E62                     u4590:
  2929   000E62                     
  2930                           ; BSR set to: 0
  2931                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  2932   000E62  0E01               	movlw	1
  2933   000E64  6F8A               	movwf	efgtoa@sign& (0+255),b
  2934   000E66                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  2937   000E66  C08D  F001         	movff	efgtoa@g,___flneg@f1
  2938   000E6A  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2939   000E6E  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2940   000E72  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2941   000E76  ECF1  F02F         	call	___flneg	;wreg free
  2942   000E7A  C001  F08D         	movff	?___flneg,efgtoa@g
  2943   000E7E  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  2944   000E82  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  2945   000E86  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  2946   000E8A                     l4834:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  2949   000E8A  0E00               	movlw	0
  2950   000E8C  0100               	movlb	0	; () banked
  2951   000E8E  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  2952   000E90  0E00               	movlw	0
  2953   000E92  6F8B               	movwf	efgtoa@n& (0+255),b
  2954   000E94                     
  2955                           ; BSR set to: 0
  2956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  2957   000E94  C0E7  F07A         	movff	_width,efgtoa@w
  2958   000E98  C0E8  F07B         	movff	_width+1,efgtoa@w+1
  2959   000E9C                     
  2960                           ; BSR set to: 0
  2961                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  2962   000E9C  518A               	movf	efgtoa@sign& (0+255),w,b
  2963   000E9E  B4D8               	btfsc	status,2,c
  2964   000EA0  EF54  F007         	goto	u4601
  2965   000EA4  EF56  F007         	goto	u4600
  2966   000EA8                     u4601:
  2967   000EA8  EF6A  F007         	goto	l4848
  2968   000EAC                     u4600:
  2969   000EAC                     
  2970                           ; BSR set to: 0
  2971                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  2972   000EAC  518A               	movf	efgtoa@sign& (0+255),w,b
  2973   000EAE  A4D8               	btfss	status,2,c
  2974   000EB0  EF5C  F007         	goto	u4611
  2975   000EB4  EF5E  F007         	goto	u4610
  2976   000EB8                     u4611:
  2977   000EB8  EF64  F007         	goto	l4844
  2978   000EBC                     u4610:
  2979   000EBC                     
  2980                           ; BSR set to: 0
  2981   000EBC  0E00               	movlw	0
  2982   000EBE  6F70               	movwf	(_efgtoa$2902+1)& (0+255),b
  2983   000EC0  0E2B               	movlw	43
  2984   000EC2  6F6F               	movwf	_efgtoa$2902& (0+255),b
  2985   000EC4  EF68  F007         	goto	l4846
  2986   000EC8                     l4844:
  2987                           
  2988                           ; BSR set to: 0
  2989   000EC8  0E00               	movlw	0
  2990   000ECA  6F70               	movwf	(_efgtoa$2902+1)& (0+255),b
  2991   000ECC  0E2D               	movlw	45
  2992   000ECE  6F6F               	movwf	_efgtoa$2902& (0+255),b
  2993   000ED0                     l4846:
  2994                           
  2995                           ; BSR set to: 0
  2996   000ED0  C06F  F08A         	movff	_efgtoa$2902,efgtoa@sign
  2997   000ED4                     l4848:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3001   000ED4  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3002   000ED8  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3003   000EDC  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3004   000EE0  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3005   000EE4  ECAD  F025         	call	___fpclassifyf	;wreg free
  3006   000EE8  0401               	decf	?___fpclassifyf^0,w,c
  3007   000EEA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3008   000EEC  A4D8               	btfss	status,2,c
  3009   000EEE  EF7B  F007         	goto	u4621
  3010   000EF2  EF7D  F007         	goto	u4620
  3011   000EF6                     u4621:
  3012   000EF6  EFB0  F007         	goto	l4866
  3013   000EFA                     u4620:
  3014   000EFA                     
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3016   000EFA  0100               	movlb	0	; () banked
  3017   000EFC  518A               	movf	efgtoa@sign& (0+255),w,b
  3018   000EFE  B4D8               	btfsc	status,2,c
  3019   000F00  EF84  F007         	goto	u4631
  3020   000F04  EF86  F007         	goto	u4630
  3021   000F08                     u4631:
  3022   000F08  EF8F  F007         	goto	l4858
  3023   000F0C                     u4630:
  3024   000F0C                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3027   000F0C  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3028   000F10                     
  3029                           ; BSR set to: 0
  3030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3031   000F10  077A               	decf	efgtoa@w& (0+255),f,b
  3032   000F12  A0D8               	btfss	status,0,c
  3033   000F14  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3034   000F16                     
  3035                           ; BSR set to: 0
  3036                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3037   000F16  0E00               	movlw	0
  3038   000F18  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3039   000F1A  0E01               	movlw	1
  3040   000F1C  6F8B               	movwf	efgtoa@n& (0+255),b
  3041   000F1E                     l4858:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3045   000F1E  0EA0               	movlw	low _dbuf
  3046   000F20  258B               	addwf	efgtoa@n& (0+255),w,b
  3047   000F22  6E01               	movwf	strcpy@dest^0,c
  3048   000F24  0E02               	movlw	high _dbuf
  3049   000F26  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3050   000F28  6E02               	movwf	(strcpy@dest+1)^0,c
  3051   000F2A  0E34               	movlw	low STR_2
  3052   000F2C  6E03               	movwf	strcpy@src^0,c
  3053   000F2E  0E0E               	movlw	high STR_2
  3054   000F30  6E04               	movwf	(strcpy@src+1)^0,c
  3055   000F32  EC2E  F02F         	call	_strcpy	;wreg free
  3056   000F36                     l4860:
  3057                           
  3058                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3059   000F36  0100               	movlb	0	; () banked
  3060   000F38  0EFD               	movlw	253
  3061   000F3A  277A               	addwf	efgtoa@w& (0+255),f,b
  3062   000F3C  0EFF               	movlw	255
  3063   000F3E  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3064   000F40                     
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3067   000F40  C060  F011         	movff	efgtoa@fp,pad@fp
  3068   000F44  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3069   000F48  0EA0               	movlw	low _dbuf
  3070   000F4A  6E13               	movwf	pad@buf^0,c
  3071   000F4C  0E02               	movlw	high _dbuf
  3072   000F4E  6E14               	movwf	(pad@buf+1)^0,c
  3073   000F50  C07A  F015         	movff	efgtoa@w,pad@p
  3074   000F54  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3075   000F58  ECB0  F029         	call	_pad	;wreg free
  3076   000F5C  EF1B  F00C         	goto	l1501
  3077   000F60                     l4866:
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3080   000F60  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3081   000F64  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3082   000F68  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3083   000F6C  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3084   000F70  ECAD  F025         	call	___fpclassifyf	;wreg free
  3085   000F74  5001               	movf	?___fpclassifyf^0,w,c
  3086   000F76  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3087   000F78  A4D8               	btfss	status,2,c
  3088   000F7A  EFC1  F007         	goto	u4641
  3089   000F7E  EFC3  F007         	goto	u4640
  3090   000F82                     u4641:
  3091   000F82  EFE3  F007         	goto	l4884
  3092   000F86                     u4640:
  3093   000F86                     
  3094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3095   000F86  0100               	movlb	0	; () banked
  3096   000F88  518A               	movf	efgtoa@sign& (0+255),w,b
  3097   000F8A  B4D8               	btfsc	status,2,c
  3098   000F8C  EFCA  F007         	goto	u4651
  3099   000F90  EFCC  F007         	goto	u4650
  3100   000F94                     u4651:
  3101   000F94  EFD5  F007         	goto	l4876
  3102   000F98                     u4650:
  3103   000F98                     
  3104                           ; BSR set to: 0
  3105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3106   000F98  C08A  F2A0         	movff	efgtoa@sign,_dbuf
  3107   000F9C                     
  3108                           ; BSR set to: 0
  3109                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3110   000F9C  077A               	decf	efgtoa@w& (0+255),f,b
  3111   000F9E  A0D8               	btfss	status,0,c
  3112   000FA0  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3113   000FA2                     
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3116   000FA2  0E00               	movlw	0
  3117   000FA4  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3118   000FA6  0E01               	movlw	1
  3119   000FA8  6F8B               	movwf	efgtoa@n& (0+255),b
  3120   000FAA                     l4876:
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3124   000FAA  0EA0               	movlw	low _dbuf
  3125   000FAC  258B               	addwf	efgtoa@n& (0+255),w,b
  3126   000FAE  6E01               	movwf	strcpy@dest^0,c
  3127   000FB0  0E02               	movlw	high _dbuf
  3128   000FB2  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3129   000FB4  6E02               	movwf	(strcpy@dest+1)^0,c
  3130   000FB6  0E38               	movlw	low STR_5
  3131   000FB8  6E03               	movwf	strcpy@src^0,c
  3132   000FBA  0E0E               	movlw	high STR_5
  3133   000FBC  6E04               	movwf	(strcpy@src+1)^0,c
  3134   000FBE  EC2E  F02F         	call	_strcpy	;wreg free
  3135   000FC2  EF9B  F007         	goto	l4860
  3136   000FC6                     l4884:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3139   000FC6  0E00               	movlw	0
  3140   000FC8  0100               	movlb	0	; () banked
  3141   000FCA  6F91               	movwf	efgtoa@u& (0+255),b
  3142   000FCC  0E00               	movlw	0
  3143   000FCE  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3144   000FD0  0E80               	movlw	128
  3145   000FD2  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3146   000FD4  0E3F               	movlw	63
  3147   000FD6  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3150   000FD8  0E00               	movlw	0
  3151   000FDA  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3152   000FDC  0E00               	movlw	0
  3153   000FDE  6F78               	movwf	efgtoa@e& (0+255),b
  3154   000FE0                     
  3155                           ; BSR set to: 0
  3156                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3157   000FE0  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3158   000FE4  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3159   000FE8  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3160   000FEC  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3161   000FF0  0E00               	movlw	0
  3162   000FF2  6E36               	movwf	___fleq@ff2^0,c
  3163   000FF4  0E00               	movlw	0
  3164   000FF6  6E37               	movwf	(___fleq@ff2+1)^0,c
  3165   000FF8  0E00               	movlw	0
  3166   000FFA  6E38               	movwf	(___fleq@ff2+2)^0,c
  3167   000FFC  0E00               	movlw	0
  3168   000FFE  6E39               	movwf	(___fleq@ff2+3)^0,c
  3169   001000  EC9C  F027         	call	___fleq	;wreg free
  3170   001004  B0D8               	btfsc	status,0,c
  3171   001006  EF07  F008         	goto	u4661
  3172   00100A  EF09  F008         	goto	u4660
  3173   00100E                     u4661:
  3174   00100E  EFE8  F008         	goto	l1504
  3175   001012                     u4660:
  3176   001012  EF16  F008         	goto	l4892
  3177   001016                     l1506:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3180   001016  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3181   00101A  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3182   00101E  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3183   001022  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3184   001026                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3186   001026  0100               	movlb	0	; () banked
  3187   001028  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3188   00102A  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3189   00102C                     l4892:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3192   00102C  C091  F011         	movff	efgtoa@u,___flmul@b
  3193   001030  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3194   001034  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3195   001038  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3196   00103C  0E00               	movlw	0
  3197   00103E  6E15               	movwf	___flmul@a^0,c
  3198   001040  0E00               	movlw	0
  3199   001042  6E16               	movwf	(___flmul@a+1)^0,c
  3200   001044  0E20               	movlw	32
  3201   001046  6E17               	movwf	(___flmul@a+2)^0,c
  3202   001048  0E41               	movlw	65
  3203   00104A  6E18               	movwf	(___flmul@a+3)^0,c
  3204   00104C  EC76  F013         	call	___flmul	;wreg free
  3205   001050  C011  F07C         	movff	?___flmul,efgtoa@ou
  3206   001054  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3207   001058  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3208   00105C  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3209   001060  0100               	movlb	0	; () banked
  3210   001062  517C               	movf	efgtoa@ou& (0+255),w,b
  3211   001064  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3212   001066  6E01               	movwf	labs@a^0,c
  3213   001068  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3214   00106A  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3215   00106C  6E02               	movwf	(labs@a+1)^0,c
  3216   00106E  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3217   001070  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3218   001072  6E03               	movwf	(labs@a+2)^0,c
  3219   001074  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3220   001076  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3221   001078  6E04               	movwf	(labs@a+3)^0,c
  3222   00107A  ECD0  F02A         	call	_labs	;wreg free
  3223   00107E  BE04               	btfsc	(?_labs+3)^0,7,c
  3224   001080  EF4D  F008         	goto	u4671
  3225   001084  5004               	movf	(?_labs+3)^0,w,c
  3226   001086  1003               	iorwf	(?_labs+2)^0,w,c
  3227   001088  1002               	iorwf	(?_labs+1)^0,w,c
  3228   00108A  E109               	bnz	u4670
  3229   00108C  0E02               	movlw	2
  3230   00108E  5C01               	subwf	?_labs^0,w,c
  3231   001090  A0D8               	btfss	status,0,c
  3232   001092  EF4D  F008         	goto	u4671
  3233   001096  EF4F  F008         	goto	u4670
  3234   00109A                     u4671:
  3235   00109A  EF0B  F008         	goto	l1506
  3236   00109E                     u4670:
  3237   00109E  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3238   0010A2  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3239   0010A6  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3240   0010AA  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3241   0010AE  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3242   0010B2  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3243   0010B6  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3244   0010BA  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3245   0010BE  EC2B  F025         	call	___flge	;wreg free
  3246   0010C2  A0D8               	btfss	status,0,c
  3247   0010C4  EF66  F008         	goto	u4681
  3248   0010C8  EF68  F008         	goto	u4680
  3249   0010CC                     u4681:
  3250   0010CC  EF0B  F008         	goto	l1506
  3251   0010D0                     u4680:
  3252   0010D0                     
  3253                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3254   0010D0  0100               	movlb	0	; () banked
  3255   0010D2  5191               	movf	efgtoa@u& (0+255),w,b
  3256   0010D4  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3257   0010D6  6E01               	movwf	labs@a^0,c
  3258   0010D8  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3259   0010DA  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3260   0010DC  6E02               	movwf	(labs@a+1)^0,c
  3261   0010DE  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3262   0010E0  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3263   0010E2  6E03               	movwf	(labs@a+2)^0,c
  3264   0010E4  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3265   0010E6  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3266   0010E8  6E04               	movwf	(labs@a+3)^0,c
  3267   0010EA  ECD0  F02A         	call	_labs	;wreg free
  3268   0010EE  BE04               	btfsc	(?_labs+3)^0,7,c
  3269   0010F0  EF87  F008         	goto	u4690
  3270   0010F4  5004               	movf	(?_labs+3)^0,w,c
  3271   0010F6  1003               	iorwf	(?_labs+2)^0,w,c
  3272   0010F8  1002               	iorwf	(?_labs+1)^0,w,c
  3273   0010FA  E107               	bnz	u4691
  3274   0010FC  0E02               	movlw	2
  3275   0010FE  5C01               	subwf	?_labs^0,w,c
  3276   001100  B0D8               	btfsc	status,0,c
  3277   001102  EF85  F008         	goto	u4691
  3278   001106  EF87  F008         	goto	u4690
  3279   00110A                     u4691:
  3280   00110A  EFCF  F008         	goto	l4910
  3281   00110E                     u4690:
  3282   00110E                     l4900:
  3283                           
  3284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3285   00110E  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3286   001112  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3287   001116  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3288   00111A  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3289                           
  3290                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3291   00111E  EFE8  F008         	goto	l1504
  3292   001122                     l4902:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3295   001122  C091  F032         	movff	efgtoa@u,___fldiv@b
  3296   001126  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3297   00112A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3298   00112E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3299   001132  0E00               	movlw	0
  3300   001134  6E36               	movwf	___fldiv@a^0,c
  3301   001136  0E00               	movlw	0
  3302   001138  6E37               	movwf	(___fldiv@a+1)^0,c
  3303   00113A  0E20               	movlw	32
  3304   00113C  6E38               	movwf	(___fldiv@a+2)^0,c
  3305   00113E  0E41               	movlw	65
  3306   001140  6E39               	movwf	(___fldiv@a+3)^0,c
  3307   001142  EC8B  F015         	call	___fldiv	;wreg free
  3308   001146  C032  F091         	movff	?___fldiv,efgtoa@u
  3309   00114A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3310   00114E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3311   001152  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3312   001156                     
  3313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3314   001156  0100               	movlb	0	; () banked
  3315   001158  0778               	decf	efgtoa@e& (0+255),f,b
  3316   00115A  A0D8               	btfss	status,0,c
  3317   00115C  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3318   00115E                     
  3319                           ; BSR set to: 0
  3320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3321   00115E  5191               	movf	efgtoa@u& (0+255),w,b
  3322   001160  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3323   001162  6E01               	movwf	labs@a^0,c
  3324   001164  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3325   001166  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3326   001168  6E02               	movwf	(labs@a+1)^0,c
  3327   00116A  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3328   00116C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3329   00116E  6E03               	movwf	(labs@a+2)^0,c
  3330   001170  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3331   001172  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3332   001174  6E04               	movwf	(labs@a+3)^0,c
  3333   001176  ECD0  F02A         	call	_labs	;wreg free
  3334   00117A  BE04               	btfsc	(?_labs+3)^0,7,c
  3335   00117C  EFCD  F008         	goto	u4700
  3336   001180  5004               	movf	(?_labs+3)^0,w,c
  3337   001182  1003               	iorwf	(?_labs+2)^0,w,c
  3338   001184  1002               	iorwf	(?_labs+1)^0,w,c
  3339   001186  E107               	bnz	u4701
  3340   001188  0E02               	movlw	2
  3341   00118A  5C01               	subwf	?_labs^0,w,c
  3342   00118C  B0D8               	btfsc	status,0,c
  3343   00118E  EFCB  F008         	goto	u4701
  3344   001192  EFCD  F008         	goto	u4700
  3345   001196                     u4701:
  3346   001196  EFCF  F008         	goto	l4910
  3347   00119A                     u4700:
  3348   00119A  EF87  F008         	goto	l4900
  3349   00119E                     l4910:
  3350                           
  3351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3352   00119E  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3353   0011A2  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3354   0011A6  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3355   0011AA  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3356   0011AE  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3357   0011B2  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3358   0011B6  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3359   0011BA  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3360   0011BE  EC2B  F025         	call	___flge	;wreg free
  3361   0011C2  A0D8               	btfss	status,0,c
  3362   0011C4  EFE6  F008         	goto	u4711
  3363   0011C8  EFE8  F008         	goto	u4710
  3364   0011CC                     u4711:
  3365   0011CC  EF91  F008         	goto	l4902
  3366   0011D0                     u4710:
  3367   0011D0                     l1504:
  3368                           
  3369                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3370   0011D0  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3373   0011D4  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3374   0011D8                     
  3375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3376   0011D8  0100               	movlb	0	; () banked
  3377   0011DA  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  3378   0011DC  EFF2  F008         	goto	u4721
  3379   0011E0  EFF4  F008         	goto	u4720
  3380   0011E4                     u4721:
  3381   0011E4  EFFA  F008         	goto	l4916
  3382   0011E8                     u4720:
  3383   0011E8                     
  3384                           ; BSR set to: 0
  3385   0011E8  C0E9  F06B         	movff	_prec,efgtoa@p
  3386   0011EC  C0EA  F06C         	movff	_prec+1,efgtoa@p+1
  3387   0011F0  EFFE  F008         	goto	l4918
  3388   0011F4                     l4916:
  3389                           
  3390                           ; BSR set to: 0
  3391   0011F4  0E00               	movlw	0
  3392   0011F6  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3393   0011F8  0E06               	movlw	6
  3394   0011FA  6F6B               	movwf	efgtoa@p& (0+255),b
  3395   0011FC                     l4918:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3399   0011FC  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3400   001200  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3401   001204                     
  3402                           ; BSR set to: 0
  3403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3404   001204  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3405   001206  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3406   001208                     
  3407                           ; BSR set to: 0
  3408                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3409   001208  0E66               	movlw	102
  3410   00120A  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3411   00120C  A4D8               	btfss	status,2,c
  3412   00120E  EF0B  F009         	goto	u4731
  3413   001212  EF0D  F009         	goto	u4730
  3414   001216                     u4731:
  3415   001216  EF2D  F009         	goto	l4932
  3416   00121A                     u4730:
  3417   00121A                     
  3418                           ; BSR set to: 0
  3419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  3420   00121A  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3421   00121C  EF14  F009         	goto	u4740
  3422   001220  EF12  F009         	goto	u4741
  3423   001224                     u4741:
  3424   001224  EF20  F009         	goto	l4928
  3425   001228                     u4740:
  3426   001228                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  3429   001228  0E00               	movlw	0
  3430   00122A  6F91               	movwf	efgtoa@u& (0+255),b
  3431   00122C  0E00               	movlw	0
  3432   00122E  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3433   001230  0E80               	movlw	128
  3434   001232  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3435   001234  0E3F               	movlw	63
  3436   001236  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3437                           
  3438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  3439   001238  0E00               	movlw	0
  3440   00123A  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3441   00123C  0E00               	movlw	0
  3442   00123E  6F78               	movwf	efgtoa@e& (0+255),b
  3443   001240                     l4928:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  3447   001240  0E67               	movlw	103
  3448   001242  1972               	xorwf	efgtoa@mode& (0+255),w,b
  3449   001244  B4D8               	btfsc	status,2,c
  3450   001246  EF27  F009         	goto	u4751
  3451   00124A  EF29  F009         	goto	u4750
  3452   00124E                     u4751:
  3453   00124E  EF2D  F009         	goto	l4932
  3454   001252                     u4750:
  3455   001252                     
  3456                           ; BSR set to: 0
  3457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  3458   001252  5178               	movf	efgtoa@e& (0+255),w,b
  3459   001254  2776               	addwf	efgtoa@m& (0+255),f,b
  3460   001256  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  3461   001258  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3462   00125A                     l4932:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  3466   00125A  0E00               	movlw	0
  3467   00125C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3468   00125E  0E00               	movlw	0
  3469   001260  6F80               	movwf	efgtoa@i& (0+255),b
  3470   001262                     
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  3473   001262  C08D  F082         	movff	efgtoa@g,efgtoa@h
  3474   001266  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3475   00126A  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3476   00126E  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3477   001272                     
  3478                           ; BSR set to: 0
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  3480   001272  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  3481   001276  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  3482   00127A  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  3483   00127E  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3486   001282  EFBE  F009         	goto	l4946
  3487   001286                     l4938:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  3491   001286  C082  F032         	movff	efgtoa@h,___fldiv@b
  3492   00128A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3493   00128E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3494   001292  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3495   001296  C091  F036         	movff	efgtoa@u,___fldiv@a
  3496   00129A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3497   00129E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3498   0012A2  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3499   0012A6  EC8B  F015         	call	___fldiv	;wreg free
  3500   0012AA  C032  F04B         	movff	?___fldiv,floorf@x
  3501   0012AE  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3502   0012B2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3503   0012B6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3504   0012BA  ECC3  F01F         	call	_floorf	;wreg free
  3505   0012BE  C04B  F086         	movff	?_floorf,efgtoa@l
  3506   0012C2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3507   0012C6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3508   0012CA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3509                           
  3510                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  3511   0012CE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3512   0012D2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3513   0012D6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3514   0012DA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3515   0012DE  ECA8  F024         	call	___fltol	;wreg free
  3516   0012E2  C001  F074         	movff	?___fltol,efgtoa@d
  3517   0012E6  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3518   0012EA                     
  3519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  3520   0012EA  C082  F02A         	movff	efgtoa@h,___flsub@b
  3521   0012EE  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3522   0012F2  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3523   0012F6  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3524   0012FA  C086  F015         	movff	efgtoa@l,___flmul@a
  3525   0012FE  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3526   001302  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3527   001306  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3528   00130A  C091  F011         	movff	efgtoa@u,___flmul@b
  3529   00130E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3530   001312  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3531   001316  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3532   00131A  EC76  F013         	call	___flmul	;wreg free
  3533   00131E  C011  F02E         	movff	?___flmul,___flsub@a
  3534   001322  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3535   001326  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3536   00132A  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3537   00132E  EC0B  F02F         	call	___flsub	;wreg free
  3538   001332  C02A  F082         	movff	?___flsub,efgtoa@h
  3539   001336  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3540   00133A  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3541   00133E  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3542   001342                     
  3543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  3544   001342  C091  F032         	movff	efgtoa@u,___fldiv@b
  3545   001346  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3546   00134A  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3547   00134E  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3548   001352  0E00               	movlw	0
  3549   001354  6E36               	movwf	___fldiv@a^0,c
  3550   001356  0E00               	movlw	0
  3551   001358  6E37               	movwf	(___fldiv@a+1)^0,c
  3552   00135A  0E20               	movlw	32
  3553   00135C  6E38               	movwf	(___fldiv@a+2)^0,c
  3554   00135E  0E41               	movlw	65
  3555   001360  6E39               	movwf	(___fldiv@a+3)^0,c
  3556   001362  EC8B  F015         	call	___fldiv	;wreg free
  3557   001366  C032  F091         	movff	?___fldiv,efgtoa@u
  3558   00136A  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3559   00136E  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3560   001372  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3561   001376                     
  3562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  3563   001376  0100               	movlb	0	; () banked
  3564   001378  4B80               	infsnz	efgtoa@i& (0+255),f,b
  3565   00137A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  3566   00137C                     l4946:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  3570   00137C  5176               	movf	efgtoa@m& (0+255),w,b
  3571   00137E  5D80               	subwf	efgtoa@i& (0+255),w,b
  3572   001380  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  3573   001382  0A80               	xorlw	128
  3574   001384  6F67               	movwf	??_efgtoa& (0+255),b
  3575   001386  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  3576   001388  0A80               	xorlw	128
  3577   00138A  5967               	subwfb	??_efgtoa& (0+255),w,b
  3578   00138C  A0D8               	btfss	status,0,c
  3579   00138E  EFCB  F009         	goto	u4761
  3580   001392  EFCD  F009         	goto	u4760
  3581   001396                     u4761:
  3582   001396  EF43  F009         	goto	l4938
  3583   00139A                     u4760:
  3584   00139A                     
  3585                           ; BSR set to: 0
  3586                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  3587   00139A  C091  F011         	movff	efgtoa@u,___flmul@b
  3588   00139E  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3589   0013A2  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3590   0013A6  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3591   0013AA  0E00               	movlw	0
  3592   0013AC  6E15               	movwf	___flmul@a^0,c
  3593   0013AE  0E00               	movlw	0
  3594   0013B0  6E16               	movwf	(___flmul@a+1)^0,c
  3595   0013B2  0EA0               	movlw	160
  3596   0013B4  6E17               	movwf	(___flmul@a+2)^0,c
  3597   0013B6  0E40               	movlw	64
  3598   0013B8  6E18               	movwf	(___flmul@a+3)^0,c
  3599   0013BA  EC76  F013         	call	___flmul	;wreg free
  3600   0013BE  C011  F086         	movff	?___flmul,efgtoa@l
  3601   0013C2  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  3602   0013C6  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  3603   0013CA  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  3604   0013CE                     
  3605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  3606   0013CE  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3607   0013D2  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3608   0013D6  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3609   0013DA  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3610   0013DE  C086  F02E         	movff	efgtoa@l,___flge@ff2
  3611   0013E2  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  3612   0013E6  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  3613   0013EA  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  3614   0013EE  EC2B  F025         	call	___flge	;wreg free
  3615   0013F2  B0D8               	btfsc	status,0,c
  3616   0013F4  EFFE  F009         	goto	u4771
  3617   0013F8  EF00  F00A         	goto	u4770
  3618   0013FC                     u4771:
  3619   0013FC  EF0B  F00A         	goto	l4954
  3620   001400                     u4770:
  3621   001400                     
  3622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  3623   001400  0E00               	movlw	0
  3624   001402  0100               	movlb	0	; () banked
  3625   001404  6F86               	movwf	efgtoa@l& (0+255),b
  3626   001406  0E00               	movlw	0
  3627   001408  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3628   00140A  0E00               	movlw	0
  3629   00140C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3630   00140E  0E00               	movlw	0
  3631   001410  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3632                           
  3633                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  3634   001412  EF34  F00A         	goto	l4960
  3635   001416                     l4954:
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  3638   001416  C082  F032         	movff	efgtoa@h,___fleq@ff1
  3639   00141A  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  3640   00141E  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  3641   001422  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  3642   001426  C086  F036         	movff	efgtoa@l,___fleq@ff2
  3643   00142A  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  3644   00142E  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  3645   001432  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  3646   001436  EC9C  F027         	call	___fleq	;wreg free
  3647   00143A  A0D8               	btfss	status,0,c
  3648   00143C  EF22  F00A         	goto	u4781
  3649   001440  EF24  F00A         	goto	u4780
  3650   001444                     u4781:
  3651   001444  EF34  F00A         	goto	l4960
  3652   001448                     u4780:
  3653   001448  0100               	movlb	0	; () banked
  3654   00144A  B174               	btfsc	efgtoa@d& (0+255),0,b
  3655   00144C  EF2A  F00A         	goto	u4791
  3656   001450  EF2C  F00A         	goto	u4790
  3657   001454                     u4791:
  3658   001454  EF34  F00A         	goto	l4960
  3659   001458                     u4790:
  3660   001458                     
  3661                           ; BSR set to: 0
  3662                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  3663   001458  0E00               	movlw	0
  3664   00145A  6F86               	movwf	efgtoa@l& (0+255),b
  3665   00145C  0E00               	movlw	0
  3666   00145E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3667   001460  0E00               	movlw	0
  3668   001462  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3669   001464  0E00               	movlw	0
  3670   001466  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3671   001468                     l4960:
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  3674   001468  C08D  F001         	movff	efgtoa@g,___fladd@b
  3675   00146C  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  3676   001470  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  3677   001474  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  3678   001478  C086  F005         	movff	efgtoa@l,___fladd@a
  3679   00147C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3680   001480  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3681   001484  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3682   001488  EC16  F011         	call	___fladd	;wreg free
  3683   00148C  C001  F082         	movff	?___fladd,efgtoa@h
  3684   001490  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3685   001494  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3686   001498  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3687   00149C                     
  3688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  3689   00149C  C082  F02A         	movff	efgtoa@h,___flge@ff1
  3690   0014A0  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  3691   0014A4  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  3692   0014A8  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  3693   0014AC  0E00               	movlw	0
  3694   0014AE  6E15               	movwf	___flmul@a^0,c
  3695   0014B0  0E00               	movlw	0
  3696   0014B2  6E16               	movwf	(___flmul@a+1)^0,c
  3697   0014B4  0E20               	movlw	32
  3698   0014B6  6E17               	movwf	(___flmul@a+2)^0,c
  3699   0014B8  0E41               	movlw	65
  3700   0014BA  6E18               	movwf	(___flmul@a+3)^0,c
  3701   0014BC  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3702   0014C0  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3703   0014C4  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3704   0014C8  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3705   0014CC  EC76  F013         	call	___flmul	;wreg free
  3706   0014D0  C011  F02E         	movff	?___flmul,___flge@ff2
  3707   0014D4  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  3708   0014D8  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  3709   0014DC  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  3710   0014E0  EC2B  F025         	call	___flge	;wreg free
  3711   0014E4  A0D8               	btfss	status,0,c
  3712   0014E6  EF77  F00A         	goto	u4801
  3713   0014EA  EF79  F00A         	goto	u4800
  3714   0014EE                     u4801:
  3715   0014EE  EFA2  F00A         	goto	l4972
  3716   0014F2                     u4800:
  3717   0014F2                     
  3718                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  3719   0014F2  0100               	movlb	0	; () banked
  3720   0014F4  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3721   0014F6  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3722   0014F8                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  3725   0014F8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  3726   0014FC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  3727   001500  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  3728   001504  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  3729   001508  0E00               	movlw	0
  3730   00150A  6E15               	movwf	___flmul@a^0,c
  3731   00150C  0E00               	movlw	0
  3732   00150E  6E16               	movwf	(___flmul@a+1)^0,c
  3733   001510  0E20               	movlw	32
  3734   001512  6E17               	movwf	(___flmul@a+2)^0,c
  3735   001514  0E41               	movlw	65
  3736   001516  6E18               	movwf	(___flmul@a+3)^0,c
  3737   001518  EC76  F013         	call	___flmul	;wreg free
  3738   00151C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3739   001520  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3740   001524  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3741   001528  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3742   00152C                     
  3743                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  3744   00152C  0E66               	movlw	102
  3745   00152E  0100               	movlb	0	; () banked
  3746   001530  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3747   001532  A4D8               	btfss	status,2,c
  3748   001534  EF9E  F00A         	goto	u4811
  3749   001538  EFA0  F00A         	goto	u4810
  3750   00153C                     u4811:
  3751   00153C  EFA2  F00A         	goto	l4972
  3752   001540                     u4810:
  3753   001540                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  3756   001540  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3757   001542  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3758   001544                     l4972:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  3761   001544  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3762   001548  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3763   00154C  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3764   001550  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3765   001554                     
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  3767   001554  C078  F069         	movff	efgtoa@e,efgtoa@ne
  3768   001558  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  3769   00155C                     
  3770                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  3771   00155C  0E00               	movlw	0
  3772   00155E  0100               	movlb	0	; () banked
  3773   001560  6F71               	movwf	efgtoa@pp& (0+255),b
  3774   001562                     
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  3777   001562  0E00               	movlw	0
  3778   001564  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  3779   001566  0E00               	movlw	0
  3780   001568  6F6D               	movwf	efgtoa@t& (0+255),b
  3781   00156A                     
  3782                           ; BSR set to: 0
  3783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  3784   00156A  0E00               	movlw	0
  3785   00156C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  3786   00156E  0E00               	movlw	0
  3787   001570  6F80               	movwf	efgtoa@i& (0+255),b
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3790   001572  EFA0  F00B         	goto	l5022
  3791   001576                     l4982:
  3792                           
  3793                           ; BSR set to: 0
  3794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  3795   001576  C082  F032         	movff	efgtoa@h,___fldiv@b
  3796   00157A  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  3797   00157E  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  3798   001582  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  3799   001586  C091  F036         	movff	efgtoa@u,___fldiv@a
  3800   00158A  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  3801   00158E  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  3802   001592  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  3803   001596  EC8B  F015         	call	___fldiv	;wreg free
  3804   00159A  C032  F04B         	movff	?___fldiv,floorf@x
  3805   00159E  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  3806   0015A2  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  3807   0015A6  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  3808   0015AA  ECC3  F01F         	call	_floorf	;wreg free
  3809   0015AE  C04B  F086         	movff	?_floorf,efgtoa@l
  3810   0015B2  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  3811   0015B6  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  3812   0015BA  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  3815   0015BE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3816   0015C2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3817   0015C6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3818   0015CA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3819   0015CE  ECA8  F024         	call	___fltol	;wreg free
  3820   0015D2  BE02               	btfsc	(?___fltol+1)^0,7,c
  3821   0015D4  EFF7  F00A         	goto	u4820
  3822   0015D8  5002               	movf	(?___fltol+1)^0,w,c
  3823   0015DA  E107               	bnz	u4821
  3824   0015DC  0E0A               	movlw	10
  3825   0015DE  5C01               	subwf	?___fltol^0,w,c
  3826   0015E0  B0D8               	btfsc	status,0,c
  3827   0015E2  EFF5  F00A         	goto	u4821
  3828   0015E6  EFF7  F00A         	goto	u4820
  3829   0015EA                     u4821:
  3830   0015EA  EF07  F00B         	goto	l4986
  3831   0015EE                     u4820:
  3832   0015EE  C086  F001         	movff	efgtoa@l,___fltol@f1
  3833   0015F2  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3834   0015F6  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3835   0015FA  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3836   0015FE  ECA8  F024         	call	___fltol	;wreg free
  3837   001602  C001  F074         	movff	?___fltol,efgtoa@d
  3838   001606  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  3839   00160A  EF0C  F00B         	goto	l1534
  3840   00160E                     l4986:
  3841   00160E  0E00               	movlw	0
  3842   001610  0100               	movlb	0	; () banked
  3843   001612  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  3844   001614  0E09               	movlw	9
  3845   001616  6F74               	movwf	efgtoa@d& (0+255),b
  3846   001618                     l1534:
  3847                           
  3848                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  3849   001618  0100               	movlb	0	; () banked
  3850   00161A  5171               	movf	efgtoa@pp& (0+255),w,b
  3851   00161C  A4D8               	btfss	status,2,c
  3852   00161E  EF13  F00B         	goto	u4831
  3853   001622  EF15  F00B         	goto	u4830
  3854   001626                     u4831:
  3855   001626  EF3D  F00B         	goto	l5006
  3856   00162A                     u4830:
  3857   00162A                     
  3858                           ; BSR set to: 0
  3859   00162A  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3860   00162C  EF1C  F00B         	goto	u4840
  3861   001630  EF1A  F00B         	goto	u4841
  3862   001634                     u4841:
  3863   001634  EF3D  F00B         	goto	l5006
  3864   001638                     u4840:
  3865   001638                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  3868   001638  0EA0               	movlw	low _dbuf
  3869   00163A  258B               	addwf	efgtoa@n& (0+255),w,b
  3870   00163C  6ED9               	movwf	fsr2l,c
  3871   00163E  0E02               	movlw	high _dbuf
  3872   001640  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3873   001642  6EDA               	movwf	fsr2h,c
  3874   001644  0E2E               	movlw	46
  3875   001646  6EDF               	movwf	indf2,c
  3876   001648                     
  3877                           ; BSR set to: 0
  3878   001648  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3879   00164A  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3880   00164C                     
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  3883   00164C  077A               	decf	efgtoa@w& (0+255),f,b
  3884   00164E  A0D8               	btfss	status,0,c
  3885   001650  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3886   001652                     
  3887                           ; BSR set to: 0
  3888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  3889   001652  0E01               	movlw	1
  3890   001654  6F71               	movwf	efgtoa@pp& (0+255),b
  3891   001656  EF3D  F00B         	goto	l5006
  3892   00165A                     l4998:
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  3896   00165A  0EA0               	movlw	low _dbuf
  3897   00165C  258B               	addwf	efgtoa@n& (0+255),w,b
  3898   00165E  6ED9               	movwf	fsr2l,c
  3899   001660  0E02               	movlw	high _dbuf
  3900   001662  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3901   001664  6EDA               	movwf	fsr2h,c
  3902   001666  0E30               	movlw	48
  3903   001668  6EDF               	movwf	indf2,c
  3904   00166A                     
  3905                           ; BSR set to: 0
  3906   00166A  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3907   00166C  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3908   00166E                     
  3909                           ; BSR set to: 0
  3910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  3911   00166E  077A               	decf	efgtoa@w& (0+255),f,b
  3912   001670  A0D8               	btfss	status,0,c
  3913   001672  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3914   001674                     
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  3917   001674  076D               	decf	efgtoa@t& (0+255),f,b
  3918   001676  A0D8               	btfss	status,0,c
  3919   001678  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  3920   00167A                     l5006:
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  3924   00167A  516D               	movf	efgtoa@t& (0+255),w,b
  3925   00167C  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3926   00167E  A4D8               	btfss	status,2,c
  3927   001680  EF44  F00B         	goto	u4851
  3928   001684  EF46  F00B         	goto	u4850
  3929   001688                     u4851:
  3930   001688  EF2D  F00B         	goto	l4998
  3931   00168C                     u4850:
  3932   00168C                     
  3933                           ; BSR set to: 0
  3934                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3935   00168C  0EA0               	movlw	low _dbuf
  3936   00168E  258B               	addwf	efgtoa@n& (0+255),w,b
  3937   001690  6ED9               	movwf	fsr2l,c
  3938   001692  0E02               	movlw	high _dbuf
  3939   001694  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3940   001696  6EDA               	movwf	fsr2h,c
  3941   001698  5174               	movf	efgtoa@d& (0+255),w,b
  3942   00169A  0F30               	addlw	48
  3943   00169C  6EDF               	movwf	indf2,c
  3944   00169E                     
  3945                           ; BSR set to: 0
  3946   00169E  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  3947   0016A0  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  3948   0016A2                     
  3949                           ; BSR set to: 0
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  3951   0016A2  077A               	decf	efgtoa@w& (0+255),f,b
  3952   0016A4  A0D8               	btfss	status,0,c
  3953   0016A6  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3954   0016A8                     
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  3957   0016A8  C082  F02A         	movff	efgtoa@h,___flsub@b
  3958   0016AC  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3959   0016B0  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3960   0016B4  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3961   0016B8  C086  F015         	movff	efgtoa@l,___flmul@a
  3962   0016BC  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  3963   0016C0  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  3964   0016C4  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  3965   0016C8  C091  F011         	movff	efgtoa@u,___flmul@b
  3966   0016CC  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3967   0016D0  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3968   0016D4  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3969   0016D8  EC76  F013         	call	___flmul	;wreg free
  3970   0016DC  C011  F02E         	movff	?___flmul,___flsub@a
  3971   0016E0  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  3972   0016E4  C013  F030         	movff	?___flmul+2,___flsub@a+2
  3973   0016E8  C014  F031         	movff	?___flmul+3,___flsub@a+3
  3974   0016EC  EC0B  F02F         	call	___flsub	;wreg free
  3975   0016F0  C02A  F082         	movff	?___flsub,efgtoa@h
  3976   0016F4  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3977   0016F8  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3978   0016FC  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3979   001700                     
  3980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  3981   001700  C091  F032         	movff	efgtoa@u,___fldiv@b
  3982   001704  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3983   001708  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3984   00170C  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3985   001710  0E00               	movlw	0
  3986   001712  6E36               	movwf	___fldiv@a^0,c
  3987   001714  0E00               	movlw	0
  3988   001716  6E37               	movwf	(___fldiv@a+1)^0,c
  3989   001718  0E20               	movlw	32
  3990   00171A  6E38               	movwf	(___fldiv@a+2)^0,c
  3991   00171C  0E41               	movlw	65
  3992   00171E  6E39               	movwf	(___fldiv@a+3)^0,c
  3993   001720  EC8B  F015         	call	___fldiv	;wreg free
  3994   001724  C032  F091         	movff	?___fldiv,efgtoa@u
  3995   001728  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3996   00172C  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3997   001730  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3998   001734                     
  3999                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4000   001734  0100               	movlb	0	; () banked
  4001   001736  0769               	decf	efgtoa@ne& (0+255),f,b
  4002   001738  A0D8               	btfss	status,0,c
  4003   00173A  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4004   00173C                     
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4007   00173C  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4008   00173E  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4009   001740                     l5022:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4013   001740  5176               	movf	efgtoa@m& (0+255),w,b
  4014   001742  5D80               	subwf	efgtoa@i& (0+255),w,b
  4015   001744  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4016   001746  0A80               	xorlw	128
  4017   001748  6F67               	movwf	??_efgtoa& (0+255),b
  4018   00174A  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4019   00174C  0A80               	xorlw	128
  4020   00174E  5967               	subwfb	??_efgtoa& (0+255),w,b
  4021   001750  B0D8               	btfsc	status,0,c
  4022   001752  EFAD  F00B         	goto	u4861
  4023   001756  EFAF  F00B         	goto	u4860
  4024   00175A                     u4861:
  4025   00175A  EFBD  F00B         	goto	l5026
  4026   00175E                     u4860:
  4027   00175E                     
  4028                           ; BSR set to: 0
  4029   00175E  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4030   001760  EFBB  F00B         	goto	u4871
  4031   001764  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4032   001766  E109               	bnz	u4870
  4033   001768  0E4B               	movlw	75
  4034   00176A  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4035   00176C  A0D8               	btfss	status,0,c
  4036   00176E  EFBB  F00B         	goto	u4871
  4037   001772  EFBD  F00B         	goto	u4870
  4038   001776                     u4871:
  4039   001776  EFBB  F00A         	goto	l4982
  4040   00177A                     u4870:
  4041   00177A                     l5026:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4045   00177A  0E00               	movlw	0
  4046   00177C  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4047   00177E  0E4F               	movlw	79
  4048   001780  6F80               	movwf	efgtoa@i& (0+255),b
  4049   001782                     
  4050                           ; BSR set to: 0
  4051                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4052   001782  0EA0               	movlw	low _dbuf
  4053   001784  2580               	addwf	efgtoa@i& (0+255),w,b
  4054   001786  6ED9               	movwf	fsr2l,c
  4055   001788  0E02               	movlw	high _dbuf
  4056   00178A  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4057   00178C  6EDA               	movwf	fsr2h,c
  4058   00178E  0E00               	movlw	0
  4059   001790  6EDF               	movwf	indf2,c
  4060   001792                     
  4061                           ; BSR set to: 0
  4062                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4063   001792  0EA0               	movlw	low _dbuf
  4064   001794  6F67               	movwf	??_efgtoa& (0+255),b
  4065   001796  0E02               	movlw	high _dbuf
  4066   001798  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4067   00179A  518B               	movf	efgtoa@n& (0+255),w,b
  4068   00179C  5F67               	subwf	??_efgtoa& (0+255),f,b
  4069   00179E  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4070   0017A0  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4071   0017A2  5180               	movf	efgtoa@i& (0+255),w,b
  4072   0017A4  2567               	addwf	??_efgtoa& (0+255),w,b
  4073   0017A6  6E01               	movwf	memcpy@d1^0,c
  4074   0017A8  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4075   0017AA  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4076   0017AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4077   0017AE  0EA0               	movlw	low _dbuf
  4078   0017B0  6E03               	movwf	memcpy@s1^0,c
  4079   0017B2  0E02               	movlw	high _dbuf
  4080   0017B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4081   0017B6  C08B  F005         	movff	efgtoa@n,memcpy@n
  4082   0017BA  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4083   0017BE  ECF5  F02D         	call	_memcpy	;wreg free
  4084   0017C2                     
  4085                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4086   0017C2  0100               	movlb	0	; () banked
  4087   0017C4  518B               	movf	efgtoa@n& (0+255),w,b
  4088   0017C6  5D80               	subwf	efgtoa@i& (0+255),w,b
  4089   0017C8  6F8B               	movwf	efgtoa@n& (0+255),b
  4090   0017CA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4091   0017CC  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4092   0017CE  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4093   0017D0                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4096   0017D0  518A               	movf	efgtoa@sign& (0+255),w,b
  4097   0017D2  A4D8               	btfss	status,2,c
  4098   0017D4  EFEE  F00B         	goto	u4881
  4099   0017D8  EFF1  F00B         	goto	u4880
  4100   0017DC                     u4881:
  4101   0017DC  0E01               	movlw	1
  4102   0017DE  EFF2  F00B         	goto	u4890
  4103   0017E2                     u4880:
  4104   0017E2  0E00               	movlw	0
  4105   0017E4                     u4890:
  4106   0017E4  6F80               	movwf	efgtoa@i& (0+255),b
  4107   0017E6  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4108   0017E8                     
  4109                           ; BSR set to: 0
  4110                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4111   0017E8  518A               	movf	efgtoa@sign& (0+255),w,b
  4112   0017EA  B4D8               	btfsc	status,2,c
  4113   0017EC  EFFA  F00B         	goto	u4901
  4114   0017F0  EFFC  F00B         	goto	u4900
  4115   0017F4                     u4901:
  4116   0017F4  EF07  F00C         	goto	l5040
  4117   0017F8                     u4900:
  4118   0017F8                     
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4121   0017F8  078B               	decf	efgtoa@n& (0+255),f,b
  4122   0017FA  A0D8               	btfss	status,0,c
  4123   0017FC  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4124   0017FE  0EA0               	movlw	low _dbuf
  4125   001800  258B               	addwf	efgtoa@n& (0+255),w,b
  4126   001802  6ED9               	movwf	fsr2l,c
  4127   001804  0E02               	movlw	high _dbuf
  4128   001806  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4129   001808  6EDA               	movwf	fsr2h,c
  4130   00180A  C08A  FFDF         	movff	efgtoa@sign,indf2
  4131   00180E                     l5040:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4135   00180E  5180               	movf	efgtoa@i& (0+255),w,b
  4136   001810  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4137   001812  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4138   001814  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4139   001816                     
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4142   001816  C060  F011         	movff	efgtoa@fp,pad@fp
  4143   00181A  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4144   00181E  0EA0               	movlw	low _dbuf
  4145   001820  258B               	addwf	efgtoa@n& (0+255),w,b
  4146   001822  6E13               	movwf	pad@buf^0,c
  4147   001824  0E02               	movlw	high _dbuf
  4148   001826  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4149   001828  6E14               	movwf	(pad@buf+1)^0,c
  4150   00182A  C07A  F015         	movff	efgtoa@w,pad@p
  4151   00182E  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4152   001832  ECB0  F029         	call	_pad	;wreg free
  4153   001836                     l1501:
  4154   001836  0012               	return		;funcret
  4155   001838                     __end_of_efgtoa:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _strcpy *****************
  4159 ;; Defined at:
  4160 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4163 ;;		 -> dbuf(80), 
  4164 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4165 ;;		 -> STR_5(4), STR_2(4), 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;  d               2    6[COMRAM] PTR unsigned char 
  4168 ;;		 -> dbuf(80), 
  4169 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4170 ;;		 -> STR_5(4), STR_2(4), 
  4171 ;; Return value:  Size  Location     Type
  4172 ;;                  2    0[COMRAM] PTR unsigned char 
  4173 ;; Registers used:
  4174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4175 ;; Tracked objects:
  4176 ;;		On entry : 0/0
  4177 ;;		On exit  : 0/0
  4178 ;;		Unchanged: 0/0
  4179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;Total ram usage:        8 bytes
  4185 ;; Hardware stack levels used: 1
  4186 ;; Hardware stack levels required when called: 1
  4187 ;; This function calls:
  4188 ;;		Nothing
  4189 ;; This function is called by:
  4190 ;;		_efgtoa
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text6
  4195   005E5C                     __ptext6:
  4196                           	callstack 0
  4197   005E5C                     _strcpy:
  4198                           	callstack 25
  4199   005E5C  C003  F005         	movff	strcpy@src,strcpy@s
  4200   005E60  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4201   005E64  C001  F007         	movff	strcpy@dest,strcpy@d
  4202   005E68  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4203   005E6C                     l4682:
  4204   005E6C  C005  FFF6         	movff	strcpy@s,tblptrl
  4205   005E70  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4206   005E74  4A05               	infsnz	strcpy@s^0,f,c
  4207   005E76  2A06               	incf	(strcpy@s+1)^0,f,c
  4208   005E78                     	if	0	;tblptru may be non-zero
  4209   005E78                     	endif
  4210   005E78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4211   005E78  0E00               	movlw	low (__mediumconst shr (0+16))
  4212   005E7A  6EF8               	movwf	tblptru,c
  4213   005E7C                     	endif
  4214   005E7C  C007  FFD9         	movff	strcpy@d,fsr2l
  4215   005E80  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4216   005E84  4A07               	infsnz	strcpy@d^0,f,c
  4217   005E86  2A08               	incf	(strcpy@d+1)^0,f,c
  4218   005E88  0008               	tblrd		*
  4219   005E8A  CFF5 FFDF          	movff	tablat,indf2
  4220   005E8E  50DF               	movf	indf2,w,c
  4221   005E90  A4D8               	btfss	status,2,c
  4222   005E92  EF4D  F02F         	goto	u4331
  4223   005E96  EF4F  F02F         	goto	u4330
  4224   005E9A                     u4331:
  4225   005E9A  EF36  F02F         	goto	l4682
  4226   005E9E                     u4330:
  4227   005E9E  0012               	return		;funcret
  4228   005EA0                     __end_of_strcpy:
  4229                           	callstack 0
  4230                           
  4231 ;; *************** function _memcpy *****************
  4232 ;; Defined at:
  4233 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  d1              2    0[COMRAM] PTR void 
  4236 ;;		 -> dbuf(80), 
  4237 ;;  s1              2    2[COMRAM] PTR const void 
  4238 ;;		 -> dbuf(80), 
  4239 ;;  n               2    4[COMRAM] unsigned int 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4242 ;;		 -> dbuf(80), 
  4243 ;;  d               2    6[COMRAM] PTR unsigned char 
  4244 ;;		 -> dbuf(80), 
  4245 ;;  tmp             1   10[COMRAM] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  2    0[COMRAM] PTR void 
  4248 ;; Registers used:
  4249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4255 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;Total ram usage:       11 bytes
  4260 ;; Hardware stack levels used: 1
  4261 ;; Hardware stack levels required when called: 1
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_efgtoa
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text7
  4270   005BEA                     __ptext7:
  4271                           	callstack 0
  4272   005BEA                     _memcpy:
  4273                           	callstack 25
  4274   005BEA  C003  F009         	movff	memcpy@s1,memcpy@s
  4275   005BEE  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4276   005BF2  C001  F007         	movff	memcpy@d1,memcpy@d
  4277   005BF6  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4278   005BFA  EF0F  F02E         	goto	l4726
  4279   005BFE                     l4718:
  4280   005BFE  C009  FFD9         	movff	memcpy@s,fsr2l
  4281   005C02  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4282   005C06  50DF               	movf	indf2,w,c
  4283   005C08  6E0B               	movwf	memcpy@tmp^0,c
  4284   005C0A  4A09               	infsnz	memcpy@s^0,f,c
  4285   005C0C  2A0A               	incf	(memcpy@s+1)^0,f,c
  4286   005C0E  C007  FFD9         	movff	memcpy@d,fsr2l
  4287   005C12  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4288   005C16  C00B  FFDF         	movff	memcpy@tmp,indf2
  4289   005C1A  4A07               	infsnz	memcpy@d^0,f,c
  4290   005C1C  2A08               	incf	(memcpy@d+1)^0,f,c
  4291   005C1E                     l4726:
  4292   005C1E  0605               	decf	memcpy@n^0,f,c
  4293   005C20  A0D8               	btfss	status,0,c
  4294   005C22  0606               	decf	(memcpy@n+1)^0,f,c
  4295   005C24  2805               	incf	memcpy@n^0,w,c
  4296   005C26  E106               	bnz	u4451
  4297   005C28  2806               	incf	(memcpy@n+1)^0,w,c
  4298   005C2A  A4D8               	btfss	status,2,c
  4299   005C2C  EF1A  F02E         	goto	u4451
  4300   005C30  EF1C  F02E         	goto	u4450
  4301   005C34                     u4451:
  4302   005C34  EFFF  F02D         	goto	l4718
  4303   005C38                     u4450:
  4304   005C38  0012               	return		;funcret
  4305   005C3A                     __end_of_memcpy:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _labs *****************
  4309 ;; Defined at:
  4310 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  a               4    0[COMRAM] long 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  4    0[COMRAM] long 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;Total ram usage:        8 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 1
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_efgtoa
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text8
  4339   0055A0                     __ptext8:
  4340                           	callstack 0
  4341   0055A0                     _labs:
  4342                           	callstack 25
  4343   0055A0  BE04               	btfsc	(labs@a+3)^0,7,c
  4344   0055A2  EFDF  F02A         	goto	u4340
  4345   0055A6  5004               	movf	(labs@a+3)^0,w,c
  4346   0055A8  1003               	iorwf	(labs@a+2)^0,w,c
  4347   0055AA  1002               	iorwf	(labs@a+1)^0,w,c
  4348   0055AC  E106               	bnz	u4341
  4349   0055AE  0401               	decf	labs@a^0,w,c
  4350   0055B0  B0D8               	btfsc	status,0,c
  4351   0055B2  EFDD  F02A         	goto	u4341
  4352   0055B6  EFDF  F02A         	goto	u4340
  4353   0055BA                     u4341:
  4354   0055BA  EFFA  F02A         	goto	l1606
  4355   0055BE                     u4340:
  4356   0055BE  C001  F005         	movff	labs@a,??_labs
  4357   0055C2  C002  F006         	movff	labs@a+1,??_labs+1
  4358   0055C6  C003  F007         	movff	labs@a+2,??_labs+2
  4359   0055CA  C004  F008         	movff	labs@a+3,??_labs+3
  4360   0055CE  1E05               	comf	??_labs^0,f,c
  4361   0055D0  1E06               	comf	(??_labs+1)^0,f,c
  4362   0055D2  1E07               	comf	(??_labs+2)^0,f,c
  4363   0055D4  1E08               	comf	(??_labs+3)^0,f,c
  4364   0055D6  2A05               	incf	??_labs^0,f,c
  4365   0055D8  0E00               	movlw	0
  4366   0055DA  2206               	addwfc	(??_labs+1)^0,f,c
  4367   0055DC  2207               	addwfc	(??_labs+2)^0,f,c
  4368   0055DE  2208               	addwfc	(??_labs+3)^0,f,c
  4369   0055E0  C005  F001         	movff	??_labs,?_labs
  4370   0055E4  C006  F002         	movff	??_labs+1,?_labs+1
  4371   0055E8  C007  F003         	movff	??_labs+2,?_labs+2
  4372   0055EC  C008  F004         	movff	??_labs+3,?_labs+3
  4373   0055F0  EF02  F02B         	goto	l1609
  4374   0055F4                     l1606:
  4375   0055F4  C001  F001         	movff	labs@a,?_labs
  4376   0055F8  C002  F002         	movff	labs@a+1,?_labs+1
  4377   0055FC  C003  F003         	movff	labs@a+2,?_labs+2
  4378   005600  C004  F004         	movff	labs@a+3,?_labs+3
  4379   005604                     l1609:
  4380   005604  0012               	return		;funcret
  4381   005606                     __end_of_labs:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _floorf *****************
  4385 ;; Defined at:
  4386 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  x               4   74[COMRAM] float 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  u               4   90[COMRAM] struct .
  4391 ;;  m               4   84[COMRAM] unsigned long 
  4392 ;;  e               2   88[COMRAM] int 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  4   74[COMRAM] float 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4404 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4405 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4406 ;;Total ram usage:       20 bytes
  4407 ;; Hardware stack levels used: 1
  4408 ;; Hardware stack levels required when called: 1
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_efgtoa
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text9
  4417   003F86                     __ptext9:
  4418                           	callstack 0
  4419   003F86                     _floorf:
  4420                           	callstack 25
  4421   003F86  C0DF  F05B         	movff	floorf@F526,floorf@u
  4422   003F8A  C0E0  F05C         	movff	floorf@F526+1,floorf@u+1
  4423   003F8E  C0E1  F05D         	movff	floorf@F526+2,floorf@u+2
  4424   003F92  C0E2  F05E         	movff	floorf@F526+3,floorf@u+3
  4425   003F96  C04B  F05B         	movff	floorf@x,floorf@u
  4426   003F9A  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  4427   003F9E  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  4428   003FA2  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  4429   003FA6  0E81               	movlw	129
  4430   003FA8  6E4F               	movwf	??_floorf^0,c
  4431   003FAA  0EFF               	movlw	255
  4432   003FAC  6E50               	movwf	(??_floorf+1)^0,c
  4433   003FAE  C05B  F051         	movff	floorf@u,??_floorf+2
  4434   003FB2  C05C  F052         	movff	floorf@u+1,??_floorf+3
  4435   003FB6  C05D  F053         	movff	floorf@u+2,??_floorf+4
  4436   003FBA  C05E  F054         	movff	floorf@u+3,??_floorf+5
  4437   003FBE  0E18               	movlw	24
  4438   003FC0  EFE7  F01F         	goto	u4350
  4439   003FC4                     u4355:
  4440   003FC4  90D8               	bcf	status,0,c
  4441   003FC6  3254               	rrcf	(??_floorf+5)^0,f,c
  4442   003FC8  3253               	rrcf	(??_floorf+4)^0,f,c
  4443   003FCA  3252               	rrcf	(??_floorf+3)^0,f,c
  4444   003FCC  3251               	rrcf	(??_floorf+2)^0,f,c
  4445   003FCE                     u4350:
  4446   003FCE  2EE8               	decfsz	wreg,f,c
  4447   003FD0  EFE2  F01F         	goto	u4355
  4448   003FD4  5051               	movf	(??_floorf+2)^0,w,c
  4449   003FD6  244F               	addwf	??_floorf^0,w,c
  4450   003FD8  6E59               	movwf	floorf@e^0,c
  4451   003FDA  0E00               	movlw	0
  4452   003FDC  2050               	addwfc	(??_floorf+1)^0,w,c
  4453   003FDE  6E5A               	movwf	(floorf@e+1)^0,c
  4454   003FE0  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4455   003FE2  EFFC  F01F         	goto	u4361
  4456   003FE6  505A               	movf	(floorf@e+1)^0,w,c
  4457   003FE8  E109               	bnz	u4360
  4458   003FEA  0E17               	movlw	23
  4459   003FEC  5C59               	subwf	floorf@e^0,w,c
  4460   003FEE  A0D8               	btfss	status,0,c
  4461   003FF0  EFFC  F01F         	goto	u4361
  4462   003FF4  EFFE  F01F         	goto	u4360
  4463   003FF8                     u4361:
  4464   003FF8  EF08  F020         	goto	l4694
  4465   003FFC                     u4360:
  4466   003FFC                     l4692:
  4467   003FFC  C04B  F04B         	movff	floorf@x,?_floorf
  4468   004000  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  4469   004004  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  4470   004008  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  4471   00400C  EFCB  F020         	goto	l1595
  4472   004010                     l4694:
  4473   004010  BE5A               	btfsc	(floorf@e+1)^0,7,c
  4474   004012  EF0D  F020         	goto	u4371
  4475   004016  EF0F  F020         	goto	u4370
  4476   00401A                     u4371:
  4477   00401A  EF7F  F020         	goto	l4704
  4478   00401E                     u4370:
  4479   00401E  C059  F04F         	movff	floorf@e,??_floorf
  4480   004022  0EFF               	movlw	255
  4481   004024  6E50               	movwf	(??_floorf+1)^0,c
  4482   004026  0EFF               	movlw	255
  4483   004028  6E51               	movwf	(??_floorf+2)^0,c
  4484   00402A  0E7F               	movlw	127
  4485   00402C  6E52               	movwf	(??_floorf+3)^0,c
  4486   00402E  0E00               	movlw	0
  4487   004030  6E53               	movwf	(??_floorf+4)^0,c
  4488   004032                     u4385:
  4489   004032  664F               	tstfsz	??_floorf^0,c
  4490   004034  EF1E  F020         	goto	u4386
  4491   004038  EF26  F020         	goto	u4387
  4492   00403C                     u4386:
  4493   00403C  3453               	rlcf	(??_floorf+4)^0,w,c
  4494   00403E  3253               	rrcf	(??_floorf+4)^0,f,c
  4495   004040  3252               	rrcf	(??_floorf+3)^0,f,c
  4496   004042  3251               	rrcf	(??_floorf+2)^0,f,c
  4497   004044  3250               	rrcf	(??_floorf+1)^0,f,c
  4498   004046  2E4F               	decfsz	??_floorf^0,f,c
  4499   004048  EF19  F020         	goto	u4385
  4500   00404C                     u4387:
  4501   00404C  C050  F055         	movff	??_floorf+1,floorf@m
  4502   004050  C051  F056         	movff	??_floorf+2,floorf@m+1
  4503   004054  C052  F057         	movff	??_floorf+3,floorf@m+2
  4504   004058  C053  F058         	movff	??_floorf+4,floorf@m+3
  4505   00405C  5055               	movf	floorf@m^0,w,c
  4506   00405E  145B               	andwf	floorf@u^0,w,c
  4507   004060  6E4F               	movwf	??_floorf^0,c
  4508   004062  5056               	movf	(floorf@m+1)^0,w,c
  4509   004064  145C               	andwf	(floorf@u+1)^0,w,c
  4510   004066  6E50               	movwf	(??_floorf+1)^0,c
  4511   004068  5057               	movf	(floorf@m+2)^0,w,c
  4512   00406A  145D               	andwf	(floorf@u+2)^0,w,c
  4513   00406C  6E51               	movwf	(??_floorf+2)^0,c
  4514   00406E  5058               	movf	(floorf@m+3)^0,w,c
  4515   004070  145E               	andwf	(floorf@u+3)^0,w,c
  4516   004072  6E52               	movwf	(??_floorf+3)^0,c
  4517   004074  504F               	movf	??_floorf^0,w,c
  4518   004076  1050               	iorwf	(??_floorf+1)^0,w,c
  4519   004078  1051               	iorwf	(??_floorf+2)^0,w,c
  4520   00407A  1052               	iorwf	(??_floorf+3)^0,w,c
  4521   00407C  A4D8               	btfss	status,2,c
  4522   00407E  EF43  F020         	goto	u4391
  4523   004082  EF45  F020         	goto	u4390
  4524   004086                     u4391:
  4525   004086  EF47  F020         	goto	l4700
  4526   00408A                     u4390:
  4527   00408A  EFFE  F01F         	goto	l4692
  4528   00408E                     l4700:
  4529   00408E  C05B  F04F         	movff	floorf@u,??_floorf
  4530   004092  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4531   004096  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4532   00409A  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4533   00409E  0E20               	movlw	32
  4534   0040A0  EF57  F020         	goto	u4400
  4535   0040A4                     u4405:
  4536   0040A4  90D8               	bcf	status,0,c
  4537   0040A6  3252               	rrcf	(??_floorf+3)^0,f,c
  4538   0040A8  3251               	rrcf	(??_floorf+2)^0,f,c
  4539   0040AA  3250               	rrcf	(??_floorf+1)^0,f,c
  4540   0040AC  324F               	rrcf	??_floorf^0,f,c
  4541   0040AE                     u4400:
  4542   0040AE  2EE8               	decfsz	wreg,f,c
  4543   0040B0  EF52  F020         	goto	u4405
  4544   0040B4  504F               	movf	??_floorf^0,w,c
  4545   0040B6  1050               	iorwf	(??_floorf+1)^0,w,c
  4546   0040B8  1051               	iorwf	(??_floorf+2)^0,w,c
  4547   0040BA  1052               	iorwf	(??_floorf+3)^0,w,c
  4548   0040BC  B4D8               	btfsc	status,2,c
  4549   0040BE  EF63  F020         	goto	u4411
  4550   0040C2  EF65  F020         	goto	u4410
  4551   0040C6                     u4411:
  4552   0040C6  EF6D  F020         	goto	l1598
  4553   0040CA                     u4410:
  4554   0040CA  5055               	movf	floorf@m^0,w,c
  4555   0040CC  265B               	addwf	floorf@u^0,f,c
  4556   0040CE  5056               	movf	(floorf@m+1)^0,w,c
  4557   0040D0  225C               	addwfc	(floorf@u+1)^0,f,c
  4558   0040D2  5057               	movf	(floorf@m+2)^0,w,c
  4559   0040D4  225D               	addwfc	(floorf@u+2)^0,f,c
  4560   0040D6  5058               	movf	(floorf@m+3)^0,w,c
  4561   0040D8  225E               	addwfc	(floorf@u+3)^0,f,c
  4562   0040DA                     l1598:
  4563   0040DA  1C55               	comf	floorf@m^0,w,c
  4564   0040DC  6E4F               	movwf	??_floorf^0,c
  4565   0040DE  1C56               	comf	(floorf@m+1)^0,w,c
  4566   0040E0  6E50               	movwf	(??_floorf+1)^0,c
  4567   0040E2  1C57               	comf	(floorf@m+2)^0,w,c
  4568   0040E4  6E51               	movwf	(??_floorf+2)^0,c
  4569   0040E6  1C58               	comf	(floorf@m+3)^0,w,c
  4570   0040E8  6E52               	movwf	(??_floorf+3)^0,c
  4571   0040EA  504F               	movf	??_floorf^0,w,c
  4572   0040EC  165B               	andwf	floorf@u^0,f,c
  4573   0040EE  5050               	movf	(??_floorf+1)^0,w,c
  4574   0040F0  165C               	andwf	(floorf@u+1)^0,f,c
  4575   0040F2  5051               	movf	(??_floorf+2)^0,w,c
  4576   0040F4  165D               	andwf	(floorf@u+2)^0,f,c
  4577   0040F6  5052               	movf	(??_floorf+3)^0,w,c
  4578   0040F8  165E               	andwf	(floorf@u+3)^0,f,c
  4579   0040FA  EFC3  F020         	goto	l4712
  4580   0040FE                     l4704:
  4581   0040FE  C05B  F04F         	movff	floorf@u,??_floorf
  4582   004102  C05C  F050         	movff	floorf@u+1,??_floorf+1
  4583   004106  C05D  F051         	movff	floorf@u+2,??_floorf+2
  4584   00410A  C05E  F052         	movff	floorf@u+3,??_floorf+3
  4585   00410E  0E20               	movlw	32
  4586   004110  EF8F  F020         	goto	u4420
  4587   004114                     u4425:
  4588   004114  90D8               	bcf	status,0,c
  4589   004116  3252               	rrcf	(??_floorf+3)^0,f,c
  4590   004118  3251               	rrcf	(??_floorf+2)^0,f,c
  4591   00411A  3250               	rrcf	(??_floorf+1)^0,f,c
  4592   00411C  324F               	rrcf	??_floorf^0,f,c
  4593   00411E                     u4420:
  4594   00411E  2EE8               	decfsz	wreg,f,c
  4595   004120  EF8A  F020         	goto	u4425
  4596   004124  504F               	movf	??_floorf^0,w,c
  4597   004126  1050               	iorwf	(??_floorf+1)^0,w,c
  4598   004128  1051               	iorwf	(??_floorf+2)^0,w,c
  4599   00412A  1052               	iorwf	(??_floorf+3)^0,w,c
  4600   00412C  A4D8               	btfss	status,2,c
  4601   00412E  EF9B  F020         	goto	u4431
  4602   004132  EF9D  F020         	goto	u4430
  4603   004136                     u4431:
  4604   004136  EFA7  F020         	goto	l4708
  4605   00413A                     u4430:
  4606   00413A  0E00               	movlw	0
  4607   00413C  6E5B               	movwf	floorf@u^0,c
  4608   00413E  0E00               	movlw	0
  4609   004140  6E5C               	movwf	(floorf@u+1)^0,c
  4610   004142  0E00               	movlw	0
  4611   004144  6E5D               	movwf	(floorf@u+2)^0,c
  4612   004146  0E00               	movlw	0
  4613   004148  6E5E               	movwf	(floorf@u+3)^0,c
  4614   00414A  EFC3  F020         	goto	l4712
  4615   00414E                     l4708:
  4616   00414E  90D8               	bcf	status,0,c
  4617   004150  345B               	rlcf	floorf@u^0,w,c
  4618   004152  6E4F               	movwf	??_floorf^0,c
  4619   004154  345C               	rlcf	(floorf@u+1)^0,w,c
  4620   004156  6E50               	movwf	(??_floorf+1)^0,c
  4621   004158  345D               	rlcf	(floorf@u+2)^0,w,c
  4622   00415A  6E51               	movwf	(??_floorf+2)^0,c
  4623   00415C  345E               	rlcf	(floorf@u+3)^0,w,c
  4624   00415E  6E52               	movwf	(??_floorf+3)^0,c
  4625   004160  504F               	movf	??_floorf^0,w,c
  4626   004162  1050               	iorwf	(??_floorf+1)^0,w,c
  4627   004164  1051               	iorwf	(??_floorf+2)^0,w,c
  4628   004166  1052               	iorwf	(??_floorf+3)^0,w,c
  4629   004168  B4D8               	btfsc	status,2,c
  4630   00416A  EFB9  F020         	goto	u4441
  4631   00416E  EFBB  F020         	goto	u4440
  4632   004172                     u4441:
  4633   004172  EFC3  F020         	goto	l4712
  4634   004176                     u4440:
  4635   004176  0E00               	movlw	0
  4636   004178  6E5B               	movwf	floorf@u^0,c
  4637   00417A  0E00               	movlw	0
  4638   00417C  6E5C               	movwf	(floorf@u+1)^0,c
  4639   00417E  0E80               	movlw	128
  4640   004180  6E5D               	movwf	(floorf@u+2)^0,c
  4641   004182  0EBF               	movlw	191
  4642   004184  6E5E               	movwf	(floorf@u+3)^0,c
  4643   004186                     l4712:
  4644   004186  C05B  F04B         	movff	floorf@u,?_floorf
  4645   00418A  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  4646   00418E  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  4647   004192  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  4648   004196                     l1595:
  4649   004196  0012               	return		;funcret
  4650   004198                     __end_of_floorf:
  4651                           	callstack 0
  4652                           
  4653 ;; *************** function ___fpclassifyf *****************
  4654 ;; Defined at:
  4655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  x               4    0[COMRAM] float 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  u               4   10[COMRAM] struct .
  4660 ;;  e               2    8[COMRAM] int 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2    0[COMRAM] int 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;Total ram usage:       14 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_efgtoa
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           
  4684                           	psect	text10
  4685   004B5A                     __ptext10:
  4686                           	callstack 0
  4687   004B5A                     ___fpclassifyf:
  4688                           	callstack 25
  4689   004B5A  C0E3  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  4690   004B5E  C0E4  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  4691   004B62  C0E5  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  4692   004B66  C0E6  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  4693   004B6A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4694   004B6E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4695   004B72  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4696   004B76  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4697   004B7A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4698   004B7E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4699   004B82  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4700   004B86  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4701   004B8A  0E18               	movlw	24
  4702   004B8C  EFCD  F025         	goto	u4260
  4703   004B90                     u4265:
  4704   004B90  90D8               	bcf	status,0,c
  4705   004B92  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4706   004B94  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4707   004B96  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4708   004B98  3205               	rrcf	??___fpclassifyf^0,f,c
  4709   004B9A                     u4260:
  4710   004B9A  2EE8               	decfsz	wreg,f,c
  4711   004B9C  EFC8  F025         	goto	u4265
  4712   004BA0  5005               	movf	??___fpclassifyf^0,w,c
  4713   004BA2  6E09               	movwf	___fpclassifyf@e^0,c
  4714   004BA4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4715   004BA6  5009               	movf	___fpclassifyf@e^0,w,c
  4716   004BA8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4717   004BAA  A4D8               	btfss	status,2,c
  4718   004BAC  EFDA  F025         	goto	u4271
  4719   004BB0  EFDC  F025         	goto	u4270
  4720   004BB4                     u4271:
  4721   004BB4  EFFC  F025         	goto	l4670
  4722   004BB8                     u4270:
  4723   004BB8  90D8               	bcf	status,0,c
  4724   004BBA  340B               	rlcf	___fpclassifyf@u^0,w,c
  4725   004BBC  6E05               	movwf	??___fpclassifyf^0,c
  4726   004BBE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4727   004BC0  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4728   004BC2  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4729   004BC4  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4730   004BC6  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4731   004BC8  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4732   004BCA  5005               	movf	??___fpclassifyf^0,w,c
  4733   004BCC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4734   004BCE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4735   004BD0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4736   004BD2  A4D8               	btfss	status,2,c
  4737   004BD4  EFEE  F025         	goto	u4281
  4738   004BD8  EFF0  F025         	goto	u4280
  4739   004BDC                     u4281:
  4740   004BDC  EFF6  F025         	goto	l4666
  4741   004BE0                     u4280:
  4742   004BE0  0E00               	movlw	0
  4743   004BE2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4744   004BE4  0E02               	movlw	2
  4745   004BE6  6E01               	movwf	?___fpclassifyf^0,c
  4746   004BE8  EF2B  F026         	goto	l1581
  4747   004BEC                     l4666:
  4748   004BEC  0E00               	movlw	0
  4749   004BEE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4750   004BF0  0E03               	movlw	3
  4751   004BF2  6E01               	movwf	?___fpclassifyf^0,c
  4752   004BF4  EF2B  F026         	goto	l1581
  4753   004BF8                     l4670:
  4754   004BF8  2809               	incf	___fpclassifyf@e^0,w,c
  4755   004BFA  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4756   004BFC  A4D8               	btfss	status,2,c
  4757   004BFE  EF03  F026         	goto	u4291
  4758   004C02  EF05  F026         	goto	u4290
  4759   004C06                     u4291:
  4760   004C06  EF27  F026         	goto	l4676
  4761   004C0A                     u4290:
  4762   004C0A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4763   004C0E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4764   004C12  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4765   004C16  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4766   004C1A  0E09               	movlw	9
  4767   004C1C                     u4305:
  4768   004C1C  90D8               	bcf	status,0,c
  4769   004C1E  3605               	rlcf	??___fpclassifyf^0,f,c
  4770   004C20  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4771   004C22  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4772   004C24  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4773   004C26  2EE8               	decfsz	wreg,f,c
  4774   004C28  EF0E  F026         	goto	u4305
  4775   004C2C  5005               	movf	??___fpclassifyf^0,w,c
  4776   004C2E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4777   004C30  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4778   004C32  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4779   004C34  B4D8               	btfsc	status,2,c
  4780   004C36  EF1F  F026         	goto	u4311
  4781   004C3A  EF22  F026         	goto	u4310
  4782   004C3E                     u4311:
  4783   004C3E  0E01               	movlw	1
  4784   004C40  EF23  F026         	goto	u4320
  4785   004C44                     u4310:
  4786   004C44  0E00               	movlw	0
  4787   004C46                     u4320:
  4788   004C46  6E01               	movwf	?___fpclassifyf^0,c
  4789   004C48  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4790   004C4A  EF2B  F026         	goto	l1581
  4791   004C4E                     l4676:
  4792   004C4E  0E00               	movlw	0
  4793   004C50  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4794   004C52  0E04               	movlw	4
  4795   004C54  6E01               	movwf	?___fpclassifyf^0,c
  4796   004C56                     l1581:
  4797   004C56  0012               	return		;funcret
  4798   004C58                     __end_of___fpclassifyf:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function ___fltol *****************
  4802 ;; Defined at:
  4803 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  f1              4    0[COMRAM] int 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  exp1            1    9[COMRAM] unsigned char 
  4808 ;;  sign1           1    8[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  4    0[COMRAM] long 
  4811 ;; Registers used:
  4812 ;;		wreg, status,2, status,0
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4820 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4821 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;Total ram usage:       10 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_reverseOneBlock
  4829 ;;		_ForwardOneBlock
  4830 ;;		_Forwardhalfblock
  4831 ;;		_Backhalfblock
  4832 ;;		_efgtoa
  4833 ;; This function uses a non-reentrant model
  4834 ;;
  4835                           
  4836                           	psect	text11
  4837   004950                     __ptext11:
  4838                           	callstack 0
  4839   004950                     ___fltol:
  4840                           	callstack 25
  4841   004950  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4842   004952  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4843   004954  6E0A               	movwf	___fltol@exp1^0,c
  4844   004956  500A               	movf	___fltol@exp1^0,w,c
  4845   004958  A4D8               	btfss	status,2,c
  4846   00495A  EFB1  F024         	goto	u4161
  4847   00495E  EFB3  F024         	goto	u4160
  4848   004962                     u4161:
  4849   004962  EFBD  F024         	goto	l4602
  4850   004966                     u4160:
  4851   004966                     l4598:
  4852   004966  0E00               	movlw	0
  4853   004968  6E01               	movwf	?___fltol^0,c
  4854   00496A  0E00               	movlw	0
  4855   00496C  6E02               	movwf	(?___fltol+1)^0,c
  4856   00496E  0E00               	movlw	0
  4857   004970  6E03               	movwf	(?___fltol+2)^0,c
  4858   004972  0E00               	movlw	0
  4859   004974  6E04               	movwf	(?___fltol+3)^0,c
  4860   004976  EF2A  F025         	goto	l1054
  4861   00497A                     l4602:
  4862   00497A  C001  F005         	movff	___fltol@f1,??___fltol
  4863   00497E  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4864   004982  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4865   004986  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4866   00498A  0E20               	movlw	32
  4867   00498C  EFCD  F024         	goto	u4170
  4868   004990                     u4175:
  4869   004990  90D8               	bcf	status,0,c
  4870   004992  3208               	rrcf	(??___fltol+3)^0,f,c
  4871   004994  3207               	rrcf	(??___fltol+2)^0,f,c
  4872   004996  3206               	rrcf	(??___fltol+1)^0,f,c
  4873   004998  3205               	rrcf	??___fltol^0,f,c
  4874   00499A                     u4170:
  4875   00499A  2EE8               	decfsz	wreg,f,c
  4876   00499C  EFC8  F024         	goto	u4175
  4877   0049A0  5005               	movf	??___fltol^0,w,c
  4878   0049A2  6E09               	movwf	___fltol@sign1^0,c
  4879   0049A4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4880   0049A6  0EFF               	movlw	255
  4881   0049A8  1601               	andwf	___fltol@f1^0,f,c
  4882   0049AA  0EFF               	movlw	255
  4883   0049AC  1602               	andwf	(___fltol@f1+1)^0,f,c
  4884   0049AE  0EFF               	movlw	255
  4885   0049B0  1603               	andwf	(___fltol@f1+2)^0,f,c
  4886   0049B2  0E00               	movlw	0
  4887   0049B4  1604               	andwf	(___fltol@f1+3)^0,f,c
  4888   0049B6  0E96               	movlw	150
  4889   0049B8  5E0A               	subwf	___fltol@exp1^0,f,c
  4890   0049BA  BE0A               	btfsc	___fltol@exp1^0,7,c
  4891   0049BC  EFE4  F024         	goto	u4180
  4892   0049C0  EFE2  F024         	goto	u4181
  4893   0049C4                     u4181:
  4894   0049C4  EFFA  F024         	goto	l4622
  4895   0049C8                     u4180:
  4896   0049C8  500A               	movf	___fltol@exp1^0,w,c
  4897   0049CA  0A80               	xorlw	128
  4898   0049CC  0F97               	addlw	151
  4899   0049CE  B0D8               	btfsc	status,0,c
  4900   0049D0  EFEC  F024         	goto	u4191
  4901   0049D4  EFEE  F024         	goto	u4190
  4902   0049D8                     u4191:
  4903   0049D8  EFF0  F024         	goto	l4618
  4904   0049DC                     u4190:
  4905   0049DC  EFB3  F024         	goto	l4598
  4906   0049E0                     l4618:
  4907   0049E0  90D8               	bcf	status,0,c
  4908   0049E2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4909   0049E4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4910   0049E6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4911   0049E8  3201               	rrcf	___fltol@f1^0,f,c
  4912   0049EA  3E0A               	incfsz	___fltol@exp1^0,f,c
  4913   0049EC  EFF0  F024         	goto	l4618
  4914   0049F0  EF12  F025         	goto	l4632
  4915   0049F4                     l4622:
  4916   0049F4  0E1F               	movlw	31
  4917   0049F6  640A               	cpfsgt	___fltol@exp1^0,c
  4918   0049F8  EF00  F025         	goto	u4201
  4919   0049FC  EF02  F025         	goto	u4200
  4920   004A00                     u4201:
  4921   004A00  EF0A  F025         	goto	l4630
  4922   004A04                     u4200:
  4923   004A04  EFB3  F024         	goto	l4598
  4924   004A08                     l4628:
  4925   004A08  90D8               	bcf	status,0,c
  4926   004A0A  3601               	rlcf	___fltol@f1^0,f,c
  4927   004A0C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4928   004A0E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4929   004A10  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4930   004A12  060A               	decf	___fltol@exp1^0,f,c
  4931   004A14                     l4630:
  4932   004A14  500A               	movf	___fltol@exp1^0,w,c
  4933   004A16  A4D8               	btfss	status,2,c
  4934   004A18  EF10  F025         	goto	u4211
  4935   004A1C  EF12  F025         	goto	u4210
  4936   004A20                     u4211:
  4937   004A20  EF04  F025         	goto	l4628
  4938   004A24                     u4210:
  4939   004A24                     l4632:
  4940   004A24  5009               	movf	___fltol@sign1^0,w,c
  4941   004A26  B4D8               	btfsc	status,2,c
  4942   004A28  EF18  F025         	goto	u4221
  4943   004A2C  EF1A  F025         	goto	u4220
  4944   004A30                     u4221:
  4945   004A30  EF22  F025         	goto	l4636
  4946   004A34                     u4220:
  4947   004A34  1E04               	comf	(___fltol@f1+3)^0,f,c
  4948   004A36  1E03               	comf	(___fltol@f1+2)^0,f,c
  4949   004A38  1E02               	comf	(___fltol@f1+1)^0,f,c
  4950   004A3A  6C01               	negf	___fltol@f1^0,c
  4951   004A3C  0E00               	movlw	0
  4952   004A3E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4953   004A40  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4954   004A42  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4955   004A44                     l4636:
  4956   004A44  C001  F001         	movff	___fltol@f1,?___fltol
  4957   004A48  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4958   004A4C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4959   004A50  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4960   004A54                     l1054:
  4961   004A54  0012               	return		;funcret
  4962   004A56                     __end_of___fltol:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function ___flneg *****************
  4966 ;; Defined at:
  4967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  f1              4    0[COMRAM] long 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4    0[COMRAM] long 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4984 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4985 ;;Total ram usage:        4 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 1
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_efgtoa
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text12
  4996   005FE2                     __ptext12:
  4997                           	callstack 0
  4998   005FE2                     ___flneg:
  4999                           	callstack 25
  5000   005FE2  5001               	movf	___flneg@f1^0,w,c
  5001   005FE4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5002   005FE6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5003   005FE8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5004   005FEA  B4D8               	btfsc	status,2,c
  5005   005FEC  EFFA  F02F         	goto	u4151
  5006   005FF0  EFFC  F02F         	goto	u4150
  5007   005FF4                     u4151:
  5008   005FF4  EF04  F030         	goto	l4592
  5009   005FF8                     u4150:
  5010   005FF8  0E00               	movlw	0
  5011   005FFA  1A01               	xorwf	___flneg@f1^0,f,c
  5012   005FFC  0E00               	movlw	0
  5013   005FFE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5014   006000  0E00               	movlw	0
  5015   006002  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5016   006004  0E80               	movlw	128
  5017   006006  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5018   006008                     l4592:
  5019   006008  C001  F001         	movff	___flneg@f1,?___flneg
  5020   00600C  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5021   006010  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5022   006014  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5023   006018  0012               	return		;funcret
  5024   00601A                     __end_of___flneg:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _dtoa *****************
  5028 ;; Defined at:
  5029 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5032 ;;		 -> sprintf@f(11), 
  5033 ;;  d               8   29[COMRAM] long long 
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  n               8   51[COMRAM] long long 
  5036 ;;  i               2   59[COMRAM] int 
  5037 ;;  w               2   49[COMRAM] int 
  5038 ;;  p               2   47[COMRAM] int 
  5039 ;;  s               1   61[COMRAM] unsigned char 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5049 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;Total ram usage:       35 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 5
  5056 ;; This function calls:
  5057 ;;		___aodiv
  5058 ;;		___aomod
  5059 ;;		_abs
  5060 ;;		_pad
  5061 ;; This function is called by:
  5062 ;;		_vfpfcnvrt
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text13
  5067   003A90                     __ptext13:
  5068                           	callstack 0
  5069   003A90                     _dtoa:
  5070                           	callstack 22
  5071   003A90                     
  5072                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5073   003A90  C01E  F034         	movff	dtoa@d,dtoa@n
  5074   003A94  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5075   003A98  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5076   003A9C  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5077   003AA0  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5078   003AA4  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5079   003AA8  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5080   003AAC  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5081   003AB0                     
  5082                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5083   003AB0  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5084   003AB2  EF5D  F01D         	goto	u4491
  5085   003AB6  EF60  F01D         	goto	u4490
  5086   003ABA                     u4491:
  5087   003ABA  0E01               	movlw	1
  5088   003ABC  EF61  F01D         	goto	u4500
  5089   003AC0                     u4490:
  5090   003AC0  0E00               	movlw	0
  5091   003AC2                     u4500:
  5092   003AC2  6E3E               	movwf	dtoa@s^0,c
  5093   003AC4                     
  5094                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5095   003AC4  503E               	movf	dtoa@s^0,w,c
  5096   003AC6  B4D8               	btfsc	status,2,c
  5097   003AC8  EF68  F01D         	goto	u4511
  5098   003ACC  EF6A  F01D         	goto	u4510
  5099   003AD0                     u4511:
  5100   003AD0  EF7A  F01D         	goto	l4780
  5101   003AD4                     u4510:
  5102   003AD4                     
  5103                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5104   003AD4  1E3B               	comf	(dtoa@n+7)^0,f,c
  5105   003AD6  1E3A               	comf	(dtoa@n+6)^0,f,c
  5106   003AD8  1E39               	comf	(dtoa@n+5)^0,f,c
  5107   003ADA  1E38               	comf	(dtoa@n+4)^0,f,c
  5108   003ADC  1E37               	comf	(dtoa@n+3)^0,f,c
  5109   003ADE  1E36               	comf	(dtoa@n+2)^0,f,c
  5110   003AE0  1E35               	comf	(dtoa@n+1)^0,f,c
  5111   003AE2  6C34               	negf	dtoa@n^0,c
  5112   003AE4  0E00               	movlw	0
  5113   003AE6  2235               	addwfc	(dtoa@n+1)^0,f,c
  5114   003AE8  2236               	addwfc	(dtoa@n+2)^0,f,c
  5115   003AEA  2237               	addwfc	(dtoa@n+3)^0,f,c
  5116   003AEC  2238               	addwfc	(dtoa@n+4)^0,f,c
  5117   003AEE  2239               	addwfc	(dtoa@n+5)^0,f,c
  5118   003AF0  223A               	addwfc	(dtoa@n+6)^0,f,c
  5119   003AF2  223B               	addwfc	(dtoa@n+7)^0,f,c
  5120   003AF4                     l4780:
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5123   003AF4  0100               	movlb	0	; () banked
  5124   003AF6  BFEA               	btfsc	(_prec+1)& (0+255),7,b
  5125   003AF8  EF88  F01D         	goto	u4520
  5126   003AFC  51EA               	movf	(_prec+1)& (0+255),w,b
  5127   003AFE  E106               	bnz	u4521
  5128   003B00  05E9               	decf	_prec& (0+255),w,b
  5129   003B02  B0D8               	btfsc	status,0,c
  5130   003B04  EF86  F01D         	goto	u4521
  5131   003B08  EF88  F01D         	goto	u4520
  5132   003B0C                     u4521:
  5133   003B0C  EF8E  F01D         	goto	l1476
  5134   003B10                     u4520:
  5135   003B10                     
  5136                           ; BSR set to: 0
  5137   003B10  0E00               	movlw	0
  5138   003B12  6E31               	movwf	(dtoa@p+1)^0,c
  5139   003B14  0E01               	movlw	1
  5140   003B16  6E30               	movwf	dtoa@p^0,c
  5141   003B18  EF92  F01D         	goto	l1478
  5142   003B1C                     l1476:
  5143                           
  5144                           ; BSR set to: 0
  5145   003B1C  C0E9  F030         	movff	_prec,dtoa@p
  5146   003B20  C0EA  F031         	movff	_prec+1,dtoa@p+1
  5147   003B24                     l1478:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5151   003B24  C0E7  F032         	movff	_width,dtoa@w
  5152   003B28  C0E8  F033         	movff	_width+1,dtoa@w+1
  5153   003B2C                     
  5154                           ; BSR set to: 0
  5155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5156   003B2C  503E               	movf	dtoa@s^0,w,c
  5157   003B2E  B4D8               	btfsc	status,2,c
  5158   003B30  EF9C  F01D         	goto	u4531
  5159   003B34  EF9E  F01D         	goto	u4530
  5160   003B38                     u4531:
  5161   003B38  EFB5  F01D         	goto	l1479
  5162   003B3C                     u4530:
  5163   003B3C                     
  5164                           ; BSR set to: 0
  5165                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5166   003B3C  0632               	decf	dtoa@w^0,f,c
  5167   003B3E  A0D8               	btfss	status,0,c
  5168   003B40  0633               	decf	(dtoa@w+1)^0,f,c
  5169   003B42                     
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5172   003B42  503E               	movf	dtoa@s^0,w,c
  5173   003B44  A4D8               	btfss	status,2,c
  5174   003B46  EFA7  F01D         	goto	u4541
  5175   003B4A  EFA9  F01D         	goto	u4540
  5176   003B4E                     u4541:
  5177   003B4E  EFAF  F01D         	goto	l4792
  5178   003B52                     u4540:
  5179   003B52                     
  5180                           ; BSR set to: 0
  5181   003B52  0E00               	movlw	0
  5182   003B54  6E2F               	movwf	(_dtoa$2871+1)^0,c
  5183   003B56  0E2B               	movlw	43
  5184   003B58  6E2E               	movwf	_dtoa$2871^0,c
  5185   003B5A  EFB3  F01D         	goto	l4794
  5186   003B5E                     l4792:
  5187                           
  5188                           ; BSR set to: 0
  5189   003B5E  0E00               	movlw	0
  5190   003B60  6E2F               	movwf	(_dtoa$2871+1)^0,c
  5191   003B62  0E2D               	movlw	45
  5192   003B64  6E2E               	movwf	_dtoa$2871^0,c
  5193   003B66                     l4794:
  5194                           
  5195                           ; BSR set to: 0
  5196   003B66  C02E  F03E         	movff	_dtoa$2871,dtoa@s
  5197   003B6A                     l1479:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5201   003B6A  0E00               	movlw	0
  5202   003B6C  6E3D               	movwf	(dtoa@i+1)^0,c
  5203   003B6E  0E4F               	movlw	79
  5204   003B70  6E3C               	movwf	dtoa@i^0,c
  5205   003B72                     
  5206                           ; BSR set to: 0
  5207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5208   003B72  0E00               	movlw	0
  5209   003B74  0102               	movlb	2	; () banked
  5210   003B76  6FEF               	movwf	(_dbuf+79)& (0+255),b
  5211                           
  5212                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5213   003B78  EF3A  F01E         	goto	l4808
  5214   003B7C                     l4798:
  5215                           
  5216                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5217   003B7C  063C               	decf	dtoa@i^0,f,c
  5218   003B7E  A0D8               	btfss	status,0,c
  5219   003B80  063D               	decf	(dtoa@i+1)^0,f,c
  5220   003B82                     
  5221                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5222   003B82  0EA0               	movlw	low _dbuf
  5223   003B84  243C               	addwf	dtoa@i^0,w,c
  5224   003B86  6ED9               	movwf	fsr2l,c
  5225   003B88  0E02               	movlw	high _dbuf
  5226   003B8A  203D               	addwfc	(dtoa@i+1)^0,w,c
  5227   003B8C  6EDA               	movwf	fsr2h,c
  5228   003B8E  C034  F001         	movff	dtoa@n,___aomod@dividend
  5229   003B92  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5230   003B96  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5231   003B9A  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5232   003B9E  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5233   003BA2  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5234   003BA6  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5235   003BAA  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5236   003BAE  0E0A               	movlw	10
  5237   003BB0  6E09               	movwf	___aomod@divisor^0,c
  5238   003BB2  0E00               	movlw	0
  5239   003BB4  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5240   003BB6  0E00               	movlw	0
  5241   003BB8  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5242   003BBA  0E00               	movlw	0
  5243   003BBC  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5244   003BBE  0E00               	movlw	0
  5245   003BC0  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5246   003BC2  0E00               	movlw	0
  5247   003BC4  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5248   003BC6  0E00               	movlw	0
  5249   003BC8  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5250   003BCA  0E00               	movlw	0
  5251   003BCC  6E10               	movwf	(___aomod@divisor+7)^0,c
  5252   003BCE  ECF6  F023         	call	___aomod	;wreg free
  5253   003BD2  C001  F026         	movff	?___aomod,??_dtoa
  5254   003BD6  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5255   003BDA  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5256   003BDE  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5257   003BE2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5258   003BE6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5259   003BEA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5260   003BEE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5261   003BF2  C026  F013         	movff	??_dtoa,abs@a
  5262   003BF6  C027  F014         	movff	??_dtoa+1,abs@a+1
  5263   003BFA  EC93  F02F         	call	_abs	;wreg free
  5264   003BFE  5013               	movf	?_abs^0,w,c
  5265   003C00  0F30               	addlw	48
  5266   003C02  6EDF               	movwf	indf2,c
  5267   003C04                     
  5268                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5269   003C04  0630               	decf	dtoa@p^0,f,c
  5270   003C06  A0D8               	btfss	status,0,c
  5271   003C08  0631               	decf	(dtoa@p+1)^0,f,c
  5272   003C0A                     
  5273                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5274   003C0A  0632               	decf	dtoa@w^0,f,c
  5275   003C0C  A0D8               	btfss	status,0,c
  5276   003C0E  0633               	decf	(dtoa@w+1)^0,f,c
  5277   003C10                     
  5278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5279   003C10  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5280   003C14  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5281   003C18  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5282   003C1C  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5283   003C20  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5284   003C24  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5285   003C28  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5286   003C2C  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5287   003C30  0E0A               	movlw	10
  5288   003C32  6E09               	movwf	___aodiv@divisor^0,c
  5289   003C34  0E00               	movlw	0
  5290   003C36  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5291   003C38  0E00               	movlw	0
  5292   003C3A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5293   003C3C  0E00               	movlw	0
  5294   003C3E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5295   003C40  0E00               	movlw	0
  5296   003C42  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5297   003C44  0E00               	movlw	0
  5298   003C46  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5299   003C48  0E00               	movlw	0
  5300   003C4A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5301   003C4C  0E00               	movlw	0
  5302   003C4E  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5303   003C50  EC7C  F022         	call	___aodiv	;wreg free
  5304   003C54  C001  F034         	movff	?___aodiv,dtoa@n
  5305   003C58  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5306   003C5C  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5307   003C60  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5308   003C64  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5309   003C68  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5310   003C6C  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5311   003C70  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5312   003C74                     l4808:
  5313                           
  5314                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5315   003C74  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5316   003C76  EF45  F01E         	goto	u4551
  5317   003C7A  503D               	movf	(dtoa@i+1)^0,w,c
  5318   003C7C  E108               	bnz	u4550
  5319   003C7E  043C               	decf	dtoa@i^0,w,c
  5320   003C80  A0D8               	btfss	status,0,c
  5321   003C82  EF45  F01E         	goto	u4551
  5322   003C86  EF47  F01E         	goto	u4550
  5323   003C8A                     u4551:
  5324   003C8A  EF63  F01E         	goto	l4814
  5325   003C8E                     u4550:
  5326   003C8E  5034               	movf	dtoa@n^0,w,c
  5327   003C90  1035               	iorwf	(dtoa@n+1)^0,w,c
  5328   003C92  1036               	iorwf	(dtoa@n+2)^0,w,c
  5329   003C94  1037               	iorwf	(dtoa@n+3)^0,w,c
  5330   003C96  1038               	iorwf	(dtoa@n+4)^0,w,c
  5331   003C98  1039               	iorwf	(dtoa@n+5)^0,w,c
  5332   003C9A  103A               	iorwf	(dtoa@n+6)^0,w,c
  5333   003C9C  103B               	iorwf	(dtoa@n+7)^0,w,c
  5334   003C9E  A4D8               	btfss	status,2,c
  5335   003CA0  EF54  F01E         	goto	u4561
  5336   003CA4  EF56  F01E         	goto	u4560
  5337   003CA8                     u4561:
  5338   003CA8  EFBE  F01D         	goto	l4798
  5339   003CAC                     u4560:
  5340   003CAC  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5341   003CAE  EF63  F01E         	goto	u4570
  5342   003CB2  5031               	movf	(dtoa@p+1)^0,w,c
  5343   003CB4  E106               	bnz	u4571
  5344   003CB6  0430               	decf	dtoa@p^0,w,c
  5345   003CB8  B0D8               	btfsc	status,0,c
  5346   003CBA  EF61  F01E         	goto	u4571
  5347   003CBE  EF63  F01E         	goto	u4570
  5348   003CC2                     u4571:
  5349   003CC2  EFBE  F01D         	goto	l4798
  5350   003CC6                     u4570:
  5351   003CC6                     l4814:
  5352                           
  5353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5354   003CC6  503E               	movf	dtoa@s^0,w,c
  5355   003CC8  B4D8               	btfsc	status,2,c
  5356   003CCA  EF69  F01E         	goto	u4581
  5357   003CCE  EF6B  F01E         	goto	u4580
  5358   003CD2                     u4581:
  5359   003CD2  EF76  F01E         	goto	l4820
  5360   003CD6                     u4580:
  5361   003CD6                     
  5362                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5363   003CD6  063C               	decf	dtoa@i^0,f,c
  5364   003CD8  A0D8               	btfss	status,0,c
  5365   003CDA  063D               	decf	(dtoa@i+1)^0,f,c
  5366   003CDC                     
  5367                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5368   003CDC  0EA0               	movlw	low _dbuf
  5369   003CDE  243C               	addwf	dtoa@i^0,w,c
  5370   003CE0  6ED9               	movwf	fsr2l,c
  5371   003CE2  0E02               	movlw	high _dbuf
  5372   003CE4  203D               	addwfc	(dtoa@i+1)^0,w,c
  5373   003CE6  6EDA               	movwf	fsr2h,c
  5374   003CE8  C03E  FFDF         	movff	dtoa@s,indf2
  5375   003CEC                     l4820:
  5376                           
  5377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5378   003CEC  C01C  F011         	movff	dtoa@fp,pad@fp
  5379   003CF0  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5380   003CF4  0EA0               	movlw	low _dbuf
  5381   003CF6  243C               	addwf	dtoa@i^0,w,c
  5382   003CF8  6E13               	movwf	pad@buf^0,c
  5383   003CFA  0E02               	movlw	high _dbuf
  5384   003CFC  203D               	addwfc	(dtoa@i+1)^0,w,c
  5385   003CFE  6E14               	movwf	(pad@buf+1)^0,c
  5386   003D00  C032  F015         	movff	dtoa@w,pad@p
  5387   003D04  C033  F016         	movff	dtoa@w+1,pad@p+1
  5388   003D08  ECB0  F029         	call	_pad	;wreg free
  5389   003D0C  0012               	return		;funcret
  5390   003D0E                     __end_of_dtoa:
  5391                           	callstack 0
  5392                           
  5393 ;; *************** function _pad *****************
  5394 ;; Defined at:
  5395 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5396 ;; Parameters:    Size  Location     Type
  5397 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5398 ;;		 -> sprintf@f(11), 
  5399 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5400 ;;		 -> dbuf(80), 
  5401 ;;  p               2   20[COMRAM] int 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  w               2   25[COMRAM] int 
  5404 ;;  i               2   23[COMRAM] int 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5414 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;Total ram usage:       11 bytes
  5419 ;; Hardware stack levels used: 1
  5420 ;; Hardware stack levels required when called: 4
  5421 ;; This function calls:
  5422 ;;		_fputc
  5423 ;;		_fputs
  5424 ;; This function is called by:
  5425 ;;		_dtoa
  5426 ;;		_efgtoa
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text14
  5431   005360                     __ptext14:
  5432                           	callstack 0
  5433   005360                     _pad:
  5434                           	callstack 22
  5435   005360                     
  5436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5437   005360  BE16               	btfsc	(pad@p+1)^0,7,c
  5438   005362  EFB5  F029         	goto	u4231
  5439   005366  EFB7  F029         	goto	u4230
  5440   00536A                     u4231:
  5441   00536A  EFBD  F029         	goto	l4644
  5442   00536E                     u4230:
  5443   00536E  C015  F01A         	movff	pad@p,pad@w
  5444   005372  C016  F01B         	movff	pad@p+1,pad@w+1
  5445   005376  EFC1  F029         	goto	l1467
  5446   00537A                     l4644:
  5447   00537A  0E00               	movlw	0
  5448   00537C  6E1B               	movwf	(pad@w+1)^0,c
  5449   00537E  0E00               	movlw	0
  5450   005380  6E1A               	movwf	pad@w^0,c
  5451   005382                     l1467:
  5452                           
  5453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5454   005382  0E00               	movlw	0
  5455   005384  6E19               	movwf	(pad@i+1)^0,c
  5456   005386  0E00               	movlw	0
  5457   005388  6E18               	movwf	pad@i^0,c
  5458                           
  5459                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5460   00538A  EFD3  F029         	goto	l4650
  5461   00538E                     l4646:
  5462                           
  5463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5464   00538E  0E00               	movlw	0
  5465   005390  6E02               	movwf	(fputc@c+1)^0,c
  5466   005392  0E20               	movlw	32
  5467   005394  6E01               	movwf	fputc@c^0,c
  5468   005396  C011  F003         	movff	pad@fp,fputc@fp
  5469   00539A  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5470   00539E  EC2C  F026         	call	_fputc	;wreg free
  5471   0053A2                     
  5472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5473   0053A2  4A18               	infsnz	pad@i^0,f,c
  5474   0053A4  2A19               	incf	(pad@i+1)^0,f,c
  5475   0053A6                     l4650:
  5476                           
  5477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5478   0053A6  501A               	movf	pad@w^0,w,c
  5479   0053A8  5C18               	subwf	pad@i^0,w,c
  5480   0053AA  5019               	movf	(pad@i+1)^0,w,c
  5481   0053AC  0A80               	xorlw	128
  5482   0053AE  6E17               	movwf	??_pad^0,c
  5483   0053B0  501B               	movf	(pad@w+1)^0,w,c
  5484   0053B2  0A80               	xorlw	128
  5485   0053B4  5817               	subwfb	??_pad^0,w,c
  5486   0053B6  A0D8               	btfss	status,0,c
  5487   0053B8  EFE0  F029         	goto	u4241
  5488   0053BC  EFE2  F029         	goto	u4240
  5489   0053C0                     u4241:
  5490   0053C0  EFC7  F029         	goto	l4646
  5491   0053C4                     u4240:
  5492   0053C4                     
  5493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5494   0053C4  C013  F00A         	movff	pad@buf,fputs@s
  5495   0053C8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5496   0053CC  C011  F00C         	movff	pad@fp,fputs@fp
  5497   0053D0  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5498   0053D4  EC50  F02F         	call	_fputs	;wreg free
  5499   0053D8  0012               	return		;funcret
  5500   0053DA                     __end_of_pad:
  5501                           	callstack 0
  5502                           
  5503 ;; *************** function _fputs *****************
  5504 ;; Defined at:
  5505 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5508 ;;		 -> dbuf(80), 
  5509 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5510 ;;		 -> sprintf@f(11), 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  i               2   14[COMRAM] int 
  5513 ;;  c               1   13[COMRAM] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  2    9[COMRAM] int 
  5516 ;; Registers used:
  5517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5524 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;Total ram usage:        7 bytes
  5528 ;; Hardware stack levels used: 1
  5529 ;; Hardware stack levels required when called: 3
  5530 ;; This function calls:
  5531 ;;		_fputc
  5532 ;; This function is called by:
  5533 ;;		_pad
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text15
  5538   005EA0                     __ptext15:
  5539                           	callstack 0
  5540   005EA0                     _fputs:
  5541                           	callstack 22
  5542   005EA0  0E00               	movlw	0
  5543   005EA2  6E10               	movwf	(fputs@i+1)^0,c
  5544   005EA4  0E00               	movlw	0
  5545   005EA6  6E0F               	movwf	fputs@i^0,c
  5546   005EA8  EF61  F02F         	goto	l4118
  5547   005EAC                     l4114:
  5548   005EAC  C00E  F001         	movff	fputs@c,fputc@c
  5549   005EB0  6A02               	clrf	(fputc@c+1)^0,c
  5550   005EB2  C00C  F003         	movff	fputs@fp,fputc@fp
  5551   005EB6  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5552   005EBA  EC2C  F026         	call	_fputc	;wreg free
  5553   005EBE  4A0F               	infsnz	fputs@i^0,f,c
  5554   005EC0  2A10               	incf	(fputs@i+1)^0,f,c
  5555   005EC2                     l4118:
  5556   005EC2  500F               	movf	fputs@i^0,w,c
  5557   005EC4  240A               	addwf	fputs@s^0,w,c
  5558   005EC6  6ED9               	movwf	fsr2l,c
  5559   005EC8  5010               	movf	(fputs@i+1)^0,w,c
  5560   005ECA  200B               	addwfc	(fputs@s+1)^0,w,c
  5561   005ECC  6EDA               	movwf	fsr2h,c
  5562   005ECE  50DF               	movf	indf2,w,c
  5563   005ED0  6E0E               	movwf	fputs@c^0,c
  5564   005ED2  500E               	movf	fputs@c^0,w,c
  5565   005ED4  A4D8               	btfss	status,2,c
  5566   005ED6  EF6F  F02F         	goto	u3401
  5567   005EDA  EF71  F02F         	goto	u3400
  5568   005EDE                     u3401:
  5569   005EDE  EF56  F02F         	goto	l4114
  5570   005EE2                     u3400:
  5571   005EE2  0012               	return		;funcret
  5572   005EE4                     __end_of_fputs:
  5573                           	callstack 0
  5574                           
  5575 ;; *************** function _fputc *****************
  5576 ;; Defined at:
  5577 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  c               2    0[COMRAM] int 
  5580 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5581 ;;		 -> sprintf@f(11), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  2    0[COMRAM] int 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5593 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;Total ram usage:        9 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 2
  5600 ;; This function calls:
  5601 ;;		_putch
  5602 ;; This function is called by:
  5603 ;;		_pad
  5604 ;;		_vfpfcnvrt
  5605 ;;		_fputs
  5606 ;; This function uses a non-reentrant model
  5607 ;;
  5608                           
  5609                           	psect	text16
  5610   004C58                     __ptext16:
  5611                           	callstack 0
  5612   004C58                     _fputc:
  5613                           	callstack 25
  5614   004C58  5003               	movf	fputc@fp^0,w,c
  5615   004C5A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5616   004C5C  B4D8               	btfsc	status,2,c
  5617   004C5E  EF33  F026         	goto	u2951
  5618   004C62  EF35  F026         	goto	u2950
  5619   004C66                     u2951:
  5620   004C66  EF3E  F026         	goto	l3884
  5621   004C6A                     u2950:
  5622   004C6A  5003               	movf	fputc@fp^0,w,c
  5623   004C6C  1004               	iorwf	(fputc@fp+1)^0,w,c
  5624   004C6E  A4D8               	btfss	status,2,c
  5625   004C70  EF3C  F026         	goto	u2961
  5626   004C74  EF3E  F026         	goto	u2960
  5627   004C78                     u2961:
  5628   004C78  EF43  F026         	goto	l3886
  5629   004C7C                     u2960:
  5630   004C7C                     l3884:
  5631   004C7C  5001               	movf	fputc@c^0,w,c
  5632   004C7E  EC0C  F031         	call	_putch
  5633   004C82  EF90  F026         	goto	l1627
  5634   004C86                     l3886:
  5635   004C86  EE20 F009          	lfsr	2,9
  5636   004C8A  5003               	movf	fputc@fp^0,w,c
  5637   004C8C  26D9               	addwf	fsr2l,f,c
  5638   004C8E  5004               	movf	(fputc@fp+1)^0,w,c
  5639   004C90  22DA               	addwfc	fsr2h,f,c
  5640   004C92  50DE               	movf	postinc2,w,c
  5641   004C94  10DE               	iorwf	postinc2,w,c
  5642   004C96  B4D8               	btfsc	status,2,c
  5643   004C98  EF50  F026         	goto	u2971
  5644   004C9C  EF52  F026         	goto	u2970
  5645   004CA0                     u2971:
  5646   004CA0  EF6D  F026         	goto	l3890
  5647   004CA4                     u2970:
  5648   004CA4  EE20 F009          	lfsr	2,9
  5649   004CA8  5003               	movf	fputc@fp^0,w,c
  5650   004CAA  26D9               	addwf	fsr2l,f,c
  5651   004CAC  5004               	movf	(fputc@fp+1)^0,w,c
  5652   004CAE  22DA               	addwfc	fsr2h,f,c
  5653   004CB0  EE10 F003          	lfsr	1,3
  5654   004CB4  5003               	movf	fputc@fp^0,w,c
  5655   004CB6  26E1               	addwf	fsr1l,f,c
  5656   004CB8  5004               	movf	(fputc@fp+1)^0,w,c
  5657   004CBA  22E2               	addwfc	fsr1h,f,c
  5658   004CBC  50DE               	movf	postinc2,w,c
  5659   004CBE  5CE6               	subwf	postinc1,w,c
  5660   004CC0  50E6               	movf	postinc1,w,c
  5661   004CC2  0A80               	xorlw	128
  5662   004CC4  6E09               	movwf	(??_fputc+4)^0,c
  5663   004CC6  50DE               	movf	postinc2,w,c
  5664   004CC8  0A80               	xorlw	128
  5665   004CCA  5809               	subwfb	(??_fputc+4)^0,w,c
  5666   004CCC  B0D8               	btfsc	status,0,c
  5667   004CCE  EF6B  F026         	goto	u2981
  5668   004CD2  EF6D  F026         	goto	u2980
  5669   004CD6                     u2981:
  5670   004CD6  EF90  F026         	goto	l1627
  5671   004CDA                     u2980:
  5672   004CDA                     l3890:
  5673   004CDA  EE20 F003          	lfsr	2,3
  5674   004CDE  5003               	movf	fputc@fp^0,w,c
  5675   004CE0  26D9               	addwf	fsr2l,f,c
  5676   004CE2  5004               	movf	(fputc@fp+1)^0,w,c
  5677   004CE4  22DA               	addwfc	fsr2h,f,c
  5678   004CE6  CFDE F005          	movff	postinc2,??_fputc
  5679   004CEA  CFDD F006          	movff	postdec2,??_fputc+1
  5680   004CEE  C003  FFD9         	movff	fputc@fp,fsr2l
  5681   004CF2  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5682   004CF6  CFDE F007          	movff	postinc2,??_fputc+2
  5683   004CFA  CFDD F008          	movff	postdec2,??_fputc+3
  5684   004CFE  5005               	movf	??_fputc^0,w,c
  5685   004D00  2407               	addwf	(??_fputc+2)^0,w,c
  5686   004D02  6ED9               	movwf	fsr2l,c
  5687   004D04  5006               	movf	(??_fputc+1)^0,w,c
  5688   004D06  2008               	addwfc	(??_fputc+3)^0,w,c
  5689   004D08  6EDA               	movwf	fsr2h,c
  5690   004D0A  C001  FFDF         	movff	fputc@c,indf2
  5691   004D0E  EE20 F003          	lfsr	2,3
  5692   004D12  5003               	movf	fputc@fp^0,w,c
  5693   004D14  26D9               	addwf	fsr2l,f,c
  5694   004D16  5004               	movf	(fputc@fp+1)^0,w,c
  5695   004D18  22DA               	addwfc	fsr2h,f,c
  5696   004D1A  2ADE               	incf	postinc2,f,c
  5697   004D1C  0E00               	movlw	0
  5698   004D1E  22DD               	addwfc	postdec2,f,c
  5699   004D20                     l1627:
  5700   004D20  0012               	return		;funcret
  5701   004D22                     __end_of_fputc:
  5702                           	callstack 0
  5703                           
  5704 ;; *************** function _putch *****************
  5705 ;; Defined at:
  5706 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  c               1    wreg     unsigned char 
  5709 ;; Auto vars:     Size  Location     Type
  5710 ;;  c               1    0[COMRAM] unsigned char 
  5711 ;; Return value:  Size  Location     Type
  5712 ;;                  1    wreg      void 
  5713 ;; Registers used:
  5714 ;;		wreg
  5715 ;; Tracked objects:
  5716 ;;		On entry : 0/0
  5717 ;;		On exit  : 0/0
  5718 ;;		Unchanged: 0/0
  5719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5724 ;;Total ram usage:        0 bytes
  5725 ;; Hardware stack levels used: 1
  5726 ;; Hardware stack levels required when called: 1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_fputc
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text17
  5735   006218                     __ptext17:
  5736                           	callstack 0
  5737   006218                     _putch:
  5738                           	callstack 25
  5739   006218  0012               	return		;funcret
  5740   00621A                     __end_of_putch:
  5741                           	callstack 0
  5742                           
  5743 ;; *************** function _abs *****************
  5744 ;; Defined at:
  5745 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  a               2   18[COMRAM] int 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;		None
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  2   18[COMRAM] int 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5763 ;;Total ram usage:        4 bytes
  5764 ;; Hardware stack levels used: 1
  5765 ;; Hardware stack levels required when called: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_dtoa
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text18
  5774   005F26                     __ptext18:
  5775                           	callstack 0
  5776   005F26                     _abs:
  5777                           	callstack 25
  5778   005F26  BE14               	btfsc	(abs@a+1)^0,7,c
  5779   005F28  EFA0  F02F         	goto	u4250
  5780   005F2C  5014               	movf	(abs@a+1)^0,w,c
  5781   005F2E  E106               	bnz	u4251
  5782   005F30  0413               	decf	abs@a^0,w,c
  5783   005F32  B0D8               	btfsc	status,0,c
  5784   005F34  EF9E  F02F         	goto	u4251
  5785   005F38  EFA0  F02F         	goto	u4250
  5786   005F3C                     u4251:
  5787   005F3C  EFAE  F02F         	goto	l1586
  5788   005F40                     u4250:
  5789   005F40  C013  F015         	movff	abs@a,??_abs
  5790   005F44  C014  F016         	movff	abs@a+1,??_abs+1
  5791   005F48  1E15               	comf	??_abs^0,f,c
  5792   005F4A  1E16               	comf	(??_abs+1)^0,f,c
  5793   005F4C  4A15               	infsnz	??_abs^0,f,c
  5794   005F4E  2A16               	incf	(??_abs+1)^0,f,c
  5795   005F50  C015  F013         	movff	??_abs,?_abs
  5796   005F54  C016  F014         	movff	??_abs+1,?_abs+1
  5797   005F58  EFB2  F02F         	goto	l1589
  5798   005F5C                     l1586:
  5799   005F5C  C013  F013         	movff	abs@a,?_abs
  5800   005F60  C014  F014         	movff	abs@a+1,?_abs+1
  5801   005F64                     l1589:
  5802   005F64  0012               	return		;funcret
  5803   005F66                     __end_of_abs:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function ___aomod *****************
  5807 ;; Defined at:
  5808 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  dividend        8    0[COMRAM] long long 
  5811 ;;  divisor         8    8[COMRAM] long long 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  sign            1   17[COMRAM] unsigned char 
  5814 ;;  counter         1   16[COMRAM] unsigned char 
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  8    0[COMRAM] long long 
  5817 ;; Registers used:
  5818 ;;		wreg, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 0/0
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5824 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;Total ram usage:       18 bytes
  5829 ;; Hardware stack levels used: 1
  5830 ;; Hardware stack levels required when called: 1
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_dtoa
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text19
  5839   0047EC                     __ptext19:
  5840                           	callstack 0
  5841   0047EC                     ___aomod:
  5842                           	callstack 25
  5843   0047EC  0E00               	movlw	0
  5844   0047EE  6E12               	movwf	___aomod@sign^0,c
  5845   0047F0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  5846   0047F2  EFFF  F023         	goto	u3590
  5847   0047F6  EFFD  F023         	goto	u3591
  5848   0047FA                     u3591:
  5849   0047FA  EF11  F024         	goto	l4248
  5850   0047FE                     u3590:
  5851   0047FE  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5852   004800  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5853   004802  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5854   004804  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5855   004806  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5856   004808  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5857   00480A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5858   00480C  6C01               	negf	___aomod@dividend^0,c
  5859   00480E  0E00               	movlw	0
  5860   004810  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5861   004812  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5862   004814  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5863   004816  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  5864   004818  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  5865   00481A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  5866   00481C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  5867   00481E  0E01               	movlw	1
  5868   004820  6E12               	movwf	___aomod@sign^0,c
  5869   004822                     l4248:
  5870   004822  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  5871   004824  EF18  F024         	goto	u3600
  5872   004828  EF16  F024         	goto	u3601
  5873   00482C                     u3601:
  5874   00482C  EF28  F024         	goto	l4252
  5875   004830                     u3600:
  5876   004830  1E10               	comf	(___aomod@divisor+7)^0,f,c
  5877   004832  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  5878   004834  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  5879   004836  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  5880   004838  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  5881   00483A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  5882   00483C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  5883   00483E  6C09               	negf	___aomod@divisor^0,c
  5884   004840  0E00               	movlw	0
  5885   004842  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  5886   004844  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  5887   004846  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  5888   004848  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  5889   00484A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  5890   00484C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  5891   00484E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  5892   004850                     l4252:
  5893   004850  5009               	movf	___aomod@divisor^0,w,c
  5894   004852  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  5895   004854  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  5896   004856  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  5897   004858  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  5898   00485A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  5899   00485C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  5900   00485E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  5901   004860  B4D8               	btfsc	status,2,c
  5902   004862  EF35  F024         	goto	u3611
  5903   004866  EF37  F024         	goto	u3610
  5904   00486A                     u3611:
  5905   00486A  EF7F  F024         	goto	l4268
  5906   00486E                     u3610:
  5907   00486E  0E01               	movlw	1
  5908   004870  6E11               	movwf	___aomod@counter^0,c
  5909   004872  EF45  F024         	goto	l4258
  5910   004876                     l4256:
  5911   004876  90D8               	bcf	status,0,c
  5912   004878  3609               	rlcf	___aomod@divisor^0,f,c
  5913   00487A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  5914   00487C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  5915   00487E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  5916   004880  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  5917   004882  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  5918   004884  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  5919   004886  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  5920   004888  2A11               	incf	___aomod@counter^0,f,c
  5921   00488A                     l4258:
  5922   00488A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  5923   00488C  EF4A  F024         	goto	u3621
  5924   004890  EF4C  F024         	goto	u3620
  5925   004894                     u3621:
  5926   004894  EF3B  F024         	goto	l4256
  5927   004898                     u3620:
  5928   004898                     l4260:
  5929   004898  5009               	movf	___aomod@divisor^0,w,c
  5930   00489A  5C01               	subwf	___aomod@dividend^0,w,c
  5931   00489C  500A               	movf	(___aomod@divisor+1)^0,w,c
  5932   00489E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  5933   0048A0  500B               	movf	(___aomod@divisor+2)^0,w,c
  5934   0048A2  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  5935   0048A4  500C               	movf	(___aomod@divisor+3)^0,w,c
  5936   0048A6  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  5937   0048A8  500D               	movf	(___aomod@divisor+4)^0,w,c
  5938   0048AA  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  5939   0048AC  500E               	movf	(___aomod@divisor+5)^0,w,c
  5940   0048AE  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  5941   0048B0  500F               	movf	(___aomod@divisor+6)^0,w,c
  5942   0048B2  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  5943   0048B4  5010               	movf	(___aomod@divisor+7)^0,w,c
  5944   0048B6  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  5945   0048B8  A0D8               	btfss	status,0,c
  5946   0048BA  EF61  F024         	goto	u3631
  5947   0048BE  EF63  F024         	goto	u3630
  5948   0048C2                     u3631:
  5949   0048C2  EF73  F024         	goto	l4264
  5950   0048C6                     u3630:
  5951   0048C6  5009               	movf	___aomod@divisor^0,w,c
  5952   0048C8  5E01               	subwf	___aomod@dividend^0,f,c
  5953   0048CA  500A               	movf	(___aomod@divisor+1)^0,w,c
  5954   0048CC  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  5955   0048CE  500B               	movf	(___aomod@divisor+2)^0,w,c
  5956   0048D0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  5957   0048D2  500C               	movf	(___aomod@divisor+3)^0,w,c
  5958   0048D4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  5959   0048D6  500D               	movf	(___aomod@divisor+4)^0,w,c
  5960   0048D8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  5961   0048DA  500E               	movf	(___aomod@divisor+5)^0,w,c
  5962   0048DC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  5963   0048DE  500F               	movf	(___aomod@divisor+6)^0,w,c
  5964   0048E0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  5965   0048E2  5010               	movf	(___aomod@divisor+7)^0,w,c
  5966   0048E4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  5967   0048E6                     l4264:
  5968   0048E6  90D8               	bcf	status,0,c
  5969   0048E8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  5970   0048EA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  5971   0048EC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  5972   0048EE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  5973   0048F0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  5974   0048F2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  5975   0048F4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  5976   0048F6  3209               	rrcf	___aomod@divisor^0,f,c
  5977   0048F8  2E11               	decfsz	___aomod@counter^0,f,c
  5978   0048FA  EF4C  F024         	goto	l4260
  5979   0048FE                     l4268:
  5980   0048FE  5012               	movf	___aomod@sign^0,w,c
  5981   004900  B4D8               	btfsc	status,2,c
  5982   004902  EF85  F024         	goto	u3641
  5983   004906  EF87  F024         	goto	u3640
  5984   00490A                     u3641:
  5985   00490A  EF97  F024         	goto	l4272
  5986   00490E                     u3640:
  5987   00490E  1E08               	comf	(___aomod@dividend+7)^0,f,c
  5988   004910  1E07               	comf	(___aomod@dividend+6)^0,f,c
  5989   004912  1E06               	comf	(___aomod@dividend+5)^0,f,c
  5990   004914  1E05               	comf	(___aomod@dividend+4)^0,f,c
  5991   004916  1E04               	comf	(___aomod@dividend+3)^0,f,c
  5992   004918  1E03               	comf	(___aomod@dividend+2)^0,f,c
  5993   00491A  1E02               	comf	(___aomod@dividend+1)^0,f,c
  5994   00491C  6C01               	negf	___aomod@dividend^0,c
  5995   00491E  0E00               	movlw	0
  5996   004920  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  5997   004922  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  5998   004924  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  5999   004926  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6000   004928  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6001   00492A  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6002   00492C  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6003   00492E                     l4272:
  6004   00492E  C001  F001         	movff	___aomod@dividend,?___aomod
  6005   004932  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6006   004936  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6007   00493A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6008   00493E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6009   004942  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6010   004946  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6011   00494A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6012   00494E  0012               	return		;funcret
  6013   004950                     __end_of___aomod:
  6014                           	callstack 0
  6015                           
  6016 ;; *************** function ___aodiv *****************
  6017 ;; Defined at:
  6018 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  dividend        8    0[COMRAM] long long 
  6021 ;;  divisor         8    8[COMRAM] long long 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  quotient        8   18[COMRAM] long long 
  6024 ;;  sign            1   17[COMRAM] unsigned char 
  6025 ;;  counter         1   16[COMRAM] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  8    0[COMRAM] long long 
  6028 ;; Registers used:
  6029 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6035 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6036 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6038 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6039 ;;Total ram usage:       26 bytes
  6040 ;; Hardware stack levels used: 1
  6041 ;; Hardware stack levels required when called: 1
  6042 ;; This function calls:
  6043 ;;		Nothing
  6044 ;; This function is called by:
  6045 ;;		_dtoa
  6046 ;; This function uses a non-reentrant model
  6047 ;;
  6048                           
  6049                           	psect	text20
  6050   0044F8                     __ptext20:
  6051                           	callstack 0
  6052   0044F8                     ___aodiv:
  6053                           	callstack 25
  6054   0044F8  0E00               	movlw	0
  6055   0044FA  6E12               	movwf	___aodiv@sign^0,c
  6056   0044FC  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6057   0044FE  EF85  F022         	goto	u3520
  6058   004502  EF83  F022         	goto	u3521
  6059   004506                     u3521:
  6060   004506  EF97  F022         	goto	l4204
  6061   00450A                     u3520:
  6062   00450A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6063   00450C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6064   00450E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6065   004510  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6066   004512  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6067   004514  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6068   004516  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6069   004518  6C09               	negf	___aodiv@divisor^0,c
  6070   00451A  0E00               	movlw	0
  6071   00451C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6072   00451E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6073   004520  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6074   004522  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6075   004524  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6076   004526  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6077   004528  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6078   00452A  0E01               	movlw	1
  6079   00452C  6E12               	movwf	___aodiv@sign^0,c
  6080   00452E                     l4204:
  6081   00452E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6082   004530  EF9E  F022         	goto	u3530
  6083   004534  EF9C  F022         	goto	u3531
  6084   004538                     u3531:
  6085   004538  EFB0  F022         	goto	l4210
  6086   00453C                     u3530:
  6087   00453C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6088   00453E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6089   004540  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6090   004542  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6091   004544  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6092   004546  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6093   004548  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6094   00454A  6C01               	negf	___aodiv@dividend^0,c
  6095   00454C  0E00               	movlw	0
  6096   00454E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6097   004550  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6098   004552  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6099   004554  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6100   004556  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6101   004558  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6102   00455A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6103   00455C  0E01               	movlw	1
  6104   00455E  1A12               	xorwf	___aodiv@sign^0,f,c
  6105   004560                     l4210:
  6106   004560  EE20  F013         	lfsr	2,___aodiv@quotient
  6107   004564  0E07               	movlw	7
  6108   004566                     u3541:
  6109   004566  6ADE               	clrf	postinc2,c
  6110   004568  06E8               	decf	wreg,f,c
  6111   00456A  E2FD               	bc	u3541
  6112   00456C  5009               	movf	___aodiv@divisor^0,w,c
  6113   00456E  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6114   004570  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6115   004572  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6116   004574  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6117   004576  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6118   004578  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6119   00457A  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6120   00457C  B4D8               	btfsc	status,2,c
  6121   00457E  EFC3  F022         	goto	u3551
  6122   004582  EFC5  F022         	goto	u3550
  6123   004586                     u3551:
  6124   004586  EF17  F023         	goto	l4232
  6125   00458A                     u3550:
  6126   00458A  0E01               	movlw	1
  6127   00458C  6E11               	movwf	___aodiv@counter^0,c
  6128   00458E  EFD3  F022         	goto	l4218
  6129   004592                     l4216:
  6130   004592  90D8               	bcf	status,0,c
  6131   004594  3609               	rlcf	___aodiv@divisor^0,f,c
  6132   004596  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6133   004598  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6134   00459A  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6135   00459C  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6136   00459E  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6137   0045A0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6138   0045A2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6139   0045A4  2A11               	incf	___aodiv@counter^0,f,c
  6140   0045A6                     l4218:
  6141   0045A6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6142   0045A8  EFD8  F022         	goto	u3561
  6143   0045AC  EFDA  F022         	goto	u3560
  6144   0045B0                     u3561:
  6145   0045B0  EFC9  F022         	goto	l4216
  6146   0045B4                     u3560:
  6147   0045B4                     l4220:
  6148   0045B4  90D8               	bcf	status,0,c
  6149   0045B6  3613               	rlcf	___aodiv@quotient^0,f,c
  6150   0045B8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6151   0045BA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6152   0045BC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6153   0045BE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6154   0045C0  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6155   0045C2  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6156   0045C4  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6157   0045C6  5009               	movf	___aodiv@divisor^0,w,c
  6158   0045C8  5C01               	subwf	___aodiv@dividend^0,w,c
  6159   0045CA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6160   0045CC  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6161   0045CE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6162   0045D0  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6163   0045D2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6164   0045D4  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6165   0045D6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6166   0045D8  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6167   0045DA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6168   0045DC  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6169   0045DE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6170   0045E0  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6171   0045E2  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6172   0045E4  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6173   0045E6  A0D8               	btfss	status,0,c
  6174   0045E8  EFF8  F022         	goto	u3571
  6175   0045EC  EFFA  F022         	goto	u3570
  6176   0045F0                     u3571:
  6177   0045F0  EF0B  F023         	goto	l4228
  6178   0045F4                     u3570:
  6179   0045F4  5009               	movf	___aodiv@divisor^0,w,c
  6180   0045F6  5E01               	subwf	___aodiv@dividend^0,f,c
  6181   0045F8  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6182   0045FA  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6183   0045FC  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6184   0045FE  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6185   004600  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6186   004602  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6187   004604  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6188   004606  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6189   004608  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6190   00460A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6191   00460C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6192   00460E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6193   004610  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6194   004612  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6195   004614  8013               	bsf	___aodiv@quotient^0,0,c
  6196   004616                     l4228:
  6197   004616  90D8               	bcf	status,0,c
  6198   004618  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6199   00461A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6200   00461C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6201   00461E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6202   004620  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6203   004622  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6204   004624  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6205   004626  3209               	rrcf	___aodiv@divisor^0,f,c
  6206   004628  2E11               	decfsz	___aodiv@counter^0,f,c
  6207   00462A  EFDA  F022         	goto	l4220
  6208   00462E                     l4232:
  6209   00462E  5012               	movf	___aodiv@sign^0,w,c
  6210   004630  B4D8               	btfsc	status,2,c
  6211   004632  EF1D  F023         	goto	u3581
  6212   004636  EF1F  F023         	goto	u3580
  6213   00463A                     u3581:
  6214   00463A  EF2F  F023         	goto	l4236
  6215   00463E                     u3580:
  6216   00463E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6217   004640  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6218   004642  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6219   004644  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6220   004646  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6221   004648  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6222   00464A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6223   00464C  6C13               	negf	___aodiv@quotient^0,c
  6224   00464E  0E00               	movlw	0
  6225   004650  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6226   004652  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6227   004654  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6228   004656  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6229   004658  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6230   00465A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6231   00465C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6232   00465E                     l4236:
  6233   00465E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6234   004662  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6235   004666  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6236   00466A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6237   00466E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6238   004672  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6239   004676  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6240   00467A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6241   00467E  0012               	return		;funcret
  6242   004680                     __end_of___aodiv:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function _sendStringSerial4 *****************
  6246 ;; Defined at:
  6247 ;;		line 33 in file "serial.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  string          2    1[COMRAM] PTR unsigned char 
  6250 ;;		 -> main@buf(100), 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;		None
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  1    wreg      void 
  6255 ;; Registers used:
  6256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;Total ram usage:        2 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 2
  6269 ;; This function calls:
  6270 ;;		_sendCharSerial4
  6271 ;; This function is called by:
  6272 ;;		_main
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text21
  6277   006088                     __ptext21:
  6278                           	callstack 0
  6279   006088                     _sendStringSerial4:
  6280                           	callstack 28
  6281   006088                     
  6282                           ;serial.c: 34:     while (*string!=0){
  6283   006088  EF4F  F030         	goto	l5580
  6284   00608C                     l5576:
  6285                           
  6286                           ;serial.c: 35:         sendCharSerial4(*string++);
  6287   00608C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6288   006090  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6289   006094  50DF               	movf	indf2,w,c
  6290   006096  ECDA  F030         	call	_sendCharSerial4
  6291   00609A  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6292   00609C  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6293   00609E                     l5580:
  6294                           
  6295                           ;serial.c: 34:     while (*string!=0){
  6296   00609E  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6297   0060A2  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6298   0060A6  50DF               	movf	indf2,w,c
  6299   0060A8  A4D8               	btfss	status,2,c
  6300   0060AA  EF59  F030         	goto	u5481
  6301   0060AE  EF5B  F030         	goto	u5480
  6302   0060B2                     u5481:
  6303   0060B2  EF46  F030         	goto	l5576
  6304   0060B6                     u5480:
  6305   0060B6  0012               	return		;funcret
  6306   0060B8                     __end_of_sendStringSerial4:
  6307                           	callstack 0
  6308                           
  6309 ;; *************** function _sendCharSerial4 *****************
  6310 ;; Defined at:
  6311 ;;		line 26 in file "serial.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  charToSend      1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  charToSend      1    0[COMRAM] unsigned char 
  6316 ;; Return value:  Size  Location     Type
  6317 ;;                  1    wreg      void 
  6318 ;; Registers used:
  6319 ;;		wreg
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;Total ram usage:        1 bytes
  6330 ;; Hardware stack levels used: 1
  6331 ;; Hardware stack levels required when called: 1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_sendStringSerial4
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text22
  6340   0061B4                     __ptext22:
  6341                           	callstack 0
  6342   0061B4                     _sendCharSerial4:
  6343                           	callstack 28
  6344                           
  6345                           ;incstack = 0
  6346                           ;sendCharSerial4@charToSend stored from wreg
  6347   0061B4  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6348   0061B6                     l197:
  6349   0061B6  010E               	movlb	14	; () banked
  6350   0061B8  A537               	btfss	55,2,b	;volatile
  6351   0061BA  EFE1  F030         	goto	u4991
  6352   0061BE  EFE3  F030         	goto	u4990
  6353   0061C2                     u4991:
  6354   0061C2  EFDB  F030         	goto	l197
  6355   0061C6                     u4990:
  6356   0061C6                     
  6357                           ; BSR set to: 14
  6358                           ;serial.c: 28:     TX4REG = charToSend;
  6359   0061C6  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6360   0061CA                     
  6361                           ; BSR set to: 14
  6362   0061CA  0012               	return		;funcret
  6363   0061CC                     __end_of_sendCharSerial4:
  6364                           	callstack 0
  6365                           
  6366 ;; *************** function _readColours *****************
  6367 ;; Defined at:
  6368 ;;		line 106 in file "color.c"
  6369 ;; Parameters:    Size  Location     Type
  6370 ;;  vals            2   11[COMRAM] PTR struct RGB
  6371 ;;		 -> vals(8), 
  6372 ;; Auto vars:     Size  Location     Type
  6373 ;;		None
  6374 ;; Return value:  Size  Location     Type
  6375 ;;                  1    wreg      void 
  6376 ;; Registers used:
  6377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6378 ;; Tracked objects:
  6379 ;;		On entry : 0/0
  6380 ;;		On exit  : 0/0
  6381 ;;		Unchanged: 0/0
  6382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6383 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6386 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6387 ;;Total ram usage:        2 bytes
  6388 ;; Hardware stack levels used: 1
  6389 ;; Hardware stack levels required when called: 4
  6390 ;; This function calls:
  6391 ;;		_color_read_Blue
  6392 ;;		_color_read_Green
  6393 ;;		_color_read_Red
  6394 ;;		_color_read_lum
  6395 ;; This function is called by:
  6396 ;;		_main
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text23
  6401   005734                     __ptext23:
  6402                           	callstack 0
  6403   005734                     _readColours:
  6404                           	callstack 26
  6405   005734                     
  6406                           ;color.c: 108:     vals ->R = color_read_Red();
  6407   005734  EC45  F02E         	call	_color_read_Red	;wreg free
  6408   005738  C00C  FFD9         	movff	readColours@vals,fsr2l
  6409   00573C  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6410   005740  C005  FFDE         	movff	?_color_read_Red,postinc2
  6411   005744  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6412                           
  6413                           ;color.c: 109:     vals ->B = color_read_Blue();
  6414   005748  EC95  F02E         	call	_color_read_Blue	;wreg free
  6415   00574C  EE20 F004          	lfsr	2,4
  6416   005750  500C               	movf	readColours@vals^0,w,c
  6417   005752  26D9               	addwf	fsr2l,f,c
  6418   005754  500D               	movf	(readColours@vals+1)^0,w,c
  6419   005756  22DA               	addwfc	fsr2h,f,c
  6420   005758  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6421   00575C  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6422                           
  6423                           ;color.c: 110:     vals ->G = color_read_Green();
  6424   005760  EC6D  F02E         	call	_color_read_Green	;wreg free
  6425   005764  EE20 F002          	lfsr	2,2
  6426   005768  500C               	movf	readColours@vals^0,w,c
  6427   00576A  26D9               	addwf	fsr2l,f,c
  6428   00576C  500D               	movf	(readColours@vals+1)^0,w,c
  6429   00576E  22DA               	addwfc	fsr2h,f,c
  6430   005770  C005  FFDE         	movff	?_color_read_Green,postinc2
  6431   005774  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6432                           
  6433                           ;color.c: 111:     vals ->L = color_read_lum();
  6434   005778  EC1D  F02E         	call	_color_read_lum	;wreg free
  6435   00577C  EE20 F006          	lfsr	2,6
  6436   005780  500C               	movf	readColours@vals^0,w,c
  6437   005782  26D9               	addwf	fsr2l,f,c
  6438   005784  500D               	movf	(readColours@vals+1)^0,w,c
  6439   005786  22DA               	addwfc	fsr2h,f,c
  6440   005788  C005  FFDE         	movff	?_color_read_lum,postinc2
  6441   00578C  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6442   005790  0012               	return		;funcret
  6443   005792                     __end_of_readColours:
  6444                           	callstack 0
  6445                           
  6446 ;; *************** function _color_read_lum *****************
  6447 ;; Defined at:
  6448 ;;		line 50 in file "color.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;		None
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  tmp             2    9[COMRAM] unsigned int 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  2    4[COMRAM] unsigned int 
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0, cstack
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6465 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6466 ;;Total ram usage:        7 bytes
  6467 ;; Hardware stack levels used: 1
  6468 ;; Hardware stack levels required when called: 3
  6469 ;; This function calls:
  6470 ;;		_I2C_2_Master_Read
  6471 ;;		_I2C_2_Master_RepStart
  6472 ;;		_I2C_2_Master_Start
  6473 ;;		_I2C_2_Master_Stop
  6474 ;;		_I2C_2_Master_Write
  6475 ;; This function is called by:
  6476 ;;		_readColours
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text24
  6481   005C3A                     __ptext24:
  6482                           	callstack 0
  6483   005C3A                     _color_read_lum:
  6484                           	callstack 26
  6485   005C3A                     
  6486                           ;color.c: 52:  unsigned int tmp;;color.c: 53:  I2C_2_Master_Start();
  6487   005C3A  EC02  F031         	call	_I2C_2_Master_Start	;wreg free
  6488                           
  6489                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x00);
  6490   005C3E  0E52               	movlw	82
  6491   005C40  ECE6  F030         	call	_I2C_2_Master_Write
  6492                           
  6493                           ;color.c: 55:  I2C_2_Master_Write(0xA0 | 0x14);
  6494   005C44  0EB4               	movlw	180
  6495   005C46  ECE6  F030         	call	_I2C_2_Master_Write
  6496                           
  6497                           ;color.c: 56:  I2C_2_Master_RepStart();
  6498   005C4A  ECF8  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6499                           
  6500                           ;color.c: 57:  I2C_2_Master_Write(0x52 | 0x01);
  6501   005C4E  0E53               	movlw	83
  6502   005C50  ECE6  F030         	call	_I2C_2_Master_Write
  6503                           
  6504                           ;color.c: 58:  tmp=I2C_2_Master_Read(1);
  6505   005C54  0E01               	movlw	1
  6506   005C56  EC72  F02F         	call	_I2C_2_Master_Read
  6507   005C5A  6E07               	movwf	??_color_read_lum^0,c
  6508   005C5C  5007               	movf	??_color_read_lum^0,w,c
  6509   005C5E  6E0A               	movwf	color_read_lum@tmp^0,c
  6510   005C60  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6511                           
  6512                           ;color.c: 59:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6513   005C62  0E00               	movlw	0
  6514   005C64  EC72  F02F         	call	_I2C_2_Master_Read
  6515   005C68  6E07               	movwf	??_color_read_lum^0,c
  6516   005C6A  5007               	movf	??_color_read_lum^0,w,c
  6517   005C6C  6E09               	movwf	(??_color_read_lum+2)^0,c
  6518   005C6E  6A08               	clrf	(??_color_read_lum+1)^0,c
  6519   005C70  500A               	movf	color_read_lum@tmp^0,w,c
  6520   005C72  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6521   005C74  6E0A               	movwf	color_read_lum@tmp^0,c
  6522   005C76  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6523   005C78  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6524   005C7A  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6525                           
  6526                           ;color.c: 60:  I2C_2_Master_Stop();
  6527   005C7C  ECFD  F030         	call	_I2C_2_Master_Stop	;wreg free
  6528   005C80                     
  6529                           ;color.c: 61:  return tmp;
  6530   005C80  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6531   005C84  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6532   005C88  0012               	return		;funcret
  6533   005C8A                     __end_of_color_read_lum:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function _color_read_Red *****************
  6537 ;; Defined at:
  6538 ;;		line 64 in file "color.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  tmp             2    9[COMRAM] unsigned int 
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  2    4[COMRAM] unsigned int 
  6545 ;; Registers used:
  6546 ;;		wreg, status,2, status,0, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6555 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6556 ;;Total ram usage:        7 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 3
  6559 ;; This function calls:
  6560 ;;		_I2C_2_Master_Read
  6561 ;;		_I2C_2_Master_RepStart
  6562 ;;		_I2C_2_Master_Start
  6563 ;;		_I2C_2_Master_Stop
  6564 ;;		_I2C_2_Master_Write
  6565 ;; This function is called by:
  6566 ;;		_readColours
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text25
  6571   005C8A                     __ptext25:
  6572                           	callstack 0
  6573   005C8A                     _color_read_Red:
  6574                           	callstack 26
  6575   005C8A                     
  6576                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  6577   005C8A  EC02  F031         	call	_I2C_2_Master_Start	;wreg free
  6578                           
  6579                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  6580   005C8E  0E52               	movlw	82
  6581   005C90  ECE6  F030         	call	_I2C_2_Master_Write
  6582                           
  6583                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  6584   005C94  0EB6               	movlw	182
  6585   005C96  ECE6  F030         	call	_I2C_2_Master_Write
  6586                           
  6587                           ;color.c: 70:  I2C_2_Master_RepStart();
  6588   005C9A  ECF8  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6589                           
  6590                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  6591   005C9E  0E53               	movlw	83
  6592   005CA0  ECE6  F030         	call	_I2C_2_Master_Write
  6593                           
  6594                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  6595   005CA4  0E01               	movlw	1
  6596   005CA6  EC72  F02F         	call	_I2C_2_Master_Read
  6597   005CAA  6E07               	movwf	??_color_read_Red^0,c
  6598   005CAC  5007               	movf	??_color_read_Red^0,w,c
  6599   005CAE  6E0A               	movwf	color_read_Red@tmp^0,c
  6600   005CB0  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  6601                           
  6602                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6603   005CB2  0E00               	movlw	0
  6604   005CB4  EC72  F02F         	call	_I2C_2_Master_Read
  6605   005CB8  6E07               	movwf	??_color_read_Red^0,c
  6606   005CBA  5007               	movf	??_color_read_Red^0,w,c
  6607   005CBC  6E09               	movwf	(??_color_read_Red+2)^0,c
  6608   005CBE  6A08               	clrf	(??_color_read_Red+1)^0,c
  6609   005CC0  500A               	movf	color_read_Red@tmp^0,w,c
  6610   005CC2  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  6611   005CC4  6E0A               	movwf	color_read_Red@tmp^0,c
  6612   005CC6  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  6613   005CC8  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  6614   005CCA  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  6615                           
  6616                           ;color.c: 74:  I2C_2_Master_Stop();
  6617   005CCC  ECFD  F030         	call	_I2C_2_Master_Stop	;wreg free
  6618   005CD0                     
  6619                           ;color.c: 75:  return tmp;
  6620   005CD0  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  6621   005CD4  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6622   005CD8  0012               	return		;funcret
  6623   005CDA                     __end_of_color_read_Red:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _color_read_Green *****************
  6627 ;; Defined at:
  6628 ;;		line 77 in file "color.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;		None
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  tmp             2    9[COMRAM] unsigned int 
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  2    4[COMRAM] unsigned int 
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;Total ram usage:        7 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 3
  6649 ;; This function calls:
  6650 ;;		_I2C_2_Master_Read
  6651 ;;		_I2C_2_Master_RepStart
  6652 ;;		_I2C_2_Master_Start
  6653 ;;		_I2C_2_Master_Stop
  6654 ;;		_I2C_2_Master_Write
  6655 ;; This function is called by:
  6656 ;;		_readColours
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text26
  6661   005CDA                     __ptext26:
  6662                           	callstack 0
  6663   005CDA                     _color_read_Green:
  6664                           	callstack 26
  6665   005CDA                     
  6666                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  6667   005CDA  EC02  F031         	call	_I2C_2_Master_Start	;wreg free
  6668                           
  6669                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  6670   005CDE  0E52               	movlw	82
  6671   005CE0  ECE6  F030         	call	_I2C_2_Master_Write
  6672                           
  6673                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x18);
  6674   005CE4  0EB8               	movlw	184
  6675   005CE6  ECE6  F030         	call	_I2C_2_Master_Write
  6676                           
  6677                           ;color.c: 83:  I2C_2_Master_RepStart();
  6678   005CEA  ECF8  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6679                           
  6680                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  6681   005CEE  0E53               	movlw	83
  6682   005CF0  ECE6  F030         	call	_I2C_2_Master_Write
  6683                           
  6684                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  6685   005CF4  0E01               	movlw	1
  6686   005CF6  EC72  F02F         	call	_I2C_2_Master_Read
  6687   005CFA  6E07               	movwf	??_color_read_Green^0,c
  6688   005CFC  5007               	movf	??_color_read_Green^0,w,c
  6689   005CFE  6E0A               	movwf	color_read_Green@tmp^0,c
  6690   005D00  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  6691                           
  6692                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6693   005D02  0E00               	movlw	0
  6694   005D04  EC72  F02F         	call	_I2C_2_Master_Read
  6695   005D08  6E07               	movwf	??_color_read_Green^0,c
  6696   005D0A  5007               	movf	??_color_read_Green^0,w,c
  6697   005D0C  6E09               	movwf	(??_color_read_Green+2)^0,c
  6698   005D0E  6A08               	clrf	(??_color_read_Green+1)^0,c
  6699   005D10  500A               	movf	color_read_Green@tmp^0,w,c
  6700   005D12  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  6701   005D14  6E0A               	movwf	color_read_Green@tmp^0,c
  6702   005D16  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  6703   005D18  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  6704   005D1A  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  6705                           
  6706                           ;color.c: 87:  I2C_2_Master_Stop();
  6707   005D1C  ECFD  F030         	call	_I2C_2_Master_Stop	;wreg free
  6708   005D20                     
  6709                           ;color.c: 88:  return tmp;
  6710   005D20  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  6711   005D24  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  6712   005D28  0012               	return		;funcret
  6713   005D2A                     __end_of_color_read_Green:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _color_read_Blue *****************
  6717 ;; Defined at:
  6718 ;;		line 91 in file "color.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;		None
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  tmp             2    9[COMRAM] unsigned int 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  2    4[COMRAM] unsigned int 
  6725 ;; Registers used:
  6726 ;;		wreg, status,2, status,0, cstack
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;Total ram usage:        7 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; Hardware stack levels required when called: 3
  6739 ;; This function calls:
  6740 ;;		_I2C_2_Master_Read
  6741 ;;		_I2C_2_Master_RepStart
  6742 ;;		_I2C_2_Master_Start
  6743 ;;		_I2C_2_Master_Stop
  6744 ;;		_I2C_2_Master_Write
  6745 ;; This function is called by:
  6746 ;;		_readColours
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text27
  6751   005D2A                     __ptext27:
  6752                           	callstack 0
  6753   005D2A                     _color_read_Blue:
  6754                           	callstack 26
  6755   005D2A                     
  6756                           ;color.c: 93:  unsigned int tmp;;color.c: 94:  I2C_2_Master_Start();
  6757   005D2A  EC02  F031         	call	_I2C_2_Master_Start	;wreg free
  6758                           
  6759                           ;color.c: 95:  I2C_2_Master_Write(0x52 | 0x00);
  6760   005D2E  0E52               	movlw	82
  6761   005D30  ECE6  F030         	call	_I2C_2_Master_Write
  6762                           
  6763                           ;color.c: 96:  I2C_2_Master_Write(0xA0 | 0x1A);
  6764   005D34  0EBA               	movlw	186
  6765   005D36  ECE6  F030         	call	_I2C_2_Master_Write
  6766                           
  6767                           ;color.c: 97:  I2C_2_Master_RepStart();
  6768   005D3A  ECF8  F030         	call	_I2C_2_Master_RepStart	;wreg free
  6769                           
  6770                           ;color.c: 98:  I2C_2_Master_Write(0x52 | 0x01);
  6771   005D3E  0E53               	movlw	83
  6772   005D40  ECE6  F030         	call	_I2C_2_Master_Write
  6773                           
  6774                           ;color.c: 99:  tmp=I2C_2_Master_Read(1);
  6775   005D44  0E01               	movlw	1
  6776   005D46  EC72  F02F         	call	_I2C_2_Master_Read
  6777   005D4A  6E07               	movwf	??_color_read_Blue^0,c
  6778   005D4C  5007               	movf	??_color_read_Blue^0,w,c
  6779   005D4E  6E0A               	movwf	color_read_Blue@tmp^0,c
  6780   005D50  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  6781                           
  6782                           ;color.c: 100:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6783   005D52  0E00               	movlw	0
  6784   005D54  EC72  F02F         	call	_I2C_2_Master_Read
  6785   005D58  6E07               	movwf	??_color_read_Blue^0,c
  6786   005D5A  5007               	movf	??_color_read_Blue^0,w,c
  6787   005D5C  6E09               	movwf	(??_color_read_Blue+2)^0,c
  6788   005D5E  6A08               	clrf	(??_color_read_Blue+1)^0,c
  6789   005D60  500A               	movf	color_read_Blue@tmp^0,w,c
  6790   005D62  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  6791   005D64  6E0A               	movwf	color_read_Blue@tmp^0,c
  6792   005D66  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  6793   005D68  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  6794   005D6A  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  6795                           
  6796                           ;color.c: 101:  I2C_2_Master_Stop();
  6797   005D6C  ECFD  F030         	call	_I2C_2_Master_Stop	;wreg free
  6798   005D70                     
  6799                           ;color.c: 102:  return tmp;
  6800   005D70  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  6801   005D74  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  6802   005D78  0012               	return		;funcret
  6803   005D7A                     __end_of_color_read_Blue:
  6804                           	callstack 0
  6805                           
  6806 ;; *************** function _I2C_2_Master_RepStart *****************
  6807 ;; Defined at:
  6808 ;;		line 33 in file "i2c.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2, status,0, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used: 1
  6828 ;; Hardware stack levels required when called: 2
  6829 ;; This function calls:
  6830 ;;		_I2C_2_Master_Idle
  6831 ;; This function is called by:
  6832 ;;		_color_read_lum
  6833 ;;		_color_read_Red
  6834 ;;		_color_read_Green
  6835 ;;		_color_read_Blue
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text28
  6840   0061F0                     __ptext28:
  6841                           	callstack 0
  6842   0061F0                     _I2C_2_Master_RepStart:
  6843                           	callstack 26
  6844   0061F0                     
  6845                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6846   0061F0  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
  6847   0061F4                     
  6848                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6849   0061F4  010E               	movlb	14	; () banked
  6850   0061F6  83DA               	bsf	218,1,b	;volatile
  6851   0061F8                     
  6852                           ; BSR set to: 14
  6853   0061F8  0012               	return		;funcret
  6854   0061FA                     __end_of_I2C_2_Master_RepStart:
  6855                           	callstack 0
  6856                           
  6857 ;; *************** function _I2C_2_Master_Read *****************
  6858 ;; Defined at:
  6859 ;;		line 51 in file "i2c.c"
  6860 ;; Parameters:    Size  Location     Type
  6861 ;;  ack             1    wreg     unsigned char 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  ack             1    2[COMRAM] unsigned char 
  6864 ;;  tmp             1    3[COMRAM] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      unsigned char 
  6867 ;; Registers used:
  6868 ;;		wreg, status,2, status,0, cstack
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;Total ram usage:        3 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 2
  6881 ;; This function calls:
  6882 ;;		_I2C_2_Master_Idle
  6883 ;; This function is called by:
  6884 ;;		_color_read_lum
  6885 ;;		_color_read_Red
  6886 ;;		_color_read_Green
  6887 ;;		_color_read_Blue
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text29
  6892   005EE4                     __ptext29:
  6893                           	callstack 0
  6894   005EE4                     _I2C_2_Master_Read:
  6895                           	callstack 26
  6896                           
  6897                           ; BSR set to: 14
  6898                           ;incstack = 0
  6899                           ;I2C_2_Master_Read@ack stored from wreg
  6900   005EE4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  6901   005EE6                     
  6902                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6903   005EE6  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
  6904   005EEA                     
  6905                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6906   005EEA  010E               	movlb	14	; () banked
  6907   005EEC  87DA               	bsf	218,3,b	;volatile
  6908                           
  6909                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6910   005EEE  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
  6911   005EF2                     
  6912                           ;i2c.c: 57:   tmp = SSP2BUF;
  6913   005EF2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6914                           
  6915                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6916   005EF6  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
  6917   005EFA                     
  6918                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6919   005EFA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  6920   005EFC  B4D8               	btfsc	status,2,c
  6921   005EFE  EF83  F02F         	goto	u4911
  6922   005F02  EF87  F02F         	goto	u4910
  6923   005F06                     u4911:
  6924   005F06  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6925   005F08  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  6926   005F0A  EF88  F02F         	goto	u4928
  6927   005F0E                     u4910:
  6928   005F0E  6A02               	clrf	??_I2C_2_Master_Read^0,c
  6929   005F10                     u4928:
  6930   005F10  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  6931   005F12  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  6932   005F14  010E               	movlb	14	; () banked
  6933   005F16  51DA               	movf	218,w,b	;volatile
  6934   005F18  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6935   005F1A  0BDF               	andlw	-33
  6936   005F1C  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  6937   005F1E  6FDA               	movwf	218,b	;volatile
  6938   005F20                     
  6939                           ; BSR set to: 14
  6940                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6941   005F20  89DA               	bsf	218,4,b	;volatile
  6942   005F22                     
  6943                           ; BSR set to: 14
  6944                           ;i2c.c: 61:   return tmp;
  6945   005F22  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  6946   005F24                     
  6947                           ; BSR set to: 14
  6948   005F24  0012               	return		;funcret
  6949   005F26                     __end_of_I2C_2_Master_Read:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function _initUSART4 *****************
  6953 ;; Defined at:
  6954 ;;		line 4 in file "serial.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6972 ;;Total ram usage:        0 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; Hardware stack levels required when called: 1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_main
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text30
  6983   006196                     __ptext30:
  6984                           	callstack 0
  6985   006196                     _initUSART4:
  6986                           	callstack 29
  6987   006196                     
  6988                           ;serial.c: 5:     RC0PPS = 0x12;
  6989   006196  0E12               	movlw	18
  6990   006198  010E               	movlb	14	; () banked
  6991   00619A  6F62               	movwf	98,b	;volatile
  6992                           
  6993                           ;serial.c: 6:     RX4PPS = 0x11;
  6994   00619C  0E11               	movlw	17
  6995   00619E  6F15               	movwf	21,b	;volatile
  6996   0061A0                     
  6997                           ; BSR set to: 14
  6998                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  6999   0061A0  97E9               	bcf	233,3,b	;volatile
  7000   0061A2                     
  7001                           ; BSR set to: 14
  7002                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7003   0061A2  95E8               	bcf	232,2,b	;volatile
  7004                           
  7005                           ;serial.c: 9:     SP4BRGL = 51;
  7006   0061A4  0E33               	movlw	51
  7007   0061A6  6FE5               	movwf	229,b	;volatile
  7008                           
  7009                           ;serial.c: 10:     SP4BRGH = 0;
  7010   0061A8  0E00               	movlw	0
  7011   0061AA  6FE6               	movwf	230,b	;volatile
  7012   0061AC                     
  7013                           ; BSR set to: 14
  7014                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7015   0061AC  89E7               	bsf	231,4,b	;volatile
  7016   0061AE                     
  7017                           ; BSR set to: 14
  7018                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7019   0061AE  8BE8               	bsf	232,5,b	;volatile
  7020   0061B0                     
  7021                           ; BSR set to: 14
  7022                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7023   0061B0  8FE7               	bsf	231,7,b	;volatile
  7024   0061B2                     
  7025                           ; BSR set to: 14
  7026   0061B2  0012               	return		;funcret
  7027   0061B4                     __end_of_initUSART4:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function _initDCmotorsPWM *****************
  7031 ;; Defined at:
  7032 ;;		line 7 in file "dc_motor.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;Total ram usage:        2 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_main
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text31
  7061   00525A                     __ptext31:
  7062                           	callstack 0
  7063   00525A                     _initDCmotorsPWM:
  7064                           	callstack 29
  7065   00525A                     
  7066                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7067   00525A  0E05               	movlw	5
  7068   00525C  010E               	movlb	14	; () banked
  7069   00525E  6F74               	movwf	116,b	;volatile
  7070                           
  7071                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7072   005260  0E06               	movlw	6
  7073   005262  6F76               	movwf	118,b	;volatile
  7074                           
  7075                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7076   005264  0E07               	movlw	7
  7077   005266  6F69               	movwf	105,b	;volatile
  7078                           
  7079                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7080   005268  0E08               	movlw	8
  7081   00526A  6F88               	movwf	136,b	;volatile
  7082   00526C                     
  7083                           ; BSR set to: 14
  7084                           ;dc_motor.c: 17:     TRISEbits.TRISE2=0;
  7085   00526C  9485               	bcf	133,2,c	;volatile
  7086   00526E                     
  7087                           ; BSR set to: 14
  7088                           ;dc_motor.c: 18:     TRISEbits.TRISE4=0;
  7089   00526E  9885               	bcf	133,4,c	;volatile
  7090   005270                     
  7091                           ; BSR set to: 14
  7092                           ;dc_motor.c: 19:     TRISCbits.TRISC7=0;
  7093   005270  9E83               	bcf	131,7,c	;volatile
  7094   005272                     
  7095                           ; BSR set to: 14
  7096                           ;dc_motor.c: 20:     TRISGbits.TRISG6=0;
  7097   005272  9C87               	bcf	135,6,c	;volatile
  7098                           
  7099                           ;dc_motor.c: 24:     T2CONbits.CKPS=0b011;
  7100   005274  50BD               	movf	189,w,c	;volatile
  7101   005276  0B8F               	andlw	-113
  7102   005278  0930               	iorlw	48
  7103   00527A  6EBD               	movwf	189,c	;volatile
  7104                           
  7105                           ;dc_motor.c: 25:     T2HLTbits.MODE=0b00000;
  7106   00527C  0EE0               	movlw	-32
  7107   00527E  16BE               	andwf	190,f,c	;volatile
  7108                           
  7109                           ;dc_motor.c: 26:     T2CLKCONbits.CS=0b0001;
  7110   005280  50BF               	movf	191,w,c	;volatile
  7111   005282  0BF0               	andlw	-16
  7112   005284  0901               	iorlw	1
  7113   005286  6EBF               	movwf	191,c	;volatile
  7114   005288                     
  7115                           ; BSR set to: 14
  7116                           ;dc_motor.c: 30:     T2PR=PWMperiod;
  7117   005288  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7118   00528C                     
  7119                           ; BSR set to: 14
  7120                           ;dc_motor.c: 31:     T2CONbits.ON=1;
  7121   00528C  8EBD               	bsf	189,7,c	;volatile
  7122                           
  7123                           ;dc_motor.c: 35:     CCPR1H=0;
  7124   00528E  0E00               	movlw	0
  7125   005290  6EAA               	movwf	170,c	;volatile
  7126                           
  7127                           ;dc_motor.c: 36:     CCPR2H=0;
  7128   005292  0E00               	movlw	0
  7129   005294  6EA6               	movwf	166,c	;volatile
  7130                           
  7131                           ;dc_motor.c: 37:     CCPR3H=0;
  7132   005296  0E00               	movlw	0
  7133   005298  010F               	movlb	15	; () banked
  7134   00529A  6F25               	movwf	37,b	;volatile
  7135                           
  7136                           ;dc_motor.c: 38:     CCPR4H=0;
  7137   00529C  0E00               	movlw	0
  7138   00529E  6F21               	movwf	33,b	;volatile
  7139                           
  7140                           ;dc_motor.c: 41:     CCPTMRS0bits.C1TSEL=0;
  7141   0052A0  0EFC               	movlw	-4
  7142   0052A2  16AD               	andwf	173,f,c	;volatile
  7143                           
  7144                           ;dc_motor.c: 42:     CCPTMRS0bits.C2TSEL=0;
  7145   0052A4  0EF3               	movlw	-13
  7146   0052A6  16AD               	andwf	173,f,c	;volatile
  7147                           
  7148                           ;dc_motor.c: 43:     CCPTMRS0bits.C3TSEL=0;
  7149   0052A8  0ECF               	movlw	-49
  7150   0052AA  16AD               	andwf	173,f,c	;volatile
  7151                           
  7152                           ;dc_motor.c: 44:     CCPTMRS0bits.C4TSEL=0;
  7153   0052AC  0E3F               	movlw	-193
  7154   0052AE  16AD               	andwf	173,f,c	;volatile
  7155   0052B0                     
  7156                           ; BSR set to: 15
  7157                           ;dc_motor.c: 47:     CCP1CONbits.FMT=1;
  7158   0052B0  88AB               	bsf	171,4,c	;volatile
  7159                           
  7160                           ;dc_motor.c: 48:     CCP1CONbits.CCP1MODE=0b1100;
  7161   0052B2  50AB               	movf	171,w,c	;volatile
  7162   0052B4  0BF0               	andlw	-16
  7163   0052B6  090C               	iorlw	12
  7164   0052B8  6EAB               	movwf	171,c	;volatile
  7165   0052BA                     
  7166                           ; BSR set to: 15
  7167                           ;dc_motor.c: 49:     CCP1CONbits.EN=1;
  7168   0052BA  8EAB               	bsf	171,7,c	;volatile
  7169   0052BC                     
  7170                           ; BSR set to: 15
  7171                           ;dc_motor.c: 51:     CCP2CONbits.FMT=1;
  7172   0052BC  88A7               	bsf	167,4,c	;volatile
  7173                           
  7174                           ;dc_motor.c: 52:     CCP2CONbits.CCP2MODE=0b1100;
  7175   0052BE  50A7               	movf	167,w,c	;volatile
  7176   0052C0  0BF0               	andlw	-16
  7177   0052C2  090C               	iorlw	12
  7178   0052C4  6EA7               	movwf	167,c	;volatile
  7179   0052C6                     
  7180                           ; BSR set to: 15
  7181                           ;dc_motor.c: 53:     CCP2CONbits.EN=1;
  7182   0052C6  8EA7               	bsf	167,7,c	;volatile
  7183   0052C8                     
  7184                           ; BSR set to: 15
  7185                           ;dc_motor.c: 55:     CCP3CONbits.FMT=1;
  7186   0052C8  8926               	bsf	38,4,b	;volatile
  7187                           
  7188                           ;dc_motor.c: 56:     CCP3CONbits.CCP3MODE=0b1100;
  7189   0052CA  5126               	movf	38,w,b	;volatile
  7190   0052CC  0BF0               	andlw	-16
  7191   0052CE  090C               	iorlw	12
  7192   0052D0  6F26               	movwf	38,b	;volatile
  7193   0052D2                     
  7194                           ; BSR set to: 15
  7195                           ;dc_motor.c: 57:     CCP3CONbits.EN=1;
  7196   0052D2  8F26               	bsf	38,7,b	;volatile
  7197   0052D4                     
  7198                           ; BSR set to: 15
  7199                           ;dc_motor.c: 59:     CCP4CONbits.FMT=1;
  7200   0052D4  8922               	bsf	34,4,b	;volatile
  7201                           
  7202                           ;dc_motor.c: 60:     CCP4CONbits.CCP4MODE=0b1100;
  7203   0052D6  5122               	movf	34,w,b	;volatile
  7204   0052D8  0BF0               	andlw	-16
  7205   0052DA  090C               	iorlw	12
  7206   0052DC  6F22               	movwf	34,b	;volatile
  7207   0052DE                     
  7208                           ; BSR set to: 15
  7209                           ;dc_motor.c: 61:     CCP4CONbits.EN=1;
  7210   0052DE  8F22               	bsf	34,7,b	;volatile
  7211   0052E0                     
  7212                           ; BSR set to: 15
  7213   0052E0  0012               	return		;funcret
  7214   0052E2                     __end_of_initDCmotorsPWM:
  7215                           	callstack 0
  7216                           
  7217 ;; *************** function _getTMR0val *****************
  7218 ;; Defined at:
  7219 ;;		line 28 in file "timers.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;		None
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;  moving          2    4[COMRAM] int 
  7224 ;;  temp            2    2[COMRAM] unsigned int 
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7237 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7238 ;;Total ram usage:        6 bytes
  7239 ;; Hardware stack levels used: 1
  7240 ;; Hardware stack levels required when called: 1
  7241 ;; This function calls:
  7242 ;;		Nothing
  7243 ;; This function is called by:
  7244 ;;		_main
  7245 ;; This function uses a non-reentrant model
  7246 ;;
  7247                           
  7248                           	psect	text32
  7249   0056D2                     __ptext32:
  7250                           	callstack 0
  7251   0056D2                     _getTMR0val:
  7252                           	callstack 29
  7253   0056D2                     
  7254                           ;timers.c: 30:     unsigned int temp= TMR0L;
  7255   0056D2  CFD3 F003          	movff	4051,getTMR0val@temp	;volatile
  7256   0056D6  6A04               	clrf	(getTMR0val@temp+1)^0,c
  7257   0056D8                     
  7258                           ;timers.c: 32:     int moving=(TMR0H<<8)|(temp&0xff);
  7259   0056D8  5003               	movf	getTMR0val@temp^0,w,c
  7260   0056DA  CFD4 F001          	movff	4052,??_getTMR0val	;volatile
  7261   0056DE  6A02               	clrf	(??_getTMR0val+1)^0,c
  7262   0056E0  C001  F002         	movff	??_getTMR0val,??_getTMR0val+1
  7263   0056E4  6A01               	clrf	??_getTMR0val^0,c
  7264   0056E6  1001               	iorwf	??_getTMR0val^0,w,c
  7265   0056E8  6E05               	movwf	getTMR0val@moving^0,c
  7266   0056EA  5002               	movf	(??_getTMR0val+1)^0,w,c
  7267   0056EC  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7268                           
  7269                           ;timers.c: 33:     if (moving>500){
  7270   0056EE  BE06               	btfsc	(getTMR0val@moving+1)^0,7,c
  7271   0056F0  EF83  F02B         	goto	u5571
  7272   0056F4  0EF5               	movlw	245
  7273   0056F6  5C05               	subwf	getTMR0val@moving^0,w,c
  7274   0056F8  0E01               	movlw	1
  7275   0056FA  5806               	subwfb	(getTMR0val@moving+1)^0,w,c
  7276   0056FC  A0D8               	btfss	status,0,c
  7277   0056FE  EF83  F02B         	goto	u5571
  7278   005702  EF85  F02B         	goto	u5570
  7279   005706                     u5571:
  7280   005706  EF8B  F02B         	goto	l5680
  7281   00570A                     u5570:
  7282   00570A                     
  7283                           ;timers.c: 34:         moving=moving-500;
  7284   00570A  0E0C               	movlw	12
  7285   00570C  2405               	addwf	getTMR0val@moving^0,w,c
  7286   00570E  6E05               	movwf	getTMR0val@moving^0,c
  7287   005710  0EFE               	movlw	254
  7288   005712  2006               	addwfc	(getTMR0val@moving+1)^0,w,c
  7289   005714  6E06               	movwf	(getTMR0val@moving+1)^0,c
  7290   005716                     l5680:
  7291                           
  7292                           ;timers.c: 37:     Time_forward[move_count]=moving;
  7293   005716  90D8               	bcf	status,0,c
  7294   005718  0101               	movlb	1	; () banked
  7295   00571A  35DA               	rlcf	_move_count& (0+255),w,b	;volatile
  7296   00571C  6ED9               	movwf	fsr2l,c
  7297   00571E  35DB               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7298   005720  6EDA               	movwf	fsr2h,c
  7299   005722  0E3C               	movlw	low _Time_forward
  7300   005724  26D9               	addwf	fsr2l,f,c
  7301   005726  0E02               	movlw	high _Time_forward
  7302   005728  22DA               	addwfc	fsr2h,f,c
  7303   00572A  C005  FFDE         	movff	getTMR0val@moving,postinc2
  7304   00572E  C006  FFDD         	movff	getTMR0val@moving+1,postdec2
  7305   005732                     
  7306                           ; BSR set to: 1
  7307   005732  0012               	return		;funcret
  7308   005734                     __end_of_getTMR0val:
  7309                           	callstack 0
  7310                           
  7311 ;; *************** function _colour_rel *****************
  7312 ;; Defined at:
  7313 ;;		line 115 in file "color.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  vals            2   74[COMRAM] PTR struct RGB
  7316 ;;		 -> vals(8), 
  7317 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7318 ;;		 -> rel(12), 
  7319 ;; Auto vars:     Size  Location     Type
  7320 ;;  B               4   20[BANK0 ] float 
  7321 ;;  G               4   16[BANK0 ] float 
  7322 ;;  R               4   12[BANK0 ] float 
  7323 ;;  L               4    0[BANK0 ] float 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  1    wreg      void 
  7326 ;; Registers used:
  7327 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:       28 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 2
  7340 ;; This function calls:
  7341 ;;		___fladd
  7342 ;;		___fldiv
  7343 ;;		___xxtofl
  7344 ;; This function is called by:
  7345 ;;		_main
  7346 ;; This function uses a non-reentrant model
  7347 ;;
  7348                           
  7349                           	psect	text33
  7350   002EB0                     __ptext33:
  7351                           	callstack 0
  7352   002EB0                     _colour_rel:
  7353                           	callstack 28
  7354   002EB0                     
  7355                           ;color.c: 116:     float R = vals->R;
  7356   002EB0  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7357   002EB4  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7358   002EB8  CFDE F001          	movff	postinc2,___xxtofl@val
  7359   002EBC  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7360   002EC0  0E00               	movlw	0
  7361   002EC2  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7362   002EC4  0EFF               	movlw	-1
  7363   002EC6  6E03               	movwf	(___xxtofl@val+2)^0,c
  7364   002EC8  6E04               	movwf	(___xxtofl@val+3)^0,c
  7365   002ECA  0E01               	movlw	1
  7366   002ECC  ECCC  F020         	call	___xxtofl
  7367   002ED0  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7368   002ED4  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7369   002ED8  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7370   002EDC  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7371                           
  7372                           ;color.c: 117:     float G = vals->G;
  7373   002EE0  EE20 F002          	lfsr	2,2
  7374   002EE4  504B               	movf	colour_rel@vals^0,w,c
  7375   002EE6  26D9               	addwf	fsr2l,f,c
  7376   002EE8  504C               	movf	(colour_rel@vals+1)^0,w,c
  7377   002EEA  22DA               	addwfc	fsr2h,f,c
  7378   002EEC  CFDE F001          	movff	postinc2,___xxtofl@val
  7379   002EF0  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7380   002EF4  0E00               	movlw	0
  7381   002EF6  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7382   002EF8  0EFF               	movlw	-1
  7383   002EFA  6E03               	movwf	(___xxtofl@val+2)^0,c
  7384   002EFC  6E04               	movwf	(___xxtofl@val+3)^0,c
  7385   002EFE  0E01               	movlw	1
  7386   002F00  ECCC  F020         	call	___xxtofl
  7387   002F04  C001  F070         	movff	?___xxtofl,colour_rel@G
  7388   002F08  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7389   002F0C  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7390   002F10  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7391                           
  7392                           ;color.c: 118:     float B = vals->B;
  7393   002F14  EE20 F004          	lfsr	2,4
  7394   002F18  504B               	movf	colour_rel@vals^0,w,c
  7395   002F1A  26D9               	addwf	fsr2l,f,c
  7396   002F1C  504C               	movf	(colour_rel@vals+1)^0,w,c
  7397   002F1E  22DA               	addwfc	fsr2h,f,c
  7398   002F20  CFDE F001          	movff	postinc2,___xxtofl@val
  7399   002F24  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7400   002F28  0E00               	movlw	0
  7401   002F2A  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7402   002F2C  0EFF               	movlw	-1
  7403   002F2E  6E03               	movwf	(___xxtofl@val+2)^0,c
  7404   002F30  6E04               	movwf	(___xxtofl@val+3)^0,c
  7405   002F32  0E01               	movlw	1
  7406   002F34  ECCC  F020         	call	___xxtofl
  7407   002F38  C001  F074         	movff	?___xxtofl,colour_rel@B
  7408   002F3C  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7409   002F40  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7410   002F44  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7411                           
  7412                           ;color.c: 119:     float L = vals->L;
  7413   002F48  EE20 F006          	lfsr	2,6
  7414   002F4C  504B               	movf	colour_rel@vals^0,w,c
  7415   002F4E  26D9               	addwf	fsr2l,f,c
  7416   002F50  504C               	movf	(colour_rel@vals+1)^0,w,c
  7417   002F52  22DA               	addwfc	fsr2h,f,c
  7418   002F54  CFDE F001          	movff	postinc2,___xxtofl@val
  7419   002F58  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7420   002F5C  0E00               	movlw	0
  7421   002F5E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7422   002F60  0EFF               	movlw	-1
  7423   002F62  6E03               	movwf	(___xxtofl@val+2)^0,c
  7424   002F64  6E04               	movwf	(___xxtofl@val+3)^0,c
  7425   002F66  0E01               	movlw	1
  7426   002F68  ECCC  F020         	call	___xxtofl
  7427   002F6C  C001  F060         	movff	?___xxtofl,colour_rel@L
  7428   002F70  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7429   002F74  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7430   002F78  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7431   002F7C                     
  7432                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7433   002F7C  C070  F005         	movff	colour_rel@G,___fladd@a
  7434   002F80  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7435   002F84  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7436   002F88  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7437   002F8C  C06C  F001         	movff	colour_rel@R,___fladd@b
  7438   002F90  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7439   002F94  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7440   002F98  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7441   002F9C  EC16  F011         	call	___fladd	;wreg free
  7442   002FA0  C001  F064         	movff	?___fladd,_colour_rel$3279
  7443   002FA4  C002  F065         	movff	?___fladd+1,_colour_rel$3279+1
  7444   002FA8  C003  F066         	movff	?___fladd+2,_colour_rel$3279+2
  7445   002FAC  C004  F067         	movff	?___fladd+3,_colour_rel$3279+3
  7446   002FB0                     
  7447                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7448   002FB0  C074  F005         	movff	colour_rel@B,___fladd@a
  7449   002FB4  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7450   002FB8  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7451   002FBC  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7452   002FC0  C064  F001         	movff	_colour_rel$3279,___fladd@b
  7453   002FC4  C065  F002         	movff	_colour_rel$3279+1,___fladd@b+1
  7454   002FC8  C066  F003         	movff	_colour_rel$3279+2,___fladd@b+2
  7455   002FCC  C067  F004         	movff	_colour_rel$3279+3,___fladd@b+3
  7456   002FD0  EC16  F011         	call	___fladd	;wreg free
  7457   002FD4  C001  F068         	movff	?___fladd,_colour_rel$3280
  7458   002FD8  C002  F069         	movff	?___fladd+1,_colour_rel$3280+1
  7459   002FDC  C003  F06A         	movff	?___fladd+2,_colour_rel$3280+2
  7460   002FE0  C004  F06B         	movff	?___fladd+3,_colour_rel$3280+3
  7461                           
  7462                           ;color.c: 120:     rel -> R = R/(R+G+B+L);
  7463   002FE4  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7464   002FE8  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7465   002FEC  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7466   002FF0  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7467   002FF4  C060  F005         	movff	colour_rel@L,___fladd@a
  7468   002FF8  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7469   002FFC  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7470   003000  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7471   003004  C068  F001         	movff	_colour_rel$3280,___fladd@b
  7472   003008  C069  F002         	movff	_colour_rel$3280+1,___fladd@b+1
  7473   00300C  C06A  F003         	movff	_colour_rel$3280+2,___fladd@b+2
  7474   003010  C06B  F004         	movff	_colour_rel$3280+3,___fladd@b+3
  7475   003014  EC16  F011         	call	___fladd	;wreg free
  7476   003018  C001  F036         	movff	?___fladd,___fldiv@a
  7477   00301C  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7478   003020  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7479   003024  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7480   003028  EC8B  F015         	call	___fldiv	;wreg free
  7481   00302C  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7482   003030  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7483   003034  C032  FFDE         	movff	?___fldiv,postinc2
  7484   003038  C033  FFDE         	movff	?___fldiv+1,postinc2
  7485   00303C  C034  FFDE         	movff	?___fldiv+2,postinc2
  7486   003040  C035  FFDE         	movff	?___fldiv+3,postinc2
  7487   003044                     
  7488                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7489   003044  C070  F005         	movff	colour_rel@G,___fladd@a
  7490   003048  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7491   00304C  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7492   003050  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7493   003054  C06C  F001         	movff	colour_rel@R,___fladd@b
  7494   003058  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7495   00305C  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7496   003060  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7497   003064  EC16  F011         	call	___fladd	;wreg free
  7498   003068  C001  F064         	movff	?___fladd,_colour_rel$3279
  7499   00306C  C002  F065         	movff	?___fladd+1,_colour_rel$3279+1
  7500   003070  C003  F066         	movff	?___fladd+2,_colour_rel$3279+2
  7501   003074  C004  F067         	movff	?___fladd+3,_colour_rel$3279+3
  7502   003078                     
  7503                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7504   003078  C074  F005         	movff	colour_rel@B,___fladd@a
  7505   00307C  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7506   003080  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7507   003084  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7508   003088  C064  F001         	movff	_colour_rel$3279,___fladd@b
  7509   00308C  C065  F002         	movff	_colour_rel$3279+1,___fladd@b+1
  7510   003090  C066  F003         	movff	_colour_rel$3279+2,___fladd@b+2
  7511   003094  C067  F004         	movff	_colour_rel$3279+3,___fladd@b+3
  7512   003098  EC16  F011         	call	___fladd	;wreg free
  7513   00309C  C001  F068         	movff	?___fladd,_colour_rel$3280
  7514   0030A0  C002  F069         	movff	?___fladd+1,_colour_rel$3280+1
  7515   0030A4  C003  F06A         	movff	?___fladd+2,_colour_rel$3280+2
  7516   0030A8  C004  F06B         	movff	?___fladd+3,_colour_rel$3280+3
  7517                           
  7518                           ;color.c: 121:     rel -> B = B/(R+G+B+L);
  7519   0030AC  C074  F032         	movff	colour_rel@B,___fldiv@b
  7520   0030B0  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7521   0030B4  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7522   0030B8  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7523   0030BC  C060  F005         	movff	colour_rel@L,___fladd@a
  7524   0030C0  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7525   0030C4  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7526   0030C8  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7527   0030CC  C068  F001         	movff	_colour_rel$3280,___fladd@b
  7528   0030D0  C069  F002         	movff	_colour_rel$3280+1,___fladd@b+1
  7529   0030D4  C06A  F003         	movff	_colour_rel$3280+2,___fladd@b+2
  7530   0030D8  C06B  F004         	movff	_colour_rel$3280+3,___fladd@b+3
  7531   0030DC  EC16  F011         	call	___fladd	;wreg free
  7532   0030E0  C001  F036         	movff	?___fladd,___fldiv@a
  7533   0030E4  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7534   0030E8  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7535   0030EC  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7536   0030F0  EC8B  F015         	call	___fldiv	;wreg free
  7537   0030F4  EE20 F008          	lfsr	2,8
  7538   0030F8  504D               	movf	colour_rel@rel^0,w,c
  7539   0030FA  26D9               	addwf	fsr2l,f,c
  7540   0030FC  504E               	movf	(colour_rel@rel+1)^0,w,c
  7541   0030FE  22DA               	addwfc	fsr2h,f,c
  7542   003100  C032  FFDE         	movff	?___fldiv,postinc2
  7543   003104  C033  FFDE         	movff	?___fldiv+1,postinc2
  7544   003108  C034  FFDE         	movff	?___fldiv+2,postinc2
  7545   00310C  C035  FFDE         	movff	?___fldiv+3,postinc2
  7546   003110                     
  7547                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7548   003110  C070  F005         	movff	colour_rel@G,___fladd@a
  7549   003114  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7550   003118  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7551   00311C  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7552   003120  C06C  F001         	movff	colour_rel@R,___fladd@b
  7553   003124  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7554   003128  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7555   00312C  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7556   003130  EC16  F011         	call	___fladd	;wreg free
  7557   003134  C001  F064         	movff	?___fladd,_colour_rel$3279
  7558   003138  C002  F065         	movff	?___fladd+1,_colour_rel$3279+1
  7559   00313C  C003  F066         	movff	?___fladd+2,_colour_rel$3279+2
  7560   003140  C004  F067         	movff	?___fladd+3,_colour_rel$3279+3
  7561   003144                     
  7562                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7563   003144  C074  F005         	movff	colour_rel@B,___fladd@a
  7564   003148  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7565   00314C  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7566   003150  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7567   003154  C064  F001         	movff	_colour_rel$3279,___fladd@b
  7568   003158  C065  F002         	movff	_colour_rel$3279+1,___fladd@b+1
  7569   00315C  C066  F003         	movff	_colour_rel$3279+2,___fladd@b+2
  7570   003160  C067  F004         	movff	_colour_rel$3279+3,___fladd@b+3
  7571   003164  EC16  F011         	call	___fladd	;wreg free
  7572   003168  C001  F068         	movff	?___fladd,_colour_rel$3280
  7573   00316C  C002  F069         	movff	?___fladd+1,_colour_rel$3280+1
  7574   003170  C003  F06A         	movff	?___fladd+2,_colour_rel$3280+2
  7575   003174  C004  F06B         	movff	?___fladd+3,_colour_rel$3280+3
  7576                           
  7577                           ;color.c: 122:     rel -> G = G/(R+G+B+L);
  7578   003178  C070  F032         	movff	colour_rel@G,___fldiv@b
  7579   00317C  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7580   003180  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7581   003184  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7582   003188  C060  F005         	movff	colour_rel@L,___fladd@a
  7583   00318C  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7584   003190  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7585   003194  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7586   003198  C068  F001         	movff	_colour_rel$3280,___fladd@b
  7587   00319C  C069  F002         	movff	_colour_rel$3280+1,___fladd@b+1
  7588   0031A0  C06A  F003         	movff	_colour_rel$3280+2,___fladd@b+2
  7589   0031A4  C06B  F004         	movff	_colour_rel$3280+3,___fladd@b+3
  7590   0031A8  EC16  F011         	call	___fladd	;wreg free
  7591   0031AC  C001  F036         	movff	?___fladd,___fldiv@a
  7592   0031B0  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7593   0031B4  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7594   0031B8  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7595   0031BC  EC8B  F015         	call	___fldiv	;wreg free
  7596   0031C0  EE20 F004          	lfsr	2,4
  7597   0031C4  504D               	movf	colour_rel@rel^0,w,c
  7598   0031C6  26D9               	addwf	fsr2l,f,c
  7599   0031C8  504E               	movf	(colour_rel@rel+1)^0,w,c
  7600   0031CA  22DA               	addwfc	fsr2h,f,c
  7601   0031CC  C032  FFDE         	movff	?___fldiv,postinc2
  7602   0031D0  C033  FFDE         	movff	?___fldiv+1,postinc2
  7603   0031D4  C034  FFDE         	movff	?___fldiv+2,postinc2
  7604   0031D8  C035  FFDE         	movff	?___fldiv+3,postinc2
  7605   0031DC  0012               	return		;funcret
  7606   0031DE                     __end_of_colour_rel:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function _colour_move *****************
  7610 ;; Defined at:
  7611 ;;		line 8 in file "colour_move.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  recognized_c    2   44[COMRAM] int 
  7614 ;; Auto vars:     Size  Location     Type
  7615 ;;		None
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  1    wreg      void 
  7618 ;; Registers used:
  7619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;Total ram usage:        2 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; Hardware stack levels required when called: 7
  7632 ;; This function calls:
  7633 ;;		_BlueMove
  7634 ;;		_GreenMove
  7635 ;;		_LightBlueMove
  7636 ;;		_OrangeMove
  7637 ;;		_PinkMove
  7638 ;;		_RedMove
  7639 ;;		_RetryMove
  7640 ;;		_YellowMove
  7641 ;;		_go_Home
  7642 ;; This function is called by:
  7643 ;;		_main
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text34
  7648   003D0E                     __ptext34:
  7649                           	callstack 0
  7650   003D0E                     _colour_move:
  7651                           	callstack 23
  7652   003D0E                     
  7653                           ;colour_move.c: 8: void colour_move (int recognized_colour);colour_move.c: 9: {;colour_m
      +                          ove.c: 12:     if (recognized_colour==1){
  7654   003D0E  042D               	decf	colour_move@recognized_colour^0,w,c
  7655   003D10  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7656   003D12  A4D8               	btfss	status,2,c
  7657   003D14  EF8E  F01E         	goto	u5581
  7658   003D18  EF90  F01E         	goto	u5580
  7659   003D1C                     u5581:
  7660   003D1C  EFAE  F01E         	goto	l5712
  7661   003D20                     u5580:
  7662   003D20                     
  7663                           ;colour_move.c: 13:         RedMove(&motorL, &motorR);
  7664   003D20  0E61               	movlw	low _motorL
  7665   003D22  6E20               	movwf	RedMove@mL^0,c
  7666   003D24  0E01               	movlw	high _motorL
  7667   003D26  6E21               	movwf	(RedMove@mL+1)^0,c
  7668   003D28  0E58               	movlw	low _motorR
  7669   003D2A  6E22               	movwf	RedMove@mR^0,c
  7670   003D2C  0E01               	movlw	high _motorR
  7671   003D2E  6E23               	movwf	(RedMove@mR+1)^0,c
  7672   003D30  ECB3  F02F         	call	_RedMove	;wreg free
  7673   003D34                     
  7674                           ;colour_move.c: 14:         TMR0H=0;
  7675   003D34  0E00               	movlw	0
  7676   003D36  6ED4               	movwf	212,c	;volatile
  7677   003D38                     
  7678                           ;colour_move.c: 15:         TMR0L=0;
  7679   003D38  0E00               	movlw	0
  7680   003D3A  6ED3               	movwf	211,c	;volatile
  7681   003D3C                     
  7682                           ;colour_move.c: 16:         WayBack[move_count]=1;
  7683   003D3C  0E1A               	movlw	low _WayBack
  7684   003D3E  0101               	movlb	1	; () banked
  7685   003D40  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7686   003D42  6ED9               	movwf	fsr2l,c
  7687   003D44  0E01               	movlw	high _WayBack
  7688   003D46  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7689   003D48  6EDA               	movwf	fsr2h,c
  7690   003D4A  0E01               	movlw	1
  7691   003D4C  6EDF               	movwf	indf2,c
  7692   003D4E                     l5710:
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;colour_move.c: 17:         lost_count=0;
  7696   003D4E  0E00               	movlw	0
  7697   003D50  0100               	movlb	0	; () banked
  7698   003D52  6FEC               	movwf	(_lost_count+1)& (0+255),b
  7699   003D54  0E00               	movlw	0
  7700   003D56  6FEB               	movwf	_lost_count& (0+255),b
  7701                           
  7702                           ;colour_move.c: 18:     }
  7703   003D58  EFC2  F01F         	goto	l754
  7704   003D5C                     l5712:
  7705   003D5C  0E02               	movlw	2
  7706   003D5E  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7707   003D60  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7708   003D62  A4D8               	btfss	status,2,c
  7709   003D64  EFB6  F01E         	goto	u5591
  7710   003D68  EFB8  F01E         	goto	u5590
  7711   003D6C                     u5591:
  7712   003D6C  EFD1  F01E         	goto	l5724
  7713   003D70                     u5590:
  7714   003D70                     
  7715                           ;colour_move.c: 20:         OrangeMove(&motorL, &motorR);
  7716   003D70  0E61               	movlw	low _motorL
  7717   003D72  6E20               	movwf	OrangeMove@mL^0,c
  7718   003D74  0E01               	movlw	high _motorL
  7719   003D76  6E21               	movwf	(OrangeMove@mL+1)^0,c
  7720   003D78  0E58               	movlw	low _motorR
  7721   003D7A  6E22               	movwf	OrangeMove@mR^0,c
  7722   003D7C  0E01               	movlw	high _motorR
  7723   003D7E  6E23               	movwf	(OrangeMove@mR+1)^0,c
  7724   003D80  EC03  F02B         	call	_OrangeMove	;wreg free
  7725   003D84                     
  7726                           ;colour_move.c: 21:         TMR0H=0;
  7727   003D84  0E00               	movlw	0
  7728   003D86  6ED4               	movwf	212,c	;volatile
  7729   003D88                     
  7730                           ;colour_move.c: 22:         TMR0L=0;
  7731   003D88  0E00               	movlw	0
  7732   003D8A  6ED3               	movwf	211,c	;volatile
  7733   003D8C                     
  7734                           ;colour_move.c: 23:         WayBack[move_count]=2;
  7735   003D8C  0E1A               	movlw	low _WayBack
  7736   003D8E  0101               	movlb	1	; () banked
  7737   003D90  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7738   003D92  6ED9               	movwf	fsr2l,c
  7739   003D94  0E01               	movlw	high _WayBack
  7740   003D96  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7741   003D98  6EDA               	movwf	fsr2h,c
  7742   003D9A  0E02               	movlw	2
  7743   003D9C  6EDF               	movwf	indf2,c
  7744   003D9E  EFA7  F01E         	goto	l5710
  7745   003DA2                     l5724:
  7746   003DA2  0E03               	movlw	3
  7747   003DA4  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7748   003DA6  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7749   003DA8  A4D8               	btfss	status,2,c
  7750   003DAA  EFD9  F01E         	goto	u5601
  7751   003DAE  EFDB  F01E         	goto	u5600
  7752   003DB2                     u5601:
  7753   003DB2  EFF4  F01E         	goto	l5736
  7754   003DB6                     u5600:
  7755   003DB6                     
  7756                           ;colour_move.c: 27:         YellowMove(&motorL, &motorR);
  7757   003DB6  0E61               	movlw	low _motorL
  7758   003DB8  6E20               	movwf	YellowMove@mL^0,c
  7759   003DBA  0E01               	movlw	high _motorL
  7760   003DBC  6E21               	movwf	(YellowMove@mL+1)^0,c
  7761   003DBE  0E58               	movlw	low _motorR
  7762   003DC0  6E22               	movwf	YellowMove@mR^0,c
  7763   003DC2  0E01               	movlw	high _motorR
  7764   003DC4  6E23               	movwf	(YellowMove@mR+1)^0,c
  7765   003DC6  EC7A  F02D         	call	_YellowMove	;wreg free
  7766   003DCA                     
  7767                           ;colour_move.c: 28:         TMR0H=0;
  7768   003DCA  0E00               	movlw	0
  7769   003DCC  6ED4               	movwf	212,c	;volatile
  7770   003DCE                     
  7771                           ;colour_move.c: 29:         TMR0L=0;
  7772   003DCE  0E00               	movlw	0
  7773   003DD0  6ED3               	movwf	211,c	;volatile
  7774   003DD2                     
  7775                           ;colour_move.c: 30:         WayBack[move_count]=3;
  7776   003DD2  0E1A               	movlw	low _WayBack
  7777   003DD4  0101               	movlb	1	; () banked
  7778   003DD6  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7779   003DD8  6ED9               	movwf	fsr2l,c
  7780   003DDA  0E01               	movlw	high _WayBack
  7781   003DDC  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7782   003DDE  6EDA               	movwf	fsr2h,c
  7783   003DE0  0E03               	movlw	3
  7784   003DE2  6EDF               	movwf	indf2,c
  7785   003DE4  EFA7  F01E         	goto	l5710
  7786   003DE8                     l5736:
  7787   003DE8  0E04               	movlw	4
  7788   003DEA  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7789   003DEC  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7790   003DEE  A4D8               	btfss	status,2,c
  7791   003DF0  EFFC  F01E         	goto	u5611
  7792   003DF4  EFFE  F01E         	goto	u5610
  7793   003DF8                     u5611:
  7794   003DF8  EF17  F01F         	goto	l5748
  7795   003DFC                     u5610:
  7796   003DFC                     
  7797                           ;colour_move.c: 34:         BlueMove(&motorL, &motorR);
  7798   003DFC  0E61               	movlw	low _motorL
  7799   003DFE  6E20               	movwf	BlueMove@mL^0,c
  7800   003E00  0E01               	movlw	high _motorL
  7801   003E02  6E21               	movwf	(BlueMove@mL+1)^0,c
  7802   003E04  0E58               	movlw	low _motorR
  7803   003E06  6E22               	movwf	BlueMove@mR^0,c
  7804   003E08  0E01               	movlw	high _motorR
  7805   003E0A  6E23               	movwf	(BlueMove@mR+1)^0,c
  7806   003E0C  ECED  F029         	call	_BlueMove	;wreg free
  7807   003E10                     
  7808                           ;colour_move.c: 35:         TMR0H=0;
  7809   003E10  0E00               	movlw	0
  7810   003E12  6ED4               	movwf	212,c	;volatile
  7811   003E14                     
  7812                           ;colour_move.c: 36:         TMR0L=0;
  7813   003E14  0E00               	movlw	0
  7814   003E16  6ED3               	movwf	211,c	;volatile
  7815   003E18                     
  7816                           ;colour_move.c: 37:         WayBack[move_count]=4;
  7817   003E18  0E1A               	movlw	low _WayBack
  7818   003E1A  0101               	movlb	1	; () banked
  7819   003E1C  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7820   003E1E  6ED9               	movwf	fsr2l,c
  7821   003E20  0E01               	movlw	high _WayBack
  7822   003E22  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7823   003E24  6EDA               	movwf	fsr2h,c
  7824   003E26  0E04               	movlw	4
  7825   003E28  6EDF               	movwf	indf2,c
  7826   003E2A  EFA7  F01E         	goto	l5710
  7827   003E2E                     l5748:
  7828   003E2E  0E05               	movlw	5
  7829   003E30  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7830   003E32  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7831   003E34  A4D8               	btfss	status,2,c
  7832   003E36  EF1F  F01F         	goto	u5621
  7833   003E3A  EF21  F01F         	goto	u5620
  7834   003E3E                     u5621:
  7835   003E3E  EF3A  F01F         	goto	l5760
  7836   003E42                     u5620:
  7837   003E42                     
  7838                           ;colour_move.c: 41:         GreenMove(&motorL, &motorR);
  7839   003E42  0E61               	movlw	low _motorL
  7840   003E44  6E20               	movwf	GreenMove@mL^0,c
  7841   003E46  0E01               	movlw	high _motorL
  7842   003E48  6E21               	movwf	(GreenMove@mL+1)^0,c
  7843   003E4A  0E58               	movlw	low _motorR
  7844   003E4C  6E22               	movwf	GreenMove@mR^0,c
  7845   003E4E  0E01               	movlw	high _motorR
  7846   003E50  6E23               	movwf	(GreenMove@mR+1)^0,c
  7847   003E52  ECD2  F02F         	call	_GreenMove	;wreg free
  7848   003E56                     
  7849                           ;colour_move.c: 42:         TMR0H=0;
  7850   003E56  0E00               	movlw	0
  7851   003E58  6ED4               	movwf	212,c	;volatile
  7852   003E5A                     
  7853                           ;colour_move.c: 43:         TMR0L=0;
  7854   003E5A  0E00               	movlw	0
  7855   003E5C  6ED3               	movwf	211,c	;volatile
  7856   003E5E                     
  7857                           ;colour_move.c: 44:         WayBack[move_count]=5;
  7858   003E5E  0E1A               	movlw	low _WayBack
  7859   003E60  0101               	movlb	1	; () banked
  7860   003E62  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7861   003E64  6ED9               	movwf	fsr2l,c
  7862   003E66  0E01               	movlw	high _WayBack
  7863   003E68  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7864   003E6A  6EDA               	movwf	fsr2h,c
  7865   003E6C  0E05               	movlw	5
  7866   003E6E  6EDF               	movwf	indf2,c
  7867   003E70  EFA7  F01E         	goto	l5710
  7868   003E74                     l5760:
  7869   003E74  0E06               	movlw	6
  7870   003E76  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7871   003E78  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7872   003E7A  A4D8               	btfss	status,2,c
  7873   003E7C  EF42  F01F         	goto	u5631
  7874   003E80  EF44  F01F         	goto	u5630
  7875   003E84                     u5631:
  7876   003E84  EF5D  F01F         	goto	l5772
  7877   003E88                     u5630:
  7878   003E88                     
  7879                           ;colour_move.c: 48:         LightBlueMove(&motorL, &motorR);
  7880   003E88  0E61               	movlw	low _motorL
  7881   003E8A  6E20               	movwf	LightBlueMove@mL^0,c
  7882   003E8C  0E01               	movlw	high _motorL
  7883   003E8E  6E21               	movwf	(LightBlueMove@mL+1)^0,c
  7884   003E90  0E58               	movlw	low _motorR
  7885   003E92  6E22               	movwf	LightBlueMove@mR^0,c
  7886   003E94  0E01               	movlw	high _motorR
  7887   003E96  6E23               	movwf	(LightBlueMove@mR+1)^0,c
  7888   003E98  EC36  F02B         	call	_LightBlueMove	;wreg free
  7889   003E9C                     
  7890                           ;colour_move.c: 49:         TMR0H=0;
  7891   003E9C  0E00               	movlw	0
  7892   003E9E  6ED4               	movwf	212,c	;volatile
  7893   003EA0                     
  7894                           ;colour_move.c: 50:         TMR0L=0;
  7895   003EA0  0E00               	movlw	0
  7896   003EA2  6ED3               	movwf	211,c	;volatile
  7897   003EA4                     
  7898                           ;colour_move.c: 51:         WayBack[move_count]=6;
  7899   003EA4  0E1A               	movlw	low _WayBack
  7900   003EA6  0101               	movlb	1	; () banked
  7901   003EA8  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7902   003EAA  6ED9               	movwf	fsr2l,c
  7903   003EAC  0E01               	movlw	high _WayBack
  7904   003EAE  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7905   003EB0  6EDA               	movwf	fsr2h,c
  7906   003EB2  0E06               	movlw	6
  7907   003EB4  6EDF               	movwf	indf2,c
  7908   003EB6  EFA7  F01E         	goto	l5710
  7909   003EBA                     l5772:
  7910   003EBA  0E07               	movlw	7
  7911   003EBC  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7912   003EBE  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7913   003EC0  A4D8               	btfss	status,2,c
  7914   003EC2  EF65  F01F         	goto	u5641
  7915   003EC6  EF67  F01F         	goto	u5640
  7916   003ECA                     u5641:
  7917   003ECA  EF80  F01F         	goto	l5784
  7918   003ECE                     u5640:
  7919   003ECE                     
  7920                           ;colour_move.c: 55:         PinkMove(&motorL, &motorR);
  7921   003ECE  0E61               	movlw	low _motorL
  7922   003ED0  6E20               	movwf	PinkMove@mL^0,c
  7923   003ED2  0E01               	movlw	high _motorL
  7924   003ED4  6E21               	movwf	(PinkMove@mL+1)^0,c
  7925   003ED6  0E58               	movlw	low _motorR
  7926   003ED8  6E22               	movwf	PinkMove@mR^0,c
  7927   003EDA  0E01               	movlw	high _motorR
  7928   003EDC  6E23               	movwf	(PinkMove@mR+1)^0,c
  7929   003EDE  ECA3  F02D         	call	_PinkMove	;wreg free
  7930   003EE2                     
  7931                           ;colour_move.c: 56:         TMR0H=0;
  7932   003EE2  0E00               	movlw	0
  7933   003EE4  6ED4               	movwf	212,c	;volatile
  7934   003EE6                     
  7935                           ;colour_move.c: 57:         TMR0L=0;
  7936   003EE6  0E00               	movlw	0
  7937   003EE8  6ED3               	movwf	211,c	;volatile
  7938   003EEA                     
  7939                           ;colour_move.c: 58:         WayBack[move_count]=7;
  7940   003EEA  0E1A               	movlw	low _WayBack
  7941   003EEC  0101               	movlb	1	; () banked
  7942   003EEE  25DA               	addwf	_move_count& (0+255),w,b	;volatile
  7943   003EF0  6ED9               	movwf	fsr2l,c
  7944   003EF2  0E01               	movlw	high _WayBack
  7945   003EF4  21DB               	addwfc	(_move_count+1)& (0+255),w,b	;volatile
  7946   003EF6  6EDA               	movwf	fsr2h,c
  7947   003EF8  0E07               	movlw	7
  7948   003EFA  6EDF               	movwf	indf2,c
  7949   003EFC  EFA7  F01E         	goto	l5710
  7950   003F00                     l5784:
  7951   003F00  0E0A               	movlw	10
  7952   003F02  182D               	xorwf	colour_move@recognized_colour^0,w,c
  7953   003F04  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  7954   003F06  A4D8               	btfss	status,2,c
  7955   003F08  EF88  F01F         	goto	u5651
  7956   003F0C  EF8A  F01F         	goto	u5650
  7957   003F10                     u5651:
  7958   003F10  EFB7  F01F         	goto	l5798
  7959   003F14                     u5650:
  7960   003F14                     
  7961                           ;colour_move.c: 62:         lost_count++;
  7962   003F14  0100               	movlb	0	; () banked
  7963   003F16  4BEB               	infsnz	_lost_count& (0+255),f,b
  7964   003F18  2BEC               	incf	(_lost_count+1)& (0+255),f,b
  7965   003F1A                     
  7966                           ; BSR set to: 0
  7967                           ;colour_move.c: 63:         if (lost_count>=3){
  7968   003F1A  BFEC               	btfsc	(_lost_count+1)& (0+255),7,b
  7969   003F1C  EF99  F01F         	goto	u5661
  7970   003F20  51EC               	movf	(_lost_count+1)& (0+255),w,b
  7971   003F22  E109               	bnz	u5660
  7972   003F24  0E03               	movlw	3
  7973   003F26  5DEB               	subwf	_lost_count& (0+255),w,b
  7974   003F28  A0D8               	btfss	status,0,c
  7975   003F2A  EF99  F01F         	goto	u5661
  7976   003F2E  EF9B  F01F         	goto	u5660
  7977   003F32                     u5661:
  7978   003F32  EFA7  F01F         	goto	l5792
  7979   003F36                     u5660:
  7980   003F36                     l5790:
  7981                           
  7982                           ;colour_move.c: 64:             go_Home(WayBack, Time_forward);
  7983   003F36  0E1A               	movlw	low _WayBack
  7984   003F38  6E24               	movwf	go_Home@WayBack^0,c
  7985   003F3A  0E01               	movlw	high _WayBack
  7986   003F3C  6E25               	movwf	(go_Home@WayBack+1)^0,c
  7987   003F3E  0E3C               	movlw	low _Time_forward
  7988   003F40  6E26               	movwf	go_Home@Time_forward^0,c
  7989   003F42  0E02               	movlw	high _Time_forward
  7990   003F44  6E27               	movwf	(go_Home@Time_forward+1)^0,c
  7991   003F46  EC72  F01A         	call	_go_Home	;wreg free
  7992                           
  7993                           ;colour_move.c: 65:         }
  7994   003F4A  EFC2  F01F         	goto	l754
  7995   003F4E                     l5792:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;colour_move.c: 67:             RetryMove(&motorL, &motorR);
  7999   003F4E  0E61               	movlw	low _motorL
  8000   003F50  6E20               	movwf	RetryMove@mL^0,c
  8001   003F52  0E01               	movlw	high _motorL
  8002   003F54  6E21               	movwf	(RetryMove@mL+1)^0,c
  8003   003F56  0E58               	movlw	low _motorR
  8004   003F58  6E22               	movwf	RetryMove@mR^0,c
  8005   003F5A  0E01               	movlw	high _motorR
  8006   003F5C  6E23               	movwf	(RetryMove@mR+1)^0,c
  8007   003F5E  EC9B  F02A         	call	_RetryMove	;wreg free
  8008   003F62                     
  8009                           ;colour_move.c: 68:             TMR0H=0;
  8010   003F62  0E00               	movlw	0
  8011   003F64  6ED4               	movwf	212,c	;volatile
  8012   003F66                     
  8013                           ;colour_move.c: 69:             TMR0L=0;
  8014   003F66  0E00               	movlw	0
  8015   003F68  6ED3               	movwf	211,c	;volatile
  8016   003F6A  EFC2  F01F         	goto	l754
  8017   003F6E                     l5798:
  8018   003F6E  502D               	movf	colour_move@recognized_colour^0,w,c
  8019   003F70  102E               	iorwf	(colour_move@recognized_colour+1)^0,w,c
  8020   003F72  A4D8               	btfss	status,2,c
  8021   003F74  EFBE  F01F         	goto	u5671
  8022   003F78  EFC0  F01F         	goto	u5670
  8023   003F7C                     u5671:
  8024   003F7C  EFC2  F01F         	goto	l746
  8025   003F80                     u5670:
  8026   003F80  EF9B  F01F         	goto	l5790
  8027   003F84                     l746:
  8028   003F84                     l754:
  8029   003F84  0012               	return		;funcret
  8030   003F86                     __end_of_colour_move:
  8031                           	callstack 0
  8032                           
  8033 ;; *************** function _go_Home *****************
  8034 ;; Defined at:
  8035 ;;		line 4 in file "Memory.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  WayBack         2   35[COMRAM] PTR unsigned char 
  8038 ;;		 -> WayBack(50), 
  8039 ;;  Time_forward    2   37[COMRAM] PTR int 
  8040 ;;		 -> Time_forward(100), 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  i               2   42[COMRAM] int 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;Total ram usage:        9 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 6
  8059 ;; This function calls:
  8060 ;;		_Backhalfblock
  8061 ;;		_BlueMove
  8062 ;;		_GreenMove
  8063 ;;		_RedMove
  8064 ;;		_ReverseLightBlueMove
  8065 ;;		_ReverseOrangeMove
  8066 ;;		_ReversePink
  8067 ;;		_ReverseYellow
  8068 ;;		_stop
  8069 ;;		_timed_forward
  8070 ;; This function is called by:
  8071 ;;		_main
  8072 ;;		_colour_move
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text35
  8077   0034E4                     __ptext35:
  8078                           	callstack 0
  8079   0034E4                     _go_Home:
  8080                           	callstack 24
  8081   0034E4                     
  8082                           ;Memory.c: 5:     int i;;Memory.c: 6:     BlueMove(&motorL, &motorR);
  8083   0034E4  0E61               	movlw	low _motorL
  8084   0034E6  6E20               	movwf	BlueMove@mL^0,c
  8085   0034E8  0E01               	movlw	high _motorL
  8086   0034EA  6E21               	movwf	(BlueMove@mL+1)^0,c
  8087   0034EC  0E58               	movlw	low _motorR
  8088   0034EE  6E22               	movwf	BlueMove@mR^0,c
  8089   0034F0  0E01               	movlw	high _motorR
  8090   0034F2  6E23               	movwf	(BlueMove@mR+1)^0,c
  8091   0034F4  ECED  F029         	call	_BlueMove	;wreg free
  8092   0034F8                     
  8093                           ;Memory.c: 7:     T0CON0bits.T0EN=0;
  8094   0034F8  9ED5               	bcf	213,7,c	;volatile
  8095   0034FA                     
  8096                           ;Memory.c: 8:     for (i = move_count; i >= 0; i--){
  8097   0034FA  C1DA  F02B         	movff	_move_count,go_Home@i	;volatile
  8098   0034FE  C1DB  F02C         	movff	_move_count+1,go_Home@i+1	;volatile
  8099   003502                     l5248:
  8100   003502  BE2C               	btfsc	(go_Home@i+1)^0,7,c
  8101   003504  EF88  F01A         	goto	u5000
  8102   003508  EF86  F01A         	goto	u5001
  8103   00350C                     u5001:
  8104   00350C  EF8A  F01A         	goto	l5252
  8105   003510                     u5000:
  8106   003510  EFE1  F01B         	goto	l613
  8107   003514                     l5252:
  8108                           
  8109                           ;Memory.c: 9:         timed_forward(&motorL, &motorR,Time_forward[i]);
  8110   003514  0E61               	movlw	low _motorL
  8111   003516  6E14               	movwf	timed_forward@mL^0,c
  8112   003518  0E01               	movlw	high _motorL
  8113   00351A  6E15               	movwf	(timed_forward@mL+1)^0,c
  8114   00351C  0E58               	movlw	low _motorR
  8115   00351E  6E16               	movwf	timed_forward@mR^0,c
  8116   003520  0E01               	movlw	high _motorR
  8117   003522  6E17               	movwf	(timed_forward@mR+1)^0,c
  8118   003524  90D8               	bcf	status,0,c
  8119   003526  342B               	rlcf	go_Home@i^0,w,c
  8120   003528  6ED9               	movwf	fsr2l,c
  8121   00352A  342C               	rlcf	(go_Home@i+1)^0,w,c
  8122   00352C  6EDA               	movwf	fsr2h,c
  8123   00352E  5026               	movf	go_Home@Time_forward^0,w,c
  8124   003530  26D9               	addwf	fsr2l,f,c
  8125   003532  5027               	movf	(go_Home@Time_forward+1)^0,w,c
  8126   003534  22DA               	addwfc	fsr2h,f,c
  8127   003536  CFDE F018          	movff	postinc2,timed_forward@time
  8128   00353A  CFDD F019          	movff	postdec2,timed_forward@time+1
  8129   00353E  EC47  F027         	call	_timed_forward	;wreg free
  8130   003542                     
  8131                           ;Memory.c: 11:         if (WayBack[i-1]==1){
  8132   003542  502B               	movf	go_Home@i^0,w,c
  8133   003544  2424               	addwf	go_Home@WayBack^0,w,c
  8134   003546  6E28               	movwf	??_go_Home^0,c
  8135   003548  502C               	movf	(go_Home@i+1)^0,w,c
  8136   00354A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8137   00354C  6E29               	movwf	(??_go_Home+1)^0,c
  8138   00354E  0EFF               	movlw	255
  8139   003550  2428               	addwf	??_go_Home^0,w,c
  8140   003552  6ED9               	movwf	fsr2l,c
  8141   003554  0EFF               	movlw	255
  8142   003556  2029               	addwfc	(??_go_Home+1)^0,w,c
  8143   003558  6EDA               	movwf	fsr2h,c
  8144   00355A  04DE               	decf	postinc2,w,c
  8145   00355C  A4D8               	btfss	status,2,c
  8146   00355E  EFB3  F01A         	goto	u5011
  8147   003562  EFB5  F01A         	goto	u5010
  8148   003566                     u5011:
  8149   003566  EFCB  F01A         	goto	l5258
  8150   00356A                     u5010:
  8151   00356A                     
  8152                           ;Memory.c: 13:             GreenMove(&motorL, &motorR);
  8153   00356A  0E61               	movlw	low _motorL
  8154   00356C  6E20               	movwf	GreenMove@mL^0,c
  8155   00356E  0E01               	movlw	high _motorL
  8156   003570  6E21               	movwf	(GreenMove@mL+1)^0,c
  8157   003572  0E58               	movlw	low _motorR
  8158   003574  6E22               	movwf	GreenMove@mR^0,c
  8159   003576  0E01               	movlw	high _motorR
  8160   003578  6E23               	movwf	(GreenMove@mR+1)^0,c
  8161   00357A  ECD2  F02F         	call	_GreenMove	;wreg free
  8162                           
  8163                           ;Memory.c: 14:             Backhalfblock(&motorL, &motorR);
  8164   00357E  0E61               	movlw	low _motorL
  8165   003580  6E1A               	movwf	Backhalfblock@mL^0,c
  8166   003582  0E01               	movlw	high _motorL
  8167   003584  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8168   003586  0E58               	movlw	low _motorR
  8169   003588  6E1C               	movwf	Backhalfblock@mR^0,c
  8170   00358A  0E01               	movlw	high _motorR
  8171   00358C  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8172   00358E  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8173                           
  8174                           ;Memory.c: 15:         }
  8175   003592  EFCD  F01B         	goto	l601
  8176   003596                     l5258:
  8177   003596  502B               	movf	go_Home@i^0,w,c
  8178   003598  2424               	addwf	go_Home@WayBack^0,w,c
  8179   00359A  6E28               	movwf	??_go_Home^0,c
  8180   00359C  502C               	movf	(go_Home@i+1)^0,w,c
  8181   00359E  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8182   0035A0  6E29               	movwf	(??_go_Home+1)^0,c
  8183   0035A2  0EFF               	movlw	255
  8184   0035A4  2428               	addwf	??_go_Home^0,w,c
  8185   0035A6  6ED9               	movwf	fsr2l,c
  8186   0035A8  0EFF               	movlw	255
  8187   0035AA  2029               	addwfc	(??_go_Home+1)^0,w,c
  8188   0035AC  6EDA               	movwf	fsr2h,c
  8189   0035AE  0E02               	movlw	2
  8190   0035B0  18DE               	xorwf	postinc2,w,c
  8191   0035B2  A4D8               	btfss	status,2,c
  8192   0035B4  EFDE  F01A         	goto	u5021
  8193   0035B8  EFE0  F01A         	goto	u5020
  8194   0035BC                     u5021:
  8195   0035BC  EFF6  F01A         	goto	l5262
  8196   0035C0                     u5020:
  8197   0035C0                     
  8198                           ;Memory.c: 18:             ReverseOrangeMove(&motorL, &motorR);
  8199   0035C0  0E61               	movlw	low _motorL
  8200   0035C2  6E20               	movwf	ReverseOrangeMove@mL^0,c
  8201   0035C4  0E01               	movlw	high _motorL
  8202   0035C6  6E21               	movwf	(ReverseOrangeMove@mL+1)^0,c
  8203   0035C8  0E58               	movlw	low _motorR
  8204   0035CA  6E22               	movwf	ReverseOrangeMove@mR^0,c
  8205   0035CC  0E01               	movlw	high _motorR
  8206   0035CE  6E23               	movwf	(ReverseOrangeMove@mR+1)^0,c
  8207   0035D0  EC28  F02D         	call	_ReverseOrangeMove	;wreg free
  8208                           
  8209                           ;Memory.c: 19:             Backhalfblock(&motorL, &motorR);
  8210   0035D4  0E61               	movlw	low _motorL
  8211   0035D6  6E1A               	movwf	Backhalfblock@mL^0,c
  8212   0035D8  0E01               	movlw	high _motorL
  8213   0035DA  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8214   0035DC  0E58               	movlw	low _motorR
  8215   0035DE  6E1C               	movwf	Backhalfblock@mR^0,c
  8216   0035E0  0E01               	movlw	high _motorR
  8217   0035E2  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8218   0035E4  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8219                           
  8220                           ;Memory.c: 20:         }
  8221   0035E8  EFCD  F01B         	goto	l601
  8222   0035EC                     l5262:
  8223   0035EC  502B               	movf	go_Home@i^0,w,c
  8224   0035EE  2424               	addwf	go_Home@WayBack^0,w,c
  8225   0035F0  6E28               	movwf	??_go_Home^0,c
  8226   0035F2  502C               	movf	(go_Home@i+1)^0,w,c
  8227   0035F4  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8228   0035F6  6E29               	movwf	(??_go_Home+1)^0,c
  8229   0035F8  0EFF               	movlw	255
  8230   0035FA  2428               	addwf	??_go_Home^0,w,c
  8231   0035FC  6ED9               	movwf	fsr2l,c
  8232   0035FE  0EFF               	movlw	255
  8233   003600  2029               	addwfc	(??_go_Home+1)^0,w,c
  8234   003602  6EDA               	movwf	fsr2h,c
  8235   003604  0E03               	movlw	3
  8236   003606  18DE               	xorwf	postinc2,w,c
  8237   003608  A4D8               	btfss	status,2,c
  8238   00360A  EF09  F01B         	goto	u5031
  8239   00360E  EF0B  F01B         	goto	u5030
  8240   003612                     u5031:
  8241   003612  EF21  F01B         	goto	l5266
  8242   003616                     u5030:
  8243   003616                     
  8244                           ;Memory.c: 23:             ReverseYellow(&motorL, &motorR);
  8245   003616  0E61               	movlw	low _motorL
  8246   003618  6E20               	movwf	ReverseYellow@mL^0,c
  8247   00361A  0E01               	movlw	high _motorL
  8248   00361C  6E21               	movwf	(ReverseYellow@mL+1)^0,c
  8249   00361E  0E58               	movlw	low _motorR
  8250   003620  6E22               	movwf	ReverseYellow@mR^0,c
  8251   003622  0E01               	movlw	high _motorR
  8252   003624  6E23               	movwf	(ReverseYellow@mR+1)^0,c
  8253   003626  EC91  F026         	call	_ReverseYellow	;wreg free
  8254                           
  8255                           ;Memory.c: 24:             Backhalfblock(&motorL, &motorR);
  8256   00362A  0E61               	movlw	low _motorL
  8257   00362C  6E1A               	movwf	Backhalfblock@mL^0,c
  8258   00362E  0E01               	movlw	high _motorL
  8259   003630  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8260   003632  0E58               	movlw	low _motorR
  8261   003634  6E1C               	movwf	Backhalfblock@mR^0,c
  8262   003636  0E01               	movlw	high _motorR
  8263   003638  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8264   00363A  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8265                           
  8266                           ;Memory.c: 25:         }
  8267   00363E  EFCD  F01B         	goto	l601
  8268   003642                     l5266:
  8269   003642  502B               	movf	go_Home@i^0,w,c
  8270   003644  2424               	addwf	go_Home@WayBack^0,w,c
  8271   003646  6E28               	movwf	??_go_Home^0,c
  8272   003648  502C               	movf	(go_Home@i+1)^0,w,c
  8273   00364A  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8274   00364C  6E29               	movwf	(??_go_Home+1)^0,c
  8275   00364E  0EFF               	movlw	255
  8276   003650  2428               	addwf	??_go_Home^0,w,c
  8277   003652  6ED9               	movwf	fsr2l,c
  8278   003654  0EFF               	movlw	255
  8279   003656  2029               	addwfc	(??_go_Home+1)^0,w,c
  8280   003658  6EDA               	movwf	fsr2h,c
  8281   00365A  0E04               	movlw	4
  8282   00365C  18DE               	xorwf	postinc2,w,c
  8283   00365E  A4D8               	btfss	status,2,c
  8284   003660  EF34  F01B         	goto	u5041
  8285   003664  EF36  F01B         	goto	u5040
  8286   003668                     u5041:
  8287   003668  EF4C  F01B         	goto	l5270
  8288   00366C                     u5040:
  8289   00366C                     
  8290                           ;Memory.c: 28:             BlueMove(&motorL, &motorR);
  8291   00366C  0E61               	movlw	low _motorL
  8292   00366E  6E20               	movwf	BlueMove@mL^0,c
  8293   003670  0E01               	movlw	high _motorL
  8294   003672  6E21               	movwf	(BlueMove@mL+1)^0,c
  8295   003674  0E58               	movlw	low _motorR
  8296   003676  6E22               	movwf	BlueMove@mR^0,c
  8297   003678  0E01               	movlw	high _motorR
  8298   00367A  6E23               	movwf	(BlueMove@mR+1)^0,c
  8299   00367C  ECED  F029         	call	_BlueMove	;wreg free
  8300                           
  8301                           ;Memory.c: 29:             Backhalfblock(&motorL, &motorR);
  8302   003680  0E61               	movlw	low _motorL
  8303   003682  6E1A               	movwf	Backhalfblock@mL^0,c
  8304   003684  0E01               	movlw	high _motorL
  8305   003686  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8306   003688  0E58               	movlw	low _motorR
  8307   00368A  6E1C               	movwf	Backhalfblock@mR^0,c
  8308   00368C  0E01               	movlw	high _motorR
  8309   00368E  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8310   003690  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8311                           
  8312                           ;Memory.c: 30:         }
  8313   003694  EFCD  F01B         	goto	l601
  8314   003698                     l5270:
  8315   003698  502B               	movf	go_Home@i^0,w,c
  8316   00369A  2424               	addwf	go_Home@WayBack^0,w,c
  8317   00369C  6E28               	movwf	??_go_Home^0,c
  8318   00369E  502C               	movf	(go_Home@i+1)^0,w,c
  8319   0036A0  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8320   0036A2  6E29               	movwf	(??_go_Home+1)^0,c
  8321   0036A4  0EFF               	movlw	255
  8322   0036A6  2428               	addwf	??_go_Home^0,w,c
  8323   0036A8  6ED9               	movwf	fsr2l,c
  8324   0036AA  0EFF               	movlw	255
  8325   0036AC  2029               	addwfc	(??_go_Home+1)^0,w,c
  8326   0036AE  6EDA               	movwf	fsr2h,c
  8327   0036B0  0E05               	movlw	5
  8328   0036B2  18DE               	xorwf	postinc2,w,c
  8329   0036B4  A4D8               	btfss	status,2,c
  8330   0036B6  EF5F  F01B         	goto	u5051
  8331   0036BA  EF61  F01B         	goto	u5050
  8332   0036BE                     u5051:
  8333   0036BE  EF77  F01B         	goto	l5274
  8334   0036C2                     u5050:
  8335   0036C2                     
  8336                           ;Memory.c: 33:             RedMove(&motorL, &motorR);
  8337   0036C2  0E61               	movlw	low _motorL
  8338   0036C4  6E20               	movwf	RedMove@mL^0,c
  8339   0036C6  0E01               	movlw	high _motorL
  8340   0036C8  6E21               	movwf	(RedMove@mL+1)^0,c
  8341   0036CA  0E58               	movlw	low _motorR
  8342   0036CC  6E22               	movwf	RedMove@mR^0,c
  8343   0036CE  0E01               	movlw	high _motorR
  8344   0036D0  6E23               	movwf	(RedMove@mR+1)^0,c
  8345   0036D2  ECB3  F02F         	call	_RedMove	;wreg free
  8346                           
  8347                           ;Memory.c: 34:             Backhalfblock(&motorL, &motorR);
  8348   0036D6  0E61               	movlw	low _motorL
  8349   0036D8  6E1A               	movwf	Backhalfblock@mL^0,c
  8350   0036DA  0E01               	movlw	high _motorL
  8351   0036DC  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8352   0036DE  0E58               	movlw	low _motorR
  8353   0036E0  6E1C               	movwf	Backhalfblock@mR^0,c
  8354   0036E2  0E01               	movlw	high _motorR
  8355   0036E4  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8356   0036E6  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8357                           
  8358                           ;Memory.c: 35:         }
  8359   0036EA  EFCD  F01B         	goto	l601
  8360   0036EE                     l5274:
  8361   0036EE  502B               	movf	go_Home@i^0,w,c
  8362   0036F0  2424               	addwf	go_Home@WayBack^0,w,c
  8363   0036F2  6E28               	movwf	??_go_Home^0,c
  8364   0036F4  502C               	movf	(go_Home@i+1)^0,w,c
  8365   0036F6  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8366   0036F8  6E29               	movwf	(??_go_Home+1)^0,c
  8367   0036FA  0EFF               	movlw	255
  8368   0036FC  2428               	addwf	??_go_Home^0,w,c
  8369   0036FE  6ED9               	movwf	fsr2l,c
  8370   003700  0EFF               	movlw	255
  8371   003702  2029               	addwfc	(??_go_Home+1)^0,w,c
  8372   003704  6EDA               	movwf	fsr2h,c
  8373   003706  0E06               	movlw	6
  8374   003708  18DE               	xorwf	postinc2,w,c
  8375   00370A  A4D8               	btfss	status,2,c
  8376   00370C  EF8A  F01B         	goto	u5061
  8377   003710  EF8C  F01B         	goto	u5060
  8378   003714                     u5061:
  8379   003714  EFA2  F01B         	goto	l5278
  8380   003718                     u5060:
  8381   003718                     
  8382                           ;Memory.c: 38:             ReverseLightBlueMove(&motorL, &motorR);
  8383   003718  0E61               	movlw	low _motorL
  8384   00371A  6E20               	movwf	ReverseLightBlueMove@mL^0,c
  8385   00371C  0E01               	movlw	high _motorL
  8386   00371E  6E21               	movwf	(ReverseLightBlueMove@mL+1)^0,c
  8387   003720  0E58               	movlw	low _motorR
  8388   003722  6E22               	movwf	ReverseLightBlueMove@mR^0,c
  8389   003724  0E01               	movlw	high _motorR
  8390   003726  6E23               	movwf	(ReverseLightBlueMove@mR+1)^0,c
  8391   003728  EC51  F02D         	call	_ReverseLightBlueMove	;wreg free
  8392                           
  8393                           ;Memory.c: 39:             Backhalfblock(&motorL, &motorR);
  8394   00372C  0E61               	movlw	low _motorL
  8395   00372E  6E1A               	movwf	Backhalfblock@mL^0,c
  8396   003730  0E01               	movlw	high _motorL
  8397   003732  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8398   003734  0E58               	movlw	low _motorR
  8399   003736  6E1C               	movwf	Backhalfblock@mR^0,c
  8400   003738  0E01               	movlw	high _motorR
  8401   00373A  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8402   00373C  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8403                           
  8404                           ;Memory.c: 40:         }
  8405   003740  EFCD  F01B         	goto	l601
  8406   003744                     l5278:
  8407   003744  502B               	movf	go_Home@i^0,w,c
  8408   003746  2424               	addwf	go_Home@WayBack^0,w,c
  8409   003748  6E28               	movwf	??_go_Home^0,c
  8410   00374A  502C               	movf	(go_Home@i+1)^0,w,c
  8411   00374C  2025               	addwfc	(go_Home@WayBack+1)^0,w,c
  8412   00374E  6E29               	movwf	(??_go_Home+1)^0,c
  8413   003750  0EFF               	movlw	255
  8414   003752  2428               	addwf	??_go_Home^0,w,c
  8415   003754  6ED9               	movwf	fsr2l,c
  8416   003756  0EFF               	movlw	255
  8417   003758  2029               	addwfc	(??_go_Home+1)^0,w,c
  8418   00375A  6EDA               	movwf	fsr2h,c
  8419   00375C  0E07               	movlw	7
  8420   00375E  18DE               	xorwf	postinc2,w,c
  8421   003760  A4D8               	btfss	status,2,c
  8422   003762  EFB5  F01B         	goto	u5071
  8423   003766  EFB7  F01B         	goto	u5070
  8424   00376A                     u5071:
  8425   00376A  EFCD  F01B         	goto	l607
  8426   00376E                     u5070:
  8427   00376E                     
  8428                           ;Memory.c: 43:             ReversePink(&motorL, &motorR);
  8429   00376E  0E61               	movlw	low _motorL
  8430   003770  6E20               	movwf	ReversePink@mL^0,c
  8431   003772  0E01               	movlw	high _motorL
  8432   003774  6E21               	movwf	(ReversePink@mL+1)^0,c
  8433   003776  0E58               	movlw	low _motorR
  8434   003778  6E22               	movwf	ReversePink@mR^0,c
  8435   00377A  0E01               	movlw	high _motorR
  8436   00377C  6E23               	movwf	(ReversePink@mR+1)^0,c
  8437   00377E  ECEC  F026         	call	_ReversePink	;wreg free
  8438                           
  8439                           ;Memory.c: 44:             Backhalfblock(&motorL, &motorR);
  8440   003782  0E61               	movlw	low _motorL
  8441   003784  6E1A               	movwf	Backhalfblock@mL^0,c
  8442   003786  0E01               	movlw	high _motorL
  8443   003788  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  8444   00378A  0E58               	movlw	low _motorR
  8445   00378C  6E1C               	movwf	Backhalfblock@mR^0,c
  8446   00378E  0E01               	movlw	high _motorR
  8447   003790  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  8448   003792  ECC9  F02B         	call	_Backhalfblock	;wreg free
  8449   003796  EFCD  F01B         	goto	l601
  8450   00379A                     l607:
  8451   00379A                     l601:
  8452                           
  8453                           ;Memory.c: 46:         stop(&motorL, &motorR);
  8454   00379A  0E61               	movlw	low _motorL
  8455   00379C  6E14               	movwf	stop@mL^0,c
  8456   00379E  0E01               	movlw	high _motorL
  8457   0037A0  6E15               	movwf	(stop@mL+1)^0,c
  8458   0037A2  0E58               	movlw	low _motorR
  8459   0037A4  6E16               	movwf	stop@mR^0,c
  8460   0037A6  0E01               	movlw	high _motorR
  8461   0037A8  6E17               	movwf	(stop@mR+1)^0,c
  8462   0037AA  EC71  F029         	call	_stop	;wreg free
  8463   0037AE                     
  8464                           ;Memory.c: 47:         run_flag=0;
  8465   0037AE  0E00               	movlw	0
  8466   0037B0  0101               	movlb	1	; () banked
  8467   0037B2  6FD9               	movwf	(_run_flag+1)& (0+255),b
  8468   0037B4  0E00               	movlw	0
  8469   0037B6  6FD8               	movwf	_run_flag& (0+255),b
  8470   0037B8                     
  8471                           ; BSR set to: 1
  8472                           ;Memory.c: 50:   }
  8473   0037B8  062B               	decf	go_Home@i^0,f,c
  8474   0037BA  A0D8               	btfss	status,0,c
  8475   0037BC  062C               	decf	(go_Home@i+1)^0,f,c
  8476   0037BE  EF81  F01A         	goto	l5248
  8477   0037C2                     l613:
  8478   0037C2  0012               	return		;funcret
  8479   0037C4                     __end_of_go_Home:
  8480                           	callstack 0
  8481                           
  8482 ;; *************** function _timed_forward *****************
  8483 ;; Defined at:
  8484 ;;		line 166 in file "dc_motor.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  8487 ;;		 -> motorL(9), 
  8488 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  8489 ;;		 -> motorR(9), 
  8490 ;;  time            2   23[COMRAM] int 
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;		None
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1    wreg      void 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 0/0
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8502 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;Total ram usage:        8 bytes
  8507 ;; Hardware stack levels used: 1
  8508 ;; Hardware stack levels required when called: 3
  8509 ;; This function calls:
  8510 ;;		_delayed_ms
  8511 ;;		_setMotorPWM
  8512 ;; This function is called by:
  8513 ;;		_go_Home
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text36
  8518   004E8E                     __ptext36:
  8519                           	callstack 0
  8520   004E8E                     _timed_forward:
  8521                           	callstack 26
  8522   004E8E                     
  8523                           ;dc_motor.c: 166: void timed_forward(struct DC_motor *mL, struct DC_motor *mR, int time)
      +                          ;dc_motor.c: 167: {;dc_motor.c: 169:     mL->direction =1;
  8524   004E8E  EE20 F001          	lfsr	2,1
  8525   004E92  5014               	movf	timed_forward@mL^0,w,c
  8526   004E94  26D9               	addwf	fsr2l,f,c
  8527   004E96  5015               	movf	(timed_forward@mL+1)^0,w,c
  8528   004E98  22DA               	addwfc	fsr2h,f,c
  8529   004E9A  0E01               	movlw	1
  8530   004E9C  6EDF               	movwf	indf2,c
  8531                           
  8532                           ;dc_motor.c: 170:     mR->direction =1;
  8533   004E9E  EE20 F001          	lfsr	2,1
  8534   004EA2  5016               	movf	timed_forward@mR^0,w,c
  8535   004EA4  26D9               	addwf	fsr2l,f,c
  8536   004EA6  5017               	movf	(timed_forward@mR+1)^0,w,c
  8537   004EA8  22DA               	addwfc	fsr2h,f,c
  8538   004EAA  0E01               	movlw	1
  8539   004EAC  6EDF               	movwf	indf2,c
  8540                           
  8541                           ;dc_motor.c: 171:     while (mL->power < power && mR->power < power){
  8542   004EAE  EF7D  F027         	goto	l5086
  8543   004EB2                     l5078:
  8544                           
  8545                           ;dc_motor.c: 173:         mL->power+=10;
  8546   004EB2  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8547   004EB6  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8548   004EBA  0E0A               	movlw	10
  8549   004EBC  26DF               	addwf	indf2,f,c
  8550                           
  8551                           ;dc_motor.c: 174:         mR->power+=10;
  8552   004EBE  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8553   004EC2  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8554   004EC6  0E0A               	movlw	10
  8555   004EC8  26DF               	addwf	indf2,f,c
  8556   004ECA                     
  8557                           ;dc_motor.c: 176:         setMotorPWM(mL);
  8558   004ECA  C014  F00E         	movff	timed_forward@mL,setMotorPWM@m
  8559   004ECE  C015  F00F         	movff	timed_forward@mL+1,setMotorPWM@m+1
  8560   004ED2  EC40  F023         	call	_setMotorPWM	;wreg free
  8561   004ED6                     
  8562                           ;dc_motor.c: 177:         setMotorPWM(mR);
  8563   004ED6  C016  F00E         	movff	timed_forward@mR,setMotorPWM@m
  8564   004EDA  C017  F00F         	movff	timed_forward@mR+1,setMotorPWM@m+1
  8565   004EDE  EC40  F023         	call	_setMotorPWM	;wreg free
  8566   004EE2                     
  8567                           ;dc_motor.c: 180:         _delay((unsigned long)((20)*(64000000/4000.0)));
  8568   004EE2  0E02               	movlw	2
  8569   004EE4  6E1B               	movwf	(??_timed_forward+1)^0,c
  8570   004EE6  0EA0               	movlw	160
  8571   004EE8  6E1A               	movwf	??_timed_forward^0,c
  8572   004EEA  0E92               	movlw	146
  8573   004EEC                     u5927:
  8574   004EEC  2EE8               	decfsz	wreg,f,c
  8575   004EEE  D7FE               	bra	u5927
  8576   004EF0  2E1A               	decfsz	??_timed_forward^0,f,c
  8577   004EF2  D7FC               	bra	u5927
  8578   004EF4  2E1B               	decfsz	(??_timed_forward+1)^0,f,c
  8579   004EF6  D7FA               	bra	u5927
  8580   004EF8  D000               	nop2	
  8581   004EFA                     l5086:
  8582   004EFA  C014  FFD9         	movff	timed_forward@mL,fsr2l
  8583   004EFE  C015  FFDA         	movff	timed_forward@mL+1,fsr2h
  8584   004F02  0E32               	movlw	50
  8585   004F04  60DF               	cpfslt	indf2,c
  8586   004F06  EF87  F027         	goto	u4931
  8587   004F0A  EF89  F027         	goto	u4930
  8588   004F0E                     u4931:
  8589   004F0E  EF95  F027         	goto	l5090
  8590   004F12                     u4930:
  8591   004F12  C016  FFD9         	movff	timed_forward@mR,fsr2l
  8592   004F16  C017  FFDA         	movff	timed_forward@mR+1,fsr2h
  8593   004F1A  0E31               	movlw	49
  8594   004F1C  64DF               	cpfsgt	indf2,c
  8595   004F1E  EF93  F027         	goto	u4941
  8596   004F22  EF95  F027         	goto	u4940
  8597   004F26                     u4941:
  8598   004F26  EF59  F027         	goto	l5078
  8599   004F2A                     u4940:
  8600   004F2A                     l5090:
  8601                           
  8602                           ;dc_motor.c: 182:     delayed_ms(time);
  8603   004F2A  C018  F001         	movff	timed_forward@time,delayed_ms@time
  8604   004F2E  C019  F002         	movff	timed_forward@time+1,delayed_ms@time+1
  8605   004F32  EC0D  F030         	call	_delayed_ms	;wreg free
  8606   004F36  0012               	return		;funcret
  8607   004F38                     __end_of_timed_forward:
  8608                           	callstack 0
  8609                           
  8610 ;; *************** function _delayed_ms *****************
  8611 ;; Defined at:
  8612 ;;		line 43 in file "timers.c"
  8613 ;; Parameters:    Size  Location     Type
  8614 ;;  time            2    0[COMRAM] int 
  8615 ;; Auto vars:     Size  Location     Type
  8616 ;;  i               2    3[COMRAM] unsigned int 
  8617 ;; Return value:  Size  Location     Type
  8618 ;;                  1    wreg      void 
  8619 ;; Registers used:
  8620 ;;		wreg, status,2, status,0
  8621 ;; Tracked objects:
  8622 ;;		On entry : 0/0
  8623 ;;		On exit  : 0/0
  8624 ;;		Unchanged: 0/0
  8625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8626 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8630 ;;Total ram usage:        5 bytes
  8631 ;; Hardware stack levels used: 1
  8632 ;; Hardware stack levels required when called: 1
  8633 ;; This function calls:
  8634 ;;		Nothing
  8635 ;; This function is called by:
  8636 ;;		_timed_forward
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text37
  8641   00601A                     __ptext37:
  8642                           	callstack 0
  8643   00601A                     _delayed_ms:
  8644                           	callstack 27
  8645   00601A                     
  8646                           ;timers.c: 44:     for(unsigned int i=0;i<time;i++){
  8647   00601A  0E00               	movlw	0
  8648   00601C  6E05               	movwf	(delayed_ms@i+1)^0,c
  8649   00601E  0E00               	movlw	0
  8650   006020  6E04               	movwf	delayed_ms@i^0,c
  8651   006022  EF1D  F030         	goto	l643
  8652   006026                     l4734:
  8653                           
  8654                           ;timers.c: 45:         _delay((unsigned long)((500)*(64000000/4000000.0)));
  8655   006026  0E0B               	movlw	11
  8656   006028  6E03               	movwf	??_delayed_ms^0,c
  8657   00602A  0E62               	movlw	98
  8658   00602C                     u5937:
  8659   00602C  2EE8               	decfsz	wreg,f,c
  8660   00602E  D7FE               	bra	u5937
  8661   006030  2E03               	decfsz	??_delayed_ms^0,f,c
  8662   006032  D7FC               	bra	u5937
  8663   006034  D000               	nop2	
  8664   006036                     
  8665                           ;timers.c: 46:     }
  8666   006036  4A04               	infsnz	delayed_ms@i^0,f,c
  8667   006038  2A05               	incf	(delayed_ms@i+1)^0,f,c
  8668   00603A                     l643:
  8669   00603A  5001               	movf	delayed_ms@time^0,w,c
  8670   00603C  5C04               	subwf	delayed_ms@i^0,w,c
  8671   00603E  5002               	movf	(delayed_ms@time+1)^0,w,c
  8672   006040  5805               	subwfb	(delayed_ms@i+1)^0,w,c
  8673   006042  A0D8               	btfss	status,0,c
  8674   006044  EF26  F030         	goto	u4481
  8675   006048  EF28  F030         	goto	u4480
  8676   00604C                     u4481:
  8677   00604C  EF13  F030         	goto	l4734
  8678   006050                     u4480:
  8679   006050  0012               	return		;funcret
  8680   006052                     __end_of_delayed_ms:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _ReverseYellow *****************
  8684 ;; Defined at:
  8685 ;;		line 352 in file "dc_motor.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8688 ;;		 -> motorL(9), 
  8689 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8690 ;;		 -> motorR(9), 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;		None
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      void 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;Total ram usage:        4 bytes
  8707 ;; Hardware stack levels used: 1
  8708 ;; Hardware stack levels required when called: 5
  8709 ;; This function calls:
  8710 ;;		_ForwardOneBlock
  8711 ;;		_reverseDetect
  8712 ;;		_turnRight45
  8713 ;; This function is called by:
  8714 ;;		_go_Home
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           	psect	text38
  8719   004D22                     __ptext38:
  8720                           	callstack 0
  8721   004D22                     _ReverseYellow:
  8722                           	callstack 24
  8723   004D22                     
  8724                           ;dc_motor.c: 353:     reverseDetect(&motorL, &motorR);
  8725   004D22  0E61               	movlw	low _motorL
  8726   004D24  6E1A               	movwf	reverseDetect@mL^0,c
  8727   004D26  0E01               	movlw	high _motorL
  8728   004D28  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8729   004D2A  0E58               	movlw	low _motorR
  8730   004D2C  6E1C               	movwf	reverseDetect@mR^0,c
  8731   004D2E  0E01               	movlw	high _motorR
  8732   004D30  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8733   004D32  ECF6  F02B         	call	_reverseDetect	;wreg free
  8734                           
  8735                           ;dc_motor.c: 354:     turnRight45(&motorL, &motorR);
  8736   004D36  0E61               	movlw	low _motorL
  8737   004D38  6E1A               	movwf	turnRight45@mL^0,c
  8738   004D3A  0E01               	movlw	high _motorL
  8739   004D3C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8740   004D3E  0E58               	movlw	low _motorR
  8741   004D40  6E1C               	movwf	turnRight45@mR^0,c
  8742   004D42  0E01               	movlw	high _motorR
  8743   004D44  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8744   004D46  ECBD  F02E         	call	_turnRight45	;wreg free
  8745                           
  8746                           ;dc_motor.c: 355:     turnRight45(&motorL, &motorR);
  8747   004D4A  0E61               	movlw	low _motorL
  8748   004D4C  6E1A               	movwf	turnRight45@mL^0,c
  8749   004D4E  0E01               	movlw	high _motorL
  8750   004D50  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8751   004D52  0E58               	movlw	low _motorR
  8752   004D54  6E1C               	movwf	turnRight45@mR^0,c
  8753   004D56  0E01               	movlw	high _motorR
  8754   004D58  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8755   004D5A  ECBD  F02E         	call	_turnRight45	;wreg free
  8756                           
  8757                           ;dc_motor.c: 356:     ForwardOneBlock(&motorL, &motorR);
  8758   004D5E  0E61               	movlw	low _motorL
  8759   004D60  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8760   004D62  0E01               	movlw	high _motorL
  8761   004D64  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8762   004D66  0E58               	movlw	low _motorR
  8763   004D68  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8764   004D6A  0E01               	movlw	high _motorR
  8765   004D6C  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8766   004D6E  EC50  F02C         	call	_ForwardOneBlock	;wreg free
  8767                           
  8768                           ;dc_motor.c: 357:     reverseDetect(&motorL, &motorR);
  8769   004D72  0E61               	movlw	low _motorL
  8770   004D74  6E1A               	movwf	reverseDetect@mL^0,c
  8771   004D76  0E01               	movlw	high _motorL
  8772   004D78  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8773   004D7A  0E58               	movlw	low _motorR
  8774   004D7C  6E1C               	movwf	reverseDetect@mR^0,c
  8775   004D7E  0E01               	movlw	high _motorR
  8776   004D80  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8777   004D82  ECF6  F02B         	call	_reverseDetect	;wreg free
  8778                           
  8779                           ;dc_motor.c: 358:     turnRight45(&motorL, &motorR);
  8780   004D86  0E61               	movlw	low _motorL
  8781   004D88  6E1A               	movwf	turnRight45@mL^0,c
  8782   004D8A  0E01               	movlw	high _motorL
  8783   004D8C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8784   004D8E  0E58               	movlw	low _motorR
  8785   004D90  6E1C               	movwf	turnRight45@mR^0,c
  8786   004D92  0E01               	movlw	high _motorR
  8787   004D94  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8788   004D96  ECBD  F02E         	call	_turnRight45	;wreg free
  8789                           
  8790                           ;dc_motor.c: 359:     turnRight45(&motorL, &motorR);
  8791   004D9A  0E61               	movlw	low _motorL
  8792   004D9C  6E1A               	movwf	turnRight45@mL^0,c
  8793   004D9E  0E01               	movlw	high _motorL
  8794   004DA0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8795   004DA2  0E58               	movlw	low _motorR
  8796   004DA4  6E1C               	movwf	turnRight45@mR^0,c
  8797   004DA6  0E01               	movlw	high _motorR
  8798   004DA8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8799   004DAA  ECBD  F02E         	call	_turnRight45	;wreg free
  8800                           
  8801                           ;dc_motor.c: 360:     turnRight45(&motorL, &motorR);
  8802   004DAE  0E61               	movlw	low _motorL
  8803   004DB0  6E1A               	movwf	turnRight45@mL^0,c
  8804   004DB2  0E01               	movlw	high _motorL
  8805   004DB4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8806   004DB6  0E58               	movlw	low _motorR
  8807   004DB8  6E1C               	movwf	turnRight45@mR^0,c
  8808   004DBA  0E01               	movlw	high _motorR
  8809   004DBC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8810   004DBE  ECBD  F02E         	call	_turnRight45	;wreg free
  8811                           
  8812                           ;dc_motor.c: 361:     turnRight45(&motorL, &motorR);
  8813   004DC2  0E61               	movlw	low _motorL
  8814   004DC4  6E1A               	movwf	turnRight45@mL^0,c
  8815   004DC6  0E01               	movlw	high _motorL
  8816   004DC8  6E1B               	movwf	(turnRight45@mL+1)^0,c
  8817   004DCA  0E58               	movlw	low _motorR
  8818   004DCC  6E1C               	movwf	turnRight45@mR^0,c
  8819   004DCE  0E01               	movlw	high _motorR
  8820   004DD0  6E1D               	movwf	(turnRight45@mR+1)^0,c
  8821   004DD2  ECBD  F02E         	call	_turnRight45	;wreg free
  8822   004DD6  0012               	return		;funcret
  8823   004DD8                     __end_of_ReverseYellow:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function _ReversePink *****************
  8827 ;; Defined at:
  8828 ;;		line 363 in file "dc_motor.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  8831 ;;		 -> motorL(9), 
  8832 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  8833 ;;		 -> motorR(9), 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;Total ram usage:        4 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 5
  8852 ;; This function calls:
  8853 ;;		_ForwardOneBlock
  8854 ;;		_reverseDetect
  8855 ;;		_turnLeft45
  8856 ;; This function is called by:
  8857 ;;		_go_Home
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text39
  8862   004DD8                     __ptext39:
  8863                           	callstack 0
  8864   004DD8                     _ReversePink:
  8865                           	callstack 24
  8866   004DD8                     
  8867                           ;dc_motor.c: 364:     reverseDetect(&motorL, &motorR);
  8868   004DD8  0E61               	movlw	low _motorL
  8869   004DDA  6E1A               	movwf	reverseDetect@mL^0,c
  8870   004DDC  0E01               	movlw	high _motorL
  8871   004DDE  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8872   004DE0  0E58               	movlw	low _motorR
  8873   004DE2  6E1C               	movwf	reverseDetect@mR^0,c
  8874   004DE4  0E01               	movlw	high _motorR
  8875   004DE6  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8876   004DE8  ECF6  F02B         	call	_reverseDetect	;wreg free
  8877                           
  8878                           ;dc_motor.c: 365:     turnLeft45(&motorL, &motorR);
  8879   004DEC  0E61               	movlw	low _motorL
  8880   004DEE  6E1A               	movwf	turnLeft45@mL^0,c
  8881   004DF0  0E01               	movlw	high _motorL
  8882   004DF2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8883   004DF4  0E58               	movlw	low _motorR
  8884   004DF6  6E1C               	movwf	turnLeft45@mR^0,c
  8885   004DF8  0E01               	movlw	high _motorR
  8886   004DFA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8887   004DFC  ECE4  F02E         	call	_turnLeft45	;wreg free
  8888                           
  8889                           ;dc_motor.c: 366:     turnLeft45(&motorL, &motorR);
  8890   004E00  0E61               	movlw	low _motorL
  8891   004E02  6E1A               	movwf	turnLeft45@mL^0,c
  8892   004E04  0E01               	movlw	high _motorL
  8893   004E06  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8894   004E08  0E58               	movlw	low _motorR
  8895   004E0A  6E1C               	movwf	turnLeft45@mR^0,c
  8896   004E0C  0E01               	movlw	high _motorR
  8897   004E0E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8898   004E10  ECE4  F02E         	call	_turnLeft45	;wreg free
  8899                           
  8900                           ;dc_motor.c: 367:     ForwardOneBlock(&motorL, &motorR);
  8901   004E14  0E61               	movlw	low _motorL
  8902   004E16  6E1A               	movwf	ForwardOneBlock@mL^0,c
  8903   004E18  0E01               	movlw	high _motorL
  8904   004E1A  6E1B               	movwf	(ForwardOneBlock@mL+1)^0,c
  8905   004E1C  0E58               	movlw	low _motorR
  8906   004E1E  6E1C               	movwf	ForwardOneBlock@mR^0,c
  8907   004E20  0E01               	movlw	high _motorR
  8908   004E22  6E1D               	movwf	(ForwardOneBlock@mR+1)^0,c
  8909   004E24  EC50  F02C         	call	_ForwardOneBlock	;wreg free
  8910                           
  8911                           ;dc_motor.c: 368:     reverseDetect(&motorL, &motorR);
  8912   004E28  0E61               	movlw	low _motorL
  8913   004E2A  6E1A               	movwf	reverseDetect@mL^0,c
  8914   004E2C  0E01               	movlw	high _motorL
  8915   004E2E  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  8916   004E30  0E58               	movlw	low _motorR
  8917   004E32  6E1C               	movwf	reverseDetect@mR^0,c
  8918   004E34  0E01               	movlw	high _motorR
  8919   004E36  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  8920   004E38  ECF6  F02B         	call	_reverseDetect	;wreg free
  8921                           
  8922                           ;dc_motor.c: 369:     turnLeft45(&motorL, &motorR);
  8923   004E3C  0E61               	movlw	low _motorL
  8924   004E3E  6E1A               	movwf	turnLeft45@mL^0,c
  8925   004E40  0E01               	movlw	high _motorL
  8926   004E42  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8927   004E44  0E58               	movlw	low _motorR
  8928   004E46  6E1C               	movwf	turnLeft45@mR^0,c
  8929   004E48  0E01               	movlw	high _motorR
  8930   004E4A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8931   004E4C  ECE4  F02E         	call	_turnLeft45	;wreg free
  8932                           
  8933                           ;dc_motor.c: 370:     turnLeft45(&motorL, &motorR);
  8934   004E50  0E61               	movlw	low _motorL
  8935   004E52  6E1A               	movwf	turnLeft45@mL^0,c
  8936   004E54  0E01               	movlw	high _motorL
  8937   004E56  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8938   004E58  0E58               	movlw	low _motorR
  8939   004E5A  6E1C               	movwf	turnLeft45@mR^0,c
  8940   004E5C  0E01               	movlw	high _motorR
  8941   004E5E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8942   004E60  ECE4  F02E         	call	_turnLeft45	;wreg free
  8943                           
  8944                           ;dc_motor.c: 371:     turnLeft45(&motorL, &motorR);
  8945   004E64  0E61               	movlw	low _motorL
  8946   004E66  6E1A               	movwf	turnLeft45@mL^0,c
  8947   004E68  0E01               	movlw	high _motorL
  8948   004E6A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8949   004E6C  0E58               	movlw	low _motorR
  8950   004E6E  6E1C               	movwf	turnLeft45@mR^0,c
  8951   004E70  0E01               	movlw	high _motorR
  8952   004E72  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8953   004E74  ECE4  F02E         	call	_turnLeft45	;wreg free
  8954                           
  8955                           ;dc_motor.c: 372:     turnLeft45(&motorL, &motorR);
  8956   004E78  0E61               	movlw	low _motorL
  8957   004E7A  6E1A               	movwf	turnLeft45@mL^0,c
  8958   004E7C  0E01               	movlw	high _motorL
  8959   004E7E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  8960   004E80  0E58               	movlw	low _motorR
  8961   004E82  6E1C               	movwf	turnLeft45@mR^0,c
  8962   004E84  0E01               	movlw	high _motorR
  8963   004E86  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  8964   004E88  ECE4  F02E         	call	_turnLeft45	;wreg free
  8965   004E8C  0012               	return		;funcret
  8966   004E8E                     __end_of_ReversePink:
  8967                           	callstack 0
  8968                           
  8969 ;; *************** function _ForwardOneBlock *****************
  8970 ;; Defined at:
  8971 ;;		line 246 in file "dc_motor.c"
  8972 ;; Parameters:    Size  Location     Type
  8973 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  8974 ;;		 -> motorL(9), 
  8975 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  8976 ;;		 -> motorR(9), 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  1    wreg      void 
  8981 ;; Registers used:
  8982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;Total ram usage:        6 bytes
  8993 ;; Hardware stack levels used: 1
  8994 ;; Hardware stack levels required when called: 4
  8995 ;; This function calls:
  8996 ;;		_fullSpeedAhead
  8997 ;;		_stop
  8998 ;; This function is called by:
  8999 ;;		_ReverseYellow
  9000 ;;		_ReversePink
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text40
  9005   0058A0                     __ptext40:
  9006                           	callstack 0
  9007   0058A0                     _ForwardOneBlock:
  9008                           	callstack 24
  9009   0058A0                     
  9010                           ;dc_motor.c: 247:     fullSpeedAhead(mL,mR);
  9011   0058A0  C01A  F014         	movff	ForwardOneBlock@mL,fullSpeedAhead@mL
  9012   0058A4  C01B  F015         	movff	ForwardOneBlock@mL+1,fullSpeedAhead@mL+1
  9013   0058A8  C01C  F016         	movff	ForwardOneBlock@mR,fullSpeedAhead@mR
  9014   0058AC  C01D  F017         	movff	ForwardOneBlock@mR+1,fullSpeedAhead@mR+1
  9015   0058B0  ECDE  F028         	call	_fullSpeedAhead	;wreg free
  9016   0058B4                     
  9017                           ;dc_motor.c: 248:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9018   0058B4  0E56               	movlw	86
  9019   0058B6  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9020   0058B8  0E3A               	movlw	58
  9021   0058BA  6E1E               	movwf	??_ForwardOneBlock^0,c
  9022   0058BC  0EF4               	movlw	244
  9023   0058BE                     u5947:
  9024   0058BE  2EE8               	decfsz	wreg,f,c
  9025   0058C0  D7FE               	bra	u5947
  9026   0058C2  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9027   0058C4  D7FC               	bra	u5947
  9028   0058C6  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9029   0058C8  D7FA               	bra	u5947
  9030   0058CA                     
  9031                           ;dc_motor.c: 249:     stop(&motorL, &motorR);
  9032   0058CA  0E61               	movlw	low _motorL
  9033   0058CC  6E14               	movwf	stop@mL^0,c
  9034   0058CE  0E01               	movlw	high _motorL
  9035   0058D0  6E15               	movwf	(stop@mL+1)^0,c
  9036   0058D2  0E58               	movlw	low _motorR
  9037   0058D4  6E16               	movwf	stop@mR^0,c
  9038   0058D6  0E01               	movlw	high _motorR
  9039   0058D8  6E17               	movwf	(stop@mR+1)^0,c
  9040   0058DA  EC71  F029         	call	_stop	;wreg free
  9041                           
  9042                           ;dc_motor.c: 250:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9043   0058DE  0E05               	movlw	5
  9044   0058E0  6E1F               	movwf	(??_ForwardOneBlock+1)^0,c
  9045   0058E2  0E0F               	movlw	15
  9046   0058E4  6E1E               	movwf	??_ForwardOneBlock^0,c
  9047   0058E6  0EF1               	movlw	241
  9048   0058E8                     u5957:
  9049   0058E8  2EE8               	decfsz	wreg,f,c
  9050   0058EA  D7FE               	bra	u5957
  9051   0058EC  2E1E               	decfsz	??_ForwardOneBlock^0,f,c
  9052   0058EE  D7FC               	bra	u5957
  9053   0058F0  2E1F               	decfsz	(??_ForwardOneBlock+1)^0,f,c
  9054   0058F2  D7FA               	bra	u5957
  9055   0058F4  F000               	nop	
  9056   0058F6  0012               	return		;funcret
  9057   0058F8                     __end_of_ForwardOneBlock:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _ReverseOrangeMove *****************
  9061 ;; Defined at:
  9062 ;;		line 375 in file "dc_motor.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9065 ;;		 -> motorL(9), 
  9066 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9067 ;;		 -> motorR(9), 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;		None
  9070 ;; Return value:  Size  Location     Type
  9071 ;;                  1    wreg      void 
  9072 ;; Registers used:
  9073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9074 ;; Tracked objects:
  9075 ;;		On entry : 0/0
  9076 ;;		On exit  : 0/0
  9077 ;;		Unchanged: 0/0
  9078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9079 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;Total ram usage:        4 bytes
  9084 ;; Hardware stack levels used: 1
  9085 ;; Hardware stack levels required when called: 5
  9086 ;; This function calls:
  9087 ;;		_reverseDetect
  9088 ;;		_turnLeft45
  9089 ;; This function is called by:
  9090 ;;		_go_Home
  9091 ;; This function uses a non-reentrant model
  9092 ;;
  9093                           
  9094                           	psect	text41
  9095   005A50                     __ptext41:
  9096                           	callstack 0
  9097   005A50                     _ReverseOrangeMove:
  9098                           	callstack 24
  9099   005A50                     
  9100                           ;dc_motor.c: 376:     reverseDetect(&motorL, &motorR);
  9101   005A50  0E61               	movlw	low _motorL
  9102   005A52  6E1A               	movwf	reverseDetect@mL^0,c
  9103   005A54  0E01               	movlw	high _motorL
  9104   005A56  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9105   005A58  0E58               	movlw	low _motorR
  9106   005A5A  6E1C               	movwf	reverseDetect@mR^0,c
  9107   005A5C  0E01               	movlw	high _motorR
  9108   005A5E  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9109   005A60  ECF6  F02B         	call	_reverseDetect	;wreg free
  9110                           
  9111                           ;dc_motor.c: 378:     turnLeft45(&motorL, &motorR);
  9112   005A64  0E61               	movlw	low _motorL
  9113   005A66  6E1A               	movwf	turnLeft45@mL^0,c
  9114   005A68  0E01               	movlw	high _motorL
  9115   005A6A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9116   005A6C  0E58               	movlw	low _motorR
  9117   005A6E  6E1C               	movwf	turnLeft45@mR^0,c
  9118   005A70  0E01               	movlw	high _motorR
  9119   005A72  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9120   005A74  ECE4  F02E         	call	_turnLeft45	;wreg free
  9121                           
  9122                           ;dc_motor.c: 379:     turnLeft45(&motorL, &motorR);
  9123   005A78  0E61               	movlw	low _motorL
  9124   005A7A  6E1A               	movwf	turnLeft45@mL^0,c
  9125   005A7C  0E01               	movlw	high _motorL
  9126   005A7E  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9127   005A80  0E58               	movlw	low _motorR
  9128   005A82  6E1C               	movwf	turnLeft45@mR^0,c
  9129   005A84  0E01               	movlw	high _motorR
  9130   005A86  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9131   005A88  ECE4  F02E         	call	_turnLeft45	;wreg free
  9132                           
  9133                           ;dc_motor.c: 380:     turnLeft45(&motorL, &motorR);
  9134   005A8C  0E61               	movlw	low _motorL
  9135   005A8E  6E1A               	movwf	turnLeft45@mL^0,c
  9136   005A90  0E01               	movlw	high _motorL
  9137   005A92  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9138   005A94  0E58               	movlw	low _motorR
  9139   005A96  6E1C               	movwf	turnLeft45@mR^0,c
  9140   005A98  0E01               	movlw	high _motorR
  9141   005A9A  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9142   005A9C  ECE4  F02E         	call	_turnLeft45	;wreg free
  9143   005AA0  0012               	return		;funcret
  9144   005AA2                     __end_of_ReverseOrangeMove:
  9145                           	callstack 0
  9146                           
  9147 ;; *************** function _ReverseLightBlueMove *****************
  9148 ;; Defined at:
  9149 ;;		line 384 in file "dc_motor.c"
  9150 ;; Parameters:    Size  Location     Type
  9151 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9152 ;;		 -> motorL(9), 
  9153 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9154 ;;		 -> motorR(9), 
  9155 ;; Auto vars:     Size  Location     Type
  9156 ;;		None
  9157 ;; Return value:  Size  Location     Type
  9158 ;;                  1    wreg      void 
  9159 ;; Registers used:
  9160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9161 ;; Tracked objects:
  9162 ;;		On entry : 0/0
  9163 ;;		On exit  : 0/0
  9164 ;;		Unchanged: 0/0
  9165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9170 ;;Total ram usage:        4 bytes
  9171 ;; Hardware stack levels used: 1
  9172 ;; Hardware stack levels required when called: 5
  9173 ;; This function calls:
  9174 ;;		_reverseDetect
  9175 ;;		_turnRight45
  9176 ;; This function is called by:
  9177 ;;		_go_Home
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text42
  9182   005AA2                     __ptext42:
  9183                           	callstack 0
  9184   005AA2                     _ReverseLightBlueMove:
  9185                           	callstack 24
  9186   005AA2                     
  9187                           ;dc_motor.c: 385:     reverseDetect(&motorL, &motorR);
  9188   005AA2  0E61               	movlw	low _motorL
  9189   005AA4  6E1A               	movwf	reverseDetect@mL^0,c
  9190   005AA6  0E01               	movlw	high _motorL
  9191   005AA8  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9192   005AAA  0E58               	movlw	low _motorR
  9193   005AAC  6E1C               	movwf	reverseDetect@mR^0,c
  9194   005AAE  0E01               	movlw	high _motorR
  9195   005AB0  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9196   005AB2  ECF6  F02B         	call	_reverseDetect	;wreg free
  9197                           
  9198                           ;dc_motor.c: 387:     turnRight45(&motorL, &motorR);
  9199   005AB6  0E61               	movlw	low _motorL
  9200   005AB8  6E1A               	movwf	turnRight45@mL^0,c
  9201   005ABA  0E01               	movlw	high _motorL
  9202   005ABC  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9203   005ABE  0E58               	movlw	low _motorR
  9204   005AC0  6E1C               	movwf	turnRight45@mR^0,c
  9205   005AC2  0E01               	movlw	high _motorR
  9206   005AC4  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9207   005AC6  ECBD  F02E         	call	_turnRight45	;wreg free
  9208                           
  9209                           ;dc_motor.c: 388:     turnRight45(&motorL, &motorR);
  9210   005ACA  0E61               	movlw	low _motorL
  9211   005ACC  6E1A               	movwf	turnRight45@mL^0,c
  9212   005ACE  0E01               	movlw	high _motorL
  9213   005AD0  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9214   005AD2  0E58               	movlw	low _motorR
  9215   005AD4  6E1C               	movwf	turnRight45@mR^0,c
  9216   005AD6  0E01               	movlw	high _motorR
  9217   005AD8  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9218   005ADA  ECBD  F02E         	call	_turnRight45	;wreg free
  9219                           
  9220                           ;dc_motor.c: 389:     turnRight45(&motorL, &motorR);
  9221   005ADE  0E61               	movlw	low _motorL
  9222   005AE0  6E1A               	movwf	turnRight45@mL^0,c
  9223   005AE2  0E01               	movlw	high _motorL
  9224   005AE4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9225   005AE6  0E58               	movlw	low _motorR
  9226   005AE8  6E1C               	movwf	turnRight45@mR^0,c
  9227   005AEA  0E01               	movlw	high _motorR
  9228   005AEC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9229   005AEE  ECBD  F02E         	call	_turnRight45	;wreg free
  9230   005AF2  0012               	return		;funcret
  9231   005AF4                     __end_of_ReverseLightBlueMove:
  9232                           	callstack 0
  9233                           
  9234 ;; *************** function _RedMove *****************
  9235 ;; Defined at:
  9236 ;;		line 276 in file "dc_motor.c"
  9237 ;; Parameters:    Size  Location     Type
  9238 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9239 ;;		 -> motorL(9), 
  9240 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9241 ;;		 -> motorR(9), 
  9242 ;; Auto vars:     Size  Location     Type
  9243 ;;		None
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  1    wreg      void 
  9246 ;; Registers used:
  9247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9256 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9257 ;;Total ram usage:        4 bytes
  9258 ;; Hardware stack levels used: 1
  9259 ;; Hardware stack levels required when called: 5
  9260 ;; This function calls:
  9261 ;;		_reverseDetect
  9262 ;;		_turnRight45
  9263 ;; This function is called by:
  9264 ;;		_go_Home
  9265 ;;		_colour_move
  9266 ;; This function uses a non-reentrant model
  9267 ;;
  9268                           
  9269                           	psect	text43
  9270   005F66                     __ptext43:
  9271                           	callstack 0
  9272   005F66                     _RedMove:
  9273                           	callstack 24
  9274   005F66                     
  9275                           ;dc_motor.c: 277:     reverseDetect(&motorL, &motorR);
  9276   005F66  0E61               	movlw	low _motorL
  9277   005F68  6E1A               	movwf	reverseDetect@mL^0,c
  9278   005F6A  0E01               	movlw	high _motorL
  9279   005F6C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9280   005F6E  0E58               	movlw	low _motorR
  9281   005F70  6E1C               	movwf	reverseDetect@mR^0,c
  9282   005F72  0E01               	movlw	high _motorR
  9283   005F74  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9284   005F76  ECF6  F02B         	call	_reverseDetect	;wreg free
  9285                           
  9286                           ;dc_motor.c: 279:     turnRight45(&motorL, &motorR);
  9287   005F7A  0E61               	movlw	low _motorL
  9288   005F7C  6E1A               	movwf	turnRight45@mL^0,c
  9289   005F7E  0E01               	movlw	high _motorL
  9290   005F80  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9291   005F82  0E58               	movlw	low _motorR
  9292   005F84  6E1C               	movwf	turnRight45@mR^0,c
  9293   005F86  0E01               	movlw	high _motorR
  9294   005F88  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9295   005F8A  ECBD  F02E         	call	_turnRight45	;wreg free
  9296                           
  9297                           ;dc_motor.c: 280:     turnRight45(&motorL, &motorR);
  9298   005F8E  0E61               	movlw	low _motorL
  9299   005F90  6E1A               	movwf	turnRight45@mL^0,c
  9300   005F92  0E01               	movlw	high _motorL
  9301   005F94  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9302   005F96  0E58               	movlw	low _motorR
  9303   005F98  6E1C               	movwf	turnRight45@mR^0,c
  9304   005F9A  0E01               	movlw	high _motorR
  9305   005F9C  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9306   005F9E  ECBD  F02E         	call	_turnRight45	;wreg free
  9307   005FA2  0012               	return		;funcret
  9308   005FA4                     __end_of_RedMove:
  9309                           	callstack 0
  9310                           
  9311 ;; *************** function _GreenMove *****************
  9312 ;; Defined at:
  9313 ;;		line 284 in file "dc_motor.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9316 ;;		 -> motorL(9), 
  9317 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9318 ;;		 -> motorR(9), 
  9319 ;; Auto vars:     Size  Location     Type
  9320 ;;		None
  9321 ;; Return value:  Size  Location     Type
  9322 ;;                  1    wreg      void 
  9323 ;; Registers used:
  9324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9325 ;; Tracked objects:
  9326 ;;		On entry : 0/0
  9327 ;;		On exit  : 0/0
  9328 ;;		Unchanged: 0/0
  9329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9334 ;;Total ram usage:        4 bytes
  9335 ;; Hardware stack levels used: 1
  9336 ;; Hardware stack levels required when called: 5
  9337 ;; This function calls:
  9338 ;;		_reverseDetect
  9339 ;;		_turnLeft45
  9340 ;; This function is called by:
  9341 ;;		_go_Home
  9342 ;;		_colour_move
  9343 ;; This function uses a non-reentrant model
  9344 ;;
  9345                           
  9346                           	psect	text44
  9347   005FA4                     __ptext44:
  9348                           	callstack 0
  9349   005FA4                     _GreenMove:
  9350                           	callstack 24
  9351   005FA4                     
  9352                           ;dc_motor.c: 285:     reverseDetect(&motorL, &motorR);
  9353   005FA4  0E61               	movlw	low _motorL
  9354   005FA6  6E1A               	movwf	reverseDetect@mL^0,c
  9355   005FA8  0E01               	movlw	high _motorL
  9356   005FAA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9357   005FAC  0E58               	movlw	low _motorR
  9358   005FAE  6E1C               	movwf	reverseDetect@mR^0,c
  9359   005FB0  0E01               	movlw	high _motorR
  9360   005FB2  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9361   005FB4  ECF6  F02B         	call	_reverseDetect	;wreg free
  9362                           
  9363                           ;dc_motor.c: 287:     turnLeft45(&motorL, &motorR);
  9364   005FB8  0E61               	movlw	low _motorL
  9365   005FBA  6E1A               	movwf	turnLeft45@mL^0,c
  9366   005FBC  0E01               	movlw	high _motorL
  9367   005FBE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9368   005FC0  0E58               	movlw	low _motorR
  9369   005FC2  6E1C               	movwf	turnLeft45@mR^0,c
  9370   005FC4  0E01               	movlw	high _motorR
  9371   005FC6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9372   005FC8  ECE4  F02E         	call	_turnLeft45	;wreg free
  9373                           
  9374                           ;dc_motor.c: 288:     turnLeft45(&motorL, &motorR);
  9375   005FCC  0E61               	movlw	low _motorL
  9376   005FCE  6E1A               	movwf	turnLeft45@mL^0,c
  9377   005FD0  0E01               	movlw	high _motorL
  9378   005FD2  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9379   005FD4  0E58               	movlw	low _motorR
  9380   005FD6  6E1C               	movwf	turnLeft45@mR^0,c
  9381   005FD8  0E01               	movlw	high _motorR
  9382   005FDA  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9383   005FDC  ECE4  F02E         	call	_turnLeft45	;wreg free
  9384   005FE0  0012               	return		;funcret
  9385   005FE2                     __end_of_GreenMove:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _BlueMove *****************
  9389 ;; Defined at:
  9390 ;;		line 292 in file "dc_motor.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9393 ;;		 -> motorL(9), 
  9394 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9395 ;;		 -> motorR(9), 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9411 ;;Total ram usage:        4 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; Hardware stack levels required when called: 5
  9414 ;; This function calls:
  9415 ;;		_Backhalfblock
  9416 ;;		_reverseDetect
  9417 ;;		_turnRight45
  9418 ;; This function is called by:
  9419 ;;		_go_Home
  9420 ;;		_colour_move
  9421 ;; This function uses a non-reentrant model
  9422 ;;
  9423                           
  9424                           	psect	text45
  9425   0053DA                     __ptext45:
  9426                           	callstack 0
  9427   0053DA                     _BlueMove:
  9428                           	callstack 24
  9429   0053DA                     
  9430                           ;dc_motor.c: 293:     reverseDetect(&motorL, &motorR);
  9431   0053DA  0E61               	movlw	low _motorL
  9432   0053DC  6E1A               	movwf	reverseDetect@mL^0,c
  9433   0053DE  0E01               	movlw	high _motorL
  9434   0053E0  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9435   0053E2  0E58               	movlw	low _motorR
  9436   0053E4  6E1C               	movwf	reverseDetect@mR^0,c
  9437   0053E6  0E01               	movlw	high _motorR
  9438   0053E8  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9439   0053EA  ECF6  F02B         	call	_reverseDetect	;wreg free
  9440                           
  9441                           ;dc_motor.c: 295:     turnRight45(&motorL, &motorR);
  9442   0053EE  0E61               	movlw	low _motorL
  9443   0053F0  6E1A               	movwf	turnRight45@mL^0,c
  9444   0053F2  0E01               	movlw	high _motorL
  9445   0053F4  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9446   0053F6  0E58               	movlw	low _motorR
  9447   0053F8  6E1C               	movwf	turnRight45@mR^0,c
  9448   0053FA  0E01               	movlw	high _motorR
  9449   0053FC  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9450   0053FE  ECBD  F02E         	call	_turnRight45	;wreg free
  9451                           
  9452                           ;dc_motor.c: 296:     turnRight45(&motorL, &motorR);
  9453   005402  0E61               	movlw	low _motorL
  9454   005404  6E1A               	movwf	turnRight45@mL^0,c
  9455   005406  0E01               	movlw	high _motorL
  9456   005408  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9457   00540A  0E58               	movlw	low _motorR
  9458   00540C  6E1C               	movwf	turnRight45@mR^0,c
  9459   00540E  0E01               	movlw	high _motorR
  9460   005410  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9461   005412  ECBD  F02E         	call	_turnRight45	;wreg free
  9462                           
  9463                           ;dc_motor.c: 297:     turnRight45(&motorL, &motorR);
  9464   005416  0E61               	movlw	low _motorL
  9465   005418  6E1A               	movwf	turnRight45@mL^0,c
  9466   00541A  0E01               	movlw	high _motorL
  9467   00541C  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9468   00541E  0E58               	movlw	low _motorR
  9469   005420  6E1C               	movwf	turnRight45@mR^0,c
  9470   005422  0E01               	movlw	high _motorR
  9471   005424  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9472   005426  ECBD  F02E         	call	_turnRight45	;wreg free
  9473                           
  9474                           ;dc_motor.c: 298:     turnRight45(&motorL, &motorR);
  9475   00542A  0E61               	movlw	low _motorL
  9476   00542C  6E1A               	movwf	turnRight45@mL^0,c
  9477   00542E  0E01               	movlw	high _motorL
  9478   005430  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9479   005432  0E58               	movlw	low _motorR
  9480   005434  6E1C               	movwf	turnRight45@mR^0,c
  9481   005436  0E01               	movlw	high _motorR
  9482   005438  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9483   00543A  ECBD  F02E         	call	_turnRight45	;wreg free
  9484                           
  9485                           ;dc_motor.c: 301:     Backhalfblock(&motorL, &motorR);
  9486   00543E  0E61               	movlw	low _motorL
  9487   005440  6E1A               	movwf	Backhalfblock@mL^0,c
  9488   005442  0E01               	movlw	high _motorL
  9489   005444  6E1B               	movwf	(Backhalfblock@mL+1)^0,c
  9490   005446  0E58               	movlw	low _motorR
  9491   005448  6E1C               	movwf	Backhalfblock@mR^0,c
  9492   00544A  0E01               	movlw	high _motorR
  9493   00544C  6E1D               	movwf	(Backhalfblock@mR+1)^0,c
  9494   00544E  ECC9  F02B         	call	_Backhalfblock	;wreg free
  9495   005452  0012               	return		;funcret
  9496   005454                     __end_of_BlueMove:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _Backhalfblock *****************
  9500 ;; Defined at:
  9501 ;;		line 265 in file "dc_motor.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9504 ;;		 -> motorL(9), 
  9505 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9506 ;;		 -> motorR(9), 
  9507 ;; Auto vars:     Size  Location     Type
  9508 ;;		None
  9509 ;; Return value:  Size  Location     Type
  9510 ;;                  1    wreg      void 
  9511 ;; Registers used:
  9512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9513 ;; Tracked objects:
  9514 ;;		On entry : 0/0
  9515 ;;		On exit  : 0/0
  9516 ;;		Unchanged: 0/0
  9517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9522 ;;Total ram usage:        6 bytes
  9523 ;; Hardware stack levels used: 1
  9524 ;; Hardware stack levels required when called: 4
  9525 ;; This function calls:
  9526 ;;		_fullSpeedBack
  9527 ;;		_stop
  9528 ;; This function is called by:
  9529 ;;		_BlueMove
  9530 ;;		_go_Home
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text46
  9535   005792                     __ptext46:
  9536                           	callstack 0
  9537   005792                     _Backhalfblock:
  9538                           	callstack 24
  9539   005792                     
  9540                           ;dc_motor.c: 266:     fullSpeedBack(mL,mR);
  9541   005792  C01A  F014         	movff	Backhalfblock@mL,fullSpeedBack@mL
  9542   005796  C01B  F015         	movff	Backhalfblock@mL+1,fullSpeedBack@mL+1
  9543   00579A  C01C  F016         	movff	Backhalfblock@mR,fullSpeedBack@mR
  9544   00579E  C01D  F017         	movff	Backhalfblock@mR+1,fullSpeedBack@mR+1
  9545   0057A2  EC8F  F028         	call	_fullSpeedBack	;wreg free
  9546   0057A6                     
  9547                           ;dc_motor.c: 267:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
  9548   0057A6  0E2B               	movlw	43
  9549   0057A8  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9550   0057AA  0E9D               	movlw	157
  9551   0057AC  6E1E               	movwf	??_Backhalfblock^0,c
  9552   0057AE  0EF9               	movlw	249
  9553   0057B0                     u5967:
  9554   0057B0  2EE8               	decfsz	wreg,f,c
  9555   0057B2  D7FE               	bra	u5967
  9556   0057B4  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9557   0057B6  D7FC               	bra	u5967
  9558   0057B8  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9559   0057BA  D7FA               	bra	u5967
  9560   0057BC  F000               	nop	
  9561   0057BE                     
  9562                           ;dc_motor.c: 268:     stop(&motorL, &motorR);
  9563   0057BE  0E61               	movlw	low _motorL
  9564   0057C0  6E14               	movwf	stop@mL^0,c
  9565   0057C2  0E01               	movlw	high _motorL
  9566   0057C4  6E15               	movwf	(stop@mL+1)^0,c
  9567   0057C6  0E58               	movlw	low _motorR
  9568   0057C8  6E16               	movwf	stop@mR^0,c
  9569   0057CA  0E01               	movlw	high _motorR
  9570   0057CC  6E17               	movwf	(stop@mR+1)^0,c
  9571   0057CE  EC71  F029         	call	_stop	;wreg free
  9572                           
  9573                           ;dc_motor.c: 269:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9574   0057D2  0E05               	movlw	5
  9575   0057D4  6E1F               	movwf	(??_Backhalfblock+1)^0,c
  9576   0057D6  0E0F               	movlw	15
  9577   0057D8  6E1E               	movwf	??_Backhalfblock^0,c
  9578   0057DA  0EF1               	movlw	241
  9579   0057DC                     u5977:
  9580   0057DC  2EE8               	decfsz	wreg,f,c
  9581   0057DE  D7FE               	bra	u5977
  9582   0057E0  2E1E               	decfsz	??_Backhalfblock^0,f,c
  9583   0057E2  D7FC               	bra	u5977
  9584   0057E4  2E1F               	decfsz	(??_Backhalfblock+1)^0,f,c
  9585   0057E6  D7FA               	bra	u5977
  9586   0057E8  F000               	nop	
  9587   0057EA  0012               	return		;funcret
  9588   0057EC                     __end_of_Backhalfblock:
  9589                           	callstack 0
  9590                           
  9591 ;; *************** function _YellowMove *****************
  9592 ;; Defined at:
  9593 ;;		line 305 in file "dc_motor.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9596 ;;		 -> motorL(9), 
  9597 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9598 ;;		 -> motorR(9), 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;		None
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9614 ;;Total ram usage:        4 bytes
  9615 ;; Hardware stack levels used: 1
  9616 ;; Hardware stack levels required when called: 5
  9617 ;; This function calls:
  9618 ;;		_reverseDetect
  9619 ;;		_reverseOneBlock
  9620 ;;		_turnRight45
  9621 ;; This function is called by:
  9622 ;;		_colour_move
  9623 ;; This function uses a non-reentrant model
  9624 ;;
  9625                           
  9626                           	psect	text47
  9627   005AF4                     __ptext47:
  9628                           	callstack 0
  9629   005AF4                     _YellowMove:
  9630                           	callstack 24
  9631   005AF4                     
  9632                           ;dc_motor.c: 306:     reverseDetect(&motorL, &motorR);
  9633   005AF4  0E61               	movlw	low _motorL
  9634   005AF6  6E1A               	movwf	reverseDetect@mL^0,c
  9635   005AF8  0E01               	movlw	high _motorL
  9636   005AFA  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9637   005AFC  0E58               	movlw	low _motorR
  9638   005AFE  6E1C               	movwf	reverseDetect@mR^0,c
  9639   005B00  0E01               	movlw	high _motorR
  9640   005B02  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9641   005B04  ECF6  F02B         	call	_reverseDetect	;wreg free
  9642                           
  9643                           ;dc_motor.c: 308:     reverseOneBlock(&motorL, &motorR);
  9644   005B08  0E61               	movlw	low _motorL
  9645   005B0A  6E1A               	movwf	reverseOneBlock@mL^0,c
  9646   005B0C  0E01               	movlw	high _motorL
  9647   005B0E  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9648   005B10  0E58               	movlw	low _motorR
  9649   005B12  6E1C               	movwf	reverseOneBlock@mR^0,c
  9650   005B14  0E01               	movlw	high _motorR
  9651   005B16  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9652   005B18  EC7C  F02C         	call	_reverseOneBlock	;wreg free
  9653                           
  9654                           ;dc_motor.c: 310:     turnRight45(&motorL, &motorR);
  9655   005B1C  0E61               	movlw	low _motorL
  9656   005B1E  6E1A               	movwf	turnRight45@mL^0,c
  9657   005B20  0E01               	movlw	high _motorL
  9658   005B22  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9659   005B24  0E58               	movlw	low _motorR
  9660   005B26  6E1C               	movwf	turnRight45@mR^0,c
  9661   005B28  0E01               	movlw	high _motorR
  9662   005B2A  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9663   005B2C  ECBD  F02E         	call	_turnRight45	;wreg free
  9664                           
  9665                           ;dc_motor.c: 311:     turnRight45(&motorL, &motorR);
  9666   005B30  0E61               	movlw	low _motorL
  9667   005B32  6E1A               	movwf	turnRight45@mL^0,c
  9668   005B34  0E01               	movlw	high _motorL
  9669   005B36  6E1B               	movwf	(turnRight45@mL+1)^0,c
  9670   005B38  0E58               	movlw	low _motorR
  9671   005B3A  6E1C               	movwf	turnRight45@mR^0,c
  9672   005B3C  0E01               	movlw	high _motorR
  9673   005B3E  6E1D               	movwf	(turnRight45@mR+1)^0,c
  9674   005B40  ECBD  F02E         	call	_turnRight45	;wreg free
  9675   005B44  0012               	return		;funcret
  9676   005B46                     __end_of_YellowMove:
  9677                           	callstack 0
  9678                           
  9679 ;; *************** function _RetryMove *****************
  9680 ;; Defined at:
  9681 ;;		line 344 in file "dc_motor.c"
  9682 ;; Parameters:    Size  Location     Type
  9683 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9684 ;;		 -> motorL(9), 
  9685 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9686 ;;		 -> motorR(9), 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      void 
  9691 ;; Registers used:
  9692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9701 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9702 ;;Total ram usage:        6 bytes
  9703 ;; Hardware stack levels used: 1
  9704 ;; Hardware stack levels required when called: 5
  9705 ;; This function calls:
  9706 ;;		_fullSpeedAhead
  9707 ;;		_reverseDetect
  9708 ;;		_stop
  9709 ;; This function is called by:
  9710 ;;		_colour_move
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text48
  9715   005536                     __ptext48:
  9716                           	callstack 0
  9717   005536                     _RetryMove:
  9718                           	callstack 24
  9719   005536                     
  9720                           ;dc_motor.c: 345:     reverseDetect(&motorL, &motorR);
  9721   005536  0E61               	movlw	low _motorL
  9722   005538  6E1A               	movwf	reverseDetect@mL^0,c
  9723   00553A  0E01               	movlw	high _motorL
  9724   00553C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9725   00553E  0E58               	movlw	low _motorR
  9726   005540  6E1C               	movwf	reverseDetect@mR^0,c
  9727   005542  0E01               	movlw	high _motorR
  9728   005544  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9729   005546  ECF6  F02B         	call	_reverseDetect	;wreg free
  9730                           
  9731                           ;dc_motor.c: 346:     stop(&motorL, &motorR);
  9732   00554A  0E61               	movlw	low _motorL
  9733   00554C  6E14               	movwf	stop@mL^0,c
  9734   00554E  0E01               	movlw	high _motorL
  9735   005550  6E15               	movwf	(stop@mL+1)^0,c
  9736   005552  0E58               	movlw	low _motorR
  9737   005554  6E16               	movwf	stop@mR^0,c
  9738   005556  0E01               	movlw	high _motorR
  9739   005558  6E17               	movwf	(stop@mR+1)^0,c
  9740   00555A  EC71  F029         	call	_stop	;wreg free
  9741                           
  9742                           ;dc_motor.c: 347:     fullSpeedAhead(mL,mR);
  9743   00555E  C020  F014         	movff	RetryMove@mL,fullSpeedAhead@mL
  9744   005562  C021  F015         	movff	RetryMove@mL+1,fullSpeedAhead@mL+1
  9745   005566  C022  F016         	movff	RetryMove@mR,fullSpeedAhead@mR
  9746   00556A  C023  F017         	movff	RetryMove@mR+1,fullSpeedAhead@mR+1
  9747   00556E  ECDE  F028         	call	_fullSpeedAhead	;wreg free
  9748   005572                     
  9749                           ;dc_motor.c: 348:     _delay((unsigned long)((500)*(64000000/4000.0)));
  9750   005572  0E29               	movlw	41
  9751   005574  6E25               	movwf	(??_RetryMove+1)^0,c
  9752   005576  0E96               	movlw	150
  9753   005578  6E24               	movwf	??_RetryMove^0,c
  9754   00557A  0E7F               	movlw	127
  9755   00557C                     u5987:
  9756   00557C  2EE8               	decfsz	wreg,f,c
  9757   00557E  D7FE               	bra	u5987
  9758   005580  2E24               	decfsz	??_RetryMove^0,f,c
  9759   005582  D7FC               	bra	u5987
  9760   005584  2E25               	decfsz	(??_RetryMove+1)^0,f,c
  9761   005586  D7FA               	bra	u5987
  9762   005588  F000               	nop	
  9763   00558A                     
  9764                           ;dc_motor.c: 349:     stop(&motorL, &motorR);
  9765   00558A  0E61               	movlw	low _motorL
  9766   00558C  6E14               	movwf	stop@mL^0,c
  9767   00558E  0E01               	movlw	high _motorL
  9768   005590  6E15               	movwf	(stop@mL+1)^0,c
  9769   005592  0E58               	movlw	low _motorR
  9770   005594  6E16               	movwf	stop@mR^0,c
  9771   005596  0E01               	movlw	high _motorR
  9772   005598  6E17               	movwf	(stop@mR+1)^0,c
  9773   00559A  EC71  F029         	call	_stop	;wreg free
  9774   00559E  0012               	return		;funcret
  9775   0055A0                     __end_of_RetryMove:
  9776                           	callstack 0
  9777                           
  9778 ;; *************** function _PinkMove *****************
  9779 ;; Defined at:
  9780 ;;		line 315 in file "dc_motor.c"
  9781 ;; Parameters:    Size  Location     Type
  9782 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9783 ;;		 -> motorL(9), 
  9784 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9785 ;;		 -> motorR(9), 
  9786 ;; Auto vars:     Size  Location     Type
  9787 ;;		None
  9788 ;; Return value:  Size  Location     Type
  9789 ;;                  1    wreg      void 
  9790 ;; Registers used:
  9791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9792 ;; Tracked objects:
  9793 ;;		On entry : 0/0
  9794 ;;		On exit  : 0/0
  9795 ;;		Unchanged: 0/0
  9796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9800 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9801 ;;Total ram usage:        4 bytes
  9802 ;; Hardware stack levels used: 1
  9803 ;; Hardware stack levels required when called: 5
  9804 ;; This function calls:
  9805 ;;		_reverseDetect
  9806 ;;		_reverseOneBlock
  9807 ;;		_turnLeft45
  9808 ;; This function is called by:
  9809 ;;		_colour_move
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           	psect	text49
  9814   005B46                     __ptext49:
  9815                           	callstack 0
  9816   005B46                     _PinkMove:
  9817                           	callstack 24
  9818   005B46                     
  9819                           ;dc_motor.c: 316:     reverseDetect(&motorL, &motorR);
  9820   005B46  0E61               	movlw	low _motorL
  9821   005B48  6E1A               	movwf	reverseDetect@mL^0,c
  9822   005B4A  0E01               	movlw	high _motorL
  9823   005B4C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
  9824   005B4E  0E58               	movlw	low _motorR
  9825   005B50  6E1C               	movwf	reverseDetect@mR^0,c
  9826   005B52  0E01               	movlw	high _motorR
  9827   005B54  6E1D               	movwf	(reverseDetect@mR+1)^0,c
  9828   005B56  ECF6  F02B         	call	_reverseDetect	;wreg free
  9829                           
  9830                           ;dc_motor.c: 318:     reverseOneBlock(&motorL, &motorR);
  9831   005B5A  0E61               	movlw	low _motorL
  9832   005B5C  6E1A               	movwf	reverseOneBlock@mL^0,c
  9833   005B5E  0E01               	movlw	high _motorL
  9834   005B60  6E1B               	movwf	(reverseOneBlock@mL+1)^0,c
  9835   005B62  0E58               	movlw	low _motorR
  9836   005B64  6E1C               	movwf	reverseOneBlock@mR^0,c
  9837   005B66  0E01               	movlw	high _motorR
  9838   005B68  6E1D               	movwf	(reverseOneBlock@mR+1)^0,c
  9839   005B6A  EC7C  F02C         	call	_reverseOneBlock	;wreg free
  9840                           
  9841                           ;dc_motor.c: 320:     turnLeft45(&motorL, &motorR);
  9842   005B6E  0E61               	movlw	low _motorL
  9843   005B70  6E1A               	movwf	turnLeft45@mL^0,c
  9844   005B72  0E01               	movlw	high _motorL
  9845   005B74  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9846   005B76  0E58               	movlw	low _motorR
  9847   005B78  6E1C               	movwf	turnLeft45@mR^0,c
  9848   005B7A  0E01               	movlw	high _motorR
  9849   005B7C  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9850   005B7E  ECE4  F02E         	call	_turnLeft45	;wreg free
  9851                           
  9852                           ;dc_motor.c: 321:     turnLeft45(&motorL, &motorR);
  9853   005B82  0E61               	movlw	low _motorL
  9854   005B84  6E1A               	movwf	turnLeft45@mL^0,c
  9855   005B86  0E01               	movlw	high _motorL
  9856   005B88  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  9857   005B8A  0E58               	movlw	low _motorR
  9858   005B8C  6E1C               	movwf	turnLeft45@mR^0,c
  9859   005B8E  0E01               	movlw	high _motorR
  9860   005B90  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  9861   005B92  ECE4  F02E         	call	_turnLeft45	;wreg free
  9862   005B96  0012               	return		;funcret
  9863   005B98                     __end_of_PinkMove:
  9864                           	callstack 0
  9865                           
  9866 ;; *************** function _reverseOneBlock *****************
  9867 ;; Defined at:
  9868 ;;		line 240 in file "dc_motor.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  9871 ;;		 -> motorL(9), 
  9872 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  9873 ;;		 -> motorR(9), 
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9888 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9889 ;;Total ram usage:        6 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 4
  9892 ;; This function calls:
  9893 ;;		_fullSpeedBack
  9894 ;;		_stop
  9895 ;; This function is called by:
  9896 ;;		_YellowMove
  9897 ;;		_PinkMove
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text50
  9902   0058F8                     __ptext50:
  9903                           	callstack 0
  9904   0058F8                     _reverseOneBlock:
  9905                           	callstack 24
  9906   0058F8                     
  9907                           ;dc_motor.c: 241:     fullSpeedBack(mL,mR);
  9908   0058F8  C01A  F014         	movff	reverseOneBlock@mL,fullSpeedBack@mL
  9909   0058FC  C01B  F015         	movff	reverseOneBlock@mL+1,fullSpeedBack@mL+1
  9910   005900  C01C  F016         	movff	reverseOneBlock@mR,fullSpeedBack@mR
  9911   005904  C01D  F017         	movff	reverseOneBlock@mR+1,fullSpeedBack@mR+1
  9912   005908  EC8F  F028         	call	_fullSpeedBack	;wreg free
  9913   00590C                     
  9914                           ;dc_motor.c: 242:     _delay((unsigned long)((RunOneBlockTime)*(64000000/4000.0)));
  9915   00590C  0E56               	movlw	86
  9916   00590E  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9917   005910  0E3A               	movlw	58
  9918   005912  6E1E               	movwf	??_reverseOneBlock^0,c
  9919   005914  0EF4               	movlw	244
  9920   005916                     u5997:
  9921   005916  2EE8               	decfsz	wreg,f,c
  9922   005918  D7FE               	bra	u5997
  9923   00591A  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9924   00591C  D7FC               	bra	u5997
  9925   00591E  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9926   005920  D7FA               	bra	u5997
  9927   005922                     
  9928                           ;dc_motor.c: 243:     stop(&motorL, &motorR);
  9929   005922  0E61               	movlw	low _motorL
  9930   005924  6E14               	movwf	stop@mL^0,c
  9931   005926  0E01               	movlw	high _motorL
  9932   005928  6E15               	movwf	(stop@mL+1)^0,c
  9933   00592A  0E58               	movlw	low _motorR
  9934   00592C  6E16               	movwf	stop@mR^0,c
  9935   00592E  0E01               	movlw	high _motorR
  9936   005930  6E17               	movwf	(stop@mR+1)^0,c
  9937   005932  EC71  F029         	call	_stop	;wreg free
  9938                           
  9939                           ;dc_motor.c: 244:     _delay((unsigned long)((50)*(64000000/4000.0)));
  9940   005936  0E05               	movlw	5
  9941   005938  6E1F               	movwf	(??_reverseOneBlock+1)^0,c
  9942   00593A  0E0F               	movlw	15
  9943   00593C  6E1E               	movwf	??_reverseOneBlock^0,c
  9944   00593E  0EF1               	movlw	241
  9945   005940                     u6007:
  9946   005940  2EE8               	decfsz	wreg,f,c
  9947   005942  D7FE               	bra	u6007
  9948   005944  2E1E               	decfsz	??_reverseOneBlock^0,f,c
  9949   005946  D7FC               	bra	u6007
  9950   005948  2E1F               	decfsz	(??_reverseOneBlock+1)^0,f,c
  9951   00594A  D7FA               	bra	u6007
  9952   00594C  F000               	nop	
  9953   00594E  0012               	return		;funcret
  9954   005950                     __end_of_reverseOneBlock:
  9955                           	callstack 0
  9956                           
  9957 ;; *************** function _OrangeMove *****************
  9958 ;; Defined at:
  9959 ;;		line 325 in file "dc_motor.c"
  9960 ;; Parameters:    Size  Location     Type
  9961 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  9962 ;;		 -> motorL(9), 
  9963 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  9964 ;;		 -> motorR(9), 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  1    wreg      void 
  9969 ;; Registers used:
  9970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9979 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9980 ;;Total ram usage:        4 bytes
  9981 ;; Hardware stack levels used: 1
  9982 ;; Hardware stack levels required when called: 5
  9983 ;; This function calls:
  9984 ;;		_quaterForward
  9985 ;;		_reverseDetect
  9986 ;;		_turnRight45
  9987 ;; This function is called by:
  9988 ;;		_colour_move
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           	psect	text51
  9993   005606                     __ptext51:
  9994                           	callstack 0
  9995   005606                     _OrangeMove:
  9996                           	callstack 24
  9997   005606                     
  9998                           ;dc_motor.c: 326:     reverseDetect(&motorL, &motorR);
  9999   005606  0E61               	movlw	low _motorL
 10000   005608  6E1A               	movwf	reverseDetect@mL^0,c
 10001   00560A  0E01               	movlw	high _motorL
 10002   00560C  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10003   00560E  0E58               	movlw	low _motorR
 10004   005610  6E1C               	movwf	reverseDetect@mR^0,c
 10005   005612  0E01               	movlw	high _motorR
 10006   005614  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10007   005616  ECF6  F02B         	call	_reverseDetect	;wreg free
 10008                           
 10009                           ;dc_motor.c: 328:     turnRight45(&motorL, &motorR);
 10010   00561A  0E61               	movlw	low _motorL
 10011   00561C  6E1A               	movwf	turnRight45@mL^0,c
 10012   00561E  0E01               	movlw	high _motorL
 10013   005620  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10014   005622  0E58               	movlw	low _motorR
 10015   005624  6E1C               	movwf	turnRight45@mR^0,c
 10016   005626  0E01               	movlw	high _motorR
 10017   005628  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10018   00562A  ECBD  F02E         	call	_turnRight45	;wreg free
 10019                           
 10020                           ;dc_motor.c: 329:     turnRight45(&motorL, &motorR);
 10021   00562E  0E61               	movlw	low _motorL
 10022   005630  6E1A               	movwf	turnRight45@mL^0,c
 10023   005632  0E01               	movlw	high _motorL
 10024   005634  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10025   005636  0E58               	movlw	low _motorR
 10026   005638  6E1C               	movwf	turnRight45@mR^0,c
 10027   00563A  0E01               	movlw	high _motorR
 10028   00563C  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10029   00563E  ECBD  F02E         	call	_turnRight45	;wreg free
 10030                           
 10031                           ;dc_motor.c: 330:     turnRight45(&motorL, &motorR);
 10032   005642  0E61               	movlw	low _motorL
 10033   005644  6E1A               	movwf	turnRight45@mL^0,c
 10034   005646  0E01               	movlw	high _motorL
 10035   005648  6E1B               	movwf	(turnRight45@mL+1)^0,c
 10036   00564A  0E58               	movlw	low _motorR
 10037   00564C  6E1C               	movwf	turnRight45@mR^0,c
 10038   00564E  0E01               	movlw	high _motorR
 10039   005650  6E1D               	movwf	(turnRight45@mR+1)^0,c
 10040   005652  ECBD  F02E         	call	_turnRight45	;wreg free
 10041                           
 10042                           ;dc_motor.c: 331:     quaterForward(&motorL, &motorR);
 10043   005656  0E61               	movlw	low _motorL
 10044   005658  6E1A               	movwf	quaterForward@mL^0,c
 10045   00565A  0E01               	movlw	high _motorL
 10046   00565C  6E1B               	movwf	(quaterForward@mL+1)^0,c
 10047   00565E  0E58               	movlw	low _motorR
 10048   005660  6E1C               	movwf	quaterForward@mR^0,c
 10049   005662  0E01               	movlw	high _motorR
 10050   005664  6E1D               	movwf	(quaterForward@mR+1)^0,c
 10051   005666  ECA8  F02C         	call	_quaterForward	;wreg free
 10052   00566A  0012               	return		;funcret
 10053   00566C                     __end_of_OrangeMove:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function _turnRight45 *****************
 10057 ;; Defined at:
 10058 ;;		line 212 in file "dc_motor.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10061 ;;		 -> motorL(9), 
 10062 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10063 ;;		 -> motorR(9), 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;		None
 10066 ;; Return value:  Size  Location     Type
 10067 ;;                  1    wreg      void 
 10068 ;; Registers used:
 10069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10070 ;; Tracked objects:
 10071 ;;		On entry : 0/0
 10072 ;;		On exit  : 0/0
 10073 ;;		Unchanged: 0/0
 10074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10077 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10079 ;;Total ram usage:        6 bytes
 10080 ;; Hardware stack levels used: 1
 10081 ;; Hardware stack levels required when called: 4
 10082 ;; This function calls:
 10083 ;;		_TurnDelay
 10084 ;;		_stop
 10085 ;;		_turnRight
 10086 ;; This function is called by:
 10087 ;;		_RedMove
 10088 ;;		_BlueMove
 10089 ;;		_YellowMove
 10090 ;;		_OrangeMove
 10091 ;;		_ReverseYellow
 10092 ;;		_ReverseLightBlueMove
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           	psect	text52
 10097   005D7A                     __ptext52:
 10098                           	callstack 0
 10099   005D7A                     _turnRight45:
 10100                           	callstack 24
 10101   005D7A                     
 10102                           ;dc_motor.c: 213:     turnRight(mL,mR);
 10103   005D7A  C01A  F014         	movff	turnRight45@mL,turnRight@mL
 10104   005D7E  C01B  F015         	movff	turnRight45@mL+1,turnRight@mL+1
 10105   005D82  C01C  F016         	movff	turnRight45@mR,turnRight@mR
 10106   005D86  C01D  F017         	movff	turnRight45@mR+1,turnRight@mR+1
 10107   005D8A  ECF1  F027         	call	_turnRight	;wreg free
 10108   005D8E                     
 10109                           ;dc_motor.c: 214:     TurnDelay(Turn45Delay);
 10110   005D8E  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10111   005D92  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10112   005D96  EC29  F030         	call	_TurnDelay	;wreg free
 10113   005D9A                     
 10114                           ;dc_motor.c: 215:     stop(&motorL, &motorR);
 10115   005D9A  0E61               	movlw	low _motorL
 10116   005D9C  6E14               	movwf	stop@mL^0,c
 10117   005D9E  0E01               	movlw	high _motorL
 10118   005DA0  6E15               	movwf	(stop@mL+1)^0,c
 10119   005DA2  0E58               	movlw	low _motorR
 10120   005DA4  6E16               	movwf	stop@mR^0,c
 10121   005DA6  0E01               	movlw	high _motorR
 10122   005DA8  6E17               	movwf	(stop@mR+1)^0,c
 10123   005DAA  EC71  F029         	call	_stop	;wreg free
 10124   005DAE                     
 10125                           ;dc_motor.c: 216:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10126   005DAE  0E05               	movlw	5
 10127   005DB0  6E1F               	movwf	(??_turnRight45+1)^0,c
 10128   005DB2  0E0F               	movlw	15
 10129   005DB4  6E1E               	movwf	??_turnRight45^0,c
 10130   005DB6  0EF1               	movlw	241
 10131   005DB8                     u6017:
 10132   005DB8  2EE8               	decfsz	wreg,f,c
 10133   005DBA  D7FE               	bra	u6017
 10134   005DBC  2E1E               	decfsz	??_turnRight45^0,f,c
 10135   005DBE  D7FC               	bra	u6017
 10136   005DC0  2E1F               	decfsz	(??_turnRight45+1)^0,f,c
 10137   005DC2  D7FA               	bra	u6017
 10138   005DC4  F000               	nop	
 10139   005DC6  0012               	return		;funcret
 10140   005DC8                     __end_of_turnRight45:
 10141                           	callstack 0
 10142                           
 10143 ;; *************** function _turnRight *****************
 10144 ;; Defined at:
 10145 ;;		line 130 in file "dc_motor.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10148 ;;		 -> motorL(9), 
 10149 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10150 ;;		 -> motorR(9), 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;		None
 10153 ;; Return value:  Size  Location     Type
 10154 ;;                  1    wreg      void 
 10155 ;; Registers used:
 10156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10157 ;; Tracked objects:
 10158 ;;		On entry : 0/0
 10159 ;;		On exit  : 0/0
 10160 ;;		Unchanged: 0/0
 10161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10165 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10166 ;;Total ram usage:        6 bytes
 10167 ;; Hardware stack levels used: 1
 10168 ;; Hardware stack levels required when called: 3
 10169 ;; This function calls:
 10170 ;;		_setMotorPWM
 10171 ;; This function is called by:
 10172 ;;		_turnRight45
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text53
 10177   004FE2                     __ptext53:
 10178                           	callstack 0
 10179   004FE2                     _turnRight:
 10180                           	callstack 24
 10181   004FE2                     
 10182                           ;dc_motor.c: 130: void turnRight(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 13
      +                          1: {;dc_motor.c: 132:     mL->direction =1;
 10183   004FE2  EE20 F001          	lfsr	2,1
 10184   004FE6  5014               	movf	turnRight@mL^0,w,c
 10185   004FE8  26D9               	addwf	fsr2l,f,c
 10186   004FEA  5015               	movf	(turnRight@mL+1)^0,w,c
 10187   004FEC  22DA               	addwfc	fsr2h,f,c
 10188   004FEE  0E01               	movlw	1
 10189   004FF0  6EDF               	movwf	indf2,c
 10190                           
 10191                           ;dc_motor.c: 133:     mR->direction =0;
 10192   004FF2  EE20 F001          	lfsr	2,1
 10193   004FF6  5016               	movf	turnRight@mR^0,w,c
 10194   004FF8  26D9               	addwf	fsr2l,f,c
 10195   004FFA  5017               	movf	(turnRight@mR+1)^0,w,c
 10196   004FFC  22DA               	addwfc	fsr2h,f,c
 10197   004FFE  0E00               	movlw	0
 10198   005000  6EDF               	movwf	indf2,c
 10199                           
 10200                           ;dc_motor.c: 135:     while(mL->power<power && mR->power<power){
 10201   005002  EF27  F028         	goto	l4172
 10202   005006                     l4164:
 10203                           
 10204                           ;dc_motor.c: 137:         mL->power+=10;
 10205   005006  C014  FFD9         	movff	turnRight@mL,fsr2l
 10206   00500A  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10207   00500E  0E0A               	movlw	10
 10208   005010  26DF               	addwf	indf2,f,c
 10209                           
 10210                           ;dc_motor.c: 138:         mR->power+=10;
 10211   005012  C016  FFD9         	movff	turnRight@mR,fsr2l
 10212   005016  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10213   00501A  0E0A               	movlw	10
 10214   00501C  26DF               	addwf	indf2,f,c
 10215   00501E                     
 10216                           ;dc_motor.c: 140:         setMotorPWM(mL);
 10217   00501E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
 10218   005022  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
 10219   005026  EC40  F023         	call	_setMotorPWM	;wreg free
 10220   00502A                     
 10221                           ;dc_motor.c: 141:         setMotorPWM(mR);
 10222   00502A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
 10223   00502E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
 10224   005032  EC40  F023         	call	_setMotorPWM	;wreg free
 10225   005036                     
 10226                           ;dc_motor.c: 143:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10227   005036  0E02               	movlw	2
 10228   005038  6E19               	movwf	(??_turnRight+1)^0,c
 10229   00503A  0EA0               	movlw	160
 10230   00503C  6E18               	movwf	??_turnRight^0,c
 10231   00503E  0E92               	movlw	146
 10232   005040                     u6027:
 10233   005040  2EE8               	decfsz	wreg,f,c
 10234   005042  D7FE               	bra	u6027
 10235   005044  2E18               	decfsz	??_turnRight^0,f,c
 10236   005046  D7FC               	bra	u6027
 10237   005048  2E19               	decfsz	(??_turnRight+1)^0,f,c
 10238   00504A  D7FA               	bra	u6027
 10239   00504C  D000               	nop2	
 10240   00504E                     l4172:
 10241   00504E  C014  FFD9         	movff	turnRight@mL,fsr2l
 10242   005052  C015  FFDA         	movff	turnRight@mL+1,fsr2h
 10243   005056  0E32               	movlw	50
 10244   005058  60DF               	cpfslt	indf2,c
 10245   00505A  EF31  F028         	goto	u3471
 10246   00505E  EF33  F028         	goto	u3470
 10247   005062                     u3471:
 10248   005062  EF3F  F028         	goto	l444
 10249   005066                     u3470:
 10250   005066  C016  FFD9         	movff	turnRight@mR,fsr2l
 10251   00506A  C017  FFDA         	movff	turnRight@mR+1,fsr2h
 10252   00506E  0E31               	movlw	49
 10253   005070  64DF               	cpfsgt	indf2,c
 10254   005072  EF3D  F028         	goto	u3481
 10255   005076  EF3F  F028         	goto	u3480
 10256   00507A                     u3481:
 10257   00507A  EF03  F028         	goto	l4164
 10258   00507E                     u3480:
 10259   00507E                     l444:
 10260   00507E  0012               	return		;funcret
 10261   005080                     __end_of_turnRight:
 10262                           	callstack 0
 10263                           
 10264 ;; *************** function _LightBlueMove *****************
 10265 ;; Defined at:
 10266 ;;		line 335 in file "dc_motor.c"
 10267 ;; Parameters:    Size  Location     Type
 10268 ;;  mL              2   31[COMRAM] PTR struct DC_motor
 10269 ;;		 -> motorL(9), 
 10270 ;;  mR              2   33[COMRAM] PTR struct DC_motor
 10271 ;;		 -> motorR(9), 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;		None
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10286 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10287 ;;Total ram usage:        4 bytes
 10288 ;; Hardware stack levels used: 1
 10289 ;; Hardware stack levels required when called: 5
 10290 ;; This function calls:
 10291 ;;		_quaterForward
 10292 ;;		_reverseDetect
 10293 ;;		_turnLeft45
 10294 ;; This function is called by:
 10295 ;;		_colour_move
 10296 ;; This function uses a non-reentrant model
 10297 ;;
 10298                           
 10299                           	psect	text54
 10300   00566C                     __ptext54:
 10301                           	callstack 0
 10302   00566C                     _LightBlueMove:
 10303                           	callstack 24
 10304   00566C                     
 10305                           ;dc_motor.c: 336:     reverseDetect(&motorL, &motorR);
 10306   00566C  0E61               	movlw	low _motorL
 10307   00566E  6E1A               	movwf	reverseDetect@mL^0,c
 10308   005670  0E01               	movlw	high _motorL
 10309   005672  6E1B               	movwf	(reverseDetect@mL+1)^0,c
 10310   005674  0E58               	movlw	low _motorR
 10311   005676  6E1C               	movwf	reverseDetect@mR^0,c
 10312   005678  0E01               	movlw	high _motorR
 10313   00567A  6E1D               	movwf	(reverseDetect@mR+1)^0,c
 10314   00567C  ECF6  F02B         	call	_reverseDetect	;wreg free
 10315                           
 10316                           ;dc_motor.c: 338:     turnLeft45(&motorL, &motorR);
 10317   005680  0E61               	movlw	low _motorL
 10318   005682  6E1A               	movwf	turnLeft45@mL^0,c
 10319   005684  0E01               	movlw	high _motorL
 10320   005686  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10321   005688  0E58               	movlw	low _motorR
 10322   00568A  6E1C               	movwf	turnLeft45@mR^0,c
 10323   00568C  0E01               	movlw	high _motorR
 10324   00568E  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10325   005690  ECE4  F02E         	call	_turnLeft45	;wreg free
 10326                           
 10327                           ;dc_motor.c: 339:     turnLeft45(&motorL, &motorR);
 10328   005694  0E61               	movlw	low _motorL
 10329   005696  6E1A               	movwf	turnLeft45@mL^0,c
 10330   005698  0E01               	movlw	high _motorL
 10331   00569A  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10332   00569C  0E58               	movlw	low _motorR
 10333   00569E  6E1C               	movwf	turnLeft45@mR^0,c
 10334   0056A0  0E01               	movlw	high _motorR
 10335   0056A2  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10336   0056A4  ECE4  F02E         	call	_turnLeft45	;wreg free
 10337                           
 10338                           ;dc_motor.c: 340:     turnLeft45(&motorL, &motorR);
 10339   0056A8  0E61               	movlw	low _motorL
 10340   0056AA  6E1A               	movwf	turnLeft45@mL^0,c
 10341   0056AC  0E01               	movlw	high _motorL
 10342   0056AE  6E1B               	movwf	(turnLeft45@mL+1)^0,c
 10343   0056B0  0E58               	movlw	low _motorR
 10344   0056B2  6E1C               	movwf	turnLeft45@mR^0,c
 10345   0056B4  0E01               	movlw	high _motorR
 10346   0056B6  6E1D               	movwf	(turnLeft45@mR+1)^0,c
 10347   0056B8  ECE4  F02E         	call	_turnLeft45	;wreg free
 10348                           
 10349                           ;dc_motor.c: 341:     quaterForward(&motorL, &motorR);
 10350   0056BC  0E61               	movlw	low _motorL
 10351   0056BE  6E1A               	movwf	quaterForward@mL^0,c
 10352   0056C0  0E01               	movlw	high _motorL
 10353   0056C2  6E1B               	movwf	(quaterForward@mL+1)^0,c
 10354   0056C4  0E58               	movlw	low _motorR
 10355   0056C6  6E1C               	movwf	quaterForward@mR^0,c
 10356   0056C8  0E01               	movlw	high _motorR
 10357   0056CA  6E1D               	movwf	(quaterForward@mR+1)^0,c
 10358   0056CC  ECA8  F02C         	call	_quaterForward	;wreg free
 10359   0056D0  0012               	return		;funcret
 10360   0056D2                     __end_of_LightBlueMove:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _turnLeft45 *****************
 10364 ;; Defined at:
 10365 ;;		line 219 in file "dc_motor.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10368 ;;		 -> motorL(9), 
 10369 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10370 ;;		 -> motorR(9), 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;		None
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  1    wreg      void 
 10375 ;; Registers used:
 10376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10382 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10385 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10386 ;;Total ram usage:        6 bytes
 10387 ;; Hardware stack levels used: 1
 10388 ;; Hardware stack levels required when called: 4
 10389 ;; This function calls:
 10390 ;;		_TurnDelay
 10391 ;;		_stop
 10392 ;;		_turnLeft
 10393 ;; This function is called by:
 10394 ;;		_GreenMove
 10395 ;;		_PinkMove
 10396 ;;		_LightBlueMove
 10397 ;;		_ReversePink
 10398 ;;		_ReverseOrangeMove
 10399 ;;		_turnCalibration
 10400 ;; This function uses a non-reentrant model
 10401 ;;
 10402                           
 10403                           	psect	text55
 10404   005DC8                     __ptext55:
 10405                           	callstack 0
 10406   005DC8                     _turnLeft45:
 10407                           	callstack 25
 10408   005DC8                     
 10409                           ;dc_motor.c: 220:     turnLeft(mL,mR);
 10410   005DC8  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
 10411   005DCC  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
 10412   005DD0  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
 10413   005DD4  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
 10414   005DD8  EC40  F028         	call	_turnLeft	;wreg free
 10415   005DDC                     
 10416                           ;dc_motor.c: 221:     TurnDelay(Turn45Delay);
 10417   005DDC  C0F4  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
 10418   005DE0  C0F5  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
 10419   005DE4  EC29  F030         	call	_TurnDelay	;wreg free
 10420   005DE8                     
 10421                           ;dc_motor.c: 222:     stop(&motorL, &motorR);
 10422   005DE8  0E61               	movlw	low _motorL
 10423   005DEA  6E14               	movwf	stop@mL^0,c
 10424   005DEC  0E01               	movlw	high _motorL
 10425   005DEE  6E15               	movwf	(stop@mL+1)^0,c
 10426   005DF0  0E58               	movlw	low _motorR
 10427   005DF2  6E16               	movwf	stop@mR^0,c
 10428   005DF4  0E01               	movlw	high _motorR
 10429   005DF6  6E17               	movwf	(stop@mR+1)^0,c
 10430   005DF8  EC71  F029         	call	_stop	;wreg free
 10431   005DFC                     
 10432                           ;dc_motor.c: 223:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10433   005DFC  0E05               	movlw	5
 10434   005DFE  6E1F               	movwf	(??_turnLeft45+1)^0,c
 10435   005E00  0E0F               	movlw	15
 10436   005E02  6E1E               	movwf	??_turnLeft45^0,c
 10437   005E04  0EF1               	movlw	241
 10438   005E06                     u6037:
 10439   005E06  2EE8               	decfsz	wreg,f,c
 10440   005E08  D7FE               	bra	u6037
 10441   005E0A  2E1E               	decfsz	??_turnLeft45^0,f,c
 10442   005E0C  D7FC               	bra	u6037
 10443   005E0E  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
 10444   005E10  D7FA               	bra	u6037
 10445   005E12  F000               	nop	
 10446   005E14  0012               	return		;funcret
 10447   005E16                     __end_of_turnLeft45:
 10448                           	callstack 0
 10449                           
 10450 ;; *************** function _turnLeft *****************
 10451 ;; Defined at:
 10452 ;;		line 112 in file "dc_motor.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10455 ;;		 -> motorL(9), 
 10456 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10457 ;;		 -> motorR(9), 
 10458 ;; Auto vars:     Size  Location     Type
 10459 ;;		None
 10460 ;; Return value:  Size  Location     Type
 10461 ;;                  1    wreg      void 
 10462 ;; Registers used:
 10463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10464 ;; Tracked objects:
 10465 ;;		On entry : 0/0
 10466 ;;		On exit  : 0/0
 10467 ;;		Unchanged: 0/0
 10468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;Total ram usage:        6 bytes
 10474 ;; Hardware stack levels used: 1
 10475 ;; Hardware stack levels required when called: 3
 10476 ;; This function calls:
 10477 ;;		_setMotorPWM
 10478 ;; This function is called by:
 10479 ;;		_turnLeft45
 10480 ;; This function uses a non-reentrant model
 10481 ;;
 10482                           
 10483                           	psect	text56
 10484   005080                     __ptext56:
 10485                           	callstack 0
 10486   005080                     _turnLeft:
 10487                           	callstack 25
 10488   005080                     
 10489                           ;dc_motor.c: 112: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 113
      +                          : {;dc_motor.c: 114:     mL->direction =0;
 10490   005080  EE20 F001          	lfsr	2,1
 10491   005084  5014               	movf	turnLeft@mL^0,w,c
 10492   005086  26D9               	addwf	fsr2l,f,c
 10493   005088  5015               	movf	(turnLeft@mL+1)^0,w,c
 10494   00508A  22DA               	addwfc	fsr2h,f,c
 10495   00508C  0E00               	movlw	0
 10496   00508E  6EDF               	movwf	indf2,c
 10497                           
 10498                           ;dc_motor.c: 115:     mR->direction =1;
 10499   005090  EE20 F001          	lfsr	2,1
 10500   005094  5016               	movf	turnLeft@mR^0,w,c
 10501   005096  26D9               	addwf	fsr2l,f,c
 10502   005098  5017               	movf	(turnLeft@mR+1)^0,w,c
 10503   00509A  22DA               	addwfc	fsr2h,f,c
 10504   00509C  0E01               	movlw	1
 10505   00509E  6EDF               	movwf	indf2,c
 10506                           
 10507                           ;dc_motor.c: 117:     while(mL->power<power && mR->power<power){
 10508   0050A0  EF76  F028         	goto	l4158
 10509   0050A4                     l4150:
 10510                           
 10511                           ;dc_motor.c: 119:         mL->power+=10;
 10512   0050A4  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10513   0050A8  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10514   0050AC  0E0A               	movlw	10
 10515   0050AE  26DF               	addwf	indf2,f,c
 10516                           
 10517                           ;dc_motor.c: 120:         mR->power+=10;
 10518   0050B0  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10519   0050B4  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10520   0050B8  0E0A               	movlw	10
 10521   0050BA  26DF               	addwf	indf2,f,c
 10522   0050BC                     
 10523                           ;dc_motor.c: 122:         setMotorPWM(mL);
 10524   0050BC  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
 10525   0050C0  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
 10526   0050C4  EC40  F023         	call	_setMotorPWM	;wreg free
 10527   0050C8                     
 10528                           ;dc_motor.c: 123:         setMotorPWM(mR);
 10529   0050C8  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
 10530   0050CC  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
 10531   0050D0  EC40  F023         	call	_setMotorPWM	;wreg free
 10532   0050D4                     
 10533                           ;dc_motor.c: 125:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10534   0050D4  0E02               	movlw	2
 10535   0050D6  6E19               	movwf	(??_turnLeft+1)^0,c
 10536   0050D8  0EA0               	movlw	160
 10537   0050DA  6E18               	movwf	??_turnLeft^0,c
 10538   0050DC  0E92               	movlw	146
 10539   0050DE                     u6047:
 10540   0050DE  2EE8               	decfsz	wreg,f,c
 10541   0050E0  D7FE               	bra	u6047
 10542   0050E2  2E18               	decfsz	??_turnLeft^0,f,c
 10543   0050E4  D7FC               	bra	u6047
 10544   0050E6  2E19               	decfsz	(??_turnLeft+1)^0,f,c
 10545   0050E8  D7FA               	bra	u6047
 10546   0050EA  D000               	nop2	
 10547   0050EC                     l4158:
 10548   0050EC  C014  FFD9         	movff	turnLeft@mL,fsr2l
 10549   0050F0  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
 10550   0050F4  0E32               	movlw	50
 10551   0050F6  60DF               	cpfslt	indf2,c
 10552   0050F8  EF80  F028         	goto	u3451
 10553   0050FC  EF82  F028         	goto	u3450
 10554   005100                     u3451:
 10555   005100  EF8E  F028         	goto	l436
 10556   005104                     u3450:
 10557   005104  C016  FFD9         	movff	turnLeft@mR,fsr2l
 10558   005108  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
 10559   00510C  0E31               	movlw	49
 10560   00510E  64DF               	cpfsgt	indf2,c
 10561   005110  EF8C  F028         	goto	u3461
 10562   005114  EF8E  F028         	goto	u3460
 10563   005118                     u3461:
 10564   005118  EF52  F028         	goto	l4150
 10565   00511C                     u3460:
 10566   00511C                     l436:
 10567   00511C  0012               	return		;funcret
 10568   00511E                     __end_of_turnLeft:
 10569                           	callstack 0
 10570                           
 10571 ;; *************** function _TurnDelay *****************
 10572 ;; Defined at:
 10573 ;;		line 205 in file "dc_motor.c"
 10574 ;; Parameters:    Size  Location     Type
 10575 ;;  Turn45Delay     2    0[COMRAM] int 
 10576 ;; Auto vars:     Size  Location     Type
 10577 ;;		None
 10578 ;; Return value:  Size  Location     Type
 10579 ;;                  1    wreg      void 
 10580 ;; Registers used:
 10581 ;;		wreg, status,2, status,0
 10582 ;; Tracked objects:
 10583 ;;		On entry : 0/0
 10584 ;;		On exit  : 0/0
 10585 ;;		Unchanged: 0/0
 10586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10589 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10591 ;;Total ram usage:        3 bytes
 10592 ;; Hardware stack levels used: 1
 10593 ;; Hardware stack levels required when called: 1
 10594 ;; This function calls:
 10595 ;;		Nothing
 10596 ;; This function is called by:
 10597 ;;		_turnRight45
 10598 ;;		_turnLeft45
 10599 ;; This function uses a non-reentrant model
 10600 ;;
 10601                           
 10602                           	psect	text57
 10603   006052                     __ptext57:
 10604                           	callstack 0
 10605   006052                     _TurnDelay:
 10606                           	callstack 27
 10607   006052                     
 10608                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10609   006052  EF36  F030         	goto	l471
 10610   006056                     l4192:
 10611                           
 10612                           ;dc_motor.c: 207:         _delay((unsigned long)((1)*(64000000/4000.0)));
 10613   006056  0E15               	movlw	21
 10614   006058  6E03               	movwf	??_TurnDelay^0,c
 10615   00605A  0EC6               	movlw	198
 10616   00605C                     u6057:
 10617   00605C  2EE8               	decfsz	wreg,f,c
 10618   00605E  D7FE               	bra	u6057
 10619   006060  2E03               	decfsz	??_TurnDelay^0,f,c
 10620   006062  D7FC               	bra	u6057
 10621   006064  D000               	nop2	
 10622   006066                     
 10623                           ;dc_motor.c: 208:         Turn45Delay--;
 10624   006066  0601               	decf	TurnDelay@Turn45Delay^0,f,c
 10625   006068  A0D8               	btfss	status,0,c
 10626   00606A  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
 10627   00606C                     l471:
 10628                           
 10629                           ;dc_motor.c: 206:     while (Turn45Delay>0){
 10630   00606C  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
 10631   00606E  EF43  F030         	goto	u3510
 10632   006072  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
 10633   006074  E106               	bnz	u3511
 10634   006076  0401               	decf	TurnDelay@Turn45Delay^0,w,c
 10635   006078  B0D8               	btfsc	status,0,c
 10636   00607A  EF41  F030         	goto	u3511
 10637   00607E  EF43  F030         	goto	u3510
 10638   006082                     u3511:
 10639   006082  EF2B  F030         	goto	l4192
 10640   006086                     u3510:
 10641   006086  0012               	return		;funcret
 10642   006088                     __end_of_TurnDelay:
 10643                           	callstack 0
 10644                           
 10645 ;; *************** function _reverseDetect *****************
 10646 ;; Defined at:
 10647 ;;		line 226 in file "dc_motor.c"
 10648 ;; Parameters:    Size  Location     Type
 10649 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10650 ;;		 -> motorL(9), 
 10651 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10652 ;;		 -> motorR(9), 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10667 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10668 ;;Total ram usage:        6 bytes
 10669 ;; Hardware stack levels used: 1
 10670 ;; Hardware stack levels required when called: 4
 10671 ;; This function calls:
 10672 ;;		_fullSpeedBack
 10673 ;;		_stop
 10674 ;; This function is called by:
 10675 ;;		_RedMove
 10676 ;;		_GreenMove
 10677 ;;		_BlueMove
 10678 ;;		_YellowMove
 10679 ;;		_PinkMove
 10680 ;;		_OrangeMove
 10681 ;;		_LightBlueMove
 10682 ;;		_RetryMove
 10683 ;;		_ReverseYellow
 10684 ;;		_ReversePink
 10685 ;;		_ReverseOrangeMove
 10686 ;;		_ReverseLightBlueMove
 10687 ;; This function uses a non-reentrant model
 10688 ;;
 10689                           
 10690                           	psect	text58
 10691   0057EC                     __ptext58:
 10692                           	callstack 0
 10693   0057EC                     _reverseDetect:
 10694                           	callstack 24
 10695   0057EC                     
 10696                           ;dc_motor.c: 227:     fullSpeedBack(mL,mR);
 10697   0057EC  C01A  F014         	movff	reverseDetect@mL,fullSpeedBack@mL
 10698   0057F0  C01B  F015         	movff	reverseDetect@mL+1,fullSpeedBack@mL+1
 10699   0057F4  C01C  F016         	movff	reverseDetect@mR,fullSpeedBack@mR
 10700   0057F8  C01D  F017         	movff	reverseDetect@mR+1,fullSpeedBack@mR+1
 10701   0057FC  EC8F  F028         	call	_fullSpeedBack	;wreg free
 10702   005800                     
 10703                           ;dc_motor.c: 228:     _delay((unsigned long)((200)*(64000000/4000.0)));
 10704   005800  0E11               	movlw	17
 10705   005802  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10706   005804  0E3C               	movlw	60
 10707   005806  6E1E               	movwf	??_reverseDetect^0,c
 10708   005808  0ECB               	movlw	203
 10709   00580A                     u6067:
 10710   00580A  2EE8               	decfsz	wreg,f,c
 10711   00580C  D7FE               	bra	u6067
 10712   00580E  2E1E               	decfsz	??_reverseDetect^0,f,c
 10713   005810  D7FC               	bra	u6067
 10714   005812  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10715   005814  D7FA               	bra	u6067
 10716   005816  F000               	nop	
 10717   005818                     
 10718                           ;dc_motor.c: 229:     stop(&motorL, &motorR);
 10719   005818  0E61               	movlw	low _motorL
 10720   00581A  6E14               	movwf	stop@mL^0,c
 10721   00581C  0E01               	movlw	high _motorL
 10722   00581E  6E15               	movwf	(stop@mL+1)^0,c
 10723   005820  0E58               	movlw	low _motorR
 10724   005822  6E16               	movwf	stop@mR^0,c
 10725   005824  0E01               	movlw	high _motorR
 10726   005826  6E17               	movwf	(stop@mR+1)^0,c
 10727   005828  EC71  F029         	call	_stop	;wreg free
 10728                           
 10729                           ;dc_motor.c: 230:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10730   00582C  0E05               	movlw	5
 10731   00582E  6E1F               	movwf	(??_reverseDetect+1)^0,c
 10732   005830  0E0F               	movlw	15
 10733   005832  6E1E               	movwf	??_reverseDetect^0,c
 10734   005834  0EF1               	movlw	241
 10735   005836                     u6077:
 10736   005836  2EE8               	decfsz	wreg,f,c
 10737   005838  D7FE               	bra	u6077
 10738   00583A  2E1E               	decfsz	??_reverseDetect^0,f,c
 10739   00583C  D7FC               	bra	u6077
 10740   00583E  2E1F               	decfsz	(??_reverseDetect+1)^0,f,c
 10741   005840  D7FA               	bra	u6077
 10742   005842  F000               	nop	
 10743   005844  0012               	return		;funcret
 10744   005846                     __end_of_reverseDetect:
 10745                           	callstack 0
 10746                           
 10747 ;; *************** function _fullSpeedBack *****************
 10748 ;; Defined at:
 10749 ;;		line 186 in file "dc_motor.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 10752 ;;		 -> motorL(9), 
 10753 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 10754 ;;		 -> motorR(9), 
 10755 ;; Auto vars:     Size  Location     Type
 10756 ;;		None
 10757 ;; Return value:  Size  Location     Type
 10758 ;;                  1    wreg      void 
 10759 ;; Registers used:
 10760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10761 ;; Tracked objects:
 10762 ;;		On entry : 0/0
 10763 ;;		On exit  : 0/0
 10764 ;;		Unchanged: 0/0
 10765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10770 ;;Total ram usage:        6 bytes
 10771 ;; Hardware stack levels used: 1
 10772 ;; Hardware stack levels required when called: 3
 10773 ;; This function calls:
 10774 ;;		_setMotorPWM
 10775 ;; This function is called by:
 10776 ;;		_reverseDetect
 10777 ;;		_reverseOneBlock
 10778 ;;		_Backhalfblock
 10779 ;;		_homeReverse
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           	psect	text59
 10784   00511E                     __ptext59:
 10785                           	callstack 0
 10786   00511E                     _fullSpeedBack:
 10787                           	callstack 24
 10788   00511E                     
 10789                           ;dc_motor.c: 186: void fullSpeedBack(struct DC_motor *mL, struct DC_motor *mR);dc_motor.
      +                          c: 187: {;dc_motor.c: 189:     mL->direction =0;
 10790   00511E  EE20 F001          	lfsr	2,1
 10791   005122  5014               	movf	fullSpeedBack@mL^0,w,c
 10792   005124  26D9               	addwf	fsr2l,f,c
 10793   005126  5015               	movf	(fullSpeedBack@mL+1)^0,w,c
 10794   005128  22DA               	addwfc	fsr2h,f,c
 10795   00512A  0E00               	movlw	0
 10796   00512C  6EDF               	movwf	indf2,c
 10797                           
 10798                           ;dc_motor.c: 190:     mR->direction =0;
 10799   00512E  EE20 F001          	lfsr	2,1
 10800   005132  5016               	movf	fullSpeedBack@mR^0,w,c
 10801   005134  26D9               	addwf	fsr2l,f,c
 10802   005136  5017               	movf	(fullSpeedBack@mR+1)^0,w,c
 10803   005138  22DA               	addwfc	fsr2h,f,c
 10804   00513A  0E00               	movlw	0
 10805   00513C  6EDF               	movwf	indf2,c
 10806                           
 10807                           ;dc_motor.c: 191:     while (mL->power < power && mR->power < power){
 10808   00513E  EFC5  F028         	goto	l4186
 10809   005142                     l4178:
 10810                           
 10811                           ;dc_motor.c: 193:         mL->power+=10;
 10812   005142  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10813   005146  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10814   00514A  0E0A               	movlw	10
 10815   00514C  26DF               	addwf	indf2,f,c
 10816                           
 10817                           ;dc_motor.c: 194:         mR->power+=10;
 10818   00514E  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10819   005152  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10820   005156  0E0A               	movlw	10
 10821   005158  26DF               	addwf	indf2,f,c
 10822   00515A                     
 10823                           ;dc_motor.c: 196:         setMotorPWM(mL);
 10824   00515A  C014  F00E         	movff	fullSpeedBack@mL,setMotorPWM@m
 10825   00515E  C015  F00F         	movff	fullSpeedBack@mL+1,setMotorPWM@m+1
 10826   005162  EC40  F023         	call	_setMotorPWM	;wreg free
 10827   005166                     
 10828                           ;dc_motor.c: 197:         setMotorPWM(mR);
 10829   005166  C016  F00E         	movff	fullSpeedBack@mR,setMotorPWM@m
 10830   00516A  C017  F00F         	movff	fullSpeedBack@mR+1,setMotorPWM@m+1
 10831   00516E  EC40  F023         	call	_setMotorPWM	;wreg free
 10832   005172                     
 10833                           ;dc_motor.c: 199:         _delay((unsigned long)((20)*(64000000/4000.0)));
 10834   005172  0E02               	movlw	2
 10835   005174  6E19               	movwf	(??_fullSpeedBack+1)^0,c
 10836   005176  0EA0               	movlw	160
 10837   005178  6E18               	movwf	??_fullSpeedBack^0,c
 10838   00517A  0E92               	movlw	146
 10839   00517C                     u6087:
 10840   00517C  2EE8               	decfsz	wreg,f,c
 10841   00517E  D7FE               	bra	u6087
 10842   005180  2E18               	decfsz	??_fullSpeedBack^0,f,c
 10843   005182  D7FC               	bra	u6087
 10844   005184  2E19               	decfsz	(??_fullSpeedBack+1)^0,f,c
 10845   005186  D7FA               	bra	u6087
 10846   005188  D000               	nop2	
 10847   00518A                     l4186:
 10848   00518A  C014  FFD9         	movff	fullSpeedBack@mL,fsr2l
 10849   00518E  C015  FFDA         	movff	fullSpeedBack@mL+1,fsr2h
 10850   005192  0E32               	movlw	50
 10851   005194  60DF               	cpfslt	indf2,c
 10852   005196  EFCF  F028         	goto	u3491
 10853   00519A  EFD1  F028         	goto	u3490
 10854   00519E                     u3491:
 10855   00519E  EFDD  F028         	goto	l468
 10856   0051A2                     u3490:
 10857   0051A2  C016  FFD9         	movff	fullSpeedBack@mR,fsr2l
 10858   0051A6  C017  FFDA         	movff	fullSpeedBack@mR+1,fsr2h
 10859   0051AA  0E31               	movlw	49
 10860   0051AC  64DF               	cpfsgt	indf2,c
 10861   0051AE  EFDB  F028         	goto	u3501
 10862   0051B2  EFDD  F028         	goto	u3500
 10863   0051B6                     u3501:
 10864   0051B6  EFA1  F028         	goto	l4178
 10865   0051BA                     u3500:
 10866   0051BA                     l468:
 10867   0051BA  0012               	return		;funcret
 10868   0051BC                     __end_of_fullSpeedBack:
 10869                           	callstack 0
 10870                           
 10871 ;; *************** function _quaterForward *****************
 10872 ;; Defined at:
 10873 ;;		line 259 in file "dc_motor.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 10876 ;;		 -> motorL(9), 
 10877 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 10878 ;;		 -> motorR(9), 
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  1    wreg      void 
 10883 ;; Registers used:
 10884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10893 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10894 ;;Total ram usage:        6 bytes
 10895 ;; Hardware stack levels used: 1
 10896 ;; Hardware stack levels required when called: 4
 10897 ;; This function calls:
 10898 ;;		_fullSpeedAhead
 10899 ;;		_stop
 10900 ;; This function is called by:
 10901 ;;		_OrangeMove
 10902 ;;		_LightBlueMove
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           	psect	text60
 10907   005950                     __ptext60:
 10908                           	callstack 0
 10909   005950                     _quaterForward:
 10910                           	callstack 24
 10911   005950                     
 10912                           ;dc_motor.c: 260:     fullSpeedAhead(mL,mR);
 10913   005950  C01A  F014         	movff	quaterForward@mL,fullSpeedAhead@mL
 10914   005954  C01B  F015         	movff	quaterForward@mL+1,fullSpeedAhead@mL+1
 10915   005958  C01C  F016         	movff	quaterForward@mR,fullSpeedAhead@mR
 10916   00595C  C01D  F017         	movff	quaterForward@mR+1,fullSpeedAhead@mR+1
 10917   005960  ECDE  F028         	call	_fullSpeedAhead	;wreg free
 10918   005964                     
 10919                           ;dc_motor.c: 261:     _delay((unsigned long)((300)*(64000000/4000.0)));
 10920   005964  0E19               	movlw	25
 10921   005966  6E1F               	movwf	(??_quaterForward+1)^0,c
 10922   005968  0E5A               	movlw	90
 10923   00596A  6E1E               	movwf	??_quaterForward^0,c
 10924   00596C  0EB2               	movlw	178
 10925   00596E                     u6097:
 10926   00596E  2EE8               	decfsz	wreg,f,c
 10927   005970  D7FE               	bra	u6097
 10928   005972  2E1E               	decfsz	??_quaterForward^0,f,c
 10929   005974  D7FC               	bra	u6097
 10930   005976  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 10931   005978  D7FA               	bra	u6097
 10932   00597A                     
 10933                           ;dc_motor.c: 262:     stop(&motorL, &motorR);
 10934   00597A  0E61               	movlw	low _motorL
 10935   00597C  6E14               	movwf	stop@mL^0,c
 10936   00597E  0E01               	movlw	high _motorL
 10937   005980  6E15               	movwf	(stop@mL+1)^0,c
 10938   005982  0E58               	movlw	low _motorR
 10939   005984  6E16               	movwf	stop@mR^0,c
 10940   005986  0E01               	movlw	high _motorR
 10941   005988  6E17               	movwf	(stop@mR+1)^0,c
 10942   00598A  EC71  F029         	call	_stop	;wreg free
 10943                           
 10944                           ;dc_motor.c: 263:     _delay((unsigned long)((50)*(64000000/4000.0)));
 10945   00598E  0E05               	movlw	5
 10946   005990  6E1F               	movwf	(??_quaterForward+1)^0,c
 10947   005992  0E0F               	movlw	15
 10948   005994  6E1E               	movwf	??_quaterForward^0,c
 10949   005996  0EF1               	movlw	241
 10950   005998                     u6107:
 10951   005998  2EE8               	decfsz	wreg,f,c
 10952   00599A  D7FE               	bra	u6107
 10953   00599C  2E1E               	decfsz	??_quaterForward^0,f,c
 10954   00599E  D7FC               	bra	u6107
 10955   0059A0  2E1F               	decfsz	(??_quaterForward+1)^0,f,c
 10956   0059A2  D7FA               	bra	u6107
 10957   0059A4  F000               	nop	
 10958   0059A6  0012               	return		;funcret
 10959   0059A8                     __end_of_quaterForward:
 10960                           	callstack 0
 10961                           
 10962 ;; *************** function _color_click_init *****************
 10963 ;; Defined at:
 10964 ;;		line 8 in file "color.c"
 10965 ;; Parameters:    Size  Location     Type
 10966 ;;		None
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;		None
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  1    wreg      void 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0, cstack
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10981 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10982 ;;Total ram usage:        1 bytes
 10983 ;; Hardware stack levels used: 1
 10984 ;; Hardware stack levels required when called: 4
 10985 ;; This function calls:
 10986 ;;		_I2C_2_Master_Init
 10987 ;;		_color_writetoaddr
 10988 ;; This function is called by:
 10989 ;;		_main
 10990 ;; This function uses a non-reentrant model
 10991 ;;
 10992                           
 10993                           	psect	text61
 10994   005B98                     __ptext61:
 10995                           	callstack 0
 10996   005B98                     _color_click_init:
 10997                           	callstack 26
 10998   005B98                     
 10999                           ;color.c: 11:     I2C_2_Master_Init();
 11000   005B98  EC5C  F030         	call	_I2C_2_Master_Init	;wreg free
 11001   005B9C                     
 11002                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
 11003   005B9C  0E01               	movlw	1
 11004   005B9E  6E03               	movwf	color_writetoaddr@value^0,c
 11005   005BA0  0E00               	movlw	0
 11006   005BA2  ECAB  F030         	call	_color_writetoaddr
 11007   005BA6                     
 11008                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
 11009   005BA6  0E3F               	movlw	63
 11010   005BA8  6E05               	movwf	??_color_click_init^0,c
 11011   005BAA  0E55               	movlw	85
 11012   005BAC                     u6117:
 11013   005BAC  2EE8               	decfsz	wreg,f,c
 11014   005BAE  D7FE               	bra	u6117
 11015   005BB0  2E05               	decfsz	??_color_click_init^0,f,c
 11016   005BB2  D7FC               	bra	u6117
 11017   005BB4  F000               	nop	
 11018   005BB6                     
 11019                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
 11020   005BB6  0E03               	movlw	3
 11021   005BB8  6E03               	movwf	color_writetoaddr@value^0,c
 11022   005BBA  0E00               	movlw	0
 11023   005BBC  ECAB  F030         	call	_color_writetoaddr
 11024   005BC0                     
 11025                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
 11026   005BC0  0ED5               	movlw	213
 11027   005BC2  6E03               	movwf	color_writetoaddr@value^0,c
 11028   005BC4  0E01               	movlw	1
 11029   005BC6  ECAB  F030         	call	_color_writetoaddr
 11030   005BCA                     
 11031                           ;color.c: 20:     color_writetoaddr(0x0F, 0x00);
 11032   005BCA  0E00               	movlw	0
 11033   005BCC  6E03               	movwf	color_writetoaddr@value^0,c
 11034   005BCE  0E0F               	movlw	15
 11035   005BD0  ECAB  F030         	call	_color_writetoaddr
 11036   005BD4                     
 11037                           ;color.c: 22:     TRISGbits.TRISG1 = 0;
 11038   005BD4  9287               	bcf	135,1,c	;volatile
 11039   005BD6                     
 11040                           ;color.c: 23:     TRISAbits.TRISA4 = 0;
 11041   005BD6  9881               	bcf	129,4,c	;volatile
 11042   005BD8                     
 11043                           ;color.c: 24:     TRISFbits.TRISF7 = 0;
 11044   005BD8  9E86               	bcf	134,7,c	;volatile
 11045   005BDA                     
 11046                           ;color.c: 26:     TRISDbits.TRISD3 = 0;
 11047   005BDA  9684               	bcf	132,3,c	;volatile
 11048   005BDC                     
 11049                           ;color.c: 27:     TRISDbits.TRISD4 = 0;
 11050   005BDC  9884               	bcf	132,4,c	;volatile
 11051   005BDE                     
 11052                           ;color.c: 29:     LATGbits.LATG1=0;
 11053   005BDE  927F               	bcf	127,1,c	;volatile
 11054   005BE0                     
 11055                           ;color.c: 30:     LATFbits.LATF7=0;
 11056   005BE0  9E7E               	bcf	126,7,c	;volatile
 11057   005BE2                     
 11058                           ;color.c: 31:     LATAbits.LATA4=0;
 11059   005BE2  9879               	bcf	121,4,c	;volatile
 11060   005BE4                     
 11061                           ;color.c: 33:     LATDbits.LATD3=0;
 11062   005BE4  967C               	bcf	124,3,c	;volatile
 11063   005BE6                     
 11064                           ;color.c: 34:     LATDbits.LATD4=0;
 11065   005BE6  987C               	bcf	124,4,c	;volatile
 11066   005BE8  0012               	return		;funcret
 11067   005BEA                     __end_of_color_click_init:
 11068                           	callstack 0
 11069                           
 11070 ;; *************** function _color_writetoaddr *****************
 11071 ;; Defined at:
 11072 ;;		line 42 in file "color.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;  address         1    wreg     unsigned char 
 11075 ;;  value           1    2[COMRAM] unsigned char 
 11076 ;; Auto vars:     Size  Location     Type
 11077 ;;  address         1    3[COMRAM] unsigned char 
 11078 ;; Return value:  Size  Location     Type
 11079 ;;                  1    wreg      void 
 11080 ;; Registers used:
 11081 ;;		wreg, status,2, status,0, cstack
 11082 ;; Tracked objects:
 11083 ;;		On entry : 0/0
 11084 ;;		On exit  : 0/0
 11085 ;;		Unchanged: 0/0
 11086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11087 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11090 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11091 ;;Total ram usage:        2 bytes
 11092 ;; Hardware stack levels used: 1
 11093 ;; Hardware stack levels required when called: 3
 11094 ;; This function calls:
 11095 ;;		_I2C_2_Master_Start
 11096 ;;		_I2C_2_Master_Stop
 11097 ;;		_I2C_2_Master_Write
 11098 ;; This function is called by:
 11099 ;;		_color_click_init
 11100 ;; This function uses a non-reentrant model
 11101 ;;
 11102                           
 11103                           	psect	text62
 11104   006156                     __ptext62:
 11105                           	callstack 0
 11106   006156                     _color_writetoaddr:
 11107                           	callstack 26
 11108                           
 11109                           ;incstack = 0
 11110                           ;color_writetoaddr@address stored from wreg
 11111   006156  6E04               	movwf	color_writetoaddr@address^0,c
 11112   006158                     
 11113                           ;color.c: 43:     I2C_2_Master_Start();
 11114   006158  EC02  F031         	call	_I2C_2_Master_Start	;wreg free
 11115                           
 11116                           ;color.c: 44:     I2C_2_Master_Write(0x52 | 0x00);
 11117   00615C  0E52               	movlw	82
 11118   00615E  ECE6  F030         	call	_I2C_2_Master_Write
 11119                           
 11120                           ;color.c: 45:     I2C_2_Master_Write(0x80 | address);
 11121   006162  5004               	movf	color_writetoaddr@address^0,w,c
 11122   006164  0980               	iorlw	128
 11123   006166  ECE6  F030         	call	_I2C_2_Master_Write
 11124                           
 11125                           ;color.c: 46:     I2C_2_Master_Write(value);
 11126   00616A  5003               	movf	color_writetoaddr@value^0,w,c
 11127   00616C  ECE6  F030         	call	_I2C_2_Master_Write
 11128                           
 11129                           ;color.c: 47:     I2C_2_Master_Stop();
 11130   006170  ECFD  F030         	call	_I2C_2_Master_Stop	;wreg free
 11131   006174  0012               	return		;funcret
 11132   006176                     __end_of_color_writetoaddr:
 11133                           	callstack 0
 11134                           
 11135 ;; *************** function _I2C_2_Master_Write *****************
 11136 ;; Defined at:
 11137 ;;		line 45 in file "i2c.c"
 11138 ;; Parameters:    Size  Location     Type
 11139 ;;  data_byte       1    wreg     unsigned char 
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  data_byte       1    1[COMRAM] unsigned char 
 11142 ;; Return value:  Size  Location     Type
 11143 ;;                  1    wreg      void 
 11144 ;; Registers used:
 11145 ;;		wreg, status,2, status,0, cstack
 11146 ;; Tracked objects:
 11147 ;;		On entry : 0/0
 11148 ;;		On exit  : 0/0
 11149 ;;		Unchanged: 0/0
 11150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11155 ;;Total ram usage:        1 bytes
 11156 ;; Hardware stack levels used: 1
 11157 ;; Hardware stack levels required when called: 2
 11158 ;; This function calls:
 11159 ;;		_I2C_2_Master_Idle
 11160 ;; This function is called by:
 11161 ;;		_color_writetoaddr
 11162 ;;		_color_read_lum
 11163 ;;		_color_read_Red
 11164 ;;		_color_read_Green
 11165 ;;		_color_read_Blue
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text63
 11170   0061CC                     __ptext63:
 11171                           	callstack 0
 11172   0061CC                     _I2C_2_Master_Write:
 11173                           	callstack 26
 11174                           
 11175                           ;incstack = 0
 11176                           ;I2C_2_Master_Write@data_byte stored from wreg
 11177   0061CC  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
 11178   0061CE                     
 11179                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
 11180   0061CE  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
 11181   0061D2                     
 11182                           ;i2c.c: 48:   SSP2BUF = data_byte;
 11183   0061D2  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
 11184   0061D6  0012               	return		;funcret
 11185   0061D8                     __end_of_I2C_2_Master_Write:
 11186                           	callstack 0
 11187                           
 11188 ;; *************** function _I2C_2_Master_Stop *****************
 11189 ;; Defined at:
 11190 ;;		line 39 in file "i2c.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;		None
 11193 ;; Auto vars:     Size  Location     Type
 11194 ;;		None
 11195 ;; Return value:  Size  Location     Type
 11196 ;;                  1    wreg      void 
 11197 ;; Registers used:
 11198 ;;		wreg, status,2, status,0, cstack
 11199 ;; Tracked objects:
 11200 ;;		On entry : 0/0
 11201 ;;		On exit  : 0/0
 11202 ;;		Unchanged: 0/0
 11203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11208 ;;Total ram usage:        0 bytes
 11209 ;; Hardware stack levels used: 1
 11210 ;; Hardware stack levels required when called: 2
 11211 ;; This function calls:
 11212 ;;		_I2C_2_Master_Idle
 11213 ;; This function is called by:
 11214 ;;		_color_writetoaddr
 11215 ;;		_color_read_lum
 11216 ;;		_color_read_Red
 11217 ;;		_color_read_Green
 11218 ;;		_color_read_Blue
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           	psect	text64
 11223   0061FA                     __ptext64:
 11224                           	callstack 0
 11225   0061FA                     _I2C_2_Master_Stop:
 11226                           	callstack 26
 11227   0061FA                     
 11228                           ;i2c.c: 41:   I2C_2_Master_Idle();
 11229   0061FA  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
 11230   0061FE                     
 11231                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
 11232   0061FE  010E               	movlb	14	; () banked
 11233   006200  85DA               	bsf	218,2,b	;volatile
 11234   006202                     
 11235                           ; BSR set to: 14
 11236   006202  0012               	return		;funcret
 11237   006204                     __end_of_I2C_2_Master_Stop:
 11238                           	callstack 0
 11239                           
 11240 ;; *************** function _I2C_2_Master_Start *****************
 11241 ;; Defined at:
 11242 ;;		line 27 in file "i2c.c"
 11243 ;; Parameters:    Size  Location     Type
 11244 ;;		None
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;		None
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  1    wreg      void 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0, cstack
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11260 ;;Total ram usage:        0 bytes
 11261 ;; Hardware stack levels used: 1
 11262 ;; Hardware stack levels required when called: 2
 11263 ;; This function calls:
 11264 ;;		_I2C_2_Master_Idle
 11265 ;; This function is called by:
 11266 ;;		_color_writetoaddr
 11267 ;;		_color_read_lum
 11268 ;;		_color_read_Red
 11269 ;;		_color_read_Green
 11270 ;;		_color_read_Blue
 11271 ;; This function uses a non-reentrant model
 11272 ;;
 11273                           
 11274                           	psect	text65
 11275   006204                     __ptext65:
 11276                           	callstack 0
 11277   006204                     _I2C_2_Master_Start:
 11278                           	callstack 26
 11279   006204                     
 11280                           ;i2c.c: 29:   I2C_2_Master_Idle();
 11281   006204  EC71  F030         	call	_I2C_2_Master_Idle	;wreg free
 11282   006208                     
 11283                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
 11284   006208  010E               	movlb	14	; () banked
 11285   00620A  81DA               	bsf	218,0,b	;volatile
 11286   00620C                     
 11287                           ; BSR set to: 14
 11288   00620C  0012               	return		;funcret
 11289   00620E                     __end_of_I2C_2_Master_Start:
 11290                           	callstack 0
 11291                           
 11292 ;; *************** function _I2C_2_Master_Idle *****************
 11293 ;; Defined at:
 11294 ;;		line 22 in file "i2c.c"
 11295 ;; Parameters:    Size  Location     Type
 11296 ;;		None
 11297 ;; Auto vars:     Size  Location     Type
 11298 ;;		None
 11299 ;; Return value:  Size  Location     Type
 11300 ;;                  1    wreg      void 
 11301 ;; Registers used:
 11302 ;;		wreg, status,2, status,0
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11310 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11312 ;;Total ram usage:        1 bytes
 11313 ;; Hardware stack levels used: 1
 11314 ;; Hardware stack levels required when called: 1
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_I2C_2_Master_Start
 11319 ;;		_I2C_2_Master_RepStart
 11320 ;;		_I2C_2_Master_Stop
 11321 ;;		_I2C_2_Master_Write
 11322 ;;		_I2C_2_Master_Read
 11323 ;; This function uses a non-reentrant model
 11324 ;;
 11325                           
 11326                           	psect	text66
 11327   0060E2                     __ptext66:
 11328                           	callstack 0
 11329   0060E2                     _I2C_2_Master_Idle:
 11330                           	callstack 26
 11331   0060E2                     l135:
 11332   0060E2  010E               	movlb	14	; () banked
 11333   0060E4  B5D8               	btfsc	216,2,b	;volatile
 11334   0060E6  EF77  F030         	goto	u4461
 11335   0060EA  EF79  F030         	goto	u4460
 11336   0060EE                     u4461:
 11337   0060EE  EF71  F030         	goto	l135
 11338   0060F2                     u4460:
 11339   0060F2                     
 11340                           ; BSR set to: 14
 11341   0060F2  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
 11342   0060F6  0E1F               	movlw	31
 11343   0060F8  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
 11344   0060FA  A4D8               	btfss	status,2,c
 11345   0060FC  EF82  F030         	goto	u4471
 11346   006100  EF84  F030         	goto	u4470
 11347   006104                     u4471:
 11348   006104  EF71  F030         	goto	l135
 11349   006108                     u4470:
 11350   006108                     
 11351                           ; BSR set to: 14
 11352   006108  0012               	return		;funcret
 11353   00610A                     __end_of_I2C_2_Master_Idle:
 11354                           	callstack 0
 11355                           
 11356 ;; *************** function _I2C_2_Master_Init *****************
 11357 ;; Defined at:
 11358 ;;		line 4 in file "i2c.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;		None
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;		None
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  1    wreg      void 
 11365 ;; Registers used:
 11366 ;;		wreg, status,2
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11376 ;;Total ram usage:        0 bytes
 11377 ;; Hardware stack levels used: 1
 11378 ;; Hardware stack levels required when called: 1
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_color_click_init
 11383 ;;		_main
 11384 ;; This function uses a non-reentrant model
 11385 ;;
 11386                           
 11387                           	psect	text67
 11388   0060B8                     __ptext67:
 11389                           	callstack 0
 11390   0060B8                     _I2C_2_Master_Init:
 11391                           	callstack 28
 11392   0060B8                     
 11393                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
 11394   0060B8  010E               	movlb	14	; () banked
 11395   0060BA  51D9               	movf	217,w,b	;volatile
 11396   0060BC  0BF0               	andlw	-16
 11397   0060BE  0908               	iorlw	8
 11398   0060C0  6FD9               	movwf	217,b	;volatile
 11399   0060C2                     
 11400                           ; BSR set to: 14
 11401                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
 11402   0060C2  8BD9               	bsf	217,5,b	;volatile
 11403                           
 11404                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
 11405   0060C4  0E9F               	movlw	159
 11406   0060C6  6FD6               	movwf	214,b	;volatile
 11407   0060C8                     
 11408                           ; BSR set to: 14
 11409                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
 11410   0060C8  8A84               	bsf	132,5,c	;volatile
 11411   0060CA                     
 11412                           ; BSR set to: 14
 11413                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
 11414   0060CA  8C84               	bsf	132,6,c	;volatile
 11415   0060CC                     
 11416                           ; BSR set to: 14
 11417                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
 11418   0060CC  9BA7               	bcf	167,5,b	;volatile
 11419   0060CE                     
 11420                           ; BSR set to: 14
 11421                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
 11422   0060CE  9DA7               	bcf	167,6,b	;volatile
 11423                           
 11424                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
 11425   0060D0  0E1D               	movlw	29
 11426   0060D2  6F1D               	movwf	29,b	;volatile
 11427                           
 11428                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
 11429   0060D4  0E1E               	movlw	30
 11430   0060D6  6F1C               	movwf	28,b	;volatile
 11431                           
 11432                           ;i2c.c: 18:   RD5PPS=0x1C;
 11433   0060D8  0E1C               	movlw	28
 11434   0060DA  6F6F               	movwf	111,b	;volatile
 11435                           
 11436                           ;i2c.c: 19:   RD6PPS=0x1B;
 11437   0060DC  0E1B               	movlw	27
 11438   0060DE  6F70               	movwf	112,b	;volatile
 11439   0060E0                     
 11440                           ; BSR set to: 14
 11441   0060E0  0012               	return		;funcret
 11442   0060E2                     __end_of_I2C_2_Master_Init:
 11443                           	callstack 0
 11444                           
 11445 ;; *************** function _Timer0_init *****************
 11446 ;; Defined at:
 11447 ;;		line 8 in file "timers.c"
 11448 ;; Parameters:    Size  Location     Type
 11449 ;;		None
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;		None
 11452 ;; Return value:  Size  Location     Type
 11453 ;;                  1    wreg      void 
 11454 ;; Registers used:
 11455 ;;		wreg, status,2
 11456 ;; Tracked objects:
 11457 ;;		On entry : 0/0
 11458 ;;		On exit  : 0/0
 11459 ;;		Unchanged: 0/0
 11460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11465 ;;Total ram usage:        0 bytes
 11466 ;; Hardware stack levels used: 1
 11467 ;; Hardware stack levels required when called: 1
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_main
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text68
 11476   006176                     __ptext68:
 11477                           	callstack 0
 11478   006176                     _Timer0_init:
 11479                           	callstack 29
 11480   006176                     
 11481                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
 11482   006176  50D6               	movf	214,w,c	;volatile
 11483   006178  0B1F               	andlw	-225
 11484   00617A  0940               	iorlw	64
 11485   00617C  6ED6               	movwf	214,c	;volatile
 11486   00617E                     
 11487                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
 11488   00617E  88D6               	bsf	214,4,c	;volatile
 11489                           
 11490                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1101;
 11491   006180  50D6               	movf	214,w,c	;volatile
 11492   006182  0BF0               	andlw	-16
 11493   006184  090D               	iorlw	13
 11494   006186  6ED6               	movwf	214,c	;volatile
 11495   006188                     
 11496                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
 11497   006188  88D5               	bsf	213,4,c	;volatile
 11498                           
 11499                           ;timers.c: 16:     TMR0H=0;
 11500   00618A  0E00               	movlw	0
 11501   00618C  6ED4               	movwf	212,c	;volatile
 11502                           
 11503                           ;timers.c: 17:     TMR0L=0;
 11504   00618E  0E00               	movlw	0
 11505   006190  6ED3               	movwf	211,c	;volatile
 11506   006192                     
 11507                           ;timers.c: 18:     T0CON0bits.T0EN=0;
 11508   006192  9ED5               	bcf	213,7,c	;volatile
 11509   006194  0012               	return		;funcret
 11510   006196                     __end_of_Timer0_init:
 11511                           	callstack 0
 11512                           
 11513 ;; *************** function _LED_init *****************
 11514 ;; Defined at:
 11515 ;;		line 6 in file "LED_buttons.c"
 11516 ;; Parameters:    Size  Location     Type
 11517 ;;		None
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      void 
 11522 ;; Registers used:
 11523 ;;		None
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11533 ;;Total ram usage:        0 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 1
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_main
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           	psect	text69
 11544   00610A                     __ptext69:
 11545                           	callstack 0
 11546   00610A                     _LED_init:
 11547                           	callstack 29
 11548   00610A                     
 11549                           ;LED_buttons.c: 10:     TRISGbits.TRISG1 = 0;
 11550   00610A  9287               	bcf	135,1,c	;volatile
 11551                           
 11552                           ;LED_buttons.c: 11:     TRISAbits.TRISA4 = 0;
 11553   00610C  9881               	bcf	129,4,c	;volatile
 11554                           
 11555                           ;LED_buttons.c: 12:     TRISFbits.TRISF7 = 0;
 11556   00610E  9E86               	bcf	134,7,c	;volatile
 11557                           
 11558                           ;LED_buttons.c: 14:     LATGbits.LATG1=1;
 11559   006110  827F               	bsf	127,1,c	;volatile
 11560                           
 11561                           ;LED_buttons.c: 15:     LATAbits.LATA4=1;
 11562   006112  8879               	bsf	121,4,c	;volatile
 11563                           
 11564                           ;LED_buttons.c: 16:     LATFbits.LATF7=1;
 11565   006114  8E7E               	bsf	126,7,c	;volatile
 11566                           
 11567                           ;LED_buttons.c: 20:     LATDbits.LATD7=0;
 11568   006116  9E7C               	bcf	124,7,c	;volatile
 11569                           
 11570                           ;LED_buttons.c: 21:     TRISDbits.TRISD7=0;
 11571   006118  9E84               	bcf	132,7,c	;volatile
 11572                           
 11573                           ;LED_buttons.c: 22:     LATHbits.LATH3=0;
 11574   00611A  9680               	bcf	128,3,c	;volatile
 11575                           
 11576                           ;LED_buttons.c: 23:     TRISHbits.TRISH3=0;
 11577   00611C  9688               	bcf	136,3,c	;volatile
 11578                           
 11579                           ;LED_buttons.c: 28:     LATHbits.LATH0=0;
 11580   00611E  9080               	bcf	128,0,c	;volatile
 11581                           
 11582                           ;LED_buttons.c: 29:     TRISHbits.TRISH0=0;
 11583   006120  9088               	bcf	136,0,c	;volatile
 11584                           
 11585                           ;LED_buttons.c: 31:     LATFbits.LATF0=0;
 11586   006122  907E               	bcf	126,0,c	;volatile
 11587                           
 11588                           ;LED_buttons.c: 32:     TRISFbits.TRISF0=0;
 11589   006124  9086               	bcf	134,0,c	;volatile
 11590                           
 11591                           ;LED_buttons.c: 34:     LATDbits.LATD4=0;
 11592   006126  987C               	bcf	124,4,c	;volatile
 11593                           
 11594                           ;LED_buttons.c: 35:     TRISDbits.TRISD4=0;
 11595   006128  9884               	bcf	132,4,c	;volatile
 11596                           
 11597                           ;LED_buttons.c: 38:     LATDbits.LATD3=0;
 11598   00612A  967C               	bcf	124,3,c	;volatile
 11599                           
 11600                           ;LED_buttons.c: 39:     TRISDbits.TRISD3=0;
 11601   00612C  9684               	bcf	132,3,c	;volatile
 11602   00612E  0012               	return		;funcret
 11603   006130                     __end_of_LED_init:
 11604                           	callstack 0
 11605                           
 11606 ;; *************** function _Interrupts_init *****************
 11607 ;; Defined at:
 11608 ;;		line 9 in file "interrupts.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;		None
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;		None
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		None
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;Total ram usage:        0 bytes
 11627 ;; Hardware stack levels used: 1
 11628 ;; Hardware stack levels required when called: 1
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_main
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text70
 11637   0061D8                     __ptext70:
 11638                           	callstack 0
 11639   0061D8                     _Interrupts_init:
 11640                           	callstack 29
 11641   0061D8                     
 11642                           ;interrupts.c: 11:     INTCONbits.IPEN=0;
 11643   0061D8  9AF2               	bcf	242,5,c	;volatile
 11644                           
 11645                           ;interrupts.c: 12:     INTCONbits.PEIE=0;
 11646   0061DA  9CF2               	bcf	242,6,c	;volatile
 11647                           
 11648                           ;interrupts.c: 13:     INTCONbits.GIE=1;
 11649   0061DC  8EF2               	bsf	242,7,c	;volatile
 11650                           
 11651                           ;interrupts.c: 14:     PIE0bits.TMR0IE=1;
 11652   0061DE  010E               	movlb	14	; () banked
 11653   0061E0  8B29               	bsf	41,5,b	;volatile
 11654   0061E2                     
 11655                           ; BSR set to: 14
 11656   0061E2  0012               	return		;funcret
 11657   0061E4                     __end_of_Interrupts_init:
 11658                           	callstack 0
 11659                           
 11660 ;; *************** function _Forwardhalfblock *****************
 11661 ;; Defined at:
 11662 ;;		line 253 in file "dc_motor.c"
 11663 ;; Parameters:    Size  Location     Type
 11664 ;;  mL              2   25[COMRAM] PTR struct DC_motor
 11665 ;;		 -> motorL(9), 
 11666 ;;  mR              2   27[COMRAM] PTR struct DC_motor
 11667 ;;		 -> motorR(9), 
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;		None
 11670 ;; Return value:  Size  Location     Type
 11671 ;;                  1    wreg      void 
 11672 ;; Registers used:
 11673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11674 ;; Tracked objects:
 11675 ;;		On entry : 0/0
 11676 ;;		On exit  : 0/0
 11677 ;;		Unchanged: 0/0
 11678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11679 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11682 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11683 ;;Total ram usage:        6 bytes
 11684 ;; Hardware stack levels used: 1
 11685 ;; Hardware stack levels required when called: 4
 11686 ;; This function calls:
 11687 ;;		_fullSpeedAhead
 11688 ;;		_stop
 11689 ;; This function is called by:
 11690 ;;		_main
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	text71
 11695   005846                     __ptext71:
 11696                           	callstack 0
 11697   005846                     _Forwardhalfblock:
 11698                           	callstack 26
 11699   005846                     
 11700                           ;dc_motor.c: 254:     fullSpeedAhead(mL,mR);
 11701   005846  C01A  F014         	movff	Forwardhalfblock@mL,fullSpeedAhead@mL
 11702   00584A  C01B  F015         	movff	Forwardhalfblock@mL+1,fullSpeedAhead@mL+1
 11703   00584E  C01C  F016         	movff	Forwardhalfblock@mR,fullSpeedAhead@mR
 11704   005852  C01D  F017         	movff	Forwardhalfblock@mR+1,fullSpeedAhead@mR+1
 11705   005856  ECDE  F028         	call	_fullSpeedAhead	;wreg free
 11706   00585A                     
 11707                           ;dc_motor.c: 255:     _delay((unsigned long)((RunOneBlockTime/2)*(64000000/4000.0)));
 11708   00585A  0E2B               	movlw	43
 11709   00585C  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11710   00585E  0E9D               	movlw	157
 11711   005860  6E1E               	movwf	??_Forwardhalfblock^0,c
 11712   005862  0EF9               	movlw	249
 11713   005864                     u6127:
 11714   005864  2EE8               	decfsz	wreg,f,c
 11715   005866  D7FE               	bra	u6127
 11716   005868  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11717   00586A  D7FC               	bra	u6127
 11718   00586C  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11719   00586E  D7FA               	bra	u6127
 11720   005870  F000               	nop	
 11721   005872                     
 11722                           ;dc_motor.c: 256:     stop(&motorL, &motorR);
 11723   005872  0E61               	movlw	low _motorL
 11724   005874  6E14               	movwf	stop@mL^0,c
 11725   005876  0E01               	movlw	high _motorL
 11726   005878  6E15               	movwf	(stop@mL+1)^0,c
 11727   00587A  0E58               	movlw	low _motorR
 11728   00587C  6E16               	movwf	stop@mR^0,c
 11729   00587E  0E01               	movlw	high _motorR
 11730   005880  6E17               	movwf	(stop@mR+1)^0,c
 11731   005882  EC71  F029         	call	_stop	;wreg free
 11732                           
 11733                           ;dc_motor.c: 257:     _delay((unsigned long)((50)*(64000000/4000.0)));
 11734   005886  0E05               	movlw	5
 11735   005888  6E1F               	movwf	(??_Forwardhalfblock+1)^0,c
 11736   00588A  0E0F               	movlw	15
 11737   00588C  6E1E               	movwf	??_Forwardhalfblock^0,c
 11738   00588E  0EF1               	movlw	241
 11739   005890                     u6137:
 11740   005890  2EE8               	decfsz	wreg,f,c
 11741   005892  D7FE               	bra	u6137
 11742   005894  2E1E               	decfsz	??_Forwardhalfblock^0,f,c
 11743   005896  D7FC               	bra	u6137
 11744   005898  2E1F               	decfsz	(??_Forwardhalfblock+1)^0,f,c
 11745   00589A  D7FA               	bra	u6137
 11746   00589C  F000               	nop	
 11747   00589E  0012               	return		;funcret
 11748   0058A0                     __end_of_Forwardhalfblock:
 11749                           	callstack 0
 11750                           
 11751 ;; *************** function _stop *****************
 11752 ;; Defined at:
 11753 ;;		line 94 in file "dc_motor.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11756 ;;		 -> motorL(9), 
 11757 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11758 ;;		 -> motorR(9), 
 11759 ;; Auto vars:     Size  Location     Type
 11760 ;;		None
 11761 ;; Return value:  Size  Location     Type
 11762 ;;                  1    wreg      void 
 11763 ;; Registers used:
 11764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11765 ;; Tracked objects:
 11766 ;;		On entry : 0/0
 11767 ;;		On exit  : 0/0
 11768 ;;		Unchanged: 0/0
 11769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11774 ;;Total ram usage:        6 bytes
 11775 ;; Hardware stack levels used: 1
 11776 ;; Hardware stack levels required when called: 3
 11777 ;; This function calls:
 11778 ;;		_setMotorPWM
 11779 ;; This function is called by:
 11780 ;;		_turnRight45
 11781 ;;		_turnLeft45
 11782 ;;		_reverseDetect
 11783 ;;		_reverseOneBlock
 11784 ;;		_ForwardOneBlock
 11785 ;;		_Forwardhalfblock
 11786 ;;		_quaterForward
 11787 ;;		_Backhalfblock
 11788 ;;		_RetryMove
 11789 ;;		_go_Home
 11790 ;;		_homeReverse
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           	psect	text72
 11795   0052E2                     __ptext72:
 11796                           	callstack 0
 11797   0052E2                     _stop:
 11798                           	callstack 25
 11799   0052E2                     
 11800                           ;dc_motor.c: 94: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 95: {;dc
      +                          _motor.c: 96:     while (mL->power >0 || mR->power >0){
 11801   0052E2  EF97  F029         	goto	l4144
 11802   0052E6                     l4136:
 11803                           
 11804                           ;dc_motor.c: 98:         mL->power-=10;
 11805   0052E6  C014  FFD9         	movff	stop@mL,fsr2l
 11806   0052EA  C015  FFDA         	movff	stop@mL+1,fsr2h
 11807   0052EE  0E0A               	movlw	10
 11808   0052F0  5EDF               	subwf	indf2,f,c
 11809                           
 11810                           ;dc_motor.c: 99:         mR->power-=10;
 11811   0052F2  C016  FFD9         	movff	stop@mR,fsr2l
 11812   0052F6  C017  FFDA         	movff	stop@mR+1,fsr2h
 11813   0052FA  0E0A               	movlw	10
 11814   0052FC  5EDF               	subwf	indf2,f,c
 11815   0052FE                     
 11816                           ;dc_motor.c: 104:         setMotorPWM(mL);
 11817   0052FE  C014  F00E         	movff	stop@mL,setMotorPWM@m
 11818   005302  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
 11819   005306  EC40  F023         	call	_setMotorPWM	;wreg free
 11820   00530A                     
 11821                           ;dc_motor.c: 105:         setMotorPWM(mR);
 11822   00530A  C016  F00E         	movff	stop@mR,setMotorPWM@m
 11823   00530E  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
 11824   005312  EC40  F023         	call	_setMotorPWM	;wreg free
 11825   005316                     
 11826                           ;dc_motor.c: 107:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11827   005316  0E02               	movlw	2
 11828   005318  6E19               	movwf	(??_stop+1)^0,c
 11829   00531A  0EA0               	movlw	160
 11830   00531C  6E18               	movwf	??_stop^0,c
 11831   00531E  0E92               	movlw	146
 11832   005320                     u6147:
 11833   005320  2EE8               	decfsz	wreg,f,c
 11834   005322  D7FE               	bra	u6147
 11835   005324  2E18               	decfsz	??_stop^0,f,c
 11836   005326  D7FC               	bra	u6147
 11837   005328  2E19               	decfsz	(??_stop+1)^0,f,c
 11838   00532A  D7FA               	bra	u6147
 11839   00532C  D000               	nop2	
 11840   00532E                     l4144:
 11841                           
 11842                           ;dc_motor.c: 96:     while (mL->power >0 || mR->power >0){
 11843   00532E  C014  FFD9         	movff	stop@mL,fsr2l
 11844   005332  C015  FFDA         	movff	stop@mL+1,fsr2h
 11845   005336  50DF               	movf	indf2,w,c
 11846   005338  A4D8               	btfss	status,2,c
 11847   00533A  EFA1  F029         	goto	u3431
 11848   00533E  EFA3  F029         	goto	u3430
 11849   005342                     u3431:
 11850   005342  EF73  F029         	goto	l4136
 11851   005346                     u3430:
 11852   005346  C016  FFD9         	movff	stop@mR,fsr2l
 11853   00534A  C017  FFDA         	movff	stop@mR+1,fsr2h
 11854   00534E  50DF               	movf	indf2,w,c
 11855   005350  A4D8               	btfss	status,2,c
 11856   005352  EFAD  F029         	goto	u3441
 11857   005356  EFAF  F029         	goto	u3440
 11858   00535A                     u3441:
 11859   00535A  EF73  F029         	goto	l4136
 11860   00535E                     u3440:
 11861   00535E  0012               	return		;funcret
 11862   005360                     __end_of_stop:
 11863                           	callstack 0
 11864                           
 11865 ;; *************** function _fullSpeedAhead *****************
 11866 ;; Defined at:
 11867 ;;		line 148 in file "dc_motor.c"
 11868 ;; Parameters:    Size  Location     Type
 11869 ;;  mL              2   19[COMRAM] PTR struct DC_motor
 11870 ;;		 -> motorL(9), 
 11871 ;;  mR              2   21[COMRAM] PTR struct DC_motor
 11872 ;;		 -> motorR(9), 
 11873 ;; Auto vars:     Size  Location     Type
 11874 ;;		None
 11875 ;; Return value:  Size  Location     Type
 11876 ;;                  1    wreg      void 
 11877 ;; Registers used:
 11878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11879 ;; Tracked objects:
 11880 ;;		On entry : 0/0
 11881 ;;		On exit  : 0/0
 11882 ;;		Unchanged: 0/0
 11883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11888 ;;Total ram usage:        6 bytes
 11889 ;; Hardware stack levels used: 1
 11890 ;; Hardware stack levels required when called: 3
 11891 ;; This function calls:
 11892 ;;		_setMotorPWM
 11893 ;; This function is called by:
 11894 ;;		_main
 11895 ;;		_ForwardOneBlock
 11896 ;;		_Forwardhalfblock
 11897 ;;		_quaterForward
 11898 ;;		_RetryMove
 11899 ;; This function uses a non-reentrant model
 11900 ;;
 11901                           
 11902                           	psect	text73
 11903   0051BC                     __ptext73:
 11904                           	callstack 0
 11905   0051BC                     _fullSpeedAhead:
 11906                           	callstack 24
 11907   0051BC                     
 11908                           ;dc_motor.c: 148: void fullSpeedAhead(struct DC_motor *mL, struct DC_motor *mR);dc_motor
      +                          .c: 149: {;dc_motor.c: 151:     mL->direction =1;
 11909   0051BC  EE20 F001          	lfsr	2,1
 11910   0051C0  5014               	movf	fullSpeedAhead@mL^0,w,c
 11911   0051C2  26D9               	addwf	fsr2l,f,c
 11912   0051C4  5015               	movf	(fullSpeedAhead@mL+1)^0,w,c
 11913   0051C6  22DA               	addwfc	fsr2h,f,c
 11914   0051C8  0E01               	movlw	1
 11915   0051CA  6EDF               	movwf	indf2,c
 11916                           
 11917                           ;dc_motor.c: 152:     mR->direction =1;
 11918   0051CC  EE20 F001          	lfsr	2,1
 11919   0051D0  5016               	movf	fullSpeedAhead@mR^0,w,c
 11920   0051D2  26D9               	addwf	fsr2l,f,c
 11921   0051D4  5017               	movf	(fullSpeedAhead@mR+1)^0,w,c
 11922   0051D6  22DA               	addwfc	fsr2h,f,c
 11923   0051D8  0E01               	movlw	1
 11924   0051DA  6EDF               	movwf	indf2,c
 11925                           
 11926                           ;dc_motor.c: 153:     while (mL->power < power && mR->power < power){
 11927   0051DC  EF14  F029         	goto	l4130
 11928   0051E0                     l4122:
 11929                           
 11930                           ;dc_motor.c: 155:         mL->power+=10;
 11931   0051E0  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11932   0051E4  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11933   0051E8  0E0A               	movlw	10
 11934   0051EA  26DF               	addwf	indf2,f,c
 11935                           
 11936                           ;dc_motor.c: 156:         mR->power+=10;
 11937   0051EC  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11938   0051F0  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11939   0051F4  0E0A               	movlw	10
 11940   0051F6  26DF               	addwf	indf2,f,c
 11941   0051F8                     
 11942                           ;dc_motor.c: 158:         setMotorPWM(mL);
 11943   0051F8  C014  F00E         	movff	fullSpeedAhead@mL,setMotorPWM@m
 11944   0051FC  C015  F00F         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
 11945   005200  EC40  F023         	call	_setMotorPWM	;wreg free
 11946   005204                     
 11947                           ;dc_motor.c: 159:         setMotorPWM(mR);
 11948   005204  C016  F00E         	movff	fullSpeedAhead@mR,setMotorPWM@m
 11949   005208  C017  F00F         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
 11950   00520C  EC40  F023         	call	_setMotorPWM	;wreg free
 11951   005210                     
 11952                           ;dc_motor.c: 162:         _delay((unsigned long)((20)*(64000000/4000.0)));
 11953   005210  0E02               	movlw	2
 11954   005212  6E19               	movwf	(??_fullSpeedAhead+1)^0,c
 11955   005214  0EA0               	movlw	160
 11956   005216  6E18               	movwf	??_fullSpeedAhead^0,c
 11957   005218  0E92               	movlw	146
 11958   00521A                     u6157:
 11959   00521A  2EE8               	decfsz	wreg,f,c
 11960   00521C  D7FE               	bra	u6157
 11961   00521E  2E18               	decfsz	??_fullSpeedAhead^0,f,c
 11962   005220  D7FC               	bra	u6157
 11963   005222  2E19               	decfsz	(??_fullSpeedAhead+1)^0,f,c
 11964   005224  D7FA               	bra	u6157
 11965   005226  D000               	nop2	
 11966   005228                     l4130:
 11967   005228  C014  FFD9         	movff	fullSpeedAhead@mL,fsr2l
 11968   00522C  C015  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
 11969   005230  0E32               	movlw	50
 11970   005232  60DF               	cpfslt	indf2,c
 11971   005234  EF1E  F029         	goto	u3411
 11972   005238  EF20  F029         	goto	u3410
 11973   00523C                     u3411:
 11974   00523C  EF2C  F029         	goto	l452
 11975   005240                     u3410:
 11976   005240  C016  FFD9         	movff	fullSpeedAhead@mR,fsr2l
 11977   005244  C017  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
 11978   005248  0E31               	movlw	49
 11979   00524A  64DF               	cpfsgt	indf2,c
 11980   00524C  EF2A  F029         	goto	u3421
 11981   005250  EF2C  F029         	goto	u3420
 11982   005254                     u3421:
 11983   005254  EFF0  F028         	goto	l4122
 11984   005258                     u3420:
 11985   005258                     l452:
 11986   005258  0012               	return		;funcret
 11987   00525A                     __end_of_fullSpeedAhead:
 11988                           	callstack 0
 11989                           
 11990 ;; *************** function _setMotorPWM *****************
 11991 ;; Defined at:
 11992 ;;		line 69 in file "dc_motor.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;  m               2   13[COMRAM] PTR struct DC_motor
 11995 ;;		 -> motorR(9), motorL(9), 
 11996 ;; Auto vars:     Size  Location     Type
 11997 ;;  negDuty         1   18[COMRAM] unsigned char 
 11998 ;;  posDuty         1   17[COMRAM] unsigned char 
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      void 
 12001 ;; Registers used:
 12002 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12009 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;Total ram usage:        6 bytes
 12013 ;; Hardware stack levels used: 1
 12014 ;; Hardware stack levels required when called: 2
 12015 ;; This function calls:
 12016 ;;		___lwdiv
 12017 ;;		___wmul
 12018 ;; This function is called by:
 12019 ;;		_stop
 12020 ;;		_turnLeft
 12021 ;;		_turnRight
 12022 ;;		_fullSpeedAhead
 12023 ;;		_timed_forward
 12024 ;;		_fullSpeedBack
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           	psect	text74
 12029   004680                     __ptext74:
 12030                           	callstack 0
 12031   004680                     _setMotorPWM:
 12032                           	callstack 25
 12033   004680                     
 12034                           ;dc_motor.c: 69: void setMotorPWM(struct DC_motor *m);dc_motor.c: 70: {;dc_motor.c: 71: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 73:     if(m->brakemode) {
 12035   004680  EE20 F002          	lfsr	2,2
 12036   004684  500E               	movf	setMotorPWM@m^0,w,c
 12037   004686  26D9               	addwf	fsr2l,f,c
 12038   004688  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12039   00468A  22DA               	addwfc	fsr2h,f,c
 12040   00468C  50DF               	movf	indf2,w,c
 12041   00468E  B4D8               	btfsc	status,2,c
 12042   004690  EF4C  F023         	goto	u2991
 12043   004694  EF4E  F023         	goto	u2990
 12044   004698                     u2991:
 12045   004698  EF82  F023         	goto	l3900
 12046   00469C                     u2990:
 12047   00469C                     
 12048                           ;dc_motor.c: 74:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
 12049   00469C  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12050   0046A0  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12051   0046A4  50DF               	movf	indf2,w,c
 12052   0046A6  6E10               	movwf	??_setMotorPWM^0,c
 12053   0046A8  5010               	movf	??_setMotorPWM^0,w,c
 12054   0046AA  6E01               	movwf	___wmul@multiplier^0,c
 12055   0046AC  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12056   0046AE  EE20 F003          	lfsr	2,3
 12057   0046B2  500E               	movf	setMotorPWM@m^0,w,c
 12058   0046B4  26D9               	addwf	fsr2l,f,c
 12059   0046B6  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12060   0046B8  22DA               	addwfc	fsr2h,f,c
 12061   0046BA  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12062   0046BE  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12063   0046C2  EC98  F030         	call	___wmul	;wreg free
 12064   0046C6  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12065   0046CA  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12066   0046CE  0E00               	movlw	0
 12067   0046D0  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12068   0046D2  0E64               	movlw	100
 12069   0046D4  6E09               	movwf	___lwdiv@divisor^0,c
 12070   0046D6  EC2A  F02A         	call	___lwdiv	;wreg free
 12071   0046DA  EE20 F003          	lfsr	2,3
 12072   0046DE  500E               	movf	setMotorPWM@m^0,w,c
 12073   0046E0  26D9               	addwf	fsr2l,f,c
 12074   0046E2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12075   0046E4  22DA               	addwfc	fsr2h,f,c
 12076   0046E6  50DF               	movf	indf2,w,c
 12077   0046E8  6E11               	movwf	(??_setMotorPWM+1)^0,c
 12078   0046EA  5007               	movf	?___lwdiv^0,w,c
 12079   0046EC  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
 12080   0046EE  6E12               	movwf	setMotorPWM@posDuty^0,c
 12081   0046F0                     
 12082                           ;dc_motor.c: 75:         negDuty=m->PWMperiod;
 12083   0046F0  EE20 F003          	lfsr	2,3
 12084   0046F4  500E               	movf	setMotorPWM@m^0,w,c
 12085   0046F6  26D9               	addwf	fsr2l,f,c
 12086   0046F8  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12087   0046FA  22DA               	addwfc	fsr2h,f,c
 12088   0046FC  50DF               	movf	indf2,w,c
 12089   0046FE  6E13               	movwf	setMotorPWM@negDuty^0,c
 12090                           
 12091                           ;dc_motor.c: 76:     }
 12092   004700  EFA5  F023         	goto	l3904
 12093   004704                     l3900:
 12094                           
 12095                           ;dc_motor.c: 78:         posDuty=0;
 12096   004704  0E00               	movlw	0
 12097   004706  6E12               	movwf	setMotorPWM@posDuty^0,c
 12098   004708                     
 12099                           ;dc_motor.c: 79:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
 12100   004708  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
 12101   00470C  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
 12102   004710  50DF               	movf	indf2,w,c
 12103   004712  6E10               	movwf	??_setMotorPWM^0,c
 12104   004714  5010               	movf	??_setMotorPWM^0,w,c
 12105   004716  6E01               	movwf	___wmul@multiplier^0,c
 12106   004718  6A02               	clrf	(___wmul@multiplier+1)^0,c
 12107   00471A  EE20 F003          	lfsr	2,3
 12108   00471E  500E               	movf	setMotorPWM@m^0,w,c
 12109   004720  26D9               	addwf	fsr2l,f,c
 12110   004722  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12111   004724  22DA               	addwfc	fsr2h,f,c
 12112   004726  CFDE F003          	movff	postinc2,___wmul@multiplicand
 12113   00472A  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
 12114   00472E  EC98  F030         	call	___wmul	;wreg free
 12115   004732  C001  F007         	movff	?___wmul,___lwdiv@dividend
 12116   004736  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
 12117   00473A  0E00               	movlw	0
 12118   00473C  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
 12119   00473E  0E64               	movlw	100
 12120   004740  6E09               	movwf	___lwdiv@divisor^0,c
 12121   004742  EC2A  F02A         	call	___lwdiv	;wreg free
 12122   004746  5007               	movf	?___lwdiv^0,w,c
 12123   004748  6E13               	movwf	setMotorPWM@negDuty^0,c
 12124   00474A                     l3904:
 12125                           
 12126                           ;dc_motor.c: 82:     if (m->direction) {
 12127   00474A  EE20 F001          	lfsr	2,1
 12128   00474E  500E               	movf	setMotorPWM@m^0,w,c
 12129   004750  26D9               	addwf	fsr2l,f,c
 12130   004752  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12131   004754  22DA               	addwfc	fsr2h,f,c
 12132   004756  50DF               	movf	indf2,w,c
 12133   004758  B4D8               	btfsc	status,2,c
 12134   00475A  EFB1  F023         	goto	u3001
 12135   00475E  EFB3  F023         	goto	u3000
 12136   004762                     u3001:
 12137   004762  EFD5  F023         	goto	l3908
 12138   004766                     u3000:
 12139   004766                     
 12140                           ;dc_motor.c: 84:         *(m->posDutyHighByte)=posDuty;
 12141   004766  EE20 F005          	lfsr	2,5
 12142   00476A  500E               	movf	setMotorPWM@m^0,w,c
 12143   00476C  26D9               	addwf	fsr2l,f,c
 12144   00476E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12145   004770  22DA               	addwfc	fsr2h,f,c
 12146   004772  CFDE F010          	movff	postinc2,??_setMotorPWM
 12147   004776  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12148   00477A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12149   00477E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12150   004782  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12151                           
 12152                           ;dc_motor.c: 85:         *(m->negDutyHighByte)=negDuty;
 12153   004786  EE20 F007          	lfsr	2,7
 12154   00478A  500E               	movf	setMotorPWM@m^0,w,c
 12155   00478C  26D9               	addwf	fsr2l,f,c
 12156   00478E  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12157   004790  22DA               	addwfc	fsr2h,f,c
 12158   004792  CFDE F010          	movff	postinc2,??_setMotorPWM
 12159   004796  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12160   00479A  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12161   00479E  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12162   0047A2  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12163                           
 12164                           ;dc_motor.c: 87:     } else {
 12165   0047A6  EFF5  F023         	goto	l422
 12166   0047AA                     l3908:
 12167                           
 12168                           ;dc_motor.c: 88:         *(m->posDutyHighByte)=negDuty;
 12169   0047AA  EE20 F005          	lfsr	2,5
 12170   0047AE  500E               	movf	setMotorPWM@m^0,w,c
 12171   0047B0  26D9               	addwf	fsr2l,f,c
 12172   0047B2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12173   0047B4  22DA               	addwfc	fsr2h,f,c
 12174   0047B6  CFDE F010          	movff	postinc2,??_setMotorPWM
 12175   0047BA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12176   0047BE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12177   0047C2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12178   0047C6  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
 12179                           
 12180                           ;dc_motor.c: 89:         *(m->negDutyHighByte)=posDuty;
 12181   0047CA  EE20 F007          	lfsr	2,7
 12182   0047CE  500E               	movf	setMotorPWM@m^0,w,c
 12183   0047D0  26D9               	addwf	fsr2l,f,c
 12184   0047D2  500F               	movf	(setMotorPWM@m+1)^0,w,c
 12185   0047D4  22DA               	addwfc	fsr2h,f,c
 12186   0047D6  CFDE F010          	movff	postinc2,??_setMotorPWM
 12187   0047DA  CFDD F011          	movff	postdec2,??_setMotorPWM+1
 12188   0047DE  C010  FFD9         	movff	??_setMotorPWM,fsr2l
 12189   0047E2  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
 12190   0047E6  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
 12191   0047EA                     l422:
 12192   0047EA  0012               	return		;funcret
 12193   0047EC                     __end_of_setMotorPWM:
 12194                           	callstack 0
 12195                           
 12196 ;; *************** function ___wmul *****************
 12197 ;; Defined at:
 12198 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  multiplier      2    0[COMRAM] unsigned int 
 12201 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12202 ;; Auto vars:     Size  Location     Type
 12203 ;;  product         2    4[COMRAM] unsigned int 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  2    0[COMRAM] unsigned int 
 12206 ;; Registers used:
 12207 ;;		wreg, status,2, status,0, prodl, prodh
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12213 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12216 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12217 ;;Total ram usage:        6 bytes
 12218 ;; Hardware stack levels used: 1
 12219 ;; Hardware stack levels required when called: 1
 12220 ;; This function calls:
 12221 ;;		Nothing
 12222 ;; This function is called by:
 12223 ;;		_setMotorPWM
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           	psect	text75
 12228   006130                     __ptext75:
 12229                           	callstack 0
 12230   006130                     ___wmul:
 12231                           	callstack 25
 12232   006130  5001               	movf	___wmul@multiplier^0,w,c
 12233   006132  0203               	mulwf	___wmul@multiplicand^0,c
 12234   006134  CFF3 F005          	movff	prodl,___wmul@product
 12235   006138  CFF4 F006          	movff	prodh,___wmul@product+1
 12236   00613C  5001               	movf	___wmul@multiplier^0,w,c
 12237   00613E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 12238   006140  50F3               	movf	243,w,c
 12239   006142  2606               	addwf	(___wmul@product+1)^0,f,c
 12240   006144  5002               	movf	(___wmul@multiplier+1)^0,w,c
 12241   006146  0203               	mulwf	___wmul@multiplicand^0,c
 12242   006148  50F3               	movf	243,w,c
 12243   00614A  2606               	addwf	(___wmul@product+1)^0,f,c
 12244   00614C  C005  F001         	movff	___wmul@product,?___wmul
 12245   006150  C006  F002         	movff	___wmul@product+1,?___wmul+1
 12246   006154  0012               	return		;funcret
 12247   006156                     __end_of___wmul:
 12248                           	callstack 0
 12249                           
 12250 ;; *************** function ___lwdiv *****************
 12251 ;; Defined at:
 12252 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
 12253 ;; Parameters:    Size  Location     Type
 12254 ;;  dividend        2    6[COMRAM] unsigned int 
 12255 ;;  divisor         2    8[COMRAM] unsigned int 
 12256 ;; Auto vars:     Size  Location     Type
 12257 ;;  quotient        2   10[COMRAM] unsigned int 
 12258 ;;  counter         1   12[COMRAM] unsigned char 
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  2    6[COMRAM] unsigned int 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2, status,0
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12271 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12272 ;;Total ram usage:        7 bytes
 12273 ;; Hardware stack levels used: 1
 12274 ;; Hardware stack levels required when called: 1
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_setMotorPWM
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text76
 12283   005454                     __ptext76:
 12284                           	callstack 0
 12285   005454                     ___lwdiv:
 12286                           	callstack 25
 12287   005454  0E00               	movlw	0
 12288   005456  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
 12289   005458  0E00               	movlw	0
 12290   00545A  6E0B               	movwf	___lwdiv@quotient^0,c
 12291   00545C  5009               	movf	___lwdiv@divisor^0,w,c
 12292   00545E  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
 12293   005460  B4D8               	btfsc	status,2,c
 12294   005462  EF35  F02A         	goto	u2921
 12295   005466  EF37  F02A         	goto	u2920
 12296   00546A                     u2921:
 12297   00546A  EF5F  F02A         	goto	l1248
 12298   00546E                     u2920:
 12299   00546E  0E01               	movlw	1
 12300   005470  6E0D               	movwf	___lwdiv@counter^0,c
 12301   005472  EF3F  F02A         	goto	l3866
 12302   005476                     l3864:
 12303   005476  90D8               	bcf	status,0,c
 12304   005478  3609               	rlcf	___lwdiv@divisor^0,f,c
 12305   00547A  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
 12306   00547C  2A0D               	incf	___lwdiv@counter^0,f,c
 12307   00547E                     l3866:
 12308   00547E  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
 12309   005480  EF44  F02A         	goto	u2931
 12310   005484  EF46  F02A         	goto	u2930
 12311   005488                     u2931:
 12312   005488  EF3B  F02A         	goto	l3864
 12313   00548C                     u2930:
 12314   00548C                     l3868:
 12315   00548C  90D8               	bcf	status,0,c
 12316   00548E  360B               	rlcf	___lwdiv@quotient^0,f,c
 12317   005490  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
 12318   005492  5009               	movf	___lwdiv@divisor^0,w,c
 12319   005494  5C07               	subwf	___lwdiv@dividend^0,w,c
 12320   005496  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12321   005498  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
 12322   00549A  A0D8               	btfss	status,0,c
 12323   00549C  EF52  F02A         	goto	u2941
 12324   0054A0  EF54  F02A         	goto	u2940
 12325   0054A4                     u2941:
 12326   0054A4  EF59  F02A         	goto	l3876
 12327   0054A8                     u2940:
 12328   0054A8  5009               	movf	___lwdiv@divisor^0,w,c
 12329   0054AA  5E07               	subwf	___lwdiv@dividend^0,f,c
 12330   0054AC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
 12331   0054AE  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
 12332   0054B0  800B               	bsf	___lwdiv@quotient^0,0,c
 12333   0054B2                     l3876:
 12334   0054B2  90D8               	bcf	status,0,c
 12335   0054B4  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
 12336   0054B6  3209               	rrcf	___lwdiv@divisor^0,f,c
 12337   0054B8  2E0D               	decfsz	___lwdiv@counter^0,f,c
 12338   0054BA  EF46  F02A         	goto	l3868
 12339   0054BE                     l1248:
 12340   0054BE  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
 12341   0054C2  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12342   0054C6  0012               	return		;funcret
 12343   0054C8                     __end_of___lwdiv:
 12344                           	callstack 0
 12345                           
 12346 ;; *************** function _Colour_decider *****************
 12347 ;; Defined at:
 12348 ;;		line 126 in file "color.c"
 12349 ;; Parameters:    Size  Location     Type
 12350 ;;  vals            2   74[COMRAM] PTR struct RGB
 12351 ;;		 -> vals(8), 
 12352 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
 12353 ;;		 -> rel(12), 
 12354 ;; Auto vars:     Size  Location     Type
 12355 ;;  RGB_col        12    6[BANK0 ] float [3]
 12356 ;;  Hue             4   28[BANK0 ] float 
 12357 ;;  Cmin            4   22[BANK0 ] float 
 12358 ;;  Cmax            4   18[BANK0 ] float 
 12359 ;;  i               2   26[BANK0 ] int 
 12360 ;;  Cmax_i          2    4[BANK0 ] int 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  2   74[COMRAM] int 
 12363 ;; Registers used:
 12364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/0
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12371 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12372 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12373 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12374 ;;Total ram usage:       38 bytes
 12375 ;; Hardware stack levels used: 1
 12376 ;; Hardware stack levels required when called: 3
 12377 ;; This function calls:
 12378 ;;		___fladd
 12379 ;;		___fldiv
 12380 ;;		___fleq
 12381 ;;		___flge
 12382 ;;		___flmul
 12383 ;;		___flsub
 12384 ;;		___xxtofl
 12385 ;; This function is called by:
 12386 ;;		_main
 12387 ;; This function uses a non-reentrant model
 12388 ;;
 12389                           
 12390                           	psect	text77
 12391   001838                     __ptext77:
 12392                           	callstack 0
 12393   001838                     _Colour_decider:
 12394                           	callstack 27
 12395   001838                     
 12396                           ;color.c: 127:     float Cmax = 0;
 12397   001838  0E00               	movlw	0
 12398   00183A  0100               	movlb	0	; () banked
 12399   00183C  6F72               	movwf	Colour_decider@Cmax& (0+255),b
 12400   00183E  0E00               	movlw	0
 12401   001840  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
 12402   001842  0E00               	movlw	0
 12403   001844  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
 12404   001846  0E00               	movlw	0
 12405   001848  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
 12406                           
 12407                           ;color.c: 128:     float Cmin= 100000;
 12408   00184A  0E00               	movlw	0
 12409   00184C  6F76               	movwf	Colour_decider@Cmin& (0+255),b
 12410   00184E  0E50               	movlw	80
 12411   001850  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
 12412   001852  0EC3               	movlw	195
 12413   001854  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
 12414   001856  0E47               	movlw	71
 12415   001858  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
 12416                           
 12417                           ;color.c: 129:     int Cmax_i =4;
 12418   00185A  0E00               	movlw	0
 12419   00185C  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
 12420   00185E  0E04               	movlw	4
 12421   001860  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
 12422   001862                     
 12423                           ; BSR set to: 0
 12424                           ;color.c: 131:     int i;;color.c: 132:     float RGB_col[3]={vals->R,vals->G,vals->B};
 12425   001862  EE20  F066         	lfsr	2,Colour_decider@RGB_col
 12426   001866  0E0B               	movlw	11
 12427   001868                     u5191:
 12428   001868  6ADE               	clrf	postinc2,c
 12429   00186A  06E8               	decf	wreg,f,c
 12430   00186C  E2FD               	bc	u5191
 12431   00186E                     
 12432                           ; BSR set to: 0
 12433   00186E  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
 12434   001872  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
 12435   001876  CFDE F001          	movff	postinc2,___xxtofl@val
 12436   00187A  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12437   00187E  0E00               	movlw	0
 12438   001880  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12439   001882  0EFF               	movlw	-1
 12440   001884  6E03               	movwf	(___xxtofl@val+2)^0,c
 12441   001886  6E04               	movwf	(___xxtofl@val+3)^0,c
 12442   001888  0E01               	movlw	1
 12443   00188A  ECCC  F020         	call	___xxtofl
 12444   00188E  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
 12445   001892  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
 12446   001896  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
 12447   00189A  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
 12448   00189E  EE20 F002          	lfsr	2,2
 12449   0018A2  504B               	movf	Colour_decider@vals^0,w,c
 12450   0018A4  26D9               	addwf	fsr2l,f,c
 12451   0018A6  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12452   0018A8  22DA               	addwfc	fsr2h,f,c
 12453   0018AA  CFDE F001          	movff	postinc2,___xxtofl@val
 12454   0018AE  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12455   0018B2  0E00               	movlw	0
 12456   0018B4  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12457   0018B6  0EFF               	movlw	-1
 12458   0018B8  6E03               	movwf	(___xxtofl@val+2)^0,c
 12459   0018BA  6E04               	movwf	(___xxtofl@val+3)^0,c
 12460   0018BC  0E01               	movlw	1
 12461   0018BE  ECCC  F020         	call	___xxtofl
 12462   0018C2  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
 12463   0018C6  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
 12464   0018CA  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
 12465   0018CE  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
 12466   0018D2  EE20 F004          	lfsr	2,4
 12467   0018D6  504B               	movf	Colour_decider@vals^0,w,c
 12468   0018D8  26D9               	addwf	fsr2l,f,c
 12469   0018DA  504C               	movf	(Colour_decider@vals+1)^0,w,c
 12470   0018DC  22DA               	addwfc	fsr2h,f,c
 12471   0018DE  CFDE F001          	movff	postinc2,___xxtofl@val
 12472   0018E2  CFDD F002          	movff	postdec2,___xxtofl@val+1
 12473   0018E6  0E00               	movlw	0
 12474   0018E8  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
 12475   0018EA  0EFF               	movlw	-1
 12476   0018EC  6E03               	movwf	(___xxtofl@val+2)^0,c
 12477   0018EE  6E04               	movwf	(___xxtofl@val+3)^0,c
 12478   0018F0  0E01               	movlw	1
 12479   0018F2  ECCC  F020         	call	___xxtofl
 12480   0018F6  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
 12481   0018FA  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
 12482   0018FE  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
 12483   001902  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
 12484   001906                     
 12485                           ;color.c: 133:     float Hue;;color.c: 136:     for (i=0; i<3 ;i++){
 12486   001906  0E00               	movlw	0
 12487   001908  0100               	movlb	0	; () banked
 12488   00190A  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
 12489   00190C  0E00               	movlw	0
 12490   00190E  6F7A               	movwf	Colour_decider@i& (0+255),b
 12491   001910                     l5422:
 12492                           
 12493                           ; BSR set to: 0
 12494                           ;color.c: 137:         if (RGB_col[i]>Cmax){
 12495   001910  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
 12496   001914  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
 12497   001918  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
 12498   00191C  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
 12499   001920  0E66               	movlw	low Colour_decider@RGB_col
 12500   001922  6E4F               	movwf	??_Colour_decider^0,c
 12501   001924  0E00               	movlw	high Colour_decider@RGB_col
 12502   001926  6E50               	movwf	(??_Colour_decider+1)^0,c
 12503   001928  90D8               	bcf	status,0,c
 12504   00192A  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12505   00192C  6ED9               	movwf	fsr2l,c
 12506   00192E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12507   001930  6EDA               	movwf	fsr2h,c
 12508   001932  90D8               	bcf	status,0,c
 12509   001934  36D9               	rlcf	fsr2l,f,c
 12510   001936  36DA               	rlcf	fsr2h,f,c
 12511   001938  504F               	movf	??_Colour_decider^0,w,c
 12512   00193A  26D9               	addwf	fsr2l,f,c
 12513   00193C  5050               	movf	(??_Colour_decider+1)^0,w,c
 12514   00193E  22DA               	addwfc	fsr2h,f,c
 12515   001940  CFDE F02E          	movff	postinc2,___flge@ff2
 12516   001944  CFDE F02F          	movff	postinc2,___flge@ff2+1
 12517   001948  CFDE F030          	movff	postinc2,___flge@ff2+2
 12518   00194C  CFDE F031          	movff	postinc2,___flge@ff2+3
 12519   001950  EC2B  F025         	call	___flge	;wreg free
 12520   001954  B0D8               	btfsc	status,0,c
 12521   001956  EFAF  F00C         	goto	u5201
 12522   00195A  EFB1  F00C         	goto	u5200
 12523   00195E                     u5201:
 12524   00195E  EFCE  F00C         	goto	l5428
 12525   001962                     u5200:
 12526   001962                     
 12527                           ;color.c: 138:             Cmax=RGB_col[i];
 12528   001962  0E66               	movlw	low Colour_decider@RGB_col
 12529   001964  6E4F               	movwf	??_Colour_decider^0,c
 12530   001966  0E00               	movlw	high Colour_decider@RGB_col
 12531   001968  6E50               	movwf	(??_Colour_decider+1)^0,c
 12532   00196A  90D8               	bcf	status,0,c
 12533   00196C  0100               	movlb	0	; () banked
 12534   00196E  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12535   001970  6ED9               	movwf	fsr2l,c
 12536   001972  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12537   001974  6EDA               	movwf	fsr2h,c
 12538   001976  90D8               	bcf	status,0,c
 12539   001978  36D9               	rlcf	fsr2l,f,c
 12540   00197A  36DA               	rlcf	fsr2h,f,c
 12541   00197C  504F               	movf	??_Colour_decider^0,w,c
 12542   00197E  26D9               	addwf	fsr2l,f,c
 12543   001980  5050               	movf	(??_Colour_decider+1)^0,w,c
 12544   001982  22DA               	addwfc	fsr2h,f,c
 12545   001984  CFDE F072          	movff	postinc2,Colour_decider@Cmax
 12546   001988  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
 12547   00198C  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
 12548   001990  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
 12549   001994                     
 12550                           ; BSR set to: 0
 12551                           ;color.c: 139:             Cmax_i=i;
 12552   001994  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
 12553   001998  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
 12554   00199C                     l5428:
 12555                           
 12556                           ;color.c: 141:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
 12557   00199C  0E66               	movlw	low Colour_decider@RGB_col
 12558   00199E  6E4F               	movwf	??_Colour_decider^0,c
 12559   0019A0  0E00               	movlw	high Colour_decider@RGB_col
 12560   0019A2  6E50               	movwf	(??_Colour_decider+1)^0,c
 12561   0019A4  90D8               	bcf	status,0,c
 12562   0019A6  0100               	movlb	0	; () banked
 12563   0019A8  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12564   0019AA  6ED9               	movwf	fsr2l,c
 12565   0019AC  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12566   0019AE  6EDA               	movwf	fsr2h,c
 12567   0019B0  90D8               	bcf	status,0,c
 12568   0019B2  36D9               	rlcf	fsr2l,f,c
 12569   0019B4  36DA               	rlcf	fsr2h,f,c
 12570   0019B6  504F               	movf	??_Colour_decider^0,w,c
 12571   0019B8  26D9               	addwf	fsr2l,f,c
 12572   0019BA  5050               	movf	(??_Colour_decider+1)^0,w,c
 12573   0019BC  22DA               	addwfc	fsr2h,f,c
 12574   0019BE  CFDE F02A          	movff	postinc2,___flge@ff1
 12575   0019C2  CFDE F02B          	movff	postinc2,___flge@ff1+1
 12576   0019C6  CFDE F02C          	movff	postinc2,___flge@ff1+2
 12577   0019CA  CFDE F02D          	movff	postinc2,___flge@ff1+3
 12578   0019CE  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
 12579   0019D2  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
 12580   0019D6  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
 12581   0019DA  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
 12582   0019DE  EC2B  F025         	call	___flge	;wreg free
 12583   0019E2  B0D8               	btfsc	status,0,c
 12584   0019E4  EFF6  F00C         	goto	u5211
 12585   0019E8  EFF8  F00C         	goto	u5210
 12586   0019EC                     u5211:
 12587   0019EC  EF11  F00D         	goto	l5432
 12588   0019F0                     u5210:
 12589   0019F0  0E66               	movlw	low Colour_decider@RGB_col
 12590   0019F2  6E4F               	movwf	??_Colour_decider^0,c
 12591   0019F4  0E00               	movlw	high Colour_decider@RGB_col
 12592   0019F6  6E50               	movwf	(??_Colour_decider+1)^0,c
 12593   0019F8  90D8               	bcf	status,0,c
 12594   0019FA  0100               	movlb	0	; () banked
 12595   0019FC  357A               	rlcf	Colour_decider@i& (0+255),w,b
 12596   0019FE  6ED9               	movwf	fsr2l,c
 12597   001A00  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
 12598   001A02  6EDA               	movwf	fsr2h,c
 12599   001A04  90D8               	bcf	status,0,c
 12600   001A06  36D9               	rlcf	fsr2l,f,c
 12601   001A08  36DA               	rlcf	fsr2h,f,c
 12602   001A0A  504F               	movf	??_Colour_decider^0,w,c
 12603   001A0C  26D9               	addwf	fsr2l,f,c
 12604   001A0E  5050               	movf	(??_Colour_decider+1)^0,w,c
 12605   001A10  22DA               	addwfc	fsr2h,f,c
 12606   001A12  CFDE F076          	movff	postinc2,Colour_decider@Cmin
 12607   001A16  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
 12608   001A1A  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
 12609   001A1E  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
 12610   001A22                     l5432:
 12611                           
 12612                           ;color.c: 142:     }
 12613   001A22  0100               	movlb	0	; () banked
 12614   001A24  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
 12615   001A26  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
 12616   001A28                     
 12617                           ; BSR set to: 0
 12618   001A28  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
 12619   001A2A  EF20  F00D         	goto	u5221
 12620   001A2E  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
 12621   001A30  E109               	bnz	u5220
 12622   001A32  0E03               	movlw	3
 12623   001A34  5D7A               	subwf	Colour_decider@i& (0+255),w,b
 12624   001A36  A0D8               	btfss	status,0,c
 12625   001A38  EF20  F00D         	goto	u5221
 12626   001A3C  EF22  F00D         	goto	u5220
 12627   001A40                     u5221:
 12628   001A40  EF88  F00C         	goto	l5422
 12629   001A44                     u5220:
 12630   001A44                     
 12631                           ; BSR set to: 0
 12632                           ;color.c: 144:     if (Cmax-Cmin==0){return 0;}
 12633   001A44  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12634   001A48  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12635   001A4C  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12636   001A50  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12637   001A54  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12638   001A58  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12639   001A5C  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12640   001A60  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12641   001A64  EC0B  F02F         	call	___flsub	;wreg free
 12642   001A68  C02A  F032         	movff	?___flsub,___fleq@ff1
 12643   001A6C  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
 12644   001A70  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
 12645   001A74  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
 12646   001A78  0E00               	movlw	0
 12647   001A7A  6E36               	movwf	___fleq@ff2^0,c
 12648   001A7C  0E00               	movlw	0
 12649   001A7E  6E37               	movwf	(___fleq@ff2+1)^0,c
 12650   001A80  0E00               	movlw	0
 12651   001A82  6E38               	movwf	(___fleq@ff2+2)^0,c
 12652   001A84  0E00               	movlw	0
 12653   001A86  6E39               	movwf	(___fleq@ff2+3)^0,c
 12654   001A88  EC9C  F027         	call	___fleq	;wreg free
 12655   001A8C  A0D8               	btfss	status,0,c
 12656   001A8E  EF4B  F00D         	goto	u5231
 12657   001A92  EF4D  F00D         	goto	u5230
 12658   001A96                     u5231:
 12659   001A96  EF53  F00D         	goto	l5442
 12660   001A9A                     u5230:
 12661   001A9A                     l5438:
 12662   001A9A  0E00               	movlw	0
 12663   001A9C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12664   001A9E  0E00               	movlw	0
 12665   001AA0  6E4B               	movwf	?_Colour_decider^0,c
 12666   001AA2  EF15  F011         	goto	l80
 12667   001AA6                     l5442:
 12668                           
 12669                           ;color.c: 147:     if (Cmax_i==0){
 12670   001AA6  0100               	movlb	0	; () banked
 12671   001AA8  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
 12672   001AAA  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12673   001AAC  A4D8               	btfss	status,2,c
 12674   001AAE  EF5B  F00D         	goto	u5241
 12675   001AB2  EF5D  F00D         	goto	u5240
 12676   001AB6                     u5241:
 12677   001AB6  EFD1  F00D         	goto	l5450
 12678   001ABA                     u5240:
 12679   001ABA                     
 12680                           ; BSR set to: 0
 12681                           ;color.c: 148:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
 12682   001ABA  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12683   001ABE  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12684   001AC2  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12685   001AC6  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12686   001ACA  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12687   001ACE  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12688   001AD2  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12689   001AD6  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12690   001ADA  EC0B  F02F         	call	___flsub	;wreg free
 12691   001ADE  C02A  F036         	movff	?___flsub,___fldiv@a
 12692   001AE2  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12693   001AE6  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12694   001AEA  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12695   001AEE  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
 12696   001AF2  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
 12697   001AF6  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
 12698   001AFA  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
 12699   001AFE  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
 12700   001B02  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
 12701   001B06  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
 12702   001B0A  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
 12703   001B0E  EC0B  F02F         	call	___flsub	;wreg free
 12704   001B12  C02A  F032         	movff	?___flsub,___fldiv@b
 12705   001B16  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12706   001B1A  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12707   001B1E  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12708   001B22  EC8B  F015         	call	___fldiv	;wreg free
 12709   001B26  C032  F011         	movff	?___fldiv,___flmul@b
 12710   001B2A  C033  F012         	movff	?___fldiv+1,___flmul@b+1
 12711   001B2E  C034  F013         	movff	?___fldiv+2,___flmul@b+2
 12712   001B32  C035  F014         	movff	?___fldiv+3,___flmul@b+3
 12713   001B36  0E00               	movlw	0
 12714   001B38  6E15               	movwf	___flmul@a^0,c
 12715   001B3A  0E00               	movlw	0
 12716   001B3C  6E16               	movwf	(___flmul@a+1)^0,c
 12717   001B3E  0E70               	movlw	112
 12718   001B40  6E17               	movwf	(___flmul@a+2)^0,c
 12719   001B42  0E42               	movlw	66
 12720   001B44  6E18               	movwf	(___flmul@a+3)^0,c
 12721   001B46  EC76  F013         	call	___flmul	;wreg free
 12722   001B4A  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12723   001B4E  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12724   001B52  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12725   001B56  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12726   001B5A                     
 12727                           ;color.c: 150:         if (Hue < 0) {Hue += 360;}
 12728   001B5A  0100               	movlb	0	; () banked
 12729   001B5C  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
 12730   001B5E  EFB5  F00D         	goto	u5250
 12731   001B62  EFB3  F00D         	goto	u5251
 12732   001B66                     u5251:
 12733   001B66  EFB0  F00E         	goto	l5460
 12734   001B6A                     u5250:
 12735   001B6A                     
 12736                           ; BSR set to: 0
 12737   001B6A  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
 12738   001B6E  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
 12739   001B72  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
 12740   001B76  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
 12741   001B7A  0E00               	movlw	0
 12742   001B7C  6E05               	movwf	___fladd@a^0,c
 12743   001B7E  0E00               	movlw	0
 12744   001B80  6E06               	movwf	(___fladd@a+1)^0,c
 12745   001B82  0EB4               	movlw	180
 12746   001B84  6E07               	movwf	(___fladd@a+2)^0,c
 12747   001B86  0E43               	movlw	67
 12748   001B88  6E08               	movwf	(___fladd@a+3)^0,c
 12749   001B8A  EC16  F011         	call	___fladd	;wreg free
 12750   001B8E  C001  F07C         	movff	?___fladd,Colour_decider@Hue
 12751   001B92  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
 12752   001B96  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
 12753   001B9A  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
 12754   001B9E  EFB0  F00E         	goto	l5460
 12755   001BA2                     l5450:
 12756                           
 12757                           ; BSR set to: 0
 12758   001BA2  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
 12759   001BA4  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
 12760   001BA6  A4D8               	btfss	status,2,c
 12761   001BA8  EFD8  F00D         	goto	u5261
 12762   001BAC  EFDA  F00D         	goto	u5260
 12763   001BB0                     u5261:
 12764   001BB0  EF46  F00E         	goto	l5456
 12765   001BB4                     u5260:
 12766   001BB4                     
 12767                           ; BSR set to: 0
 12768                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12769   001BB4  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12770   001BB8  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12771   001BBC  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12772   001BC0  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12773   001BC4  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12774   001BC8  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12775   001BCC  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12776   001BD0  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12777   001BD4  EC0B  F02F         	call	___flsub	;wreg free
 12778   001BD8  C02A  F036         	movff	?___flsub,___fldiv@a
 12779   001BDC  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12780   001BE0  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12781   001BE4  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12782   001BE8  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
 12783   001BEC  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
 12784   001BF0  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
 12785   001BF4  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
 12786   001BF8  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
 12787   001BFC  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
 12788   001C00  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
 12789   001C04  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
 12790   001C08  EC0B  F02F         	call	___flsub	;wreg free
 12791   001C0C  C02A  F032         	movff	?___flsub,___fldiv@b
 12792   001C10  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12793   001C14  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12794   001C18  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12795   001C1C  EC8B  F015         	call	___fldiv	;wreg free
 12796   001C20  C032  F060         	movff	?___fldiv,_Colour_decider$3281
 12797   001C24  C033  F061         	movff	?___fldiv+1,_Colour_decider$3281+1
 12798   001C28  C034  F062         	movff	?___fldiv+2,_Colour_decider$3281+2
 12799   001C2C  C035  F063         	movff	?___fldiv+3,_Colour_decider$3281+3
 12800   001C30                     
 12801                           ;color.c: 154:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
 12802   001C30  0E00               	movlw	0
 12803   001C32  6E05               	movwf	___fladd@a^0,c
 12804   001C34  0E00               	movlw	0
 12805   001C36  6E06               	movwf	(___fladd@a+1)^0,c
 12806   001C38  0E00               	movlw	0
 12807   001C3A  6E07               	movwf	(___fladd@a+2)^0,c
 12808   001C3C  0E40               	movlw	64
 12809   001C3E  6E08               	movwf	(___fladd@a+3)^0,c
 12810   001C40  C060  F001         	movff	_Colour_decider$3281,___fladd@b
 12811   001C44  C061  F002         	movff	_Colour_decider$3281+1,___fladd@b+1
 12812   001C48  C062  F003         	movff	_Colour_decider$3281+2,___fladd@b+2
 12813   001C4C  C063  F004         	movff	_Colour_decider$3281+3,___fladd@b+3
 12814   001C50  EC16  F011         	call	___fladd	;wreg free
 12815   001C54  C001  F011         	movff	?___fladd,___flmul@b
 12816   001C58  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12817   001C5C  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12818   001C60  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12819   001C64  0E00               	movlw	0
 12820   001C66  6E15               	movwf	___flmul@a^0,c
 12821   001C68  0E00               	movlw	0
 12822   001C6A  6E16               	movwf	(___flmul@a+1)^0,c
 12823   001C6C  0E70               	movlw	112
 12824   001C6E  6E17               	movwf	(___flmul@a+2)^0,c
 12825   001C70  0E42               	movlw	66
 12826   001C72  6E18               	movwf	(___flmul@a+3)^0,c
 12827   001C74  EC76  F013         	call	___flmul	;wreg free
 12828   001C78  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12829   001C7C  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12830   001C80  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12831   001C84  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12832                           
 12833                           ;color.c: 156:     }
 12834   001C88  EFB0  F00E         	goto	l5460
 12835   001C8C                     l5456:
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12839   001C8C  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
 12840   001C90  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
 12841   001C94  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
 12842   001C98  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
 12843   001C9C  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
 12844   001CA0  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
 12845   001CA4  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
 12846   001CA8  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
 12847   001CAC  EC0B  F02F         	call	___flsub	;wreg free
 12848   001CB0  C02A  F036         	movff	?___flsub,___fldiv@a
 12849   001CB4  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
 12850   001CB8  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
 12851   001CBC  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
 12852   001CC0  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
 12853   001CC4  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
 12854   001CC8  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
 12855   001CCC  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
 12856   001CD0  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
 12857   001CD4  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
 12858   001CD8  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
 12859   001CDC  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
 12860   001CE0  EC0B  F02F         	call	___flsub	;wreg free
 12861   001CE4  C02A  F032         	movff	?___flsub,___fldiv@b
 12862   001CE8  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
 12863   001CEC  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
 12864   001CF0  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
 12865   001CF4  EC8B  F015         	call	___fldiv	;wreg free
 12866   001CF8  C032  F060         	movff	?___fldiv,_Colour_decider$3281
 12867   001CFC  C033  F061         	movff	?___fldiv+1,_Colour_decider$3281+1
 12868   001D00  C034  F062         	movff	?___fldiv+2,_Colour_decider$3281+2
 12869   001D04  C035  F063         	movff	?___fldiv+3,_Colour_decider$3281+3
 12870   001D08                     
 12871                           ;color.c: 159:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
 12872   001D08  0E00               	movlw	0
 12873   001D0A  6E05               	movwf	___fladd@a^0,c
 12874   001D0C  0E00               	movlw	0
 12875   001D0E  6E06               	movwf	(___fladd@a+1)^0,c
 12876   001D10  0E80               	movlw	128
 12877   001D12  6E07               	movwf	(___fladd@a+2)^0,c
 12878   001D14  0E40               	movlw	64
 12879   001D16  6E08               	movwf	(___fladd@a+3)^0,c
 12880   001D18  C060  F001         	movff	_Colour_decider$3281,___fladd@b
 12881   001D1C  C061  F002         	movff	_Colour_decider$3281+1,___fladd@b+1
 12882   001D20  C062  F003         	movff	_Colour_decider$3281+2,___fladd@b+2
 12883   001D24  C063  F004         	movff	_Colour_decider$3281+3,___fladd@b+3
 12884   001D28  EC16  F011         	call	___fladd	;wreg free
 12885   001D2C  C001  F011         	movff	?___fladd,___flmul@b
 12886   001D30  C002  F012         	movff	?___fladd+1,___flmul@b+1
 12887   001D34  C003  F013         	movff	?___fladd+2,___flmul@b+2
 12888   001D38  C004  F014         	movff	?___fladd+3,___flmul@b+3
 12889   001D3C  0E00               	movlw	0
 12890   001D3E  6E15               	movwf	___flmul@a^0,c
 12891   001D40  0E00               	movlw	0
 12892   001D42  6E16               	movwf	(___flmul@a+1)^0,c
 12893   001D44  0E70               	movlw	112
 12894   001D46  6E17               	movwf	(___flmul@a+2)^0,c
 12895   001D48  0E42               	movlw	66
 12896   001D4A  6E18               	movwf	(___flmul@a+3)^0,c
 12897   001D4C  EC76  F013         	call	___flmul	;wreg free
 12898   001D50  C011  F07C         	movff	?___flmul,Colour_decider@Hue
 12899   001D54  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
 12900   001D58  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
 12901   001D5C  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
 12902   001D60                     l5460:
 12903                           
 12904                           ;color.c: 163:     if ((330<=Hue)&(Hue<=360)){
 12905   001D60  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12906   001D64  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12907   001D68  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12908   001D6C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12909   001D70  0E00               	movlw	0
 12910   001D72  6E2E               	movwf	___flge@ff2^0,c
 12911   001D74  0E00               	movlw	0
 12912   001D76  6E2F               	movwf	(___flge@ff2+1)^0,c
 12913   001D78  0EA5               	movlw	165
 12914   001D7A  6E30               	movwf	(___flge@ff2+2)^0,c
 12915   001D7C  0E43               	movlw	67
 12916   001D7E  6E31               	movwf	(___flge@ff2+3)^0,c
 12917   001D80  EC2B  F025         	call	___flge	;wreg free
 12918   001D84  A0D8               	btfss	status,0,c
 12919   001D86  EFC7  F00E         	goto	u5271
 12920   001D8A  EFC9  F00E         	goto	u5270
 12921   001D8E                     u5271:
 12922   001D8E  EFE8  F00E         	goto	l5470
 12923   001D92                     u5270:
 12924   001D92  0E00               	movlw	0
 12925   001D94  6E2A               	movwf	___flge@ff1^0,c
 12926   001D96  0E00               	movlw	0
 12927   001D98  6E2B               	movwf	(___flge@ff1+1)^0,c
 12928   001D9A  0EB4               	movlw	180
 12929   001D9C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12930   001D9E  0E43               	movlw	67
 12931   001DA0  6E2D               	movwf	(___flge@ff1+3)^0,c
 12932   001DA2  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12933   001DA6  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12934   001DAA  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12935   001DAE  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12936   001DB2  EC2B  F025         	call	___flge	;wreg free
 12937   001DB6  A0D8               	btfss	status,0,c
 12938   001DB8  EFE0  F00E         	goto	u5281
 12939   001DBC  EFE2  F00E         	goto	u5280
 12940   001DC0                     u5281:
 12941   001DC0  EFE8  F00E         	goto	l5470
 12942   001DC4                     u5280:
 12943   001DC4                     
 12944                           ;color.c: 164:         return 1;
 12945   001DC4  0E00               	movlw	0
 12946   001DC6  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12947   001DC8  0E01               	movlw	1
 12948   001DCA  6E4B               	movwf	?_Colour_decider^0,c
 12949   001DCC  EF15  F011         	goto	l80
 12950   001DD0                     l5470:
 12951   001DD0  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12952   001DD4  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12953   001DD8  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 12954   001DDC  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 12955   001DE0  0E00               	movlw	0
 12956   001DE2  6E2E               	movwf	___flge@ff2^0,c
 12957   001DE4  0E00               	movlw	0
 12958   001DE6  6E2F               	movwf	(___flge@ff2+1)^0,c
 12959   001DE8  0EA0               	movlw	160
 12960   001DEA  6E30               	movwf	(___flge@ff2+2)^0,c
 12961   001DEC  0E40               	movlw	64
 12962   001DEE  6E31               	movwf	(___flge@ff2+3)^0,c
 12963   001DF0  EC2B  F025         	call	___flge	;wreg free
 12964   001DF4  A0D8               	btfss	status,0,c
 12965   001DF6  EFFF  F00E         	goto	u5291
 12966   001DFA  EF01  F00F         	goto	u5290
 12967   001DFE                     u5291:
 12968   001DFE  EF20  F00F         	goto	l5480
 12969   001E02                     u5290:
 12970   001E02  0E00               	movlw	0
 12971   001E04  6E2A               	movwf	___flge@ff1^0,c
 12972   001E06  0E00               	movlw	0
 12973   001E08  6E2B               	movwf	(___flge@ff1+1)^0,c
 12974   001E0A  0E30               	movlw	48
 12975   001E0C  6E2C               	movwf	(___flge@ff1+2)^0,c
 12976   001E0E  0E41               	movlw	65
 12977   001E10  6E2D               	movwf	(___flge@ff1+3)^0,c
 12978   001E12  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 12979   001E16  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 12980   001E1A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 12981   001E1E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 12982   001E22  EC2B  F025         	call	___flge	;wreg free
 12983   001E26  A0D8               	btfss	status,0,c
 12984   001E28  EF18  F00F         	goto	u5301
 12985   001E2C  EF1A  F00F         	goto	u5300
 12986   001E30                     u5301:
 12987   001E30  EF20  F00F         	goto	l5480
 12988   001E34                     u5300:
 12989   001E34                     
 12990                           ;color.c: 168:         return 2;
 12991   001E34  0E00               	movlw	0
 12992   001E36  6E4C               	movwf	(?_Colour_decider+1)^0,c
 12993   001E38  0E02               	movlw	2
 12994   001E3A  6E4B               	movwf	?_Colour_decider^0,c
 12995   001E3C  EF15  F011         	goto	l80
 12996   001E40                     l5480:
 12997   001E40  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 12998   001E44  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 12999   001E48  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13000   001E4C  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13001   001E50  0E00               	movlw	0
 13002   001E52  6E2E               	movwf	___flge@ff2^0,c
 13003   001E54  0E00               	movlw	0
 13004   001E56  6E2F               	movwf	(___flge@ff2+1)^0,c
 13005   001E58  0E90               	movlw	144
 13006   001E5A  6E30               	movwf	(___flge@ff2+2)^0,c
 13007   001E5C  0E41               	movlw	65
 13008   001E5E  6E31               	movwf	(___flge@ff2+3)^0,c
 13009   001E60  EC2B  F025         	call	___flge	;wreg free
 13010   001E64  A0D8               	btfss	status,0,c
 13011   001E66  EF37  F00F         	goto	u5311
 13012   001E6A  EF39  F00F         	goto	u5310
 13013   001E6E                     u5311:
 13014   001E6E  EFED  F00F         	goto	l5510
 13015   001E72                     u5310:
 13016   001E72  0E00               	movlw	0
 13017   001E74  6E2A               	movwf	___flge@ff1^0,c
 13018   001E76  0E00               	movlw	0
 13019   001E78  6E2B               	movwf	(___flge@ff1+1)^0,c
 13020   001E7A  0EC8               	movlw	200
 13021   001E7C  6E2C               	movwf	(___flge@ff1+2)^0,c
 13022   001E7E  0E41               	movlw	65
 13023   001E80  6E2D               	movwf	(___flge@ff1+3)^0,c
 13024   001E82  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13025   001E86  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13026   001E8A  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13027   001E8E  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13028   001E92  EC2B  F025         	call	___flge	;wreg free
 13029   001E96  A0D8               	btfss	status,0,c
 13030   001E98  EF50  F00F         	goto	u5321
 13031   001E9C  EF52  F00F         	goto	u5320
 13032   001EA0                     u5321:
 13033   001EA0  EFED  F00F         	goto	l5510
 13034   001EA4                     u5320:
 13035   001EA4                     
 13036                           ;color.c: 173:         if ((rel->R<=0.26)&&(rel->B>0.10)&&(vals->L>1000)){
 13037   001EA4  0EB8               	movlw	184
 13038   001EA6  6E2A               	movwf	___flge@ff1^0,c
 13039   001EA8  0E1E               	movlw	30
 13040   001EAA  6E2B               	movwf	(___flge@ff1+1)^0,c
 13041   001EAC  0E85               	movlw	133
 13042   001EAE  6E2C               	movwf	(___flge@ff1+2)^0,c
 13043   001EB0  0E3E               	movlw	62
 13044   001EB2  6E2D               	movwf	(___flge@ff1+3)^0,c
 13045   001EB4  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13046   001EB8  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13047   001EBC  CFDE F02E          	movff	postinc2,___flge@ff2
 13048   001EC0  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13049   001EC4  CFDE F030          	movff	postinc2,___flge@ff2+2
 13050   001EC8  CFDE F031          	movff	postinc2,___flge@ff2+3
 13051   001ECC  EC2B  F025         	call	___flge	;wreg free
 13052   001ED0  A0D8               	btfss	status,0,c
 13053   001ED2  EF6D  F00F         	goto	u5331
 13054   001ED6  EF6F  F00F         	goto	u5330
 13055   001EDA                     u5331:
 13056   001EDA  EFA5  F00F         	goto	l5496
 13057   001EDE                     u5330:
 13058   001EDE  0ECD               	movlw	205
 13059   001EE0  6E2A               	movwf	___flge@ff1^0,c
 13060   001EE2  0ECC               	movlw	204
 13061   001EE4  6E2B               	movwf	(___flge@ff1+1)^0,c
 13062   001EE6  0ECC               	movlw	204
 13063   001EE8  6E2C               	movwf	(___flge@ff1+2)^0,c
 13064   001EEA  0E3D               	movlw	61
 13065   001EEC  6E2D               	movwf	(___flge@ff1+3)^0,c
 13066   001EEE  EE20 F008          	lfsr	2,8
 13067   001EF2  504D               	movf	Colour_decider@rel^0,w,c
 13068   001EF4  26D9               	addwf	fsr2l,f,c
 13069   001EF6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13070   001EF8  22DA               	addwfc	fsr2h,f,c
 13071   001EFA  CFDE F02E          	movff	postinc2,___flge@ff2
 13072   001EFE  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13073   001F02  CFDE F030          	movff	postinc2,___flge@ff2+2
 13074   001F06  CFDE F031          	movff	postinc2,___flge@ff2+3
 13075   001F0A  EC2B  F025         	call	___flge	;wreg free
 13076   001F0E  B0D8               	btfsc	status,0,c
 13077   001F10  EF8C  F00F         	goto	u5341
 13078   001F14  EF8E  F00F         	goto	u5340
 13079   001F18                     u5341:
 13080   001F18  EFA5  F00F         	goto	l5496
 13081   001F1C                     u5340:
 13082   001F1C  EE20 F006          	lfsr	2,6
 13083   001F20  504B               	movf	Colour_decider@vals^0,w,c
 13084   001F22  26D9               	addwf	fsr2l,f,c
 13085   001F24  504C               	movf	(Colour_decider@vals+1)^0,w,c
 13086   001F26  22DA               	addwfc	fsr2h,f,c
 13087   001F28  0E01               	movlw	1
 13088   001F2A  BEDB               	btfsc	plusw2,7,c
 13089   001F2C  EFA1  F00F         	goto	u5351
 13090   001F30  0EE9               	movlw	233
 13091   001F32  5CDE               	subwf	postinc2,w,c
 13092   001F34  0E03               	movlw	3
 13093   001F36  58DE               	subwfb	postinc2,w,c
 13094   001F38  A0D8               	btfss	status,0,c
 13095   001F3A  EFA1  F00F         	goto	u5351
 13096   001F3E  EFA3  F00F         	goto	u5350
 13097   001F42                     u5351:
 13098   001F42  EFA5  F00F         	goto	l5496
 13099   001F46                     u5350:
 13100   001F46  EF4D  F00D         	goto	l5438
 13101   001F4A                     l5496:
 13102   001F4A  C04D  FFD9         	movff	Colour_decider@rel,fsr2l
 13103   001F4E  C04E  FFDA         	movff	Colour_decider@rel+1,fsr2h
 13104   001F52  CFDE F02A          	movff	postinc2,___flge@ff1
 13105   001F56  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13106   001F5A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13107   001F5E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13108   001F62  0EB8               	movlw	184
 13109   001F64  6E2E               	movwf	___flge@ff2^0,c
 13110   001F66  0E1E               	movlw	30
 13111   001F68  6E2F               	movwf	(___flge@ff2+1)^0,c
 13112   001F6A  0E85               	movlw	133
 13113   001F6C  6E30               	movwf	(___flge@ff2+2)^0,c
 13114   001F6E  0E3E               	movlw	62
 13115   001F70  6E31               	movwf	(___flge@ff2+3)^0,c
 13116   001F72  EC2B  F025         	call	___flge	;wreg free
 13117   001F76  A0D8               	btfss	status,0,c
 13118   001F78  EFC0  F00F         	goto	u5361
 13119   001F7C  EFC2  F00F         	goto	u5360
 13120   001F80                     u5361:
 13121   001F80  EFE7  F00F         	goto	l5506
 13122   001F84                     u5360:
 13123   001F84  EE20 F008          	lfsr	2,8
 13124   001F88  504D               	movf	Colour_decider@rel^0,w,c
 13125   001F8A  26D9               	addwf	fsr2l,f,c
 13126   001F8C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13127   001F8E  22DA               	addwfc	fsr2h,f,c
 13128   001F90  CFDE F02A          	movff	postinc2,___flge@ff1
 13129   001F94  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13130   001F98  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13131   001F9C  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13132   001FA0  0ECD               	movlw	205
 13133   001FA2  6E2E               	movwf	___flge@ff2^0,c
 13134   001FA4  0ECC               	movlw	204
 13135   001FA6  6E2F               	movwf	(___flge@ff2+1)^0,c
 13136   001FA8  0ECC               	movlw	204
 13137   001FAA  6E30               	movwf	(___flge@ff2+2)^0,c
 13138   001FAC  0E3D               	movlw	61
 13139   001FAE  6E31               	movwf	(___flge@ff2+3)^0,c
 13140   001FB0  EC2B  F025         	call	___flge	;wreg free
 13141   001FB4  B0D8               	btfsc	status,0,c
 13142   001FB6  EFDF  F00F         	goto	u5371
 13143   001FBA  EFE1  F00F         	goto	u5370
 13144   001FBE                     u5371:
 13145   001FBE  EFE7  F00F         	goto	l5506
 13146   001FC2                     u5370:
 13147   001FC2                     
 13148                           ;color.c: 177:             return 3;
 13149   001FC2  0E00               	movlw	0
 13150   001FC4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13151   001FC6  0E03               	movlw	3
 13152   001FC8  6E4B               	movwf	?_Colour_decider^0,c
 13153   001FCA  EF15  F011         	goto	l80
 13154   001FCE                     l5506:
 13155                           
 13156                           ;color.c: 180:             return 10;
 13157   001FCE  0E00               	movlw	0
 13158   001FD0  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13159   001FD2  0E0A               	movlw	10
 13160   001FD4  6E4B               	movwf	?_Colour_decider^0,c
 13161   001FD6  EF15  F011         	goto	l80
 13162   001FDA                     l5510:
 13163   001FDA  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13164   001FDE  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13165   001FE2  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13166   001FE6  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13167   001FEA  0E00               	movlw	0
 13168   001FEC  6E2E               	movwf	___flge@ff2^0,c
 13169   001FEE  0E00               	movlw	0
 13170   001FF0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13171   001FF2  0EAA               	movlw	170
 13172   001FF4  6E30               	movwf	(___flge@ff2+2)^0,c
 13173   001FF6  0E42               	movlw	66
 13174   001FF8  6E31               	movwf	(___flge@ff2+3)^0,c
 13175   001FFA  EC2B  F025         	call	___flge	;wreg free
 13176   001FFE  A0D8               	btfss	status,0,c
 13177   002000  EF04  F010         	goto	u5381
 13178   002004  EF06  F010         	goto	u5380
 13179   002008                     u5381:
 13180   002008  EF25  F010         	goto	l5520
 13181   00200C                     u5380:
 13182   00200C  0E00               	movlw	0
 13183   00200E  6E2A               	movwf	___flge@ff1^0,c
 13184   002010  0E00               	movlw	0
 13185   002012  6E2B               	movwf	(___flge@ff1+1)^0,c
 13186   002014  0E20               	movlw	32
 13187   002016  6E2C               	movwf	(___flge@ff1+2)^0,c
 13188   002018  0E43               	movlw	67
 13189   00201A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13190   00201C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13191   002020  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13192   002024  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13193   002028  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13194   00202C  EC2B  F025         	call	___flge	;wreg free
 13195   002030  A0D8               	btfss	status,0,c
 13196   002032  EF1D  F010         	goto	u5391
 13197   002036  EF1F  F010         	goto	u5390
 13198   00203A                     u5391:
 13199   00203A  EF25  F010         	goto	l5520
 13200   00203E                     u5390:
 13201   00203E                     
 13202                           ;color.c: 186:         return 4;
 13203   00203E  0E00               	movlw	0
 13204   002040  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13205   002042  0E04               	movlw	4
 13206   002044  6E4B               	movwf	?_Colour_decider^0,c
 13207   002046  EF15  F011         	goto	l80
 13208   00204A                     l5520:
 13209   00204A  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13210   00204E  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13211   002052  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13212   002056  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13213   00205A  0E00               	movlw	0
 13214   00205C  6E2E               	movwf	___flge@ff2^0,c
 13215   00205E  0E00               	movlw	0
 13216   002060  6E2F               	movwf	(___flge@ff2+1)^0,c
 13217   002062  0E70               	movlw	112
 13218   002064  6E30               	movwf	(___flge@ff2+2)^0,c
 13219   002066  0E42               	movlw	66
 13220   002068  6E31               	movwf	(___flge@ff2+3)^0,c
 13221   00206A  EC2B  F025         	call	___flge	;wreg free
 13222   00206E  A0D8               	btfss	status,0,c
 13223   002070  EF3C  F010         	goto	u5401
 13224   002074  EF3E  F010         	goto	u5400
 13225   002078                     u5401:
 13226   002078  EFDF  F010         	goto	l5548
 13227   00207C                     u5400:
 13228   00207C  0E00               	movlw	0
 13229   00207E  6E2A               	movwf	___flge@ff1^0,c
 13230   002080  0E00               	movlw	0
 13231   002082  6E2B               	movwf	(___flge@ff1+1)^0,c
 13232   002084  0E9A               	movlw	154
 13233   002086  6E2C               	movwf	(___flge@ff1+2)^0,c
 13234   002088  0E42               	movlw	66
 13235   00208A  6E2D               	movwf	(___flge@ff1+3)^0,c
 13236   00208C  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13237   002090  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13238   002094  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13239   002098  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13240   00209C  EC2B  F025         	call	___flge	;wreg free
 13241   0020A0  A0D8               	btfss	status,0,c
 13242   0020A2  EF55  F010         	goto	u5411
 13243   0020A6  EF57  F010         	goto	u5410
 13244   0020AA                     u5411:
 13245   0020AA  EFDF  F010         	goto	l5548
 13246   0020AE                     u5410:
 13247   0020AE                     
 13248                           ;color.c: 191:         if ((0.12<=rel->B)&(0.21>rel->G)){
 13249   0020AE  EE20 F008          	lfsr	2,8
 13250   0020B2  504D               	movf	Colour_decider@rel^0,w,c
 13251   0020B4  26D9               	addwf	fsr2l,f,c
 13252   0020B6  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13253   0020B8  22DA               	addwfc	fsr2h,f,c
 13254   0020BA  CFDE F02A          	movff	postinc2,___flge@ff1
 13255   0020BE  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13256   0020C2  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13257   0020C6  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13258   0020CA  0E8F               	movlw	143
 13259   0020CC  6E2E               	movwf	___flge@ff2^0,c
 13260   0020CE  0EC2               	movlw	194
 13261   0020D0  6E2F               	movwf	(___flge@ff2+1)^0,c
 13262   0020D2  0EF5               	movlw	245
 13263   0020D4  6E30               	movwf	(___flge@ff2+2)^0,c
 13264   0020D6  0E3D               	movlw	61
 13265   0020D8  6E31               	movwf	(___flge@ff2+3)^0,c
 13266   0020DA  EC2B  F025         	call	___flge	;wreg free
 13267   0020DE  A0D8               	btfss	status,0,c
 13268   0020E0  EF74  F010         	goto	u5421
 13269   0020E4  EF76  F010         	goto	u5420
 13270   0020E8                     u5421:
 13271   0020E8  EF9B  F010         	goto	l5534
 13272   0020EC                     u5420:
 13273   0020EC  EE20 F004          	lfsr	2,4
 13274   0020F0  504D               	movf	Colour_decider@rel^0,w,c
 13275   0020F2  26D9               	addwf	fsr2l,f,c
 13276   0020F4  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13277   0020F6  22DA               	addwfc	fsr2h,f,c
 13278   0020F8  CFDE F02A          	movff	postinc2,___flge@ff1
 13279   0020FC  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13280   002100  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13281   002104  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13282   002108  0E3D               	movlw	61
 13283   00210A  6E2E               	movwf	___flge@ff2^0,c
 13284   00210C  0E0A               	movlw	10
 13285   00210E  6E2F               	movwf	(___flge@ff2+1)^0,c
 13286   002110  0E57               	movlw	87
 13287   002112  6E30               	movwf	(___flge@ff2+2)^0,c
 13288   002114  0E3E               	movlw	62
 13289   002116  6E31               	movwf	(___flge@ff2+3)^0,c
 13290   002118  EC2B  F025         	call	___flge	;wreg free
 13291   00211C  B0D8               	btfsc	status,0,c
 13292   00211E  EF93  F010         	goto	u5431
 13293   002122  EF95  F010         	goto	u5430
 13294   002126                     u5431:
 13295   002126  EF9B  F010         	goto	l5534
 13296   00212A                     u5430:
 13297   00212A                     
 13298                           ;color.c: 192:             return 6;
 13299   00212A  0E00               	movlw	0
 13300   00212C  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13301   00212E  0E06               	movlw	6
 13302   002130  6E4B               	movwf	?_Colour_decider^0,c
 13303   002132  EF15  F011         	goto	l80
 13304   002136                     l5534:
 13305   002136  EE20 F008          	lfsr	2,8
 13306   00213A  504D               	movf	Colour_decider@rel^0,w,c
 13307   00213C  26D9               	addwf	fsr2l,f,c
 13308   00213E  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13309   002140  22DA               	addwfc	fsr2h,f,c
 13310   002142  CFDE F02A          	movff	postinc2,___flge@ff1
 13311   002146  CFDE F02B          	movff	postinc2,___flge@ff1+1
 13312   00214A  CFDE F02C          	movff	postinc2,___flge@ff1+2
 13313   00214E  CFDE F02D          	movff	postinc2,___flge@ff1+3
 13314   002152  0E8F               	movlw	143
 13315   002154  6E2E               	movwf	___flge@ff2^0,c
 13316   002156  0EC2               	movlw	194
 13317   002158  6E2F               	movwf	(___flge@ff2+1)^0,c
 13318   00215A  0EF5               	movlw	245
 13319   00215C  6E30               	movwf	(___flge@ff2+2)^0,c
 13320   00215E  0E3D               	movlw	61
 13321   002160  6E31               	movwf	(___flge@ff2+3)^0,c
 13322   002162  EC2B  F025         	call	___flge	;wreg free
 13323   002166  B0D8               	btfsc	status,0,c
 13324   002168  EFB8  F010         	goto	u5441
 13325   00216C  EFBA  F010         	goto	u5440
 13326   002170                     u5441:
 13327   002170  EFE7  F00F         	goto	l5506
 13328   002174                     u5440:
 13329   002174  0E3D               	movlw	61
 13330   002176  6E2A               	movwf	___flge@ff1^0,c
 13331   002178  0E0A               	movlw	10
 13332   00217A  6E2B               	movwf	(___flge@ff1+1)^0,c
 13333   00217C  0E57               	movlw	87
 13334   00217E  6E2C               	movwf	(___flge@ff1+2)^0,c
 13335   002180  0E3E               	movlw	62
 13336   002182  6E2D               	movwf	(___flge@ff1+3)^0,c
 13337   002184  EE20 F004          	lfsr	2,4
 13338   002188  504D               	movf	Colour_decider@rel^0,w,c
 13339   00218A  26D9               	addwf	fsr2l,f,c
 13340   00218C  504E               	movf	(Colour_decider@rel+1)^0,w,c
 13341   00218E  22DA               	addwfc	fsr2h,f,c
 13342   002190  CFDE F02E          	movff	postinc2,___flge@ff2
 13343   002194  CFDE F02F          	movff	postinc2,___flge@ff2+1
 13344   002198  CFDE F030          	movff	postinc2,___flge@ff2+2
 13345   00219C  CFDE F031          	movff	postinc2,___flge@ff2+3
 13346   0021A0  EC2B  F025         	call	___flge	;wreg free
 13347   0021A4  B0D8               	btfsc	status,0,c
 13348   0021A6  EFD7  F010         	goto	u5451
 13349   0021AA  EFD9  F010         	goto	u5450
 13350   0021AE                     u5451:
 13351   0021AE  EFE7  F00F         	goto	l5506
 13352   0021B2                     u5450:
 13353   0021B2                     
 13354                           ;color.c: 195:             return 5;
 13355   0021B2  0E00               	movlw	0
 13356   0021B4  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13357   0021B6  0E05               	movlw	5
 13358   0021B8  6E4B               	movwf	?_Colour_decider^0,c
 13359   0021BA  EF15  F011         	goto	l80
 13360   0021BE                     l5548:
 13361   0021BE  C07C  F02A         	movff	Colour_decider@Hue,___flge@ff1
 13362   0021C2  C07D  F02B         	movff	Colour_decider@Hue+1,___flge@ff1+1
 13363   0021C6  C07E  F02C         	movff	Colour_decider@Hue+2,___flge@ff1+2
 13364   0021CA  C07F  F02D         	movff	Colour_decider@Hue+3,___flge@ff1+3
 13365   0021CE  0E00               	movlw	0
 13366   0021D0  6E2E               	movwf	___flge@ff2^0,c
 13367   0021D2  0E00               	movlw	0
 13368   0021D4  6E2F               	movwf	(___flge@ff2+1)^0,c
 13369   0021D6  0E40               	movlw	64
 13370   0021D8  6E30               	movwf	(___flge@ff2+2)^0,c
 13371   0021DA  0E41               	movlw	65
 13372   0021DC  6E31               	movwf	(___flge@ff2+3)^0,c
 13373   0021DE  EC2B  F025         	call	___flge	;wreg free
 13374   0021E2  A0D8               	btfss	status,0,c
 13375   0021E4  EFF6  F010         	goto	u5461
 13376   0021E8  EFF8  F010         	goto	u5460
 13377   0021EC                     u5461:
 13378   0021EC  EFE7  F00F         	goto	l5506
 13379   0021F0                     u5460:
 13380   0021F0  0E00               	movlw	0
 13381   0021F2  6E2A               	movwf	___flge@ff1^0,c
 13382   0021F4  0E00               	movlw	0
 13383   0021F6  6E2B               	movwf	(___flge@ff1+1)^0,c
 13384   0021F8  0E88               	movlw	136
 13385   0021FA  6E2C               	movwf	(___flge@ff1+2)^0,c
 13386   0021FC  0E41               	movlw	65
 13387   0021FE  6E2D               	movwf	(___flge@ff1+3)^0,c
 13388   002200  C07C  F02E         	movff	Colour_decider@Hue,___flge@ff2
 13389   002204  C07D  F02F         	movff	Colour_decider@Hue+1,___flge@ff2+1
 13390   002208  C07E  F030         	movff	Colour_decider@Hue+2,___flge@ff2+2
 13391   00220C  C07F  F031         	movff	Colour_decider@Hue+3,___flge@ff2+3
 13392   002210  EC2B  F025         	call	___flge	;wreg free
 13393   002214  A0D8               	btfss	status,0,c
 13394   002216  EF0F  F011         	goto	u5471
 13395   00221A  EF11  F011         	goto	u5470
 13396   00221E                     u5471:
 13397   00221E  EFE7  F00F         	goto	l5506
 13398   002222                     u5470:
 13399   002222                     
 13400                           ;color.c: 204:             return 7;
 13401   002222  0E00               	movlw	0
 13402   002224  6E4C               	movwf	(?_Colour_decider+1)^0,c
 13403   002226  0E07               	movlw	7
 13404   002228  6E4B               	movwf	?_Colour_decider^0,c
 13405   00222A                     l80:
 13406   00222A  0012               	return		;funcret
 13407   00222C                     __end_of_Colour_decider:
 13408                           	callstack 0
 13409                           
 13410 ;; *************** function ___xxtofl *****************
 13411 ;; Defined at:
 13412 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
 13413 ;; Parameters:    Size  Location     Type
 13414 ;;  sign            1    wreg     unsigned char 
 13415 ;;  val             4    0[COMRAM] long 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  sign            1    8[COMRAM] unsigned char 
 13418 ;;  arg             4   10[COMRAM] unsigned long 
 13419 ;;  exp             1    9[COMRAM] unsigned char 
 13420 ;; Return value:  Size  Location     Type
 13421 ;;                  4    0[COMRAM] unsigned char 
 13422 ;; Registers used:
 13423 ;;		wreg, status,2, status,0
 13424 ;; Tracked objects:
 13425 ;;		On entry : 0/0
 13426 ;;		On exit  : 0/0
 13427 ;;		Unchanged: 0/0
 13428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13429 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13430 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13432 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13433 ;;Total ram usage:       14 bytes
 13434 ;; Hardware stack levels used: 1
 13435 ;; Hardware stack levels required when called: 1
 13436 ;; This function calls:
 13437 ;;		Nothing
 13438 ;; This function is called by:
 13439 ;;		_colour_rel
 13440 ;;		_Colour_decider
 13441 ;;		_reverseOneBlock
 13442 ;;		_ForwardOneBlock
 13443 ;;		_Forwardhalfblock
 13444 ;;		_Backhalfblock
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           	psect	text78
 13449   004198                     __ptext78:
 13450                           	callstack 0
 13451   004198                     ___xxtofl:
 13452                           	callstack 28
 13453                           
 13454                           ;incstack = 0
 13455                           ;___xxtofl@sign stored from wreg
 13456   004198  6E09               	movwf	___xxtofl@sign^0,c
 13457   00419A  5009               	movf	___xxtofl@sign^0,w,c
 13458   00419C  B4D8               	btfsc	status,2,c
 13459   00419E  EFD3  F020         	goto	u5081
 13460   0041A2  EFD5  F020         	goto	u5080
 13461   0041A6                     u5081:
 13462   0041A6  EFF7  F020         	goto	l1412
 13463   0041AA                     u5080:
 13464   0041AA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13465   0041AC  EFDC  F020         	goto	u5090
 13466   0041B0  EFDA  F020         	goto	u5091
 13467   0041B4                     u5091:
 13468   0041B4  EFF7  F020         	goto	l1412
 13469   0041B8                     u5090:
 13470   0041B8  C001  F005         	movff	___xxtofl@val,??___xxtofl
 13471   0041BC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
 13472   0041C0  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
 13473   0041C4  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
 13474   0041C8  1E05               	comf	??___xxtofl^0,f,c
 13475   0041CA  1E06               	comf	(??___xxtofl+1)^0,f,c
 13476   0041CC  1E07               	comf	(??___xxtofl+2)^0,f,c
 13477   0041CE  1E08               	comf	(??___xxtofl+3)^0,f,c
 13478   0041D0  2A05               	incf	??___xxtofl^0,f,c
 13479   0041D2  0E00               	movlw	0
 13480   0041D4  2206               	addwfc	(??___xxtofl+1)^0,f,c
 13481   0041D6  2207               	addwfc	(??___xxtofl+2)^0,f,c
 13482   0041D8  2208               	addwfc	(??___xxtofl+3)^0,f,c
 13483   0041DA  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
 13484   0041DE  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
 13485   0041E2  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
 13486   0041E6  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
 13487   0041EA  EFFF  F020         	goto	l5308
 13488   0041EE                     l1412:
 13489   0041EE  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
 13490   0041F2  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13491   0041F6  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13492   0041FA  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13493   0041FE                     l5308:
 13494   0041FE  5001               	movf	___xxtofl@val^0,w,c
 13495   004200  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 13496   004202  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 13497   004204  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 13498   004206  A4D8               	btfss	status,2,c
 13499   004208  EF08  F021         	goto	u5101
 13500   00420C  EF0A  F021         	goto	u5100
 13501   004210                     u5101:
 13502   004210  EF14  F021         	goto	l5314
 13503   004214                     u5100:
 13504   004214  0E00               	movlw	0
 13505   004216  6E01               	movwf	?___xxtofl^0,c
 13506   004218  0E00               	movlw	0
 13507   00421A  6E02               	movwf	(?___xxtofl+1)^0,c
 13508   00421C  0E00               	movlw	0
 13509   00421E  6E03               	movwf	(?___xxtofl+2)^0,c
 13510   004220  0E00               	movlw	0
 13511   004222  6E04               	movwf	(?___xxtofl+3)^0,c
 13512   004224  EFA5  F021         	goto	l1415
 13513   004228                     l5314:
 13514   004228  0E96               	movlw	150
 13515   00422A  6E0A               	movwf	___xxtofl@exp^0,c
 13516   00422C  EF1E  F021         	goto	l5318
 13517   004230                     l5316:
 13518   004230  2A0A               	incf	___xxtofl@exp^0,f,c
 13519   004232  90D8               	bcf	status,0,c
 13520   004234  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13521   004236  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13522   004238  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13523   00423A  320B               	rrcf	___xxtofl@arg^0,f,c
 13524   00423C                     l5318:
 13525   00423C  0E00               	movlw	0
 13526   00423E  140B               	andwf	___xxtofl@arg^0,w,c
 13527   004240  6E05               	movwf	??___xxtofl^0,c
 13528   004242  0E00               	movlw	0
 13529   004244  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13530   004246  6E06               	movwf	(??___xxtofl+1)^0,c
 13531   004248  0E00               	movlw	0
 13532   00424A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13533   00424C  6E07               	movwf	(??___xxtofl+2)^0,c
 13534   00424E  0EFE               	movlw	254
 13535   004250  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13536   004252  6E08               	movwf	(??___xxtofl+3)^0,c
 13537   004254  5005               	movf	??___xxtofl^0,w,c
 13538   004256  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13539   004258  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13540   00425A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13541   00425C  A4D8               	btfss	status,2,c
 13542   00425E  EF33  F021         	goto	u5111
 13543   004262  EF35  F021         	goto	u5110
 13544   004266                     u5111:
 13545   004266  EF18  F021         	goto	l5316
 13546   00426A                     u5110:
 13547   00426A  EF43  F021         	goto	l1419
 13548   00426E                     l5320:
 13549   00426E  2A0A               	incf	___xxtofl@exp^0,f,c
 13550   004270  0E01               	movlw	1
 13551   004272  260B               	addwf	___xxtofl@arg^0,f,c
 13552   004274  0E00               	movlw	0
 13553   004276  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 13554   004278  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 13555   00427A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 13556   00427C  90D8               	bcf	status,0,c
 13557   00427E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 13558   004280  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 13559   004282  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 13560   004284  320B               	rrcf	___xxtofl@arg^0,f,c
 13561   004286                     l1419:
 13562   004286  0E00               	movlw	0
 13563   004288  140B               	andwf	___xxtofl@arg^0,w,c
 13564   00428A  6E05               	movwf	??___xxtofl^0,c
 13565   00428C  0E00               	movlw	0
 13566   00428E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 13567   004290  6E06               	movwf	(??___xxtofl+1)^0,c
 13568   004292  0E00               	movlw	0
 13569   004294  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 13570   004296  6E07               	movwf	(??___xxtofl+2)^0,c
 13571   004298  0EFF               	movlw	255
 13572   00429A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 13573   00429C  6E08               	movwf	(??___xxtofl+3)^0,c
 13574   00429E  5005               	movf	??___xxtofl^0,w,c
 13575   0042A0  1006               	iorwf	(??___xxtofl+1)^0,w,c
 13576   0042A2  1007               	iorwf	(??___xxtofl+2)^0,w,c
 13577   0042A4  1008               	iorwf	(??___xxtofl+3)^0,w,c
 13578   0042A6  A4D8               	btfss	status,2,c
 13579   0042A8  EF58  F021         	goto	u5121
 13580   0042AC  EF5A  F021         	goto	u5120
 13581   0042B0                     u5121:
 13582   0042B0  EF37  F021         	goto	l5320
 13583   0042B4                     u5120:
 13584   0042B4  EF62  F021         	goto	l5328
 13585   0042B8                     l5326:
 13586   0042B8  060A               	decf	___xxtofl@exp^0,f,c
 13587   0042BA  90D8               	bcf	status,0,c
 13588   0042BC  360B               	rlcf	___xxtofl@arg^0,f,c
 13589   0042BE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 13590   0042C0  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 13591   0042C2  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 13592   0042C4                     l5328:
 13593   0042C4  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 13594   0042C6  EF67  F021         	goto	u5131
 13595   0042CA  EF69  F021         	goto	u5130
 13596   0042CE                     u5131:
 13597   0042CE  EF71  F021         	goto	l1426
 13598   0042D2                     u5130:
 13599   0042D2  0E02               	movlw	2
 13600   0042D4  600A               	cpfslt	___xxtofl@exp^0,c
 13601   0042D6  EF6F  F021         	goto	u5141
 13602   0042DA  EF71  F021         	goto	u5140
 13603   0042DE                     u5141:
 13604   0042DE  EF5C  F021         	goto	l5326
 13605   0042E2                     u5140:
 13606   0042E2                     l1426:
 13607   0042E2  B00A               	btfsc	___xxtofl@exp^0,0,c
 13608   0042E4  EF76  F021         	goto	u5151
 13609   0042E8  EF78  F021         	goto	u5150
 13610   0042EC                     u5151:
 13611   0042EC  EF79  F021         	goto	l5334
 13612   0042F0                     u5150:
 13613   0042F0  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 13614   0042F2                     l5334:
 13615   0042F2  90D8               	bcf	status,0,c
 13616   0042F4  320A               	rrcf	___xxtofl@exp^0,f,c
 13617   0042F6  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
 13618   0042FA  6A06               	clrf	(??___xxtofl+1)^0,c
 13619   0042FC  6A07               	clrf	(??___xxtofl+2)^0,c
 13620   0042FE  6A08               	clrf	(??___xxtofl+3)^0,c
 13621   004300  C005  F008         	movff	??___xxtofl,??___xxtofl+3
 13622   004304  6A07               	clrf	(??___xxtofl+2)^0,c
 13623   004306  6A06               	clrf	(??___xxtofl+1)^0,c
 13624   004308  6A05               	clrf	??___xxtofl^0,c
 13625   00430A  5005               	movf	??___xxtofl^0,w,c
 13626   00430C  120B               	iorwf	___xxtofl@arg^0,f,c
 13627   00430E  5006               	movf	(??___xxtofl+1)^0,w,c
 13628   004310  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 13629   004312  5007               	movf	(??___xxtofl+2)^0,w,c
 13630   004314  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 13631   004316  5008               	movf	(??___xxtofl+3)^0,w,c
 13632   004318  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 13633   00431A  5009               	movf	___xxtofl@sign^0,w,c
 13634   00431C  B4D8               	btfsc	status,2,c
 13635   00431E  EF93  F021         	goto	u5161
 13636   004322  EF95  F021         	goto	u5160
 13637   004326                     u5161:
 13638   004326  EF9D  F021         	goto	l5344
 13639   00432A                     u5160:
 13640   00432A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 13641   00432C  EF9C  F021         	goto	u5170
 13642   004330  EF9A  F021         	goto	u5171
 13643   004334                     u5171:
 13644   004334  EF9D  F021         	goto	l5344
 13645   004338                     u5170:
 13646   004338  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 13647   00433A                     l5344:
 13648   00433A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
 13649   00433E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
 13650   004342  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
 13651   004346  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
 13652   00434A                     l1415:
 13653   00434A  0012               	return		;funcret
 13654   00434C                     __end_of___xxtofl:
 13655                           	callstack 0
 13656                           
 13657 ;; *************** function ___flsub *****************
 13658 ;; Defined at:
 13659 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13660 ;; Parameters:    Size  Location     Type
 13661 ;;  b               4   41[COMRAM] unsigned char 
 13662 ;;  a               4   45[COMRAM] unsigned char 
 13663 ;; Auto vars:     Size  Location     Type
 13664 ;;		None
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  4   41[COMRAM] unsigned char 
 13667 ;; Registers used:
 13668 ;;		wreg, status,2, status,0, cstack
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13674 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13677 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13678 ;;Total ram usage:        8 bytes
 13679 ;; Hardware stack levels used: 1
 13680 ;; Hardware stack levels required when called: 2
 13681 ;; This function calls:
 13682 ;;		___fladd
 13683 ;; This function is called by:
 13684 ;;		_Colour_decider
 13685 ;;		_efgtoa
 13686 ;; This function uses a non-reentrant model
 13687 ;;
 13688                           
 13689                           	psect	text79
 13690   005E16                     __ptext79:
 13691                           	callstack 0
 13692   005E16                     ___flsub:
 13693                           	callstack 24
 13694   005E16  0E00               	movlw	0
 13695   005E18  1A2E               	xorwf	___flsub@a^0,f,c
 13696   005E1A  0E00               	movlw	0
 13697   005E1C  1A2F               	xorwf	(___flsub@a+1)^0,f,c
 13698   005E1E  0E00               	movlw	0
 13699   005E20  1A30               	xorwf	(___flsub@a+2)^0,f,c
 13700   005E22  0E80               	movlw	128
 13701   005E24  1A31               	xorwf	(___flsub@a+3)^0,f,c
 13702   005E26  C02A  F001         	movff	___flsub@b,___fladd@b
 13703   005E2A  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
 13704   005E2E  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
 13705   005E32  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
 13706   005E36  C02E  F005         	movff	___flsub@a,___fladd@a
 13707   005E3A  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
 13708   005E3E  C030  F007         	movff	___flsub@a+2,___fladd@a+2
 13709   005E42  C031  F008         	movff	___flsub@a+3,___fladd@a+3
 13710   005E46  EC16  F011         	call	___fladd	;wreg free
 13711   005E4A  C001  F02A         	movff	?___fladd,?___flsub
 13712   005E4E  C002  F02B         	movff	?___fladd+1,?___flsub+1
 13713   005E52  C003  F02C         	movff	?___fladd+2,?___flsub+2
 13714   005E56  C004  F02D         	movff	?___fladd+3,?___flsub+3
 13715   005E5A  0012               	return		;funcret
 13716   005E5C                     __end_of___flsub:
 13717                           	callstack 0
 13718                           
 13719 ;; *************** function ___fladd *****************
 13720 ;; Defined at:
 13721 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  b               4    0[COMRAM] unsigned char 
 13724 ;;  a               4    4[COMRAM] unsigned char 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  grs             1   15[COMRAM] unsigned char 
 13727 ;;  bexp            1   14[COMRAM] unsigned char 
 13728 ;;  aexp            1   13[COMRAM] unsigned char 
 13729 ;;  signs           1   12[COMRAM] unsigned char 
 13730 ;; Return value:  Size  Location     Type
 13731 ;;                  4    0[COMRAM] unsigned char 
 13732 ;; Registers used:
 13733 ;;		wreg, status,2, status,0
 13734 ;; Tracked objects:
 13735 ;;		On entry : 0/0
 13736 ;;		On exit  : 0/0
 13737 ;;		Unchanged: 0/0
 13738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13739 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13742 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13743 ;;Total ram usage:       16 bytes
 13744 ;; Hardware stack levels used: 1
 13745 ;; Hardware stack levels required when called: 1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_colour_rel
 13750 ;;		_Colour_decider
 13751 ;;		___flsub
 13752 ;;		_efgtoa
 13753 ;; This function uses a non-reentrant model
 13754 ;;
 13755                           
 13756                           	psect	text80
 13757   00222C                     __ptext80:
 13758                           	callstack 0
 13759   00222C                     ___fladd:
 13760                           	callstack 24
 13761   00222C  5004               	movf	(___fladd@b+3)^0,w,c
 13762   00222E  0B80               	andlw	128
 13763   002230  6E0D               	movwf	___fladd@signs^0,c
 13764   002232  5004               	movf	(___fladd@b+3)^0,w,c
 13765   002234  2404               	addwf	(___fladd@b+3)^0,w,c
 13766   002236  6E0F               	movwf	___fladd@bexp^0,c
 13767   002238  AE03               	btfss	(___fladd@b+2)^0,7,c
 13768   00223A  EF21  F011         	goto	u3011
 13769   00223E  EF23  F011         	goto	u3010
 13770   002242                     u3011:
 13771   002242  EF24  F011         	goto	l3916
 13772   002246                     u3010:
 13773   002246  800F               	bsf	___fladd@bexp^0,0,c
 13774   002248                     l3916:
 13775   002248  500F               	movf	___fladd@bexp^0,w,c
 13776   00224A  B4D8               	btfsc	status,2,c
 13777   00224C  EF2A  F011         	goto	u3021
 13778   002250  EF2C  F011         	goto	u3020
 13779   002254                     u3021:
 13780   002254  EF41  F011         	goto	l3926
 13781   002258                     u3020:
 13782   002258  280F               	incf	___fladd@bexp^0,w,c
 13783   00225A  A4D8               	btfss	status,2,c
 13784   00225C  EF32  F011         	goto	u3031
 13785   002260  EF34  F011         	goto	u3030
 13786   002264                     u3031:
 13787   002264  EF3C  F011         	goto	l3922
 13788   002268                     u3030:
 13789   002268  0E00               	movlw	0
 13790   00226A  6E01               	movwf	___fladd@b^0,c
 13791   00226C  0E00               	movlw	0
 13792   00226E  6E02               	movwf	(___fladd@b+1)^0,c
 13793   002270  0E00               	movlw	0
 13794   002272  6E03               	movwf	(___fladd@b+2)^0,c
 13795   002274  0E00               	movlw	0
 13796   002276  6E04               	movwf	(___fladd@b+3)^0,c
 13797   002278                     l3922:
 13798   002278  8E03               	bsf	(___fladd@b+2)^0,7,c
 13799   00227A  0E00               	movlw	0
 13800   00227C  6E04               	movwf	(___fladd@b+3)^0,c
 13801   00227E  EF49  F011         	goto	l3928
 13802   002282                     l3926:
 13803   002282  0E00               	movlw	0
 13804   002284  6E01               	movwf	___fladd@b^0,c
 13805   002286  0E00               	movlw	0
 13806   002288  6E02               	movwf	(___fladd@b+1)^0,c
 13807   00228A  0E00               	movlw	0
 13808   00228C  6E03               	movwf	(___fladd@b+2)^0,c
 13809   00228E  0E00               	movlw	0
 13810   002290  6E04               	movwf	(___fladd@b+3)^0,c
 13811   002292                     l3928:
 13812   002292  5008               	movf	(___fladd@a+3)^0,w,c
 13813   002294  0B80               	andlw	128
 13814   002296  6E0E               	movwf	___fladd@aexp^0,c
 13815   002298  500D               	movf	___fladd@signs^0,w,c
 13816   00229A  180E               	xorwf	___fladd@aexp^0,w,c
 13817   00229C  B4D8               	btfsc	status,2,c
 13818   00229E  EF53  F011         	goto	u3041
 13819   0022A2  EF55  F011         	goto	u3040
 13820   0022A6                     u3041:
 13821   0022A6  EF56  F011         	goto	l3934
 13822   0022AA                     u3040:
 13823   0022AA  8C0D               	bsf	___fladd@signs^0,6,c
 13824   0022AC                     l3934:
 13825   0022AC  5008               	movf	(___fladd@a+3)^0,w,c
 13826   0022AE  2408               	addwf	(___fladd@a+3)^0,w,c
 13827   0022B0  6E0E               	movwf	___fladd@aexp^0,c
 13828   0022B2  AE07               	btfss	(___fladd@a+2)^0,7,c
 13829   0022B4  EF5E  F011         	goto	u3051
 13830   0022B8  EF60  F011         	goto	u3050
 13831   0022BC                     u3051:
 13832   0022BC  EF61  F011         	goto	l3940
 13833   0022C0                     u3050:
 13834   0022C0  800E               	bsf	___fladd@aexp^0,0,c
 13835   0022C2                     l3940:
 13836   0022C2  500E               	movf	___fladd@aexp^0,w,c
 13837   0022C4  B4D8               	btfsc	status,2,c
 13838   0022C6  EF67  F011         	goto	u3061
 13839   0022CA  EF69  F011         	goto	u3060
 13840   0022CE                     u3061:
 13841   0022CE  EF7E  F011         	goto	l3950
 13842   0022D2                     u3060:
 13843   0022D2  280E               	incf	___fladd@aexp^0,w,c
 13844   0022D4  A4D8               	btfss	status,2,c
 13845   0022D6  EF6F  F011         	goto	u3071
 13846   0022DA  EF71  F011         	goto	u3070
 13847   0022DE                     u3071:
 13848   0022DE  EF79  F011         	goto	l3946
 13849   0022E2                     u3070:
 13850   0022E2  0E00               	movlw	0
 13851   0022E4  6E05               	movwf	___fladd@a^0,c
 13852   0022E6  0E00               	movlw	0
 13853   0022E8  6E06               	movwf	(___fladd@a+1)^0,c
 13854   0022EA  0E00               	movlw	0
 13855   0022EC  6E07               	movwf	(___fladd@a+2)^0,c
 13856   0022EE  0E00               	movlw	0
 13857   0022F0  6E08               	movwf	(___fladd@a+3)^0,c
 13858   0022F2                     l3946:
 13859   0022F2  8E07               	bsf	(___fladd@a+2)^0,7,c
 13860   0022F4  0E00               	movlw	0
 13861   0022F6  6E08               	movwf	(___fladd@a+3)^0,c
 13862   0022F8  EF86  F011         	goto	l3952
 13863   0022FC                     l3950:
 13864   0022FC  0E00               	movlw	0
 13865   0022FE  6E05               	movwf	___fladd@a^0,c
 13866   002300  0E00               	movlw	0
 13867   002302  6E06               	movwf	(___fladd@a+1)^0,c
 13868   002304  0E00               	movlw	0
 13869   002306  6E07               	movwf	(___fladd@a+2)^0,c
 13870   002308  0E00               	movlw	0
 13871   00230A  6E08               	movwf	(___fladd@a+3)^0,c
 13872   00230C                     l3952:
 13873   00230C  500F               	movf	___fladd@bexp^0,w,c
 13874   00230E  5C0E               	subwf	___fladd@aexp^0,w,c
 13875   002310  B0D8               	btfsc	status,0,c
 13876   002312  EF8D  F011         	goto	u3081
 13877   002316  EF8F  F011         	goto	u3080
 13878   00231A                     u3081:
 13879   00231A  EFB6  F011         	goto	l3988
 13880   00231E                     u3080:
 13881   00231E  AC0D               	btfss	___fladd@signs^0,6,c
 13882   002320  EF94  F011         	goto	u3091
 13883   002324  EF96  F011         	goto	u3090
 13884   002328                     u3091:
 13885   002328  EF98  F011         	goto	l3958
 13886   00232C                     u3090:
 13887   00232C  0E80               	movlw	128
 13888   00232E  1A0D               	xorwf	___fladd@signs^0,f,c
 13889   002330                     l3958:
 13890   002330  C00F  F010         	movff	___fladd@bexp,___fladd@grs
 13891   002334  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13892   002338  C010  F00E         	movff	___fladd@grs,___fladd@aexp
 13893   00233C  C001  F010         	movff	___fladd@b,___fladd@grs
 13894   002340  C005  F001         	movff	___fladd@a,___fladd@b
 13895   002344  C010  F005         	movff	___fladd@grs,___fladd@a
 13896   002348  C002  F010         	movff	___fladd@b+1,___fladd@grs
 13897   00234C  C006  F002         	movff	___fladd@a+1,___fladd@b+1
 13898   002350  C010  F006         	movff	___fladd@grs,___fladd@a+1
 13899   002354  C003  F010         	movff	___fladd@b+2,___fladd@grs
 13900   002358  C007  F003         	movff	___fladd@a+2,___fladd@b+2
 13901   00235C  C010  F007         	movff	___fladd@grs,___fladd@a+2
 13902   002360  C004  F010         	movff	___fladd@b+3,___fladd@grs
 13903   002364  C008  F004         	movff	___fladd@a+3,___fladd@b+3
 13904   002368  C010  F008         	movff	___fladd@grs,___fladd@a+3
 13905   00236C                     l3988:
 13906   00236C  0E00               	movlw	0
 13907   00236E  6E10               	movwf	___fladd@grs^0,c
 13908   002370  500F               	movf	___fladd@bexp^0,w,c
 13909   002372  C00E  F009         	movff	___fladd@aexp,??___fladd
 13910   002376  6A0A               	clrf	(??___fladd+1)^0,c
 13911   002378  5E09               	subwf	??___fladd^0,f,c
 13912   00237A  0E00               	movlw	0
 13913   00237C  5A0A               	subwfb	(??___fladd+1)^0,f,c
 13914   00237E  BE0A               	btfsc	(??___fladd+1)^0,7,c
 13915   002380  EFCB  F011         	goto	u3101
 13916   002384  500A               	movf	(??___fladd+1)^0,w,c
 13917   002386  E109               	bnz	u3100
 13918   002388  0E1A               	movlw	26
 13919   00238A  5C09               	subwf	??___fladd^0,w,c
 13920   00238C  A0D8               	btfss	status,0,c
 13921   00238E  EFCB  F011         	goto	u3101
 13922   002392  EFCD  F011         	goto	u3100
 13923   002396                     u3101:
 13924   002396  EF04  F012         	goto	l1286
 13925   00239A                     u3100:
 13926   00239A  5001               	movf	___fladd@b^0,w,c
 13927   00239C  1002               	iorwf	(___fladd@b+1)^0,w,c
 13928   00239E  1003               	iorwf	(___fladd@b+2)^0,w,c
 13929   0023A0  1004               	iorwf	(___fladd@b+3)^0,w,c
 13930   0023A2  A4D8               	btfss	status,2,c
 13931   0023A4  EFD6  F011         	goto	u3111
 13932   0023A8  EFD9  F011         	goto	u3110
 13933   0023AC                     u3111:
 13934   0023AC  0E01               	movlw	1
 13935   0023AE  EFDA  F011         	goto	u3120
 13936   0023B2                     u3110:
 13937   0023B2  0E00               	movlw	0
 13938   0023B4                     u3120:
 13939   0023B4  6E10               	movwf	___fladd@grs^0,c
 13940   0023B6  0E00               	movlw	0
 13941   0023B8  6E01               	movwf	___fladd@b^0,c
 13942   0023BA  0E00               	movlw	0
 13943   0023BC  6E02               	movwf	(___fladd@b+1)^0,c
 13944   0023BE  0E00               	movlw	0
 13945   0023C0  6E03               	movwf	(___fladd@b+2)^0,c
 13946   0023C2  0E00               	movlw	0
 13947   0023C4  6E04               	movwf	(___fladd@b+3)^0,c
 13948   0023C6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
 13949   0023CA  EF0D  F012         	goto	l1285
 13950   0023CE                     l1287:
 13951   0023CE  A010               	btfss	___fladd@grs^0,0,c
 13952   0023D0  EFEC  F011         	goto	u3131
 13953   0023D4  EFEE  F011         	goto	u3130
 13954   0023D8                     u3131:
 13955   0023D8  EFF4  F011         	goto	l4000
 13956   0023DC                     u3130:
 13957   0023DC  90D8               	bcf	status,0,c
 13958   0023DE  3010               	rrcf	___fladd@grs^0,w,c
 13959   0023E0  0901               	iorlw	1
 13960   0023E2  6E10               	movwf	___fladd@grs^0,c
 13961   0023E4  EFF6  F011         	goto	l4002
 13962   0023E8                     l4000:
 13963   0023E8  90D8               	bcf	status,0,c
 13964   0023EA  3210               	rrcf	___fladd@grs^0,f,c
 13965   0023EC                     l4002:
 13966   0023EC  A001               	btfss	___fladd@b^0,0,c
 13967   0023EE  EFFB  F011         	goto	u3141
 13968   0023F2  EFFD  F011         	goto	u3140
 13969   0023F6                     u3141:
 13970   0023F6  EFFE  F011         	goto	l4006
 13971   0023FA                     u3140:
 13972   0023FA  8E10               	bsf	___fladd@grs^0,7,c
 13973   0023FC                     l4006:
 13974   0023FC  3404               	rlcf	(___fladd@b+3)^0,w,c
 13975   0023FE  3204               	rrcf	(___fladd@b+3)^0,f,c
 13976   002400  3203               	rrcf	(___fladd@b+2)^0,f,c
 13977   002402  3202               	rrcf	(___fladd@b+1)^0,f,c
 13978   002404  3201               	rrcf	___fladd@b^0,f,c
 13979   002406  2A0F               	incf	___fladd@bexp^0,f,c
 13980   002408                     l1286:
 13981   002408  500E               	movf	___fladd@aexp^0,w,c
 13982   00240A  5C0F               	subwf	___fladd@bexp^0,w,c
 13983   00240C  A0D8               	btfss	status,0,c
 13984   00240E  EF0B  F012         	goto	u3151
 13985   002412  EF0D  F012         	goto	u3150
 13986   002416                     u3151:
 13987   002416  EFE7  F011         	goto	l1287
 13988   00241A                     u3150:
 13989   00241A                     l1285:
 13990   00241A  BC0D               	btfsc	___fladd@signs^0,6,c
 13991   00241C  EF12  F012         	goto	u3161
 13992   002420  EF14  F012         	goto	u3160
 13993   002424                     u3161:
 13994   002424  EF54  F012         	goto	l4034
 13995   002428                     u3160:
 13996   002428  500F               	movf	___fladd@bexp^0,w,c
 13997   00242A  A4D8               	btfss	status,2,c
 13998   00242C  EF1A  F012         	goto	u3171
 13999   002430  EF1C  F012         	goto	u3170
 14000   002434                     u3171:
 14001   002434  EF26  F012         	goto	l4016
 14002   002438                     u3170:
 14003   002438  0E00               	movlw	0
 14004   00243A  6E01               	movwf	?___fladd^0,c
 14005   00243C  0E00               	movlw	0
 14006   00243E  6E02               	movwf	(?___fladd+1)^0,c
 14007   002440  0E00               	movlw	0
 14008   002442  6E03               	movwf	(?___fladd+2)^0,c
 14009   002444  0E00               	movlw	0
 14010   002446  6E04               	movwf	(?___fladd+3)^0,c
 14011   002448  EF75  F013         	goto	l1294
 14012   00244C                     l4016:
 14013   00244C  5005               	movf	___fladd@a^0,w,c
 14014   00244E  2601               	addwf	___fladd@b^0,f,c
 14015   002450  5006               	movf	(___fladd@a+1)^0,w,c
 14016   002452  2202               	addwfc	(___fladd@b+1)^0,f,c
 14017   002454  5007               	movf	(___fladd@a+2)^0,w,c
 14018   002456  2203               	addwfc	(___fladd@b+2)^0,f,c
 14019   002458  5008               	movf	(___fladd@a+3)^0,w,c
 14020   00245A  2204               	addwfc	(___fladd@b+3)^0,f,c
 14021   00245C  A004               	btfss	(___fladd@b+3)^0,0,c
 14022   00245E  EF33  F012         	goto	u3181
 14023   002462  EF35  F012         	goto	u3180
 14024   002466                     u3181:
 14025   002466  EFE1  F012         	goto	l4070
 14026   00246A                     u3180:
 14027   00246A  A010               	btfss	___fladd@grs^0,0,c
 14028   00246C  EF3A  F012         	goto	u3191
 14029   002470  EF3C  F012         	goto	u3190
 14030   002474                     u3191:
 14031   002474  EF42  F012         	goto	l4024
 14032   002478                     u3190:
 14033   002478  90D8               	bcf	status,0,c
 14034   00247A  3010               	rrcf	___fladd@grs^0,w,c
 14035   00247C  0901               	iorlw	1
 14036   00247E  6E10               	movwf	___fladd@grs^0,c
 14037   002480  EF44  F012         	goto	l4026
 14038   002484                     l4024:
 14039   002484  90D8               	bcf	status,0,c
 14040   002486  3210               	rrcf	___fladd@grs^0,f,c
 14041   002488                     l4026:
 14042   002488  A001               	btfss	___fladd@b^0,0,c
 14043   00248A  EF49  F012         	goto	u3201
 14044   00248E  EF4B  F012         	goto	u3200
 14045   002492                     u3201:
 14046   002492  EF4C  F012         	goto	l4030
 14047   002496                     u3200:
 14048   002496  8E10               	bsf	___fladd@grs^0,7,c
 14049   002498                     l4030:
 14050   002498  3404               	rlcf	(___fladd@b+3)^0,w,c
 14051   00249A  3204               	rrcf	(___fladd@b+3)^0,f,c
 14052   00249C  3203               	rrcf	(___fladd@b+2)^0,f,c
 14053   00249E  3202               	rrcf	(___fladd@b+1)^0,f,c
 14054   0024A0  3201               	rrcf	___fladd@b^0,f,c
 14055   0024A2  2A0F               	incf	___fladd@bexp^0,f,c
 14056   0024A4  EFE1  F012         	goto	l4070
 14057   0024A8                     l4034:
 14058   0024A8  5005               	movf	___fladd@a^0,w,c
 14059   0024AA  5C01               	subwf	___fladd@b^0,w,c
 14060   0024AC  5006               	movf	(___fladd@a+1)^0,w,c
 14061   0024AE  5802               	subwfb	(___fladd@b+1)^0,w,c
 14062   0024B0  5007               	movf	(___fladd@a+2)^0,w,c
 14063   0024B2  5803               	subwfb	(___fladd@b+2)^0,w,c
 14064   0024B4  5004               	movf	(___fladd@b+3)^0,w,c
 14065   0024B6  0A80               	xorlw	128
 14066   0024B8  6E09               	movwf	??___fladd^0,c
 14067   0024BA  5008               	movf	(___fladd@a+3)^0,w,c
 14068   0024BC  0A80               	xorlw	128
 14069   0024BE  5809               	subwfb	??___fladd^0,w,c
 14070   0024C0  B0D8               	btfsc	status,0,c
 14071   0024C2  EF65  F012         	goto	u3211
 14072   0024C6  EF67  F012         	goto	u3210
 14073   0024CA                     u3211:
 14074   0024CA  EF92  F012         	goto	l4044
 14075   0024CE                     u3210:
 14076   0024CE  5001               	movf	___fladd@b^0,w,c
 14077   0024D0  5C05               	subwf	___fladd@a^0,w,c
 14078   0024D2  6E09               	movwf	??___fladd^0,c
 14079   0024D4  5002               	movf	(___fladd@b+1)^0,w,c
 14080   0024D6  5806               	subwfb	(___fladd@a+1)^0,w,c
 14081   0024D8  6E0A               	movwf	(??___fladd+1)^0,c
 14082   0024DA  5003               	movf	(___fladd@b+2)^0,w,c
 14083   0024DC  5807               	subwfb	(___fladd@a+2)^0,w,c
 14084   0024DE  6E0B               	movwf	(??___fladd+2)^0,c
 14085   0024E0  5004               	movf	(___fladd@b+3)^0,w,c
 14086   0024E2  5808               	subwfb	(___fladd@a+3)^0,w,c
 14087   0024E4  6E0C               	movwf	(??___fladd+3)^0,c
 14088   0024E6  0EFF               	movlw	255
 14089   0024E8  2409               	addwf	??___fladd^0,w,c
 14090   0024EA  6E01               	movwf	___fladd@b^0,c
 14091   0024EC  0EFF               	movlw	255
 14092   0024EE  200A               	addwfc	(??___fladd+1)^0,w,c
 14093   0024F0  6E02               	movwf	(___fladd@b+1)^0,c
 14094   0024F2  0EFF               	movlw	255
 14095   0024F4  200B               	addwfc	(??___fladd+2)^0,w,c
 14096   0024F6  6E03               	movwf	(___fladd@b+2)^0,c
 14097   0024F8  0EFF               	movlw	255
 14098   0024FA  200C               	addwfc	(??___fladd+3)^0,w,c
 14099   0024FC  6E04               	movwf	(___fladd@b+3)^0,c
 14100   0024FE  0E80               	movlw	128
 14101   002500  1A0D               	xorwf	___fladd@signs^0,f,c
 14102   002502  6C10               	negf	___fladd@grs^0,c
 14103   002504  5010               	movf	___fladd@grs^0,w,c
 14104   002506  A4D8               	btfss	status,2,c
 14105   002508  EF88  F012         	goto	u3221
 14106   00250C  EF8A  F012         	goto	u3220
 14107   002510                     u3221:
 14108   002510  EF9A  F012         	goto	l1302
 14109   002514                     u3220:
 14110   002514  0E01               	movlw	1
 14111   002516  2601               	addwf	___fladd@b^0,f,c
 14112   002518  0E00               	movlw	0
 14113   00251A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14114   00251C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14115   00251E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14116   002520  EF9A  F012         	goto	l1302
 14117   002524                     l4044:
 14118   002524  5005               	movf	___fladd@a^0,w,c
 14119   002526  5E01               	subwf	___fladd@b^0,f,c
 14120   002528  5006               	movf	(___fladd@a+1)^0,w,c
 14121   00252A  5A02               	subwfb	(___fladd@b+1)^0,f,c
 14122   00252C  5007               	movf	(___fladd@a+2)^0,w,c
 14123   00252E  5A03               	subwfb	(___fladd@b+2)^0,f,c
 14124   002530  5008               	movf	(___fladd@a+3)^0,w,c
 14125   002532  5A04               	subwfb	(___fladd@b+3)^0,f,c
 14126   002534                     l1302:
 14127   002534  5001               	movf	___fladd@b^0,w,c
 14128   002536  1002               	iorwf	(___fladd@b+1)^0,w,c
 14129   002538  1003               	iorwf	(___fladd@b+2)^0,w,c
 14130   00253A  1004               	iorwf	(___fladd@b+3)^0,w,c
 14131   00253C  A4D8               	btfss	status,2,c
 14132   00253E  EFA3  F012         	goto	u3231
 14133   002542  EFA5  F012         	goto	u3230
 14134   002546                     u3231:
 14135   002546  EFDA  F012         	goto	l4068
 14136   00254A                     u3230:
 14137   00254A  5010               	movf	___fladd@grs^0,w,c
 14138   00254C  A4D8               	btfss	status,2,c
 14139   00254E  EFAB  F012         	goto	u3241
 14140   002552  EFAD  F012         	goto	u3240
 14141   002556                     u3241:
 14142   002556  EFDA  F012         	goto	l4068
 14143   00255A                     u3240:
 14144   00255A  0E00               	movlw	0
 14145   00255C  6E01               	movwf	?___fladd^0,c
 14146   00255E  0E00               	movlw	0
 14147   002560  6E02               	movwf	(?___fladd+1)^0,c
 14148   002562  0E00               	movlw	0
 14149   002564  6E03               	movwf	(?___fladd+2)^0,c
 14150   002566  0E00               	movlw	0
 14151   002568  6E04               	movwf	(?___fladd+3)^0,c
 14152   00256A  EF75  F013         	goto	l1294
 14153   00256E                     l4052:
 14154   00256E  90D8               	bcf	status,0,c
 14155   002570  3601               	rlcf	___fladd@b^0,f,c
 14156   002572  3602               	rlcf	(___fladd@b+1)^0,f,c
 14157   002574  3603               	rlcf	(___fladd@b+2)^0,f,c
 14158   002576  3604               	rlcf	(___fladd@b+3)^0,f,c
 14159   002578  AE10               	btfss	___fladd@grs^0,7,c
 14160   00257A  EFC1  F012         	goto	u3251
 14161   00257E  EFC3  F012         	goto	u3250
 14162   002582                     u3251:
 14163   002582  EFC4  F012         	goto	l4058
 14164   002586                     u3250:
 14165   002586  8001               	bsf	___fladd@b^0,0,c
 14166   002588                     l4058:
 14167   002588  A010               	btfss	___fladd@grs^0,0,c
 14168   00258A  EFC9  F012         	goto	u3261
 14169   00258E  EFCB  F012         	goto	u3260
 14170   002592                     u3261:
 14171   002592  EFCF  F012         	goto	l4062
 14172   002596                     u3260:
 14173   002596  80D8               	bsf	status,0,c
 14174   002598  3610               	rlcf	___fladd@grs^0,f,c
 14175   00259A  EFD1  F012         	goto	l4064
 14176   00259E                     l4062:
 14177   00259E  90D8               	bcf	status,0,c
 14178   0025A0  3610               	rlcf	___fladd@grs^0,f,c
 14179   0025A2                     l4064:
 14180   0025A2  500F               	movf	___fladd@bexp^0,w,c
 14181   0025A4  B4D8               	btfsc	status,2,c
 14182   0025A6  EFD7  F012         	goto	u3271
 14183   0025AA  EFD9  F012         	goto	u3270
 14184   0025AE                     u3271:
 14185   0025AE  EFDA  F012         	goto	l4068
 14186   0025B2                     u3270:
 14187   0025B2  060F               	decf	___fladd@bexp^0,f,c
 14188   0025B4                     l4068:
 14189   0025B4  AE03               	btfss	(___fladd@b+2)^0,7,c
 14190   0025B6  EFDF  F012         	goto	u3281
 14191   0025BA  EFE1  F012         	goto	u3280
 14192   0025BE                     u3281:
 14193   0025BE  EFB7  F012         	goto	l4052
 14194   0025C2                     u3280:
 14195   0025C2                     l4070:
 14196   0025C2  0E00               	movlw	0
 14197   0025C4  6E0E               	movwf	___fladd@aexp^0,c
 14198   0025C6  AE10               	btfss	___fladd@grs^0,7,c
 14199   0025C8  EFE8  F012         	goto	u3291
 14200   0025CC  EFEA  F012         	goto	u3290
 14201   0025D0                     u3291:
 14202   0025D0  EF02  F013         	goto	l1311
 14203   0025D4                     u3290:
 14204   0025D4  C010  F009         	movff	___fladd@grs,??___fladd
 14205   0025D8  0E7F               	movlw	127
 14206   0025DA  1609               	andwf	??___fladd^0,f,c
 14207   0025DC  B4D8               	btfsc	status,2,c
 14208   0025DE  EFF3  F012         	goto	u3301
 14209   0025E2  EFF5  F012         	goto	u3300
 14210   0025E6                     u3301:
 14211   0025E6  EFF9  F012         	goto	l1312
 14212   0025EA                     u3300:
 14213   0025EA                     l4076:
 14214   0025EA  0E01               	movlw	1
 14215   0025EC  6E0E               	movwf	___fladd@aexp^0,c
 14216   0025EE  EF02  F013         	goto	l1311
 14217   0025F2                     l1312:
 14218   0025F2  A001               	btfss	___fladd@b^0,0,c
 14219   0025F4  EFFE  F012         	goto	u3311
 14220   0025F8  EF00  F013         	goto	u3310
 14221   0025FC                     u3311:
 14222   0025FC  EF02  F013         	goto	l1311
 14223   002600                     u3310:
 14224   002600  EFF5  F012         	goto	l4076
 14225   002604                     l1311:
 14226   002604  500E               	movf	___fladd@aexp^0,w,c
 14227   002606  B4D8               	btfsc	status,2,c
 14228   002608  EF08  F013         	goto	u3321
 14229   00260C  EF0A  F013         	goto	u3320
 14230   002610                     u3321:
 14231   002610  EF35  F013         	goto	l4088
 14232   002614                     u3320:
 14233   002614  0E01               	movlw	1
 14234   002616  2601               	addwf	___fladd@b^0,f,c
 14235   002618  0E00               	movlw	0
 14236   00261A  2202               	addwfc	(___fladd@b+1)^0,f,c
 14237   00261C  2203               	addwfc	(___fladd@b+2)^0,f,c
 14238   00261E  2204               	addwfc	(___fladd@b+3)^0,f,c
 14239   002620  A004               	btfss	(___fladd@b+3)^0,0,c
 14240   002622  EF15  F013         	goto	u3331
 14241   002626  EF17  F013         	goto	u3330
 14242   00262A                     u3331:
 14243   00262A  EF35  F013         	goto	l4088
 14244   00262E                     u3330:
 14245   00262E  C001  F009         	movff	___fladd@b,??___fladd
 14246   002632  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 14247   002636  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 14248   00263A  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 14249   00263E  340C               	rlcf	(??___fladd+3)^0,w,c
 14250   002640  320C               	rrcf	(??___fladd+3)^0,f,c
 14251   002642  320B               	rrcf	(??___fladd+2)^0,f,c
 14252   002644  320A               	rrcf	(??___fladd+1)^0,f,c
 14253   002646  3209               	rrcf	??___fladd^0,f,c
 14254   002648  C009  F001         	movff	??___fladd,___fladd@b
 14255   00264C  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 14256   002650  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 14257   002654  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 14258   002658  280F               	incf	___fladd@bexp^0,w,c
 14259   00265A  B4D8               	btfsc	status,2,c
 14260   00265C  EF32  F013         	goto	u3341
 14261   002660  EF34  F013         	goto	u3340
 14262   002664                     u3341:
 14263   002664  EF35  F013         	goto	l4088
 14264   002668                     u3340:
 14265   002668  2A0F               	incf	___fladd@bexp^0,f,c
 14266   00266A                     l4088:
 14267   00266A  280F               	incf	___fladd@bexp^0,w,c
 14268   00266C  B4D8               	btfsc	status,2,c
 14269   00266E  EF3B  F013         	goto	u3351
 14270   002672  EF3D  F013         	goto	u3350
 14271   002676                     u3351:
 14272   002676  EF45  F013         	goto	l4092
 14273   00267A                     u3350:
 14274   00267A  500F               	movf	___fladd@bexp^0,w,c
 14275   00267C  A4D8               	btfss	status,2,c
 14276   00267E  EF43  F013         	goto	u3361
 14277   002682  EF45  F013         	goto	u3360
 14278   002686                     u3361:
 14279   002686  EF57  F013         	goto	l4096
 14280   00268A                     u3360:
 14281   00268A                     l4092:
 14282   00268A  0E00               	movlw	0
 14283   00268C  6E01               	movwf	___fladd@b^0,c
 14284   00268E  0E00               	movlw	0
 14285   002690  6E02               	movwf	(___fladd@b+1)^0,c
 14286   002692  0E00               	movlw	0
 14287   002694  6E03               	movwf	(___fladd@b+2)^0,c
 14288   002696  0E00               	movlw	0
 14289   002698  6E04               	movwf	(___fladd@b+3)^0,c
 14290   00269A  500F               	movf	___fladd@bexp^0,w,c
 14291   00269C  A4D8               	btfss	status,2,c
 14292   00269E  EF53  F013         	goto	u3371
 14293   0026A2  EF55  F013         	goto	u3370
 14294   0026A6                     u3371:
 14295   0026A6  EF57  F013         	goto	l4096
 14296   0026AA                     u3370:
 14297   0026AA  0E00               	movlw	0
 14298   0026AC  6E0D               	movwf	___fladd@signs^0,c
 14299   0026AE                     l4096:
 14300   0026AE  A00F               	btfss	___fladd@bexp^0,0,c
 14301   0026B0  EF5C  F013         	goto	u3381
 14302   0026B4  EF5E  F013         	goto	u3380
 14303   0026B8                     u3381:
 14304   0026B8  EF61  F013         	goto	l4100
 14305   0026BC                     u3380:
 14306   0026BC  8E03               	bsf	(___fladd@b+2)^0,7,c
 14307   0026BE  EF62  F013         	goto	l4102
 14308   0026C2                     l4100:
 14309   0026C2  9E03               	bcf	(___fladd@b+2)^0,7,c
 14310   0026C4                     l4102:
 14311   0026C4  90D8               	bcf	status,0,c
 14312   0026C6  300F               	rrcf	___fladd@bexp^0,w,c
 14313   0026C8  6E04               	movwf	(___fladd@b+3)^0,c
 14314   0026CA  AE0D               	btfss	___fladd@signs^0,7,c
 14315   0026CC  EF6A  F013         	goto	u3391
 14316   0026D0  EF6C  F013         	goto	u3390
 14317   0026D4                     u3391:
 14318   0026D4  EF6D  F013         	goto	l4108
 14319   0026D8                     u3390:
 14320   0026D8  8E04               	bsf	(___fladd@b+3)^0,7,c
 14321   0026DA                     l4108:
 14322   0026DA  C001  F001         	movff	___fladd@b,?___fladd
 14323   0026DE  C002  F002         	movff	___fladd@b+1,?___fladd+1
 14324   0026E2  C003  F003         	movff	___fladd@b+2,?___fladd+2
 14325   0026E6  C004  F004         	movff	___fladd@b+3,?___fladd+3
 14326   0026EA                     l1294:
 14327   0026EA  0012               	return		;funcret
 14328   0026EC                     __end_of___fladd:
 14329                           	callstack 0
 14330                           
 14331 ;; *************** function ___flmul *****************
 14332 ;; Defined at:
 14333 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 14334 ;; Parameters:    Size  Location     Type
 14335 ;;  b               4   16[COMRAM] unsigned char 
 14336 ;;  a               4   20[COMRAM] unsigned char 
 14337 ;; Auto vars:     Size  Location     Type
 14338 ;;  prod            4   35[COMRAM] struct .
 14339 ;;  grs             4   29[COMRAM] unsigned long 
 14340 ;;  temp            2   39[COMRAM] struct .
 14341 ;;  bexp            1   34[COMRAM] unsigned char 
 14342 ;;  aexp            1   33[COMRAM] unsigned char 
 14343 ;;  sign            1   28[COMRAM] unsigned char 
 14344 ;; Return value:  Size  Location     Type
 14345 ;;                  4   16[COMRAM] unsigned char 
 14346 ;; Registers used:
 14347 ;;		wreg, status,2, status,0, prodl, prodh
 14348 ;; Tracked objects:
 14349 ;;		On entry : 0/0
 14350 ;;		On exit  : 0/0
 14351 ;;		Unchanged: 0/0
 14352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14354 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14356 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14357 ;;Total ram usage:       25 bytes
 14358 ;; Hardware stack levels used: 1
 14359 ;; Hardware stack levels required when called: 1
 14360 ;; This function calls:
 14361 ;;		Nothing
 14362 ;; This function is called by:
 14363 ;;		_Colour_decider
 14364 ;;		_reverseOneBlock
 14365 ;;		_ForwardOneBlock
 14366 ;;		_Forwardhalfblock
 14367 ;;		_Backhalfblock
 14368 ;;		_efgtoa
 14369 ;; This function uses a non-reentrant model
 14370 ;;
 14371                           
 14372                           	psect	text81
 14373   0026EC                     __ptext81:
 14374                           	callstack 0
 14375   0026EC                     ___flmul:
 14376                           	callstack 25
 14377   0026EC  5014               	movf	(___flmul@b+3)^0,w,c
 14378   0026EE  0B80               	andlw	128
 14379   0026F0  6E1D               	movwf	___flmul@sign^0,c
 14380   0026F2  5014               	movf	(___flmul@b+3)^0,w,c
 14381   0026F4  2414               	addwf	(___flmul@b+3)^0,w,c
 14382   0026F6  6E23               	movwf	___flmul@bexp^0,c
 14383   0026F8  AE13               	btfss	(___flmul@b+2)^0,7,c
 14384   0026FA  EF81  F013         	goto	u3881
 14385   0026FE  EF83  F013         	goto	u3880
 14386   002702                     u3881:
 14387   002702  EF84  F013         	goto	l4420
 14388   002706                     u3880:
 14389   002706  8023               	bsf	___flmul@bexp^0,0,c
 14390   002708                     l4420:
 14391   002708  5023               	movf	___flmul@bexp^0,w,c
 14392   00270A  B4D8               	btfsc	status,2,c
 14393   00270C  EF8A  F013         	goto	u3891
 14394   002710  EF8C  F013         	goto	u3890
 14395   002714                     u3891:
 14396   002714  EF9F  F013         	goto	l4428
 14397   002718                     u3890:
 14398   002718  2823               	incf	___flmul@bexp^0,w,c
 14399   00271A  A4D8               	btfss	status,2,c
 14400   00271C  EF92  F013         	goto	u3901
 14401   002720  EF94  F013         	goto	u3900
 14402   002724                     u3901:
 14403   002724  EF9C  F013         	goto	l4426
 14404   002728                     u3900:
 14405   002728  0E00               	movlw	0
 14406   00272A  6E11               	movwf	___flmul@b^0,c
 14407   00272C  0E00               	movlw	0
 14408   00272E  6E12               	movwf	(___flmul@b+1)^0,c
 14409   002730  0E00               	movlw	0
 14410   002732  6E13               	movwf	(___flmul@b+2)^0,c
 14411   002734  0E00               	movlw	0
 14412   002736  6E14               	movwf	(___flmul@b+3)^0,c
 14413   002738                     l4426:
 14414   002738  8E13               	bsf	(___flmul@b+2)^0,7,c
 14415   00273A  EFA7  F013         	goto	l4430
 14416   00273E                     l4428:
 14417   00273E  0E00               	movlw	0
 14418   002740  6E11               	movwf	___flmul@b^0,c
 14419   002742  0E00               	movlw	0
 14420   002744  6E12               	movwf	(___flmul@b+1)^0,c
 14421   002746  0E00               	movlw	0
 14422   002748  6E13               	movwf	(___flmul@b+2)^0,c
 14423   00274A  0E00               	movlw	0
 14424   00274C  6E14               	movwf	(___flmul@b+3)^0,c
 14425   00274E                     l4430:
 14426   00274E  5018               	movf	(___flmul@a+3)^0,w,c
 14427   002750  0B80               	andlw	128
 14428   002752  1A1D               	xorwf	___flmul@sign^0,f,c
 14429   002754  5018               	movf	(___flmul@a+3)^0,w,c
 14430   002756  2418               	addwf	(___flmul@a+3)^0,w,c
 14431   002758  6E22               	movwf	___flmul@aexp^0,c
 14432   00275A  AE17               	btfss	(___flmul@a+2)^0,7,c
 14433   00275C  EFB2  F013         	goto	u3911
 14434   002760  EFB4  F013         	goto	u3910
 14435   002764                     u3911:
 14436   002764  EFB5  F013         	goto	l4438
 14437   002768                     u3910:
 14438   002768  8022               	bsf	___flmul@aexp^0,0,c
 14439   00276A                     l4438:
 14440   00276A  5022               	movf	___flmul@aexp^0,w,c
 14441   00276C  B4D8               	btfsc	status,2,c
 14442   00276E  EFBB  F013         	goto	u3921
 14443   002772  EFBD  F013         	goto	u3920
 14444   002776                     u3921:
 14445   002776  EFD0  F013         	goto	l4446
 14446   00277A                     u3920:
 14447   00277A  2822               	incf	___flmul@aexp^0,w,c
 14448   00277C  A4D8               	btfss	status,2,c
 14449   00277E  EFC3  F013         	goto	u3931
 14450   002782  EFC5  F013         	goto	u3930
 14451   002786                     u3931:
 14452   002786  EFCD  F013         	goto	l4444
 14453   00278A                     u3930:
 14454   00278A  0E00               	movlw	0
 14455   00278C  6E15               	movwf	___flmul@a^0,c
 14456   00278E  0E00               	movlw	0
 14457   002790  6E16               	movwf	(___flmul@a+1)^0,c
 14458   002792  0E00               	movlw	0
 14459   002794  6E17               	movwf	(___flmul@a+2)^0,c
 14460   002796  0E00               	movlw	0
 14461   002798  6E18               	movwf	(___flmul@a+3)^0,c
 14462   00279A                     l4444:
 14463   00279A  8E17               	bsf	(___flmul@a+2)^0,7,c
 14464   00279C  EFD8  F013         	goto	l1371
 14465   0027A0                     l4446:
 14466   0027A0  0E00               	movlw	0
 14467   0027A2  6E15               	movwf	___flmul@a^0,c
 14468   0027A4  0E00               	movlw	0
 14469   0027A6  6E16               	movwf	(___flmul@a+1)^0,c
 14470   0027A8  0E00               	movlw	0
 14471   0027AA  6E17               	movwf	(___flmul@a+2)^0,c
 14472   0027AC  0E00               	movlw	0
 14473   0027AE  6E18               	movwf	(___flmul@a+3)^0,c
 14474   0027B0                     l1371:
 14475   0027B0  5022               	movf	___flmul@aexp^0,w,c
 14476   0027B2  B4D8               	btfsc	status,2,c
 14477   0027B4  EFDE  F013         	goto	u3941
 14478   0027B8  EFE0  F013         	goto	u3940
 14479   0027BC                     u3941:
 14480   0027BC  EFE8  F013         	goto	l4450
 14481   0027C0                     u3940:
 14482   0027C0  5023               	movf	___flmul@bexp^0,w,c
 14483   0027C2  A4D8               	btfss	status,2,c
 14484   0027C4  EFE6  F013         	goto	u3951
 14485   0027C8  EFE8  F013         	goto	u3950
 14486   0027CC                     u3951:
 14487   0027CC  EFF2  F013         	goto	l4454
 14488   0027D0                     u3950:
 14489   0027D0                     l4450:
 14490   0027D0  0E00               	movlw	0
 14491   0027D2  6E11               	movwf	?___flmul^0,c
 14492   0027D4  0E00               	movlw	0
 14493   0027D6  6E12               	movwf	(?___flmul+1)^0,c
 14494   0027D8  0E00               	movlw	0
 14495   0027DA  6E13               	movwf	(?___flmul+2)^0,c
 14496   0027DC  0E00               	movlw	0
 14497   0027DE  6E14               	movwf	(?___flmul+3)^0,c
 14498   0027E0  EF8A  F015         	goto	l1375
 14499   0027E4                     l4454:
 14500   0027E4  5017               	movf	(___flmul@a+2)^0,w,c
 14501   0027E6  0211               	mulwf	___flmul@b^0,c
 14502   0027E8  CFF3 F028          	movff	prodl,___flmul@temp
 14503   0027EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14504   0027F0  5028               	movf	___flmul@temp^0,w,c
 14505   0027F2  6E1E               	movwf	___flmul@grs^0,c
 14506   0027F4  6A1F               	clrf	(___flmul@grs+1)^0,c
 14507   0027F6  6A20               	clrf	(___flmul@grs+2)^0,c
 14508   0027F8  6A21               	clrf	(___flmul@grs+3)^0,c
 14509   0027FA  5029               	movf	(___flmul@temp+1)^0,w,c
 14510   0027FC  6E24               	movwf	___flmul@prod^0,c
 14511   0027FE  6A25               	clrf	(___flmul@prod+1)^0,c
 14512   002800  6A26               	clrf	(___flmul@prod+2)^0,c
 14513   002802  6A27               	clrf	(___flmul@prod+3)^0,c
 14514   002804  5016               	movf	(___flmul@a+1)^0,w,c
 14515   002806  0212               	mulwf	(___flmul@b+1)^0,c
 14516   002808  CFF3 F028          	movff	prodl,___flmul@temp
 14517   00280C  CFF4 F029          	movff	prodh,___flmul@temp+1
 14518   002810  5028               	movf	___flmul@temp^0,w,c
 14519   002812  261E               	addwf	___flmul@grs^0,f,c
 14520   002814  0E00               	movlw	0
 14521   002816  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14522   002818  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14523   00281A  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14524   00281C  5029               	movf	(___flmul@temp+1)^0,w,c
 14525   00281E  2624               	addwf	___flmul@prod^0,f,c
 14526   002820  0E00               	movlw	0
 14527   002822  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14528   002824  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14529   002826  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14530   002828  5015               	movf	___flmul@a^0,w,c
 14531   00282A  0213               	mulwf	(___flmul@b+2)^0,c
 14532   00282C  CFF3 F028          	movff	prodl,___flmul@temp
 14533   002830  CFF4 F029          	movff	prodh,___flmul@temp+1
 14534   002834  5028               	movf	___flmul@temp^0,w,c
 14535   002836  261E               	addwf	___flmul@grs^0,f,c
 14536   002838  0E00               	movlw	0
 14537   00283A  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14538   00283C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14539   00283E  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14540   002840  5029               	movf	(___flmul@temp+1)^0,w,c
 14541   002842  2624               	addwf	___flmul@prod^0,f,c
 14542   002844  0E00               	movlw	0
 14543   002846  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14544   002848  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14545   00284A  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14546   00284C  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14547   002850  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14548   002854  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14549   002858  6A1E               	clrf	___flmul@grs^0,c
 14550   00285A  5015               	movf	___flmul@a^0,w,c
 14551   00285C  0212               	mulwf	(___flmul@b+1)^0,c
 14552   00285E  CFF3 F028          	movff	prodl,___flmul@temp
 14553   002862  CFF4 F029          	movff	prodh,___flmul@temp+1
 14554   002866  5028               	movf	___flmul@temp^0,w,c
 14555   002868  261E               	addwf	___flmul@grs^0,f,c
 14556   00286A  5029               	movf	(___flmul@temp+1)^0,w,c
 14557   00286C  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14558   00286E  0E00               	movlw	0
 14559   002870  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14560   002872  0E00               	movlw	0
 14561   002874  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14562   002876  5016               	movf	(___flmul@a+1)^0,w,c
 14563   002878  0211               	mulwf	___flmul@b^0,c
 14564   00287A  CFF3 F028          	movff	prodl,___flmul@temp
 14565   00287E  CFF4 F029          	movff	prodh,___flmul@temp+1
 14566   002882  5028               	movf	___flmul@temp^0,w,c
 14567   002884  261E               	addwf	___flmul@grs^0,f,c
 14568   002886  5029               	movf	(___flmul@temp+1)^0,w,c
 14569   002888  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14570   00288A  0E00               	movlw	0
 14571   00288C  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14572   00288E  0E00               	movlw	0
 14573   002890  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14574   002892  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14575   002896  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14576   00289A  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14577   00289E  6A1E               	clrf	___flmul@grs^0,c
 14578   0028A0  5015               	movf	___flmul@a^0,w,c
 14579   0028A2  0211               	mulwf	___flmul@b^0,c
 14580   0028A4  CFF3 F028          	movff	prodl,___flmul@temp
 14581   0028A8  CFF4 F029          	movff	prodh,___flmul@temp+1
 14582   0028AC  5028               	movf	___flmul@temp^0,w,c
 14583   0028AE  261E               	addwf	___flmul@grs^0,f,c
 14584   0028B0  5029               	movf	(___flmul@temp+1)^0,w,c
 14585   0028B2  221F               	addwfc	(___flmul@grs+1)^0,f,c
 14586   0028B4  0E00               	movlw	0
 14587   0028B6  2220               	addwfc	(___flmul@grs+2)^0,f,c
 14588   0028B8  0E00               	movlw	0
 14589   0028BA  2221               	addwfc	(___flmul@grs+3)^0,f,c
 14590   0028BC  5017               	movf	(___flmul@a+2)^0,w,c
 14591   0028BE  0212               	mulwf	(___flmul@b+1)^0,c
 14592   0028C0  CFF3 F028          	movff	prodl,___flmul@temp
 14593   0028C4  CFF4 F029          	movff	prodh,___flmul@temp+1
 14594   0028C8  5028               	movf	___flmul@temp^0,w,c
 14595   0028CA  2624               	addwf	___flmul@prod^0,f,c
 14596   0028CC  5029               	movf	(___flmul@temp+1)^0,w,c
 14597   0028CE  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14598   0028D0  0E00               	movlw	0
 14599   0028D2  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14600   0028D4  0E00               	movlw	0
 14601   0028D6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14602   0028D8  5016               	movf	(___flmul@a+1)^0,w,c
 14603   0028DA  0213               	mulwf	(___flmul@b+2)^0,c
 14604   0028DC  CFF3 F028          	movff	prodl,___flmul@temp
 14605   0028E0  CFF4 F029          	movff	prodh,___flmul@temp+1
 14606   0028E4  5028               	movf	___flmul@temp^0,w,c
 14607   0028E6  2624               	addwf	___flmul@prod^0,f,c
 14608   0028E8  5029               	movf	(___flmul@temp+1)^0,w,c
 14609   0028EA  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14610   0028EC  0E00               	movlw	0
 14611   0028EE  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14612   0028F0  0E00               	movlw	0
 14613   0028F2  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14614   0028F4  5017               	movf	(___flmul@a+2)^0,w,c
 14615   0028F6  0213               	mulwf	(___flmul@b+2)^0,c
 14616   0028F8  CFF3 F028          	movff	prodl,___flmul@temp
 14617   0028FC  CFF4 F029          	movff	prodh,___flmul@temp+1
 14618   002900  5028               	movf	___flmul@temp^0,w,c
 14619   002902  6E19               	movwf	??___flmul^0,c
 14620   002904  5029               	movf	(___flmul@temp+1)^0,w,c
 14621   002906  6E1A               	movwf	(??___flmul+1)^0,c
 14622   002908  6A1B               	clrf	(??___flmul+2)^0,c
 14623   00290A  6A1C               	clrf	(??___flmul+3)^0,c
 14624   00290C  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 14625   002910  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 14626   002914  C019  F01A         	movff	??___flmul,??___flmul+1
 14627   002918  6A19               	clrf	??___flmul^0,c
 14628   00291A  5019               	movf	??___flmul^0,w,c
 14629   00291C  2624               	addwf	___flmul@prod^0,f,c
 14630   00291E  501A               	movf	(??___flmul+1)^0,w,c
 14631   002920  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14632   002922  501B               	movf	(??___flmul+2)^0,w,c
 14633   002924  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14634   002926  501C               	movf	(??___flmul+3)^0,w,c
 14635   002928  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14636   00292A  C01E  F019         	movff	___flmul@grs,??___flmul
 14637   00292E  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 14638   002932  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 14639   002936  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 14640   00293A  0E19               	movlw	25
 14641   00293C  EFA5  F014         	goto	u3960
 14642   002940                     u3965:
 14643   002940  90D8               	bcf	status,0,c
 14644   002942  321C               	rrcf	(??___flmul+3)^0,f,c
 14645   002944  321B               	rrcf	(??___flmul+2)^0,f,c
 14646   002946  321A               	rrcf	(??___flmul+1)^0,f,c
 14647   002948  3219               	rrcf	??___flmul^0,f,c
 14648   00294A                     u3960:
 14649   00294A  2EE8               	decfsz	wreg,f,c
 14650   00294C  EFA0  F014         	goto	u3965
 14651   002950  5019               	movf	??___flmul^0,w,c
 14652   002952  2624               	addwf	___flmul@prod^0,f,c
 14653   002954  501A               	movf	(??___flmul+1)^0,w,c
 14654   002956  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14655   002958  501B               	movf	(??___flmul+2)^0,w,c
 14656   00295A  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14657   00295C  501C               	movf	(??___flmul+3)^0,w,c
 14658   00295E  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14659   002960  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 14660   002964  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 14661   002968  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 14662   00296C  6A1E               	clrf	___flmul@grs^0,c
 14663   00296E  5022               	movf	___flmul@aexp^0,w,c
 14664   002970  C023  F019         	movff	___flmul@bexp,??___flmul
 14665   002974  6A1A               	clrf	(??___flmul+1)^0,c
 14666   002976  2619               	addwf	??___flmul^0,f,c
 14667   002978  0E00               	movlw	0
 14668   00297A  221A               	addwfc	(??___flmul+1)^0,f,c
 14669   00297C  0E82               	movlw	130
 14670   00297E  2419               	addwf	??___flmul^0,w,c
 14671   002980  6E28               	movwf	___flmul@temp^0,c
 14672   002982  0EFF               	movlw	255
 14673   002984  201A               	addwfc	(??___flmul+1)^0,w,c
 14674   002986  6E29               	movwf	(___flmul@temp+1)^0,c
 14675   002988  EFDB  F014         	goto	l4502
 14676   00298C                     l4496:
 14677   00298C  90D8               	bcf	status,0,c
 14678   00298E  3624               	rlcf	___flmul@prod^0,f,c
 14679   002990  3625               	rlcf	(___flmul@prod+1)^0,f,c
 14680   002992  3626               	rlcf	(___flmul@prod+2)^0,f,c
 14681   002994  3627               	rlcf	(___flmul@prod+3)^0,f,c
 14682   002996  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14683   002998  EFD0  F014         	goto	u3971
 14684   00299C  EFD2  F014         	goto	u3970
 14685   0029A0                     u3971:
 14686   0029A0  EFD3  F014         	goto	l1378
 14687   0029A4                     u3970:
 14688   0029A4  8024               	bsf	___flmul@prod^0,0,c
 14689   0029A6                     l1378:
 14690   0029A6  90D8               	bcf	status,0,c
 14691   0029A8  361E               	rlcf	___flmul@grs^0,f,c
 14692   0029AA  361F               	rlcf	(___flmul@grs+1)^0,f,c
 14693   0029AC  3620               	rlcf	(___flmul@grs+2)^0,f,c
 14694   0029AE  3621               	rlcf	(___flmul@grs+3)^0,f,c
 14695   0029B0  0628               	decf	___flmul@temp^0,f,c
 14696   0029B2  A0D8               	btfss	status,0,c
 14697   0029B4  0629               	decf	(___flmul@temp+1)^0,f,c
 14698   0029B6                     l4502:
 14699   0029B6  AE26               	btfss	(___flmul@prod+2)^0,7,c
 14700   0029B8  EFE0  F014         	goto	u3981
 14701   0029BC  EFE2  F014         	goto	u3980
 14702   0029C0                     u3981:
 14703   0029C0  EFC6  F014         	goto	l4496
 14704   0029C4                     u3980:
 14705   0029C4  0E00               	movlw	0
 14706   0029C6  6E22               	movwf	___flmul@aexp^0,c
 14707   0029C8  AE21               	btfss	(___flmul@grs+3)^0,7,c
 14708   0029CA  EFE9  F014         	goto	u3991
 14709   0029CE  EFEB  F014         	goto	u3990
 14710   0029D2                     u3991:
 14711   0029D2  EF0F  F015         	goto	l1380
 14712   0029D6                     u3990:
 14713   0029D6  0EFF               	movlw	255
 14714   0029D8  141E               	andwf	___flmul@grs^0,w,c
 14715   0029DA  6E19               	movwf	??___flmul^0,c
 14716   0029DC  0EFF               	movlw	255
 14717   0029DE  141F               	andwf	(___flmul@grs+1)^0,w,c
 14718   0029E0  6E1A               	movwf	(??___flmul+1)^0,c
 14719   0029E2  0EFF               	movlw	255
 14720   0029E4  1420               	andwf	(___flmul@grs+2)^0,w,c
 14721   0029E6  6E1B               	movwf	(??___flmul+2)^0,c
 14722   0029E8  0E7F               	movlw	127
 14723   0029EA  1421               	andwf	(___flmul@grs+3)^0,w,c
 14724   0029EC  6E1C               	movwf	(??___flmul+3)^0,c
 14725   0029EE  5019               	movf	??___flmul^0,w,c
 14726   0029F0  101A               	iorwf	(??___flmul+1)^0,w,c
 14727   0029F2  101B               	iorwf	(??___flmul+2)^0,w,c
 14728   0029F4  101C               	iorwf	(??___flmul+3)^0,w,c
 14729   0029F6  B4D8               	btfsc	status,2,c
 14730   0029F8  EF00  F015         	goto	u4001
 14731   0029FC  EF02  F015         	goto	u4000
 14732   002A00                     u4001:
 14733   002A00  EF06  F015         	goto	l1381
 14734   002A04                     u4000:
 14735   002A04                     l4510:
 14736   002A04  0E01               	movlw	1
 14737   002A06  6E22               	movwf	___flmul@aexp^0,c
 14738   002A08  EF0F  F015         	goto	l1380
 14739   002A0C                     l1381:
 14740   002A0C  A024               	btfss	___flmul@prod^0,0,c
 14741   002A0E  EF0B  F015         	goto	u4011
 14742   002A12  EF0D  F015         	goto	u4010
 14743   002A16                     u4011:
 14744   002A16  EF0F  F015         	goto	l1380
 14745   002A1A                     u4010:
 14746   002A1A  EF02  F015         	goto	l4510
 14747   002A1E                     l1380:
 14748   002A1E  5022               	movf	___flmul@aexp^0,w,c
 14749   002A20  B4D8               	btfsc	status,2,c
 14750   002A22  EF15  F015         	goto	u4021
 14751   002A26  EF17  F015         	goto	u4020
 14752   002A2A                     u4021:
 14753   002A2A  EF3B  F015         	goto	l4522
 14754   002A2E                     u4020:
 14755   002A2E  0E01               	movlw	1
 14756   002A30  2624               	addwf	___flmul@prod^0,f,c
 14757   002A32  0E00               	movlw	0
 14758   002A34  2225               	addwfc	(___flmul@prod+1)^0,f,c
 14759   002A36  2226               	addwfc	(___flmul@prod+2)^0,f,c
 14760   002A38  2227               	addwfc	(___flmul@prod+3)^0,f,c
 14761   002A3A  A027               	btfss	(___flmul@prod+3)^0,0,c
 14762   002A3C  EF22  F015         	goto	u4031
 14763   002A40  EF24  F015         	goto	u4030
 14764   002A44                     u4031:
 14765   002A44  EF3B  F015         	goto	l4522
 14766   002A48                     u4030:
 14767   002A48  C024  F019         	movff	___flmul@prod,??___flmul
 14768   002A4C  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 14769   002A50  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 14770   002A54  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 14771   002A58  341C               	rlcf	(??___flmul+3)^0,w,c
 14772   002A5A  321C               	rrcf	(??___flmul+3)^0,f,c
 14773   002A5C  321B               	rrcf	(??___flmul+2)^0,f,c
 14774   002A5E  321A               	rrcf	(??___flmul+1)^0,f,c
 14775   002A60  3219               	rrcf	??___flmul^0,f,c
 14776   002A62  C019  F024         	movff	??___flmul,___flmul@prod
 14777   002A66  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 14778   002A6A  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 14779   002A6E  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 14780   002A72  4A28               	infsnz	___flmul@temp^0,f,c
 14781   002A74  2A29               	incf	(___flmul@temp+1)^0,f,c
 14782   002A76                     l4522:
 14783   002A76  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14784   002A78  EF46  F015         	goto	u4041
 14785   002A7C  5029               	movf	(___flmul@temp+1)^0,w,c
 14786   002A7E  E108               	bnz	u4040
 14787   002A80  2828               	incf	___flmul@temp^0,w,c
 14788   002A82  A0D8               	btfss	status,0,c
 14789   002A84  EF46  F015         	goto	u4041
 14790   002A88  EF48  F015         	goto	u4040
 14791   002A8C                     u4041:
 14792   002A8C  EF52  F015         	goto	l4526
 14793   002A90                     u4040:
 14794   002A90  0E00               	movlw	0
 14795   002A92  6E24               	movwf	___flmul@prod^0,c
 14796   002A94  0E00               	movlw	0
 14797   002A96  6E25               	movwf	(___flmul@prod+1)^0,c
 14798   002A98  0E80               	movlw	128
 14799   002A9A  6E26               	movwf	(___flmul@prod+2)^0,c
 14800   002A9C  0E7F               	movlw	127
 14801   002A9E  6E27               	movwf	(___flmul@prod+3)^0,c
 14802   002AA0  EF80  F015         	goto	l4538
 14803   002AA4                     l4526:
 14804   002AA4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 14805   002AA6  EF5F  F015         	goto	u4050
 14806   002AAA  5029               	movf	(___flmul@temp+1)^0,w,c
 14807   002AAC  E106               	bnz	u4051
 14808   002AAE  0428               	decf	___flmul@temp^0,w,c
 14809   002AB0  B0D8               	btfsc	status,0,c
 14810   002AB2  EF5D  F015         	goto	u4051
 14811   002AB6  EF5F  F015         	goto	u4050
 14812   002ABA                     u4051:
 14813   002ABA  EF6B  F015         	goto	l1388
 14814   002ABE                     u4050:
 14815   002ABE  0E00               	movlw	0
 14816   002AC0  6E24               	movwf	___flmul@prod^0,c
 14817   002AC2  0E00               	movlw	0
 14818   002AC4  6E25               	movwf	(___flmul@prod+1)^0,c
 14819   002AC6  0E00               	movlw	0
 14820   002AC8  6E26               	movwf	(___flmul@prod+2)^0,c
 14821   002ACA  0E00               	movlw	0
 14822   002ACC  6E27               	movwf	(___flmul@prod+3)^0,c
 14823   002ACE  0E00               	movlw	0
 14824   002AD0  6E1D               	movwf	___flmul@sign^0,c
 14825   002AD2  EF80  F015         	goto	l4538
 14826   002AD6                     l1388:
 14827   002AD6  C028  F023         	movff	___flmul@temp,___flmul@bexp
 14828   002ADA  0EFF               	movlw	255
 14829   002ADC  1624               	andwf	___flmul@prod^0,f,c
 14830   002ADE  0EFF               	movlw	255
 14831   002AE0  1625               	andwf	(___flmul@prod+1)^0,f,c
 14832   002AE2  0E7F               	movlw	127
 14833   002AE4  1626               	andwf	(___flmul@prod+2)^0,f,c
 14834   002AE6  0E00               	movlw	0
 14835   002AE8  1627               	andwf	(___flmul@prod+3)^0,f,c
 14836   002AEA  A023               	btfss	___flmul@bexp^0,0,c
 14837   002AEC  EF7A  F015         	goto	u4061
 14838   002AF0  EF7C  F015         	goto	u4060
 14839   002AF4                     u4061:
 14840   002AF4  EF7D  F015         	goto	l4536
 14841   002AF8                     u4060:
 14842   002AF8  8E26               	bsf	(___flmul@prod+2)^0,7,c
 14843   002AFA                     l4536:
 14844   002AFA  90D8               	bcf	status,0,c
 14845   002AFC  3023               	rrcf	___flmul@bexp^0,w,c
 14846   002AFE  6E27               	movwf	(___flmul@prod+3)^0,c
 14847   002B00                     l4538:
 14848   002B00  501D               	movf	___flmul@sign^0,w,c
 14849   002B02  1227               	iorwf	(___flmul@prod+3)^0,f,c
 14850   002B04  C024  F011         	movff	___flmul@prod,?___flmul
 14851   002B08  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 14852   002B0C  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 14853   002B10  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 14854   002B14                     l1375:
 14855   002B14  0012               	return		;funcret
 14856   002B16                     __end_of___flmul:
 14857                           	callstack 0
 14858                           
 14859 ;; *************** function ___flge *****************
 14860 ;; Defined at:
 14861 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 14862 ;; Parameters:    Size  Location     Type
 14863 ;;  ff1             4   41[COMRAM] unsigned char 
 14864 ;;  ff2             4   45[COMRAM] unsigned char 
 14865 ;; Auto vars:     Size  Location     Type
 14866 ;;		None
 14867 ;; Return value:  Size  Location     Type
 14868 ;;		None               void
 14869 ;; Registers used:
 14870 ;;		wreg, status,2, status,0
 14871 ;; Tracked objects:
 14872 ;;		On entry : 0/0
 14873 ;;		On exit  : 0/0
 14874 ;;		Unchanged: 0/0
 14875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14879 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14880 ;;Total ram usage:       12 bytes
 14881 ;; Hardware stack levels used: 1
 14882 ;; Hardware stack levels required when called: 1
 14883 ;; This function calls:
 14884 ;;		Nothing
 14885 ;; This function is called by:
 14886 ;;		_Colour_decider
 14887 ;;		_efgtoa
 14888 ;; This function uses a non-reentrant model
 14889 ;;
 14890                           
 14891                           	psect	text82
 14892   004A56                     __ptext82:
 14893                           	callstack 0
 14894   004A56                     ___flge:
 14895                           	callstack 25
 14896   004A56  0E00               	movlw	0
 14897   004A58  142A               	andwf	___flge@ff1^0,w,c
 14898   004A5A  6E32               	movwf	??___flge^0,c
 14899   004A5C  0E00               	movlw	0
 14900   004A5E  142B               	andwf	(___flge@ff1+1)^0,w,c
 14901   004A60  6E33               	movwf	(??___flge+1)^0,c
 14902   004A62  0E80               	movlw	128
 14903   004A64  142C               	andwf	(___flge@ff1+2)^0,w,c
 14904   004A66  6E34               	movwf	(??___flge+2)^0,c
 14905   004A68  0E7F               	movlw	127
 14906   004A6A  142D               	andwf	(___flge@ff1+3)^0,w,c
 14907   004A6C  6E35               	movwf	(??___flge+3)^0,c
 14908   004A6E  5032               	movf	??___flge^0,w,c
 14909   004A70  1033               	iorwf	(??___flge+1)^0,w,c
 14910   004A72  1034               	iorwf	(??___flge+2)^0,w,c
 14911   004A74  1035               	iorwf	(??___flge+3)^0,w,c
 14912   004A76  A4D8               	btfss	status,2,c
 14913   004A78  EF40  F025         	goto	u4101
 14914   004A7C  EF42  F025         	goto	u4100
 14915   004A80                     u4101:
 14916   004A80  EF4A  F025         	goto	l4570
 14917   004A84                     u4100:
 14918   004A84  0E00               	movlw	0
 14919   004A86  6E2A               	movwf	___flge@ff1^0,c
 14920   004A88  0E00               	movlw	0
 14921   004A8A  6E2B               	movwf	(___flge@ff1+1)^0,c
 14922   004A8C  0E00               	movlw	0
 14923   004A8E  6E2C               	movwf	(___flge@ff1+2)^0,c
 14924   004A90  0E00               	movlw	0
 14925   004A92  6E2D               	movwf	(___flge@ff1+3)^0,c
 14926   004A94                     l4570:
 14927   004A94  0E00               	movlw	0
 14928   004A96  142E               	andwf	___flge@ff2^0,w,c
 14929   004A98  6E32               	movwf	??___flge^0,c
 14930   004A9A  0E00               	movlw	0
 14931   004A9C  142F               	andwf	(___flge@ff2+1)^0,w,c
 14932   004A9E  6E33               	movwf	(??___flge+1)^0,c
 14933   004AA0  0E80               	movlw	128
 14934   004AA2  1430               	andwf	(___flge@ff2+2)^0,w,c
 14935   004AA4  6E34               	movwf	(??___flge+2)^0,c
 14936   004AA6  0E7F               	movlw	127
 14937   004AA8  1431               	andwf	(___flge@ff2+3)^0,w,c
 14938   004AAA  6E35               	movwf	(??___flge+3)^0,c
 14939   004AAC  5032               	movf	??___flge^0,w,c
 14940   004AAE  1033               	iorwf	(??___flge+1)^0,w,c
 14941   004AB0  1034               	iorwf	(??___flge+2)^0,w,c
 14942   004AB2  1035               	iorwf	(??___flge+3)^0,w,c
 14943   004AB4  A4D8               	btfss	status,2,c
 14944   004AB6  EF5F  F025         	goto	u4111
 14945   004ABA  EF61  F025         	goto	u4110
 14946   004ABE                     u4111:
 14947   004ABE  EF69  F025         	goto	l4574
 14948   004AC2                     u4110:
 14949   004AC2  0E00               	movlw	0
 14950   004AC4  6E2E               	movwf	___flge@ff2^0,c
 14951   004AC6  0E00               	movlw	0
 14952   004AC8  6E2F               	movwf	(___flge@ff2+1)^0,c
 14953   004ACA  0E00               	movlw	0
 14954   004ACC  6E30               	movwf	(___flge@ff2+2)^0,c
 14955   004ACE  0E00               	movlw	0
 14956   004AD0  6E31               	movwf	(___flge@ff2+3)^0,c
 14957   004AD2                     l4574:
 14958   004AD2  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 14959   004AD4  EF6E  F025         	goto	u4121
 14960   004AD8  EF70  F025         	goto	u4120
 14961   004ADC                     u4121:
 14962   004ADC  EF79  F025         	goto	l4578
 14963   004AE0                     u4120:
 14964   004AE0  6C2A               	negf	___flge@ff1^0,c
 14965   004AE2  1E2B               	comf	(___flge@ff1+1)^0,f,c
 14966   004AE4  B0D8               	btfsc	status,0,c
 14967   004AE6  2A2B               	incf	(___flge@ff1+1)^0,f,c
 14968   004AE8  1E2C               	comf	(___flge@ff1+2)^0,f,c
 14969   004AEA  B0D8               	btfsc	status,0,c
 14970   004AEC  2A2C               	incf	(___flge@ff1+2)^0,f,c
 14971   004AEE  0E80               	movlw	128
 14972   004AF0  562D               	subfwb	(___flge@ff1+3)^0,f,c
 14973   004AF2                     l4578:
 14974   004AF2  AE31               	btfss	(___flge@ff2+3)^0,7,c
 14975   004AF4  EF7E  F025         	goto	u4131
 14976   004AF8  EF80  F025         	goto	u4130
 14977   004AFC                     u4131:
 14978   004AFC  EF89  F025         	goto	l1022
 14979   004B00                     u4130:
 14980   004B00  6C2E               	negf	___flge@ff2^0,c
 14981   004B02  1E2F               	comf	(___flge@ff2+1)^0,f,c
 14982   004B04  B0D8               	btfsc	status,0,c
 14983   004B06  2A2F               	incf	(___flge@ff2+1)^0,f,c
 14984   004B08  1E30               	comf	(___flge@ff2+2)^0,f,c
 14985   004B0A  B0D8               	btfsc	status,0,c
 14986   004B0C  2A30               	incf	(___flge@ff2+2)^0,f,c
 14987   004B0E  0E80               	movlw	128
 14988   004B10  5631               	subfwb	(___flge@ff2+3)^0,f,c
 14989   004B12                     l1022:
 14990   004B12  0E00               	movlw	0
 14991   004B14  1A2A               	xorwf	___flge@ff1^0,f,c
 14992   004B16  0E00               	movlw	0
 14993   004B18  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 14994   004B1A  0E00               	movlw	0
 14995   004B1C  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 14996   004B1E  0E80               	movlw	128
 14997   004B20  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 14998   004B22  0E00               	movlw	0
 14999   004B24  1A2E               	xorwf	___flge@ff2^0,f,c
 15000   004B26  0E00               	movlw	0
 15001   004B28  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 15002   004B2A  0E00               	movlw	0
 15003   004B2C  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 15004   004B2E  0E80               	movlw	128
 15005   004B30  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 15006   004B32  502E               	movf	___flge@ff2^0,w,c
 15007   004B34  5C2A               	subwf	___flge@ff1^0,w,c
 15008   004B36  502F               	movf	(___flge@ff2+1)^0,w,c
 15009   004B38  582B               	subwfb	(___flge@ff1+1)^0,w,c
 15010   004B3A  5030               	movf	(___flge@ff2+2)^0,w,c
 15011   004B3C  582C               	subwfb	(___flge@ff1+2)^0,w,c
 15012   004B3E  5031               	movf	(___flge@ff2+3)^0,w,c
 15013   004B40  582D               	subwfb	(___flge@ff1+3)^0,w,c
 15014   004B42  B0D8               	btfsc	status,0,c
 15015   004B44  EFA6  F025         	goto	u4141
 15016   004B48  EFA8  F025         	goto	u4140
 15017   004B4C                     u4141:
 15018   004B4C  EFAB  F025         	goto	l4584
 15019   004B50                     u4140:
 15020   004B50  90D8               	bcf	status,0,c
 15021   004B52  EFAC  F025         	goto	l1027
 15022   004B56                     l4584:
 15023   004B56  80D8               	bsf	status,0,c
 15024   004B58                     l1027:
 15025   004B58  0012               	return		;funcret
 15026   004B5A                     __end_of___flge:
 15027                           	callstack 0
 15028                           
 15029 ;; *************** function ___fleq *****************
 15030 ;; Defined at:
 15031 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  ff1             4   49[COMRAM] unsigned char 
 15034 ;;  ff2             4   53[COMRAM] unsigned char 
 15035 ;; Auto vars:     Size  Location     Type
 15036 ;;		None
 15037 ;; Return value:  Size  Location     Type
 15038 ;;		None               void
 15039 ;; Registers used:
 15040 ;;		wreg, status,2, status,0
 15041 ;; Tracked objects:
 15042 ;;		On entry : 0/0
 15043 ;;		On exit  : 0/0
 15044 ;;		Unchanged: 0/0
 15045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15046 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15048 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15049 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15050 ;;Total ram usage:       12 bytes
 15051 ;; Hardware stack levels used: 1
 15052 ;; Hardware stack levels required when called: 1
 15053 ;; This function calls:
 15054 ;;		Nothing
 15055 ;; This function is called by:
 15056 ;;		_Colour_decider
 15057 ;;		_efgtoa
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text83
 15062   004F38                     __ptext83:
 15063                           	callstack 0
 15064   004F38                     ___fleq:
 15065                           	callstack 25
 15066   004F38  0E00               	movlw	0
 15067   004F3A  1432               	andwf	___fleq@ff1^0,w,c
 15068   004F3C  6E3A               	movwf	??___fleq^0,c
 15069   004F3E  0E00               	movlw	0
 15070   004F40  1433               	andwf	(___fleq@ff1+1)^0,w,c
 15071   004F42  6E3B               	movwf	(??___fleq+1)^0,c
 15072   004F44  0E80               	movlw	128
 15073   004F46  1434               	andwf	(___fleq@ff1+2)^0,w,c
 15074   004F48  6E3C               	movwf	(??___fleq+2)^0,c
 15075   004F4A  0E7F               	movlw	127
 15076   004F4C  1435               	andwf	(___fleq@ff1+3)^0,w,c
 15077   004F4E  6E3D               	movwf	(??___fleq+3)^0,c
 15078   004F50  503A               	movf	??___fleq^0,w,c
 15079   004F52  103B               	iorwf	(??___fleq+1)^0,w,c
 15080   004F54  103C               	iorwf	(??___fleq+2)^0,w,c
 15081   004F56  103D               	iorwf	(??___fleq+3)^0,w,c
 15082   004F58  A4D8               	btfss	status,2,c
 15083   004F5A  EFB1  F027         	goto	u4071
 15084   004F5E  EFB3  F027         	goto	u4070
 15085   004F62                     u4071:
 15086   004F62  EFBB  F027         	goto	l4554
 15087   004F66                     u4070:
 15088   004F66  0E00               	movlw	0
 15089   004F68  6E32               	movwf	___fleq@ff1^0,c
 15090   004F6A  0E00               	movlw	0
 15091   004F6C  6E33               	movwf	(___fleq@ff1+1)^0,c
 15092   004F6E  0E00               	movlw	0
 15093   004F70  6E34               	movwf	(___fleq@ff1+2)^0,c
 15094   004F72  0E00               	movlw	0
 15095   004F74  6E35               	movwf	(___fleq@ff1+3)^0,c
 15096   004F76                     l4554:
 15097   004F76  0E00               	movlw	0
 15098   004F78  1436               	andwf	___fleq@ff2^0,w,c
 15099   004F7A  6E3A               	movwf	??___fleq^0,c
 15100   004F7C  0E00               	movlw	0
 15101   004F7E  1437               	andwf	(___fleq@ff2+1)^0,w,c
 15102   004F80  6E3B               	movwf	(??___fleq+1)^0,c
 15103   004F82  0E80               	movlw	128
 15104   004F84  1438               	andwf	(___fleq@ff2+2)^0,w,c
 15105   004F86  6E3C               	movwf	(??___fleq+2)^0,c
 15106   004F88  0E7F               	movlw	127
 15107   004F8A  1439               	andwf	(___fleq@ff2+3)^0,w,c
 15108   004F8C  6E3D               	movwf	(??___fleq+3)^0,c
 15109   004F8E  503A               	movf	??___fleq^0,w,c
 15110   004F90  103B               	iorwf	(??___fleq+1)^0,w,c
 15111   004F92  103C               	iorwf	(??___fleq+2)^0,w,c
 15112   004F94  103D               	iorwf	(??___fleq+3)^0,w,c
 15113   004F96  A4D8               	btfss	status,2,c
 15114   004F98  EFD0  F027         	goto	u4081
 15115   004F9C  EFD2  F027         	goto	u4080
 15116   004FA0                     u4081:
 15117   004FA0  EFDA  F027         	goto	l4558
 15118   004FA4                     u4080:
 15119   004FA4  0E00               	movlw	0
 15120   004FA6  6E36               	movwf	___fleq@ff2^0,c
 15121   004FA8  0E00               	movlw	0
 15122   004FAA  6E37               	movwf	(___fleq@ff2+1)^0,c
 15123   004FAC  0E00               	movlw	0
 15124   004FAE  6E38               	movwf	(___fleq@ff2+2)^0,c
 15125   004FB0  0E00               	movlw	0
 15126   004FB2  6E39               	movwf	(___fleq@ff2+3)^0,c
 15127   004FB4                     l4558:
 15128   004FB4  5036               	movf	___fleq@ff2^0,w,c
 15129   004FB6  1832               	xorwf	___fleq@ff1^0,w,c
 15130   004FB8  E10F               	bnz	u4090
 15131   004FBA  5037               	movf	(___fleq@ff2+1)^0,w,c
 15132   004FBC  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 15133   004FBE  E10C               	bnz	u4090
 15134   004FC0  5038               	movf	(___fleq@ff2+2)^0,w,c
 15135   004FC2  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 15136   004FC4  E109               	bnz	u4090
 15137   004FC6  5039               	movf	(___fleq@ff2+3)^0,w,c
 15138   004FC8  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 15139   004FCA  B4D8               	btfsc	status,2,c
 15140   004FCC  EFEA  F027         	goto	u4091
 15141   004FD0  EFEC  F027         	goto	u4090
 15142   004FD4                     u4091:
 15143   004FD4  EFEF  F027         	goto	l4562
 15144   004FD8                     u4090:
 15145   004FD8  90D8               	bcf	status,0,c
 15146   004FDA  EFF0  F027         	goto	l1016
 15147   004FDE                     l4562:
 15148   004FDE  80D8               	bsf	status,0,c
 15149   004FE0                     l1016:
 15150   004FE0  0012               	return		;funcret
 15151   004FE2                     __end_of___fleq:
 15152                           	callstack 0
 15153                           
 15154 ;; *************** function ___fldiv *****************
 15155 ;; Defined at:
 15156 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 15157 ;; Parameters:    Size  Location     Type
 15158 ;;  b               4   49[COMRAM] unsigned char 
 15159 ;;  a               4   53[COMRAM] unsigned char 
 15160 ;; Auto vars:     Size  Location     Type
 15161 ;;  grs             4   68[COMRAM] unsigned long 
 15162 ;;  rem             4   61[COMRAM] unsigned long 
 15163 ;;  new_exp         2   66[COMRAM] short 
 15164 ;;  aexp            1   73[COMRAM] unsigned char 
 15165 ;;  bexp            1   72[COMRAM] unsigned char 
 15166 ;;  sign            1   65[COMRAM] unsigned char 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  4   49[COMRAM] unsigned char 
 15169 ;; Registers used:
 15170 ;;		wreg, status,2, status,0
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15176 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15177 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15178 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15179 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15180 ;;Total ram usage:       25 bytes
 15181 ;; Hardware stack levels used: 1
 15182 ;; Hardware stack levels required when called: 1
 15183 ;; This function calls:
 15184 ;;		Nothing
 15185 ;; This function is called by:
 15186 ;;		_colour_rel
 15187 ;;		_Colour_decider
 15188 ;;		_efgtoa
 15189 ;; This function uses a non-reentrant model
 15190 ;;
 15191                           
 15192                           	psect	text84
 15193   002B16                     __ptext84:
 15194                           	callstack 0
 15195   002B16                     ___fldiv:
 15196                           	callstack 25
 15197   002B16  5035               	movf	(___fldiv@b+3)^0,w,c
 15198   002B18  0B80               	andlw	128
 15199   002B1A  6E42               	movwf	___fldiv@sign^0,c
 15200   002B1C  5035               	movf	(___fldiv@b+3)^0,w,c
 15201   002B1E  2435               	addwf	(___fldiv@b+3)^0,w,c
 15202   002B20  6E49               	movwf	___fldiv@bexp^0,c
 15203   002B22  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15204   002B24  EF96  F015         	goto	u3651
 15205   002B28  EF98  F015         	goto	u3650
 15206   002B2C                     u3651:
 15207   002B2C  EF99  F015         	goto	l4282
 15208   002B30                     u3650:
 15209   002B30  8049               	bsf	___fldiv@bexp^0,0,c
 15210   002B32                     l4282:
 15211   002B32  5049               	movf	___fldiv@bexp^0,w,c
 15212   002B34  B4D8               	btfsc	status,2,c
 15213   002B36  EF9F  F015         	goto	u3661
 15214   002B3A  EFA1  F015         	goto	u3660
 15215   002B3E                     u3661:
 15216   002B3E  EFB6  F015         	goto	l4292
 15217   002B42                     u3660:
 15218   002B42  2849               	incf	___fldiv@bexp^0,w,c
 15219   002B44  A4D8               	btfss	status,2,c
 15220   002B46  EFA7  F015         	goto	u3671
 15221   002B4A  EFA9  F015         	goto	u3670
 15222   002B4E                     u3671:
 15223   002B4E  EFB1  F015         	goto	l4288
 15224   002B52                     u3670:
 15225   002B52  0E00               	movlw	0
 15226   002B54  6E32               	movwf	___fldiv@b^0,c
 15227   002B56  0E00               	movlw	0
 15228   002B58  6E33               	movwf	(___fldiv@b+1)^0,c
 15229   002B5A  0E00               	movlw	0
 15230   002B5C  6E34               	movwf	(___fldiv@b+2)^0,c
 15231   002B5E  0E00               	movlw	0
 15232   002B60  6E35               	movwf	(___fldiv@b+3)^0,c
 15233   002B62                     l4288:
 15234   002B62  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15235   002B64  0E00               	movlw	0
 15236   002B66  6E35               	movwf	(___fldiv@b+3)^0,c
 15237   002B68  EFBE  F015         	goto	l4294
 15238   002B6C                     l4292:
 15239   002B6C  0E00               	movlw	0
 15240   002B6E  6E32               	movwf	___fldiv@b^0,c
 15241   002B70  0E00               	movlw	0
 15242   002B72  6E33               	movwf	(___fldiv@b+1)^0,c
 15243   002B74  0E00               	movlw	0
 15244   002B76  6E34               	movwf	(___fldiv@b+2)^0,c
 15245   002B78  0E00               	movlw	0
 15246   002B7A  6E35               	movwf	(___fldiv@b+3)^0,c
 15247   002B7C                     l4294:
 15248   002B7C  5039               	movf	(___fldiv@a+3)^0,w,c
 15249   002B7E  0B80               	andlw	128
 15250   002B80  1A42               	xorwf	___fldiv@sign^0,f,c
 15251   002B82  5039               	movf	(___fldiv@a+3)^0,w,c
 15252   002B84  2439               	addwf	(___fldiv@a+3)^0,w,c
 15253   002B86  6E4A               	movwf	___fldiv@aexp^0,c
 15254   002B88  AE38               	btfss	(___fldiv@a+2)^0,7,c
 15255   002B8A  EFC9  F015         	goto	u3681
 15256   002B8E  EFCB  F015         	goto	u3680
 15257   002B92                     u3681:
 15258   002B92  EFCC  F015         	goto	l4302
 15259   002B96                     u3680:
 15260   002B96  804A               	bsf	___fldiv@aexp^0,0,c
 15261   002B98                     l4302:
 15262   002B98  504A               	movf	___fldiv@aexp^0,w,c
 15263   002B9A  B4D8               	btfsc	status,2,c
 15264   002B9C  EFD2  F015         	goto	u3691
 15265   002BA0  EFD4  F015         	goto	u3690
 15266   002BA4                     u3691:
 15267   002BA4  EFE9  F015         	goto	l4312
 15268   002BA8                     u3690:
 15269   002BA8  284A               	incf	___fldiv@aexp^0,w,c
 15270   002BAA  A4D8               	btfss	status,2,c
 15271   002BAC  EFDA  F015         	goto	u3701
 15272   002BB0  EFDC  F015         	goto	u3700
 15273   002BB4                     u3701:
 15274   002BB4  EFE4  F015         	goto	l4308
 15275   002BB8                     u3700:
 15276   002BB8  0E00               	movlw	0
 15277   002BBA  6E36               	movwf	___fldiv@a^0,c
 15278   002BBC  0E00               	movlw	0
 15279   002BBE  6E37               	movwf	(___fldiv@a+1)^0,c
 15280   002BC0  0E00               	movlw	0
 15281   002BC2  6E38               	movwf	(___fldiv@a+2)^0,c
 15282   002BC4  0E00               	movlw	0
 15283   002BC6  6E39               	movwf	(___fldiv@a+3)^0,c
 15284   002BC8                     l4308:
 15285   002BC8  8E38               	bsf	(___fldiv@a+2)^0,7,c
 15286   002BCA  0E00               	movlw	0
 15287   002BCC  6E39               	movwf	(___fldiv@a+3)^0,c
 15288   002BCE  EFF1  F015         	goto	l4314
 15289   002BD2                     l4312:
 15290   002BD2  0E00               	movlw	0
 15291   002BD4  6E36               	movwf	___fldiv@a^0,c
 15292   002BD6  0E00               	movlw	0
 15293   002BD8  6E37               	movwf	(___fldiv@a+1)^0,c
 15294   002BDA  0E00               	movlw	0
 15295   002BDC  6E38               	movwf	(___fldiv@a+2)^0,c
 15296   002BDE  0E00               	movlw	0
 15297   002BE0  6E39               	movwf	(___fldiv@a+3)^0,c
 15298   002BE2                     l4314:
 15299   002BE2  5036               	movf	___fldiv@a^0,w,c
 15300   002BE4  1037               	iorwf	(___fldiv@a+1)^0,w,c
 15301   002BE6  1038               	iorwf	(___fldiv@a+2)^0,w,c
 15302   002BE8  1039               	iorwf	(___fldiv@a+3)^0,w,c
 15303   002BEA  A4D8               	btfss	status,2,c
 15304   002BEC  EFFA  F015         	goto	u3711
 15305   002BF0  EFFC  F015         	goto	u3710
 15306   002BF4                     u3711:
 15307   002BF4  EF14  F016         	goto	l4326
 15308   002BF8                     u3710:
 15309   002BF8  0E00               	movlw	0
 15310   002BFA  6E32               	movwf	___fldiv@b^0,c
 15311   002BFC  0E00               	movlw	0
 15312   002BFE  6E33               	movwf	(___fldiv@b+1)^0,c
 15313   002C00  0E00               	movlw	0
 15314   002C02  6E34               	movwf	(___fldiv@b+2)^0,c
 15315   002C04  0E00               	movlw	0
 15316   002C06  6E35               	movwf	(___fldiv@b+3)^0,c
 15317   002C08  0E80               	movlw	128
 15318   002C0A  1234               	iorwf	(___fldiv@b+2)^0,f,c
 15319   002C0C  0E7F               	movlw	127
 15320   002C0E  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15321   002C10                     l4320:
 15322   002C10  5042               	movf	___fldiv@sign^0,w,c
 15323   002C12  1235               	iorwf	(___fldiv@b+3)^0,f,c
 15324   002C14  C032  F032         	movff	___fldiv@b,?___fldiv
 15325   002C18  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 15326   002C1C  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 15327   002C20  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 15328   002C24  EF57  F017         	goto	l1339
 15329   002C28                     l4326:
 15330   002C28  5049               	movf	___fldiv@bexp^0,w,c
 15331   002C2A  A4D8               	btfss	status,2,c
 15332   002C2C  EF1A  F016         	goto	u3721
 15333   002C30  EF1C  F016         	goto	u3720
 15334   002C34                     u3721:
 15335   002C34  EF26  F016         	goto	l4334
 15336   002C38                     u3720:
 15337   002C38  0E00               	movlw	0
 15338   002C3A  6E32               	movwf	?___fldiv^0,c
 15339   002C3C  0E00               	movlw	0
 15340   002C3E  6E33               	movwf	(?___fldiv+1)^0,c
 15341   002C40  0E00               	movlw	0
 15342   002C42  6E34               	movwf	(?___fldiv+2)^0,c
 15343   002C44  0E00               	movlw	0
 15344   002C46  6E35               	movwf	(?___fldiv+3)^0,c
 15345   002C48  EF57  F017         	goto	l1339
 15346   002C4C                     l4334:
 15347   002C4C  504A               	movf	___fldiv@aexp^0,w,c
 15348   002C4E  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 15349   002C52  6A3B               	clrf	(??___fldiv+1)^0,c
 15350   002C54  5E3A               	subwf	??___fldiv^0,f,c
 15351   002C56  0E00               	movlw	0
 15352   002C58  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 15353   002C5A  0E7F               	movlw	127
 15354   002C5C  243A               	addwf	??___fldiv^0,w,c
 15355   002C5E  6E43               	movwf	___fldiv@new_exp^0,c
 15356   002C60  0E00               	movlw	0
 15357   002C62  203B               	addwfc	(??___fldiv+1)^0,w,c
 15358   002C64  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15359   002C66  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 15360   002C6A  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 15361   002C6E  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 15362   002C72  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 15363   002C76  0E00               	movlw	0
 15364   002C78  6E32               	movwf	___fldiv@b^0,c
 15365   002C7A  0E00               	movlw	0
 15366   002C7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15367   002C7E  0E00               	movlw	0
 15368   002C80  6E34               	movwf	(___fldiv@b+2)^0,c
 15369   002C82  0E00               	movlw	0
 15370   002C84  6E35               	movwf	(___fldiv@b+3)^0,c
 15371   002C86  0E00               	movlw	0
 15372   002C88  6E45               	movwf	___fldiv@grs^0,c
 15373   002C8A  0E00               	movlw	0
 15374   002C8C  6E46               	movwf	(___fldiv@grs+1)^0,c
 15375   002C8E  0E00               	movlw	0
 15376   002C90  6E47               	movwf	(___fldiv@grs+2)^0,c
 15377   002C92  0E00               	movlw	0
 15378   002C94  6E48               	movwf	(___fldiv@grs+3)^0,c
 15379   002C96  0E00               	movlw	0
 15380   002C98  6E4A               	movwf	___fldiv@aexp^0,c
 15381   002C9A  EF87  F016         	goto	l1341
 15382   002C9E                     l4344:
 15383   002C9E  504A               	movf	___fldiv@aexp^0,w,c
 15384   002CA0  B4D8               	btfsc	status,2,c
 15385   002CA2  EF55  F016         	goto	u3731
 15386   002CA6  EF57  F016         	goto	u3730
 15387   002CAA                     u3731:
 15388   002CAA  EF6E  F016         	goto	l4352
 15389   002CAE                     u3730:
 15390   002CAE  90D8               	bcf	status,0,c
 15391   002CB0  363E               	rlcf	___fldiv@rem^0,f,c
 15392   002CB2  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 15393   002CB4  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 15394   002CB6  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 15395   002CB8  90D8               	bcf	status,0,c
 15396   002CBA  3632               	rlcf	___fldiv@b^0,f,c
 15397   002CBC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15398   002CBE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15399   002CC0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15400   002CC2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15401   002CC4  EF66  F016         	goto	u3741
 15402   002CC8  EF68  F016         	goto	u3740
 15403   002CCC                     u3741:
 15404   002CCC  EF69  F016         	goto	l1344
 15405   002CD0                     u3740:
 15406   002CD0  8032               	bsf	___fldiv@b^0,0,c
 15407   002CD2                     l1344:
 15408   002CD2  90D8               	bcf	status,0,c
 15409   002CD4  3645               	rlcf	___fldiv@grs^0,f,c
 15410   002CD6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15411   002CD8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15412   002CDA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15413   002CDC                     l4352:
 15414   002CDC  5036               	movf	___fldiv@a^0,w,c
 15415   002CDE  5C3E               	subwf	___fldiv@rem^0,w,c
 15416   002CE0  5037               	movf	(___fldiv@a+1)^0,w,c
 15417   002CE2  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 15418   002CE4  5038               	movf	(___fldiv@a+2)^0,w,c
 15419   002CE6  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 15420   002CE8  5039               	movf	(___fldiv@a+3)^0,w,c
 15421   002CEA  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 15422   002CEC  A0D8               	btfss	status,0,c
 15423   002CEE  EF7B  F016         	goto	u3751
 15424   002CF2  EF7D  F016         	goto	u3750
 15425   002CF6                     u3751:
 15426   002CF6  EF86  F016         	goto	l4358
 15427   002CFA                     u3750:
 15428   002CFA  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 15429   002CFC  5036               	movf	___fldiv@a^0,w,c
 15430   002CFE  5E3E               	subwf	___fldiv@rem^0,f,c
 15431   002D00  5037               	movf	(___fldiv@a+1)^0,w,c
 15432   002D02  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 15433   002D04  5038               	movf	(___fldiv@a+2)^0,w,c
 15434   002D06  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 15435   002D08  5039               	movf	(___fldiv@a+3)^0,w,c
 15436   002D0A  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 15437   002D0C                     l4358:
 15438   002D0C  2A4A               	incf	___fldiv@aexp^0,f,c
 15439   002D0E                     l1341:
 15440   002D0E  0E19               	movlw	25
 15441   002D10  644A               	cpfsgt	___fldiv@aexp^0,c
 15442   002D12  EF8D  F016         	goto	u3761
 15443   002D16  EF8F  F016         	goto	u3760
 15444   002D1A                     u3761:
 15445   002D1A  EF4F  F016         	goto	l4344
 15446   002D1E                     u3760:
 15447   002D1E  503E               	movf	___fldiv@rem^0,w,c
 15448   002D20  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 15449   002D22  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 15450   002D24  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 15451   002D26  B4D8               	btfsc	status,2,c
 15452   002D28  EF98  F016         	goto	u3771
 15453   002D2C  EF9A  F016         	goto	u3770
 15454   002D30                     u3771:
 15455   002D30  EFB2  F016         	goto	l4370
 15456   002D34                     u3770:
 15457   002D34  8045               	bsf	___fldiv@grs^0,0,c
 15458   002D36  EFB2  F016         	goto	l4370
 15459   002D3A                     l4364:
 15460   002D3A  90D8               	bcf	status,0,c
 15461   002D3C  3632               	rlcf	___fldiv@b^0,f,c
 15462   002D3E  3633               	rlcf	(___fldiv@b+1)^0,f,c
 15463   002D40  3634               	rlcf	(___fldiv@b+2)^0,f,c
 15464   002D42  3635               	rlcf	(___fldiv@b+3)^0,f,c
 15465   002D44  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15466   002D46  EFA7  F016         	goto	u3781
 15467   002D4A  EFA9  F016         	goto	u3780
 15468   002D4E                     u3781:
 15469   002D4E  EFAA  F016         	goto	l1350
 15470   002D52                     u3780:
 15471   002D52  8032               	bsf	___fldiv@b^0,0,c
 15472   002D54                     l1350:
 15473   002D54  90D8               	bcf	status,0,c
 15474   002D56  3645               	rlcf	___fldiv@grs^0,f,c
 15475   002D58  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 15476   002D5A  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 15477   002D5C  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 15478   002D5E  0643               	decf	___fldiv@new_exp^0,f,c
 15479   002D60  A0D8               	btfss	status,0,c
 15480   002D62  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 15481   002D64                     l4370:
 15482   002D64  AE34               	btfss	(___fldiv@b+2)^0,7,c
 15483   002D66  EFB7  F016         	goto	u3791
 15484   002D6A  EFB9  F016         	goto	u3790
 15485   002D6E                     u3791:
 15486   002D6E  EF9D  F016         	goto	l4364
 15487   002D72                     u3790:
 15488   002D72  0E00               	movlw	0
 15489   002D74  6E4A               	movwf	___fldiv@aexp^0,c
 15490   002D76  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 15491   002D78  EFC0  F016         	goto	u3801
 15492   002D7C  EFC2  F016         	goto	u3800
 15493   002D80                     u3801:
 15494   002D80  EFE6  F016         	goto	l1352
 15495   002D84                     u3800:
 15496   002D84  0EFF               	movlw	255
 15497   002D86  1445               	andwf	___fldiv@grs^0,w,c
 15498   002D88  6E3A               	movwf	??___fldiv^0,c
 15499   002D8A  0EFF               	movlw	255
 15500   002D8C  1446               	andwf	(___fldiv@grs+1)^0,w,c
 15501   002D8E  6E3B               	movwf	(??___fldiv+1)^0,c
 15502   002D90  0EFF               	movlw	255
 15503   002D92  1447               	andwf	(___fldiv@grs+2)^0,w,c
 15504   002D94  6E3C               	movwf	(??___fldiv+2)^0,c
 15505   002D96  0E7F               	movlw	127
 15506   002D98  1448               	andwf	(___fldiv@grs+3)^0,w,c
 15507   002D9A  6E3D               	movwf	(??___fldiv+3)^0,c
 15508   002D9C  503A               	movf	??___fldiv^0,w,c
 15509   002D9E  103B               	iorwf	(??___fldiv+1)^0,w,c
 15510   002DA0  103C               	iorwf	(??___fldiv+2)^0,w,c
 15511   002DA2  103D               	iorwf	(??___fldiv+3)^0,w,c
 15512   002DA4  B4D8               	btfsc	status,2,c
 15513   002DA6  EFD7  F016         	goto	u3811
 15514   002DAA  EFD9  F016         	goto	u3810
 15515   002DAE                     u3811:
 15516   002DAE  EFDD  F016         	goto	l1353
 15517   002DB2                     u3810:
 15518   002DB2                     l4378:
 15519   002DB2  0E01               	movlw	1
 15520   002DB4  6E4A               	movwf	___fldiv@aexp^0,c
 15521   002DB6  EFE6  F016         	goto	l1352
 15522   002DBA                     l1353:
 15523   002DBA  A032               	btfss	___fldiv@b^0,0,c
 15524   002DBC  EFE2  F016         	goto	u3821
 15525   002DC0  EFE4  F016         	goto	u3820
 15526   002DC4                     u3821:
 15527   002DC4  EFE6  F016         	goto	l1352
 15528   002DC8                     u3820:
 15529   002DC8  EFD9  F016         	goto	l4378
 15530   002DCC                     l1352:
 15531   002DCC  504A               	movf	___fldiv@aexp^0,w,c
 15532   002DCE  B4D8               	btfsc	status,2,c
 15533   002DD0  EFEC  F016         	goto	u3831
 15534   002DD4  EFEE  F016         	goto	u3830
 15535   002DD8                     u3831:
 15536   002DD8  EF12  F017         	goto	l4390
 15537   002DDC                     u3830:
 15538   002DDC  0E01               	movlw	1
 15539   002DDE  2632               	addwf	___fldiv@b^0,f,c
 15540   002DE0  0E00               	movlw	0
 15541   002DE2  2233               	addwfc	(___fldiv@b+1)^0,f,c
 15542   002DE4  2234               	addwfc	(___fldiv@b+2)^0,f,c
 15543   002DE6  2235               	addwfc	(___fldiv@b+3)^0,f,c
 15544   002DE8  A035               	btfss	(___fldiv@b+3)^0,0,c
 15545   002DEA  EFF9  F016         	goto	u3841
 15546   002DEE  EFFB  F016         	goto	u3840
 15547   002DF2                     u3841:
 15548   002DF2  EF12  F017         	goto	l4390
 15549   002DF6                     u3840:
 15550   002DF6  C032  F03A         	movff	___fldiv@b,??___fldiv
 15551   002DFA  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 15552   002DFE  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 15553   002E02  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 15554   002E06  343D               	rlcf	(??___fldiv+3)^0,w,c
 15555   002E08  323D               	rrcf	(??___fldiv+3)^0,f,c
 15556   002E0A  323C               	rrcf	(??___fldiv+2)^0,f,c
 15557   002E0C  323B               	rrcf	(??___fldiv+1)^0,f,c
 15558   002E0E  323A               	rrcf	??___fldiv^0,f,c
 15559   002E10  C03A  F032         	movff	??___fldiv,___fldiv@b
 15560   002E14  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 15561   002E18  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 15562   002E1C  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 15563   002E20  4A43               	infsnz	___fldiv@new_exp^0,f,c
 15564   002E22  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 15565   002E24                     l4390:
 15566   002E24  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15567   002E26  EF1D  F017         	goto	u3851
 15568   002E2A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15569   002E2C  E108               	bnz	u3850
 15570   002E2E  2843               	incf	___fldiv@new_exp^0,w,c
 15571   002E30  A0D8               	btfss	status,0,c
 15572   002E32  EF1D  F017         	goto	u3851
 15573   002E36  EF1F  F017         	goto	u3850
 15574   002E3A                     u3851:
 15575   002E3A  EF2A  F017         	goto	l4394
 15576   002E3E                     u3850:
 15577   002E3E  0E00               	movlw	0
 15578   002E40  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15579   002E42  6843               	setf	___fldiv@new_exp^0,c
 15580   002E44  0E00               	movlw	0
 15581   002E46  6E32               	movwf	___fldiv@b^0,c
 15582   002E48  0E00               	movlw	0
 15583   002E4A  6E33               	movwf	(___fldiv@b+1)^0,c
 15584   002E4C  0E00               	movlw	0
 15585   002E4E  6E34               	movwf	(___fldiv@b+2)^0,c
 15586   002E50  0E00               	movlw	0
 15587   002E52  6E35               	movwf	(___fldiv@b+3)^0,c
 15588   002E54                     l4394:
 15589   002E54  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15590   002E56  EF37  F017         	goto	u3860
 15591   002E5A  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 15592   002E5C  E106               	bnz	u3861
 15593   002E5E  0443               	decf	___fldiv@new_exp^0,w,c
 15594   002E60  B0D8               	btfsc	status,0,c
 15595   002E62  EF35  F017         	goto	u3861
 15596   002E66  EF37  F017         	goto	u3860
 15597   002E6A                     u3861:
 15598   002E6A  EF45  F017         	goto	l4398
 15599   002E6E                     u3860:
 15600   002E6E  0E00               	movlw	0
 15601   002E70  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 15602   002E72  0E00               	movlw	0
 15603   002E74  6E43               	movwf	___fldiv@new_exp^0,c
 15604   002E76  0E00               	movlw	0
 15605   002E78  6E32               	movwf	___fldiv@b^0,c
 15606   002E7A  0E00               	movlw	0
 15607   002E7C  6E33               	movwf	(___fldiv@b+1)^0,c
 15608   002E7E  0E00               	movlw	0
 15609   002E80  6E34               	movwf	(___fldiv@b+2)^0,c
 15610   002E82  0E00               	movlw	0
 15611   002E84  6E35               	movwf	(___fldiv@b+3)^0,c
 15612   002E86  0E00               	movlw	0
 15613   002E88  6E42               	movwf	___fldiv@sign^0,c
 15614   002E8A                     l4398:
 15615   002E8A  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 15616   002E8E  A049               	btfss	___fldiv@bexp^0,0,c
 15617   002E90  EF4C  F017         	goto	u3871
 15618   002E94  EF4E  F017         	goto	u3870
 15619   002E98                     u3871:
 15620   002E98  EF51  F017         	goto	l4404
 15621   002E9C                     u3870:
 15622   002E9C  8E34               	bsf	(___fldiv@b+2)^0,7,c
 15623   002E9E  EF52  F017         	goto	l4406
 15624   002EA2                     l4404:
 15625   002EA2  9E34               	bcf	(___fldiv@b+2)^0,7,c
 15626   002EA4                     l4406:
 15627   002EA4  90D8               	bcf	status,0,c
 15628   002EA6  3049               	rrcf	___fldiv@bexp^0,w,c
 15629   002EA8  6E35               	movwf	(___fldiv@b+3)^0,c
 15630   002EAA  EF08  F016         	goto	l4320
 15631   002EAE                     l1339:
 15632   002EAE  0012               	return		;funcret
 15633   002EB0                     __end_of___fldiv:
 15634                           	callstack 0
 15635                           
 15636 ;; *************** function _Buttons_init *****************
 15637 ;; Defined at:
 15638 ;;		line 43 in file "LED_buttons.c"
 15639 ;; Parameters:    Size  Location     Type
 15640 ;;		None
 15641 ;; Auto vars:     Size  Location     Type
 15642 ;;		None
 15643 ;; Return value:  Size  Location     Type
 15644 ;;                  1    wreg      void 
 15645 ;; Registers used:
 15646 ;;		None
 15647 ;; Tracked objects:
 15648 ;;		On entry : 0/0
 15649 ;;		On exit  : 0/0
 15650 ;;		Unchanged: 0/0
 15651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15656 ;;Total ram usage:        0 bytes
 15657 ;; Hardware stack levels used: 1
 15658 ;; Hardware stack levels required when called: 1
 15659 ;; This function calls:
 15660 ;;		Nothing
 15661 ;; This function is called by:
 15662 ;;		_main
 15663 ;; This function uses a non-reentrant model
 15664 ;;
 15665                           
 15666                           	psect	text85
 15667   0061E4                     __ptext85:
 15668                           	callstack 0
 15669   0061E4                     _Buttons_init:
 15670                           	callstack 29
 15671   0061E4                     
 15672                           ;LED_buttons.c: 45:     TRISFbits.TRISF2 = 1;
 15673   0061E4  8486               	bsf	134,2,c	;volatile
 15674                           
 15675                           ;LED_buttons.c: 46:     ANSELFbits.ANSELF2=0;
 15676   0061E6  010E               	movlb	14	; () banked
 15677   0061E8  95B4               	bcf	180,2,b	;volatile
 15678                           
 15679                           ;LED_buttons.c: 47:     TRISFbits.TRISF3 = 1;
 15680   0061EA  8686               	bsf	134,3,c	;volatile
 15681                           
 15682                           ;LED_buttons.c: 48:     ANSELFbits.ANSELF3=0;
 15683   0061EC  97B4               	bcf	180,3,b	;volatile
 15684   0061EE                     
 15685                           ; BSR set to: 14
 15686   0061EE  0012               	return		;funcret
 15687   0061F0                     __end_of_Buttons_init:
 15688                           	callstack 0
 15689                           
 15690 ;; *************** function _HighISR *****************
 15691 ;; Defined at:
 15692 ;;		line 23 in file "interrupts.c"
 15693 ;; Parameters:    Size  Location     Type
 15694 ;;		None
 15695 ;; Auto vars:     Size  Location     Type
 15696 ;;		None
 15697 ;; Return value:  Size  Location     Type
 15698 ;;                  1    wreg      void 
 15699 ;; Registers used:
 15700 ;;		wreg, status,2
 15701 ;; Tracked objects:
 15702 ;;		On entry : 0/0
 15703 ;;		On exit  : 0/0
 15704 ;;		Unchanged: 0/0
 15705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15710 ;;Total ram usage:        0 bytes
 15711 ;; Hardware stack levels used: 1
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		Interrupt level 2
 15716 ;; This function uses a non-reentrant model
 15717 ;;
 15718                           
 15719                           	psect	intcode
 15720   000008                     __pintcode:
 15721                           	callstack 0
 15722   000008                     _HighISR:
 15723                           	callstack 22
 15724                           
 15725                           ; BSR set to: 14
 15726                           ;incstack = 0
 15727   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15728   00000A                     
 15729                           ;interrupts.c: 25:     if (PIR0bits.TMR0IF){
 15730   00000A  010E               	movlb	14	; () banked
 15731   00000C  AB33               	btfss	51,5,b	;volatile
 15732   00000E  EF0B  F000         	goto	i2u568_41
 15733   000012  EF0D  F000         	goto	i2u568_40
 15734   000016                     i2u568_41:
 15735   000016  EF18  F000         	goto	i2l227
 15736   00001A                     i2u568_40:
 15737   00001A                     
 15738                           ; BSR set to: 14
 15739                           ;interrupts.c: 26:         TMR0H=0;
 15740   00001A  0E00               	movlw	0
 15741   00001C  6ED4               	movwf	212,c	;volatile
 15742                           
 15743                           ;interrupts.c: 27:         TMR0L=0;
 15744   00001E  0E00               	movlw	0
 15745   000020  6ED3               	movwf	211,c	;volatile
 15746                           
 15747                           ;interrupts.c: 28:         lost_flag=1;
 15748   000022  0E00               	movlw	0
 15749   000024  0101               	movlb	1	; () banked
 15750   000026  6F15               	movwf	(_lost_flag+1)& (0+255),b
 15751   000028  0E01               	movlw	1
 15752   00002A  6F14               	movwf	_lost_flag& (0+255),b
 15753   00002C                     
 15754                           ; BSR set to: 1
 15755                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
 15756   00002C  010E               	movlb	14	; () banked
 15757   00002E  9B33               	bcf	51,5,b	;volatile
 15758   000030                     i2l227:
 15759                           
 15760                           ; BSR set to: 14
 15761   000030  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15762   000032  0011               	retfie		f
 15763   000034                     __end_of_HighISR:
 15764                           	callstack 0
 15765                           
 15766                           	psect	rparam
 15767   000000                     
 15768                           	psect	temp
 15769   00005F                     btemp:
 15770                           	callstack 0
 15771   00005F                     	ds	1
 15772   000000                     int$flags	set	btemp
 15773   000000                     wtemp8	set	btemp+1
 15774   000000                     ttemp5	set	btemp+1
 15775   000000                     ttemp6	set	btemp+4
 15776   000000                     ttemp7	set	btemp+8
 15777                           
 15778                           	psect	idloc
 15779                           
 15780                           ;Config register IDLOC0 @ 0x200000
 15781                           ;	unspecified, using default values
 15782   200000                     	org	2097152
 15783   200000  0FFF               	dw	4095
 15784                           
 15785                           ;Config register IDLOC1 @ 0x200002
 15786                           ;	unspecified, using default values
 15787   200002                     	org	2097154
 15788   200002  0FFF               	dw	4095
 15789                           
 15790                           ;Config register IDLOC2 @ 0x200004
 15791                           ;	unspecified, using default values
 15792   200004                     	org	2097156
 15793   200004  0FFF               	dw	4095
 15794                           
 15795                           ;Config register IDLOC3 @ 0x200006
 15796                           ;	unspecified, using default values
 15797   200006                     	org	2097158
 15798   200006  0FFF               	dw	4095
 15799                           
 15800                           ;Config register IDLOC4 @ 0x200008
 15801                           ;	unspecified, using default values
 15802   200008                     	org	2097160
 15803   200008  0FFF               	dw	4095
 15804                           
 15805                           ;Config register IDLOC5 @ 0x20000A
 15806                           ;	unspecified, using default values
 15807   20000A                     	org	2097162
 15808   20000A  0FFF               	dw	4095
 15809                           
 15810                           ;Config register IDLOC6 @ 0x20000C
 15811                           ;	unspecified, using default values
 15812   20000C                     	org	2097164
 15813   20000C  0FFF               	dw	4095
 15814                           
 15815                           ;Config register IDLOC7 @ 0x20000E
 15816                           ;	unspecified, using default values
 15817   20000E                     	org	2097166
 15818   20000E  0FFF               	dw	4095
 15819                           
 15820                           	psect	config
 15821                           
 15822                           ;Config register CONFIG1L @ 0x300000
 15823                           ;	External Oscillator mode Selection bits
 15824                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 15825                           ;	Power-up default value for COSC bits
 15826                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 15827   300000                     	org	3145728
 15828   300000  AA                 	db	170
 15829                           
 15830                           ;Config register CONFIG1H @ 0x300001
 15831                           ;	unspecified, using default values
 15832                           ;	Clock Out Enable bit
 15833                           ;	CLKOUTEN = 0x1, unprogrammed default
 15834                           ;	Clock Switch Enable bit
 15835                           ;	CSWEN = 0x1, unprogrammed default
 15836                           ;	Fail-Safe Clock Monitor Enable bit
 15837                           ;	FCMEN = 0x1, unprogrammed default
 15838   300001                     	org	3145729
 15839   300001  FF                 	db	255
 15840                           
 15841                           ;Config register CONFIG2L @ 0x300002
 15842                           ;	unspecified, using default values
 15843                           ;	Master Clear Enable bit
 15844                           ;	MCLRE = 0x1, unprogrammed default
 15845                           ;	Power-up Timer Enable bit
 15846                           ;	PWRTE = 0x1, unprogrammed default
 15847                           ;	Low-power BOR enable bit
 15848                           ;	LPBOREN = 0x1, unprogrammed default
 15849                           ;	Brown-out Reset Enable bits
 15850                           ;	BOREN = 0x3, unprogrammed default
 15851   300002                     	org	3145730
 15852   300002  FF                 	db	255
 15853                           
 15854                           ;Config register CONFIG2H @ 0x300003
 15855                           ;	unspecified, using default values
 15856                           ;	Brown Out Reset Voltage selection bits
 15857                           ;	BORV = 0x3, unprogrammed default
 15858                           ;	ZCD Disable bit
 15859                           ;	ZCD = 0x1, unprogrammed default
 15860                           ;	PPSLOCK bit One-Way Set Enable bit
 15861                           ;	PPS1WAY = 0x1, unprogrammed default
 15862                           ;	Stack Full/Underflow Reset Enable bit
 15863                           ;	STVREN = 0x1, unprogrammed default
 15864                           ;	Debugger Enable bit
 15865                           ;	DEBUG = 0x1, unprogrammed default
 15866                           ;	Extended Instruction Set Enable bit
 15867                           ;	XINST = 0x1, unprogrammed default
 15868   300003                     	org	3145731
 15869   300003  FF                 	db	255
 15870                           
 15871                           ;Config register CONFIG3L @ 0x300004
 15872                           ;	WDT Period Select bits
 15873                           ;	WDTCPS = 0x1F, unprogrammed default
 15874                           ;	WDT operating mode
 15875                           ;	WDTE = OFF, WDT Disabled
 15876   300004                     	org	3145732
 15877   300004  9F                 	db	159
 15878                           
 15879                           ;Config register CONFIG3H @ 0x300005
 15880                           ;	unspecified, using default values
 15881                           ;	WDT Window Select bits
 15882                           ;	WDTCWS = 0x7, unprogrammed default
 15883                           ;	WDT input clock selector
 15884                           ;	WDTCCS = 0x7, unprogrammed default
 15885   300005                     	org	3145733
 15886   300005  FF                 	db	255
 15887                           
 15888                           ;Config register CONFIG4L @ 0x300006
 15889                           ;	unspecified, using default values
 15890                           ;	Write Protection Block 0
 15891                           ;	WRT0 = 0x1, unprogrammed default
 15892                           ;	Write Protection Block 1
 15893                           ;	WRT1 = 0x1, unprogrammed default
 15894                           ;	Write Protection Block 2
 15895                           ;	WRT2 = 0x1, unprogrammed default
 15896                           ;	Write Protection Block 3
 15897                           ;	WRT3 = 0x1, unprogrammed default
 15898                           ;	Write Protection Block 3
 15899                           ;	WRT4 = 0x1, unprogrammed default
 15900                           ;	Write Protection Block 3
 15901                           ;	WRT5 = 0x1, unprogrammed default
 15902                           ;	Write Protection Block 3
 15903                           ;	WRT6 = 0x1, unprogrammed default
 15904                           ;	Write Protection Block 3
 15905                           ;	WRT7 = 0x1, unprogrammed default
 15906   300006                     	org	3145734
 15907   300006  FF                 	db	255
 15908                           
 15909                           ;Config register CONFIG4H @ 0x300007
 15910                           ;	unspecified, using default values
 15911                           ;	Configuration Register Write Protection bit
 15912                           ;	WRTC = 0x1, unprogrammed default
 15913                           ;	Boot Block Write Protection bit
 15914                           ;	WRTB = 0x1, unprogrammed default
 15915                           ;	Data EEPROM Write Protection bit
 15916                           ;	WRTD = 0x1, unprogrammed default
 15917                           ;	Scanner Enable bit
 15918                           ;	SCANE = 0x1, unprogrammed default
 15919                           ;	Low Voltage Programming Enable bit
 15920                           ;	LVP = 0x1, unprogrammed default
 15921   300007                     	org	3145735
 15922   300007  FF                 	db	255
 15923                           
 15924                           ;Config register CONFIG5L @ 0x300008
 15925                           ;	unspecified, using default values
 15926                           ;	UserNVM Program Memory Code Protection bit
 15927                           ;	CP = 0x1, unprogrammed default
 15928                           ;	DataNVM Memory Code Protection bit
 15929                           ;	CPD = 0x1, unprogrammed default
 15930   300008                     	org	3145736
 15931   300008  FF                 	db	255
 15932                           
 15933                           ;Config register CONFIG5H @ 0x300009
 15934                           ;	unspecified, using default values
 15935   300009                     	org	3145737
 15936   300009  FF                 	db	255
 15937                           
 15938                           ;Config register CONFIG6L @ 0x30000A
 15939                           ;	unspecified, using default values
 15940                           ;	Table Read Protection Block 0
 15941                           ;	EBTR0 = 0x1, unprogrammed default
 15942                           ;	Table Read Protection Block 1
 15943                           ;	EBTR1 = 0x1, unprogrammed default
 15944                           ;	Table Read Protection Block 2
 15945                           ;	EBTR2 = 0x1, unprogrammed default
 15946                           ;	Table Read Protection Block 3
 15947                           ;	EBTR3 = 0x1, unprogrammed default
 15948                           ;	Table Read Protection Block 4
 15949                           ;	EBTR4 = 0x1, unprogrammed default
 15950                           ;	Table Read Protection Block 5
 15951                           ;	EBTR5 = 0x1, unprogrammed default
 15952                           ;	Table Read Protection Block 6
 15953                           ;	EBTR6 = 0x1, unprogrammed default
 15954                           ;	Table Read Protection Block 7
 15955                           ;	EBTR7 = 0x1, unprogrammed default
 15956   30000A                     	org	3145738
 15957   30000A  FF                 	db	255
 15958                           
 15959                           ;Config register CONFIG6H @ 0x30000B
 15960                           ;	unspecified, using default values
 15961                           ;	Boot Block Table Read Protection bit
 15962                           ;	EBTRB = 0x1, unprogrammed default
 15963   30000B                     	org	3145739
 15964   30000B  FF                 	db	255
 15965                           tosu	equ	0xFFF
 15966                           tosh	equ	0xFFE
 15967                           tosl	equ	0xFFD
 15968                           stkptr	equ	0xFFC
 15969                           pclatu	equ	0xFFB
 15970                           pclath	equ	0xFFA
 15971                           pcl	equ	0xFF9
 15972                           tblptru	equ	0xFF8
 15973                           tblptrh	equ	0xFF7
 15974                           tblptrl	equ	0xFF6
 15975                           tablat	equ	0xFF5
 15976                           prodh	equ	0xFF4
 15977                           prodl	equ	0xFF3
 15978                           indf0	equ	0xFEF
 15979                           postinc0	equ	0xFEE
 15980                           postdec0	equ	0xFED
 15981                           preinc0	equ	0xFEC
 15982                           plusw0	equ	0xFEB
 15983                           fsr0h	equ	0xFEA
 15984                           fsr0l	equ	0xFE9
 15985                           wreg	equ	0xFE8
 15986                           indf1	equ	0xFE7
 15987                           postinc1	equ	0xFE6
 15988                           postdec1	equ	0xFE5
 15989                           preinc1	equ	0xFE4
 15990                           plusw1	equ	0xFE3
 15991                           fsr1h	equ	0xFE2
 15992                           fsr1l	equ	0xFE1
 15993                           bsr	equ	0xFE0
 15994                           indf2	equ	0xFDF
 15995                           postinc2	equ	0xFDE
 15996                           postdec2	equ	0xFDD
 15997                           preinc2	equ	0xFDC
 15998                           plusw2	equ	0xFDB
 15999                           fsr2h	equ	0xFDA
 16000                           fsr2l	equ	0xFD9
 16001                           status	equ	0xFD8

Data Sizes:
    Strings     59
    Constant    0
    Data        10
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    115     152
    BANK1           256    102     220
    BANK2           256      0     240
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    PinkMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    PinkMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    LightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    LightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    YellowMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    YellowMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    OrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    OrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReversePink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReversePink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseLightBlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseLightBlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    RedMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RedMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ReverseOrangeMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ReverseOrangeMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    GreenMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    GreenMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    BlueMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    BlueMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2843$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 51
		 -> STR_1(CODE[51]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2759$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2759$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    go_Home@WayBack	PTR unsigned char  size(2) Largest target is 50
		 -> WayBack(BANK1[50]), 

    go_Home@Time_forward	PTR int  size(2) Largest target is 100
		 -> Time_forward(BANK2[100]), 

    RetryMove@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    RetryMove@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Backhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Backhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    quaterForward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    quaterForward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    Forwardhalfblock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    Forwardhalfblock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    ForwardOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    ForwardOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseOneBlock@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseOneBlock@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    reverseDetect@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    reverseDetect@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedBack@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    timed_forward@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _colour_move->_go_Home
    _go_Home->_BlueMove
    _go_Home->_GreenMove
    _go_Home->_RedMove
    _go_Home->_ReverseLightBlueMove
    _go_Home->_ReverseOrangeMove
    _go_Home->_ReversePink
    _go_Home->_ReverseYellow
    _timed_forward->_setMotorPWM
    _ReverseYellow->_ForwardOneBlock
    _ReverseYellow->_reverseDetect
    _ReverseYellow->_turnRight45
    _ReversePink->_ForwardOneBlock
    _ReversePink->_reverseDetect
    _ReversePink->_turnLeft45
    _ForwardOneBlock->_fullSpeedAhead
    _ForwardOneBlock->_stop
    _ReverseOrangeMove->_reverseDetect
    _ReverseOrangeMove->_turnLeft45
    _ReverseLightBlueMove->_reverseDetect
    _ReverseLightBlueMove->_turnRight45
    _RedMove->_reverseDetect
    _RedMove->_turnRight45
    _GreenMove->_reverseDetect
    _GreenMove->_turnLeft45
    _BlueMove->_Backhalfblock
    _BlueMove->_reverseDetect
    _BlueMove->_turnRight45
    _Backhalfblock->_fullSpeedBack
    _Backhalfblock->_stop
    _YellowMove->_reverseDetect
    _YellowMove->_reverseOneBlock
    _YellowMove->_turnRight45
    _RetryMove->_reverseDetect
    _PinkMove->_reverseDetect
    _PinkMove->_reverseOneBlock
    _PinkMove->_turnLeft45
    _reverseOneBlock->_fullSpeedBack
    _reverseOneBlock->_stop
    _OrangeMove->_quaterForward
    _OrangeMove->_reverseDetect
    _OrangeMove->_turnRight45
    _turnRight45->_stop
    _turnRight45->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueMove->_quaterForward
    _LightBlueMove->_reverseDetect
    _LightBlueMove->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _reverseDetect->_fullSpeedBack
    _reverseDetect->_stop
    _fullSpeedBack->_setMotorPWM
    _quaterForward->_fullSpeedAhead
    _quaterForward->_stop
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Forwardhalfblock->_fullSpeedAhead
    _Forwardhalfblock->_stop
    _stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               104   104      0  607900
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                       _Buttons_init
                     _Colour_decider
                   _Forwardhalfblock
                  _I2C_2_Master_Init
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _color_click_init
                        _colour_move
                         _colour_rel
                     _fullSpeedAhead
                         _getTMR0val
                            _go_Home
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9657
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   35323
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34968
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34615
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   28769
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     729
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     143
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     692
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           6     6      0      91
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _colour_move                                          2     0      2  351114
                                             44 COMRAM     2     0      2
                           _BlueMove
                          _GreenMove
                      _LightBlueMove
                         _OrangeMove
                           _PinkMove
                            _RedMove
                          _RetryMove
                         _YellowMove
                            _go_Home
 ---------------------------------------------------------------------------------
 (1) _go_Home                                              9     5      4  168125
                                             35 COMRAM     9     5      4
                      _Backhalfblock
                           _BlueMove
                          _GreenMove
                            _RedMove
               _ReverseLightBlueMove
                  _ReverseOrangeMove
                        _ReversePink
                      _ReverseYellow
                               _stop
                      _timed_forward
 ---------------------------------------------------------------------------------
 (2) _timed_forward                                        8     2      6    2529
                                             19 COMRAM     8     2      6
                         _delayed_ms
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _delayed_ms                                           5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ReverseYellow                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _ReversePink                                          4     0      4   25733
                                             31 COMRAM     4     0      4
                    _ForwardOneBlock
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _ForwardOneBlock                                      6     2      4    7202
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _ReverseOrangeMove                                    4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _ReverseLightBlueMove                                 4     0      4   18531
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RedMove                                              4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _GreenMove                                            4     0      4   18683
                                             31 COMRAM     4     0      4
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _BlueMove                                             4     0      4   26797
                                             31 COMRAM     4     0      4
                      _Backhalfblock
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _Backhalfblock                                        6     2      4    7962
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _YellowMove                                           4     0      4   25581
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                        _turnRight45
 ---------------------------------------------------------------------------------
 (2) _RetryMove                                            6     2      4   15924
                                             31 COMRAM     6     2      4
                     _fullSpeedAhead
                      _reverseDetect
                               _stop
 ---------------------------------------------------------------------------------
 (2) _PinkMove                                             4     0      4   25581
                                             31 COMRAM     4     0      4
                      _reverseDetect
                    _reverseOneBlock
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (3) _reverseOneBlock                                      6     2      4    7050
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (2) _OrangeMove                                           4     0      4   25733
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                        _turnRight45
 ---------------------------------------------------------------------------------
 (3) _turnRight45                                          6     2      4    9505
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueMove                                        4     0      4   25733
                                             31 COMRAM     4     0      4
                      _quaterForward
                      _reverseDetect
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    9505
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _reverseDetect                                        6     2      4    8874
                                             25 COMRAM     6     2      4
                      _fullSpeedBack
                               _stop
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBack                                        6     2      4    2765
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _quaterForward                                        6     2      4    7202
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Forwardhalfblock                                     6     2      4    7050
                                             25 COMRAM     6     2      4
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3937
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedAhead                                       6     2      4    2917
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   23353
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    3702
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _Buttons_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Buttons_init
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___xxtofl
   _Forwardhalfblock
     _fullSpeedAhead
       _setMotorPWM
         ___lwdiv
           ___wmul (ARG)
         ___wmul
     _stop
       _setMotorPWM
   _I2C_2_Master_Init
   _Interrupts_init
   _LED_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_move
     _BlueMove
       _Backhalfblock
         _fullSpeedBack
           _setMotorPWM
         _stop
       _reverseDetect
         _fullSpeedBack
         _stop
       _turnRight45
         _TurnDelay
         _stop
         _turnRight
           _setMotorPWM
     _GreenMove
       _reverseDetect
       _turnLeft45
         _TurnDelay
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueMove
       _quaterForward
         _fullSpeedAhead
         _stop
       _reverseDetect
       _turnLeft45
     _OrangeMove
       _quaterForward
       _reverseDetect
       _turnRight45
     _PinkMove
       _reverseDetect
       _reverseOneBlock
         _fullSpeedBack
         _stop
       _turnLeft45
     _RedMove
       _reverseDetect
       _turnRight45
     _RetryMove
       _fullSpeedAhead
       _reverseDetect
       _stop
     _YellowMove
       _reverseDetect
       _reverseOneBlock
       _turnRight45
     _go_Home
       _Backhalfblock
       _BlueMove
       _GreenMove
       _RedMove
       _ReverseLightBlueMove
         _reverseDetect
         _turnRight45
       _ReverseOrangeMove
         _reverseDetect
         _turnLeft45
       _ReversePink
         _ForwardOneBlock
           _fullSpeedAhead
           _stop
         _reverseDetect
         _turnLeft45
       _ReverseYellow
         _ForwardOneBlock
         _reverseDetect
         _turnRight45
       _stop
       _timed_forward
         _delayed_ms
         _setMotorPWM
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _fullSpeedAhead
   _getTMR0val
   _go_Home
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _turnCalibration
     _turnLeft45

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F0       9       93.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRllllhh     52      0       0      43        0.0%
BITBIGSFRllllhh     37      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      56        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRllllll     20      0       0      48        0.0%
BITBIGSFRllllll     1E      0       0      50        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllllh     17      0       0      38        0.0%
BITBIGSFRhllhh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      51        0.0%
BITBIGSFRhllhlh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      49        0.0%
BITBIGSFRllllll      B      0       0      59        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRllllhl      8      0       0      46        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      54        0.0%
BITBIGSFRhlllll      5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      53        0.0%
BITBIGSFRllllhh      2      0       0      44        0.0%
BITBIGSFRhlllh       2      0       0      37        0.0%
BITBIGSFRlllhl       2      0       0      42        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRhllhll      1      0       0      36        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BITBIGSFRlllhh       1      0       0      41        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C2      62        0.0%
DATA                 0      0     2C2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Mar 15 20:18:01 2023

               _color_read_Red 5C8A                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 5C3A                   ___fldiv@sign 0042                _color_read_Blue 5D2A  
                           l52 6174                             l61 5D28                             l70 31DC  
                           l55 5C88                             l80 222A                             l64 5D78  
                           l49 5BE8                             l58 5CD8                             l67 5790  
              ??_timed_forward 001A            ___wmul@multiplicand 0003                _turnCalibration 434C  
             _color_read_Green 5CDA                readColours@vals 000C              ??_Interrupts_init 0001  
                          l200 61CA                            l132 60E0                            l221 61E2  
                          l141 620C                            l150 61D6                            l206 60B6  
                          l135 60E2                            l144 61F8                            l153 5F24  
                          l138 6108                            l330 3866                            l147 6202  
                          l501 57EA                            l422 47EA                            l510 5452  
                          l415 52E0                            l504 5FA2                            l513 5B44  
                          l601 379A                            l522 56D0                            l346 3A8C  
                          l507 5FE0                            l531 4E8C                            l452 5258  
                          l428 535E                            l436 511C                            l444 507E  
                          l516 5B96                            l460 4F36                            l188 61B2  
                          l525 559E                            l613 37C2                            l197 61B6  
                          l541 436A                            l534 5AA0                            l471 606C  
                          l519 566A                            l607 379A                            l551 44A6  
                          l543 43C0                            l480 5E14                            l528 4DD6  
                          l640 5732                            l552 44DC                            l544 441A  
                          l537 5AF2                            l553 44F6                            l545 448A  
                          l474 6086                            l546 4452                            l483 5844  
                          l643 603A                            l636 6194                            l468 51BA  
                          l492 58F6                            l477 5DC6                            l646 6050  
                          l495 589E                            l671 612E                            l489 594E  
                          l674 61EE                            l498 59A6                            l746 3F84  
                          l754 3F84                            l757 6154                            l871 467E  
                          l884 494E                 ?_quaterForward 001A                            _abs 5F26  
                          _pad 5360                            _rel 014C                   ?_colour_move 002D  
                          wreg 000FE8                   ___flmul@aexp 0022                   ___flmul@bexp 0023  
                 ___flmul@sign 001D                   ___flmul@temp 0028                   ___flmul@prod 0024  
                 ___fltol@exp1 000A                Colour_decider@i 007A                           l1022 4B12  
                         l1031 6018                           l1016 4FE0                           l1027 4B58  
                         ?_abs 0013                           l1302 2534                           l1054 4A54  
                         l1311 2604                           l1312 25F2                           l1412 41EE  
                         l1341 2D0E                           l1501 1836                           l1350 2D54  
                         l1327 5E5A                           l1415 434A                           l1255 54C6  
                         l1352 2DCC                           l1344 2CD2                           l4000 23E8  
                         l1248 54BE                           l1504 11D0                           l1353 2DBA  
                         l4010 2428                           l4002 23EC                           l1426 42E2  
                         l1506 1016                           l1339 2EAE                           l1371 27B0  
                         l1419 4286                           l1435 5A4E                           l1380 2A1E  
                         l4100 26C2                           l4020 246A                           l4012 2438  
                         l4004 23FA                           l1381 2A0C                           l1285 241A  
                         l4102 26C4                           l4030 2498                           l4022 2478  
                         l1294 26EA                           l4006 23FC                           l1286 2408  
                         l1606 55F4                           l1534 1618                           l1375 2B14  
                         l1287 23CE                           l1471 53D8                           l1615 5C38  
                         l4104 26CA                           l4040 2504                           l4032 24A2  
                         l4024 2484                           l4016 244C                           l4008 2406  
                         l4120 51BC                           l4200 450A                           l4112 5EA0  
                         l5000 166A                           l1609 5604                           l1378 29A6  
                         l4106 26D8                           l4042 2514                           l4026 2488  
                         l4018 245C                           l4034 24A8                           l4122 51E0  
                         l4130 5228                           l4210 4560                           l4202 452A  
                         l4114 5EAC                           l1490 3D0C                           l5010 169E  
                         l5002 166E                           l1627 4D20                           l1635 5EE2  
                         l1467 5382                           l1571 59FC                           l4300 2B96  
                         l1388 2AD6                           l4108 26DA                           l4060 2596  
                         l4052 256E                           l4036 24CE                           l4044 2524  
                         l4028 2496                           l4132 5240                           l4124 51F8  
                         l4140 530A                           l5100 5964                           l4220 45B4  
                         l4212 456C                           l4204 452E                           l4116 5EBE  
                         l1476 3B1C                           l1644 5E9E                           l5020 173C  
                         l5012 16A2                           l5004 1674                           l1581 4C56  
                         l1549 34E2                           l4310 2BCA                           l4302 2B98  
                         l4062 259E                           l4054 2578                           l4046 254A  
                         l4038 2502                           l4070 25C2                           l4126 5204  
                         l4142 5316                           l4134 52E2                           l5102 597A  
                         l4150 50A4                           l5110 4D22                           l4230 4628  
                         l4222 45C6                           l4214 458A                           l4206 453C  
                         l1638 6218                           l4118 5EC2                           l1478 3B24  
                         l5030 1792                           l5014 16A8                           l5006 167A  
                         l5022 1740                           l1479 3B6A                           l4400 2E8E  
                         l4320 2C10                           l4304 2BA8                           l4312 2BD2  
                         l4080 2614                           l4072 25C6                           l4064 25A2  
                         l4056 2586                           l4048 255A                           l4128 5210  
                         l4136 52E6                           l4144 532E                           l5200 60B8  
                         l4160 5104                           l4152 50BC                           l5104 5F66  
                         l5112 4DD8                           l4224 45F4                           l4216 4592  
                         l4232 462E                           l4208 455C                           l4240 47EC  
                         l5040 180E                           l5032 17C2                           l5024 175E  
                         l5016 1700                           l5008 168C                           l5120 3206  
                         l4402 2E9C                           l4330 2C38                           l4322 2C14  
                         l4314 2BE2                           l4306 2BB8                           l4090 267A  
                         l4082 2620                           l4074 25D4                           l4066 25B2  
                         l4058 2588                           l4146 5346                           l4138 52FE  
                         l5210 60CE                           l5202 60C2                           l5050 61CE  
                         l4154 50C8                           l4170 5036                           l4162 4FE2  
                         l5106 5FA4                           l5114 5A50                           l4234 463E  
                         l4226 4614                           l4218 45A6                           l4250 4830  
                         l4242 47F0                           l1586 5F5C                           l5042 1816  
                         l5034 17D0                           l5026 177A                           l5018 1734  
                         l5130 3256                           l5122 3214                           l1595 4196  
                         l4404 2EA2                           l4340 2C86                           l4316 2BF8  
                         l4308 2BC8                           l4500 29A4                           l4420 2708  
                         l4092 268A                           l4084 262E                           l4076 25EA  
                         l4068 25B4                           l5204 60C8                           l5052 61D2  
                         l5212 6158                           l4180 515A                           l4156 50D4  
                         l4148 5080                           l4164 5006                           l4172 504E  
                         l5300 558A                           l5108 53DA                           l5116 5AA2  
                         l5060 61F4                           l5220 5C8A                           l4236 465E  
                         l4228 4616                           l4260 4898                           l4252 4850  
                         l4244 47FE                           l5036 17E8                           l5028 1782  
                         l5140 330C                           l5132 3276                           l5124 3222  
                         l1589 5F64                           l4406 2EA4                           l4350 2CD0  
                         l4342 2C96                           l4334 2C4C                           l4318 2C08  
                         l4326 2C28                           l4510 2A04                           l4502 29B6  
                         l4430 274E                           l4422 2718                           l4414 26EC  
                         l4094 26AA                           l4086 2668                           l5310 4214  
                         l5302 419A                           l5206 60CA                           l5046 6204  
                         l5054 61FA                           l4182 5166                           l4190 6052  
                         l4158 50EC                           l4174 5066                           l4166 501E  
                         l5070 5F20                           l5062 5EE6                           l5222 5CD0  
                         l5214 5C3A                           l4270 490E                           l4262 48C6  
                         l4254 486E                           l4246 481E                           l1598 40DA  
                         l5038 17F8                           l5142 3322                           l5150 333A  
                         l5134 32CC                           l5126 3226                           l5118 31DE  
                         l4360 2D1E                           l4352 2CDC                           l4344 2C9E  
                         l4336 2C66                           l4328 2C38                           l4280 2B30  
                         l4520 2A72                           l4504 29C4                           l4440 277A  
                         l4432 2754                           l4424 2728                           l4416 26F8  
                         l4096 26AE                           l4088 266A                           l5320 426E  
                         l5304 41AA                           l5208 60CC                           l5048 6208  
                         l5056 61FE                           l4184 5172                           l4176 511E  
                         l4192 6056                           l4168 502A                           l5080 4ECA  
                         l5400 3078                           l5072 5F22                           l5064 5EEA  
                         l5232 5D2A                           l5216 5C80                           l5240 61C6  
                         l4272 492E                           l4264 48E6                           l4256 4876  
                         l4248 4822                           l5160 33F8                           l5144 332A  
                         l5152 336C                           l5128 3236                           l4362 2D34  
                         l4370 2D64                           l4354 2CFA                           l4346 2CAE  
                         l4338 2C76                           l4290 2B64                           l4282 2B32  
                         l4530 2ADA                           l4514 2A2E                           l4522 2A76  
                         l4506 29C8                           l4450 27D0                           l4442 278A  
                         l4434 275A                           l4426 2738                           l4418 2706  
                         l4098 26BC                           l5330 42D2                           l5322 4270  
                         l5314 4228                           l5306 41B8                           l5410 186E  
                         l4178 5142                           l4186 518A                           l4194 6066  
                         l5090 4F2A                           l5082 4ED6                           l5242 34E4  
                         l5402 3110                           l5066 5EF2                           l5058 61F0  
                         l5234 5D70                           l5226 5CDA                           l4266 48F8  
                         l4258 488A                           l4610 49BA                           l4602 497A  
                         l5170 3474                           l5162 3422                           l5154 3390  
                         l5146 3332                           l5138 32FC                           l4372 2D72  
                         l4364 2D3A                           l4356 2CFC                           l4348 2CC2  
                         l4284 2B42                           l4292 2B6C                           l4276 2B16  
                         l4540 2B04                           l4532 2AEA                           l4524 2A90  
                         l4516 2A3A                           l4508 29D6                           l4460 2810  
                         l4444 279A                           l4436 2768                           l4428 273E  
                         l5340 432A                           l5332 42F0                           l5324 427C  
                         l5316 4230                           l5308 41FE                           l5500 1FC2  
                         l5412 189E                           l3900 4704                           l4188 51A2  
                         l5092 58F8                           l5084 4EE2                           l5076 4E8E  
                         l5260 35C0                           l5252 3514                           l5244 34F8  
                         l5404 3144                           l5068 5EFA                           l5228 5D20  
                         l4196 44F8                           l4268 48FE                           l4620 49EA  
                         l4612 49C8                           l4604 49A4                           l4700 408E  
                         l5164 3442                           l5156 33C4                           l5172 34A4  
                         l6052 334E                           l4382 2DDC                           l4390 2E24  
                         l4374 2D76                           l4366 2D44                           l4358 2D0C  
                         l4294 2B7C                           l4286 2B52                           l4278 2B22  
                         l4550 4F38                           l4534 2AF8                           l4526 2AA4  
                         l4518 2A48                           l4470 285A                           l4462 281C  
                         l4454 27E4                           l4446 27A0                           l4438 276A  
                         l3910 222C                           l5342 4338                           l5334 42F2  
                         l5326 42B8                           l5318 423C                           l5510 1FDA  
                         l5430 19F0                           l5422 1910                           l5414 18D2  
                         l5406 1838                           l3902 4708                           l5094 590C  
                         l5078 4EB2                           l5086 4EFA                           l5270 3698  
                         l5262 35EC                           l5254 3542                           l5246 34FA  
                         l5238 61B6                           l4198 44FC                           l4630 4A14  
                         l4622 49F4                           l4606 49A6                           l4710 4176  
                         l4702 40CA                           l6054 340C                           l5350 59B4  
                         ?_pad 0011                           l4392 2E3E                           l4384 2DE8  
                         l4376 2D84                           l4368 2D52                           l4296 2B82  
                         l4288 2B62                           l4560 4FD8                           l4552 4F66  
                         l4536 2AFA                           l4528 2ABE                           l4480 28AC  
                         l4472 2866                           l4464 2834                           l4456 27F0  
                         l4448 27C0                           l3920 2268                           l3912 2238  
                         l4544 5E16                           l5344 433A                           l5336 42F6  
                         l5328 42C4                           l5512 200C                           l5520 204A  
                         l5432 1A22                           l5424 1962                           l5416 1906  
                         l5408 1862                           l3904 474A                           l5360 5B9C  
                         l5096 5922                           l5088 4F12                           l5280 376E  
                         l5272 36C2                           l5264 3616                           l5256 356A  
                         l5248 3502                           l5600 528C                           l4640 5360  
                         l4800 3B82                           l4632 4A24                           l4608 49B6  
                         l4712 4186                           l4704 40FE                           l4720 5C0A  
                         l6056 3496                           l5176 34B6                           l5352 59D2  
                         l4394 2E54                           l4386 2DF6                           l4378 2DB2  
                         l4298 2B88                           l4562 4FDE                           l4554 4F76  
                         l4570 4A94                           l4538 2B00                           l4490 292A  
                         l4482 28BC                           l4474 2876                           l4466 2840  
                         l4458 27FA                           l3930 2298                           l3922 2278  
                         l3914 2246                           l4546 5E26                           l5338 431A  
                         l5522 207C                           l5514 203E                           l5506 1FCE  
                         l5450 1BA2                           l5442 1AA6                           l5434 1A28  
                         l5426 1994                           l3906 4766                           l4730 60F2  
                         l5370 5BD4                           l5362 5BA6                           l5098 5950  
                         l5290 5B46                           l5282 37AE                           l5274 36EE  
                         l5266 3642                           l5258 3596                           l5610 52C8  
                         l5602 52B0                           l4650 53A6                           l4642 536E  
                         l4810 3C8E                           l4802 3C04                           l4634 4A34  
                         l4618 49E0                           l4706 413A                           l4722 5C0E  
                         l5354 59F2                           l4396 2E6E                           l4388 2E20  
                         l4556 4FA4                           l4580 4B00                           l4572 4AC2  
                         l4492 2960                           l4484 28D8                           l4476 2882  
                         l4468 284C                           l3940 22C2                           l3932 22AA  
                         l3924 227A                           l3916 2248                           l5524 20AE  
                         l5452 1BB4                           l5460 1D60                           l5444 1ABA  
                         l5436 1A44                           l5428 199C                           l3860 545C  
                         l3852 6130                           l3908 47AA                           l5620 617E  
                         l5380 5BDE                           l5372 5BD6                           l5364 5BB6  
                         l4740 5D8E                           l5292 5606                           l4732 601A  
                         l5284 37B8                           l5276 3718                           l5268 366C  
                         l5700 3D0E                           l5612 52D2                           l5604 52BA  
                         l4652 53C4                           l4644 537A                           l4820 3CEC  
                         l4812 3CAC                           l4804 3C0A                           l4636 4A44  
                         l4628 4A08                           l4660 4B7A                           l4708 414E  
                         l4724 5C1A                           l4716 5BEA                           l4900 110E  
                         l5348 59A8                           l4398 2E8A                           l4558 4FB4  
                         l4582 4B50                           l4574 4AD2                           l4566 4A56  
                         l4494 296E                           l4486 28E4                           l4478 2892  
                         l3942 22D2                           l3950 22FC                           l3934 22AC  
                         l3918 2258                           l3926 2282                           l5550 21F0  
                         l5526 20EC                           l5534 2136                           l5462 1D92  
                         l5470 1DD0                           l5454 1C30                           l5446 1B5A  
                         l5438 1A9A                           l3870 5492                           l3862 546E  
                         l3854 614C                           l5622 6188                           l5382 5BE0  
                         l5374 5BD8                           l5366 5BC0                           l5358 5B98  
                         l4750 5DE8                           l5294 566C                           l4742 5D9A  
                         l4734 6026                           l5278 3744                           l5710 3D4E  
                         l5702 3D20                           l5614 52D4                           l5606 52BC  
                         l5390 5734                           l4654 5F26                           l4646 538E  
                         l4814 3CC6                           l4806 3C10                           l4590 5FF8  
                         l4662 4BB8                           l4670 4BF8                           l4718 5BFE  
                         l4726 5C1E                           l4902 1122                           l4910 119E  
                         l4830 0E62                           l5630 436C                           l4584 4B56  
                         l4576 4AE0                           l4568 4A84                           l4496 298C  
                         l4488 2900                           l3960 2334                           l3952 230C  
                         l3944 22E2                           l3936 22B2                           l3928 2292  
                         l5552 2222                           l5536 2174                           l5528 212A  
                         l5472 1E02                           l5480 1E40                           l5464 1DC4  
                         l5456 1C8C                           l5448 1B6A                           l3872 54A8  
                         l3864 5476                           l5624 6192                           l4728 60E2  
                         l5384 5BE2                           l5376 5BDA                           l5368 5BCA  
                         l4752 5DFC                           l4744 5DAE                           l5296 5536  
                         l5288 5AF4                           l4760 58A0                           l4736 6036  
                         l5720 3D8C                           l5704 3D34                           l5712 3D5C  
                         l5392 2EB0                           l5616 52DE                           l5608 52C6  
                         l4656 5F40                           l3880 4C58                           l4648 53A2  
                         l4816 3CD6                           l4808 3C74                           l4592 6008  
                         l4672 4C0A                           l4664 4BE0                           l4680 5E5C  
                         l4920 1204                           l4912 11D8                           l4904 1156  
                         l4840 0EAC                           l4832 0E66                           l4824 0E3E  
                         l5640 43FA                           l5632 43C2                           l4578 4AF2  
                         l4498 2996                           l3970 2348                           l3962 2338  
                         l3954 231E                           l3946 22F2                           l3938 22C0  
                         l5538 21B2                           l5482 1E72                           l5474 1E34  
                         l5458 1D08                           l3874 54B0                           l3866 547E  
                         l3858 5454                           l5618 6176                           l5386 5BE4  
                         l5378 5BDC                           l4754 57EC                           l4746 5DC8  
                         l4738 5D7A                           l5298 5572                           l4770 57BE  
                         l4762 58B4                           l5730 3DCE                           l5714 3D70  
                         l5706 3D38                           l5394 2F7C                           l5570 61AE  
                         l5562 6196                           l3890 4CDA                           l3882 4C6A  
                         l4818 3CDC                           l4666 4BEC                           l4658 4B5A  
                         l4690 3FA6                           l4682 5E6C                           l4930 1252  
                         l4922 1208                           l4914 11E8                           l4906 115E  
                         l4850 0EFA                           l4842 0EBC                           l4834 0E8A  
                         l4826 0E44                           l5650 4434                           l5642 4412  
                         l5634 43DA                           l5626 434C                           l5810 37C8  
                         l3980 235C                           l3972 234C                           l3964 233C  
                         l3956 232C                           l3948 22F4                           l5548 21BE  
                         l5484 1EA4                           l3876 54B2                           l3868 548C  
                         l5388 5BE6                           l4756 5800                           l4748 5DDC  
                         l4764 58CA                           l5740 3E10                           l5732 3DD2  
                         l5716 3D84                           l5724 3DA2                           l5708 3D3C  
                         l5396 2FB0                           l5572 61B0                           l5564 61A0  
                         l5580 609E                           l3884 4C7C                           l4780 3AF4  
                         l4772 3A90                           l4588 5FE2                           l4596 4950  
                         l4676 4C4E                           l4692 3FFC                           l4684 55A0  
                         l4940 12EA                           l4924 121A                           l4932 125A  
                         l4916 11F4                           l4860 0F36                           l4852 0F0C  
                         l4844 0EC8                           l4836 0E94                           l4828 0E54  
                         l5660 4484                           l5652 444C                           l5644 4414  
                         l5636 43E8                           l5628 434E                           l5900 3A34  
                         l5820 37DC                           l5812 37CC                           l3990 2370  
                         l3982 2360                           l3974 2350                           l3966 2340  
                         l3958 2330                           l5486 1EDE                           l3878 54B8  
                         l3894 4680                           l5582 61D8                           l4758 5818  
                         l4766 5792                           l5750 3E42                           l5742 3E14  
                         l5726 3DB6                           l5718 3D88                           l5398 3044  
                         l5590 526C                           l5566 61A2                           l5574 6088  
                         l3886 4C86                           l4790 3B52                           l4782 3B10  
                         l4774 3AB0                           l4598 4966                           l4694 4010  
                         l4686 55BE                           l4950 13CE                           l4942 1342  
                         l4934 1262                           l4926 1228                           l4918 11FC  
                         l4870 0F98                           l4862 0F40                           l4854 0F10  
                         l4846 0ED0                           l4838 0E9C                           l5670 44CE  
                         l5654 4460                           l5646 4428                           l5638 43F6  
                         l5662 448A                           l5902 3A44                           l5910 3A78  
                         l5830 37FA                           l5822 37E8                           l5814 37D0  
                         l3992 239A                           l3984 2364                           l3976 2354  
                         l3968 2344                           l5488 1F1C                           l5496 1F4A  
                         l3896 469C                           l5584 610A                           l4768 57A6  
                         l5752 3E56                           l5760 3E74                           l5744 3E18  
                         l5728 3DCA                           l5736 3DE8                           l5680 5716  
                         l5592 526E                           l5568 61AC                           l5576 608C  
                         l3888 4CA4                           l4792 3B5E                           l4784 3B2C  
                         l4776 3AC4                           l4696 401E                           l4688 3F86  
                         l4960 1468                           l4952 1400                           l4944 1376  
                         l4936 1272                           l4928 1240                           l4872 0F9C  
                         l4856 0F16                           l4848 0ED4                           l5672 44DE  
                         l5664 4498                           l5656 446A                           l5648 4432  
                         l5904 3A56                           l5840 381A                           l5832 3802  
                         l5824 37EC                           l5816 37D4                           l5808 37C4  
                         l5586 61E4                           l3994 23B6                           l3986 2368  
                         l3978 2358                           l5498 1F84                           l3898 46F0  
                         l5682 5846                           l5762 3E88                           l5754 3E5A  
                         l5738 3DFC                           l5674 56D2                           l5594 5270  
                         l5578 609A                           l4794 3B66                           l4786 3B3C  
                         l4778 3AD4                           l4970 1540                           l4962 149C  
                         l4954 1416                           l4938 1286                           l4946 137C  
                         l4890 1026                           l4874 0FA2                           l4858 0F1E  
                         l4866 0F60                           l5690 5A10                           l5666 44A8  
                         l5658 446C                           l5906 3A5A                           l5850 384A  
                         l5842 381E                           l5834 380A                           l5826 37F2  
                         l5818 37D8                           l3996 23C6                           l3988 236C  
                         l5684 585A                           l5780 3EEA                           l5764 3E9C  
                         l5772 3EBA                           l5756 3E5E                           l5748 3E2E  
                         l5676 56D8                           l5596 5272                           l5588 525A  
                         l4796 3B72                           l4788 3B42                           l4980 156A  
                         l4964 14F2                           l4972 1544                           l4956 1448  
                         l4948 139A                           l4892 102C                           l4876 0FAA  
                         l4868 0F86                           l4884 0FC6                           l5692 5A18  
                         l5668 44C0                           l5860 389C                           l5852 384C  
                         l5844 3826                           l5836 3812                           l5828 37F6  
                         l3998 23DC                           l5686 5872                           l5790 3F36  
                         l5774 3ECE                           l5766 3EA0                           l5678 570A  
                         l5598 5288                           l4798 3B7C                           l4990 1638  
                         l4982 1576                           l4974 1554                           l4966 14F8  
                         l4958 1458                           l4894 1060                           l4886 0FE0  
                         l5694 5A20                           l5870 38F4                           l5862 38B0  
                         l5854 3874                           l5846 382E                           l5838 3816  
                         l5792 3F4E                           l5776 3EE2                           l5784 3F00  
                         l5768 3EA4                           l4992 1648                           l4984 15EE  
                         l4976 155C                           l4968 152C                           l4896 109E  
                         l5696 5A3C                           l5688 59FE                           l5880 3946  
                         l5872 38F8                           l5864 38BC                           l5856 388E  
                         l5848 3836                           l5794 3F62                           l5786 3F14  
                         l5778 3EE6                           l4994 164C                           l4986 160E  
                         l4978 1562                           l4898 10D0                           l5890 39A4  
                         l5882 3952                           l5874 3910                           l5866 38DA  
                         l5858 3894                           l5796 3F66                           l5788 3F1A  
                         l4996 1652                           l4988 162A                           l5892 39AC  
                         l5884 3966                           l5876 3914                           l5868 38DE  
                         l5798 3F6E                           l4998 165A                           l5886 3982  
                         l5878 392C                           l5894 39B4                           l5896 39D2  
                         l5888 399C                           l5898 3A28                    GreenMove@mL 0020  
                  GreenMove@mR 0022                           STR_1 0E01                           STR_2 0E34  
                         STR_5 0E38                           u3000 4766                           u3001 4762  
                         u3010 2246                           u3011 2242                           u3100 239A  
                         u3020 2258                           u3101 2396                           u3021 2254  
                         u3110 23B2                           u3030 2268                           u3111 23AC  
                         u3031 2264                           u4000 2A04                           u3200 2496  
                         u3120 23B4                           u3040 22AA                   _BAUD4CONbits 000EE9  
                         u4001 2A00                           u3201 2492                           u3041 22A6  
                         u4010 2A1A                           u3210 24CE                           u3130 23DC  
                         u3050 22C0                           u4011 2A16                           u3211 24CA  
                         u3131 23D8                           u3051 22BC                           u4100 4A84  
                         u4020 2A2E                           u3300 25EA                           u3220 2514  
                         u3140 23FA                           u3060 22D2                           u4101 4A80  
                         u4021 2A2A                           u3301 25E6                           u3221 2510  
                         u3141 23F6                           u3061 22CE                           u4110 4AC2  
                         u4030 2A48                           u3310 2600                           u3230 254A  
                         u3150 241A                           u3070 22E2                           u4111 4ABE  
                         u4031 2A44                           u3311 25FC                           u3231 2546  
                         u3151 2416                           u3071 22DE                           u4120 4AE0  
                         u4040 2A90                           u3320 2614                           u3240 255A  
                         u3160 2428                           u3080 231E                           u5000 3510  
                         u3400 5EE2                           u4200 4A04                           u4121 4ADC  
                         u4041 2A8C                           u3321 2610                           u3241 2556  
                         u3161 2424                           u3081 231A                           u5001 350C  
                         u3401 5EDE                           u4201 4A00                           u4130 4B00  
                         u4050 2ABE                           u3330 262E                           u3250 2586  
                         u3170 2438                           u3090 232C                           u3410 5240  
                         u5010 356A                           u4210 4A24                           _T2PR 000FBC  
                         u4131 4AFC                           u4051 2ABA                           u3331 262A  
                         u3251 2582                           u3171 2434                           u3091 2328  
                         u3411 523C                           u5011 3566                           u4211 4A20  
                         u4140 4B50                           u4060 2AF8                           u3340 2668  
                         u3260 2596                           u3180 246A                           u5100 4214  
                         u3420 5258                           u3500 51BA                           u5020 35C0  
                         u4220 4A34                           u4141 4B4C                           u4061 2AF4  
                         u3341 2664                           u3261 2592                           u3181 2466  
                         u5101 4210                           u3421 5254                           u3501 51B6  
                         u5021 35BC                           u4221 4A30                           u4070 4F66  
                         u3350 267A                           u3270 25B2                           u3190 2478  
                         u5110 426A                           u3430 5346                           u3510 6086  
                         u5030 3616                           u4230 536E                           u4150 5FF8  
                         u4310 4C44                           u4071 4F62                           u3351 2676  
                         u3271 25AE                           u3191 2474                           u5111 4266  
                         u3431 5342                           u3511 6082                           u5031 3612  
                         u4231 536A                           u4151 5FF4                           u4311 4C3E  
                         u4080 4FA4                           u3360 268A                           u3280 25C2  
                         u5120 42B4                           u5200 1962                           u3440 535E  
                         u5040 366C                           u3520 450A                           u3600 4830  
                         u4240 53C4                           u4160 4966                           u4320 4C46  
                         u4400 40AE                           u4081 4FA0                           u3361 2686  
                         u3281 25BE                           u5121 42B0                           u5201 195E  
                         u3441 535A                           u5041 3668                           u3521 4506  
                         u3601 482C                           u4241 53C0                           u4161 4962  
                         u4305 4C1C                           u4090 4FD8                           u3370 26AA  
                         u3290 25D4                           u5130 42D2                           u5210 19F0  
                         u3450 5104                           u5050 36C2                           u3530 453C  
                         u3610 486E                           u4250 5F40                           u4170 499A  
                         u4410 40CA                           u4330 5E9E                           u4091 4FD4  
                         u3371 26A6                           u3291 25D0                           u5131 42CE  
                         u5211 19EC                           u3451 5100                           u5051 36BE  
                         u3531 4538                           u3611 486A                           u4251 5F3C  
                         u4411 40C6                           u4331 5E9A                           u3700 2BB8  
                         u3380 26BC                           u5140 42E2                           u5300 1E34  
                         u5220 1A44                           u3460 511C                           u5060 3718  
                         u3620 4898                           u4500 3AC2                           u4180 49C8  
                         u4260 4B9A                           u4420 411E                           u4340 55BE  
                         u3701 2BB4                           u3381 26B8                           u5141 42DE  
                         u5301 1E30                           u5221 1A40                           u3461 5118  
                         u5061 3714                           u3541 4566                           u3621 4894  
                         u4181 49C4                           u4405 40A4                           u4341 55BA  
                         u3710 2BF8                           u3390 26D8                           u5150 42F0  
                         u5310 1E72                           u5230 1A9A                           u3470 5066  
                         u5070 376E                           u3550 458A                           u3630 48C6  
                         u4510 3AD4                           u4190 49DC                           u4270 4BB8  
                         u4430 413A                           u4350 3FCE                           u3711 2BF4  
                         u3391 26D4                           u5151 42EC                           u5311 1E6E  
                         u5231 1A96                           u3471 5062                           u6007 5940  
                         u5071 376A                           u3551 4586                           u3631 48C2  
                         u4511 3AD0                           u4191 49D8                           u4175 4990  
                         u4271 4BB4                           u4431 4136                           u3800 2D84  
                         u3720 2C38                           u5160 432A                           u5080 41AA  
                         u5400 207C                           u5320 1EA4                           u5240 1ABA  
                         u2920 546E                           u3480 507E                           u3560 45B4  
                         u3640 490E                           u4520 3B10                           u4280 4BE0  
                         u4440 4176                           u4360 3FFC                           u4600 0EAC  
                         u3801 2D80                           u3721 2C34                           u5161 4326  
                         u5081 41A6                           u5401 2078                           u5321 1EA0  
                         u5241 1AB6                           u2921 546A                           u3481 507A  
                         u6017 5DB8                           u3561 45B0                           u3641 490A  
                         u4521 3B0C                           u4281 4BDC                           u4265 4B90  
                         u4441 4172                           u4425 4114                           u4361 3FF8  
                         u4601 0EA8                           u3810 2DB2                           u3730 2CAE  
                         u3650 2B30                           u5170 4338                           u5090 41B8  
                         u5410 20AE                           u5330 1EDE                           u5250 1B6A  
                         u2930 548C                           u3490 51A2                           u3570 45F4  
                         u4530 3B3C                           u4290 4C0A                           u4370 401E  
                         u4450 5C38                           u4610 0EBC                           u3811 2DAE  
                         u3731 2CAA                           u3651 2B2C                           u5171 4334  
                         u5091 41B4                           u5411 20AA                           u5331 1EDA  
                         u5251 1B66                           u2931 5488                           u6107 5998  
                         u3491 519E                           u6027 5040                           u3571 45F0  
                         u4531 3B38                           u4291 4C06                           u4371 401A  
                         u4355 3FC4                           u4451 5C34                           u4611 0EB8  
                         u3820 2DC8                           u3740 2CD0                           u3660 2B42  
                         u3900 2728                           u5420 20EC                           u5340 1F1C  
                         u5260 1BB4                           u2940 54A8                           u4460 60F2  
                         u3580 463E                           u4540 3B52                           u4700 119A  
                         u4620 0EFA                           u5180 59F2                           u5500 43F6  
                         u3821 2DC4                           u3741 2CCC                           u3661 2B3E  
                         u3901 2724                           u5421 20E8                           u5341 1F18  
                         u5261 1BB0                           u2941 54A4                           u4461 60EE  
                         u6117 5BAC                           u6037 5E06                           u3581 463A  
                         u4541 3B4E                           u4701 1196                           u4621 0EF6  
                         u5181 59EE                           u5501 43F2                           u3830 2DDC  
                         u3750 2CFA                           u3670 2B52                           u3910 2768  
                         u5430 212A                           u5350 1F46                           u5270 1D92  
                         u4470 6108                           u3590 47FE                           u2950 4C6A  
                         u4550 3C8E                           u4390 408A                           u4710 11D0  
                         u4630 0F0C                           u5510 4428                           u3831 2DD8  
                         u3751 2CF6                           u3671 2B4E                           u3911 2764  
                         u5431 2126                           u5351 1F42                           u5271 1D8E  
                         u5191 1868                           u6127 5864                           u4471 6104  
                         u6047 50DE                           u3591 47FA                           u2951 4C66  
                         u4551 3C8A                           u4391 4086                           u4711 11CC  
                         u4631 0F08                           u5511 4424                           u3840 2DF6  
                         u3760 2D1E                           u3680 2B96                           u3920 277A  
                         u5440 2174                           u5360 1F84                           u5280 1DC4  
                         u4480 6050                           u5600 3DB6                           u2960 4C7C  
                         u4560 3CAC                           u4800 14F2                           u4720 11E8  
                         u4640 0F86                           u5520 4460                           u3841 2DF2  
                         u3761 2D1A                           u3681 2B92                           u3921 2776  
                         u5441 2170                           u5361 1F80                           u5281 1DC0  
                         u6137 5890                           u6057 605C                           u4481 604C  
                         u5601 3DB2                           u2961 4C78                           u4561 3CA8  
                         u4385 4032                           u4801 14EE                           u4721 11E4  
                         u4641 0F82                           u5521 445C                           u3850 2E3E  
                         u3770 2D34                           u3690 2BA8                           u3930 278A  
                         u5450 21B2                           u5370 1FC2                           u5290 1E02  
                         u5610 3DFC                           u2970 4CA4                           u4570 3CC6  
                         u4490 3AC0                           u4386 403C                           u4810 1540  
                         u4730 121A                           u4650 0F98                           u5530 4498  
                         u3851 2E3A                           u3771 2D30                           u3691 2BA4  
                         u3931 2786                           u5451 21AE                           u5371 1FBE  
                         u5291 1DFE                           u6147 5320                           u6067 580A  
                         u5611 3DF8                           u2971 4CA0                           u4571 3CC2  
                         u4491 3ABA                           u4387 404C                           u4811 153C  
                         u4731 1216                           u4651 0F94                           u5531 4494  
                         u3860 2E6E                           u3780 2D52                           u3940 27C0  
                         u5460 21F0                           u5380 200C                           u5620 3E42  
                         u2980 4CDA                           u4580 3CD6                           u4900 17F8  
                         u4820 15EE                           u4740 1228                           u4660 1012  
                         u5540 44A6                           u5700 38DA                           u3861 2E6A  
                         u3781 2D4E                           u3941 27BC                           u5461 21EC  
                         u5381 2008                           u6157 521A                           u6077 5836  
                         u5621 3E3E                           u2981 4CD6                           u4581 3CD2  
                         u4901 17F4                           u4821 15EA                           u4741 1224  
                         u4661 100E                           u5541 44A2                           u5701 38D6  
                         u3870 2E9C                           u3790 2D72                           u3950 27D0  
                         u5470 2222                           u5390 203E                           u2990 469C  
                         u5630 3E88                           u4910 5F0E                           u4830 162A  
                         u4750 1252                           u4670 109E                           u4590 0E62  
                         u5550 44CE                           u5710 38F4                           u3871 2E98  
                         u3791 2D6E                           u3951 27CC                           u5471 221E  
                         u5391 203A                           u2991 4698                           u6087 517C  
                         u5631 3E84                           u4911 5F06                           u4831 1626  
                         u4751 124E                           u4671 109A                           u4591 0E5E  
                         u5551 44CA                           u5711 38F0                           u3960 294A  
                         u3880 2706                           u5640 3ECE                           u5480 60B6  
                         u4840 1638                           u4760 139A                           u4680 10D0  
                         u5560 44DC                           u5720 399C                           u3881 2702  
                         u6097 596E                           u5641 3ECA                           u5481 60B2  
                         u4841 1634                           u4761 1396                           u4681 10CC  
                         u5561 44D8                           u5721 3998                           u3970 29A4  
                         u3890 2718                           u4930 4F12                           u5650 3F14  
                         u5570 570A                           u4850 168C                           u4770 1400  
                         u4690 110E                           u5490 43E8                           u5730 39D2  
                         u3971 29A0                           u3891 2714                           u4931 4F0E  
                         u5651 3F10                           u5571 5706                           u4851 1688  
                         u4771 13FC                           u4691 110A                           u5491 43E4  
                         u5731 39CE                           u3980 29C4                           u4940 4F2A  
                         u5660 3F36                           u5580 3D20                           u4860 175E  
                         u4780 1448                           u5740 3A56                           u3981 29C0  
                         u3965 2940                           u4941 4F26                           u5661 3F32  
                         u5581 3D1C                           u4861 175A                           u4781 1444  
                         u5741 3A52                           u3990 29D6                           u5670 3F80  
                         u5590 3D70                           u4870 177A                           u4790 1458  
                         u4950 3206                           u5750 3A8C                           u3991 29D2  
                         u5671 3F7C                           u5591 3D6C                           u4871 1776  
                         u4791 1454                           u4951 3202                           u5751 3A88  
                         u4928 5F10                           u4880 17E2                           u4960 3256  
                         u4881 17DC                           u4961 3252                           u4890 17E4  
                         u4970 3276                           u5690 3874                           u4971 3272  
                         u5907 44B2                           u5691 3870                           u5827 3858  
                         u4980 338C                           u4981 3388                           u5917 44E8  
                         u5837 3880                           u4990 61C6                           u5927 4EEC  
                         u4991 61C2                           u5847 3938                           u5937 602C  
                         u5857 4358                           u5947 58BE                           u5867 43CC  
                         u5957 58E8                           u5877 4404                           u5967 57B0  
                         u5887 443E                           u5977 57DC                           u5897 4476  
                         u5987 557C                           u5997 5916                  _LightBlueMove 566C  
                         abs@a 0013                           _dbuf 02A0                           _labs 55A0  
                         _main 37C4                           _dtoa 3A90                           _prec 00E9  
                         _vals 016A                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         btemp 005F                           _stop 52E2                  ___fpclassifyf 4B5A  
                         prodh 000FF4                           prodl 000FF3                           start 0034  
              ___fldiv@new_exp 0043         __end_of_color_read_Red 5CDA                __end_of_HighISR 0034  
       __end_of_color_read_lum 5C8A                  _Backhalfblock 5792                   ___param_bank 000000  
              ReverseYellow@mL 0020                ReverseYellow@mR 0022                __end_of_RedMove 5FA4  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
                  _turnRight45 5D7A                _RunOneBlockTime 00F2               __end_of_LED_init 6130  
                ___fltol@sign1 0009                __end_of___aodiv 4680                          ?_labs 0001  
              __end_of___fladd 26EC                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 4950                __end_of___fldiv 2EB0                __end_of___flneg 601A  
              __end_of___flmul 2B16                __end_of___flsub 5E5C                __end_of___fltol 4A56  
                  colour_rel@B 0074                    colour_rel@G 0070                          ?_stop 0014  
                  colour_rel@L 0060                    colour_rel@R 006C                __end_of___lwdiv 54C8  
                        i2l227 0030                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3                __end_of_go_Home 37C4        __end_of_sendCharSerial4 61CC  
   __end_of_I2C_2_Master_Start 620E     __end_of_I2C_2_Master_Write 61D8                   YellowMove@mL 0020  
                        _flags 00ED                   YellowMove@mR 0022                          _fputc 4C58  
                        _fputs 5EA0                 delayed_ms@time 0001                          labs@a 0001  
                        pad@fp 0011                          _power 00F6                          _width 00E7  
                        _putch 6218                          dtoa@d 001E                          dtoa@i 003C  
                        dtoa@n 0034                          dtoa@p 0030                          dtoa@s 003E  
                        dtoa@w 0032                 ?_LightBlueMove 0020                          tablat 000FF5  
                ?_Buttons_init 0001                          plusw2 000FDB               ??_Colour_decider 004F  
                        ttemp5 0060                          ttemp6 0063                          ttemp7 0067  
                        status 000FD8                          wtemp8 0060                __end_of_sprintf 5A50  
               ?___fpclassifyf 0001         ??_ReverseLightBlueMove 0024        __end_of_color_read_Blue 5D7A  
        _I2C_2_Master_RepStart 61F0               __end_of_BlueMove 5454                 ?_Backhalfblock 001A  
                   PinkMove@mL 0020                     PinkMove@mR 0022                ?_color_read_Red 0005  
              ?_color_read_lum 0005                __initialization 54C8        __end_of_turnCalibration 44F8  
              _reverseOneBlock 58F8                   __end_of_labs 5606                   __end_of_main 3A90  
                 __end_of_dtoa 3D0E                   __end_of_stop 5360                ??_quaterForward 001E  
              _colour_rel$3280 0068                _colour_rel$3279 0064                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026          __end_of_ReverseYellow 4DD8  
             __end_of_PinkMove 5B98                         ??_stop 0018                  __activetblptr 000003  
            Colour_decider@Hue 007C              Colour_decider@rel 004D                   ?_setMotorPWM 000E  
                       ?_fputc 0001                         ?_fputs 000A                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RC7PPS 000E69                         _RD5PPS 000E6F  
                       _RE4PPS 000E76                         _RD6PPS 000E70                 ??_Buttons_init 0001  
                       _RG6PPS 000E88                         i2l5802 000A                         i2l5804 001A  
                       i2l5806 002C                      ??_HighISR 0001       __end_of_color_click_init 5BEA  
                       _RX4PPS 000E15                         _TX4REG 000EE4                     _OrangeMove 5606  
             __end_of___xxtofl 434C                      ??_RedMove 0024                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                  ??_ReversePink 0024  
                       ___flge 4A56                         ___fleq 4F38                      ??___aodiv 0011  
                    ??___fladd 0009                      ??___aomod 0011                         ___wmul 6130  
            ForwardOneBlock@mL 001A              ForwardOneBlock@mR 001C                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 0E3E                      ??___lwdiv 000B  
                       _floorf 3F86                         _memcpy 5BEA                         clear_0 550E  
                       clear_1 551A                         clear_2 5526                         _motorL 0161  
                       _motorR 0158                         isa$std 000001                      ??_go_Home 0028  
                       pad@buf 0013                         dtoa@fp 001C                         _strcpy 5E5C  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                ___fpclassifyf@e 0009                ___fpclassifyf@u 000B  
              ___fpclassifyf@x 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8               ?_sendCharSerial4 0001  
           Forwardhalfblock@mL 001A             Forwardhalfblock@mR 001C                         putch@c 0001  
              ??_LightBlueMove 0024               __end_of_vfprintf 59FE                         stop@mL 0014  
                       stop@mR 0016              ??_initDCmotorsPWM 0003                      ??_sprintf 005F  
             __end_of_turnLeft 511E                     ___flge@ff1 002A                     _YellowMove 5AF4  
                   ___flge@ff2 002E                ??___fpclassifyf 0005                   ___xxtofl@arg 000B  
                 ___xxtofl@exp 000A                   ___xxtofl@val 0001                     ___fleq@ff1 0032  
                   ___fleq@ff2 0036                fullSpeedBack@mL 0014                fullSpeedBack@mR 0016  
                   __accesstop 0060        __end_of__initialization 552C        __end_of_reverseOneBlock 5950  
                   ___flneg@f1 0001       __end_of_color_read_Green 5D2A         ?_I2C_2_Master_RepStart 0001  
              ??_Backhalfblock 001E                  ___rparam_used 000001                      ?_LED_init 0001  
                   ___fltol@f1 0001               ?_color_read_Blue 0005                _Interrupts_init 61D8  
               __pcstackCOMRAM 0001               ?_turnCalibration 0020                  _fullSpeedBack 511E  
                 __pidataBANK0 620E                   __pidataBANK1 6214                  __end_of_fputc 4D22  
                __end_of_fputs 5EE4                  __end_of_putch 621A              __end_of_GreenMove 5FE2  
          __end_of_Timer0_init 6196            __end_of_ReversePink 4E8E                      ?_BlueMove 0020  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14379 00D3  
        __end_of_reverseDetect 5846                        ??_putch 0001                     __pbssBANK0 00D3  
                   __pbssBANK1 0100                     __pbssBANK2 0200                reverseDetect@mL 001A  
              reverseDetect@mR 001C                    ?_OrangeMove 0020               _Forwardhalfblock 5846  
                   ??_LED_init 0001                     _getTMR0val 56D2              __end_of_RetryMove 55A0  
                    ?_PinkMove 0020              _color_writetoaddr 6156                     _delayed_ms 601A  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
               ?_fullSpeedBack 0014           Colour_decider@Cmax_i 0064                        ?___flge 002A  
                      ?___fleq 0032             ?_color_writetoaddr 0003                        ?___wmul 0001  
           Colour_decider@vals 004B                        ?_efgtoa 0060                        ?_floorf 004B  
                 ?_turnRight45 001A                        ?_memcpy 0001           __end_of_Buttons_init 61F0  
            __end_of_TurnDelay 6088          __end_of_timed_forward 4F38            ??_color_writetoaddr 0004  
                      ?_strcpy 0001                  colour_rel@rel 004D                 go_Home@WayBack 0024  
                    ?___xxtofl 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
            ??_ForwardOneBlock 001E                     ??_BlueMove 0024                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                    ?_YellowMove 0020                     _colour_rel 2EB0  
      __end_of_Interrupts_init 61E4         color_writetoaddr@value 0003               ??_color_read_Red 0007  
                      _HighISR 0008               ??_color_read_lum 0007               ?_reverseOneBlock 001A  
    __end_of_color_writetoaddr 6176                        _RedMove 5F66             _I2C_2_Master_Start 6204  
                   ??_PinkMove 0024                     _initUSART4 6196             _I2C_2_Master_Write 61CC  
                      __Hparam 0000                        _WayBack 011A                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 6176                    RetryMove@mL 0020  
                  RetryMove@mR 0022        sendStringSerial4@string 0002              reverseOneBlock@mL 001A  
            reverseOneBlock@mR 001C                    _ReversePink 4DD8                        ___aodiv 44F8  
                      ___fladd 222C                        ___aomod 47EC                        ___fldiv 2B16  
                      ___flneg 5FE2                        ___flmul 26EC                        ___flsub 5E16  
                      ___fltol 4950            ?_I2C_2_Master_Start 0001                        ___lwdiv 5454  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8                   __psmallconst 0E00  
                 turnLeft45@mL 001A                   turnLeft45@mR 001C                        __pcinit 54C8  
                      __ramtop 0E00                      ?_turnLeft 0014                        _go_Home 34E4  
                      __ptext0 37C4                        __ptext1 434C                        __ptext2 59FE  
                      __ptext3 59A8                        __ptext4 31DE                        __ptext5 0E3E  
                      __ptext6 5E5C                        __ptext7 5BEA                        __ptext8 55A0  
                      __ptext9 3F86                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F1              color_read_lum@tmp 000A                        main@buf 0172  
                      _sprintf 59FE           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 552C                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
              LightBlueMove@mL 0020                LightBlueMove@mR 0022                ??_fullSpeedBack 0018  
           ??_color_click_init 0005                     _move_count 01DA                    ?_delayed_ms 0001  
            turnCalibration@mL 0020              turnCalibration@mR 0022                     _lost_count 00EB  
            __end_of_vfpfcnvrt 34E4                     efgtoa@mode 0072                     efgtoa@sign 008A  
                      postdec1 000FE5                        postdec2 000FDD                    _Turn45Delay 00F4  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 009D                     ??_vfprintf 005F                        strcpy@d 0007  
                      strcpy@s 0005                _initDCmotorsPWM 525A                     ??_turnLeft 0018  
                    _PORTFbits 000F8E             setMotorPWM@negDuty 0013          __end_of_quaterForward 59A8  
            __end_of_turnRight 5080                    ___fladd@grs 0010                  ___xxtofl@sign 0009  
                    _TRISAbits 000F81             setMotorPWM@posDuty 0012                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87                      _TRISHbits 000F88                    ___fldiv@grs 0045  
                  ___fldiv@rem 003E               fullSpeedAhead@mL 0014               fullSpeedAhead@mR 0016  
                ReversePink@mL 0020                  ReversePink@mR 0022       color_writetoaddr@address 0004  
      ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B               ?_Interrupts_init 0001  
                  ___flmul@grs 001E                   _consecuitive 0116                    _CCP1CONbits 000FAB  
                   main@colour 01D6                   _EUSART4RXbuf 0100                   _EUSART4TXbuf 0200  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
                    RedMove@mL 0020                      RedMove@mR 0022             ??_color_read_Green 0007  
                   _turnLeft45 5DC8                 __end_of___flge 4B5A                 __end_of___fleq 4FE2  
               _fullSpeedAhead 51BC                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 6156                 __end_of_efgtoa 1838  
               __end_of_floorf 4198                 __end_of_memcpy 5C3A                     floorf@F526 00DF  
     __end_of_Forwardhalfblock 58A0                  ??_colour_move 002F                      _GreenMove 5FA4  
               __end_of_strcpy 5EA0            start_initialization 54C8                    __end_of_abs 5F66  
                  __end_of_pad 53DA                  _TxBufWriteCnt 00EF          __end_of_LightBlueMove 56D2  
                 ??_OrangeMove 0024                   _Buttons_init 61E4          __end_of___fpclassifyf 4C58  
          color_read_Green@tmp 000A   colour_move@recognized_colour 002D          __end_of_Backhalfblock 57EC  
      __end_of_initDCmotorsPWM 52E2                    vfprintf@fmt 00AA         __end_of_fullSpeedAhead 525A  
                     ??___flge 0032                       ??___fleq 003A                      _RetryMove 5536  
                     ??___wmul 0005            go_Home@Time_forward 0026                  ??_readColours 000E  
                     ??_efgtoa 0067                    __pdataBANK0 00F2                    __pdataBANK1 01D8  
              _ForwardOneBlock 58A0                       ??_floorf 004F                       ??_memcpy 0007  
              Backhalfblock@mL 001A                Backhalfblock@mR 001C                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                  _ReverseYellow 4D22  
                    ___fldiv@a 0036                      ___fldiv@b 0032                     ?_GreenMove 0020  
                 OrangeMove@mL 0020                   OrangeMove@mR 0022             __end_of_OrangeMove 566C  
                    ___flmul@a 0015                      ___flmul@b 0011                      ___flsub@a 002E  
                    ___flsub@b 002A                      _TurnDelay 6052                  __pcstackBANK0 0060  
                __pcstackBANK1 0172               ___aodiv@dividend 0001            __end_of_colour_move 3F86  
                 ??_YellowMove 0024                       ?_HighISR 0001          Colour_decider@RGB_col 0066  
                     ?_RedMove 0020                    _efgtoa$2902 006F            ReverseOrangeMove@mL 0020  
          ReverseOrangeMove@mR 0022               ___lwdiv@dividend 0007                      _dtoa$2871 002E  
                 ?_Timer0_init 0001                    ?_turnLeft45 001A                ?_fullSpeedAhead 0014  
                    __pintcode 0008                   ?_ReversePink 0020                     ?_RetryMove 0020  
              timed_forward@mL 0014                       ?___aodiv 0001                timed_forward@mR 0016  
                     ?___fladd 0001                       ?___aomod 0001                       ?___fldiv 0032  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___flmul 0011  
                     ?___flsub 002A                       ?___fltol 0001            _Colour_decider$3281 0060  
                     ?___lwdiv 0007                       ?_go_Home 0024           I2C_2_Master_Read@ack 0003  
               ?_ReverseYellow 0020             __end_of_YellowMove 5B46           I2C_2_Master_Read@tmp 0004  
                  __smallconst 0E00              timed_forward@time 0018            __end_of_readColours 5792  
            _I2C_2_Master_Idle 60E2              _I2C_2_Master_Init 60B8              _I2C_2_Master_Read 5EE4  
            _I2C_2_Master_Stop 61FA                     ?_TurnDelay 0001                   _RxBufReadCnt 00F0  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
                ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001               ___lwdiv@quotient 000B  
     initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0               getTMR0val@moving 0005  
               colour_rel@vals 004B              _sendStringSerial4 6088            ??_I2C_2_Master_Idle 0001  
          ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002                 ___wmul@product 0005  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _LATHbits 000F80  
                 ??_getTMR0val 0001                       _PIE0bits 000E29                       _LED_init 610A  
           ?_sendStringSerial4 0002        __end_of_ForwardOneBlock 58F8                   ??_delayed_ms 0003  
                  turnRight@mL 0014                    turnRight@mR 0016                      _lost_flag 0114  
                     _PIR0bits 000E33                       _PIR4bits 000E37                       i2u568_40 001A  
                     i2u568_41 0016               ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001  
                     _SSP2CON2 000EDA                 _Colour_decider 1838            ??_sendStringSerial4 0004  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 31DE      __end_of_I2C_2_Master_Idle 610A  
    __end_of_I2C_2_Master_Init 60E2      __end_of_I2C_2_Master_Read 5F26              ___wmul@multiplier 0001  
       ReverseLightBlueMove@mL 0020         ReverseLightBlueMove@mR 0022      __end_of_I2C_2_Master_Stop 6204  
                 setMotorPWM@m 000E    I2C_2_Master_Write@data_byte 0002                    ??_GreenMove 0024  
                  _colour_move 3D0E   __end_of_ReverseLightBlueMove 5AF4              ??_color_read_Blue 0007  
           __end_of_getTMR0val 5734                   _TxBufReadCnt 00EE                       _BlueMove 53DA  
                    _turnRight 4FE2             __end_of_delayed_ms 6052                quaterForward@mL 001A  
              quaterForward@mR 001C                     vfpfcnvrt@c 00A5              ??_turnCalibration 0024  
                    copy_data0 54DC                      copy_data1 54FC      __end_of_sendStringSerial4 60B8  
                 ??_colour_rel 004F                  _reverseDetect 57EC  __end_of_I2C_2_Master_RepStart 61FA  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 47EC                   ??_initUSART4 0001  
                     _PinkMove 5B46                       __Hrparam 0000         __end_of_Colour_decider 222C  
                    memcpy@tmp 000B                     vfprintf@ap 00AC                       __Lrparam 0000  
                   vfprintf@fp 00A8          __end_of_fullSpeedBack 51BC                    ??_RetryMove 0024  
         TurnDelay@Turn45Delay 0001                    _readColours 5734                ??_ReverseYellow 0024  
                   ?_vfpfcnvrt 0095                ___aodiv@divisor 0009                ___aodiv@counter 0011  
           __end_of_colour_rel 31DE                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00E3  
                   _ANSELFbits 000EB4                  _timed_forward 4E8E                     sprintf@fmt 00B2  
            ?_Forwardhalfblock 001A                       ___xxtofl 4198                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 023C  
              ___lwdiv@divisor 0009             __end_of_initUSART4 61B4                ___lwdiv@counter 000D  
           ??_Forwardhalfblock 001E                     ?_turnRight 0014                       __ptext10 4B5A  
                     __ptext11 4950                       __ptext20 44F8                       __ptext12 5FE2  
                     __ptext21 6088                       __ptext13 3A90                       __ptext30 6196  
                     __ptext22 61B4                       __ptext14 5360                       __ptext31 525A  
                     __ptext23 5734                       __ptext15 5EA0                       __ptext40 58A0  
                     __ptext32 56D2                       __ptext24 5C3A                       __ptext16 4C58  
                     __ptext41 5A50                       __ptext33 2EB0                       __ptext25 5C8A  
                     __ptext17 6218                       __ptext50 58F8                       __ptext42 5AA2  
                     __ptext34 3D0E                       __ptext26 5CDA                       __ptext18 5F26  
                     __ptext51 5606                       __ptext43 5F66                       __ptext35 34E4  
                     __ptext27 5D2A                       __ptext19 47EC                       __ptext60 5950  
                     __ptext52 5D7A                       __ptext44 5FA4                       __ptext36 4E8E  
                     __ptext28 61F0                       __ptext61 5B98                       __ptext53 4FE2  
                     __ptext45 53DA                       __ptext37 601A                       __ptext29 5EE4  
                     __ptext70 61D8                       __ptext62 6156                       __ptext54 566C  
                     __ptext46 5792                       __ptext38 4D22                       __ptext71 5846  
                     __ptext63 61CC                       __ptext55 5DC8                       __ptext47 5AF4  
                     __ptext39 4DD8                       __ptext80 222C                       __ptext72 52E2  
                     __ptext64 61FA                       __ptext56 5080                       __ptext48 5536  
                     __ptext81 26EC                       __ptext73 51BC                       __ptext65 6204  
                     __ptext57 6052                       __ptext49 5B46                       __ptext82 4A56  
                     __ptext74 4680                       __ptext66 60E2                       __ptext58 57EC  
                     __ptext83 4F38                       __ptext75 6130                       __ptext67 60B8  
                     __ptext59 511E                       __ptext84 2B16                       __ptext76 5454  
                     __ptext68 6176                       __ptext85 61E4                       __ptext77 1838  
                     __ptext69 610A                       __ptext78 4198                       __ptext79 5E16  
               ?_reverseDetect 001A                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0001                     turnLeft@mL 0014                     turnLeft@mR 0016  
             ?_ForwardOneBlock 001A                       go_Home@i 002B                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     int$flags 005F                       _vfprintf 59A8                       _run_flag 01D8  
                ??_turnRight45 001E                       _turnLeft 5080               ___aomod@dividend 0001  
               ?_timed_forward 0014                    delayed_ms@i 0004              ??_reverseOneBlock 001E  
                   _INTCONbits 000FF2                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 4680                  turnRight45@mL 001A                  turnRight45@mR 001C  
                     intlevel2 0000                      sprintf@ap 00C4               ??_fullSpeedAhead 0018  
            _ReverseOrangeMove 5A50                      strcpy@src 0003                 getTMR0val@temp 0003  
           ?_ReverseOrangeMove 0020                   ??_turnLeft45 001E           _ReverseLightBlueMove 5AA2  
                   BlueMove@mL 0020                     BlueMove@mR 0022                    efgtoa@nmode 0073  
              ___aomod@divisor 0009            ??_ReverseOrangeMove 0024                    ??_vfpfcnvrt 009B  
              ___aomod@counter 0011               _color_click_init 5B98                       sprintf@f 00C6  
                     sprintf@s 00B0                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                _quaterForward 5950            __end_of_turnRight45 5DC8                    _prev_colour 0118  
              ??_reverseDetect 001E                    ??_turnRight 0018                  ___fladd@signs 000D  
           __end_of_turnLeft45 5E16                     _TX4STAbits 000EE8                   ___aodiv@sign 0012  
    __end_of_ReverseOrangeMove 5AA2                _sendCharSerial4 61B4                   ___fladd@aexp 000E  
                 ___fladd@bexp 000F                   ___aomod@sign 0012          ?_ReverseLightBlueMove 0020  
