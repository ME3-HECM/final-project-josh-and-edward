

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 17:03:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    75                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78   000000                     
    79                           ; Generated 06/04/2022 GMT
    80                           ; 
    81                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution. Publication is not required when
    95                           ;        this file is used in an embedded application.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F67K40 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113   000000                     
   114                           	psect	idataBANK0
   115   004D64                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for _RunOneBlockTime
   119   004D64  07D0               	dw	2000
   120                           
   121                           ;initializer for _Turn45Delay
   122   004D66  00DC               	dw	220
   123                           
   124                           ;initializer for _power
   125   004D68  001E               	dw	30
   126                           
   127                           ;initializer for _DataFlag
   128   004D6A  01                 	db	1
   129   000000                     _TRISEbits	set	3973
   130   000000                     _LATHbits	set	3968
   131   000000                     _TX4REG	set	3812
   132   000000                     _RC4STAbits	set	3815
   133   000000                     _SP4BRGH	set	3814
   134   000000                     _SSP2CON2bits	set	3802
   135   000000                     _RX4PPS	set	3605
   136   000000                     _SSP2CLKPPS	set	3612
   137   000000                     _SSP2DATPPS	set	3613
   138   000000                     _ANSELDbits	set	3751
   139   000000                     _SSP2ADD	set	3798
   140   000000                     _SSP2CON1bits	set	3801
   141   000000                     _LATAbits	set	3961
   142   000000                     _LATFbits	set	3966
   143   000000                     _LATGbits	set	3967
   144   000000                     _TRISAbits	set	3969
   145   000000                     _TRISGbits	set	3975
   146   000000                     _PORTFbits	set	3982
   147   000000                     _TRISHbits	set	3976
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _TRISCbits	set	3971
   151   000000                     _TRISDbits	set	3972
   152   000000                     _TRISFbits	set	3974
   153   000000                     _LATDbits	set	3964
   154   000000                     _RC4REG	set	3811
   155   000000                     _SP4BRGL	set	3813
   156   000000                     _TX4STAbits	set	3816
   157   000000                     _BAUD4CONbits	set	3817
   158   000000                     _SSP2CON2	set	3802
   159   000000                     _SSP2STAT	set	3800
   160   000000                     _ANSELFbits	set	3764
   161   000000                     _SSP2BUF	set	3797
   162   000000                     _PIE4bits	set	3629
   163   000000                     _PIR4bits	set	3639
   164   000000                     _RC0PPS	set	3682
   165   000000                     _RD5PPS	set	3695
   166   000000                     _RE2PPS	set	3700
   167   000000                     _RD6PPS	set	3696
   168   000000                     _RC7PPS	set	3689
   169   000000                     _CCPR4H	set	3873
   170   000000                     _CCPR3H	set	3877
   171   000000                     _CCP1CONbits	set	4011
   172   000000                     _CCPTMRS0bits	set	4013
   173   000000                     _T2PR	set	4028
   174   000000                     _T2CONbits	set	4029
   175   000000                     _T0CON0bits	set	4053
   176   000000                     _CCP2CONbits	set	4007
   177   000000                     _CCP3CONbits	set	3878
   178   000000                     _CCP4CONbits	set	3874
   179   000000                     _T0CON1bits	set	4054
   180   000000                     _RE4PPS	set	3702
   181   000000                     _RG6PPS	set	3720
   182   000000                     _TMR0L	set	4051
   183   000000                     _TMR0H	set	4052
   184   000000                     _T2CLKCONbits	set	4031
   185   000000                     _T2HLTbits	set	4030
   186                           
   187                           	psect	smallconst
   188   000E00                     __psmallconst:
   189                           	callstack 0
   190   000E00  00                 	db	0
   191   000E01                     STR_1:
   192   000E01  72                 	db	114	;'r'
   193   000E02  65                 	db	101	;'e'
   194   000E03  64                 	db	100	;'d'
   195   000E04  3D                 	db	61	;'='
   196   000E05  25                 	db	37
   197   000E06  66                 	db	102	;'f'
   198   000E07  20                 	db	32
   199   000E08  67                 	db	103	;'g'
   200   000E09  72                 	db	114	;'r'
   201   000E0A  65                 	db	101	;'e'
   202   000E0B  65                 	db	101	;'e'
   203   000E0C  6E                 	db	110	;'n'
   204   000E0D  3D                 	db	61	;'='
   205   000E0E  25                 	db	37
   206   000E0F  66                 	db	102	;'f'
   207   000E10  20                 	db	32
   208   000E11  62                 	db	98	;'b'
   209   000E12  6C                 	db	108	;'l'
   210   000E13  75                 	db	117	;'u'
   211   000E14  65                 	db	101	;'e'
   212   000E15  3D                 	db	61	;'='
   213   000E16  25                 	db	37
   214   000E17  66                 	db	102	;'f'
   215   000E18  20                 	db	32
   216   000E19  6C                 	db	108	;'l'
   217   000E1A  75                 	db	117	;'u'
   218   000E1B  6D                 	db	109	;'m'
   219   000E1C  3D                 	db	61	;'='
   220   000E1D  25                 	db	37
   221   000E1E  64                 	db	100	;'d'
   222   000E1F  20                 	db	32
   223   000E20  63                 	db	99	;'c'
   224   000E21  6F                 	db	111	;'o'
   225   000E22  6C                 	db	108	;'l'
   226   000E23  6F                 	db	111	;'o'
   227   000E24  75                 	db	117	;'u'
   228   000E25  72                 	db	114	;'r'
   229   000E26  3D                 	db	61	;'='
   230   000E27  25                 	db	37
   231   000E28  64                 	db	100	;'d'
   232   000E29  20                 	db	32
   233   000E2A  0D                 	db	13
   234   000E2B  0A                 	db	10
   235   000E2C  00                 	db	0
   236   000E2D                     STR_2:
   237   000E2D  72                 	db	114	;'r'
   238   000E2E  65                 	db	101	;'e'
   239   000E2F  64                 	db	100	;'d'
   240   000E30  3D                 	db	61	;'='
   241   000E31  25                 	db	37
   242   000E32  66                 	db	102	;'f'
   243   000E33  20                 	db	32
   244   000E34  67                 	db	103	;'g'
   245   000E35  72                 	db	114	;'r'
   246   000E36  65                 	db	101	;'e'
   247   000E37  65                 	db	101	;'e'
   248   000E38  6E                 	db	110	;'n'
   249   000E39  3D                 	db	61	;'='
   250   000E3A  25                 	db	37
   251   000E3B  66                 	db	102	;'f'
   252   000E3C  20                 	db	32
   253   000E3D  62                 	db	98	;'b'
   254   000E3E  6C                 	db	108	;'l'
   255   000E3F  75                 	db	117	;'u'
   256   000E40  65                 	db	101	;'e'
   257   000E41  3D                 	db	61	;'='
   258   000E42  25                 	db	37
   259   000E43  66                 	db	102	;'f'
   260   000E44  20                 	db	32
   261   000E45  6C                 	db	108	;'l'
   262   000E46  75                 	db	117	;'u'
   263   000E47  6D                 	db	109	;'m'
   264   000E48  3D                 	db	61	;'='
   265   000E49  25                 	db	37
   266   000E4A  64                 	db	100	;'d'
   267   000E4B  20                 	db	32
   268   000E4C  20                 	db	32
   269   000E4D  0D                 	db	13
   270   000E4E  0A                 	db	10
   271   000E4F  00                 	db	0
   272   000E50                     STR_3:
   273   000E50  69                 	db	105	;'i'
   274   000E51  6E                 	db	110	;'n'
   275   000E52  66                 	db	102	;'f'
   276   000E53  00                 	db	0
   277   000E54                     STR_6:
   278   000E54  6E                 	db	110	;'n'
   279   000E55  61                 	db	97	;'a'
   280   000E56  6E                 	db	110	;'n'
   281   000E57  00                 	db	0
   282   000E58  00                 	db	0	; dummy byte at the end
   283   000000                     
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287   0049EC                     __pcinit:
   288                           	callstack 0
   289   0049EC                     start_initialization:
   290                           	callstack 0
   291   0049EC                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to BANK0 (7 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296   0049EC  0E64               	movlw	low __pidataBANK0
   297   0049EE  6EF6               	movwf	tblptrl,c
   298   0049F0  0E4D               	movlw	high __pidataBANK0
   299   0049F2  6EF7               	movwf	tblptrh,c
   300   0049F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301   0049F6  6EF8               	movwf	tblptru,c
   302   0049F8  EE00  F0F9         	lfsr	0,__pdataBANK0
   303   0049FC  EE10 F007          	lfsr	1,7
   304   004A00                     copy_data0:
   305   004A00  0009               	tblrd		*+
   306   004A02  CFF5 FFEE          	movff	tablat,postinc0
   307   004A06  50E5               	movf	postdec1,w,c
   308   004A08  50E1               	movf	fsr1l,w,c
   309   004A0A  E1FA               	bnz	copy_data0
   310                           
   311                           ; Clear objects allocated to BANK2 (210 bytes)
   312   004A0C  EE02  F000         	lfsr	0,__pbssBANK2
   313   004A10  0ED2               	movlw	210
   314   004A12                     clear_0:
   315   004A12  6AEE               	clrf	postinc0,c
   316   004A14  06E8               	decf	wreg,f,c
   317   004A16  E1FD               	bnz	clear_0
   318                           
   319                           ; Clear objects allocated to BANK1 (134 bytes)
   320   004A18  EE01  F000         	lfsr	0,__pbssBANK1
   321   004A1C  0E86               	movlw	134
   322   004A1E                     clear_1:
   323   004A1E  6AEE               	clrf	postinc0,c
   324   004A20  06E8               	decf	wreg,f,c
   325   004A22  E1FD               	bnz	clear_1
   326                           
   327                           ; Clear objects allocated to BANK0 (38 bytes)
   328   004A24  EE00  F0D3         	lfsr	0,__pbssBANK0
   329   004A28  0E26               	movlw	38
   330   004A2A                     clear_2:
   331   004A2A  6AEE               	clrf	postinc0,c
   332   004A2C  06E8               	decf	wreg,f,c
   333   004A2E  E1FD               	bnz	clear_2
   334                           
   335                           ; Clear objects allocated to COMRAM (1 bytes)
   336   004A30  6A5F               	clrf	__pbssCOMRAM& (0+255),c
   337   004A32                     end_of_initialization:
   338                           	callstack 0
   339   004A32                     __end_of__initialization:
   340                           	callstack 0
   341   004A32  0100               	movlb	0
   342   004A34  EF68  F019         	goto	_main	;jump to C main() function
   343                           
   344                           	psect	bssCOMRAM
   345   00005F                     __pbssCOMRAM:
   346                           	callstack 0
   347   00005F                     _TxBufWriteCnt:
   348                           	callstack 0
   349   00005F                     	ds	1
   350                           
   351                           	psect	bssBANK0
   352   0000D3                     __pbssBANK0:
   353                           	callstack 0
   354   0000D3                     _EUSART4RXbuf:
   355                           	callstack 0
   356   0000D3                     	ds	20
   357   0000E7                     floorf@F526:
   358                           	callstack 0
   359   0000E7                     	ds	4
   360   0000EB                     ___fpclassifyf@F465:
   361                           	callstack 0
   362   0000EB                     	ds	4
   363   0000EF                     _width:
   364                           	callstack 0
   365   0000EF                     	ds	2
   366   0000F1                     _prec:
   367                           	callstack 0
   368   0000F1                     	ds	2
   369   0000F3                     _lost_flag:
   370                           	callstack 0
   371   0000F3                     	ds	2
   372   0000F5                     _flags:
   373                           	callstack 0
   374   0000F5                     	ds	1
   375   0000F6                     _TxBufReadCnt:
   376                           	callstack 0
   377   0000F6                     	ds	1
   378   0000F7                     _RxBufReadCnt:
   379                           	callstack 0
   380   0000F7                     	ds	1
   381   0000F8                     _RxBufWriteCnt:
   382                           	callstack 0
   383   0000F8                     	ds	1
   384                           
   385                           	psect	dataBANK0
   386   0000F9                     __pdataBANK0:
   387                           	callstack 0
   388   0000F9                     _RunOneBlockTime:
   389                           	callstack 0
   390   0000F9                     	ds	2
   391   0000FB                     _Turn45Delay:
   392                           	callstack 0
   393   0000FB                     	ds	2
   394   0000FD                     _power:
   395                           	callstack 0
   396   0000FD                     	ds	2
   397   0000FF                     _DataFlag:
   398                           	callstack 0
   399   0000FF                     	ds	1
   400                           
   401                           	psect	bssBANK1
   402   000100                     __pbssBANK1:
   403                           	callstack 0
   404   000100                     	ds	12
   405   00010C                     _move_count:
   406                           	callstack 0
   407   00010C                     	ds	2
   408   00010E                     _run_flag:
   409                           	callstack 0
   410   00010E                     	ds	2
   411   000110                     _dbuf:
   412                           	callstack 0
   413   000110                     	ds	80
   414   000160                     _rel:
   415                           	callstack 0
   416   000160                     	ds	12
   417   00016C                     _motorR:
   418                           	callstack 0
   419   00016C                     	ds	9
   420   000175                     _motorL:
   421                           	callstack 0
   422   000175                     	ds	9
   423   00017E                     _vals:
   424                           	callstack 0
   425   00017E                     	ds	8
   426                           
   427                           	psect	bssBANK2
   428   000200                     __pbssBANK2:
   429                           	callstack 0
   430   000200                     _Time_forward:
   431                           	callstack 0
   432   000200                     	ds	100
   433   000264                     _EUSART4TXbuf:
   434                           	callstack 0
   435   000264                     	ds	60
   436   0002A0                     _WayBack:
   437                           	callstack 0
   438   0002A0                     	ds	50
   439                           
   440                           	psect	cstackBANK1
   441   000186                     __pcstackBANK1:
   442                           	callstack 0
   443   000186                     main@buf:
   444                           	callstack 0
   445                           
   446                           ; 100 bytes @ 0x0
   447   000186                     	ds	100
   448   0001EA                     main@colour:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x64
   452   0001EA                     	ds	2
   453                           
   454                           	psect	cstackBANK0
   455   000060                     __pcstackBANK0:
   456                           	callstack 0
   457   000060                     efgtoa@fp:
   458                           	callstack 0
   459   000060                     colour_rel@L:
   460                           	callstack 0
   461   000060                     _Colour_decider$3126:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x0
   465   000060                     	ds	2
   466   000062                     efgtoa@f:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x2
   470   000062                     	ds	2
   471   000064                     Colour_decider@Cmax_i:
   472                           	callstack 0
   473   000064                     _colour_rel$3124:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x4
   477   000064                     	ds	2
   478   000066                     efgtoa@c:
   479                           	callstack 0
   480   000066                     Colour_decider@RGB_col:
   481                           	callstack 0
   482                           
   483                           ; 12 bytes @ 0x6
   484   000066                     	ds	1
   485   000067                     ??_efgtoa:
   486                           
   487                           ; 1 bytes @ 0x7
   488   000067                     	ds	1
   489   000068                     _colour_rel$3125:
   490                           	callstack 0
   491                           
   492                           ; 4 bytes @ 0x8
   493   000068                     	ds	1
   494   000069                     efgtoa@ne:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x9
   498   000069                     	ds	2
   499   00006B                     efgtoa@p:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xB
   503   00006B                     	ds	1
   504   00006C                     colour_rel@R:
   505                           	callstack 0
   506                           
   507                           ; 4 bytes @ 0xC
   508   00006C                     	ds	1
   509   00006D                     efgtoa@t:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xD
   513   00006D                     	ds	2
   514   00006F                     _efgtoa$2727:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0xF
   518   00006F                     	ds	1
   519   000070                     colour_rel@G:
   520                           	callstack 0
   521                           
   522                           ; 4 bytes @ 0x10
   523   000070                     	ds	1
   524   000071                     efgtoa@pp:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0x11
   528   000071                     	ds	1
   529   000072                     efgtoa@mode:
   530                           	callstack 0
   531   000072                     Colour_decider@Cmax:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x12
   535   000072                     	ds	1
   536   000073                     efgtoa@nmode:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540   000073                     	ds	1
   541   000074                     efgtoa@d:
   542                           	callstack 0
   543   000074                     colour_rel@B:
   544                           	callstack 0
   545                           
   546                           ; 4 bytes @ 0x14
   547   000074                     	ds	2
   548   000076                     efgtoa@m:
   549                           	callstack 0
   550   000076                     Colour_decider@Cmin:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x16
   554   000076                     	ds	2
   555   000078                     efgtoa@e:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x18
   559   000078                     	ds	2
   560   00007A                     Colour_decider@i:
   561                           	callstack 0
   562   00007A                     efgtoa@w:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x1A
   566   00007A                     	ds	2
   567   00007C                     Colour_decider@Hue:
   568                           	callstack 0
   569   00007C                     efgtoa@ou:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x1C
   573   00007C                     	ds	4
   574   000080                     efgtoa@i:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x20
   578   000080                     	ds	2
   579   000082                     efgtoa@h:
   580                           	callstack 0
   581                           
   582                           ; 4 bytes @ 0x22
   583   000082                     	ds	4
   584   000086                     efgtoa@l:
   585                           	callstack 0
   586                           
   587                           ; 4 bytes @ 0x26
   588   000086                     	ds	4
   589   00008A                     efgtoa@sign:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x2A
   593   00008A                     	ds	1
   594   00008B                     efgtoa@n:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2B
   598   00008B                     	ds	2
   599   00008D                     efgtoa@g:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x2D
   603   00008D                     	ds	4
   604   000091                     efgtoa@u:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x31
   608   000091                     	ds	4
   609   000095                     vfpfcnvrt@fp:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x35
   613   000095                     	ds	2
   614   000097                     vfpfcnvrt@fmt:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x37
   618   000097                     	ds	2
   619   000099                     vfpfcnvrt@ap:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x39
   623   000099                     	ds	2
   624   00009B                     ??_vfpfcnvrt:
   625                           
   626                           ; 1 bytes @ 0x3B
   627   00009B                     	ds	2
   628   00009D                     vfpfcnvrt@convarg:
   629                           	callstack 0
   630                           
   631                           ; 8 bytes @ 0x3D
   632   00009D                     	ds	8
   633   0000A5                     vfpfcnvrt@c:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x45
   637   0000A5                     	ds	1
   638   0000A6                     vfpfcnvrt@cp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x46
   642   0000A6                     	ds	2
   643   0000A8                     ?_vfprintf:
   644                           	callstack 0
   645   0000A8                     vfprintf@fp:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x48
   649   0000A8                     	ds	2
   650   0000AA                     vfprintf@fmt:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x4A
   654   0000AA                     	ds	2
   655   0000AC                     vfprintf@ap:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4C
   659   0000AC                     	ds	2
   660   0000AE                     vfprintf@cfmt:
   661                           	callstack 0
   662                           
   663                           ; 2 bytes @ 0x4E
   664   0000AE                     	ds	2
   665   0000B0                     ?_sprintf:
   666                           	callstack 0
   667   0000B0                     sprintf@s:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x50
   671   0000B0                     	ds	2
   672   0000B2                     sprintf@fmt:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x52
   676   0000B2                     	ds	18
   677   0000C4                     sprintf@ap:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x64
   681   0000C4                     	ds	2
   682   0000C6                     sprintf@f:
   683                           	callstack 0
   684                           
   685                           ; 11 bytes @ 0x66
   686   0000C6                     	ds	11
   687   0000D1                     ??_main:
   688                           
   689                           ; 1 bytes @ 0x71
   690   0000D1                     	ds	2
   691                           
   692                           	psect	cstackCOMRAM
   693   000001                     __pcstackCOMRAM:
   694                           	callstack 0
   695   000001                     ??_I2C_2_Master_Idle:
   696   000001                     ?___fpclassifyf:
   697                           	callstack 0
   698   000001                     ?___wmul:
   699                           	callstack 0
   700   000001                     ?___fladd:
   701                           	callstack 0
   702   000001                     ?_labs:
   703                           	callstack 0
   704   000001                     ?___flneg:
   705                           	callstack 0
   706   000001                     ?___fltol:
   707                           	callstack 0
   708   000001                     ?___xxtofl:
   709                           	callstack 0
   710   000001                     ?___aodiv:
   711                           	callstack 0
   712   000001                     ?___aomod:
   713                           	callstack 0
   714   000001                     sendCharSerial4@charToSend:
   715                           	callstack 0
   716   000001                     initDCmotorsPWM@PWMperiod:
   717                           	callstack 0
   718   000001                     TurnDelay@Turn45Delay:
   719                           	callstack 0
   720   000001                     getTMR0val@moving:
   721                           	callstack 0
   722   000001                     ___wmul@multiplier:
   723                           	callstack 0
   724   000001                     memcpy@d1:
   725                           	callstack 0
   726   000001                     fputc@c:
   727                           	callstack 0
   728   000001                     strcpy@dest:
   729                           	callstack 0
   730   000001                     ___flneg@f1:
   731                           	callstack 0
   732   000001                     ___fltol@f1:
   733                           	callstack 0
   734   000001                     ___fladd@b:
   735                           	callstack 0
   736   000001                     ___xxtofl@val:
   737                           	callstack 0
   738   000001                     ___fpclassifyf@x:
   739                           	callstack 0
   740   000001                     labs@a:
   741                           	callstack 0
   742   000001                     ___aodiv@dividend:
   743                           	callstack 0
   744   000001                     ___aomod@dividend:
   745                           	callstack 0
   746                           
   747                           ; 8 bytes @ 0x0
   748   000001                     	ds	1
   749   000002                     ??_I2C_2_Master_Read:
   750   000002                     I2C_2_Master_Write@data_byte:
   751                           	callstack 0
   752   000002                     sendStringSerial4@string:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x1
   756   000002                     	ds	1
   757   000003                     ??_TurnDelay:
   758   000003                     color_writetoaddr@value:
   759                           	callstack 0
   760   000003                     I2C_2_Master_Read@ack:
   761                           	callstack 0
   762   000003                     ___wmul@multiplicand:
   763                           	callstack 0
   764   000003                     memcpy@s1:
   765                           	callstack 0
   766   000003                     fputc@fp:
   767                           	callstack 0
   768   000003                     strcpy@src:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x2
   772   000003                     	ds	1
   773   000004                     color_writetoaddr@address:
   774                           	callstack 0
   775   000004                     I2C_2_Master_Read@tmp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x3
   779   000004                     	ds	1
   780   000005                     ??_fputc:
   781   000005                     ??___fpclassifyf:
   782   000005                     ??_labs:
   783   000005                     ??_color_click_init:
   784   000005                     ??___fltol:
   785   000005                     ??___xxtofl:
   786   000005                     ?_color_read_lum:
   787                           	callstack 0
   788   000005                     ?_color_read_Red:
   789                           	callstack 0
   790   000005                     ?_color_read_Green:
   791                           	callstack 0
   792   000005                     ?_color_read_Blue:
   793                           	callstack 0
   794   000005                     ___wmul@product:
   795                           	callstack 0
   796   000005                     memcpy@n:
   797                           	callstack 0
   798   000005                     strcpy@s:
   799                           	callstack 0
   800   000005                     ___fladd@a:
   801                           	callstack 0
   802                           
   803                           ; 4 bytes @ 0x4
   804   000005                     	ds	2
   805   000007                     ??_color_read_lum:
   806   000007                     ??_color_read_Red:
   807   000007                     ??_color_read_Green:
   808   000007                     ??_color_read_Blue:
   809   000007                     ?___lwdiv:
   810                           	callstack 0
   811   000007                     ___lwdiv@dividend:
   812                           	callstack 0
   813   000007                     memcpy@d:
   814                           	callstack 0
   815   000007                     strcpy@d:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x6
   819   000007                     	ds	2
   820   000009                     ??___fladd:
   821   000009                     ___fltol@sign1:
   822                           	callstack 0
   823   000009                     ___xxtofl@sign:
   824                           	callstack 0
   825   000009                     ___lwdiv@divisor:
   826                           	callstack 0
   827   000009                     ___fpclassifyf@e:
   828                           	callstack 0
   829   000009                     memcpy@s:
   830                           	callstack 0
   831   000009                     ___aodiv@divisor:
   832                           	callstack 0
   833   000009                     ___aomod@divisor:
   834                           	callstack 0
   835                           
   836                           ; 8 bytes @ 0x8
   837   000009                     	ds	1
   838   00000A                     ___fltol@exp1:
   839                           	callstack 0
   840   00000A                     ___xxtofl@exp:
   841                           	callstack 0
   842   00000A                     color_read_lum@tmp:
   843                           	callstack 0
   844   00000A                     color_read_Red@tmp:
   845                           	callstack 0
   846   00000A                     color_read_Green@tmp:
   847                           	callstack 0
   848   00000A                     color_read_Blue@tmp:
   849                           	callstack 0
   850   00000A                     fputs@s:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x9
   854   00000A                     	ds	1
   855   00000B                     memcpy@tmp:
   856                           	callstack 0
   857   00000B                     ___lwdiv@quotient:
   858                           	callstack 0
   859   00000B                     ___xxtofl@arg:
   860                           	callstack 0
   861   00000B                     ___fpclassifyf@u:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0xA
   865   00000B                     	ds	1
   866   00000C                     readColours@vals:
   867                           	callstack 0
   868   00000C                     fputs@fp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0xB
   872   00000C                     	ds	1
   873   00000D                     ___lwdiv@counter:
   874                           	callstack 0
   875   00000D                     ___fladd@signs:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0xC
   879   00000D                     	ds	1
   880   00000E                     ___fladd@aexp:
   881                           	callstack 0
   882   00000E                     fputs@c:
   883                           	callstack 0
   884   00000E                     setMotorPWM@m:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0xD
   888   00000E                     	ds	1
   889   00000F                     ___fladd@bexp:
   890                           	callstack 0
   891   00000F                     fputs@i:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0xE
   895   00000F                     	ds	1
   896   000010                     ??_setMotorPWM:
   897   000010                     ___fladd@grs:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0xF
   901   000010                     	ds	1
   902   000011                     ?___flmul:
   903                           	callstack 0
   904   000011                     ___aodiv@counter:
   905                           	callstack 0
   906   000011                     ___aomod@counter:
   907                           	callstack 0
   908   000011                     pad@fp:
   909                           	callstack 0
   910   000011                     ___flmul@b:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0x10
   914   000011                     	ds	1
   915   000012                     setMotorPWM@posDuty:
   916                           	callstack 0
   917   000012                     ___aodiv@sign:
   918                           	callstack 0
   919   000012                     ___aomod@sign:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x11
   923   000012                     	ds	1
   924   000013                     ?_abs:
   925                           	callstack 0
   926   000013                     setMotorPWM@negDuty:
   927                           	callstack 0
   928   000013                     pad@buf:
   929                           	callstack 0
   930   000013                     abs@a:
   931                           	callstack 0
   932   000013                     ___aodiv@quotient:
   933                           	callstack 0
   934                           
   935                           ; 8 bytes @ 0x12
   936   000013                     	ds	1
   937   000014                     stop@mL:
   938                           	callstack 0
   939   000014                     turnLeft@mL:
   940                           	callstack 0
   941                           
   942                           ; 2 bytes @ 0x13
   943   000014                     	ds	1
   944   000015                     ??_abs:
   945   000015                     pad@p:
   946                           	callstack 0
   947   000015                     ___flmul@a:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x14
   951   000015                     	ds	1
   952   000016                     stop@mR:
   953                           	callstack 0
   954   000016                     turnLeft@mR:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x15
   958   000016                     	ds	1
   959   000017                     ??_pad:
   960                           
   961                           ; 1 bytes @ 0x16
   962   000017                     	ds	1
   963   000018                     ??_stop:
   964   000018                     ??_turnLeft:
   965   000018                     pad@i:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x17
   969   000018                     	ds	1
   970   000019                     ??___flmul:
   971                           
   972                           ; 1 bytes @ 0x18
   973   000019                     	ds	1
   974   00001A                     turnLeft45@mL:
   975                           	callstack 0
   976   00001A                     pad@w:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x19
   980   00001A                     	ds	2
   981   00001C                     turnLeft45@mR:
   982                           	callstack 0
   983   00001C                     dtoa@fp:
   984                           	callstack 0
   985                           
   986                           ; 2 bytes @ 0x1B
   987   00001C                     	ds	1
   988   00001D                     ___flmul@sign:
   989                           	callstack 0
   990                           
   991                           ; 1 bytes @ 0x1C
   992   00001D                     	ds	1
   993   00001E                     ??_turnLeft45:
   994   00001E                     ___flmul@grs:
   995                           	callstack 0
   996   00001E                     dtoa@d:
   997                           	callstack 0
   998                           
   999                           ; 8 bytes @ 0x1D
  1000   00001E                     	ds	2
  1001   000020                     turnCalibration@mL:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x1F
  1005   000020                     	ds	2
  1006   000022                     ___flmul@aexp:
  1007                           	callstack 0
  1008   000022                     turnCalibration@mR:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x21
  1012   000022                     	ds	1
  1013   000023                     ___flmul@bexp:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x22
  1017   000023                     	ds	1
  1018   000024                     ??_turnCalibration:
  1019   000024                     ___flmul@prod:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x23
  1023   000024                     	ds	2
  1024   000026                     ??_dtoa:
  1025                           
  1026                           ; 1 bytes @ 0x25
  1027   000026                     	ds	2
  1028   000028                     ___flmul@temp:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x27
  1032   000028                     	ds	2
  1033   00002A                     ?___flsub:
  1034                           	callstack 0
  1035   00002A                     ___flge@ff1:
  1036                           	callstack 0
  1037   00002A                     ___flsub@b:
  1038                           	callstack 0
  1039                           
  1040                           ; 4 bytes @ 0x29
  1041   00002A                     	ds	4
  1042   00002E                     _dtoa$2696:
  1043                           	callstack 0
  1044   00002E                     ___flge@ff2:
  1045                           	callstack 0
  1046   00002E                     ___flsub@a:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x2D
  1050   00002E                     	ds	2
  1051   000030                     dtoa@p:
  1052                           	callstack 0
  1053                           
  1054                           ; 2 bytes @ 0x2F
  1055   000030                     	ds	2
  1056   000032                     ??___flge:
  1057   000032                     ?___fldiv:
  1058                           	callstack 0
  1059   000032                     dtoa@w:
  1060                           	callstack 0
  1061   000032                     ___fleq@ff1:
  1062                           	callstack 0
  1063   000032                     ___fldiv@b:
  1064                           	callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x31
  1067   000032                     	ds	2
  1068   000034                     dtoa@n:
  1069                           	callstack 0
  1070                           
  1071                           ; 8 bytes @ 0x33
  1072   000034                     	ds	2
  1073   000036                     ___fleq@ff2:
  1074                           	callstack 0
  1075   000036                     ___fldiv@a:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x35
  1079   000036                     	ds	4
  1080   00003A                     ??___fldiv:
  1081   00003A                     ??___fleq:
  1082                           
  1083                           ; 1 bytes @ 0x39
  1084   00003A                     	ds	2
  1085   00003C                     dtoa@i:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x3B
  1089   00003C                     	ds	2
  1090   00003E                     dtoa@s:
  1091                           	callstack 0
  1092   00003E                     ___fldiv@rem:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x3D
  1096   00003E                     	ds	4
  1097   000042                     ___fldiv@sign:
  1098                           	callstack 0
  1099                           
  1100                           ; 1 bytes @ 0x41
  1101   000042                     	ds	1
  1102   000043                     ___fldiv@new_exp:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x42
  1106   000043                     	ds	2
  1107   000045                     ___fldiv@grs:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x44
  1111   000045                     	ds	4
  1112   000049                     ___fldiv@bexp:
  1113                           	callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x48
  1116   000049                     	ds	1
  1117   00004A                     ___fldiv@aexp:
  1118                           	callstack 0
  1119                           
  1120                           ; 1 bytes @ 0x49
  1121   00004A                     	ds	1
  1122   00004B                     ?_Colour_decider:
  1123                           	callstack 0
  1124   00004B                     ?_floorf:
  1125                           	callstack 0
  1126   00004B                     colour_rel@vals:
  1127                           	callstack 0
  1128   00004B                     Colour_decider@vals:
  1129                           	callstack 0
  1130   00004B                     floorf@x:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x4A
  1134   00004B                     	ds	2
  1135   00004D                     colour_rel@rel:
  1136                           	callstack 0
  1137   00004D                     Colour_decider@rel:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x4C
  1141   00004D                     	ds	2
  1142   00004F                     ??_floorf:
  1143   00004F                     ??_Colour_decider:
  1144                           
  1145                           ; 1 bytes @ 0x4E
  1146   00004F                     	ds	6
  1147   000055                     floorf@m:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x54
  1151   000055                     	ds	4
  1152   000059                     floorf@e:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x58
  1156   000059                     	ds	2
  1157   00005B                     floorf@u:
  1158                           	callstack 0
  1159                           
  1160                           ; 4 bytes @ 0x5A
  1161   00005B                     	ds	4
  1162   00005F                     
  1163                           ; 1 bytes @ 0x5E
  1164 ;;
  1165 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1166 ;;
  1167 ;; *************** function _main *****************
  1168 ;; Defined at:
  1169 ;;		line 30 in file "main.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;		None
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  colour          2    0        int 
  1174 ;;  colour          2  100[BANK1 ] int 
  1175 ;;  buf           100    0[BANK1 ] unsigned char [100]
  1176 ;;  lost_count      2    0        int 
  1177 ;;  prev_colour     2    0        int 
  1178 ;;  consecuitive    2    0        int 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1189 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Totals:         0       2     102       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;Total ram usage:      104 bytes
  1193 ;; Hardware stack levels required when called: 8
  1194 ;; This function calls:
  1195 ;;		_Colour_decider
  1196 ;;		_I2C_2_Master_Init
  1197 ;;		_Interrupts_init
  1198 ;;		_Timer0_init
  1199 ;;		_color_click_init
  1200 ;;		_colour_rel
  1201 ;;		_getTMR0val
  1202 ;;		_initDCmotorsPWM
  1203 ;;		_initUSART4
  1204 ;;		_readColours
  1205 ;;		_sendStringSerial4
  1206 ;;		_sprintf
  1207 ;;		_stop
  1208 ;;		_turnCalibration
  1209 ;; This function is called by:
  1210 ;;		Startup code after reset
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text0
  1215   0032D0                     __ptext0:
  1216                           	callstack 0
  1217   0032D0                     _main:
  1218                           	callstack 23
  1219   0032D0                     
  1220                           ;main.c: 31:     initUSART4();
  1221   0032D0  EC82  F026         	call	_initUSART4	;wreg free
  1222   0032D4                     
  1223                           ;main.c: 32:     Interrupts_init();
  1224   0032D4  ECB7  F026         	call	_Interrupts_init	;wreg free
  1225   0032D8                     
  1226                           ;main.c: 33:     color_click_init();
  1227   0032D8  ECDE  F023         	call	_color_click_init	;wreg free
  1228   0032DC                     
  1229                           ;main.c: 34:     I2C_2_Master_Init();
  1230   0032DC  EC13  F026         	call	_I2C_2_Master_Init	;wreg free
  1231   0032E0                     
  1232                           ;main.c: 35:     initDCmotorsPWM(200);
  1233   0032E0  0E00               	movlw	0
  1234   0032E2  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
  1235   0032E4  0EC8               	movlw	200
  1236   0032E6  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
  1237   0032E8  EC2E  F022         	call	_initDCmotorsPWM	;wreg free
  1238   0032EC                     
  1239                           ;main.c: 36:     Timer0_init();
  1240   0032EC  EC72  F026         	call	_Timer0_init	;wreg free
  1241   0032F0                     
  1242                           ;main.c: 37:     char buf[100];;main.c: 39:     TRISGbits.TRISG1 = 0;
  1243   0032F0  9287               	bcf	135,1,c	;volatile
  1244   0032F2                     
  1245                           ;main.c: 40:     TRISAbits.TRISA4 = 0;
  1246   0032F2  9881               	bcf	129,4,c	;volatile
  1247   0032F4                     
  1248                           ;main.c: 41:     TRISFbits.TRISF7 = 0;
  1249   0032F4  9E86               	bcf	134,7,c	;volatile
  1250   0032F6                     
  1251                           ;main.c: 42:     TRISFbits.TRISF2 = 1;
  1252   0032F6  8486               	bsf	134,2,c	;volatile
  1253   0032F8                     
  1254                           ;main.c: 43:     ANSELFbits.ANSELF2=0;
  1255   0032F8  010E               	movlb	14	; () banked
  1256   0032FA  95B4               	bcf	180,2,b	;volatile
  1257   0032FC                     
  1258                           ; BSR set to: 14
  1259                           ;main.c: 44:     TRISFbits.TRISF3 = 1;
  1260   0032FC  8686               	bsf	134,3,c	;volatile
  1261   0032FE                     
  1262                           ; BSR set to: 14
  1263                           ;main.c: 45:     ANSELFbits.ANSELF3=0;
  1264   0032FE  97B4               	bcf	180,3,b	;volatile
  1265   003300                     
  1266                           ; BSR set to: 14
  1267                           ;main.c: 46:     LATGbits.LATG1=1;
  1268   003300  827F               	bsf	127,1,c	;volatile
  1269   003302                     
  1270                           ; BSR set to: 14
  1271                           ;main.c: 47:     LATAbits.LATA4=1;
  1272   003302  8879               	bsf	121,4,c	;volatile
  1273   003304                     
  1274                           ; BSR set to: 14
  1275                           ;main.c: 48:     LATFbits.LATF7=1;
  1276   003304  8E7E               	bsf	126,7,c	;volatile
  1277   003306                     
  1278                           ; BSR set to: 14
  1279                           ;main.c: 51:     LATDbits.LATD7=0;
  1280   003306  9E7C               	bcf	124,7,c	;volatile
  1281   003308                     
  1282                           ; BSR set to: 14
  1283                           ;main.c: 52:     TRISDbits.TRISD7=0;
  1284   003308  9E84               	bcf	132,7,c	;volatile
  1285   00330A                     
  1286                           ; BSR set to: 14
  1287                           ;main.c: 53:     LATHbits.LATH3=0;
  1288   00330A  9680               	bcf	128,3,c	;volatile
  1289   00330C                     
  1290                           ; BSR set to: 14
  1291                           ;main.c: 54:     TRISHbits.TRISH3=0;
  1292   00330C  9688               	bcf	136,3,c	;volatile
  1293   00330E                     
  1294                           ; BSR set to: 14
  1295                           ;main.c: 57:     LATHbits.LATH0=0;
  1296   00330E  9080               	bcf	128,0,c	;volatile
  1297   003310                     
  1298                           ; BSR set to: 14
  1299                           ;main.c: 58:     TRISHbits.TRISH0=0;
  1300   003310  9088               	bcf	136,0,c	;volatile
  1301   003312                     
  1302                           ; BSR set to: 14
  1303                           ;main.c: 61:     LATFbits.LATF0=0;
  1304   003312  907E               	bcf	126,0,c	;volatile
  1305   003314                     
  1306                           ; BSR set to: 14
  1307                           ;main.c: 62:     TRISFbits.TRISF0=0;
  1308   003314  9086               	bcf	134,0,c	;volatile
  1309   003316                     
  1310                           ; BSR set to: 14
  1311                           ;main.c: 65:     LATDbits.LATD4=0;
  1312   003316  987C               	bcf	124,4,c	;volatile
  1313   003318                     
  1314                           ; BSR set to: 14
  1315                           ;main.c: 66:     TRISDbits.TRISD4=0;
  1316   003318  9884               	bcf	132,4,c	;volatile
  1317   00331A                     
  1318                           ; BSR set to: 14
  1319                           ;main.c: 69:     LATDbits.LATD3=0;
  1320   00331A  967C               	bcf	124,3,c	;volatile
  1321   00331C                     
  1322                           ; BSR set to: 14
  1323                           ;main.c: 70:     TRISDbits.TRISD3=0;
  1324   00331C  9684               	bcf	132,3,c	;volatile
  1325   00331E                     
  1326                           ; BSR set to: 14
  1327                           ;main.c: 75:     motorL.power=0;
  1328   00331E  0E00               	movlw	0
  1329   003320  0101               	movlb	1	; () banked
  1330   003322  6F75               	movwf	_motorL& (0+255),b
  1331   003324                     
  1332                           ; BSR set to: 1
  1333                           ;main.c: 76:     motorL.direction=1;
  1334   003324  0E01               	movlw	1
  1335   003326  6F76               	movwf	(_motorL+1)& (0+255),b
  1336   003328                     
  1337                           ; BSR set to: 1
  1338                           ;main.c: 77:     motorL.brakemode=1;
  1339   003328  0E01               	movlw	1
  1340   00332A  6F77               	movwf	(_motorL+2)& (0+255),b
  1341   00332C                     
  1342                           ; BSR set to: 1
  1343                           ;main.c: 78:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
  1344   00332C  0EAA               	movlw	170
  1345   00332E  6F7A               	movwf	(_motorL+5)& (0+255),b
  1346   003330  0E0F               	movlw	15
  1347   003332  6F7B               	movwf	(_motorL+6)& (0+255),b
  1348   003334                     
  1349                           ; BSR set to: 1
  1350                           ;main.c: 79:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
  1351   003334  0EA6               	movlw	166
  1352   003336  6F7C               	movwf	(_motorL+7)& (0+255),b
  1353   003338  0E0F               	movlw	15
  1354   00333A  6F7D               	movwf	(_motorL+8)& (0+255),b
  1355   00333C                     
  1356                           ; BSR set to: 1
  1357                           ;main.c: 80:     motorL.PWMperiod=200;
  1358   00333C  0E00               	movlw	0
  1359   00333E  6F79               	movwf	(_motorL+4)& (0+255),b
  1360   003340  0EC8               	movlw	200
  1361   003342  6F78               	movwf	(_motorL+3)& (0+255),b
  1362   003344                     
  1363                           ; BSR set to: 1
  1364                           ;main.c: 81:     motorR.power=0;
  1365   003344  0E00               	movlw	0
  1366   003346  6F6C               	movwf	_motorR& (0+255),b
  1367   003348                     
  1368                           ; BSR set to: 1
  1369                           ;main.c: 82:     motorR.direction=1;
  1370   003348  0E01               	movlw	1
  1371   00334A  6F6D               	movwf	(_motorR+1)& (0+255),b
  1372   00334C                     
  1373                           ; BSR set to: 1
  1374                           ;main.c: 83:     motorR.brakemode=1;
  1375   00334C  0E01               	movlw	1
  1376   00334E  6F6E               	movwf	(_motorR+2)& (0+255),b
  1377   003350                     
  1378                           ; BSR set to: 1
  1379                           ;main.c: 84:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1380   003350  0E25               	movlw	37
  1381   003352  6F71               	movwf	(_motorR+5)& (0+255),b
  1382   003354  0E0F               	movlw	15
  1383   003356  6F72               	movwf	(_motorR+6)& (0+255),b
  1384   003358                     
  1385                           ; BSR set to: 1
  1386                           ;main.c: 85:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1387   003358  0E21               	movlw	33
  1388   00335A  6F73               	movwf	(_motorR+7)& (0+255),b
  1389   00335C  0E0F               	movlw	15
  1390   00335E  6F74               	movwf	(_motorR+8)& (0+255),b
  1391   003360                     
  1392                           ; BSR set to: 1
  1393                           ;main.c: 86:     motorR.PWMperiod=200;
  1394   003360  0E00               	movlw	0
  1395   003362  6F70               	movwf	(_motorR+4)& (0+255),b
  1396   003364  0EC8               	movlw	200
  1397   003366  6F6F               	movwf	(_motorR+3)& (0+255),b
  1398   003368                     
  1399                           ; BSR set to: 1
  1400                           ;main.c: 90:     run_flag=1;
  1401   003368  0E00               	movlw	0
  1402   00336A  6F0F               	movwf	(_run_flag+1)& (0+255),b
  1403   00336C  0E01               	movlw	1
  1404   00336E  6F0E               	movwf	_run_flag& (0+255),b
  1405   003370                     
  1406                           ; BSR set to: 1
  1407                           ;main.c: 91:     move_count=-1;
  1408   003370  690C               	setf	_move_count& (0+255),b	;volatile
  1409   003372  690D               	setf	(_move_count+1)& (0+255),b	;volatile
  1410   003374                     
  1411                           ; BSR set to: 1
  1412                           ;main.c: 93:     turnCalibration(&motorL,&motorR);
  1413   003374  0E75               	movlw	low _motorL
  1414   003376  6E20               	movwf	turnCalibration@mL^0,c
  1415   003378  0E01               	movlw	high _motorL
  1416   00337A  6E21               	movwf	(turnCalibration@mL+1)^0,c
  1417   00337C  0E6C               	movlw	low _motorR
  1418   00337E  6E22               	movwf	turnCalibration@mR^0,c
  1419   003380  0E01               	movlw	high _motorR
  1420   003382  6E23               	movwf	(turnCalibration@mR+1)^0,c
  1421   003384  ECAB  F01B         	call	_turnCalibration	;wreg free
  1422   003388                     
  1423                           ;main.c: 95:     LATFbits.LATF0=0;
  1424   003388  907E               	bcf	126,0,c	;volatile
  1425   00338A                     
  1426                           ;main.c: 96:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1427   00338A  0E52               	movlw	82
  1428   00338C  0100               	movlb	0	; () banked
  1429   00338E  6FD2               	movwf	(??_main+1)& (0+255),b
  1430   003390  0E2B               	movlw	43
  1431   003392  6FD1               	movwf	??_main& (0+255),b
  1432   003394  0E00               	movlw	0
  1433   003396                     u5227:
  1434   003396  2EE8               	decfsz	wreg,f,c
  1435   003398  D7FE               	bra	u5227
  1436   00339A  2FD1               	decfsz	??_main& (0+255),f,b
  1437   00339C  D7FC               	bra	u5227
  1438   00339E  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1439   0033A0  D7FA               	bra	u5227
  1440   0033A2  F000               	nop	
  1441   0033A4                     l363:
  1442   0033A4  B48E               	btfsc	142,2,c	;volatile
  1443   0033A6  EFD7  F019         	goto	u5041
  1444   0033AA  EFD9  F019         	goto	u5040
  1445   0033AE                     u5041:
  1446   0033AE  EFD2  F019         	goto	l363
  1447   0033B2                     u5040:
  1448   0033B2                     
  1449                           ;main.c: 99:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1450   0033B2  0E52               	movlw	82
  1451   0033B4  0100               	movlb	0	; () banked
  1452   0033B6  6FD2               	movwf	(??_main+1)& (0+255),b
  1453   0033B8  0E2B               	movlw	43
  1454   0033BA  6FD1               	movwf	??_main& (0+255),b
  1455   0033BC  0E00               	movlw	0
  1456   0033BE                     u5237:
  1457   0033BE  2EE8               	decfsz	wreg,f,c
  1458   0033C0  D7FE               	bra	u5237
  1459   0033C2  2FD1               	decfsz	??_main& (0+255),f,b
  1460   0033C4  D7FC               	bra	u5237
  1461   0033C6  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1462   0033C8  D7FA               	bra	u5237
  1463   0033CA  F000               	nop	
  1464   0033CC                     
  1465                           ;main.c: 100:     T0CON0bits.T0EN=1;
  1466   0033CC  8ED5               	bsf	213,7,c	;volatile
  1467                           
  1468                           ;main.c: 101:     while (run_flag)
  1469   0033CE  EF96  F01A         	goto	l5650
  1470   0033D2                     l5622:
  1471   0033D2                     
  1472                           ; BSR set to: 1
  1473                           ;main.c: 106:         readColours(&vals);
  1474   0033D2  0E7E               	movlw	low _vals
  1475   0033D4  6E0C               	movwf	readColours@vals^0,c
  1476   0033D6  0E01               	movlw	high _vals
  1477   0033D8  6E0D               	movwf	(readColours@vals+1)^0,c
  1478   0033DA  EC5B  F023         	call	_readColours	;wreg free
  1479   0033DE                     
  1480                           ;main.c: 109:         colour_rel(&vals, &rel);
  1481   0033DE  0E7E               	movlw	low _vals
  1482   0033E0  6E4B               	movwf	colour_rel@vals^0,c
  1483   0033E2  0E01               	movlw	high _vals
  1484   0033E4  6E4C               	movwf	(colour_rel@vals+1)^0,c
  1485   0033E6  0E60               	movlw	low _rel
  1486   0033E8  6E4D               	movwf	colour_rel@rel^0,c
  1487   0033EA  0E01               	movlw	high _rel
  1488   0033EC  6E4E               	movwf	(colour_rel@rel+1)^0,c
  1489   0033EE  EC0F  F015         	call	_colour_rel	;wreg free
  1490   0033F2                     
  1491                           ;main.c: 112:         if (vals.L>=500){
  1492   0033F2  0101               	movlb	1	; () banked
  1493   0033F4  BF85               	btfsc	(_vals+7)& (0+255),7,b
  1494   0033F6  EF06  F01A         	goto	u5051
  1495   0033FA  0EF4               	movlw	244
  1496   0033FC  5D84               	subwf	(_vals+6)& (0+255),w,b
  1497   0033FE  0E01               	movlw	1
  1498   003400  5985               	subwfb	(_vals+7)& (0+255),w,b
  1499   003402  A0D8               	btfss	status,0,c
  1500   003404  EF06  F01A         	goto	u5051
  1501   003408  EF08  F01A         	goto	u5050
  1502   00340C                     u5051:
  1503   00340C  EF63  F01A         	goto	l5644
  1504   003410                     u5050:
  1505   003410                     
  1506                           ; BSR set to: 1
  1507                           ;main.c: 113:             move_count++;
  1508   003410  4B0C               	infsnz	_move_count& (0+255),f,b	;volatile
  1509   003412  2B0D               	incf	(_move_count+1)& (0+255),f,b	;volatile
  1510   003414                     
  1511                           ; BSR set to: 1
  1512                           ;main.c: 114:             getTMR0val();
  1513   003414  EC4F  F026         	call	_getTMR0val	;wreg free
  1514   003418                     
  1515                           ;main.c: 118:             stop(&motorL, &motorR);
  1516   003418  0E75               	movlw	low _motorL
  1517   00341A  6E14               	movwf	stop@mL^0,c
  1518   00341C  0E01               	movlw	high _motorL
  1519   00341E  6E15               	movwf	(stop@mL+1)^0,c
  1520   003420  0E6C               	movlw	low _motorR
  1521   003422  6E16               	movwf	stop@mR^0,c
  1522   003424  0E01               	movlw	high _motorR
  1523   003426  6E17               	movwf	(stop@mR+1)^0,c
  1524   003428  EC72  F022         	call	_stop	;wreg free
  1525   00342C                     
  1526                           ;main.c: 119:             _delay((unsigned long)((200)*(64000000/4000.0)));
  1527   00342C  0E11               	movlw	17
  1528   00342E  0100               	movlb	0	; () banked
  1529   003430  6FD2               	movwf	(??_main+1)& (0+255),b
  1530   003432  0E3C               	movlw	60
  1531   003434  6FD1               	movwf	??_main& (0+255),b
  1532   003436  0ECB               	movlw	203
  1533   003438                     u5247:
  1534   003438  2EE8               	decfsz	wreg,f,c
  1535   00343A  D7FE               	bra	u5247
  1536   00343C  2FD1               	decfsz	??_main& (0+255),f,b
  1537   00343E  D7FC               	bra	u5247
  1538   003440  2FD2               	decfsz	(??_main+1)& (0+255),f,b
  1539   003442  D7FA               	bra	u5247
  1540   003444                     
  1541                           ;main.c: 121:             int colour = Colour_decider(&vals, &rel);
  1542   003444  0E7E               	movlw	low _vals
  1543   003446  6E4B               	movwf	Colour_decider@vals^0,c
  1544   003448  0E01               	movlw	high _vals
  1545   00344A  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1546   00344C  0E60               	movlw	low _rel
  1547   00344E  6E4D               	movwf	Colour_decider@rel^0,c
  1548   003450  0E01               	movlw	high _rel
  1549   003452  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1550   003454  EC2A  F00C         	call	_Colour_decider	;wreg free
  1551   003458  C04B  F1EA         	movff	?_Colour_decider,main@colour
  1552   00345C  C04C  F1EB         	movff	?_Colour_decider+1,main@colour+1
  1553   003460                     
  1554                           ;main.c: 122:             sprintf(buf,"red=%f green=%f blue=%f lum=%d colour=%d \r\n",re
      +                          l.R, rel.G,rel.B,vals.L,colour);
  1555   003460  0E86               	movlw	low main@buf
  1556   003462  0100               	movlb	0	; () banked
  1557   003464  6FB0               	movwf	sprintf@s& (0+255),b
  1558   003466  0E01               	movlw	high main@buf
  1559   003468  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1560   00346A  0E01               	movlw	low STR_1
  1561   00346C  6FB2               	movwf	sprintf@fmt& (0+255),b
  1562   00346E  0E0E               	movlw	high STR_1
  1563   003470  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1564   003472  C160  F0B4         	movff	_rel,?_sprintf+4
  1565   003476  C161  F0B5         	movff	_rel+1,?_sprintf+5
  1566   00347A  C162  F0B6         	movff	_rel+2,?_sprintf+6
  1567   00347E  C163  F0B7         	movff	_rel+3,?_sprintf+7
  1568   003482  C164  F0B8         	movff	_rel+4,?_sprintf+8
  1569   003486  C165  F0B9         	movff	_rel+5,?_sprintf+9
  1570   00348A  C166  F0BA         	movff	_rel+6,?_sprintf+10
  1571   00348E  C167  F0BB         	movff	_rel+7,?_sprintf+11
  1572   003492  C168  F0BC         	movff	_rel+8,?_sprintf+12
  1573   003496  C169  F0BD         	movff	_rel+9,?_sprintf+13
  1574   00349A  C16A  F0BE         	movff	_rel+10,?_sprintf+14
  1575   00349E  C16B  F0BF         	movff	_rel+11,?_sprintf+15
  1576   0034A2  C184  F0C0         	movff	_vals+6,?_sprintf+16
  1577   0034A6  C185  F0C1         	movff	_vals+7,?_sprintf+17
  1578   0034AA  C1EA  F0C2         	movff	main@colour,?_sprintf+18
  1579   0034AE  C1EB  F0C3         	movff	main@colour+1,?_sprintf+19
  1580   0034B2  ECB5  F023         	call	_sprintf	;wreg free
  1581   0034B6                     l5642:
  1582                           
  1583                           ;main.c: 123:             sendStringSerial4(buf);
  1584   0034B6  0E86               	movlw	low main@buf
  1585   0034B8  6E02               	movwf	sendStringSerial4@string^0,c
  1586   0034BA  0E01               	movlw	high main@buf
  1587   0034BC  6E03               	movwf	(sendStringSerial4@string+1)^0,c
  1588   0034BE  ECFB  F025         	call	_sendStringSerial4	;wreg free
  1589                           
  1590                           ;main.c: 193:         }else{
  1591   0034C2  EF96  F01A         	goto	l5650
  1592   0034C6                     l5644:
  1593                           
  1594                           ; BSR set to: 1
  1595   0034C6  0E7E               	movlw	low _vals
  1596   0034C8  6E4B               	movwf	Colour_decider@vals^0,c
  1597   0034CA  0E01               	movlw	high _vals
  1598   0034CC  6E4C               	movwf	(Colour_decider@vals+1)^0,c
  1599   0034CE  0E60               	movlw	low _rel
  1600   0034D0  6E4D               	movwf	Colour_decider@rel^0,c
  1601   0034D2  0E01               	movlw	high _rel
  1602   0034D4  6E4E               	movwf	(Colour_decider@rel+1)^0,c
  1603   0034D6  EC2A  F00C         	call	_Colour_decider	;wreg free
  1604   0034DA                     
  1605                           ;main.c: 195:             sprintf(buf,"red=%f green=%f blue=%f lum=%d  \r\n",rel.R, rel.
      +                          G,rel.B,vals.L);
  1606   0034DA  0E86               	movlw	low main@buf
  1607   0034DC  0100               	movlb	0	; () banked
  1608   0034DE  6FB0               	movwf	sprintf@s& (0+255),b
  1609   0034E0  0E01               	movlw	high main@buf
  1610   0034E2  6FB1               	movwf	(sprintf@s+1)& (0+255),b
  1611   0034E4  0E2D               	movlw	low STR_2
  1612   0034E6  6FB2               	movwf	sprintf@fmt& (0+255),b
  1613   0034E8  0E0E               	movlw	high STR_2
  1614   0034EA  6FB3               	movwf	(sprintf@fmt+1)& (0+255),b
  1615   0034EC  C160  F0B4         	movff	_rel,?_sprintf+4
  1616   0034F0  C161  F0B5         	movff	_rel+1,?_sprintf+5
  1617   0034F4  C162  F0B6         	movff	_rel+2,?_sprintf+6
  1618   0034F8  C163  F0B7         	movff	_rel+3,?_sprintf+7
  1619   0034FC  C164  F0B8         	movff	_rel+4,?_sprintf+8
  1620   003500  C165  F0B9         	movff	_rel+5,?_sprintf+9
  1621   003504  C166  F0BA         	movff	_rel+6,?_sprintf+10
  1622   003508  C167  F0BB         	movff	_rel+7,?_sprintf+11
  1623   00350C  C168  F0BC         	movff	_rel+8,?_sprintf+12
  1624   003510  C169  F0BD         	movff	_rel+9,?_sprintf+13
  1625   003514  C16A  F0BE         	movff	_rel+10,?_sprintf+14
  1626   003518  C16B  F0BF         	movff	_rel+11,?_sprintf+15
  1627   00351C  C184  F0C0         	movff	_vals+6,?_sprintf+16
  1628   003520  C185  F0C1         	movff	_vals+7,?_sprintf+17
  1629   003524  ECB5  F023         	call	_sprintf	;wreg free
  1630   003528  EF5B  F01A         	goto	l5642
  1631   00352C                     l5650:
  1632                           
  1633                           ;main.c: 101:     while (run_flag)
  1634   00352C  0101               	movlb	1	; () banked
  1635   00352E  510E               	movf	_run_flag& (0+255),w,b
  1636   003530  110F               	iorwf	(_run_flag+1)& (0+255),w,b
  1637   003532  A4D8               	btfss	status,2,c
  1638   003534  EF9E  F01A         	goto	u5061
  1639   003538  EFA0  F01A         	goto	u5060
  1640   00353C                     u5061:
  1641   00353C  EFE9  F019         	goto	l5622
  1642   003540                     u5060:
  1643   003540                     
  1644                           ; BSR set to: 1
  1645   003540  EF00  F000         	goto	start
  1646   003544                     __end_of_main:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _turnCalibration *****************
  1650 ;; Defined at:
  1651 ;;		line 357 in file "dc_motor.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  mL              2   31[COMRAM] PTR struct DC_motor
  1654 ;;		 -> motorL(9), 
  1655 ;;  mR              2   33[COMRAM] PTR struct DC_motor
  1656 ;;		 -> motorR(9), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1670 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1671 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1672 ;;Total ram usage:        6 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 4
  1675 ;; This function calls:
  1676 ;;		_turnLeft45
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text1
  1683   003756                     __ptext1:
  1684                           	callstack 0
  1685   003756                     _turnCalibration:
  1686                           	callstack 26
  1687   003756                     
  1688                           ;dc_motor.c: 358:     LATFbits.LATF0=1;
  1689   003756  807E               	bsf	126,0,c	;volatile
  1690   003758                     
  1691                           ;dc_motor.c: 359:     _delay((unsigned long)((1000)*(64000000/4000.0)));
  1692   003758  0E52               	movlw	82
  1693   00375A  6E25               	movwf	(??_turnCalibration+1)^0,c
  1694   00375C  0E2B               	movlw	43
  1695   00375E  6E24               	movwf	??_turnCalibration^0,c
  1696   003760  0E00               	movlw	0
  1697   003762                     u5257:
  1698   003762  2EE8               	decfsz	wreg,f,c
  1699   003764  D7FE               	bra	u5257
  1700   003766  2E24               	decfsz	??_turnCalibration^0,f,c
  1701   003768  D7FC               	bra	u5257
  1702   00376A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1703   00376C  D7FA               	bra	u5257
  1704   00376E  D000               	nop2	
  1705                           
  1706                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  1707   003770  EF72  F01C         	goto	l549
  1708   003774                     l550:
  1709                           
  1710                           ;dc_motor.c: 362:         LATDbits.LATD3=1;
  1711   003774  867C               	bsf	124,3,c	;volatile
  1712   003776                     
  1713                           ;dc_motor.c: 364:         turnLeft45(&motorL, &motorR);
  1714   003776  0E75               	movlw	low _motorL
  1715   003778  6E1A               	movwf	turnLeft45@mL^0,c
  1716   00377A  0E01               	movlw	high _motorL
  1717   00377C  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1718   00377E  0E6C               	movlw	low _motorR
  1719   003780  6E1C               	movwf	turnLeft45@mR^0,c
  1720   003782  0E01               	movlw	high _motorR
  1721   003784  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1722   003786  ECCF  F024         	call	_turnLeft45	;wreg free
  1723                           
  1724                           ;dc_motor.c: 365:         turnLeft45(&motorL, &motorR);
  1725   00378A  0E75               	movlw	low _motorL
  1726   00378C  6E1A               	movwf	turnLeft45@mL^0,c
  1727   00378E  0E01               	movlw	high _motorL
  1728   003790  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1729   003792  0E6C               	movlw	low _motorR
  1730   003794  6E1C               	movwf	turnLeft45@mR^0,c
  1731   003796  0E01               	movlw	high _motorR
  1732   003798  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1733   00379A  ECCF  F024         	call	_turnLeft45	;wreg free
  1734                           
  1735                           ;dc_motor.c: 366:         turnLeft45(&motorL, &motorR);
  1736   00379E  0E75               	movlw	low _motorL
  1737   0037A0  6E1A               	movwf	turnLeft45@mL^0,c
  1738   0037A2  0E01               	movlw	high _motorL
  1739   0037A4  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1740   0037A6  0E6C               	movlw	low _motorR
  1741   0037A8  6E1C               	movwf	turnLeft45@mR^0,c
  1742   0037AA  0E01               	movlw	high _motorR
  1743   0037AC  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1744   0037AE  ECCF  F024         	call	_turnLeft45	;wreg free
  1745                           
  1746                           ;dc_motor.c: 367:         turnLeft45(&motorL, &motorR);
  1747   0037B2  0E75               	movlw	low _motorL
  1748   0037B4  6E1A               	movwf	turnLeft45@mL^0,c
  1749   0037B6  0E01               	movlw	high _motorL
  1750   0037B8  6E1B               	movwf	(turnLeft45@mL+1)^0,c
  1751   0037BA  0E6C               	movlw	low _motorR
  1752   0037BC  6E1C               	movwf	turnLeft45@mR^0,c
  1753   0037BE  0E01               	movlw	high _motorR
  1754   0037C0  6E1D               	movwf	(turnLeft45@mR+1)^0,c
  1755   0037C2  ECCF  F024         	call	_turnLeft45	;wreg free
  1756                           
  1757                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1758   0037C6  EF57  F01C         	goto	l5416
  1759   0037CA                     l552:
  1760                           
  1761                           ;dc_motor.c: 372:               LATDbits.LATD4=1;
  1762   0037CA  887C               	bsf	124,4,c	;volatile
  1763   0037CC                     
  1764                           ;dc_motor.c: 373:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1765   0037CC  0EA3               	movlw	163
  1766   0037CE  6E25               	movwf	(??_turnCalibration+1)^0,c
  1767   0037D0  0E57               	movlw	87
  1768   0037D2  6E24               	movwf	??_turnCalibration^0,c
  1769   0037D4  0E02               	movlw	2
  1770   0037D6                     u5267:
  1771   0037D6  2EE8               	decfsz	wreg,f,c
  1772   0037D8  D7FE               	bra	u5267
  1773   0037DA  2E24               	decfsz	??_turnCalibration^0,f,c
  1774   0037DC  D7FC               	bra	u5267
  1775   0037DE  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1776   0037E0  D7FA               	bra	u5267
  1777   0037E2  D000               	nop2	
  1778                           
  1779                           ;dc_motor.c: 374:             if(!PORTFbits.RF3 & !PORTFbits.RF2){
  1780   0037E4  A48E               	btfss	142,2,c	;volatile
  1781   0037E6  EFF7  F01B         	goto	u4871
  1782   0037EA  EFFA  F01B         	goto	u4870
  1783   0037EE                     u4871:
  1784   0037EE  0E01               	movlw	1
  1785   0037F0  EFFB  F01B         	goto	u4872
  1786   0037F4                     u4870:
  1787   0037F4  0E00               	movlw	0
  1788   0037F6                     u4872:
  1789   0037F6  6E24               	movwf	??_turnCalibration^0,c
  1790   0037F8  A68E               	btfss	142,3,c	;volatile
  1791   0037FA  EF01  F01C         	goto	u4881
  1792   0037FE  EF04  F01C         	goto	u4880
  1793   003802                     u4881:
  1794   003802  0E01               	movlw	1
  1795   003804  EF05  F01C         	goto	u4882
  1796   003808                     u4880:
  1797   003808  0E00               	movlw	0
  1798   00380A                     u4882:
  1799   00380A  1424               	andwf	??_turnCalibration^0,w,c
  1800   00380C  A0E8               	btfss	wreg,0,c
  1801   00380E  EF0B  F01C         	goto	u4891
  1802   003812  EF0D  F01C         	goto	u4890
  1803   003816                     u4891:
  1804   003816  EF1F  F01C         	goto	l553
  1805   00381A                     u4890:
  1806   00381A                     
  1807                           ;dc_motor.c: 375:                 LATHbits.LATH3=1;
  1808   00381A  8680               	bsf	128,3,c	;volatile
  1809                           
  1810                           ;dc_motor.c: 376:                 LATDbits.LATD7=1;
  1811   00381C  8E7C               	bsf	124,7,c	;volatile
  1812   00381E                     
  1813                           ;dc_motor.c: 377:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1814   00381E  0E52               	movlw	82
  1815   003820  6E25               	movwf	(??_turnCalibration+1)^0,c
  1816   003822  0E2B               	movlw	43
  1817   003824  6E24               	movwf	??_turnCalibration^0,c
  1818   003826  0E00               	movlw	0
  1819   003828                     u5277:
  1820   003828  2EE8               	decfsz	wreg,f,c
  1821   00382A  D7FE               	bra	u5277
  1822   00382C  2E24               	decfsz	??_turnCalibration^0,f,c
  1823   00382E  D7FC               	bra	u5277
  1824   003830  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1825   003832  D7FA               	bra	u5277
  1826   003834  D000               	nop2	
  1827   003836                     
  1828                           ;dc_motor.c: 378:                 LATHbits.LATH3=0;
  1829   003836  9680               	bcf	128,3,c	;volatile
  1830   003838                     
  1831                           ;dc_motor.c: 379:                 LATDbits.LATD7=0;
  1832   003838  9E7C               	bcf	124,7,c	;volatile
  1833                           
  1834                           ;dc_motor.c: 380:             }
  1835   00383A  EF57  F01C         	goto	l5416
  1836   00383E                     l553:
  1837   00383E  B68E               	btfsc	142,3,c	;volatile
  1838   003840  EF24  F01C         	goto	u4901
  1839   003844  EF26  F01C         	goto	u4900
  1840   003848                     u4901:
  1841   003848  EF3B  F01C         	goto	l555
  1842   00384C                     u4900:
  1843   00384C                     
  1844                           ;dc_motor.c: 383:                 Turn45Delay+=10;
  1845   00384C  0E0A               	movlw	10
  1846   00384E  0100               	movlb	0	; () banked
  1847   003850  27FB               	addwf	_Turn45Delay& (0+255),f,b
  1848   003852  0E00               	movlw	0
  1849   003854  23FC               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  1850   003856                     
  1851                           ; BSR set to: 0
  1852                           ;dc_motor.c: 384:                 LATHbits.LATH3=1;
  1853   003856  8680               	bsf	128,3,c	;volatile
  1854   003858                     
  1855                           ; BSR set to: 0
  1856                           ;dc_motor.c: 385:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1857   003858  0E52               	movlw	82
  1858   00385A  6E25               	movwf	(??_turnCalibration+1)^0,c
  1859   00385C  0E2B               	movlw	43
  1860   00385E  6E24               	movwf	??_turnCalibration^0,c
  1861   003860  0E00               	movlw	0
  1862   003862                     u5287:
  1863   003862  2EE8               	decfsz	wreg,f,c
  1864   003864  D7FE               	bra	u5287
  1865   003866  2E24               	decfsz	??_turnCalibration^0,f,c
  1866   003868  D7FC               	bra	u5287
  1867   00386A  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1868   00386C  D7FA               	bra	u5287
  1869   00386E  D000               	nop2	
  1870   003870                     
  1871                           ;dc_motor.c: 386:                 LATHbits.LATH3=0;
  1872   003870  9680               	bcf	128,3,c	;volatile
  1873                           
  1874                           ;dc_motor.c: 387:             }
  1875   003872  EF57  F01C         	goto	l5416
  1876   003876                     l555:
  1877   003876  B48E               	btfsc	142,2,c	;volatile
  1878   003878  EF40  F01C         	goto	u4911
  1879   00387C  EF42  F01C         	goto	u4910
  1880   003880                     u4911:
  1881   003880  EF57  F01C         	goto	l554
  1882   003884                     u4910:
  1883   003884                     
  1884                           ;dc_motor.c: 390:                 Turn45Delay-=10;
  1885   003884  0100               	movlb	0	; () banked
  1886   003886  0EF6               	movlw	246
  1887   003888  27FB               	addwf	_Turn45Delay& (0+255),f,b
  1888   00388A  0EFF               	movlw	255
  1889   00388C  23FC               	addwfc	(_Turn45Delay+1)& (0+255),f,b
  1890   00388E                     
  1891                           ; BSR set to: 0
  1892                           ;dc_motor.c: 391:                 LATDbits.LATD7=1;
  1893   00388E  8E7C               	bsf	124,7,c	;volatile
  1894   003890                     
  1895                           ; BSR set to: 0
  1896                           ;dc_motor.c: 392:                 _delay((unsigned long)((1000)*(64000000/4000.0)));
  1897   003890  0E52               	movlw	82
  1898   003892  6E25               	movwf	(??_turnCalibration+1)^0,c
  1899   003894  0E2B               	movlw	43
  1900   003896  6E24               	movwf	??_turnCalibration^0,c
  1901   003898  0E00               	movlw	0
  1902   00389A                     u5297:
  1903   00389A  2EE8               	decfsz	wreg,f,c
  1904   00389C  D7FE               	bra	u5297
  1905   00389E  2E24               	decfsz	??_turnCalibration^0,f,c
  1906   0038A0  D7FC               	bra	u5297
  1907   0038A2  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1908   0038A4  D7FA               	bra	u5297
  1909   0038A6  D000               	nop2	
  1910   0038A8                     
  1911                           ;dc_motor.c: 393:                 LATDbits.LATD7=0;
  1912   0038A8  9E7C               	bcf	124,7,c	;volatile
  1913   0038AA  EF57  F01C         	goto	l5416
  1914   0038AE                     l554:
  1915   0038AE                     l5416:
  1916                           
  1917                           ;dc_motor.c: 369:         while (!(!PORTFbits.RF2 || !PORTFbits.RF3)){
  1918   0038AE  A48E               	btfss	142,2,c	;volatile
  1919   0038B0  EF5C  F01C         	goto	u4921
  1920   0038B4  EF5E  F01C         	goto	u4920
  1921   0038B8                     u4921:
  1922   0038B8  EF65  F01C         	goto	l560
  1923   0038BC                     u4920:
  1924   0038BC  B68E               	btfsc	142,3,c	;volatile
  1925   0038BE  EF63  F01C         	goto	u4931
  1926   0038C2  EF65  F01C         	goto	u4930
  1927   0038C6                     u4931:
  1928   0038C6  EFE5  F01B         	goto	l552
  1929   0038CA                     u4930:
  1930   0038CA                     l560:
  1931                           
  1932                           ;dc_motor.c: 396:         LATDbits.LATD4=0;
  1933   0038CA  987C               	bcf	124,4,c	;volatile
  1934   0038CC                     
  1935                           ;dc_motor.c: 397:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  1936   0038CC  0EA3               	movlw	163
  1937   0038CE  6E25               	movwf	(??_turnCalibration+1)^0,c
  1938   0038D0  0E57               	movlw	87
  1939   0038D2  6E24               	movwf	??_turnCalibration^0,c
  1940   0038D4  0E02               	movlw	2
  1941   0038D6                     u5307:
  1942   0038D6  2EE8               	decfsz	wreg,f,c
  1943   0038D8  D7FE               	bra	u5307
  1944   0038DA  2E24               	decfsz	??_turnCalibration^0,f,c
  1945   0038DC  D7FC               	bra	u5307
  1946   0038DE  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1947   0038E0  D7FA               	bra	u5307
  1948   0038E2  D000               	nop2	
  1949   0038E4                     l549:
  1950                           
  1951                           ;dc_motor.c: 361:     while (!(!PORTFbits.RF2 & !PORTFbits.RF3)){
  1952   0038E4  A68E               	btfss	142,3,c	;volatile
  1953   0038E6  EF77  F01C         	goto	u4941
  1954   0038EA  EF7A  F01C         	goto	u4940
  1955   0038EE                     u4941:
  1956   0038EE  0E01               	movlw	1
  1957   0038F0  EF7B  F01C         	goto	u4942
  1958   0038F4                     u4940:
  1959   0038F4  0E00               	movlw	0
  1960   0038F6                     u4942:
  1961   0038F6  6E24               	movwf	??_turnCalibration^0,c
  1962   0038F8  A48E               	btfss	142,2,c	;volatile
  1963   0038FA  EF81  F01C         	goto	u4951
  1964   0038FE  EF84  F01C         	goto	u4950
  1965   003902                     u4951:
  1966   003902  0E01               	movlw	1
  1967   003904  EF85  F01C         	goto	u4952
  1968   003908                     u4950:
  1969   003908  0E00               	movlw	0
  1970   00390A                     u4952:
  1971   00390A  1424               	andwf	??_turnCalibration^0,w,c
  1972   00390C  A0E8               	btfss	wreg,0,c
  1973   00390E  EF8B  F01C         	goto	u4961
  1974   003912  EF8D  F01C         	goto	u4960
  1975   003916                     u4961:
  1976   003916  EFBA  F01B         	goto	l550
  1977   00391A                     u4960:
  1978   00391A                     
  1979                           ;dc_motor.c: 399:     LATDbits.LATD3=0;
  1980   00391A  967C               	bcf	124,3,c	;volatile
  1981   00391C                     
  1982                           ;dc_motor.c: 400:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1983   00391C  0EA3               	movlw	163
  1984   00391E  6E25               	movwf	(??_turnCalibration+1)^0,c
  1985   003920  0E57               	movlw	87
  1986   003922  6E24               	movwf	??_turnCalibration^0,c
  1987   003924  0E02               	movlw	2
  1988   003926                     u5317:
  1989   003926  2EE8               	decfsz	wreg,f,c
  1990   003928  D7FE               	bra	u5317
  1991   00392A  2E24               	decfsz	??_turnCalibration^0,f,c
  1992   00392C  D7FC               	bra	u5317
  1993   00392E  2E25               	decfsz	(??_turnCalibration+1)^0,f,c
  1994   003930  D7FA               	bra	u5317
  1995   003932  D000               	nop2	
  1996   003934  0012               	return		;funcret
  1997   003936                     __end_of_turnCalibration:
  1998                           	callstack 0
  1999                           
  2000 ;; *************** function _turnLeft45 *****************
  2001 ;; Defined at:
  2002 ;;		line 218 in file "dc_motor.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  mL              2   25[COMRAM] PTR struct DC_motor
  2005 ;;		 -> motorL(9), 
  2006 ;;  mR              2   27[COMRAM] PTR struct DC_motor
  2007 ;;		 -> motorR(9), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2019 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2023 ;;Total ram usage:        6 bytes
  2024 ;; Hardware stack levels used: 1
  2025 ;; Hardware stack levels required when called: 3
  2026 ;; This function calls:
  2027 ;;		_TurnDelay
  2028 ;;		_stop
  2029 ;;		_turnLeft
  2030 ;; This function is called by:
  2031 ;;		_turnCalibration
  2032 ;;		_GreenMove
  2033 ;;		_PinkMove
  2034 ;;		_LightBlueMove
  2035 ;;		_ReversePink
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text2
  2040   00499E                     __ptext2:
  2041                           	callstack 0
  2042   00499E                     _turnLeft45:
  2043                           	callstack 26
  2044   00499E                     
  2045                           ;dc_motor.c: 219:     turnLeft(mL,mR);
  2046   00499E  C01A  F014         	movff	turnLeft45@mL,turnLeft@mL
  2047   0049A2  C01B  F015         	movff	turnLeft45@mL+1,turnLeft@mL+1
  2048   0049A6  C01C  F016         	movff	turnLeft45@mR,turnLeft@mR
  2049   0049AA  C01D  F017         	movff	turnLeft45@mR+1,turnLeft@mR+1
  2050   0049AE  ECDF  F021         	call	_turnLeft	;wreg free
  2051   0049B2                     
  2052                           ;dc_motor.c: 220:     TurnDelay(Turn45Delay);
  2053   0049B2  C0FB  F001         	movff	_Turn45Delay,TurnDelay@Turn45Delay
  2054   0049B6  C0FC  F002         	movff	_Turn45Delay+1,TurnDelay@Turn45Delay+1
  2055   0049BA  ECE0  F025         	call	_TurnDelay	;wreg free
  2056   0049BE                     
  2057                           ;dc_motor.c: 221:     stop(&motorL, &motorR);
  2058   0049BE  0E75               	movlw	low _motorL
  2059   0049C0  6E14               	movwf	stop@mL^0,c
  2060   0049C2  0E01               	movlw	high _motorL
  2061   0049C4  6E15               	movwf	(stop@mL+1)^0,c
  2062   0049C6  0E6C               	movlw	low _motorR
  2063   0049C8  6E16               	movwf	stop@mR^0,c
  2064   0049CA  0E01               	movlw	high _motorR
  2065   0049CC  6E17               	movwf	(stop@mR+1)^0,c
  2066   0049CE  EC72  F022         	call	_stop	;wreg free
  2067   0049D2                     
  2068                           ;dc_motor.c: 222:     _delay((unsigned long)((50)*(64000000/4000.0)));
  2069   0049D2  0E05               	movlw	5
  2070   0049D4  6E1F               	movwf	(??_turnLeft45+1)^0,c
  2071   0049D6  0E0F               	movlw	15
  2072   0049D8  6E1E               	movwf	??_turnLeft45^0,c
  2073   0049DA  0EF1               	movlw	241
  2074   0049DC                     u5327:
  2075   0049DC  2EE8               	decfsz	wreg,f,c
  2076   0049DE  D7FE               	bra	u5327
  2077   0049E0  2E1E               	decfsz	??_turnLeft45^0,f,c
  2078   0049E2  D7FC               	bra	u5327
  2079   0049E4  2E1F               	decfsz	(??_turnLeft45+1)^0,f,c
  2080   0049E6  D7FA               	bra	u5327
  2081   0049E8  F000               	nop	
  2082   0049EA  0012               	return		;funcret
  2083   0049EC                     __end_of_turnLeft45:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function _turnLeft *****************
  2087 ;; Defined at:
  2088 ;;		line 111 in file "dc_motor.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2091 ;;		 -> motorL(9), 
  2092 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2093 ;;		 -> motorR(9), 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2108 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2109 ;;Total ram usage:        6 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 2
  2112 ;; This function calls:
  2113 ;;		_setMotorPWM
  2114 ;; This function is called by:
  2115 ;;		_turnLeft45
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text3
  2120   0043BE                     __ptext3:
  2121                           	callstack 0
  2122   0043BE                     _turnLeft:
  2123                           	callstack 26
  2124   0043BE                     
  2125                           ;dc_motor.c: 111: void turnLeft(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 112
      +                          : {;dc_motor.c: 113:     mL->direction =0;
  2126   0043BE  EE20 F001          	lfsr	2,1
  2127   0043C2  5014               	movf	turnLeft@mL^0,w,c
  2128   0043C4  26D9               	addwf	fsr2l,f,c
  2129   0043C6  5015               	movf	(turnLeft@mL+1)^0,w,c
  2130   0043C8  22DA               	addwfc	fsr2h,f,c
  2131   0043CA  0E00               	movlw	0
  2132   0043CC  6EDF               	movwf	indf2,c
  2133                           
  2134                           ;dc_motor.c: 114:     mR->direction =1;
  2135   0043CE  EE20 F001          	lfsr	2,1
  2136   0043D2  5016               	movf	turnLeft@mR^0,w,c
  2137   0043D4  26D9               	addwf	fsr2l,f,c
  2138   0043D6  5017               	movf	(turnLeft@mR+1)^0,w,c
  2139   0043D8  22DA               	addwfc	fsr2h,f,c
  2140   0043DA  0E01               	movlw	1
  2141   0043DC  6EDF               	movwf	indf2,c
  2142                           
  2143                           ;dc_motor.c: 116:     while(mL->power<power && mR->power<power){
  2144   0043DE  EF15  F022         	goto	l4818
  2145   0043E2                     l4810:
  2146                           
  2147                           ;dc_motor.c: 118:         mL->power+=10;
  2148   0043E2  C014  FFD9         	movff	turnLeft@mL,fsr2l
  2149   0043E6  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  2150   0043EA  0E0A               	movlw	10
  2151   0043EC  26DF               	addwf	indf2,f,c
  2152                           
  2153                           ;dc_motor.c: 119:         mR->power+=10;
  2154   0043EE  C016  FFD9         	movff	turnLeft@mR,fsr2l
  2155   0043F2  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  2156   0043F6  0E0A               	movlw	10
  2157   0043F8  26DF               	addwf	indf2,f,c
  2158   0043FA                     
  2159                           ;dc_motor.c: 121:         setMotorPWM(mL);
  2160   0043FA  C014  F00E         	movff	turnLeft@mL,setMotorPWM@m
  2161   0043FE  C015  F00F         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2162   004402  EC39  F01E         	call	_setMotorPWM	;wreg free
  2163   004406                     
  2164                           ;dc_motor.c: 122:         setMotorPWM(mR);
  2165   004406  C016  F00E         	movff	turnLeft@mR,setMotorPWM@m
  2166   00440A  C017  F00F         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2167   00440E  EC39  F01E         	call	_setMotorPWM	;wreg free
  2168   004412                     
  2169                           ;dc_motor.c: 124:         _delay((unsigned long)((20)*(64000000/4000.0)));
  2170   004412  0E02               	movlw	2
  2171   004414  6E19               	movwf	(??_turnLeft+1)^0,c
  2172   004416  0EA0               	movlw	160
  2173   004418  6E18               	movwf	??_turnLeft^0,c
  2174   00441A  0E92               	movlw	146
  2175   00441C                     u5337:
  2176   00441C  2EE8               	decfsz	wreg,f,c
  2177   00441E  D7FE               	bra	u5337
  2178   004420  2E18               	decfsz	??_turnLeft^0,f,c
  2179   004422  D7FC               	bra	u5337
  2180   004424  2E19               	decfsz	(??_turnLeft+1)^0,f,c
  2181   004426  D7FA               	bra	u5337
  2182   004428  D000               	nop2	
  2183   00442A                     l4818:
  2184   00442A  C014  FFD9         	movff	turnLeft@mL,fsr2l
  2185   00442E  C015  FFDA         	movff	turnLeft@mL+1,fsr2h
  2186   004432  0E1E               	movlw	30
  2187   004434  60DF               	cpfslt	indf2,c
  2188   004436  EF1F  F022         	goto	u4501
  2189   00443A  EF21  F022         	goto	u4500
  2190   00443E                     u4501:
  2191   00443E  EF2D  F022         	goto	l457
  2192   004442                     u4500:
  2193   004442  C016  FFD9         	movff	turnLeft@mR,fsr2l
  2194   004446  C017  FFDA         	movff	turnLeft@mR+1,fsr2h
  2195   00444A  0E1D               	movlw	29
  2196   00444C  64DF               	cpfsgt	indf2,c
  2197   00444E  EF2B  F022         	goto	u4511
  2198   004452  EF2D  F022         	goto	u4510
  2199   004456                     u4511:
  2200   004456  EFF1  F021         	goto	l4810
  2201   00445A                     u4510:
  2202   00445A                     l457:
  2203   00445A  0012               	return		;funcret
  2204   00445C                     __end_of_turnLeft:
  2205                           	callstack 0
  2206                           
  2207 ;; *************** function _stop *****************
  2208 ;; Defined at:
  2209 ;;		line 93 in file "dc_motor.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  2212 ;;		 -> motorL(9), 
  2213 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  2214 ;;		 -> motorR(9), 
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2228 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2229 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2230 ;;Total ram usage:        6 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		_setMotorPWM
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;;		_turnLeft45
  2238 ;;		_turnRight45
  2239 ;;		_reverseDetect
  2240 ;;		_reverseOneBlock
  2241 ;;		_ForwardOneBlock
  2242 ;;		_Forwardhalfblock
  2243 ;;		_Backhalfblock
  2244 ;;		_RetryMove
  2245 ;;		_go_Home
  2246 ;; This function uses a non-reentrant model
  2247 ;;
  2248                           
  2249                           	psect	text4
  2250   0044E4                     __ptext4:
  2251                           	callstack 0
  2252   0044E4                     _stop:
  2253                           	callstack 26
  2254   0044E4                     
  2255                           ;dc_motor.c: 93: void stop(struct DC_motor *mL,struct DC_motor *mR);dc_motor.c: 94: {;dc
      +                          _motor.c: 95:     while (mL->power >0 || mR->power >0){
  2256   0044E4  EF98  F022         	goto	l4804
  2257   0044E8                     l4796:
  2258                           
  2259                           ;dc_motor.c: 97:         mL->power-=10;
  2260   0044E8  C014  FFD9         	movff	stop@mL,fsr2l
  2261   0044EC  C015  FFDA         	movff	stop@mL+1,fsr2h
  2262   0044F0  0E0A               	movlw	10
  2263   0044F2  5EDF               	subwf	indf2,f,c
  2264                           
  2265                           ;dc_motor.c: 98:         mR->power-=10;
  2266   0044F4  C016  FFD9         	movff	stop@mR,fsr2l
  2267   0044F8  C017  FFDA         	movff	stop@mR+1,fsr2h
  2268   0044FC  0E0A               	movlw	10
  2269   0044FE  5EDF               	subwf	indf2,f,c
  2270   004500                     
  2271                           ;dc_motor.c: 103:         setMotorPWM(mL);
  2272   004500  C014  F00E         	movff	stop@mL,setMotorPWM@m
  2273   004504  C015  F00F         	movff	stop@mL+1,setMotorPWM@m+1
  2274   004508  EC39  F01E         	call	_setMotorPWM	;wreg free
  2275   00450C                     
  2276                           ;dc_motor.c: 104:         setMotorPWM(mR);
  2277   00450C  C016  F00E         	movff	stop@mR,setMotorPWM@m
  2278   004510  C017  F00F         	movff	stop@mR+1,setMotorPWM@m+1
  2279   004514  EC39  F01E         	call	_setMotorPWM	;wreg free
  2280   004518                     
  2281                           ;dc_motor.c: 106:         _delay((unsigned long)((20)*(64000000/4000.0)));
  2282   004518  0E02               	movlw	2
  2283   00451A  6E19               	movwf	(??_stop+1)^0,c
  2284   00451C  0EA0               	movlw	160
  2285   00451E  6E18               	movwf	??_stop^0,c
  2286   004520  0E92               	movlw	146
  2287   004522                     u5347:
  2288   004522  2EE8               	decfsz	wreg,f,c
  2289   004524  D7FE               	bra	u5347
  2290   004526  2E18               	decfsz	??_stop^0,f,c
  2291   004528  D7FC               	bra	u5347
  2292   00452A  2E19               	decfsz	(??_stop+1)^0,f,c
  2293   00452C  D7FA               	bra	u5347
  2294   00452E  D000               	nop2	
  2295   004530                     l4804:
  2296                           
  2297                           ;dc_motor.c: 95:     while (mL->power >0 || mR->power >0){
  2298   004530  C014  FFD9         	movff	stop@mL,fsr2l
  2299   004534  C015  FFDA         	movff	stop@mL+1,fsr2h
  2300   004538  50DF               	movf	indf2,w,c
  2301   00453A  A4D8               	btfss	status,2,c
  2302   00453C  EFA2  F022         	goto	u4481
  2303   004540  EFA4  F022         	goto	u4480
  2304   004544                     u4481:
  2305   004544  EF74  F022         	goto	l4796
  2306   004548                     u4480:
  2307   004548  C016  FFD9         	movff	stop@mR,fsr2l
  2308   00454C  C017  FFDA         	movff	stop@mR+1,fsr2h
  2309   004550  50DF               	movf	indf2,w,c
  2310   004552  A4D8               	btfss	status,2,c
  2311   004554  EFAE  F022         	goto	u4491
  2312   004558  EFB0  F022         	goto	u4490
  2313   00455C                     u4491:
  2314   00455C  EF74  F022         	goto	l4796
  2315   004560                     u4490:
  2316   004560  0012               	return		;funcret
  2317   004562                     __end_of_stop:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _setMotorPWM *****************
  2321 ;; Defined at:
  2322 ;;		line 68 in file "dc_motor.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  m               2   13[COMRAM] PTR struct DC_motor
  2325 ;;		 -> motorR(9), motorL(9), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  negDuty         1   18[COMRAM] unsigned char 
  2328 ;;  posDuty         1   17[COMRAM] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;Total ram usage:        6 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 1
  2345 ;; This function calls:
  2346 ;;		___lwdiv
  2347 ;;		___wmul
  2348 ;; This function is called by:
  2349 ;;		_stop
  2350 ;;		_turnLeft
  2351 ;;		_turnRight
  2352 ;;		_fullSpeedAhead
  2353 ;;		_timed_forward
  2354 ;;		_fullSpeedBack
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text5
  2359   003C72                     __ptext5:
  2360                           	callstack 0
  2361   003C72                     _setMotorPWM:
  2362                           	callstack 26
  2363   003C72                     
  2364                           ;dc_motor.c: 68: void setMotorPWM(struct DC_motor *m);dc_motor.c: 69: {;dc_motor.c: 70: 
      +                              unsigned char posDuty, negDuty;;dc_motor.c: 72:     if(m->brakemode) {
  2365   003C72  EE20 F002          	lfsr	2,2
  2366   003C76  500E               	movf	setMotorPWM@m^0,w,c
  2367   003C78  26D9               	addwf	fsr2l,f,c
  2368   003C7A  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2369   003C7C  22DA               	addwfc	fsr2h,f,c
  2370   003C7E  50DF               	movf	indf2,w,c
  2371   003C80  B4D8               	btfsc	status,2,c
  2372   003C82  EF45  F01E         	goto	u4021
  2373   003C86  EF47  F01E         	goto	u4020
  2374   003C8A                     u4021:
  2375   003C8A  EF7B  F01E         	goto	l4480
  2376   003C8E                     u4020:
  2377   003C8E                     
  2378                           ;dc_motor.c: 73:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2379   003C8E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2380   003C92  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2381   003C96  50DF               	movf	indf2,w,c
  2382   003C98  6E10               	movwf	??_setMotorPWM^0,c
  2383   003C9A  5010               	movf	??_setMotorPWM^0,w,c
  2384   003C9C  6E01               	movwf	___wmul@multiplier^0,c
  2385   003C9E  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2386   003CA0  EE20 F003          	lfsr	2,3
  2387   003CA4  500E               	movf	setMotorPWM@m^0,w,c
  2388   003CA6  26D9               	addwf	fsr2l,f,c
  2389   003CA8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2390   003CAA  22DA               	addwfc	fsr2h,f,c
  2391   003CAC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2392   003CB0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2393   003CB4  EC3C  F026         	call	___wmul	;wreg free
  2394   003CB8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2395   003CBC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2396   003CC0  0E00               	movlw	0
  2397   003CC2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2398   003CC4  0E64               	movlw	100
  2399   003CC6  6E09               	movwf	___lwdiv@divisor^0,c
  2400   003CC8  ECEE  F022         	call	___lwdiv	;wreg free
  2401   003CCC  EE20 F003          	lfsr	2,3
  2402   003CD0  500E               	movf	setMotorPWM@m^0,w,c
  2403   003CD2  26D9               	addwf	fsr2l,f,c
  2404   003CD4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2405   003CD6  22DA               	addwfc	fsr2h,f,c
  2406   003CD8  50DF               	movf	indf2,w,c
  2407   003CDA  6E11               	movwf	(??_setMotorPWM+1)^0,c
  2408   003CDC  5007               	movf	?___lwdiv^0,w,c
  2409   003CDE  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  2410   003CE0  6E12               	movwf	setMotorPWM@posDuty^0,c
  2411   003CE2                     
  2412                           ;dc_motor.c: 74:         negDuty=m->PWMperiod;
  2413   003CE2  EE20 F003          	lfsr	2,3
  2414   003CE6  500E               	movf	setMotorPWM@m^0,w,c
  2415   003CE8  26D9               	addwf	fsr2l,f,c
  2416   003CEA  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2417   003CEC  22DA               	addwfc	fsr2h,f,c
  2418   003CEE  50DF               	movf	indf2,w,c
  2419   003CF0  6E13               	movwf	setMotorPWM@negDuty^0,c
  2420                           
  2421                           ;dc_motor.c: 75:     }
  2422   003CF2  EF9E  F01E         	goto	l4484
  2423   003CF6                     l4480:
  2424                           
  2425                           ;dc_motor.c: 77:         posDuty=0;
  2426   003CF6  0E00               	movlw	0
  2427   003CF8  6E12               	movwf	setMotorPWM@posDuty^0,c
  2428   003CFA                     
  2429                           ;dc_motor.c: 78:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2430   003CFA  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  2431   003CFE  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2432   003D02  50DF               	movf	indf2,w,c
  2433   003D04  6E10               	movwf	??_setMotorPWM^0,c
  2434   003D06  5010               	movf	??_setMotorPWM^0,w,c
  2435   003D08  6E01               	movwf	___wmul@multiplier^0,c
  2436   003D0A  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2437   003D0C  EE20 F003          	lfsr	2,3
  2438   003D10  500E               	movf	setMotorPWM@m^0,w,c
  2439   003D12  26D9               	addwf	fsr2l,f,c
  2440   003D14  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2441   003D16  22DA               	addwfc	fsr2h,f,c
  2442   003D18  CFDE F003          	movff	postinc2,___wmul@multiplicand
  2443   003D1C  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  2444   003D20  EC3C  F026         	call	___wmul	;wreg free
  2445   003D24  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2446   003D28  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2447   003D2C  0E00               	movlw	0
  2448   003D2E  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2449   003D30  0E64               	movlw	100
  2450   003D32  6E09               	movwf	___lwdiv@divisor^0,c
  2451   003D34  ECEE  F022         	call	___lwdiv	;wreg free
  2452   003D38  5007               	movf	?___lwdiv^0,w,c
  2453   003D3A  6E13               	movwf	setMotorPWM@negDuty^0,c
  2454   003D3C                     l4484:
  2455                           
  2456                           ;dc_motor.c: 81:     if (m->direction) {
  2457   003D3C  EE20 F001          	lfsr	2,1
  2458   003D40  500E               	movf	setMotorPWM@m^0,w,c
  2459   003D42  26D9               	addwf	fsr2l,f,c
  2460   003D44  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2461   003D46  22DA               	addwfc	fsr2h,f,c
  2462   003D48  50DF               	movf	indf2,w,c
  2463   003D4A  B4D8               	btfsc	status,2,c
  2464   003D4C  EFAA  F01E         	goto	u4031
  2465   003D50  EFAC  F01E         	goto	u4030
  2466   003D54                     u4031:
  2467   003D54  EFCE  F01E         	goto	l4488
  2468   003D58                     u4030:
  2469   003D58                     
  2470                           ;dc_motor.c: 83:         *(m->posDutyHighByte)=posDuty;
  2471   003D58  EE20 F005          	lfsr	2,5
  2472   003D5C  500E               	movf	setMotorPWM@m^0,w,c
  2473   003D5E  26D9               	addwf	fsr2l,f,c
  2474   003D60  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2475   003D62  22DA               	addwfc	fsr2h,f,c
  2476   003D64  CFDE F010          	movff	postinc2,??_setMotorPWM
  2477   003D68  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2478   003D6C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2479   003D70  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2480   003D74  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2481                           
  2482                           ;dc_motor.c: 84:         *(m->negDutyHighByte)=negDuty;
  2483   003D78  EE20 F007          	lfsr	2,7
  2484   003D7C  500E               	movf	setMotorPWM@m^0,w,c
  2485   003D7E  26D9               	addwf	fsr2l,f,c
  2486   003D80  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2487   003D82  22DA               	addwfc	fsr2h,f,c
  2488   003D84  CFDE F010          	movff	postinc2,??_setMotorPWM
  2489   003D88  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2490   003D8C  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2491   003D90  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2492   003D94  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2493                           
  2494                           ;dc_motor.c: 86:     } else {
  2495   003D98  EFEE  F01E         	goto	l443
  2496   003D9C                     l4488:
  2497                           
  2498                           ;dc_motor.c: 87:         *(m->posDutyHighByte)=negDuty;
  2499   003D9C  EE20 F005          	lfsr	2,5
  2500   003DA0  500E               	movf	setMotorPWM@m^0,w,c
  2501   003DA2  26D9               	addwf	fsr2l,f,c
  2502   003DA4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2503   003DA6  22DA               	addwfc	fsr2h,f,c
  2504   003DA8  CFDE F010          	movff	postinc2,??_setMotorPWM
  2505   003DAC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2506   003DB0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2507   003DB4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2508   003DB8  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  2509                           
  2510                           ;dc_motor.c: 88:         *(m->negDutyHighByte)=posDuty;
  2511   003DBC  EE20 F007          	lfsr	2,7
  2512   003DC0  500E               	movf	setMotorPWM@m^0,w,c
  2513   003DC2  26D9               	addwf	fsr2l,f,c
  2514   003DC4  500F               	movf	(setMotorPWM@m+1)^0,w,c
  2515   003DC6  22DA               	addwfc	fsr2h,f,c
  2516   003DC8  CFDE F010          	movff	postinc2,??_setMotorPWM
  2517   003DCC  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  2518   003DD0  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  2519   003DD4  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2520   003DD8  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  2521   003DDC                     l443:
  2522   003DDC  0012               	return		;funcret
  2523   003DDE                     __end_of_setMotorPWM:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function ___wmul *****************
  2527 ;; Defined at:
  2528 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  multiplier      2    0[COMRAM] unsigned int 
  2531 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  product         2    4[COMRAM] unsigned int 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  2    0[COMRAM] unsigned int 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, prodl, prodh
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2543 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2544 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;Total ram usage:        6 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_setMotorPWM
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text6
  2557   004C78                     __ptext6:
  2558                           	callstack 0
  2559   004C78                     ___wmul:
  2560                           	callstack 26
  2561   004C78  5001               	movf	___wmul@multiplier^0,w,c
  2562   004C7A  0203               	mulwf	___wmul@multiplicand^0,c
  2563   004C7C  CFF3 F005          	movff	prodl,___wmul@product
  2564   004C80  CFF4 F006          	movff	prodh,___wmul@product+1
  2565   004C84  5001               	movf	___wmul@multiplier^0,w,c
  2566   004C86  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2567   004C88  50F3               	movf	243,w,c
  2568   004C8A  2606               	addwf	(___wmul@product+1)^0,f,c
  2569   004C8C  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2570   004C8E  0203               	mulwf	___wmul@multiplicand^0,c
  2571   004C90  50F3               	movf	243,w,c
  2572   004C92  2606               	addwf	(___wmul@product+1)^0,f,c
  2573   004C94  C005  F001         	movff	___wmul@product,?___wmul
  2574   004C98  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2575   004C9C  0012               	return		;funcret
  2576   004C9E                     __end_of___wmul:
  2577                           	callstack 0
  2578                           
  2579 ;; *************** function ___lwdiv *****************
  2580 ;; Defined at:
  2581 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;  dividend        2    6[COMRAM] unsigned int 
  2584 ;;  divisor         2    8[COMRAM] unsigned int 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  quotient        2   10[COMRAM] unsigned int 
  2587 ;;  counter         1   12[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  2    6[COMRAM] unsigned int 
  2590 ;; Registers used:
  2591 ;;		wreg, status,2, status,0
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2598 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;Total ram usage:        7 bytes
  2602 ;; Hardware stack levels used: 1
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_setMotorPWM
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text7
  2611   0045DC                     __ptext7:
  2612                           	callstack 0
  2613   0045DC                     ___lwdiv:
  2614                           	callstack 26
  2615   0045DC  0E00               	movlw	0
  2616   0045DE  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2617   0045E0  0E00               	movlw	0
  2618   0045E2  6E0B               	movwf	___lwdiv@quotient^0,c
  2619   0045E4  5009               	movf	___lwdiv@divisor^0,w,c
  2620   0045E6  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2621   0045E8  B4D8               	btfsc	status,2,c
  2622   0045EA  EFF9  F022         	goto	u3741
  2623   0045EE  EFFB  F022         	goto	u3740
  2624   0045F2                     u3741:
  2625   0045F2  EF23  F023         	goto	l1146
  2626   0045F6                     u3740:
  2627   0045F6  0E01               	movlw	1
  2628   0045F8  6E0D               	movwf	___lwdiv@counter^0,c
  2629   0045FA  EF03  F023         	goto	l4368
  2630   0045FE                     l4366:
  2631   0045FE  90D8               	bcf	status,0,c
  2632   004600  3609               	rlcf	___lwdiv@divisor^0,f,c
  2633   004602  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2634   004604  2A0D               	incf	___lwdiv@counter^0,f,c
  2635   004606                     l4368:
  2636   004606  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2637   004608  EF08  F023         	goto	u3751
  2638   00460C  EF0A  F023         	goto	u3750
  2639   004610                     u3751:
  2640   004610  EFFF  F022         	goto	l4366
  2641   004614                     u3750:
  2642   004614                     l4370:
  2643   004614  90D8               	bcf	status,0,c
  2644   004616  360B               	rlcf	___lwdiv@quotient^0,f,c
  2645   004618  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2646   00461A  5009               	movf	___lwdiv@divisor^0,w,c
  2647   00461C  5C07               	subwf	___lwdiv@dividend^0,w,c
  2648   00461E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2649   004620  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2650   004622  A0D8               	btfss	status,0,c
  2651   004624  EF16  F023         	goto	u3761
  2652   004628  EF18  F023         	goto	u3760
  2653   00462C                     u3761:
  2654   00462C  EF1D  F023         	goto	l4378
  2655   004630                     u3760:
  2656   004630  5009               	movf	___lwdiv@divisor^0,w,c
  2657   004632  5E07               	subwf	___lwdiv@dividend^0,f,c
  2658   004634  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2659   004636  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2660   004638  800B               	bsf	___lwdiv@quotient^0,0,c
  2661   00463A                     l4378:
  2662   00463A  90D8               	bcf	status,0,c
  2663   00463C  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2664   00463E  3209               	rrcf	___lwdiv@divisor^0,f,c
  2665   004640  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2666   004642  EF0A  F023         	goto	l4370
  2667   004646                     l1146:
  2668   004646  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2669   00464A  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2670   00464E  0012               	return		;funcret
  2671   004650                     __end_of___lwdiv:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _TurnDelay *****************
  2675 ;; Defined at:
  2676 ;;		line 204 in file "dc_motor.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  Turn45Delay     2    0[COMRAM] int 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;Total ram usage:        3 bytes
  2695 ;; Hardware stack levels used: 1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_turnLeft45
  2700 ;;		_turnRight45
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text8
  2705   004BC0                     __ptext8:
  2706                           	callstack 0
  2707   004BC0                     _TurnDelay:
  2708                           	callstack 28
  2709   004BC0                     
  2710                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  2711   004BC0  EFED  F025         	goto	l492
  2712   004BC4                     l4866:
  2713                           
  2714                           ;dc_motor.c: 206:         _delay((unsigned long)((1)*(64000000/4000.0)));
  2715   004BC4  0E15               	movlw	21
  2716   004BC6  6E03               	movwf	??_TurnDelay^0,c
  2717   004BC8  0EC6               	movlw	198
  2718   004BCA                     u5357:
  2719   004BCA  2EE8               	decfsz	wreg,f,c
  2720   004BCC  D7FE               	bra	u5357
  2721   004BCE  2E03               	decfsz	??_TurnDelay^0,f,c
  2722   004BD0  D7FC               	bra	u5357
  2723   004BD2  D000               	nop2	
  2724   004BD4                     
  2725                           ;dc_motor.c: 207:         Turn45Delay--;
  2726   004BD4  0601               	decf	TurnDelay@Turn45Delay^0,f,c
  2727   004BD6  A0D8               	btfss	status,0,c
  2728   004BD8  0602               	decf	(TurnDelay@Turn45Delay+1)^0,f,c
  2729   004BDA                     l492:
  2730                           
  2731                           ;dc_motor.c: 205:     while (Turn45Delay>0){
  2732   004BDA  BE02               	btfsc	(TurnDelay@Turn45Delay+1)^0,7,c
  2733   004BDC  EFFA  F025         	goto	u4580
  2734   004BE0  5002               	movf	(TurnDelay@Turn45Delay+1)^0,w,c
  2735   004BE2  E106               	bnz	u4581
  2736   004BE4  0401               	decf	TurnDelay@Turn45Delay^0,w,c
  2737   004BE6  B0D8               	btfsc	status,0,c
  2738   004BE8  EFF8  F025         	goto	u4581
  2739   004BEC  EFFA  F025         	goto	u4580
  2740   004BF0                     u4581:
  2741   004BF0  EFE2  F025         	goto	l4866
  2742   004BF4                     u4580:
  2743   004BF4  0012               	return		;funcret
  2744   004BF6                     __end_of_TurnDelay:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _sprintf *****************
  2748 ;; Defined at:
  2749 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  s               2   80[BANK0 ] PTR unsigned char 
  2752 ;;		 -> main@buf(100), 
  2753 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  2754 ;;		 -> STR_2(35), STR_1(44), 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  f              11  102[BANK0 ] struct _IO_FILE
  2757 ;;  ap              2  100[BANK0 ] PTR void [1]
  2758 ;;		 -> ?_sprintf(2), 
  2759 ;;  ret             2    0        int 
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  2   80[BANK0 ] int 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2769 ;;      Params:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2770 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;Total ram usage:       33 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 7
  2776 ;; This function calls:
  2777 ;;		_vfprintf
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text9
  2784   00476A                     __ptext9:
  2785                           	callstack 0
  2786   00476A                     _sprintf:
  2787                           	callstack 23
  2788   00476A  0EB4               	movlw	low (?_sprintf+4)
  2789   00476C  0100               	movlb	0	; () banked
  2790   00476E  6FC4               	movwf	sprintf@ap& (0+255),b
  2791   004770  0E00               	movlw	high (?_sprintf+4)
  2792   004772  6FC5               	movwf	(sprintf@ap+1)& (0+255),b
  2793   004774  C0B0  F0C6         	movff	sprintf@s,sprintf@f
  2794   004778  C0B1  F0C7         	movff	sprintf@s+1,sprintf@f+1
  2795   00477C                     
  2796                           ; BSR set to: 0
  2797   00477C  0E00               	movlw	0
  2798   00477E  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  2799   004780  0E00               	movlw	0
  2800   004782  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  2801   004784                     
  2802                           ; BSR set to: 0
  2803   004784  0E00               	movlw	0
  2804   004786  6FD0               	movwf	(sprintf@f+10)& (0+255),b
  2805   004788  0E00               	movlw	0
  2806   00478A  6FCF               	movwf	(sprintf@f+9)& (0+255),b
  2807   00478C                     
  2808                           ; BSR set to: 0
  2809   00478C  0EC6               	movlw	low sprintf@f
  2810   00478E  6FA8               	movwf	vfprintf@fp& (0+255),b
  2811   004790  0E00               	movlw	high sprintf@f
  2812   004792  6FA9               	movwf	(vfprintf@fp+1)& (0+255),b
  2813   004794  C0B2  F0AA         	movff	sprintf@fmt,vfprintf@fmt
  2814   004798  C0B3  F0AB         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2815   00479C  0EC4               	movlw	low sprintf@ap
  2816   00479E  6FAC               	movwf	vfprintf@ap& (0+255),b
  2817   0047A0  0E00               	movlw	high sprintf@ap
  2818   0047A2  6FAD               	movwf	(vfprintf@ap+1)& (0+255),b
  2819   0047A4  EC8A  F023         	call	_vfprintf	;wreg free
  2820   0047A8  0100               	movlb	0	; () banked
  2821   0047AA  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  2822   0047AC  25B0               	addwf	sprintf@s& (0+255),w,b
  2823   0047AE  6ED9               	movwf	fsr2l,c
  2824   0047B0  51CA               	movf	(sprintf@f+4)& (0+255),w,b
  2825   0047B2  21B1               	addwfc	(sprintf@s+1)& (0+255),w,b
  2826   0047B4  6EDA               	movwf	fsr2h,c
  2827   0047B6  0E00               	movlw	0
  2828   0047B8  6EDF               	movwf	indf2,c
  2829   0047BA                     
  2830                           ; BSR set to: 0
  2831   0047BA  0012               	return		;funcret
  2832   0047BC                     __end_of_sprintf:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _vfprintf *****************
  2836 ;; Defined at:
  2837 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  2840 ;;		 -> sprintf@f(11), 
  2841 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  2842 ;;		 -> STR_2(35), STR_1(44), 
  2843 ;;  ap              2   76[BANK0 ] PTR PTR void 
  2844 ;;		 -> sprintf@ap(2), 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  cfmt            2   78[BANK0 ] PTR unsigned char 
  2847 ;;		 -> STR_2(35), STR_1(44), 
  2848 ;; Return value:  Size  Location     Type
  2849 ;;                  2   72[BANK0 ] int 
  2850 ;; Registers used:
  2851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2857 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;Total ram usage:        8 bytes
  2862 ;; Hardware stack levels used: 1
  2863 ;; Hardware stack levels required when called: 6
  2864 ;; This function calls:
  2865 ;;		_vfpfcnvrt
  2866 ;; This function is called by:
  2867 ;;		_sprintf
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text10
  2872   004714                     __ptext10:
  2873                           	callstack 0
  2874   004714                     _vfprintf:
  2875                           	callstack 23
  2876   004714                     
  2877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2878   004714  C0AA  F0AE         	movff	vfprintf@fmt,vfprintf@cfmt
  2879   004718  C0AB  F0AF         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2880                           
  2881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2882   00471C  EF9F  F023         	goto	l5072
  2883   004720                     l5070:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2886   004720  C0A8  F095         	movff	vfprintf@fp,vfpfcnvrt@fp
  2887   004724  C0A9  F096         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2888   004728  0EAE               	movlw	low vfprintf@cfmt
  2889   00472A  0100               	movlb	0	; () banked
  2890   00472C  6F97               	movwf	vfpfcnvrt@fmt& (0+255),b
  2891   00472E  0E00               	movlw	high vfprintf@cfmt
  2892   004730  6F98               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2893   004732  C0AC  F099         	movff	vfprintf@ap,vfpfcnvrt@ap
  2894   004736  C0AD  F09A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2895   00473A  ECA6  F016         	call	_vfpfcnvrt	;wreg free
  2896   00473E                     l5072:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2899   00473E  C0AE  FFF6         	movff	vfprintf@cfmt,tblptrl
  2900   004742  C0AF  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2901   004746                     	if	0	;tblptru may be non-zero
  2902   004746                     	endif
  2903   004746                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2904   004746  0E00               	movlw	low (__mediumconst shr (0+16))
  2905   004748  6EF8               	movwf	tblptru,c
  2906   00474A                     	endif
  2907   00474A  0008               	tblrd		*
  2908   00474C  50F5               	movf	tablat,w,c
  2909   00474E  0900               	iorlw	0
  2910   004750  A4D8               	btfss	status,2,c
  2911   004752  EFAD  F023         	goto	u4741
  2912   004756  EFAF  F023         	goto	u4740
  2913   00475A                     u4741:
  2914   00475A  EF90  F023         	goto	l5070
  2915   00475E                     u4740:
  2916   00475E                     
  2917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2918   00475E  0E00               	movlw	0
  2919   004760  0100               	movlb	0	; () banked
  2920   004762  6FA9               	movwf	(?_vfprintf+1)& (0+255),b
  2921   004764  0E00               	movlw	0
  2922   004766  6FA8               	movwf	?_vfprintf& (0+255),b
  2923   004768                     
  2924                           ; BSR set to: 0
  2925   004768  0012               	return		;funcret
  2926   00476A                     __end_of_vfprintf:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _vfpfcnvrt *****************
  2930 ;; Defined at:
  2931 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  fp              2   53[BANK0 ] PTR struct _IO_FILE
  2934 ;;		 -> sprintf@f(11), 
  2935 ;;  fmt             2   55[BANK0 ] PTR PTR unsigned char 
  2936 ;;		 -> vfprintf@cfmt(2), 
  2937 ;;  ap              2   57[BANK0 ] PTR PTR void 
  2938 ;;		 -> sprintf@ap(2), 
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  convarg         8   61[BANK0 ] struct .
  2941 ;;  cp              2   70[BANK0 ] PTR unsigned char 
  2942 ;;		 -> STR_2(35), STR_1(44), 
  2943 ;;  i               2    0        int 
  2944 ;;  done            2    0        int 
  2945 ;;  c               1   69[BANK0 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2955 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;Total ram usage:       19 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 5
  2962 ;; This function calls:
  2963 ;;		_dtoa
  2964 ;;		_efgtoa
  2965 ;;		_fputc
  2966 ;; This function is called by:
  2967 ;;		_vfprintf
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text11
  2972   002D4C                     __ptext11:
  2973                           	callstack 0
  2974   002D4C                     _vfpfcnvrt:
  2975                           	callstack 23
  2976   002D4C                     
  2977                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2978   002D4C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2979   002D50  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2980   002D54  CFDE FFF6          	movff	postinc2,tblptrl
  2981   002D58  CFDD FFF7          	movff	postdec2,tblptrh
  2982   002D5C                     	if	0	;tblptru may be non-zero
  2983   002D5C                     	endif
  2984   002D5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2985   002D5C  0E00               	movlw	low (__mediumconst shr (0+16))
  2986   002D5E  6EF8               	movwf	tblptru,c
  2987   002D60                     	endif
  2988   002D60  0008               	tblrd		*
  2989   002D62  50F5               	movf	tablat,w,c
  2990   002D64  0A25               	xorlw	37
  2991   002D66  A4D8               	btfss	status,2,c
  2992   002D68  EFB8  F016         	goto	u4591
  2993   002D6C  EFBA  F016         	goto	u4590
  2994   002D70                     u4591:
  2995   002D70  EF12  F018         	goto	l4928
  2996   002D74                     u4590:
  2997   002D74                     
  2998                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2999   002D74  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3000   002D78  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3001   002D7C  2ADE               	incf	postinc2,f,c
  3002   002D7E  0E00               	movlw	0
  3003   002D80  22DD               	addwfc	postdec2,f,c
  3004   002D82                     
  3005                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3006   002D82  0E00               	movlw	0
  3007   002D84  0100               	movlb	0	; () banked
  3008   002D86  6FF0               	movwf	(_width+1)& (0+255),b
  3009   002D88  0E00               	movlw	0
  3010   002D8A  6FEF               	movwf	_width& (0+255),b
  3011   002D8C  C0EF  F0F5         	movff	_width,_flags
  3012   002D90                     
  3013                           ; BSR set to: 0
  3014                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3015   002D90  69F1               	setf	_prec& (0+255),b
  3016   002D92  69F2               	setf	(_prec+1)& (0+255),b
  3017   002D94                     
  3018                           ; BSR set to: 0
  3019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3020   002D94  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3021   002D98  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3022   002D9C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3023   002DA0  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3024   002DA4                     
  3025                           ; BSR set to: 0
  3026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3027   002DA4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3028   002DA8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3029   002DAC                     	if	0	;tblptru may be non-zero
  3030   002DAC                     	endif
  3031   002DAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3032   002DAC  0E00               	movlw	low (__mediumconst shr (0+16))
  3033   002DAE  6EF8               	movwf	tblptru,c
  3034   002DB0                     	endif
  3035   002DB0  0008               	tblrd		*
  3036   002DB2  50F5               	movf	tablat,w,c
  3037   002DB4  0A64               	xorlw	100
  3038   002DB6  B4D8               	btfsc	status,2,c
  3039   002DB8  EFE0  F016         	goto	u4601
  3040   002DBC  EFE2  F016         	goto	u4600
  3041   002DC0                     u4601:
  3042   002DC0  EFF2  F016         	goto	l4884
  3043   002DC4                     u4600:
  3044   002DC4                     
  3045                           ; BSR set to: 0
  3046   002DC4  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3047   002DC8  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3048   002DCC                     	if	0	;tblptru may be non-zero
  3049   002DCC                     	endif
  3050   002DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3051   002DCC  0E00               	movlw	low (__mediumconst shr (0+16))
  3052   002DCE  6EF8               	movwf	tblptru,c
  3053   002DD0                     	endif
  3054   002DD0  0008               	tblrd		*
  3055   002DD2  50F5               	movf	tablat,w,c
  3056   002DD4  0A69               	xorlw	105
  3057   002DD6  A4D8               	btfss	status,2,c
  3058   002DD8  EFF0  F016         	goto	u4611
  3059   002DDC  EFF2  F016         	goto	u4610
  3060   002DE0                     u4611:
  3061   002DE0  EF35  F017         	goto	l4890
  3062   002DE4                     u4610:
  3063   002DE4                     l4884:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3067   002DE4  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3068   002DE8  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3069   002DEC  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3070   002DF0  0E02               	movlw	2
  3071   002DF2  26DE               	addwf	postinc2,f,c
  3072   002DF4  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3073   002DF8  0E00               	movlw	0
  3074   002DFA  22DD               	addwfc	postdec2,f,c
  3075   002DFC  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3076   002E00  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3077   002E04  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3078   002E08  CFDD F09E          	movff	postdec2,vfpfcnvrt@convarg+1
  3079   002E0C  0E00               	movlw	0
  3080   002E0E  BF9E               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3081   002E10  0EFF               	movlw	-1
  3082   002E12  6F9F               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3083   002E14  6FA0               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3084   002E16  6FA1               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  3085   002E18  6FA2               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  3086   002E1A  6FA3               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  3087   002E1C  6FA4               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3090   002E1E  0E01               	movlw	1
  3091   002E20  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3092   002E22  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3093   002E24  0E00               	movlw	0
  3094   002E26  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3095   002E28  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3096   002E2A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3097   002E2E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3098   002E32  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3099   002E36  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3100   002E3A                     
  3101                           ; BSR set to: 0
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3103   002E3A  C095  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3104   002E3E  C096  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3105   002E42  C09D  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3106   002E46  C09E  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3107   002E4A  C09F  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3108   002E4E  C0A0  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3109   002E52  C0A1  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3110   002E56  C0A2  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3111   002E5A  C0A3  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3112   002E5E  C0A4  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3113   002E62  EC29  F018         	call	_dtoa	;wreg free
  3114   002E66  EF28  F018         	goto	l1447
  3115   002E6A                     l4890:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  3119   002E6A  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3120   002E6E  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3121   002E72  CFDE F0A6          	movff	postinc2,vfpfcnvrt@cp
  3122   002E76  CFDD F0A7          	movff	postdec2,vfpfcnvrt@cp+1
  3123   002E7A                     
  3124                           ; BSR set to: 0
  3125                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  3126   002E7A  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3127   002E7E  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3128   002E82                     	if	0	;tblptru may be non-zero
  3129   002E82                     	endif
  3130   002E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3131   002E82  0E00               	movlw	low (__mediumconst shr (0+16))
  3132   002E84  6EF8               	movwf	tblptru,c
  3133   002E86                     	endif
  3134   002E86  0008               	tblrd		*
  3135   002E88  CFF5 F0A5          	movff	tablat,vfpfcnvrt@c
  3136                           
  3137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  3138   002E8C  EF54  F017         	goto	l4902
  3139   002E90                     l4894:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  3143   002E90  4BA6               	infsnz	vfpfcnvrt@cp& (0+255),f,b
  3144   002E92  2BA7               	incf	(vfpfcnvrt@cp+1)& (0+255),f,b
  3145                           
  3146                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  3147   002E94  EF6D  F017         	goto	l4904
  3148   002E98                     l4896:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  3152   002E98  0E6C               	movlw	108
  3153   002E9A  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  3156   002E9C  EF6D  F017         	goto	l4904
  3157   002EA0                     l4898:
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  3161   002EA0  0E00               	movlw	0
  3162   002EA2  6FA5               	movwf	vfpfcnvrt@c& (0+255),b
  3163                           
  3164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  3165   002EA4  EF6D  F017         	goto	l4904
  3166   002EA8                     l4902:
  3167                           
  3168                           ; BSR set to: 0
  3169   002EA8  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3170   002EAA  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3171   002EAC  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3172                           
  3173                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3174                           ; Switch size 1, requested type "simple"
  3175                           ; Number of cases is 1, Range of values is 0 to 0
  3176                           ; switch strategies available:
  3177                           ; Name         Instructions Cycles
  3178                           ; simple_byte            4     3 (average)
  3179                           ;	Chosen strategy is simple_byte
  3180   002EAE  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3181   002EB0  0A00               	xorlw	0	; case 0
  3182   002EB2  B4D8               	btfsc	status,2,c
  3183   002EB4  EF5E  F017         	goto	l5864
  3184   002EB8  EF50  F017         	goto	l4898
  3185   002EBC                     l5864:
  3186                           
  3187                           ; BSR set to: 0
  3188                           ; Switch size 1, requested type "simple"
  3189                           ; Number of cases is 3, Range of values is 76 to 108
  3190                           ; switch strategies available:
  3191                           ; Name         Instructions Cycles
  3192                           ; simple_byte           10     6 (average)
  3193                           ;	Chosen strategy is simple_byte
  3194   002EBC  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3195   002EBE  0A4C               	xorlw	76	; case 76
  3196   002EC0  B4D8               	btfsc	status,2,c
  3197   002EC2  EF48  F017         	goto	l4894
  3198   002EC6  0A2A               	xorlw	42	; case 102
  3199   002EC8  B4D8               	btfsc	status,2,c
  3200   002ECA  EF4C  F017         	goto	l4896
  3201   002ECE  0A0A               	xorlw	10	; case 108
  3202   002ED0  B4D8               	btfsc	status,2,c
  3203   002ED2  EF48  F017         	goto	l4894
  3204   002ED6  EF50  F017         	goto	l4898
  3205   002EDA                     l4904:
  3206                           
  3207                           ; BSR set to: 0
  3208   002EDA  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3209   002EDE  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3210   002EE2                     	if	0	;tblptru may be non-zero
  3211   002EE2                     	endif
  3212   002EE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3213   002EE2  0E00               	movlw	low (__mediumconst shr (0+16))
  3214   002EE4  6EF8               	movwf	tblptru,c
  3215   002EE6                     	endif
  3216   002EE6  0008               	tblrd		*
  3217   002EE8  50F5               	movf	tablat,w,c
  3218   002EEA  0A66               	xorlw	102
  3219   002EEC  A4D8               	btfss	status,2,c
  3220   002EEE  EF7B  F017         	goto	u4621
  3221   002EF2  EF7D  F017         	goto	u4620
  3222   002EF6                     u4621:
  3223   002EF6  EF09  F018         	goto	l4924
  3224   002EFA                     u4620:
  3225   002EFA  EFB3  F017         	goto	l4912
  3226   002EFE                     l4906:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3230   002EFE  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3231   002F02  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3232   002F06  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3233   002F0A  0E04               	movlw	4
  3234   002F0C  26DE               	addwf	postinc2,f,c
  3235   002F0E  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3236   002F12  0E00               	movlw	0
  3237   002F14  22DD               	addwfc	postdec2,f,c
  3238   002F16  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3239   002F1A  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3240   002F1E  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3241   002F22  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3242   002F26  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3243   002F2A  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  3246   002F2E  EFC8  F017         	goto	l4914
  3247   002F32                     l4908:
  3248                           
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3251   002F32  C099  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3252   002F36  C09A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3253   002F3A  CFDF F09B          	movff	indf2,??_vfpfcnvrt
  3254   002F3E  0E04               	movlw	4
  3255   002F40  26DE               	addwf	postinc2,f,c
  3256   002F42  CFDF F09C          	movff	indf2,??_vfpfcnvrt+1
  3257   002F46  0E00               	movlw	0
  3258   002F48  22DD               	addwfc	postdec2,f,c
  3259   002F4A  C09B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3260   002F4E  C09C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3261   002F52  CFDE F09D          	movff	postinc2,vfpfcnvrt@convarg
  3262   002F56  CFDE F09E          	movff	postinc2,vfpfcnvrt@convarg+1
  3263   002F5A  CFDE F09F          	movff	postinc2,vfpfcnvrt@convarg+2
  3264   002F5E  CFDE F0A0          	movff	postinc2,vfpfcnvrt@convarg+3
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  3267   002F62  EFC8  F017         	goto	l4914
  3268   002F66                     l4912:
  3269                           
  3270                           ; BSR set to: 0
  3271   002F66  51A5               	movf	vfpfcnvrt@c& (0+255),w,b
  3272   002F68  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3273   002F6A  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3274                           
  3275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 1, Range of values is 0 to 0
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            4     3 (average)
  3281                           ;	Chosen strategy is simple_byte
  3282   002F6C  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3283   002F6E  0A00               	xorlw	0	; case 0
  3284   002F70  B4D8               	btfsc	status,2,c
  3285   002F72  EFBD  F017         	goto	l5866
  3286   002F76  EFC8  F017         	goto	l4914
  3287   002F7A                     l5866:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ; Switch size 1, requested type "simple"
  3291                           ; Number of cases is 2, Range of values is 76 to 108
  3292                           ; switch strategies available:
  3293                           ; Name         Instructions Cycles
  3294                           ; simple_byte            7     4 (average)
  3295                           ;	Chosen strategy is simple_byte
  3296   002F7A  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3297   002F7C  0A4C               	xorlw	76	; case 76
  3298   002F7E  B4D8               	btfsc	status,2,c
  3299   002F80  EF99  F017         	goto	l4908
  3300   002F84  0A20               	xorlw	32	; case 108
  3301   002F86  B4D8               	btfsc	status,2,c
  3302   002F88  EF7F  F017         	goto	l4906
  3303   002F8C  EFC8  F017         	goto	l4914
  3304   002F90                     l4914:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  3308   002F90  0E01               	movlw	1
  3309   002F92  25A6               	addwf	vfpfcnvrt@cp& (0+255),w,b
  3310   002F94  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3311   002F96  0E00               	movlw	0
  3312   002F98  21A7               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  3313   002F9A  6F9C               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3314   002F9C  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3315   002FA0  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3316   002FA4  C09B  FFDE         	movff	??_vfpfcnvrt,postinc2
  3317   002FA8  C09C  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3318                           
  3319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  3320   002FAC  EFF1  F017         	goto	l4922
  3321   002FB0                     l4916:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3325   002FB0  C095  F060         	movff	vfpfcnvrt@fp,efgtoa@fp
  3326   002FB4  C096  F061         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3327   002FB8  C09D  F062         	movff	vfpfcnvrt@convarg,efgtoa@f
  3328   002FBC  C09E  F063         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3329   002FC0  C09F  F064         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3330   002FC4  C0A0  F065         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3331   002FC8  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3332   002FCC  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3333   002FD0                     	if	0	;tblptru may be non-zero
  3334   002FD0                     	endif
  3335   002FD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3336   002FD0  0E00               	movlw	low (__mediumconst shr (0+16))
  3337   002FD2  6EF8               	movwf	tblptru,c
  3338   002FD4                     	endif
  3339   002FD4  0008               	tblrd		*
  3340   002FD6  CFF5 F066          	movff	tablat,efgtoa@c
  3341   002FDA  EC2D  F007         	call	_efgtoa	;wreg free
  3342   002FDE  EF28  F018         	goto	l1447
  3343   002FE2                     l4922:
  3344                           
  3345                           ; BSR set to: 0
  3346   002FE2  C0A6  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3347   002FE6  C0A7  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3348   002FEA                     	if	0	;tblptru may be non-zero
  3349   002FEA                     	endif
  3350   002FEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3351   002FEA  0E00               	movlw	low (__mediumconst shr (0+16))
  3352   002FEC  6EF8               	movwf	tblptru,c
  3353   002FEE                     	endif
  3354   002FEE  0008               	tblrd		*
  3355   002FF0  50F5               	movf	tablat,w,c
  3356   002FF2  6F9B               	movwf	??_vfpfcnvrt& (0+255),b
  3357   002FF4  6B9C               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  3358                           
  3359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3360                           ; Switch size 1, requested type "simple"
  3361                           ; Number of cases is 1, Range of values is 0 to 0
  3362                           ; switch strategies available:
  3363                           ; Name         Instructions Cycles
  3364                           ; simple_byte            4     3 (average)
  3365                           ;	Chosen strategy is simple_byte
  3366   002FF6  519C               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3367   002FF8  0A00               	xorlw	0	; case 0
  3368   002FFA  B4D8               	btfsc	status,2,c
  3369   002FFC  EF02  F018         	goto	l5868
  3370   003000  EF09  F018         	goto	l4924
  3371   003004                     l5868:
  3372                           
  3373                           ; BSR set to: 0
  3374                           ; Switch size 1, requested type "simple"
  3375                           ; Number of cases is 1, Range of values is 102 to 102
  3376                           ; switch strategies available:
  3377                           ; Name         Instructions Cycles
  3378                           ; simple_byte            4     3 (average)
  3379                           ;	Chosen strategy is simple_byte
  3380   003004  519B               	movf	??_vfpfcnvrt& (0+255),w,b
  3381   003006  0A66               	xorlw	102	; case 102
  3382   003008  B4D8               	btfsc	status,2,c
  3383   00300A  EFD8  F017         	goto	l4916
  3384   00300E  EF09  F018         	goto	l4924
  3385   003012                     l4924:
  3386                           
  3387                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3388   003012  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3389   003016  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3390   00301A  2ADE               	incf	postinc2,f,c
  3391   00301C  0E00               	movlw	0
  3392   00301E  22DD               	addwfc	postdec2,f,c
  3393   003020  EF28  F018         	goto	l1447
  3394   003024                     l4928:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3397   003024  C097  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3398   003028  C098  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3399   00302C  CFDE FFF6          	movff	postinc2,tblptrl
  3400   003030  CFDD FFF7          	movff	postdec2,tblptrh
  3401   003034                     	if	0	;tblptru may be non-zero
  3402   003034                     	endif
  3403   003034                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3404   003034  0E00               	movlw	low (__mediumconst shr (0+16))
  3405   003036  6EF8               	movwf	tblptru,c
  3406   003038                     	endif
  3407   003038  0008               	tblrd		*
  3408   00303A  50F5               	movf	tablat,w,c
  3409   00303C  6E01               	movwf	fputc@c^0,c
  3410   00303E  6A02               	clrf	(fputc@c+1)^0,c
  3411   003040  C095  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3412   003044  C096  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3413   003048  EC25  F021         	call	_fputc	;wreg free
  3414   00304C  EF09  F018         	goto	l4924
  3415   003050                     l1447:
  3416   003050  0012               	return		;funcret
  3417   003052                     __end_of_vfpfcnvrt:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _efgtoa *****************
  3421 ;; Defined at:
  3422 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3425 ;;		 -> sprintf@f(11), 
  3426 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3427 ;;  c               1    6[BANK0 ] unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  u               4   49[BANK0 ] struct flui
  3430 ;;  g               4   45[BANK0 ] struct flui
  3431 ;;  l               4   38[BANK0 ] struct flui
  3432 ;;  h               4   34[BANK0 ] struct flui
  3433 ;;  ou              4   28[BANK0 ] struct flui
  3434 ;;  n               2   43[BANK0 ] int 
  3435 ;;  i               2   32[BANK0 ] int 
  3436 ;;  w               2   26[BANK0 ] int 
  3437 ;;  e               2   24[BANK0 ] int 
  3438 ;;  m               2   22[BANK0 ] int 
  3439 ;;  d               2   20[BANK0 ] int 
  3440 ;;  t               2   13[BANK0 ] int 
  3441 ;;  p               2   11[BANK0 ] int 
  3442 ;;  ne              2    9[BANK0 ] int 
  3443 ;;  sign            1   42[BANK0 ] unsigned char 
  3444 ;;  nmode           1   19[BANK0 ] unsigned char 
  3445 ;;  mode            1   18[BANK0 ] unsigned char 
  3446 ;;  pp              1   17[BANK0 ] unsigned char 
  3447 ;;  esign           1    0        unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3457 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3458 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3460 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3461 ;;Total ram usage:       53 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 4
  3464 ;; This function calls:
  3465 ;;		___fladd
  3466 ;;		___fldiv
  3467 ;;		___fleq
  3468 ;;		___flge
  3469 ;;		___flmul
  3470 ;;		___flneg
  3471 ;;		___flsub
  3472 ;;		___fltol
  3473 ;;		___fpclassifyf
  3474 ;;		_floorf
  3475 ;;		_labs
  3476 ;;		_memcpy
  3477 ;;		_pad
  3478 ;;		_strcpy
  3479 ;; This function is called by:
  3480 ;;		_vfpfcnvrt
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           	psect	text12
  3485   000E5A                     __ptext12:
  3486                           	callstack 0
  3487   000E5A                     _efgtoa:
  3488                           	callstack 23
  3489   000E5A                     
  3490                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  3491   000E5A  0E00               	movlw	0
  3492   000E5C  0100               	movlb	0	; () banked
  3493   000E5E  6F8A               	movwf	efgtoa@sign& (0+255),b
  3494   000E60                     
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  3497   000E60  C062  F08D         	movff	efgtoa@f,efgtoa@g
  3498   000E64  C063  F08E         	movff	efgtoa@f+1,efgtoa@g+1
  3499   000E68  C064  F08F         	movff	efgtoa@f+2,efgtoa@g+2
  3500   000E6C  C065  F090         	movff	efgtoa@f+3,efgtoa@g+3
  3501   000E70                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  3504   000E70  BF90               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3505   000E72  EF3F  F007         	goto	u4140
  3506   000E76  EF3D  F007         	goto	u4141
  3507   000E7A                     u4141:
  3508   000E7A  EF53  F007         	goto	l4552
  3509   000E7E                     u4140:
  3510   000E7E                     
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  3513   000E7E  0E01               	movlw	1
  3514   000E80  6F8A               	movwf	efgtoa@sign& (0+255),b
  3515   000E82                     
  3516                           ; BSR set to: 0
  3517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  3518   000E82  C08D  F001         	movff	efgtoa@g,___flneg@f1
  3519   000E86  C08E  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3520   000E8A  C08F  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3521   000E8E  C090  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3522   000E92  ECC4  F025         	call	___flneg	;wreg free
  3523   000E96  C001  F08D         	movff	?___flneg,efgtoa@g
  3524   000E9A  C002  F08E         	movff	?___flneg+1,efgtoa@g+1
  3525   000E9E  C003  F08F         	movff	?___flneg+2,efgtoa@g+2
  3526   000EA2  C004  F090         	movff	?___flneg+3,efgtoa@g+3
  3527   000EA6                     l4552:
  3528                           
  3529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  3530   000EA6  0E00               	movlw	0
  3531   000EA8  0100               	movlb	0	; () banked
  3532   000EAA  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3533   000EAC  0E00               	movlw	0
  3534   000EAE  6F8B               	movwf	efgtoa@n& (0+255),b
  3535   000EB0                     
  3536                           ; BSR set to: 0
  3537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  3538   000EB0  C0EF  F07A         	movff	_width,efgtoa@w
  3539   000EB4  C0F0  F07B         	movff	_width+1,efgtoa@w+1
  3540   000EB8                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  3543   000EB8  518A               	movf	efgtoa@sign& (0+255),w,b
  3544   000EBA  B4D8               	btfsc	status,2,c
  3545   000EBC  EF62  F007         	goto	u4151
  3546   000EC0  EF64  F007         	goto	u4150
  3547   000EC4                     u4151:
  3548   000EC4  EF78  F007         	goto	l4566
  3549   000EC8                     u4150:
  3550   000EC8                     
  3551                           ; BSR set to: 0
  3552                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  3553   000EC8  518A               	movf	efgtoa@sign& (0+255),w,b
  3554   000ECA  A4D8               	btfss	status,2,c
  3555   000ECC  EF6A  F007         	goto	u4161
  3556   000ED0  EF6C  F007         	goto	u4160
  3557   000ED4                     u4161:
  3558   000ED4  EF72  F007         	goto	l4562
  3559   000ED8                     u4160:
  3560   000ED8                     
  3561                           ; BSR set to: 0
  3562   000ED8  0E00               	movlw	0
  3563   000EDA  6F70               	movwf	(_efgtoa$2727+1)& (0+255),b
  3564   000EDC  0E2B               	movlw	43
  3565   000EDE  6F6F               	movwf	_efgtoa$2727& (0+255),b
  3566   000EE0  EF76  F007         	goto	l4564
  3567   000EE4                     l4562:
  3568                           
  3569                           ; BSR set to: 0
  3570   000EE4  0E00               	movlw	0
  3571   000EE6  6F70               	movwf	(_efgtoa$2727+1)& (0+255),b
  3572   000EE8  0E2D               	movlw	45
  3573   000EEA  6F6F               	movwf	_efgtoa$2727& (0+255),b
  3574   000EEC                     l4564:
  3575                           
  3576                           ; BSR set to: 0
  3577   000EEC  C06F  F08A         	movff	_efgtoa$2727,efgtoa@sign
  3578   000EF0                     l4566:
  3579                           
  3580                           ; BSR set to: 0
  3581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3582   000EF0  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3583   000EF4  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3584   000EF8  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3585   000EFC  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3586   000F00  ECA6  F020         	call	___fpclassifyf	;wreg free
  3587   000F04  0401               	decf	?___fpclassifyf^0,w,c
  3588   000F06  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3589   000F08  A4D8               	btfss	status,2,c
  3590   000F0A  EF89  F007         	goto	u4171
  3591   000F0E  EF8B  F007         	goto	u4170
  3592   000F12                     u4171:
  3593   000F12  EFBE  F007         	goto	l4584
  3594   000F16                     u4170:
  3595   000F16                     
  3596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  3597   000F16  0100               	movlb	0	; () banked
  3598   000F18  518A               	movf	efgtoa@sign& (0+255),w,b
  3599   000F1A  B4D8               	btfsc	status,2,c
  3600   000F1C  EF92  F007         	goto	u4181
  3601   000F20  EF94  F007         	goto	u4180
  3602   000F24                     u4181:
  3603   000F24  EF9D  F007         	goto	l4576
  3604   000F28                     u4180:
  3605   000F28                     
  3606                           ; BSR set to: 0
  3607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  3608   000F28  C08A  F110         	movff	efgtoa@sign,_dbuf
  3609   000F2C                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  3612   000F2C  077A               	decf	efgtoa@w& (0+255),f,b
  3613   000F2E  A0D8               	btfss	status,0,c
  3614   000F30  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3615   000F32                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  3618   000F32  0E00               	movlw	0
  3619   000F34  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3620   000F36  0E01               	movlw	1
  3621   000F38  6F8B               	movwf	efgtoa@n& (0+255),b
  3622   000F3A                     l4576:
  3623                           
  3624                           ; BSR set to: 0
  3625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  3626   000F3A  0E10               	movlw	low _dbuf
  3627   000F3C  258B               	addwf	efgtoa@n& (0+255),w,b
  3628   000F3E  6E01               	movwf	strcpy@dest^0,c
  3629   000F40  0E01               	movlw	high _dbuf
  3630   000F42  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3631   000F44  6E02               	movwf	(strcpy@dest+1)^0,c
  3632   000F46  0E50               	movlw	low STR_3
  3633   000F48  6E03               	movwf	strcpy@src^0,c
  3634   000F4A  0E0E               	movlw	high STR_3
  3635   000F4C  6E04               	movwf	(strcpy@src+1)^0,c
  3636   000F4E  EC3F  F025         	call	_strcpy	;wreg free
  3637   000F52                     l4578:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3640   000F52  0100               	movlb	0	; () banked
  3641   000F54  0EFD               	movlw	253
  3642   000F56  277A               	addwf	efgtoa@w& (0+255),f,b
  3643   000F58  0EFF               	movlw	255
  3644   000F5A  237B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3645   000F5C                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3648   000F5C  C060  F011         	movff	efgtoa@fp,pad@fp
  3649   000F60  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  3650   000F64  0E10               	movlw	low _dbuf
  3651   000F66  6E13               	movwf	pad@buf^0,c
  3652   000F68  0E01               	movlw	high _dbuf
  3653   000F6A  6E14               	movwf	(pad@buf+1)^0,c
  3654   000F6C  C07A  F015         	movff	efgtoa@w,pad@p
  3655   000F70  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  3656   000F74  ECB1  F022         	call	_pad	;wreg free
  3657   000F78  EF29  F00C         	goto	l1399
  3658   000F7C                     l4584:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3661   000F7C  C08D  F001         	movff	efgtoa@g,___fpclassifyf@x
  3662   000F80  C08E  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3663   000F84  C08F  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3664   000F88  C090  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3665   000F8C  ECA6  F020         	call	___fpclassifyf	;wreg free
  3666   000F90  5001               	movf	?___fpclassifyf^0,w,c
  3667   000F92  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3668   000F94  A4D8               	btfss	status,2,c
  3669   000F96  EFCF  F007         	goto	u4191
  3670   000F9A  EFD1  F007         	goto	u4190
  3671   000F9E                     u4191:
  3672   000F9E  EFF1  F007         	goto	l4602
  3673   000FA2                     u4190:
  3674   000FA2                     
  3675                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  3676   000FA2  0100               	movlb	0	; () banked
  3677   000FA4  518A               	movf	efgtoa@sign& (0+255),w,b
  3678   000FA6  B4D8               	btfsc	status,2,c
  3679   000FA8  EFD8  F007         	goto	u4201
  3680   000FAC  EFDA  F007         	goto	u4200
  3681   000FB0                     u4201:
  3682   000FB0  EFE3  F007         	goto	l4594
  3683   000FB4                     u4200:
  3684   000FB4                     
  3685                           ; BSR set to: 0
  3686                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  3687   000FB4  C08A  F110         	movff	efgtoa@sign,_dbuf
  3688   000FB8                     
  3689                           ; BSR set to: 0
  3690                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  3691   000FB8  077A               	decf	efgtoa@w& (0+255),f,b
  3692   000FBA  A0D8               	btfss	status,0,c
  3693   000FBC  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  3694   000FBE                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  3697   000FBE  0E00               	movlw	0
  3698   000FC0  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  3699   000FC2  0E01               	movlw	1
  3700   000FC4  6F8B               	movwf	efgtoa@n& (0+255),b
  3701   000FC6                     l4594:
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  3705   000FC6  0E10               	movlw	low _dbuf
  3706   000FC8  258B               	addwf	efgtoa@n& (0+255),w,b
  3707   000FCA  6E01               	movwf	strcpy@dest^0,c
  3708   000FCC  0E01               	movlw	high _dbuf
  3709   000FCE  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3710   000FD0  6E02               	movwf	(strcpy@dest+1)^0,c
  3711   000FD2  0E54               	movlw	low STR_6
  3712   000FD4  6E03               	movwf	strcpy@src^0,c
  3713   000FD6  0E0E               	movlw	high STR_6
  3714   000FD8  6E04               	movwf	(strcpy@src+1)^0,c
  3715   000FDA  EC3F  F025         	call	_strcpy	;wreg free
  3716   000FDE  EFA9  F007         	goto	l4578
  3717   000FE2                     l4602:
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  3720   000FE2  0E00               	movlw	0
  3721   000FE4  0100               	movlb	0	; () banked
  3722   000FE6  6F91               	movwf	efgtoa@u& (0+255),b
  3723   000FE8  0E00               	movlw	0
  3724   000FEA  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  3725   000FEC  0E80               	movlw	128
  3726   000FEE  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  3727   000FF0  0E3F               	movlw	63
  3728   000FF2  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  3731   000FF4  0E00               	movlw	0
  3732   000FF6  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  3733   000FF8  0E00               	movlw	0
  3734   000FFA  6F78               	movwf	efgtoa@e& (0+255),b
  3735   000FFC                     
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  3738   000FFC  C08D  F032         	movff	efgtoa@g,___fleq@ff1
  3739   001000  C08E  F033         	movff	efgtoa@g+1,___fleq@ff1+1
  3740   001004  C08F  F034         	movff	efgtoa@g+2,___fleq@ff1+2
  3741   001008  C090  F035         	movff	efgtoa@g+3,___fleq@ff1+3
  3742   00100C  0E00               	movlw	0
  3743   00100E  6E36               	movwf	___fleq@ff2^0,c
  3744   001010  0E00               	movlw	0
  3745   001012  6E37               	movwf	(___fleq@ff2+1)^0,c
  3746   001014  0E00               	movlw	0
  3747   001016  6E38               	movwf	(___fleq@ff2+2)^0,c
  3748   001018  0E00               	movlw	0
  3749   00101A  6E39               	movwf	(___fleq@ff2+3)^0,c
  3750   00101C  EC8A  F021         	call	___fleq	;wreg free
  3751   001020  B0D8               	btfsc	status,0,c
  3752   001022  EF15  F008         	goto	u4211
  3753   001026  EF17  F008         	goto	u4210
  3754   00102A                     u4211:
  3755   00102A  EFF6  F008         	goto	l1402
  3756   00102E                     u4210:
  3757   00102E  EF24  F008         	goto	l4610
  3758   001032                     l1404:
  3759                           
  3760                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  3761   001032  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  3762   001036  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  3763   00103A  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  3764   00103E  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  3765   001042                     
  3766                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  3767   001042  0100               	movlb	0	; () banked
  3768   001044  4B78               	infsnz	efgtoa@e& (0+255),f,b
  3769   001046  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  3770   001048                     l4610:
  3771                           
  3772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3773   001048  C091  F011         	movff	efgtoa@u,___flmul@b
  3774   00104C  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  3775   001050  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  3776   001054  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  3777   001058  0E00               	movlw	0
  3778   00105A  6E15               	movwf	___flmul@a^0,c
  3779   00105C  0E00               	movlw	0
  3780   00105E  6E16               	movwf	(___flmul@a+1)^0,c
  3781   001060  0E20               	movlw	32
  3782   001062  6E17               	movwf	(___flmul@a+2)^0,c
  3783   001064  0E41               	movlw	65
  3784   001066  6E18               	movwf	(___flmul@a+3)^0,c
  3785   001068  EC2D  F011         	call	___flmul	;wreg free
  3786   00106C  C011  F07C         	movff	?___flmul,efgtoa@ou
  3787   001070  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  3788   001074  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  3789   001078  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  3790   00107C  0100               	movlb	0	; () banked
  3791   00107E  517C               	movf	efgtoa@ou& (0+255),w,b
  3792   001080  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3793   001082  6E01               	movwf	labs@a^0,c
  3794   001084  517D               	movf	(efgtoa@ou+1)& (0+255),w,b
  3795   001086  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3796   001088  6E02               	movwf	(labs@a+1)^0,c
  3797   00108A  517E               	movf	(efgtoa@ou+2)& (0+255),w,b
  3798   00108C  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3799   00108E  6E03               	movwf	(labs@a+2)^0,c
  3800   001090  517F               	movf	(efgtoa@ou+3)& (0+255),w,b
  3801   001092  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3802   001094  6E04               	movwf	(labs@a+3)^0,c
  3803   001096  EC28  F023         	call	_labs	;wreg free
  3804   00109A  BE04               	btfsc	(?_labs+3)^0,7,c
  3805   00109C  EF5B  F008         	goto	u4221
  3806   0010A0  5004               	movf	(?_labs+3)^0,w,c
  3807   0010A2  1003               	iorwf	(?_labs+2)^0,w,c
  3808   0010A4  1002               	iorwf	(?_labs+1)^0,w,c
  3809   0010A6  E109               	bnz	u4220
  3810   0010A8  0E02               	movlw	2
  3811   0010AA  5C01               	subwf	?_labs^0,w,c
  3812   0010AC  A0D8               	btfss	status,0,c
  3813   0010AE  EF5B  F008         	goto	u4221
  3814   0010B2  EF5D  F008         	goto	u4220
  3815   0010B6                     u4221:
  3816   0010B6  EF19  F008         	goto	l1404
  3817   0010BA                     u4220:
  3818   0010BA  C07C  F02A         	movff	efgtoa@ou,___flge@ff1
  3819   0010BE  C07D  F02B         	movff	efgtoa@ou+1,___flge@ff1+1
  3820   0010C2  C07E  F02C         	movff	efgtoa@ou+2,___flge@ff1+2
  3821   0010C6  C07F  F02D         	movff	efgtoa@ou+3,___flge@ff1+3
  3822   0010CA  C08D  F02E         	movff	efgtoa@g,___flge@ff2
  3823   0010CE  C08E  F02F         	movff	efgtoa@g+1,___flge@ff2+1
  3824   0010D2  C08F  F030         	movff	efgtoa@g+2,___flge@ff2+2
  3825   0010D6  C090  F031         	movff	efgtoa@g+3,___flge@ff2+3
  3826   0010DA  EC24  F020         	call	___flge	;wreg free
  3827   0010DE  A0D8               	btfss	status,0,c
  3828   0010E0  EF74  F008         	goto	u4231
  3829   0010E4  EF76  F008         	goto	u4230
  3830   0010E8                     u4231:
  3831   0010E8  EF19  F008         	goto	l1404
  3832   0010EC                     u4230:
  3833   0010EC                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3835   0010EC  0100               	movlb	0	; () banked
  3836   0010EE  5191               	movf	efgtoa@u& (0+255),w,b
  3837   0010F0  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3838   0010F2  6E01               	movwf	labs@a^0,c
  3839   0010F4  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3840   0010F6  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3841   0010F8  6E02               	movwf	(labs@a+1)^0,c
  3842   0010FA  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3843   0010FC  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3844   0010FE  6E03               	movwf	(labs@a+2)^0,c
  3845   001100  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3846   001102  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3847   001104  6E04               	movwf	(labs@a+3)^0,c
  3848   001106  EC28  F023         	call	_labs	;wreg free
  3849   00110A  BE04               	btfsc	(?_labs+3)^0,7,c
  3850   00110C  EF95  F008         	goto	u4240
  3851   001110  5004               	movf	(?_labs+3)^0,w,c
  3852   001112  1003               	iorwf	(?_labs+2)^0,w,c
  3853   001114  1002               	iorwf	(?_labs+1)^0,w,c
  3854   001116  E107               	bnz	u4241
  3855   001118  0E02               	movlw	2
  3856   00111A  5C01               	subwf	?_labs^0,w,c
  3857   00111C  B0D8               	btfsc	status,0,c
  3858   00111E  EF93  F008         	goto	u4241
  3859   001122  EF95  F008         	goto	u4240
  3860   001126                     u4241:
  3861   001126  EFDD  F008         	goto	l4628
  3862   00112A                     u4240:
  3863   00112A                     l4618:
  3864                           
  3865                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  3866   00112A  C091  F08D         	movff	efgtoa@u,efgtoa@g
  3867   00112E  C092  F08E         	movff	efgtoa@u+1,efgtoa@g+1
  3868   001132  C093  F08F         	movff	efgtoa@u+2,efgtoa@g+2
  3869   001136  C094  F090         	movff	efgtoa@u+3,efgtoa@g+3
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  3872   00113A  EFF6  F008         	goto	l1402
  3873   00113E                     l4620:
  3874                           
  3875                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  3876   00113E  C091  F032         	movff	efgtoa@u,___fldiv@b
  3877   001142  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  3878   001146  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  3879   00114A  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  3880   00114E  0E00               	movlw	0
  3881   001150  6E36               	movwf	___fldiv@a^0,c
  3882   001152  0E00               	movlw	0
  3883   001154  6E37               	movwf	(___fldiv@a+1)^0,c
  3884   001156  0E20               	movlw	32
  3885   001158  6E38               	movwf	(___fldiv@a+2)^0,c
  3886   00115A  0E41               	movlw	65
  3887   00115C  6E39               	movwf	(___fldiv@a+3)^0,c
  3888   00115E  EC42  F013         	call	___fldiv	;wreg free
  3889   001162  C032  F091         	movff	?___fldiv,efgtoa@u
  3890   001166  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  3891   00116A  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  3892   00116E  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  3893   001172                     
  3894                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  3895   001172  0100               	movlb	0	; () banked
  3896   001174  0778               	decf	efgtoa@e& (0+255),f,b
  3897   001176  A0D8               	btfss	status,0,c
  3898   001178  0779               	decf	(efgtoa@e+1)& (0+255),f,b
  3899   00117A                     
  3900                           ; BSR set to: 0
  3901                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3902   00117A  5191               	movf	efgtoa@u& (0+255),w,b
  3903   00117C  5D8D               	subwf	efgtoa@g& (0+255),w,b
  3904   00117E  6E01               	movwf	labs@a^0,c
  3905   001180  5192               	movf	(efgtoa@u+1)& (0+255),w,b
  3906   001182  598E               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3907   001184  6E02               	movwf	(labs@a+1)^0,c
  3908   001186  5193               	movf	(efgtoa@u+2)& (0+255),w,b
  3909   001188  598F               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3910   00118A  6E03               	movwf	(labs@a+2)^0,c
  3911   00118C  5194               	movf	(efgtoa@u+3)& (0+255),w,b
  3912   00118E  5990               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3913   001190  6E04               	movwf	(labs@a+3)^0,c
  3914   001192  EC28  F023         	call	_labs	;wreg free
  3915   001196  BE04               	btfsc	(?_labs+3)^0,7,c
  3916   001198  EFDB  F008         	goto	u4250
  3917   00119C  5004               	movf	(?_labs+3)^0,w,c
  3918   00119E  1003               	iorwf	(?_labs+2)^0,w,c
  3919   0011A0  1002               	iorwf	(?_labs+1)^0,w,c
  3920   0011A2  E107               	bnz	u4251
  3921   0011A4  0E02               	movlw	2
  3922   0011A6  5C01               	subwf	?_labs^0,w,c
  3923   0011A8  B0D8               	btfsc	status,0,c
  3924   0011AA  EFD9  F008         	goto	u4251
  3925   0011AE  EFDB  F008         	goto	u4250
  3926   0011B2                     u4251:
  3927   0011B2  EFDD  F008         	goto	l4628
  3928   0011B6                     u4250:
  3929   0011B6  EF95  F008         	goto	l4618
  3930   0011BA                     l4628:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  3933   0011BA  C08D  F02A         	movff	efgtoa@g,___flge@ff1
  3934   0011BE  C08E  F02B         	movff	efgtoa@g+1,___flge@ff1+1
  3935   0011C2  C08F  F02C         	movff	efgtoa@g+2,___flge@ff1+2
  3936   0011C6  C090  F02D         	movff	efgtoa@g+3,___flge@ff1+3
  3937   0011CA  C091  F02E         	movff	efgtoa@u,___flge@ff2
  3938   0011CE  C092  F02F         	movff	efgtoa@u+1,___flge@ff2+1
  3939   0011D2  C093  F030         	movff	efgtoa@u+2,___flge@ff2+2
  3940   0011D6  C094  F031         	movff	efgtoa@u+3,___flge@ff2+3
  3941   0011DA  EC24  F020         	call	___flge	;wreg free
  3942   0011DE  A0D8               	btfss	status,0,c
  3943   0011E0  EFF4  F008         	goto	u4261
  3944   0011E4  EFF6  F008         	goto	u4260
  3945   0011E8                     u4261:
  3946   0011E8  EF9F  F008         	goto	l4620
  3947   0011EC                     u4260:
  3948   0011EC                     l1402:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  3951   0011EC  C066  F072         	movff	efgtoa@c,efgtoa@mode
  3952                           
  3953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  3954   0011F0  C072  F073         	movff	efgtoa@mode,efgtoa@nmode
  3955   0011F4                     
  3956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  3957   0011F4  0100               	movlb	0	; () banked
  3958   0011F6  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3959   0011F8  EF00  F009         	goto	u4271
  3960   0011FC  EF02  F009         	goto	u4270
  3961   001200                     u4271:
  3962   001200  EF08  F009         	goto	l4634
  3963   001204                     u4270:
  3964   001204                     
  3965                           ; BSR set to: 0
  3966   001204  C0F1  F06B         	movff	_prec,efgtoa@p
  3967   001208  C0F2  F06C         	movff	_prec+1,efgtoa@p+1
  3968   00120C  EF0C  F009         	goto	l4636
  3969   001210                     l4634:
  3970                           
  3971                           ; BSR set to: 0
  3972   001210  0E00               	movlw	0
  3973   001212  6F6C               	movwf	(efgtoa@p+1)& (0+255),b
  3974   001214  0E06               	movlw	6
  3975   001216  6F6B               	movwf	efgtoa@p& (0+255),b
  3976   001218                     l4636:
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  3980   001218  C06B  F076         	movff	efgtoa@p,efgtoa@m
  3981   00121C  C06C  F077         	movff	efgtoa@p+1,efgtoa@m+1
  3982   001220                     
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  3985   001220  4B76               	infsnz	efgtoa@m& (0+255),f,b
  3986   001222  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  3987   001224                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  3990   001224  0E66               	movlw	102
  3991   001226  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  3992   001228  A4D8               	btfss	status,2,c
  3993   00122A  EF19  F009         	goto	u4281
  3994   00122E  EF1B  F009         	goto	u4280
  3995   001232                     u4281:
  3996   001232  EF3B  F009         	goto	l4650
  3997   001236                     u4280:
  3998   001236                     
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  4001   001236  BF79               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4002   001238  EF22  F009         	goto	u4290
  4003   00123C  EF20  F009         	goto	u4291
  4004   001240                     u4291:
  4005   001240  EF2E  F009         	goto	l4646
  4006   001244                     u4290:
  4007   001244                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  4010   001244  0E00               	movlw	0
  4011   001246  6F91               	movwf	efgtoa@u& (0+255),b
  4012   001248  0E00               	movlw	0
  4013   00124A  6F92               	movwf	(efgtoa@u+1)& (0+255),b
  4014   00124C  0E80               	movlw	128
  4015   00124E  6F93               	movwf	(efgtoa@u+2)& (0+255),b
  4016   001250  0E3F               	movlw	63
  4017   001252  6F94               	movwf	(efgtoa@u+3)& (0+255),b
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  4020   001254  0E00               	movlw	0
  4021   001256  6F79               	movwf	(efgtoa@e+1)& (0+255),b
  4022   001258  0E00               	movlw	0
  4023   00125A  6F78               	movwf	efgtoa@e& (0+255),b
  4024   00125C                     l4646:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  4028   00125C  0E67               	movlw	103
  4029   00125E  1972               	xorwf	efgtoa@mode& (0+255),w,b
  4030   001260  B4D8               	btfsc	status,2,c
  4031   001262  EF35  F009         	goto	u4301
  4032   001266  EF37  F009         	goto	u4300
  4033   00126A                     u4301:
  4034   00126A  EF3B  F009         	goto	l4650
  4035   00126E                     u4300:
  4036   00126E                     
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  4039   00126E  5178               	movf	efgtoa@e& (0+255),w,b
  4040   001270  2776               	addwf	efgtoa@m& (0+255),f,b
  4041   001272  5179               	movf	(efgtoa@e+1)& (0+255),w,b
  4042   001274  2377               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4043   001276                     l4650:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  4047   001276  0E00               	movlw	0
  4048   001278  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4049   00127A  0E00               	movlw	0
  4050   00127C  6F80               	movwf	efgtoa@i& (0+255),b
  4051   00127E                     
  4052                           ; BSR set to: 0
  4053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  4054   00127E  C08D  F082         	movff	efgtoa@g,efgtoa@h
  4055   001282  C08E  F083         	movff	efgtoa@g+1,efgtoa@h+1
  4056   001286  C08F  F084         	movff	efgtoa@g+2,efgtoa@h+2
  4057   00128A  C090  F085         	movff	efgtoa@g+3,efgtoa@h+3
  4058   00128E                     
  4059                           ; BSR set to: 0
  4060                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  4061   00128E  C091  F07C         	movff	efgtoa@u,efgtoa@ou
  4062   001292  C092  F07D         	movff	efgtoa@u+1,efgtoa@ou+1
  4063   001296  C093  F07E         	movff	efgtoa@u+2,efgtoa@ou+2
  4064   00129A  C094  F07F         	movff	efgtoa@u+3,efgtoa@ou+3
  4065                           
  4066                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4067   00129E  EFCC  F009         	goto	l4664
  4068   0012A2                     l4656:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  4072   0012A2  C082  F032         	movff	efgtoa@h,___fldiv@b
  4073   0012A6  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4074   0012AA  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4075   0012AE  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4076   0012B2  C091  F036         	movff	efgtoa@u,___fldiv@a
  4077   0012B6  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4078   0012BA  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4079   0012BE  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4080   0012C2  EC42  F013         	call	___fldiv	;wreg free
  4081   0012C6  C032  F04B         	movff	?___fldiv,floorf@x
  4082   0012CA  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4083   0012CE  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4084   0012D2  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4085   0012D6  ECA2  F01A         	call	_floorf	;wreg free
  4086   0012DA  C04B  F086         	movff	?_floorf,efgtoa@l
  4087   0012DE  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4088   0012E2  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4089   0012E6  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4090                           
  4091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  4092   0012EA  C086  F001         	movff	efgtoa@l,___fltol@f1
  4093   0012EE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4094   0012F2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4095   0012F6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4096   0012FA  ECA1  F01F         	call	___fltol	;wreg free
  4097   0012FE  C001  F074         	movff	?___fltol,efgtoa@d
  4098   001302  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4099   001306                     
  4100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  4101   001306  C082  F02A         	movff	efgtoa@h,___flsub@b
  4102   00130A  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4103   00130E  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4104   001312  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4105   001316  C086  F015         	movff	efgtoa@l,___flmul@a
  4106   00131A  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4107   00131E  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4108   001322  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4109   001326  C091  F011         	movff	efgtoa@u,___flmul@b
  4110   00132A  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4111   00132E  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4112   001332  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4113   001336  EC2D  F011         	call	___flmul	;wreg free
  4114   00133A  C011  F02E         	movff	?___flmul,___flsub@a
  4115   00133E  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4116   001342  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4117   001346  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4118   00134A  EC1C  F025         	call	___flsub	;wreg free
  4119   00134E  C02A  F082         	movff	?___flsub,efgtoa@h
  4120   001352  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4121   001356  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4122   00135A  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4123   00135E                     
  4124                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  4125   00135E  C091  F032         	movff	efgtoa@u,___fldiv@b
  4126   001362  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4127   001366  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4128   00136A  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4129   00136E  0E00               	movlw	0
  4130   001370  6E36               	movwf	___fldiv@a^0,c
  4131   001372  0E00               	movlw	0
  4132   001374  6E37               	movwf	(___fldiv@a+1)^0,c
  4133   001376  0E20               	movlw	32
  4134   001378  6E38               	movwf	(___fldiv@a+2)^0,c
  4135   00137A  0E41               	movlw	65
  4136   00137C  6E39               	movwf	(___fldiv@a+3)^0,c
  4137   00137E  EC42  F013         	call	___fldiv	;wreg free
  4138   001382  C032  F091         	movff	?___fldiv,efgtoa@u
  4139   001386  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4140   00138A  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4141   00138E  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4142   001392                     
  4143                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  4144   001392  0100               	movlb	0	; () banked
  4145   001394  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4146   001396  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4147   001398                     l4664:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  4151   001398  5176               	movf	efgtoa@m& (0+255),w,b
  4152   00139A  5D80               	subwf	efgtoa@i& (0+255),w,b
  4153   00139C  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4154   00139E  0A80               	xorlw	128
  4155   0013A0  6F67               	movwf	??_efgtoa& (0+255),b
  4156   0013A2  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4157   0013A4  0A80               	xorlw	128
  4158   0013A6  5967               	subwfb	??_efgtoa& (0+255),w,b
  4159   0013A8  A0D8               	btfss	status,0,c
  4160   0013AA  EFD9  F009         	goto	u4311
  4161   0013AE  EFDB  F009         	goto	u4310
  4162   0013B2                     u4311:
  4163   0013B2  EF51  F009         	goto	l4656
  4164   0013B6                     u4310:
  4165   0013B6                     
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  4168   0013B6  C091  F011         	movff	efgtoa@u,___flmul@b
  4169   0013BA  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4170   0013BE  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4171   0013C2  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4172   0013C6  0E00               	movlw	0
  4173   0013C8  6E15               	movwf	___flmul@a^0,c
  4174   0013CA  0E00               	movlw	0
  4175   0013CC  6E16               	movwf	(___flmul@a+1)^0,c
  4176   0013CE  0EA0               	movlw	160
  4177   0013D0  6E17               	movwf	(___flmul@a+2)^0,c
  4178   0013D2  0E40               	movlw	64
  4179   0013D4  6E18               	movwf	(___flmul@a+3)^0,c
  4180   0013D6  EC2D  F011         	call	___flmul	;wreg free
  4181   0013DA  C011  F086         	movff	?___flmul,efgtoa@l
  4182   0013DE  C012  F087         	movff	?___flmul+1,efgtoa@l+1
  4183   0013E2  C013  F088         	movff	?___flmul+2,efgtoa@l+2
  4184   0013E6  C014  F089         	movff	?___flmul+3,efgtoa@l+3
  4185   0013EA                     
  4186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  4187   0013EA  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4188   0013EE  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4189   0013F2  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4190   0013F6  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4191   0013FA  C086  F02E         	movff	efgtoa@l,___flge@ff2
  4192   0013FE  C087  F02F         	movff	efgtoa@l+1,___flge@ff2+1
  4193   001402  C088  F030         	movff	efgtoa@l+2,___flge@ff2+2
  4194   001406  C089  F031         	movff	efgtoa@l+3,___flge@ff2+3
  4195   00140A  EC24  F020         	call	___flge	;wreg free
  4196   00140E  B0D8               	btfsc	status,0,c
  4197   001410  EF0C  F00A         	goto	u4321
  4198   001414  EF0E  F00A         	goto	u4320
  4199   001418                     u4321:
  4200   001418  EF19  F00A         	goto	l4672
  4201   00141C                     u4320:
  4202   00141C                     
  4203                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  4204   00141C  0E00               	movlw	0
  4205   00141E  0100               	movlb	0	; () banked
  4206   001420  6F86               	movwf	efgtoa@l& (0+255),b
  4207   001422  0E00               	movlw	0
  4208   001424  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4209   001426  0E00               	movlw	0
  4210   001428  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4211   00142A  0E00               	movlw	0
  4212   00142C  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4213                           
  4214                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  4215   00142E  EF42  F00A         	goto	l4678
  4216   001432                     l4672:
  4217                           
  4218                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  4219   001432  C082  F032         	movff	efgtoa@h,___fleq@ff1
  4220   001436  C083  F033         	movff	efgtoa@h+1,___fleq@ff1+1
  4221   00143A  C084  F034         	movff	efgtoa@h+2,___fleq@ff1+2
  4222   00143E  C085  F035         	movff	efgtoa@h+3,___fleq@ff1+3
  4223   001442  C086  F036         	movff	efgtoa@l,___fleq@ff2
  4224   001446  C087  F037         	movff	efgtoa@l+1,___fleq@ff2+1
  4225   00144A  C088  F038         	movff	efgtoa@l+2,___fleq@ff2+2
  4226   00144E  C089  F039         	movff	efgtoa@l+3,___fleq@ff2+3
  4227   001452  EC8A  F021         	call	___fleq	;wreg free
  4228   001456  A0D8               	btfss	status,0,c
  4229   001458  EF30  F00A         	goto	u4331
  4230   00145C  EF32  F00A         	goto	u4330
  4231   001460                     u4331:
  4232   001460  EF42  F00A         	goto	l4678
  4233   001464                     u4330:
  4234   001464  0100               	movlb	0	; () banked
  4235   001466  B174               	btfsc	efgtoa@d& (0+255),0,b
  4236   001468  EF38  F00A         	goto	u4341
  4237   00146C  EF3A  F00A         	goto	u4340
  4238   001470                     u4341:
  4239   001470  EF42  F00A         	goto	l4678
  4240   001474                     u4340:
  4241   001474                     
  4242                           ; BSR set to: 0
  4243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  4244   001474  0E00               	movlw	0
  4245   001476  6F86               	movwf	efgtoa@l& (0+255),b
  4246   001478  0E00               	movlw	0
  4247   00147A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4248   00147C  0E00               	movlw	0
  4249   00147E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4250   001480  0E00               	movlw	0
  4251   001482  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4252   001484                     l4678:
  4253                           
  4254                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  4255   001484  C08D  F001         	movff	efgtoa@g,___fladd@b
  4256   001488  C08E  F002         	movff	efgtoa@g+1,___fladd@b+1
  4257   00148C  C08F  F003         	movff	efgtoa@g+2,___fladd@b+2
  4258   001490  C090  F004         	movff	efgtoa@g+3,___fladd@b+3
  4259   001494  C086  F005         	movff	efgtoa@l,___fladd@a
  4260   001498  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4261   00149C  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4262   0014A0  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4263   0014A4  ECCD  F00E         	call	___fladd	;wreg free
  4264   0014A8  C001  F082         	movff	?___fladd,efgtoa@h
  4265   0014AC  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4266   0014B0  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4267   0014B4  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4268   0014B8                     
  4269                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  4270   0014B8  C082  F02A         	movff	efgtoa@h,___flge@ff1
  4271   0014BC  C083  F02B         	movff	efgtoa@h+1,___flge@ff1+1
  4272   0014C0  C084  F02C         	movff	efgtoa@h+2,___flge@ff1+2
  4273   0014C4  C085  F02D         	movff	efgtoa@h+3,___flge@ff1+3
  4274   0014C8  0E00               	movlw	0
  4275   0014CA  6E15               	movwf	___flmul@a^0,c
  4276   0014CC  0E00               	movlw	0
  4277   0014CE  6E16               	movwf	(___flmul@a+1)^0,c
  4278   0014D0  0E20               	movlw	32
  4279   0014D2  6E17               	movwf	(___flmul@a+2)^0,c
  4280   0014D4  0E41               	movlw	65
  4281   0014D6  6E18               	movwf	(___flmul@a+3)^0,c
  4282   0014D8  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4283   0014DC  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4284   0014E0  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4285   0014E4  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4286   0014E8  EC2D  F011         	call	___flmul	;wreg free
  4287   0014EC  C011  F02E         	movff	?___flmul,___flge@ff2
  4288   0014F0  C012  F02F         	movff	?___flmul+1,___flge@ff2+1
  4289   0014F4  C013  F030         	movff	?___flmul+2,___flge@ff2+2
  4290   0014F8  C014  F031         	movff	?___flmul+3,___flge@ff2+3
  4291   0014FC  EC24  F020         	call	___flge	;wreg free
  4292   001500  A0D8               	btfss	status,0,c
  4293   001502  EF85  F00A         	goto	u4351
  4294   001506  EF87  F00A         	goto	u4350
  4295   00150A                     u4351:
  4296   00150A  EFB0  F00A         	goto	l4690
  4297   00150E                     u4350:
  4298   00150E                     
  4299                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  4300   00150E  0100               	movlb	0	; () banked
  4301   001510  4B78               	infsnz	efgtoa@e& (0+255),f,b
  4302   001512  2B79               	incf	(efgtoa@e+1)& (0+255),f,b
  4303   001514                     
  4304                           ; BSR set to: 0
  4305                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  4306   001514  C07C  F011         	movff	efgtoa@ou,___flmul@b
  4307   001518  C07D  F012         	movff	efgtoa@ou+1,___flmul@b+1
  4308   00151C  C07E  F013         	movff	efgtoa@ou+2,___flmul@b+2
  4309   001520  C07F  F014         	movff	efgtoa@ou+3,___flmul@b+3
  4310   001524  0E00               	movlw	0
  4311   001526  6E15               	movwf	___flmul@a^0,c
  4312   001528  0E00               	movlw	0
  4313   00152A  6E16               	movwf	(___flmul@a+1)^0,c
  4314   00152C  0E20               	movlw	32
  4315   00152E  6E17               	movwf	(___flmul@a+2)^0,c
  4316   001530  0E41               	movlw	65
  4317   001532  6E18               	movwf	(___flmul@a+3)^0,c
  4318   001534  EC2D  F011         	call	___flmul	;wreg free
  4319   001538  C011  F07C         	movff	?___flmul,efgtoa@ou
  4320   00153C  C012  F07D         	movff	?___flmul+1,efgtoa@ou+1
  4321   001540  C013  F07E         	movff	?___flmul+2,efgtoa@ou+2
  4322   001544  C014  F07F         	movff	?___flmul+3,efgtoa@ou+3
  4323   001548                     
  4324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  4325   001548  0E66               	movlw	102
  4326   00154A  0100               	movlb	0	; () banked
  4327   00154C  1973               	xorwf	efgtoa@nmode& (0+255),w,b
  4328   00154E  A4D8               	btfss	status,2,c
  4329   001550  EFAC  F00A         	goto	u4361
  4330   001554  EFAE  F00A         	goto	u4360
  4331   001558                     u4361:
  4332   001558  EFB0  F00A         	goto	l4690
  4333   00155C                     u4360:
  4334   00155C                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  4337   00155C  4B76               	infsnz	efgtoa@m& (0+255),f,b
  4338   00155E  2B77               	incf	(efgtoa@m+1)& (0+255),f,b
  4339   001560                     l4690:
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  4342   001560  C07C  F091         	movff	efgtoa@ou,efgtoa@u
  4343   001564  C07D  F092         	movff	efgtoa@ou+1,efgtoa@u+1
  4344   001568  C07E  F093         	movff	efgtoa@ou+2,efgtoa@u+2
  4345   00156C  C07F  F094         	movff	efgtoa@ou+3,efgtoa@u+3
  4346   001570                     
  4347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  4348   001570  C078  F069         	movff	efgtoa@e,efgtoa@ne
  4349   001574  C079  F06A         	movff	efgtoa@e+1,efgtoa@ne+1
  4350   001578                     
  4351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  4352   001578  0E00               	movlw	0
  4353   00157A  0100               	movlb	0	; () banked
  4354   00157C  6F71               	movwf	efgtoa@pp& (0+255),b
  4355   00157E                     
  4356                           ; BSR set to: 0
  4357                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  4358   00157E  0E00               	movlw	0
  4359   001580  6F6E               	movwf	(efgtoa@t+1)& (0+255),b
  4360   001582  0E00               	movlw	0
  4361   001584  6F6D               	movwf	efgtoa@t& (0+255),b
  4362   001586                     
  4363                           ; BSR set to: 0
  4364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  4365   001586  0E00               	movlw	0
  4366   001588  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4367   00158A  0E00               	movlw	0
  4368   00158C  6F80               	movwf	efgtoa@i& (0+255),b
  4369                           
  4370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4371   00158E  EFAE  F00B         	goto	l4740
  4372   001592                     l4700:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  4376   001592  C082  F032         	movff	efgtoa@h,___fldiv@b
  4377   001596  C083  F033         	movff	efgtoa@h+1,___fldiv@b+1
  4378   00159A  C084  F034         	movff	efgtoa@h+2,___fldiv@b+2
  4379   00159E  C085  F035         	movff	efgtoa@h+3,___fldiv@b+3
  4380   0015A2  C091  F036         	movff	efgtoa@u,___fldiv@a
  4381   0015A6  C092  F037         	movff	efgtoa@u+1,___fldiv@a+1
  4382   0015AA  C093  F038         	movff	efgtoa@u+2,___fldiv@a+2
  4383   0015AE  C094  F039         	movff	efgtoa@u+3,___fldiv@a+3
  4384   0015B2  EC42  F013         	call	___fldiv	;wreg free
  4385   0015B6  C032  F04B         	movff	?___fldiv,floorf@x
  4386   0015BA  C033  F04C         	movff	?___fldiv+1,floorf@x+1
  4387   0015BE  C034  F04D         	movff	?___fldiv+2,floorf@x+2
  4388   0015C2  C035  F04E         	movff	?___fldiv+3,floorf@x+3
  4389   0015C6  ECA2  F01A         	call	_floorf	;wreg free
  4390   0015CA  C04B  F086         	movff	?_floorf,efgtoa@l
  4391   0015CE  C04C  F087         	movff	?_floorf+1,efgtoa@l+1
  4392   0015D2  C04D  F088         	movff	?_floorf+2,efgtoa@l+2
  4393   0015D6  C04E  F089         	movff	?_floorf+3,efgtoa@l+3
  4394                           
  4395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4396   0015DA  C086  F001         	movff	efgtoa@l,___fltol@f1
  4397   0015DE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4398   0015E2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4399   0015E6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4400   0015EA  ECA1  F01F         	call	___fltol	;wreg free
  4401   0015EE  BE02               	btfsc	(?___fltol+1)^0,7,c
  4402   0015F0  EF05  F00B         	goto	u4370
  4403   0015F4  5002               	movf	(?___fltol+1)^0,w,c
  4404   0015F6  E107               	bnz	u4371
  4405   0015F8  0E0A               	movlw	10
  4406   0015FA  5C01               	subwf	?___fltol^0,w,c
  4407   0015FC  B0D8               	btfsc	status,0,c
  4408   0015FE  EF03  F00B         	goto	u4371
  4409   001602  EF05  F00B         	goto	u4370
  4410   001606                     u4371:
  4411   001606  EF15  F00B         	goto	l4704
  4412   00160A                     u4370:
  4413   00160A  C086  F001         	movff	efgtoa@l,___fltol@f1
  4414   00160E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4415   001612  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4416   001616  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4417   00161A  ECA1  F01F         	call	___fltol	;wreg free
  4418   00161E  C001  F074         	movff	?___fltol,efgtoa@d
  4419   001622  C002  F075         	movff	?___fltol+1,efgtoa@d+1
  4420   001626  EF1A  F00B         	goto	l1432
  4421   00162A                     l4704:
  4422   00162A  0E00               	movlw	0
  4423   00162C  0100               	movlb	0	; () banked
  4424   00162E  6F75               	movwf	(efgtoa@d+1)& (0+255),b
  4425   001630  0E09               	movlw	9
  4426   001632  6F74               	movwf	efgtoa@d& (0+255),b
  4427   001634                     l1432:
  4428                           
  4429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  4430   001634  0100               	movlb	0	; () banked
  4431   001636  5171               	movf	efgtoa@pp& (0+255),w,b
  4432   001638  A4D8               	btfss	status,2,c
  4433   00163A  EF21  F00B         	goto	u4381
  4434   00163E  EF23  F00B         	goto	u4380
  4435   001642                     u4381:
  4436   001642  EF4B  F00B         	goto	l4724
  4437   001646                     u4380:
  4438   001646                     
  4439                           ; BSR set to: 0
  4440   001646  BF6A               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4441   001648  EF2A  F00B         	goto	u4390
  4442   00164C  EF28  F00B         	goto	u4391
  4443   001650                     u4391:
  4444   001650  EF4B  F00B         	goto	l4724
  4445   001654                     u4390:
  4446   001654                     
  4447                           ; BSR set to: 0
  4448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  4449   001654  0E10               	movlw	low _dbuf
  4450   001656  258B               	addwf	efgtoa@n& (0+255),w,b
  4451   001658  6ED9               	movwf	fsr2l,c
  4452   00165A  0E01               	movlw	high _dbuf
  4453   00165C  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4454   00165E  6EDA               	movwf	fsr2h,c
  4455   001660  0E2E               	movlw	46
  4456   001662  6EDF               	movwf	indf2,c
  4457   001664                     
  4458                           ; BSR set to: 0
  4459   001664  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4460   001666  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4461   001668                     
  4462                           ; BSR set to: 0
  4463                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  4464   001668  077A               	decf	efgtoa@w& (0+255),f,b
  4465   00166A  A0D8               	btfss	status,0,c
  4466   00166C  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4467   00166E                     
  4468                           ; BSR set to: 0
  4469                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  4470   00166E  0E01               	movlw	1
  4471   001670  6F71               	movwf	efgtoa@pp& (0+255),b
  4472   001672  EF4B  F00B         	goto	l4724
  4473   001676                     l4716:
  4474                           
  4475                           ; BSR set to: 0
  4476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  4477   001676  0E10               	movlw	low _dbuf
  4478   001678  258B               	addwf	efgtoa@n& (0+255),w,b
  4479   00167A  6ED9               	movwf	fsr2l,c
  4480   00167C  0E01               	movlw	high _dbuf
  4481   00167E  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4482   001680  6EDA               	movwf	fsr2h,c
  4483   001682  0E30               	movlw	48
  4484   001684  6EDF               	movwf	indf2,c
  4485   001686                     
  4486                           ; BSR set to: 0
  4487   001686  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4488   001688  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4489   00168A                     
  4490                           ; BSR set to: 0
  4491                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  4492   00168A  077A               	decf	efgtoa@w& (0+255),f,b
  4493   00168C  A0D8               	btfss	status,0,c
  4494   00168E  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4495   001690                     
  4496                           ; BSR set to: 0
  4497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  4498   001690  076D               	decf	efgtoa@t& (0+255),f,b
  4499   001692  A0D8               	btfss	status,0,c
  4500   001694  076E               	decf	(efgtoa@t+1)& (0+255),f,b
  4501   001696                     l4724:
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  4505   001696  516D               	movf	efgtoa@t& (0+255),w,b
  4506   001698  116E               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4507   00169A  A4D8               	btfss	status,2,c
  4508   00169C  EF52  F00B         	goto	u4401
  4509   0016A0  EF54  F00B         	goto	u4400
  4510   0016A4                     u4401:
  4511   0016A4  EF3B  F00B         	goto	l4716
  4512   0016A8                     u4400:
  4513   0016A8                     
  4514                           ; BSR set to: 0
  4515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4516   0016A8  0E10               	movlw	low _dbuf
  4517   0016AA  258B               	addwf	efgtoa@n& (0+255),w,b
  4518   0016AC  6ED9               	movwf	fsr2l,c
  4519   0016AE  0E01               	movlw	high _dbuf
  4520   0016B0  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4521   0016B2  6EDA               	movwf	fsr2h,c
  4522   0016B4  5174               	movf	efgtoa@d& (0+255),w,b
  4523   0016B6  0F30               	addlw	48
  4524   0016B8  6EDF               	movwf	indf2,c
  4525   0016BA                     
  4526                           ; BSR set to: 0
  4527   0016BA  4B8B               	infsnz	efgtoa@n& (0+255),f,b
  4528   0016BC  2B8C               	incf	(efgtoa@n+1)& (0+255),f,b
  4529   0016BE                     
  4530                           ; BSR set to: 0
  4531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  4532   0016BE  077A               	decf	efgtoa@w& (0+255),f,b
  4533   0016C0  A0D8               	btfss	status,0,c
  4534   0016C2  077B               	decf	(efgtoa@w+1)& (0+255),f,b
  4535   0016C4                     
  4536                           ; BSR set to: 0
  4537                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  4538   0016C4  C082  F02A         	movff	efgtoa@h,___flsub@b
  4539   0016C8  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4540   0016CC  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4541   0016D0  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4542   0016D4  C086  F015         	movff	efgtoa@l,___flmul@a
  4543   0016D8  C087  F016         	movff	efgtoa@l+1,___flmul@a+1
  4544   0016DC  C088  F017         	movff	efgtoa@l+2,___flmul@a+2
  4545   0016E0  C089  F018         	movff	efgtoa@l+3,___flmul@a+3
  4546   0016E4  C091  F011         	movff	efgtoa@u,___flmul@b
  4547   0016E8  C092  F012         	movff	efgtoa@u+1,___flmul@b+1
  4548   0016EC  C093  F013         	movff	efgtoa@u+2,___flmul@b+2
  4549   0016F0  C094  F014         	movff	efgtoa@u+3,___flmul@b+3
  4550   0016F4  EC2D  F011         	call	___flmul	;wreg free
  4551   0016F8  C011  F02E         	movff	?___flmul,___flsub@a
  4552   0016FC  C012  F02F         	movff	?___flmul+1,___flsub@a+1
  4553   001700  C013  F030         	movff	?___flmul+2,___flsub@a+2
  4554   001704  C014  F031         	movff	?___flmul+3,___flsub@a+3
  4555   001708  EC1C  F025         	call	___flsub	;wreg free
  4556   00170C  C02A  F082         	movff	?___flsub,efgtoa@h
  4557   001710  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  4558   001714  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  4559   001718  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  4560   00171C                     
  4561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  4562   00171C  C091  F032         	movff	efgtoa@u,___fldiv@b
  4563   001720  C092  F033         	movff	efgtoa@u+1,___fldiv@b+1
  4564   001724  C093  F034         	movff	efgtoa@u+2,___fldiv@b+2
  4565   001728  C094  F035         	movff	efgtoa@u+3,___fldiv@b+3
  4566   00172C  0E00               	movlw	0
  4567   00172E  6E36               	movwf	___fldiv@a^0,c
  4568   001730  0E00               	movlw	0
  4569   001732  6E37               	movwf	(___fldiv@a+1)^0,c
  4570   001734  0E20               	movlw	32
  4571   001736  6E38               	movwf	(___fldiv@a+2)^0,c
  4572   001738  0E41               	movlw	65
  4573   00173A  6E39               	movwf	(___fldiv@a+3)^0,c
  4574   00173C  EC42  F013         	call	___fldiv	;wreg free
  4575   001740  C032  F091         	movff	?___fldiv,efgtoa@u
  4576   001744  C033  F092         	movff	?___fldiv+1,efgtoa@u+1
  4577   001748  C034  F093         	movff	?___fldiv+2,efgtoa@u+2
  4578   00174C  C035  F094         	movff	?___fldiv+3,efgtoa@u+3
  4579   001750                     
  4580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  4581   001750  0100               	movlb	0	; () banked
  4582   001752  0769               	decf	efgtoa@ne& (0+255),f,b
  4583   001754  A0D8               	btfss	status,0,c
  4584   001756  076A               	decf	(efgtoa@ne+1)& (0+255),f,b
  4585   001758                     
  4586                           ; BSR set to: 0
  4587                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  4588   001758  4B80               	infsnz	efgtoa@i& (0+255),f,b
  4589   00175A  2B81               	incf	(efgtoa@i+1)& (0+255),f,b
  4590   00175C                     l4740:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4594   00175C  5176               	movf	efgtoa@m& (0+255),w,b
  4595   00175E  5D80               	subwf	efgtoa@i& (0+255),w,b
  4596   001760  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4597   001762  0A80               	xorlw	128
  4598   001764  6F67               	movwf	??_efgtoa& (0+255),b
  4599   001766  5177               	movf	(efgtoa@m+1)& (0+255),w,b
  4600   001768  0A80               	xorlw	128
  4601   00176A  5967               	subwfb	??_efgtoa& (0+255),w,b
  4602   00176C  B0D8               	btfsc	status,0,c
  4603   00176E  EFBB  F00B         	goto	u4411
  4604   001772  EFBD  F00B         	goto	u4410
  4605   001776                     u4411:
  4606   001776  EFCB  F00B         	goto	l4744
  4607   00177A                     u4410:
  4608   00177A                     
  4609                           ; BSR set to: 0
  4610   00177A  BF8C               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4611   00177C  EFC9  F00B         	goto	u4421
  4612   001780  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4613   001782  E109               	bnz	u4420
  4614   001784  0E4B               	movlw	75
  4615   001786  5D8B               	subwf	efgtoa@n& (0+255),w,b
  4616   001788  A0D8               	btfss	status,0,c
  4617   00178A  EFC9  F00B         	goto	u4421
  4618   00178E  EFCB  F00B         	goto	u4420
  4619   001792                     u4421:
  4620   001792  EFC9  F00A         	goto	l4700
  4621   001796                     u4420:
  4622   001796                     l4744:
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  4626   001796  0E00               	movlw	0
  4627   001798  6F81               	movwf	(efgtoa@i+1)& (0+255),b
  4628   00179A  0E4F               	movlw	79
  4629   00179C  6F80               	movwf	efgtoa@i& (0+255),b
  4630   00179E                     
  4631                           ; BSR set to: 0
  4632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  4633   00179E  0E10               	movlw	low _dbuf
  4634   0017A0  2580               	addwf	efgtoa@i& (0+255),w,b
  4635   0017A2  6ED9               	movwf	fsr2l,c
  4636   0017A4  0E01               	movlw	high _dbuf
  4637   0017A6  2181               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4638   0017A8  6EDA               	movwf	fsr2h,c
  4639   0017AA  0E00               	movlw	0
  4640   0017AC  6EDF               	movwf	indf2,c
  4641   0017AE                     
  4642                           ; BSR set to: 0
  4643                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4644   0017AE  0E10               	movlw	low _dbuf
  4645   0017B0  6F67               	movwf	??_efgtoa& (0+255),b
  4646   0017B2  0E01               	movlw	high _dbuf
  4647   0017B4  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4648   0017B6  518B               	movf	efgtoa@n& (0+255),w,b
  4649   0017B8  5F67               	subwf	??_efgtoa& (0+255),f,b
  4650   0017BA  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4651   0017BC  5B68               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4652   0017BE  5180               	movf	efgtoa@i& (0+255),w,b
  4653   0017C0  2567               	addwf	??_efgtoa& (0+255),w,b
  4654   0017C2  6E01               	movwf	memcpy@d1^0,c
  4655   0017C4  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4656   0017C6  2168               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4657   0017C8  6E02               	movwf	(memcpy@d1+1)^0,c
  4658   0017CA  0E10               	movlw	low _dbuf
  4659   0017CC  6E03               	movwf	memcpy@s1^0,c
  4660   0017CE  0E01               	movlw	high _dbuf
  4661   0017D0  6E04               	movwf	(memcpy@s1+1)^0,c
  4662   0017D2  C08B  F005         	movff	efgtoa@n,memcpy@n
  4663   0017D6  C08C  F006         	movff	efgtoa@n+1,memcpy@n+1
  4664   0017DA  EC07  F024         	call	_memcpy	;wreg free
  4665   0017DE                     
  4666                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  4667   0017DE  0100               	movlb	0	; () banked
  4668   0017E0  518B               	movf	efgtoa@n& (0+255),w,b
  4669   0017E2  5D80               	subwf	efgtoa@i& (0+255),w,b
  4670   0017E4  6F8B               	movwf	efgtoa@n& (0+255),b
  4671   0017E6  518C               	movf	(efgtoa@n+1)& (0+255),w,b
  4672   0017E8  5981               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4673   0017EA  6F8C               	movwf	(efgtoa@n+1)& (0+255),b
  4674   0017EC                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  4677   0017EC  518A               	movf	efgtoa@sign& (0+255),w,b
  4678   0017EE  A4D8               	btfss	status,2,c
  4679   0017F0  EFFC  F00B         	goto	u4431
  4680   0017F4  EFFF  F00B         	goto	u4430
  4681   0017F8                     u4431:
  4682   0017F8  0E01               	movlw	1
  4683   0017FA  EF00  F00C         	goto	u4440
  4684   0017FE                     u4430:
  4685   0017FE  0E00               	movlw	0
  4686   001800                     u4440:
  4687   001800  6F80               	movwf	efgtoa@i& (0+255),b
  4688   001802  6B81               	clrf	(efgtoa@i+1)& (0+255),b
  4689   001804                     
  4690                           ; BSR set to: 0
  4691                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  4692   001804  518A               	movf	efgtoa@sign& (0+255),w,b
  4693   001806  B4D8               	btfsc	status,2,c
  4694   001808  EF08  F00C         	goto	u4451
  4695   00180C  EF0A  F00C         	goto	u4450
  4696   001810                     u4451:
  4697   001810  EF15  F00C         	goto	l4758
  4698   001814                     u4450:
  4699   001814                     
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  4702   001814  078B               	decf	efgtoa@n& (0+255),f,b
  4703   001816  A0D8               	btfss	status,0,c
  4704   001818  078C               	decf	(efgtoa@n+1)& (0+255),f,b
  4705   00181A  0E10               	movlw	low _dbuf
  4706   00181C  258B               	addwf	efgtoa@n& (0+255),w,b
  4707   00181E  6ED9               	movwf	fsr2l,c
  4708   001820  0E01               	movlw	high _dbuf
  4709   001822  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4710   001824  6EDA               	movwf	fsr2h,c
  4711   001826  C08A  FFDF         	movff	efgtoa@sign,indf2
  4712   00182A                     l4758:
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  4716   00182A  5180               	movf	efgtoa@i& (0+255),w,b
  4717   00182C  5F7A               	subwf	efgtoa@w& (0+255),f,b
  4718   00182E  5181               	movf	(efgtoa@i+1)& (0+255),w,b
  4719   001830  5B7B               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4720   001832                     
  4721                           ; BSR set to: 0
  4722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4723   001832  C060  F011         	movff	efgtoa@fp,pad@fp
  4724   001836  C061  F012         	movff	efgtoa@fp+1,pad@fp+1
  4725   00183A  0E10               	movlw	low _dbuf
  4726   00183C  258B               	addwf	efgtoa@n& (0+255),w,b
  4727   00183E  6E13               	movwf	pad@buf^0,c
  4728   001840  0E01               	movlw	high _dbuf
  4729   001842  218C               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4730   001844  6E14               	movwf	(pad@buf+1)^0,c
  4731   001846  C07A  F015         	movff	efgtoa@w,pad@p
  4732   00184A  C07B  F016         	movff	efgtoa@w+1,pad@p+1
  4733   00184E  ECB1  F022         	call	_pad	;wreg free
  4734   001852                     l1399:
  4735   001852  0012               	return		;funcret
  4736   001854                     __end_of_efgtoa:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _strcpy *****************
  4740 ;; Defined at:
  4741 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4744 ;;		 -> dbuf(80), 
  4745 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4746 ;;		 -> STR_6(4), STR_3(4), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  d               2    6[COMRAM] PTR unsigned char 
  4749 ;;		 -> dbuf(80), 
  4750 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4751 ;;		 -> STR_6(4), STR_3(4), 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  2    0[COMRAM] PTR unsigned char 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4761 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4764 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;Total ram usage:        8 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_efgtoa
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text13
  4775   004A7E                     __ptext13:
  4776                           	callstack 0
  4777   004A7E                     _strcpy:
  4778                           	callstack 26
  4779   004A7E  C003  F005         	movff	strcpy@src,strcpy@s
  4780   004A82  C004  F006         	movff	strcpy@src+1,strcpy@s+1
  4781   004A86  C001  F007         	movff	strcpy@dest,strcpy@d
  4782   004A8A  C002  F008         	movff	strcpy@dest+1,strcpy@d+1
  4783   004A8E                     l4424:
  4784   004A8E  C005  FFF6         	movff	strcpy@s,tblptrl
  4785   004A92  C006  FFF7         	movff	strcpy@s+1,tblptrh
  4786   004A96  4A05               	infsnz	strcpy@s^0,f,c
  4787   004A98  2A06               	incf	(strcpy@s+1)^0,f,c
  4788   004A9A                     	if	0	;tblptru may be non-zero
  4789   004A9A                     	endif
  4790   004A9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4791   004A9A  0E00               	movlw	low (__mediumconst shr (0+16))
  4792   004A9C  6EF8               	movwf	tblptru,c
  4793   004A9E                     	endif
  4794   004A9E  C007  FFD9         	movff	strcpy@d,fsr2l
  4795   004AA2  C008  FFDA         	movff	strcpy@d+1,fsr2h
  4796   004AA6  4A07               	infsnz	strcpy@d^0,f,c
  4797   004AA8  2A08               	incf	(strcpy@d+1)^0,f,c
  4798   004AAA  0008               	tblrd		*
  4799   004AAC  CFF5 FFDF          	movff	tablat,indf2
  4800   004AB0  50DF               	movf	indf2,w,c
  4801   004AB2  A4D8               	btfss	status,2,c
  4802   004AB4  EF5E  F025         	goto	u3871
  4803   004AB8  EF60  F025         	goto	u3870
  4804   004ABC                     u3871:
  4805   004ABC  EF47  F025         	goto	l4424
  4806   004AC0                     u3870:
  4807   004AC0  0012               	return		;funcret
  4808   004AC2                     __end_of_strcpy:
  4809                           	callstack 0
  4810                           
  4811 ;; *************** function _memcpy *****************
  4812 ;; Defined at:
  4813 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  d1              2    0[COMRAM] PTR void 
  4816 ;;		 -> dbuf(80), 
  4817 ;;  s1              2    2[COMRAM] PTR const void 
  4818 ;;		 -> dbuf(80), 
  4819 ;;  n               2    4[COMRAM] unsigned int 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4822 ;;		 -> dbuf(80), 
  4823 ;;  d               2    6[COMRAM] PTR unsigned char 
  4824 ;;		 -> dbuf(80), 
  4825 ;;  tmp             1   10[COMRAM] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  2    0[COMRAM] PTR void 
  4828 ;; Registers used:
  4829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4835 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4836 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;Total ram usage:       11 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_efgtoa
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text14
  4849   00480E                     __ptext14:
  4850                           	callstack 0
  4851   00480E                     _memcpy:
  4852                           	callstack 26
  4853   00480E  C003  F009         	movff	memcpy@s1,memcpy@s
  4854   004812  C004  F00A         	movff	memcpy@s1+1,memcpy@s+1
  4855   004816  C001  F007         	movff	memcpy@d1,memcpy@d
  4856   00481A  C002  F008         	movff	memcpy@d1+1,memcpy@d+1
  4857   00481E  EF21  F024         	goto	l4468
  4858   004822                     l4460:
  4859   004822  C009  FFD9         	movff	memcpy@s,fsr2l
  4860   004826  C00A  FFDA         	movff	memcpy@s+1,fsr2h
  4861   00482A  50DF               	movf	indf2,w,c
  4862   00482C  6E0B               	movwf	memcpy@tmp^0,c
  4863   00482E  4A09               	infsnz	memcpy@s^0,f,c
  4864   004830  2A0A               	incf	(memcpy@s+1)^0,f,c
  4865   004832  C007  FFD9         	movff	memcpy@d,fsr2l
  4866   004836  C008  FFDA         	movff	memcpy@d+1,fsr2h
  4867   00483A  C00B  FFDF         	movff	memcpy@tmp,indf2
  4868   00483E  4A07               	infsnz	memcpy@d^0,f,c
  4869   004840  2A08               	incf	(memcpy@d+1)^0,f,c
  4870   004842                     l4468:
  4871   004842  0605               	decf	memcpy@n^0,f,c
  4872   004844  A0D8               	btfss	status,0,c
  4873   004846  0606               	decf	(memcpy@n+1)^0,f,c
  4874   004848  2805               	incf	memcpy@n^0,w,c
  4875   00484A  E106               	bnz	u3991
  4876   00484C  2806               	incf	(memcpy@n+1)^0,w,c
  4877   00484E  A4D8               	btfss	status,2,c
  4878   004850  EF2C  F024         	goto	u3991
  4879   004854  EF2E  F024         	goto	u3990
  4880   004858                     u3991:
  4881   004858  EF11  F024         	goto	l4460
  4882   00485C                     u3990:
  4883   00485C  0012               	return		;funcret
  4884   00485E                     __end_of_memcpy:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function _labs *****************
  4888 ;; Defined at:
  4889 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  a               4    0[COMRAM] long 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  4    0[COMRAM] long 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;Total ram usage:        8 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; This function calls:
  4910 ;;		Nothing
  4911 ;; This function is called by:
  4912 ;;		_efgtoa
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text15
  4917   004650                     __ptext15:
  4918                           	callstack 0
  4919   004650                     _labs:
  4920                           	callstack 26
  4921   004650  BE04               	btfsc	(labs@a+3)^0,7,c
  4922   004652  EF37  F023         	goto	u3880
  4923   004656  5004               	movf	(labs@a+3)^0,w,c
  4924   004658  1003               	iorwf	(labs@a+2)^0,w,c
  4925   00465A  1002               	iorwf	(labs@a+1)^0,w,c
  4926   00465C  E106               	bnz	u3881
  4927   00465E  0401               	decf	labs@a^0,w,c
  4928   004660  B0D8               	btfsc	status,0,c
  4929   004662  EF35  F023         	goto	u3881
  4930   004666  EF37  F023         	goto	u3880
  4931   00466A                     u3881:
  4932   00466A  EF52  F023         	goto	l1504
  4933   00466E                     u3880:
  4934   00466E  C001  F005         	movff	labs@a,??_labs
  4935   004672  C002  F006         	movff	labs@a+1,??_labs+1
  4936   004676  C003  F007         	movff	labs@a+2,??_labs+2
  4937   00467A  C004  F008         	movff	labs@a+3,??_labs+3
  4938   00467E  1E05               	comf	??_labs^0,f,c
  4939   004680  1E06               	comf	(??_labs+1)^0,f,c
  4940   004682  1E07               	comf	(??_labs+2)^0,f,c
  4941   004684  1E08               	comf	(??_labs+3)^0,f,c
  4942   004686  2A05               	incf	??_labs^0,f,c
  4943   004688  0E00               	movlw	0
  4944   00468A  2206               	addwfc	(??_labs+1)^0,f,c
  4945   00468C  2207               	addwfc	(??_labs+2)^0,f,c
  4946   00468E  2208               	addwfc	(??_labs+3)^0,f,c
  4947   004690  C005  F001         	movff	??_labs,?_labs
  4948   004694  C006  F002         	movff	??_labs+1,?_labs+1
  4949   004698  C007  F003         	movff	??_labs+2,?_labs+2
  4950   00469C  C008  F004         	movff	??_labs+3,?_labs+3
  4951   0046A0  EF5A  F023         	goto	l1507
  4952   0046A4                     l1504:
  4953   0046A4  C001  F001         	movff	labs@a,?_labs
  4954   0046A8  C002  F002         	movff	labs@a+1,?_labs+1
  4955   0046AC  C003  F003         	movff	labs@a+2,?_labs+2
  4956   0046B0  C004  F004         	movff	labs@a+3,?_labs+3
  4957   0046B4                     l1507:
  4958   0046B4  0012               	return		;funcret
  4959   0046B6                     __end_of_labs:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _floorf *****************
  4963 ;; Defined at:
  4964 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  x               4   74[COMRAM] float 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  u               4   90[COMRAM] struct .
  4969 ;;  m               4   84[COMRAM] unsigned long 
  4970 ;;  e               2   88[COMRAM] int 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  4   74[COMRAM] float 
  4973 ;; Registers used:
  4974 ;;		wreg, status,2, status,0
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4984 ;;Total ram usage:       20 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_efgtoa
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text16
  4994   003544                     __ptext16:
  4995                           	callstack 0
  4996   003544                     _floorf:
  4997                           	callstack 26
  4998   003544  C0E7  F05B         	movff	floorf@F526,floorf@u
  4999   003548  C0E8  F05C         	movff	floorf@F526+1,floorf@u+1
  5000   00354C  C0E9  F05D         	movff	floorf@F526+2,floorf@u+2
  5001   003550  C0EA  F05E         	movff	floorf@F526+3,floorf@u+3
  5002   003554  C04B  F05B         	movff	floorf@x,floorf@u
  5003   003558  C04C  F05C         	movff	floorf@x+1,floorf@u+1
  5004   00355C  C04D  F05D         	movff	floorf@x+2,floorf@u+2
  5005   003560  C04E  F05E         	movff	floorf@x+3,floorf@u+3
  5006   003564  0E81               	movlw	129
  5007   003566  6E4F               	movwf	??_floorf^0,c
  5008   003568  0EFF               	movlw	255
  5009   00356A  6E50               	movwf	(??_floorf+1)^0,c
  5010   00356C  C05B  F051         	movff	floorf@u,??_floorf+2
  5011   003570  C05C  F052         	movff	floorf@u+1,??_floorf+3
  5012   003574  C05D  F053         	movff	floorf@u+2,??_floorf+4
  5013   003578  C05E  F054         	movff	floorf@u+3,??_floorf+5
  5014   00357C  0E18               	movlw	24
  5015   00357E  EFC6  F01A         	goto	u3890
  5016   003582                     u3895:
  5017   003582  90D8               	bcf	status,0,c
  5018   003584  3254               	rrcf	(??_floorf+5)^0,f,c
  5019   003586  3253               	rrcf	(??_floorf+4)^0,f,c
  5020   003588  3252               	rrcf	(??_floorf+3)^0,f,c
  5021   00358A  3251               	rrcf	(??_floorf+2)^0,f,c
  5022   00358C                     u3890:
  5023   00358C  2EE8               	decfsz	wreg,f,c
  5024   00358E  EFC1  F01A         	goto	u3895
  5025   003592  5051               	movf	(??_floorf+2)^0,w,c
  5026   003594  244F               	addwf	??_floorf^0,w,c
  5027   003596  6E59               	movwf	floorf@e^0,c
  5028   003598  0E00               	movlw	0
  5029   00359A  2050               	addwfc	(??_floorf+1)^0,w,c
  5030   00359C  6E5A               	movwf	(floorf@e+1)^0,c
  5031   00359E  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5032   0035A0  EFDB  F01A         	goto	u3901
  5033   0035A4  505A               	movf	(floorf@e+1)^0,w,c
  5034   0035A6  E109               	bnz	u3900
  5035   0035A8  0E17               	movlw	23
  5036   0035AA  5C59               	subwf	floorf@e^0,w,c
  5037   0035AC  A0D8               	btfss	status,0,c
  5038   0035AE  EFDB  F01A         	goto	u3901
  5039   0035B2  EFDD  F01A         	goto	u3900
  5040   0035B6                     u3901:
  5041   0035B6  EFE7  F01A         	goto	l4436
  5042   0035BA                     u3900:
  5043   0035BA                     l4434:
  5044   0035BA  C04B  F04B         	movff	floorf@x,?_floorf
  5045   0035BE  C04C  F04C         	movff	floorf@x+1,?_floorf+1
  5046   0035C2  C04D  F04D         	movff	floorf@x+2,?_floorf+2
  5047   0035C6  C04E  F04E         	movff	floorf@x+3,?_floorf+3
  5048   0035CA  EFAA  F01B         	goto	l1493
  5049   0035CE                     l4436:
  5050   0035CE  BE5A               	btfsc	(floorf@e+1)^0,7,c
  5051   0035D0  EFEC  F01A         	goto	u3911
  5052   0035D4  EFEE  F01A         	goto	u3910
  5053   0035D8                     u3911:
  5054   0035D8  EF5E  F01B         	goto	l4446
  5055   0035DC                     u3910:
  5056   0035DC  C059  F04F         	movff	floorf@e,??_floorf
  5057   0035E0  0EFF               	movlw	255
  5058   0035E2  6E50               	movwf	(??_floorf+1)^0,c
  5059   0035E4  0EFF               	movlw	255
  5060   0035E6  6E51               	movwf	(??_floorf+2)^0,c
  5061   0035E8  0E7F               	movlw	127
  5062   0035EA  6E52               	movwf	(??_floorf+3)^0,c
  5063   0035EC  0E00               	movlw	0
  5064   0035EE  6E53               	movwf	(??_floorf+4)^0,c
  5065   0035F0                     u3925:
  5066   0035F0  664F               	tstfsz	??_floorf^0,c
  5067   0035F2  EFFD  F01A         	goto	u3926
  5068   0035F6  EF05  F01B         	goto	u3927
  5069   0035FA                     u3926:
  5070   0035FA  3453               	rlcf	(??_floorf+4)^0,w,c
  5071   0035FC  3253               	rrcf	(??_floorf+4)^0,f,c
  5072   0035FE  3252               	rrcf	(??_floorf+3)^0,f,c
  5073   003600  3251               	rrcf	(??_floorf+2)^0,f,c
  5074   003602  3250               	rrcf	(??_floorf+1)^0,f,c
  5075   003604  2E4F               	decfsz	??_floorf^0,f,c
  5076   003606  EFF8  F01A         	goto	u3925
  5077   00360A                     u3927:
  5078   00360A  C050  F055         	movff	??_floorf+1,floorf@m
  5079   00360E  C051  F056         	movff	??_floorf+2,floorf@m+1
  5080   003612  C052  F057         	movff	??_floorf+3,floorf@m+2
  5081   003616  C053  F058         	movff	??_floorf+4,floorf@m+3
  5082   00361A  5055               	movf	floorf@m^0,w,c
  5083   00361C  145B               	andwf	floorf@u^0,w,c
  5084   00361E  6E4F               	movwf	??_floorf^0,c
  5085   003620  5056               	movf	(floorf@m+1)^0,w,c
  5086   003622  145C               	andwf	(floorf@u+1)^0,w,c
  5087   003624  6E50               	movwf	(??_floorf+1)^0,c
  5088   003626  5057               	movf	(floorf@m+2)^0,w,c
  5089   003628  145D               	andwf	(floorf@u+2)^0,w,c
  5090   00362A  6E51               	movwf	(??_floorf+2)^0,c
  5091   00362C  5058               	movf	(floorf@m+3)^0,w,c
  5092   00362E  145E               	andwf	(floorf@u+3)^0,w,c
  5093   003630  6E52               	movwf	(??_floorf+3)^0,c
  5094   003632  504F               	movf	??_floorf^0,w,c
  5095   003634  1050               	iorwf	(??_floorf+1)^0,w,c
  5096   003636  1051               	iorwf	(??_floorf+2)^0,w,c
  5097   003638  1052               	iorwf	(??_floorf+3)^0,w,c
  5098   00363A  A4D8               	btfss	status,2,c
  5099   00363C  EF22  F01B         	goto	u3931
  5100   003640  EF24  F01B         	goto	u3930
  5101   003644                     u3931:
  5102   003644  EF26  F01B         	goto	l4442
  5103   003648                     u3930:
  5104   003648  EFDD  F01A         	goto	l4434
  5105   00364C                     l4442:
  5106   00364C  C05B  F04F         	movff	floorf@u,??_floorf
  5107   003650  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5108   003654  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5109   003658  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5110   00365C  0E20               	movlw	32
  5111   00365E  EF36  F01B         	goto	u3940
  5112   003662                     u3945:
  5113   003662  90D8               	bcf	status,0,c
  5114   003664  3252               	rrcf	(??_floorf+3)^0,f,c
  5115   003666  3251               	rrcf	(??_floorf+2)^0,f,c
  5116   003668  3250               	rrcf	(??_floorf+1)^0,f,c
  5117   00366A  324F               	rrcf	??_floorf^0,f,c
  5118   00366C                     u3940:
  5119   00366C  2EE8               	decfsz	wreg,f,c
  5120   00366E  EF31  F01B         	goto	u3945
  5121   003672  504F               	movf	??_floorf^0,w,c
  5122   003674  1050               	iorwf	(??_floorf+1)^0,w,c
  5123   003676  1051               	iorwf	(??_floorf+2)^0,w,c
  5124   003678  1052               	iorwf	(??_floorf+3)^0,w,c
  5125   00367A  B4D8               	btfsc	status,2,c
  5126   00367C  EF42  F01B         	goto	u3951
  5127   003680  EF44  F01B         	goto	u3950
  5128   003684                     u3951:
  5129   003684  EF4C  F01B         	goto	l1496
  5130   003688                     u3950:
  5131   003688  5055               	movf	floorf@m^0,w,c
  5132   00368A  265B               	addwf	floorf@u^0,f,c
  5133   00368C  5056               	movf	(floorf@m+1)^0,w,c
  5134   00368E  225C               	addwfc	(floorf@u+1)^0,f,c
  5135   003690  5057               	movf	(floorf@m+2)^0,w,c
  5136   003692  225D               	addwfc	(floorf@u+2)^0,f,c
  5137   003694  5058               	movf	(floorf@m+3)^0,w,c
  5138   003696  225E               	addwfc	(floorf@u+3)^0,f,c
  5139   003698                     l1496:
  5140   003698  1C55               	comf	floorf@m^0,w,c
  5141   00369A  6E4F               	movwf	??_floorf^0,c
  5142   00369C  1C56               	comf	(floorf@m+1)^0,w,c
  5143   00369E  6E50               	movwf	(??_floorf+1)^0,c
  5144   0036A0  1C57               	comf	(floorf@m+2)^0,w,c
  5145   0036A2  6E51               	movwf	(??_floorf+2)^0,c
  5146   0036A4  1C58               	comf	(floorf@m+3)^0,w,c
  5147   0036A6  6E52               	movwf	(??_floorf+3)^0,c
  5148   0036A8  504F               	movf	??_floorf^0,w,c
  5149   0036AA  165B               	andwf	floorf@u^0,f,c
  5150   0036AC  5050               	movf	(??_floorf+1)^0,w,c
  5151   0036AE  165C               	andwf	(floorf@u+1)^0,f,c
  5152   0036B0  5051               	movf	(??_floorf+2)^0,w,c
  5153   0036B2  165D               	andwf	(floorf@u+2)^0,f,c
  5154   0036B4  5052               	movf	(??_floorf+3)^0,w,c
  5155   0036B6  165E               	andwf	(floorf@u+3)^0,f,c
  5156   0036B8  EFA2  F01B         	goto	l4454
  5157   0036BC                     l4446:
  5158   0036BC  C05B  F04F         	movff	floorf@u,??_floorf
  5159   0036C0  C05C  F050         	movff	floorf@u+1,??_floorf+1
  5160   0036C4  C05D  F051         	movff	floorf@u+2,??_floorf+2
  5161   0036C8  C05E  F052         	movff	floorf@u+3,??_floorf+3
  5162   0036CC  0E20               	movlw	32
  5163   0036CE  EF6E  F01B         	goto	u3960
  5164   0036D2                     u3965:
  5165   0036D2  90D8               	bcf	status,0,c
  5166   0036D4  3252               	rrcf	(??_floorf+3)^0,f,c
  5167   0036D6  3251               	rrcf	(??_floorf+2)^0,f,c
  5168   0036D8  3250               	rrcf	(??_floorf+1)^0,f,c
  5169   0036DA  324F               	rrcf	??_floorf^0,f,c
  5170   0036DC                     u3960:
  5171   0036DC  2EE8               	decfsz	wreg,f,c
  5172   0036DE  EF69  F01B         	goto	u3965
  5173   0036E2  504F               	movf	??_floorf^0,w,c
  5174   0036E4  1050               	iorwf	(??_floorf+1)^0,w,c
  5175   0036E6  1051               	iorwf	(??_floorf+2)^0,w,c
  5176   0036E8  1052               	iorwf	(??_floorf+3)^0,w,c
  5177   0036EA  A4D8               	btfss	status,2,c
  5178   0036EC  EF7A  F01B         	goto	u3971
  5179   0036F0  EF7C  F01B         	goto	u3970
  5180   0036F4                     u3971:
  5181   0036F4  EF86  F01B         	goto	l4450
  5182   0036F8                     u3970:
  5183   0036F8  0E00               	movlw	0
  5184   0036FA  6E5B               	movwf	floorf@u^0,c
  5185   0036FC  0E00               	movlw	0
  5186   0036FE  6E5C               	movwf	(floorf@u+1)^0,c
  5187   003700  0E00               	movlw	0
  5188   003702  6E5D               	movwf	(floorf@u+2)^0,c
  5189   003704  0E00               	movlw	0
  5190   003706  6E5E               	movwf	(floorf@u+3)^0,c
  5191   003708  EFA2  F01B         	goto	l4454
  5192   00370C                     l4450:
  5193   00370C  90D8               	bcf	status,0,c
  5194   00370E  345B               	rlcf	floorf@u^0,w,c
  5195   003710  6E4F               	movwf	??_floorf^0,c
  5196   003712  345C               	rlcf	(floorf@u+1)^0,w,c
  5197   003714  6E50               	movwf	(??_floorf+1)^0,c
  5198   003716  345D               	rlcf	(floorf@u+2)^0,w,c
  5199   003718  6E51               	movwf	(??_floorf+2)^0,c
  5200   00371A  345E               	rlcf	(floorf@u+3)^0,w,c
  5201   00371C  6E52               	movwf	(??_floorf+3)^0,c
  5202   00371E  504F               	movf	??_floorf^0,w,c
  5203   003720  1050               	iorwf	(??_floorf+1)^0,w,c
  5204   003722  1051               	iorwf	(??_floorf+2)^0,w,c
  5205   003724  1052               	iorwf	(??_floorf+3)^0,w,c
  5206   003726  B4D8               	btfsc	status,2,c
  5207   003728  EF98  F01B         	goto	u3981
  5208   00372C  EF9A  F01B         	goto	u3980
  5209   003730                     u3981:
  5210   003730  EFA2  F01B         	goto	l4454
  5211   003734                     u3980:
  5212   003734  0E00               	movlw	0
  5213   003736  6E5B               	movwf	floorf@u^0,c
  5214   003738  0E00               	movlw	0
  5215   00373A  6E5C               	movwf	(floorf@u+1)^0,c
  5216   00373C  0E80               	movlw	128
  5217   00373E  6E5D               	movwf	(floorf@u+2)^0,c
  5218   003740  0EBF               	movlw	191
  5219   003742  6E5E               	movwf	(floorf@u+3)^0,c
  5220   003744                     l4454:
  5221   003744  C05B  F04B         	movff	floorf@u,?_floorf
  5222   003748  C05C  F04C         	movff	floorf@u+1,?_floorf+1
  5223   00374C  C05D  F04D         	movff	floorf@u+2,?_floorf+2
  5224   003750  C05E  F04E         	movff	floorf@u+3,?_floorf+3
  5225   003754                     l1493:
  5226   003754  0012               	return		;funcret
  5227   003756                     __end_of_floorf:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function ___fpclassifyf *****************
  5231 ;; Defined at:
  5232 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  x               4    0[COMRAM] float 
  5235 ;; Auto vars:     Size  Location     Type
  5236 ;;  u               4   10[COMRAM] struct .
  5237 ;;  e               2    8[COMRAM] int 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2    0[COMRAM] int 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5248 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5249 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;Total ram usage:       14 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; This function calls:
  5254 ;;		Nothing
  5255 ;; This function is called by:
  5256 ;;		_efgtoa
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           	psect	text17
  5261   00414C                     __ptext17:
  5262                           	callstack 0
  5263   00414C                     ___fpclassifyf:
  5264                           	callstack 26
  5265   00414C  C0EB  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5266   004150  C0EC  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5267   004154  C0ED  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5268   004158  C0EE  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5269   00415C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5270   004160  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5271   004164  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5272   004168  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5273   00416C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5274   004170  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5275   004174  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5276   004178  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5277   00417C  0E18               	movlw	24
  5278   00417E  EFC6  F020         	goto	u3800
  5279   004182                     u3805:
  5280   004182  90D8               	bcf	status,0,c
  5281   004184  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5282   004186  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5283   004188  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5284   00418A  3205               	rrcf	??___fpclassifyf^0,f,c
  5285   00418C                     u3800:
  5286   00418C  2EE8               	decfsz	wreg,f,c
  5287   00418E  EFC1  F020         	goto	u3805
  5288   004192  5005               	movf	??___fpclassifyf^0,w,c
  5289   004194  6E09               	movwf	___fpclassifyf@e^0,c
  5290   004196  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5291   004198  5009               	movf	___fpclassifyf@e^0,w,c
  5292   00419A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5293   00419C  A4D8               	btfss	status,2,c
  5294   00419E  EFD3  F020         	goto	u3811
  5295   0041A2  EFD5  F020         	goto	u3810
  5296   0041A6                     u3811:
  5297   0041A6  EFF5  F020         	goto	l4412
  5298   0041AA                     u3810:
  5299   0041AA  90D8               	bcf	status,0,c
  5300   0041AC  340B               	rlcf	___fpclassifyf@u^0,w,c
  5301   0041AE  6E05               	movwf	??___fpclassifyf^0,c
  5302   0041B0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5303   0041B2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5304   0041B4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5305   0041B6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5306   0041B8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5307   0041BA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5308   0041BC  5005               	movf	??___fpclassifyf^0,w,c
  5309   0041BE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5310   0041C0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5311   0041C2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5312   0041C4  A4D8               	btfss	status,2,c
  5313   0041C6  EFE7  F020         	goto	u3821
  5314   0041CA  EFE9  F020         	goto	u3820
  5315   0041CE                     u3821:
  5316   0041CE  EFEF  F020         	goto	l4408
  5317   0041D2                     u3820:
  5318   0041D2  0E00               	movlw	0
  5319   0041D4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5320   0041D6  0E02               	movlw	2
  5321   0041D8  6E01               	movwf	?___fpclassifyf^0,c
  5322   0041DA  EF24  F021         	goto	l1479
  5323   0041DE                     l4408:
  5324   0041DE  0E00               	movlw	0
  5325   0041E0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5326   0041E2  0E03               	movlw	3
  5327   0041E4  6E01               	movwf	?___fpclassifyf^0,c
  5328   0041E6  EF24  F021         	goto	l1479
  5329   0041EA                     l4412:
  5330   0041EA  2809               	incf	___fpclassifyf@e^0,w,c
  5331   0041EC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5332   0041EE  A4D8               	btfss	status,2,c
  5333   0041F0  EFFC  F020         	goto	u3831
  5334   0041F4  EFFE  F020         	goto	u3830
  5335   0041F8                     u3831:
  5336   0041F8  EF20  F021         	goto	l4418
  5337   0041FC                     u3830:
  5338   0041FC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5339   004200  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5340   004204  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5341   004208  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5342   00420C  0E09               	movlw	9
  5343   00420E                     u3845:
  5344   00420E  90D8               	bcf	status,0,c
  5345   004210  3605               	rlcf	??___fpclassifyf^0,f,c
  5346   004212  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5347   004214  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5348   004216  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5349   004218  2EE8               	decfsz	wreg,f,c
  5350   00421A  EF07  F021         	goto	u3845
  5351   00421E  5005               	movf	??___fpclassifyf^0,w,c
  5352   004220  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5353   004222  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5354   004224  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5355   004226  B4D8               	btfsc	status,2,c
  5356   004228  EF18  F021         	goto	u3851
  5357   00422C  EF1B  F021         	goto	u3850
  5358   004230                     u3851:
  5359   004230  0E01               	movlw	1
  5360   004232  EF1C  F021         	goto	u3860
  5361   004236                     u3850:
  5362   004236  0E00               	movlw	0
  5363   004238                     u3860:
  5364   004238  6E01               	movwf	?___fpclassifyf^0,c
  5365   00423A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5366   00423C  EF24  F021         	goto	l1479
  5367   004240                     l4418:
  5368   004240  0E00               	movlw	0
  5369   004242  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5370   004244  0E04               	movlw	4
  5371   004246  6E01               	movwf	?___fpclassifyf^0,c
  5372   004248                     l1479:
  5373   004248  0012               	return		;funcret
  5374   00424A                     __end_of___fpclassifyf:
  5375                           	callstack 0
  5376                           
  5377 ;; *************** function ___flneg *****************
  5378 ;; Defined at:
  5379 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;  f1              4    0[COMRAM] int 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4    0[COMRAM] int 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;Total ram usage:        4 bytes
  5398 ;; Hardware stack levels used: 1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_efgtoa
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text18
  5407   004B88                     __ptext18:
  5408                           	callstack 0
  5409   004B88                     ___flneg:
  5410                           	callstack 26
  5411   004B88  5001               	movf	___flneg@f1^0,w,c
  5412   004B8A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5413   004B8C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5414   004B8E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5415   004B90  B4D8               	btfsc	status,2,c
  5416   004B92  EFCD  F025         	goto	u3661
  5417   004B96  EFCF  F025         	goto	u3660
  5418   004B9A                     u3661:
  5419   004B9A  EFD7  F025         	goto	l4312
  5420   004B9E                     u3660:
  5421   004B9E  0E00               	movlw	0
  5422   004BA0  1A01               	xorwf	___flneg@f1^0,f,c
  5423   004BA2  0E00               	movlw	0
  5424   004BA4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5425   004BA6  0E00               	movlw	0
  5426   004BA8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5427   004BAA  0E80               	movlw	128
  5428   004BAC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5429   004BAE                     l4312:
  5430   004BAE  C001  F001         	movff	___flneg@f1,?___flneg
  5431   004BB2  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5432   004BB6  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5433   004BBA  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5434   004BBE  0012               	return		;funcret
  5435   004BC0                     __end_of___flneg:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _dtoa *****************
  5439 ;; Defined at:
  5440 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  5443 ;;		 -> sprintf@f(11), 
  5444 ;;  d               8   29[COMRAM] long long 
  5445 ;; Auto vars:     Size  Location     Type
  5446 ;;  n               8   51[COMRAM] long long 
  5447 ;;  i               2   59[COMRAM] int 
  5448 ;;  w               2   49[COMRAM] int 
  5449 ;;  p               2   47[COMRAM] int 
  5450 ;;  s               1   61[COMRAM] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5460 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;Total ram usage:       35 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; Hardware stack levels required when called: 4
  5467 ;; This function calls:
  5468 ;;		___aodiv
  5469 ;;		___aomod
  5470 ;;		_abs
  5471 ;;		_pad
  5472 ;; This function is called by:
  5473 ;;		_vfpfcnvrt
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text19
  5478   003052                     __ptext19:
  5479                           	callstack 0
  5480   003052                     _dtoa:
  5481                           	callstack 23
  5482   003052                     
  5483                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  5484   003052  C01E  F034         	movff	dtoa@d,dtoa@n
  5485   003056  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  5486   00305A  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  5487   00305E  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  5488   003062  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  5489   003066  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  5490   00306A  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  5491   00306E  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  5492   003072                     
  5493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5494   003072  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  5495   003074  EF3E  F018         	goto	u4041
  5496   003078  EF41  F018         	goto	u4040
  5497   00307C                     u4041:
  5498   00307C  0E01               	movlw	1
  5499   00307E  EF42  F018         	goto	u4050
  5500   003082                     u4040:
  5501   003082  0E00               	movlw	0
  5502   003084                     u4050:
  5503   003084  6E3E               	movwf	dtoa@s^0,c
  5504   003086                     
  5505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5506   003086  503E               	movf	dtoa@s^0,w,c
  5507   003088  B4D8               	btfsc	status,2,c
  5508   00308A  EF49  F018         	goto	u4061
  5509   00308E  EF4B  F018         	goto	u4060
  5510   003092                     u4061:
  5511   003092  EF5B  F018         	goto	l4498
  5512   003096                     u4060:
  5513   003096                     
  5514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5515   003096  1E3B               	comf	(dtoa@n+7)^0,f,c
  5516   003098  1E3A               	comf	(dtoa@n+6)^0,f,c
  5517   00309A  1E39               	comf	(dtoa@n+5)^0,f,c
  5518   00309C  1E38               	comf	(dtoa@n+4)^0,f,c
  5519   00309E  1E37               	comf	(dtoa@n+3)^0,f,c
  5520   0030A0  1E36               	comf	(dtoa@n+2)^0,f,c
  5521   0030A2  1E35               	comf	(dtoa@n+1)^0,f,c
  5522   0030A4  6C34               	negf	dtoa@n^0,c
  5523   0030A6  0E00               	movlw	0
  5524   0030A8  2235               	addwfc	(dtoa@n+1)^0,f,c
  5525   0030AA  2236               	addwfc	(dtoa@n+2)^0,f,c
  5526   0030AC  2237               	addwfc	(dtoa@n+3)^0,f,c
  5527   0030AE  2238               	addwfc	(dtoa@n+4)^0,f,c
  5528   0030B0  2239               	addwfc	(dtoa@n+5)^0,f,c
  5529   0030B2  223A               	addwfc	(dtoa@n+6)^0,f,c
  5530   0030B4  223B               	addwfc	(dtoa@n+7)^0,f,c
  5531   0030B6                     l4498:
  5532                           
  5533                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5534   0030B6  0100               	movlb	0	; () banked
  5535   0030B8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5536   0030BA  EF69  F018         	goto	u4070
  5537   0030BE  51F2               	movf	(_prec+1)& (0+255),w,b
  5538   0030C0  E106               	bnz	u4071
  5539   0030C2  05F1               	decf	_prec& (0+255),w,b
  5540   0030C4  B0D8               	btfsc	status,0,c
  5541   0030C6  EF67  F018         	goto	u4071
  5542   0030CA  EF69  F018         	goto	u4070
  5543   0030CE                     u4071:
  5544   0030CE  EF6F  F018         	goto	l1374
  5545   0030D2                     u4070:
  5546   0030D2                     
  5547                           ; BSR set to: 0
  5548   0030D2  0E00               	movlw	0
  5549   0030D4  6E31               	movwf	(dtoa@p+1)^0,c
  5550   0030D6  0E01               	movlw	1
  5551   0030D8  6E30               	movwf	dtoa@p^0,c
  5552   0030DA  EF73  F018         	goto	l1376
  5553   0030DE                     l1374:
  5554                           
  5555                           ; BSR set to: 0
  5556   0030DE  C0F1  F030         	movff	_prec,dtoa@p
  5557   0030E2  C0F2  F031         	movff	_prec+1,dtoa@p+1
  5558   0030E6                     l1376:
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5562   0030E6  C0EF  F032         	movff	_width,dtoa@w
  5563   0030EA  C0F0  F033         	movff	_width+1,dtoa@w+1
  5564   0030EE                     
  5565                           ; BSR set to: 0
  5566                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5567   0030EE  503E               	movf	dtoa@s^0,w,c
  5568   0030F0  B4D8               	btfsc	status,2,c
  5569   0030F2  EF7D  F018         	goto	u4081
  5570   0030F6  EF7F  F018         	goto	u4080
  5571   0030FA                     u4081:
  5572   0030FA  EF96  F018         	goto	l1377
  5573   0030FE                     u4080:
  5574   0030FE                     
  5575                           ; BSR set to: 0
  5576                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5577   0030FE  0632               	decf	dtoa@w^0,f,c
  5578   003100  A0D8               	btfss	status,0,c
  5579   003102  0633               	decf	(dtoa@w+1)^0,f,c
  5580   003104                     
  5581                           ; BSR set to: 0
  5582                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5583   003104  503E               	movf	dtoa@s^0,w,c
  5584   003106  A4D8               	btfss	status,2,c
  5585   003108  EF88  F018         	goto	u4091
  5586   00310C  EF8A  F018         	goto	u4090
  5587   003110                     u4091:
  5588   003110  EF90  F018         	goto	l4510
  5589   003114                     u4090:
  5590   003114                     
  5591                           ; BSR set to: 0
  5592   003114  0E00               	movlw	0
  5593   003116  6E2F               	movwf	(_dtoa$2696+1)^0,c
  5594   003118  0E2B               	movlw	43
  5595   00311A  6E2E               	movwf	_dtoa$2696^0,c
  5596   00311C  EF94  F018         	goto	l4512
  5597   003120                     l4510:
  5598                           
  5599                           ; BSR set to: 0
  5600   003120  0E00               	movlw	0
  5601   003122  6E2F               	movwf	(_dtoa$2696+1)^0,c
  5602   003124  0E2D               	movlw	45
  5603   003126  6E2E               	movwf	_dtoa$2696^0,c
  5604   003128                     l4512:
  5605                           
  5606                           ; BSR set to: 0
  5607   003128  C02E  F03E         	movff	_dtoa$2696,dtoa@s
  5608   00312C                     l1377:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5612   00312C  0E00               	movlw	0
  5613   00312E  6E3D               	movwf	(dtoa@i+1)^0,c
  5614   003130  0E4F               	movlw	79
  5615   003132  6E3C               	movwf	dtoa@i^0,c
  5616   003134                     
  5617                           ; BSR set to: 0
  5618                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5619   003134  0E00               	movlw	0
  5620   003136  0101               	movlb	1	; () banked
  5621   003138  6F5F               	movwf	(_dbuf+79)& (0+255),b
  5622                           
  5623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5624   00313A  EF1B  F019         	goto	l4526
  5625   00313E                     l4516:
  5626                           
  5627                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5628   00313E  063C               	decf	dtoa@i^0,f,c
  5629   003140  A0D8               	btfss	status,0,c
  5630   003142  063D               	decf	(dtoa@i+1)^0,f,c
  5631   003144                     
  5632                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5633   003144  0E10               	movlw	low _dbuf
  5634   003146  243C               	addwf	dtoa@i^0,w,c
  5635   003148  6ED9               	movwf	fsr2l,c
  5636   00314A  0E01               	movlw	high _dbuf
  5637   00314C  203D               	addwfc	(dtoa@i+1)^0,w,c
  5638   00314E  6EDA               	movwf	fsr2h,c
  5639   003150  C034  F001         	movff	dtoa@n,___aomod@dividend
  5640   003154  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  5641   003158  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  5642   00315C  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  5643   003160  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  5644   003164  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  5645   003168  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  5646   00316C  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  5647   003170  0E0A               	movlw	10
  5648   003172  6E09               	movwf	___aomod@divisor^0,c
  5649   003174  0E00               	movlw	0
  5650   003176  6E0A               	movwf	(___aomod@divisor+1)^0,c
  5651   003178  0E00               	movlw	0
  5652   00317A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  5653   00317C  0E00               	movlw	0
  5654   00317E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  5655   003180  0E00               	movlw	0
  5656   003182  6E0D               	movwf	(___aomod@divisor+4)^0,c
  5657   003184  0E00               	movlw	0
  5658   003186  6E0E               	movwf	(___aomod@divisor+5)^0,c
  5659   003188  0E00               	movlw	0
  5660   00318A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  5661   00318C  0E00               	movlw	0
  5662   00318E  6E10               	movwf	(___aomod@divisor+7)^0,c
  5663   003190  ECEF  F01E         	call	___aomod	;wreg free
  5664   003194  C001  F026         	movff	?___aomod,??_dtoa
  5665   003198  C002  F027         	movff	?___aomod+1,??_dtoa+1
  5666   00319C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  5667   0031A0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  5668   0031A4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  5669   0031A8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  5670   0031AC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  5671   0031B0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  5672   0031B4  C026  F013         	movff	??_dtoa,abs@a
  5673   0031B8  C027  F014         	movff	??_dtoa+1,abs@a+1
  5674   0031BC  ECA4  F025         	call	_abs	;wreg free
  5675   0031C0  5013               	movf	?_abs^0,w,c
  5676   0031C2  0F30               	addlw	48
  5677   0031C4  6EDF               	movwf	indf2,c
  5678   0031C6                     
  5679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5680   0031C6  0630               	decf	dtoa@p^0,f,c
  5681   0031C8  A0D8               	btfss	status,0,c
  5682   0031CA  0631               	decf	(dtoa@p+1)^0,f,c
  5683   0031CC                     
  5684                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5685   0031CC  0632               	decf	dtoa@w^0,f,c
  5686   0031CE  A0D8               	btfss	status,0,c
  5687   0031D0  0633               	decf	(dtoa@w+1)^0,f,c
  5688   0031D2                     
  5689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5690   0031D2  C034  F001         	movff	dtoa@n,___aodiv@dividend
  5691   0031D6  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  5692   0031DA  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  5693   0031DE  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  5694   0031E2  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  5695   0031E6  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  5696   0031EA  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  5697   0031EE  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  5698   0031F2  0E0A               	movlw	10
  5699   0031F4  6E09               	movwf	___aodiv@divisor^0,c
  5700   0031F6  0E00               	movlw	0
  5701   0031F8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  5702   0031FA  0E00               	movlw	0
  5703   0031FC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  5704   0031FE  0E00               	movlw	0
  5705   003200  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  5706   003202  0E00               	movlw	0
  5707   003204  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  5708   003206  0E00               	movlw	0
  5709   003208  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  5710   00320A  0E00               	movlw	0
  5711   00320C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  5712   00320E  0E00               	movlw	0
  5713   003210  6E10               	movwf	(___aodiv@divisor+7)^0,c
  5714   003212  EC75  F01D         	call	___aodiv	;wreg free
  5715   003216  C001  F034         	movff	?___aodiv,dtoa@n
  5716   00321A  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  5717   00321E  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  5718   003222  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  5719   003226  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  5720   00322A  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  5721   00322E  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  5722   003232  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  5723   003236                     l4526:
  5724                           
  5725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5726   003236  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  5727   003238  EF26  F019         	goto	u4101
  5728   00323C  503D               	movf	(dtoa@i+1)^0,w,c
  5729   00323E  E108               	bnz	u4100
  5730   003240  043C               	decf	dtoa@i^0,w,c
  5731   003242  A0D8               	btfss	status,0,c
  5732   003244  EF26  F019         	goto	u4101
  5733   003248  EF28  F019         	goto	u4100
  5734   00324C                     u4101:
  5735   00324C  EF44  F019         	goto	l4532
  5736   003250                     u4100:
  5737   003250  5034               	movf	dtoa@n^0,w,c
  5738   003252  1035               	iorwf	(dtoa@n+1)^0,w,c
  5739   003254  1036               	iorwf	(dtoa@n+2)^0,w,c
  5740   003256  1037               	iorwf	(dtoa@n+3)^0,w,c
  5741   003258  1038               	iorwf	(dtoa@n+4)^0,w,c
  5742   00325A  1039               	iorwf	(dtoa@n+5)^0,w,c
  5743   00325C  103A               	iorwf	(dtoa@n+6)^0,w,c
  5744   00325E  103B               	iorwf	(dtoa@n+7)^0,w,c
  5745   003260  A4D8               	btfss	status,2,c
  5746   003262  EF35  F019         	goto	u4111
  5747   003266  EF37  F019         	goto	u4110
  5748   00326A                     u4111:
  5749   00326A  EF9F  F018         	goto	l4516
  5750   00326E                     u4110:
  5751   00326E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  5752   003270  EF44  F019         	goto	u4120
  5753   003274  5031               	movf	(dtoa@p+1)^0,w,c
  5754   003276  E106               	bnz	u4121
  5755   003278  0430               	decf	dtoa@p^0,w,c
  5756   00327A  B0D8               	btfsc	status,0,c
  5757   00327C  EF42  F019         	goto	u4121
  5758   003280  EF44  F019         	goto	u4120
  5759   003284                     u4121:
  5760   003284  EF9F  F018         	goto	l4516
  5761   003288                     u4120:
  5762   003288                     l4532:
  5763                           
  5764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5765   003288  503E               	movf	dtoa@s^0,w,c
  5766   00328A  B4D8               	btfsc	status,2,c
  5767   00328C  EF4A  F019         	goto	u4131
  5768   003290  EF4C  F019         	goto	u4130
  5769   003294                     u4131:
  5770   003294  EF57  F019         	goto	l4538
  5771   003298                     u4130:
  5772   003298                     
  5773                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5774   003298  063C               	decf	dtoa@i^0,f,c
  5775   00329A  A0D8               	btfss	status,0,c
  5776   00329C  063D               	decf	(dtoa@i+1)^0,f,c
  5777   00329E                     
  5778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5779   00329E  0E10               	movlw	low _dbuf
  5780   0032A0  243C               	addwf	dtoa@i^0,w,c
  5781   0032A2  6ED9               	movwf	fsr2l,c
  5782   0032A4  0E01               	movlw	high _dbuf
  5783   0032A6  203D               	addwfc	(dtoa@i+1)^0,w,c
  5784   0032A8  6EDA               	movwf	fsr2h,c
  5785   0032AA  C03E  FFDF         	movff	dtoa@s,indf2
  5786   0032AE                     l4538:
  5787                           
  5788                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5789   0032AE  C01C  F011         	movff	dtoa@fp,pad@fp
  5790   0032B2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  5791   0032B6  0E10               	movlw	low _dbuf
  5792   0032B8  243C               	addwf	dtoa@i^0,w,c
  5793   0032BA  6E13               	movwf	pad@buf^0,c
  5794   0032BC  0E01               	movlw	high _dbuf
  5795   0032BE  203D               	addwfc	(dtoa@i+1)^0,w,c
  5796   0032C0  6E14               	movwf	(pad@buf+1)^0,c
  5797   0032C2  C032  F015         	movff	dtoa@w,pad@p
  5798   0032C6  C033  F016         	movff	dtoa@w+1,pad@p+1
  5799   0032CA  ECB1  F022         	call	_pad	;wreg free
  5800   0032CE  0012               	return		;funcret
  5801   0032D0                     __end_of_dtoa:
  5802                           	callstack 0
  5803                           
  5804 ;; *************** function _pad *****************
  5805 ;; Defined at:
  5806 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5809 ;;		 -> sprintf@f(11), 
  5810 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5811 ;;		 -> dbuf(80), 
  5812 ;;  p               2   20[COMRAM] int 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;  w               2   25[COMRAM] int 
  5815 ;;  i               2   23[COMRAM] int 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5825 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;Total ram usage:       11 bytes
  5830 ;; Hardware stack levels used: 1
  5831 ;; Hardware stack levels required when called: 3
  5832 ;; This function calls:
  5833 ;;		_fputc
  5834 ;;		_fputs
  5835 ;; This function is called by:
  5836 ;;		_dtoa
  5837 ;;		_efgtoa
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text20
  5842   004562                     __ptext20:
  5843                           	callstack 0
  5844   004562                     _pad:
  5845                           	callstack 23
  5846   004562                     
  5847                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  5848   004562  BE16               	btfsc	(pad@p+1)^0,7,c
  5849   004564  EFB6  F022         	goto	u3771
  5850   004568  EFB8  F022         	goto	u3770
  5851   00456C                     u3771:
  5852   00456C  EFBE  F022         	goto	l4386
  5853   004570                     u3770:
  5854   004570  C015  F01A         	movff	pad@p,pad@w
  5855   004574  C016  F01B         	movff	pad@p+1,pad@w+1
  5856   004578  EFC2  F022         	goto	l1365
  5857   00457C                     l4386:
  5858   00457C  0E00               	movlw	0
  5859   00457E  6E1B               	movwf	(pad@w+1)^0,c
  5860   004580  0E00               	movlw	0
  5861   004582  6E1A               	movwf	pad@w^0,c
  5862   004584                     l1365:
  5863                           
  5864                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5865   004584  0E00               	movlw	0
  5866   004586  6E19               	movwf	(pad@i+1)^0,c
  5867   004588  0E00               	movlw	0
  5868   00458A  6E18               	movwf	pad@i^0,c
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5871   00458C  EFD4  F022         	goto	l4392
  5872   004590                     l4388:
  5873                           
  5874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5875   004590  0E00               	movlw	0
  5876   004592  6E02               	movwf	(fputc@c+1)^0,c
  5877   004594  0E20               	movlw	32
  5878   004596  6E01               	movwf	fputc@c^0,c
  5879   004598  C011  F003         	movff	pad@fp,fputc@fp
  5880   00459C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5881   0045A0  EC25  F021         	call	_fputc	;wreg free
  5882   0045A4                     
  5883                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5884   0045A4  4A18               	infsnz	pad@i^0,f,c
  5885   0045A6  2A19               	incf	(pad@i+1)^0,f,c
  5886   0045A8                     l4392:
  5887                           
  5888                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5889   0045A8  501A               	movf	pad@w^0,w,c
  5890   0045AA  5C18               	subwf	pad@i^0,w,c
  5891   0045AC  5019               	movf	(pad@i+1)^0,w,c
  5892   0045AE  0A80               	xorlw	128
  5893   0045B0  6E17               	movwf	??_pad^0,c
  5894   0045B2  501B               	movf	(pad@w+1)^0,w,c
  5895   0045B4  0A80               	xorlw	128
  5896   0045B6  5817               	subwfb	??_pad^0,w,c
  5897   0045B8  A0D8               	btfss	status,0,c
  5898   0045BA  EFE1  F022         	goto	u3781
  5899   0045BE  EFE3  F022         	goto	u3780
  5900   0045C2                     u3781:
  5901   0045C2  EFC8  F022         	goto	l4388
  5902   0045C6                     u3780:
  5903   0045C6                     
  5904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5905   0045C6  C013  F00A         	movff	pad@buf,fputs@s
  5906   0045CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5907   0045CE  C011  F00C         	movff	pad@fp,fputs@fp
  5908   0045D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5909   0045D6  EC61  F025         	call	_fputs	;wreg free
  5910   0045DA  0012               	return		;funcret
  5911   0045DC                     __end_of_pad:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _fputs *****************
  5915 ;; Defined at:
  5916 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5919 ;;		 -> dbuf(80), 
  5920 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5921 ;;		 -> sprintf@f(11), 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  i               2   14[COMRAM] int 
  5924 ;;  c               1   13[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2    9[COMRAM] int 
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;Total ram usage:        7 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 2
  5941 ;; This function calls:
  5942 ;;		_fputc
  5943 ;; This function is called by:
  5944 ;;		_pad
  5945 ;; This function uses a non-reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text21
  5949   004AC2                     __ptext21:
  5950                           	callstack 0
  5951   004AC2                     _fputs:
  5952                           	callstack 23
  5953   004AC2  0E00               	movlw	0
  5954   004AC4  6E10               	movwf	(fputs@i+1)^0,c
  5955   004AC6  0E00               	movlw	0
  5956   004AC8  6E0F               	movwf	fputs@i^0,c
  5957   004ACA  EF72  F025         	goto	l3908
  5958   004ACE                     l3904:
  5959   004ACE  C00E  F001         	movff	fputs@c,fputc@c
  5960   004AD2  6A02               	clrf	(fputc@c+1)^0,c
  5961   004AD4  C00C  F003         	movff	fputs@fp,fputc@fp
  5962   004AD8  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5963   004ADC  EC25  F021         	call	_fputc	;wreg free
  5964   004AE0  4A0F               	infsnz	fputs@i^0,f,c
  5965   004AE2  2A10               	incf	(fputs@i+1)^0,f,c
  5966   004AE4                     l3908:
  5967   004AE4  500F               	movf	fputs@i^0,w,c
  5968   004AE6  240A               	addwf	fputs@s^0,w,c
  5969   004AE8  6ED9               	movwf	fsr2l,c
  5970   004AEA  5010               	movf	(fputs@i+1)^0,w,c
  5971   004AEC  200B               	addwfc	(fputs@s+1)^0,w,c
  5972   004AEE  6EDA               	movwf	fsr2h,c
  5973   004AF0  50DF               	movf	indf2,w,c
  5974   004AF2  6E0E               	movwf	fputs@c^0,c
  5975   004AF4  500E               	movf	fputs@c^0,w,c
  5976   004AF6  A4D8               	btfss	status,2,c
  5977   004AF8  EF80  F025         	goto	u3021
  5978   004AFC  EF82  F025         	goto	u3020
  5979   004B00                     u3021:
  5980   004B00  EF67  F025         	goto	l3904
  5981   004B04                     u3020:
  5982   004B04  0012               	return		;funcret
  5983   004B06                     __end_of_fputs:
  5984                           	callstack 0
  5985                           
  5986 ;; *************** function _fputc *****************
  5987 ;; Defined at:
  5988 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5989 ;; Parameters:    Size  Location     Type
  5990 ;;  c               2    0[COMRAM] int 
  5991 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5992 ;;		 -> sprintf@f(11), 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2    0[COMRAM] int 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;Total ram usage:        9 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 1
  6011 ;; This function calls:
  6012 ;;		_putch
  6013 ;; This function is called by:
  6014 ;;		_pad
  6015 ;;		_vfpfcnvrt
  6016 ;;		_fputs
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text22
  6021   00424A                     __ptext22:
  6022                           	callstack 0
  6023   00424A                     _fputc:
  6024                           	callstack 26
  6025   00424A  5003               	movf	fputc@fp^0,w,c
  6026   00424C  1004               	iorwf	(fputc@fp+1)^0,w,c
  6027   00424E  B4D8               	btfsc	status,2,c
  6028   004250  EF2C  F021         	goto	u2591
  6029   004254  EF2E  F021         	goto	u2590
  6030   004258                     u2591:
  6031   004258  EF37  F021         	goto	l3690
  6032   00425C                     u2590:
  6033   00425C  5003               	movf	fputc@fp^0,w,c
  6034   00425E  1004               	iorwf	(fputc@fp+1)^0,w,c
  6035   004260  A4D8               	btfss	status,2,c
  6036   004262  EF35  F021         	goto	u2601
  6037   004266  EF37  F021         	goto	u2600
  6038   00426A                     u2601:
  6039   00426A  EF3C  F021         	goto	l3692
  6040   00426E                     u2600:
  6041   00426E                     l3690:
  6042   00426E  5001               	movf	fputc@c^0,w,c
  6043   004270  ECB6  F026         	call	_putch
  6044   004274  EF89  F021         	goto	l1525
  6045   004278                     l3692:
  6046   004278  EE20 F009          	lfsr	2,9
  6047   00427C  5003               	movf	fputc@fp^0,w,c
  6048   00427E  26D9               	addwf	fsr2l,f,c
  6049   004280  5004               	movf	(fputc@fp+1)^0,w,c
  6050   004282  22DA               	addwfc	fsr2h,f,c
  6051   004284  50DE               	movf	postinc2,w,c
  6052   004286  10DE               	iorwf	postinc2,w,c
  6053   004288  B4D8               	btfsc	status,2,c
  6054   00428A  EF49  F021         	goto	u2611
  6055   00428E  EF4B  F021         	goto	u2610
  6056   004292                     u2611:
  6057   004292  EF66  F021         	goto	l3696
  6058   004296                     u2610:
  6059   004296  EE20 F009          	lfsr	2,9
  6060   00429A  5003               	movf	fputc@fp^0,w,c
  6061   00429C  26D9               	addwf	fsr2l,f,c
  6062   00429E  5004               	movf	(fputc@fp+1)^0,w,c
  6063   0042A0  22DA               	addwfc	fsr2h,f,c
  6064   0042A2  EE10 F003          	lfsr	1,3
  6065   0042A6  5003               	movf	fputc@fp^0,w,c
  6066   0042A8  26E1               	addwf	fsr1l,f,c
  6067   0042AA  5004               	movf	(fputc@fp+1)^0,w,c
  6068   0042AC  22E2               	addwfc	fsr1h,f,c
  6069   0042AE  50DE               	movf	postinc2,w,c
  6070   0042B0  5CE6               	subwf	postinc1,w,c
  6071   0042B2  50E6               	movf	postinc1,w,c
  6072   0042B4  0A80               	xorlw	128
  6073   0042B6  6E09               	movwf	(??_fputc+4)^0,c
  6074   0042B8  50DE               	movf	postinc2,w,c
  6075   0042BA  0A80               	xorlw	128
  6076   0042BC  5809               	subwfb	(??_fputc+4)^0,w,c
  6077   0042BE  B0D8               	btfsc	status,0,c
  6078   0042C0  EF64  F021         	goto	u2621
  6079   0042C4  EF66  F021         	goto	u2620
  6080   0042C8                     u2621:
  6081   0042C8  EF89  F021         	goto	l1525
  6082   0042CC                     u2620:
  6083   0042CC                     l3696:
  6084   0042CC  EE20 F003          	lfsr	2,3
  6085   0042D0  5003               	movf	fputc@fp^0,w,c
  6086   0042D2  26D9               	addwf	fsr2l,f,c
  6087   0042D4  5004               	movf	(fputc@fp+1)^0,w,c
  6088   0042D6  22DA               	addwfc	fsr2h,f,c
  6089   0042D8  CFDE F005          	movff	postinc2,??_fputc
  6090   0042DC  CFDD F006          	movff	postdec2,??_fputc+1
  6091   0042E0  C003  FFD9         	movff	fputc@fp,fsr2l
  6092   0042E4  C004  FFDA         	movff	fputc@fp+1,fsr2h
  6093   0042E8  CFDE F007          	movff	postinc2,??_fputc+2
  6094   0042EC  CFDD F008          	movff	postdec2,??_fputc+3
  6095   0042F0  5005               	movf	??_fputc^0,w,c
  6096   0042F2  2407               	addwf	(??_fputc+2)^0,w,c
  6097   0042F4  6ED9               	movwf	fsr2l,c
  6098   0042F6  5006               	movf	(??_fputc+1)^0,w,c
  6099   0042F8  2008               	addwfc	(??_fputc+3)^0,w,c
  6100   0042FA  6EDA               	movwf	fsr2h,c
  6101   0042FC  C001  FFDF         	movff	fputc@c,indf2
  6102   004300  EE20 F003          	lfsr	2,3
  6103   004304  5003               	movf	fputc@fp^0,w,c
  6104   004306  26D9               	addwf	fsr2l,f,c
  6105   004308  5004               	movf	(fputc@fp+1)^0,w,c
  6106   00430A  22DA               	addwfc	fsr2h,f,c
  6107   00430C  2ADE               	incf	postinc2,f,c
  6108   00430E  0E00               	movlw	0
  6109   004310  22DD               	addwfc	postdec2,f,c
  6110   004312                     l1525:
  6111   004312  0012               	return		;funcret
  6112   004314                     __end_of_fputc:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _putch *****************
  6116 ;; Defined at:
  6117 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;  c               1    wreg     unsigned char 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  c               1    0[COMRAM] unsigned char 
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; This function calls:
  6138 ;;		Nothing
  6139 ;; This function is called by:
  6140 ;;		_fputc
  6141 ;; This function uses a non-reentrant model
  6142 ;;
  6143                           
  6144                           	psect	text23
  6145   004D6C                     __ptext23:
  6146                           	callstack 0
  6147   004D6C                     _putch:
  6148                           	callstack 26
  6149   004D6C  0012               	return		;funcret
  6150   004D6E                     __end_of_putch:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function _abs *****************
  6154 ;; Defined at:
  6155 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  a               2   18[COMRAM] int 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  2   18[COMRAM] int 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6173 ;;Total ram usage:        4 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; This function calls:
  6176 ;;		Nothing
  6177 ;; This function is called by:
  6178 ;;		_dtoa
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text24
  6183   004B48                     __ptext24:
  6184                           	callstack 0
  6185   004B48                     _abs:
  6186                           	callstack 26
  6187   004B48  BE14               	btfsc	(abs@a+1)^0,7,c
  6188   004B4A  EFB1  F025         	goto	u3790
  6189   004B4E  5014               	movf	(abs@a+1)^0,w,c
  6190   004B50  E106               	bnz	u3791
  6191   004B52  0413               	decf	abs@a^0,w,c
  6192   004B54  B0D8               	btfsc	status,0,c
  6193   004B56  EFAF  F025         	goto	u3791
  6194   004B5A  EFB1  F025         	goto	u3790
  6195   004B5E                     u3791:
  6196   004B5E  EFBF  F025         	goto	l1484
  6197   004B62                     u3790:
  6198   004B62  C013  F015         	movff	abs@a,??_abs
  6199   004B66  C014  F016         	movff	abs@a+1,??_abs+1
  6200   004B6A  1E15               	comf	??_abs^0,f,c
  6201   004B6C  1E16               	comf	(??_abs+1)^0,f,c
  6202   004B6E  4A15               	infsnz	??_abs^0,f,c
  6203   004B70  2A16               	incf	(??_abs+1)^0,f,c
  6204   004B72  C015  F013         	movff	??_abs,?_abs
  6205   004B76  C016  F014         	movff	??_abs+1,?_abs+1
  6206   004B7A  EFC3  F025         	goto	l1487
  6207   004B7E                     l1484:
  6208   004B7E  C013  F013         	movff	abs@a,?_abs
  6209   004B82  C014  F014         	movff	abs@a+1,?_abs+1
  6210   004B86                     l1487:
  6211   004B86  0012               	return		;funcret
  6212   004B88                     __end_of_abs:
  6213                           	callstack 0
  6214                           
  6215 ;; *************** function ___aomod *****************
  6216 ;; Defined at:
  6217 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6218 ;; Parameters:    Size  Location     Type
  6219 ;;  dividend        8    0[COMRAM] long long 
  6220 ;;  divisor         8    8[COMRAM] long long 
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;  sign            1   17[COMRAM] unsigned char 
  6223 ;;  counter         1   16[COMRAM] unsigned char 
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  8    0[COMRAM] long long 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6233 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6236 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6237 ;;Total ram usage:       18 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_dtoa
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text25
  6247   003DDE                     __ptext25:
  6248                           	callstack 0
  6249   003DDE                     ___aomod:
  6250                           	callstack 26
  6251   003DDE  0E00               	movlw	0
  6252   003DE0  6E12               	movwf	___aomod@sign^0,c
  6253   003DE2  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  6254   003DE4  EFF8  F01E         	goto	u3100
  6255   003DE8  EFF6  F01E         	goto	u3101
  6256   003DEC                     u3101:
  6257   003DEC  EF0A  F01F         	goto	l3968
  6258   003DF0                     u3100:
  6259   003DF0  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6260   003DF2  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6261   003DF4  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6262   003DF6  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6263   003DF8  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6264   003DFA  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6265   003DFC  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6266   003DFE  6C01               	negf	___aomod@dividend^0,c
  6267   003E00  0E00               	movlw	0
  6268   003E02  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6269   003E04  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6270   003E06  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6271   003E08  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6272   003E0A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6273   003E0C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6274   003E0E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6275   003E10  0E01               	movlw	1
  6276   003E12  6E12               	movwf	___aomod@sign^0,c
  6277   003E14                     l3968:
  6278   003E14  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  6279   003E16  EF11  F01F         	goto	u3110
  6280   003E1A  EF0F  F01F         	goto	u3111
  6281   003E1E                     u3111:
  6282   003E1E  EF21  F01F         	goto	l3972
  6283   003E22                     u3110:
  6284   003E22  1E10               	comf	(___aomod@divisor+7)^0,f,c
  6285   003E24  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  6286   003E26  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  6287   003E28  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  6288   003E2A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  6289   003E2C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  6290   003E2E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  6291   003E30  6C09               	negf	___aomod@divisor^0,c
  6292   003E32  0E00               	movlw	0
  6293   003E34  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  6294   003E36  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  6295   003E38  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  6296   003E3A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  6297   003E3C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  6298   003E3E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  6299   003E40  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  6300   003E42                     l3972:
  6301   003E42  5009               	movf	___aomod@divisor^0,w,c
  6302   003E44  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  6303   003E46  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  6304   003E48  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  6305   003E4A  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  6306   003E4C  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  6307   003E4E  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  6308   003E50  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  6309   003E52  B4D8               	btfsc	status,2,c
  6310   003E54  EF2E  F01F         	goto	u3121
  6311   003E58  EF30  F01F         	goto	u3120
  6312   003E5C                     u3121:
  6313   003E5C  EF78  F01F         	goto	l3988
  6314   003E60                     u3120:
  6315   003E60  0E01               	movlw	1
  6316   003E62  6E11               	movwf	___aomod@counter^0,c
  6317   003E64  EF3E  F01F         	goto	l3978
  6318   003E68                     l3976:
  6319   003E68  90D8               	bcf	status,0,c
  6320   003E6A  3609               	rlcf	___aomod@divisor^0,f,c
  6321   003E6C  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  6322   003E6E  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  6323   003E70  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  6324   003E72  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  6325   003E74  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  6326   003E76  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  6327   003E78  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  6328   003E7A  2A11               	incf	___aomod@counter^0,f,c
  6329   003E7C                     l3978:
  6330   003E7C  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  6331   003E7E  EF43  F01F         	goto	u3131
  6332   003E82  EF45  F01F         	goto	u3130
  6333   003E86                     u3131:
  6334   003E86  EF34  F01F         	goto	l3976
  6335   003E8A                     u3130:
  6336   003E8A                     l3980:
  6337   003E8A  5009               	movf	___aomod@divisor^0,w,c
  6338   003E8C  5C01               	subwf	___aomod@dividend^0,w,c
  6339   003E8E  500A               	movf	(___aomod@divisor+1)^0,w,c
  6340   003E90  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  6341   003E92  500B               	movf	(___aomod@divisor+2)^0,w,c
  6342   003E94  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  6343   003E96  500C               	movf	(___aomod@divisor+3)^0,w,c
  6344   003E98  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  6345   003E9A  500D               	movf	(___aomod@divisor+4)^0,w,c
  6346   003E9C  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  6347   003E9E  500E               	movf	(___aomod@divisor+5)^0,w,c
  6348   003EA0  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  6349   003EA2  500F               	movf	(___aomod@divisor+6)^0,w,c
  6350   003EA4  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  6351   003EA6  5010               	movf	(___aomod@divisor+7)^0,w,c
  6352   003EA8  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  6353   003EAA  A0D8               	btfss	status,0,c
  6354   003EAC  EF5A  F01F         	goto	u3141
  6355   003EB0  EF5C  F01F         	goto	u3140
  6356   003EB4                     u3141:
  6357   003EB4  EF6C  F01F         	goto	l3984
  6358   003EB8                     u3140:
  6359   003EB8  5009               	movf	___aomod@divisor^0,w,c
  6360   003EBA  5E01               	subwf	___aomod@dividend^0,f,c
  6361   003EBC  500A               	movf	(___aomod@divisor+1)^0,w,c
  6362   003EBE  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  6363   003EC0  500B               	movf	(___aomod@divisor+2)^0,w,c
  6364   003EC2  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  6365   003EC4  500C               	movf	(___aomod@divisor+3)^0,w,c
  6366   003EC6  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  6367   003EC8  500D               	movf	(___aomod@divisor+4)^0,w,c
  6368   003ECA  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  6369   003ECC  500E               	movf	(___aomod@divisor+5)^0,w,c
  6370   003ECE  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  6371   003ED0  500F               	movf	(___aomod@divisor+6)^0,w,c
  6372   003ED2  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  6373   003ED4  5010               	movf	(___aomod@divisor+7)^0,w,c
  6374   003ED6  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  6375   003ED8                     l3984:
  6376   003ED8  90D8               	bcf	status,0,c
  6377   003EDA  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  6378   003EDC  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  6379   003EDE  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  6380   003EE0  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  6381   003EE2  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  6382   003EE4  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  6383   003EE6  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  6384   003EE8  3209               	rrcf	___aomod@divisor^0,f,c
  6385   003EEA  2E11               	decfsz	___aomod@counter^0,f,c
  6386   003EEC  EF45  F01F         	goto	l3980
  6387   003EF0                     l3988:
  6388   003EF0  5012               	movf	___aomod@sign^0,w,c
  6389   003EF2  B4D8               	btfsc	status,2,c
  6390   003EF4  EF7E  F01F         	goto	u3151
  6391   003EF8  EF80  F01F         	goto	u3150
  6392   003EFC                     u3151:
  6393   003EFC  EF90  F01F         	goto	l3992
  6394   003F00                     u3150:
  6395   003F00  1E08               	comf	(___aomod@dividend+7)^0,f,c
  6396   003F02  1E07               	comf	(___aomod@dividend+6)^0,f,c
  6397   003F04  1E06               	comf	(___aomod@dividend+5)^0,f,c
  6398   003F06  1E05               	comf	(___aomod@dividend+4)^0,f,c
  6399   003F08  1E04               	comf	(___aomod@dividend+3)^0,f,c
  6400   003F0A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  6401   003F0C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  6402   003F0E  6C01               	negf	___aomod@dividend^0,c
  6403   003F10  0E00               	movlw	0
  6404   003F12  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  6405   003F14  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  6406   003F16  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  6407   003F18  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  6408   003F1A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  6409   003F1C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  6410   003F1E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  6411   003F20                     l3992:
  6412   003F20  C001  F001         	movff	___aomod@dividend,?___aomod
  6413   003F24  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  6414   003F28  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  6415   003F2C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  6416   003F30  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  6417   003F34  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  6418   003F38  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  6419   003F3C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  6420   003F40  0012               	return		;funcret
  6421   003F42                     __end_of___aomod:
  6422                           	callstack 0
  6423                           
  6424 ;; *************** function ___aodiv *****************
  6425 ;; Defined at:
  6426 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  dividend        8    0[COMRAM] long long 
  6429 ;;  divisor         8    8[COMRAM] long long 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  quotient        8   18[COMRAM] long long 
  6432 ;;  sign            1   17[COMRAM] unsigned char 
  6433 ;;  counter         1   16[COMRAM] unsigned char 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  8    0[COMRAM] long long 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6443 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;Total ram usage:       26 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_dtoa
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text26
  6457   003AEA                     __ptext26:
  6458                           	callstack 0
  6459   003AEA                     ___aodiv:
  6460                           	callstack 26
  6461   003AEA  0E00               	movlw	0
  6462   003AEC  6E12               	movwf	___aodiv@sign^0,c
  6463   003AEE  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  6464   003AF0  EF7E  F01D         	goto	u3030
  6465   003AF4  EF7C  F01D         	goto	u3031
  6466   003AF8                     u3031:
  6467   003AF8  EF90  F01D         	goto	l3924
  6468   003AFC                     u3030:
  6469   003AFC  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  6470   003AFE  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  6471   003B00  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  6472   003B02  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  6473   003B04  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  6474   003B06  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  6475   003B08  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  6476   003B0A  6C09               	negf	___aodiv@divisor^0,c
  6477   003B0C  0E00               	movlw	0
  6478   003B0E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  6479   003B10  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  6480   003B12  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  6481   003B14  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  6482   003B16  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  6483   003B18  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  6484   003B1A  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  6485   003B1C  0E01               	movlw	1
  6486   003B1E  6E12               	movwf	___aodiv@sign^0,c
  6487   003B20                     l3924:
  6488   003B20  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  6489   003B22  EF97  F01D         	goto	u3040
  6490   003B26  EF95  F01D         	goto	u3041
  6491   003B2A                     u3041:
  6492   003B2A  EFA9  F01D         	goto	l3930
  6493   003B2E                     u3040:
  6494   003B2E  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  6495   003B30  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  6496   003B32  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  6497   003B34  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  6498   003B36  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  6499   003B38  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  6500   003B3A  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  6501   003B3C  6C01               	negf	___aodiv@dividend^0,c
  6502   003B3E  0E00               	movlw	0
  6503   003B40  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  6504   003B42  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  6505   003B44  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  6506   003B46  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  6507   003B48  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  6508   003B4A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  6509   003B4C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  6510   003B4E  0E01               	movlw	1
  6511   003B50  1A12               	xorwf	___aodiv@sign^0,f,c
  6512   003B52                     l3930:
  6513   003B52  EE20  F013         	lfsr	2,___aodiv@quotient
  6514   003B56  0E07               	movlw	7
  6515   003B58                     u3051:
  6516   003B58  6ADE               	clrf	postinc2,c
  6517   003B5A  06E8               	decf	wreg,f,c
  6518   003B5C  E2FD               	bc	u3051
  6519   003B5E  5009               	movf	___aodiv@divisor^0,w,c
  6520   003B60  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  6521   003B62  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  6522   003B64  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  6523   003B66  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  6524   003B68  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  6525   003B6A  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  6526   003B6C  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  6527   003B6E  B4D8               	btfsc	status,2,c
  6528   003B70  EFBC  F01D         	goto	u3061
  6529   003B74  EFBE  F01D         	goto	u3060
  6530   003B78                     u3061:
  6531   003B78  EF10  F01E         	goto	l3952
  6532   003B7C                     u3060:
  6533   003B7C  0E01               	movlw	1
  6534   003B7E  6E11               	movwf	___aodiv@counter^0,c
  6535   003B80  EFCC  F01D         	goto	l3938
  6536   003B84                     l3936:
  6537   003B84  90D8               	bcf	status,0,c
  6538   003B86  3609               	rlcf	___aodiv@divisor^0,f,c
  6539   003B88  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  6540   003B8A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  6541   003B8C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  6542   003B8E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  6543   003B90  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  6544   003B92  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  6545   003B94  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  6546   003B96  2A11               	incf	___aodiv@counter^0,f,c
  6547   003B98                     l3938:
  6548   003B98  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  6549   003B9A  EFD1  F01D         	goto	u3071
  6550   003B9E  EFD3  F01D         	goto	u3070
  6551   003BA2                     u3071:
  6552   003BA2  EFC2  F01D         	goto	l3936
  6553   003BA6                     u3070:
  6554   003BA6                     l3940:
  6555   003BA6  90D8               	bcf	status,0,c
  6556   003BA8  3613               	rlcf	___aodiv@quotient^0,f,c
  6557   003BAA  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  6558   003BAC  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  6559   003BAE  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  6560   003BB0  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  6561   003BB2  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  6562   003BB4  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  6563   003BB6  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  6564   003BB8  5009               	movf	___aodiv@divisor^0,w,c
  6565   003BBA  5C01               	subwf	___aodiv@dividend^0,w,c
  6566   003BBC  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6567   003BBE  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  6568   003BC0  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6569   003BC2  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  6570   003BC4  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6571   003BC6  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  6572   003BC8  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6573   003BCA  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  6574   003BCC  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6575   003BCE  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  6576   003BD0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6577   003BD2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  6578   003BD4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6579   003BD6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  6580   003BD8  A0D8               	btfss	status,0,c
  6581   003BDA  EFF1  F01D         	goto	u3081
  6582   003BDE  EFF3  F01D         	goto	u3080
  6583   003BE2                     u3081:
  6584   003BE2  EF04  F01E         	goto	l3948
  6585   003BE6                     u3080:
  6586   003BE6  5009               	movf	___aodiv@divisor^0,w,c
  6587   003BE8  5E01               	subwf	___aodiv@dividend^0,f,c
  6588   003BEA  500A               	movf	(___aodiv@divisor+1)^0,w,c
  6589   003BEC  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  6590   003BEE  500B               	movf	(___aodiv@divisor+2)^0,w,c
  6591   003BF0  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  6592   003BF2  500C               	movf	(___aodiv@divisor+3)^0,w,c
  6593   003BF4  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  6594   003BF6  500D               	movf	(___aodiv@divisor+4)^0,w,c
  6595   003BF8  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  6596   003BFA  500E               	movf	(___aodiv@divisor+5)^0,w,c
  6597   003BFC  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  6598   003BFE  500F               	movf	(___aodiv@divisor+6)^0,w,c
  6599   003C00  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  6600   003C02  5010               	movf	(___aodiv@divisor+7)^0,w,c
  6601   003C04  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  6602   003C06  8013               	bsf	___aodiv@quotient^0,0,c
  6603   003C08                     l3948:
  6604   003C08  90D8               	bcf	status,0,c
  6605   003C0A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  6606   003C0C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  6607   003C0E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  6608   003C10  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  6609   003C12  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  6610   003C14  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  6611   003C16  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  6612   003C18  3209               	rrcf	___aodiv@divisor^0,f,c
  6613   003C1A  2E11               	decfsz	___aodiv@counter^0,f,c
  6614   003C1C  EFD3  F01D         	goto	l3940
  6615   003C20                     l3952:
  6616   003C20  5012               	movf	___aodiv@sign^0,w,c
  6617   003C22  B4D8               	btfsc	status,2,c
  6618   003C24  EF16  F01E         	goto	u3091
  6619   003C28  EF18  F01E         	goto	u3090
  6620   003C2C                     u3091:
  6621   003C2C  EF28  F01E         	goto	l3956
  6622   003C30                     u3090:
  6623   003C30  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  6624   003C32  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  6625   003C34  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  6626   003C36  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  6627   003C38  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  6628   003C3A  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  6629   003C3C  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  6630   003C3E  6C13               	negf	___aodiv@quotient^0,c
  6631   003C40  0E00               	movlw	0
  6632   003C42  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  6633   003C44  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  6634   003C46  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  6635   003C48  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  6636   003C4A  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  6637   003C4C  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  6638   003C4E  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  6639   003C50                     l3956:
  6640   003C50  C013  F001         	movff	___aodiv@quotient,?___aodiv
  6641   003C54  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  6642   003C58  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  6643   003C5C  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  6644   003C60  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  6645   003C64  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  6646   003C68  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  6647   003C6C  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  6648   003C70  0012               	return		;funcret
  6649   003C72                     __end_of___aodiv:
  6650                           	callstack 0
  6651                           
  6652 ;; *************** function _sendStringSerial4 *****************
  6653 ;; Defined at:
  6654 ;;		line 33 in file "serial.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  string          2    1[COMRAM] PTR unsigned char 
  6657 ;;		 -> main@buf(100), 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6673 ;;Total ram usage:        2 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; Hardware stack levels required when called: 1
  6676 ;; This function calls:
  6677 ;;		_sendCharSerial4
  6678 ;; This function is called by:
  6679 ;;		_main
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text27
  6684   004BF6                     __ptext27:
  6685                           	callstack 0
  6686   004BF6                     _sendStringSerial4:
  6687                           	callstack 29
  6688   004BF6                     
  6689                           ;serial.c: 34:     while (*string!=0){
  6690   004BF6  EF06  F026         	goto	l5332
  6691   004BFA                     l5328:
  6692                           
  6693                           ;serial.c: 35:         sendCharSerial4(*string++);
  6694   004BFA  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6695   004BFE  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6696   004C02  50DF               	movf	indf2,w,c
  6697   004C04  EC91  F026         	call	_sendCharSerial4
  6698   004C08  4A02               	infsnz	sendStringSerial4@string^0,f,c
  6699   004C0A  2A03               	incf	(sendStringSerial4@string+1)^0,f,c
  6700   004C0C                     l5332:
  6701                           
  6702                           ;serial.c: 34:     while (*string!=0){
  6703   004C0C  C002  FFD9         	movff	sendStringSerial4@string,fsr2l
  6704   004C10  C003  FFDA         	movff	sendStringSerial4@string+1,fsr2h
  6705   004C14  50DF               	movf	indf2,w,c
  6706   004C16  A4D8               	btfss	status,2,c
  6707   004C18  EF10  F026         	goto	u4831
  6708   004C1C  EF12  F026         	goto	u4830
  6709   004C20                     u4831:
  6710   004C20  EFFD  F025         	goto	l5328
  6711   004C24                     u4830:
  6712   004C24  0012               	return		;funcret
  6713   004C26                     __end_of_sendStringSerial4:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _sendCharSerial4 *****************
  6717 ;; Defined at:
  6718 ;;		line 26 in file "serial.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  charToSend      1    wreg     unsigned char 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  charToSend      1    0[COMRAM] unsigned char 
  6723 ;; Return value:  Size  Location     Type
  6724 ;;                  1    wreg      void 
  6725 ;; Registers used:
  6726 ;;		wreg
  6727 ;; Tracked objects:
  6728 ;;		On entry : 0/0
  6729 ;;		On exit  : 0/0
  6730 ;;		Unchanged: 0/0
  6731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;Total ram usage:        1 bytes
  6737 ;; Hardware stack levels used: 1
  6738 ;; This function calls:
  6739 ;;		Nothing
  6740 ;; This function is called by:
  6741 ;;		_sendStringSerial4
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text28
  6746   004D22                     __ptext28:
  6747                           	callstack 0
  6748   004D22                     _sendCharSerial4:
  6749                           	callstack 29
  6750                           
  6751                           ;incstack = 0
  6752                           ;sendCharSerial4@charToSend stored from wreg
  6753   004D22  6E01               	movwf	sendCharSerial4@charToSend^0,c
  6754   004D24                     l209:
  6755   004D24  010E               	movlb	14	; () banked
  6756   004D26  A537               	btfss	55,2,b	;volatile
  6757   004D28  EF98  F026         	goto	u4631
  6758   004D2C  EF9A  F026         	goto	u4630
  6759   004D30                     u4631:
  6760   004D30  EF92  F026         	goto	l209
  6761   004D34                     u4630:
  6762   004D34                     
  6763                           ; BSR set to: 14
  6764                           ;serial.c: 28:     TX4REG = charToSend;
  6765   004D34  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  6766   004D38                     
  6767                           ; BSR set to: 14
  6768   004D38  0012               	return		;funcret
  6769   004D3A                     __end_of_sendCharSerial4:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _readColours *****************
  6773 ;; Defined at:
  6774 ;;		line 105 in file "color.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  vals            2   11[COMRAM] PTR struct RGB
  6777 ;;		 -> vals(8), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;		None
  6780 ;; Return value:  Size  Location     Type
  6781 ;;                  1    wreg      void 
  6782 ;; Registers used:
  6783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6784 ;; Tracked objects:
  6785 ;;		On entry : 0/0
  6786 ;;		On exit  : 0/0
  6787 ;;		Unchanged: 0/0
  6788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;Total ram usage:        2 bytes
  6794 ;; Hardware stack levels used: 1
  6795 ;; Hardware stack levels required when called: 3
  6796 ;; This function calls:
  6797 ;;		_color_read_Blue
  6798 ;;		_color_read_Green
  6799 ;;		_color_read_Red
  6800 ;;		_color_read_lum
  6801 ;; This function is called by:
  6802 ;;		_main
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text29
  6807   0046B6                     __ptext29:
  6808                           	callstack 0
  6809   0046B6                     _readColours:
  6810                           	callstack 27
  6811   0046B6                     
  6812                           ;color.c: 107:     vals ->R = color_read_Red();
  6813   0046B6  EC57  F024         	call	_color_read_Red	;wreg free
  6814   0046BA  C00C  FFD9         	movff	readColours@vals,fsr2l
  6815   0046BE  C00D  FFDA         	movff	readColours@vals+1,fsr2h
  6816   0046C2  C005  FFDE         	movff	?_color_read_Red,postinc2
  6817   0046C6  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  6818                           
  6819                           ;color.c: 108:     vals ->B = color_read_Blue();
  6820   0046CA  ECA7  F024         	call	_color_read_Blue	;wreg free
  6821   0046CE  EE20 F004          	lfsr	2,4
  6822   0046D2  500C               	movf	readColours@vals^0,w,c
  6823   0046D4  26D9               	addwf	fsr2l,f,c
  6824   0046D6  500D               	movf	(readColours@vals+1)^0,w,c
  6825   0046D8  22DA               	addwfc	fsr2h,f,c
  6826   0046DA  C005  FFDE         	movff	?_color_read_Blue,postinc2
  6827   0046DE  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  6828                           
  6829                           ;color.c: 109:     vals ->G = color_read_Green();
  6830   0046E2  EC7F  F024         	call	_color_read_Green	;wreg free
  6831   0046E6  EE20 F002          	lfsr	2,2
  6832   0046EA  500C               	movf	readColours@vals^0,w,c
  6833   0046EC  26D9               	addwf	fsr2l,f,c
  6834   0046EE  500D               	movf	(readColours@vals+1)^0,w,c
  6835   0046F0  22DA               	addwfc	fsr2h,f,c
  6836   0046F2  C005  FFDE         	movff	?_color_read_Green,postinc2
  6837   0046F6  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  6838                           
  6839                           ;color.c: 110:     vals ->L = color_read_lum();
  6840   0046FA  EC2F  F024         	call	_color_read_lum	;wreg free
  6841   0046FE  EE20 F006          	lfsr	2,6
  6842   004702  500C               	movf	readColours@vals^0,w,c
  6843   004704  26D9               	addwf	fsr2l,f,c
  6844   004706  500D               	movf	(readColours@vals+1)^0,w,c
  6845   004708  22DA               	addwfc	fsr2h,f,c
  6846   00470A  C005  FFDE         	movff	?_color_read_lum,postinc2
  6847   00470E  C006  FFDD         	movff	?_color_read_lum+1,postdec2
  6848   004712  0012               	return		;funcret
  6849   004714                     __end_of_readColours:
  6850                           	callstack 0
  6851                           
  6852 ;; *************** function _color_read_lum *****************
  6853 ;; Defined at:
  6854 ;;		line 49 in file "color.c"
  6855 ;; Parameters:    Size  Location     Type
  6856 ;;		None
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  tmp             2    9[COMRAM] unsigned int 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2    4[COMRAM] unsigned int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0, cstack
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6868 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;Total ram usage:        7 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 2
  6875 ;; This function calls:
  6876 ;;		_I2C_2_Master_Read
  6877 ;;		_I2C_2_Master_RepStart
  6878 ;;		_I2C_2_Master_Start
  6879 ;;		_I2C_2_Master_Stop
  6880 ;;		_I2C_2_Master_Write
  6881 ;; This function is called by:
  6882 ;;		_readColours
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text30
  6887   00485E                     __ptext30:
  6888                           	callstack 0
  6889   00485E                     _color_read_lum:
  6890                           	callstack 27
  6891   00485E                     
  6892                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  6893   00485E  ECAD  F026         	call	_I2C_2_Master_Start	;wreg free
  6894                           
  6895                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  6896   004862  0E52               	movlw	82
  6897   004864  EC9D  F026         	call	_I2C_2_Master_Write
  6898                           
  6899                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x14);
  6900   004868  0EB4               	movlw	180
  6901   00486A  EC9D  F026         	call	_I2C_2_Master_Write
  6902                           
  6903                           ;color.c: 55:  I2C_2_Master_RepStart();
  6904   00486E  ECA3  F026         	call	_I2C_2_Master_RepStart	;wreg free
  6905                           
  6906                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  6907   004872  0E53               	movlw	83
  6908   004874  EC9D  F026         	call	_I2C_2_Master_Write
  6909                           
  6910                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  6911   004878  0E01               	movlw	1
  6912   00487A  EC83  F025         	call	_I2C_2_Master_Read
  6913   00487E  6E07               	movwf	??_color_read_lum^0,c
  6914   004880  5007               	movf	??_color_read_lum^0,w,c
  6915   004882  6E0A               	movwf	color_read_lum@tmp^0,c
  6916   004884  6A0B               	clrf	(color_read_lum@tmp+1)^0,c
  6917                           
  6918                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6919   004886  0E00               	movlw	0
  6920   004888  EC83  F025         	call	_I2C_2_Master_Read
  6921   00488C  6E07               	movwf	??_color_read_lum^0,c
  6922   00488E  5007               	movf	??_color_read_lum^0,w,c
  6923   004890  6E09               	movwf	(??_color_read_lum+2)^0,c
  6924   004892  6A08               	clrf	(??_color_read_lum+1)^0,c
  6925   004894  500A               	movf	color_read_lum@tmp^0,w,c
  6926   004896  1008               	iorwf	(??_color_read_lum+1)^0,w,c
  6927   004898  6E0A               	movwf	color_read_lum@tmp^0,c
  6928   00489A  500B               	movf	(color_read_lum@tmp+1)^0,w,c
  6929   00489C  1009               	iorwf	(??_color_read_lum+2)^0,w,c
  6930   00489E  6E0B               	movwf	(color_read_lum@tmp+1)^0,c
  6931                           
  6932                           ;color.c: 59:  I2C_2_Master_Stop();
  6933   0048A0  ECA8  F026         	call	_I2C_2_Master_Stop	;wreg free
  6934   0048A4                     
  6935                           ;color.c: 60:  return tmp;
  6936   0048A4  C00A  F005         	movff	color_read_lum@tmp,?_color_read_lum
  6937   0048A8  C00B  F006         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6938   0048AC  0012               	return		;funcret
  6939   0048AE                     __end_of_color_read_lum:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _color_read_Red *****************
  6943 ;; Defined at:
  6944 ;;		line 63 in file "color.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  tmp             2    9[COMRAM] unsigned int 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  2    4[COMRAM] unsigned int 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6961 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;Total ram usage:        7 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; Hardware stack levels required when called: 2
  6965 ;; This function calls:
  6966 ;;		_I2C_2_Master_Read
  6967 ;;		_I2C_2_Master_RepStart
  6968 ;;		_I2C_2_Master_Start
  6969 ;;		_I2C_2_Master_Stop
  6970 ;;		_I2C_2_Master_Write
  6971 ;; This function is called by:
  6972 ;;		_readColours
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text31
  6977   0048AE                     __ptext31:
  6978                           	callstack 0
  6979   0048AE                     _color_read_Red:
  6980                           	callstack 27
  6981   0048AE                     
  6982                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  6983   0048AE  ECAD  F026         	call	_I2C_2_Master_Start	;wreg free
  6984                           
  6985                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  6986   0048B2  0E52               	movlw	82
  6987   0048B4  EC9D  F026         	call	_I2C_2_Master_Write
  6988                           
  6989                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x16);
  6990   0048B8  0EB6               	movlw	182
  6991   0048BA  EC9D  F026         	call	_I2C_2_Master_Write
  6992                           
  6993                           ;color.c: 69:  I2C_2_Master_RepStart();
  6994   0048BE  ECA3  F026         	call	_I2C_2_Master_RepStart	;wreg free
  6995                           
  6996                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  6997   0048C2  0E53               	movlw	83
  6998   0048C4  EC9D  F026         	call	_I2C_2_Master_Write
  6999                           
  7000                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  7001   0048C8  0E01               	movlw	1
  7002   0048CA  EC83  F025         	call	_I2C_2_Master_Read
  7003   0048CE  6E07               	movwf	??_color_read_Red^0,c
  7004   0048D0  5007               	movf	??_color_read_Red^0,w,c
  7005   0048D2  6E0A               	movwf	color_read_Red@tmp^0,c
  7006   0048D4  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  7007                           
  7008                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7009   0048D6  0E00               	movlw	0
  7010   0048D8  EC83  F025         	call	_I2C_2_Master_Read
  7011   0048DC  6E07               	movwf	??_color_read_Red^0,c
  7012   0048DE  5007               	movf	??_color_read_Red^0,w,c
  7013   0048E0  6E09               	movwf	(??_color_read_Red+2)^0,c
  7014   0048E2  6A08               	clrf	(??_color_read_Red+1)^0,c
  7015   0048E4  500A               	movf	color_read_Red@tmp^0,w,c
  7016   0048E6  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  7017   0048E8  6E0A               	movwf	color_read_Red@tmp^0,c
  7018   0048EA  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  7019   0048EC  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  7020   0048EE  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  7021                           
  7022                           ;color.c: 73:  I2C_2_Master_Stop();
  7023   0048F0  ECA8  F026         	call	_I2C_2_Master_Stop	;wreg free
  7024   0048F4                     
  7025                           ;color.c: 74:  return tmp;
  7026   0048F4  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  7027   0048F8  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7028   0048FC  0012               	return		;funcret
  7029   0048FE                     __end_of_color_read_Red:
  7030                           	callstack 0
  7031                           
  7032 ;; *************** function _color_read_Green *****************
  7033 ;; Defined at:
  7034 ;;		line 76 in file "color.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  tmp             2    9[COMRAM] unsigned int 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  2    4[COMRAM] unsigned int 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;Total ram usage:        7 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; Hardware stack levels required when called: 2
  7055 ;; This function calls:
  7056 ;;		_I2C_2_Master_Read
  7057 ;;		_I2C_2_Master_RepStart
  7058 ;;		_I2C_2_Master_Start
  7059 ;;		_I2C_2_Master_Stop
  7060 ;;		_I2C_2_Master_Write
  7061 ;; This function is called by:
  7062 ;;		_readColours
  7063 ;; This function uses a non-reentrant model
  7064 ;;
  7065                           
  7066                           	psect	text32
  7067   0048FE                     __ptext32:
  7068                           	callstack 0
  7069   0048FE                     _color_read_Green:
  7070                           	callstack 27
  7071   0048FE                     
  7072                           ;color.c: 78:  unsigned int tmp;;color.c: 79:  I2C_2_Master_Start();
  7073   0048FE  ECAD  F026         	call	_I2C_2_Master_Start	;wreg free
  7074                           
  7075                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x00);
  7076   004902  0E52               	movlw	82
  7077   004904  EC9D  F026         	call	_I2C_2_Master_Write
  7078                           
  7079                           ;color.c: 81:  I2C_2_Master_Write(0xA0 | 0x18);
  7080   004908  0EB8               	movlw	184
  7081   00490A  EC9D  F026         	call	_I2C_2_Master_Write
  7082                           
  7083                           ;color.c: 82:  I2C_2_Master_RepStart();
  7084   00490E  ECA3  F026         	call	_I2C_2_Master_RepStart	;wreg free
  7085                           
  7086                           ;color.c: 83:  I2C_2_Master_Write(0x52 | 0x01);
  7087   004912  0E53               	movlw	83
  7088   004914  EC9D  F026         	call	_I2C_2_Master_Write
  7089                           
  7090                           ;color.c: 84:  tmp=I2C_2_Master_Read(1);
  7091   004918  0E01               	movlw	1
  7092   00491A  EC83  F025         	call	_I2C_2_Master_Read
  7093   00491E  6E07               	movwf	??_color_read_Green^0,c
  7094   004920  5007               	movf	??_color_read_Green^0,w,c
  7095   004922  6E0A               	movwf	color_read_Green@tmp^0,c
  7096   004924  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  7097                           
  7098                           ;color.c: 85:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7099   004926  0E00               	movlw	0
  7100   004928  EC83  F025         	call	_I2C_2_Master_Read
  7101   00492C  6E07               	movwf	??_color_read_Green^0,c
  7102   00492E  5007               	movf	??_color_read_Green^0,w,c
  7103   004930  6E09               	movwf	(??_color_read_Green+2)^0,c
  7104   004932  6A08               	clrf	(??_color_read_Green+1)^0,c
  7105   004934  500A               	movf	color_read_Green@tmp^0,w,c
  7106   004936  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  7107   004938  6E0A               	movwf	color_read_Green@tmp^0,c
  7108   00493A  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  7109   00493C  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  7110   00493E  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  7111                           
  7112                           ;color.c: 86:  I2C_2_Master_Stop();
  7113   004940  ECA8  F026         	call	_I2C_2_Master_Stop	;wreg free
  7114   004944                     
  7115                           ;color.c: 87:  return tmp;
  7116   004944  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  7117   004948  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7118   00494C  0012               	return		;funcret
  7119   00494E                     __end_of_color_read_Green:
  7120                           	callstack 0
  7121                           
  7122 ;; *************** function _color_read_Blue *****************
  7123 ;; Defined at:
  7124 ;;		line 90 in file "color.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  tmp             2    9[COMRAM] unsigned int 
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  2    4[COMRAM] unsigned int 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7141 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7142 ;;Total ram usage:        7 bytes
  7143 ;; Hardware stack levels used: 1
  7144 ;; Hardware stack levels required when called: 2
  7145 ;; This function calls:
  7146 ;;		_I2C_2_Master_Read
  7147 ;;		_I2C_2_Master_RepStart
  7148 ;;		_I2C_2_Master_Start
  7149 ;;		_I2C_2_Master_Stop
  7150 ;;		_I2C_2_Master_Write
  7151 ;; This function is called by:
  7152 ;;		_readColours
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text33
  7157   00494E                     __ptext33:
  7158                           	callstack 0
  7159   00494E                     _color_read_Blue:
  7160                           	callstack 27
  7161   00494E                     
  7162                           ;color.c: 92:  unsigned int tmp;;color.c: 93:  I2C_2_Master_Start();
  7163   00494E  ECAD  F026         	call	_I2C_2_Master_Start	;wreg free
  7164                           
  7165                           ;color.c: 94:  I2C_2_Master_Write(0x52 | 0x00);
  7166   004952  0E52               	movlw	82
  7167   004954  EC9D  F026         	call	_I2C_2_Master_Write
  7168                           
  7169                           ;color.c: 95:  I2C_2_Master_Write(0xA0 | 0x1A);
  7170   004958  0EBA               	movlw	186
  7171   00495A  EC9D  F026         	call	_I2C_2_Master_Write
  7172                           
  7173                           ;color.c: 96:  I2C_2_Master_RepStart();
  7174   00495E  ECA3  F026         	call	_I2C_2_Master_RepStart	;wreg free
  7175                           
  7176                           ;color.c: 97:  I2C_2_Master_Write(0x52 | 0x01);
  7177   004962  0E53               	movlw	83
  7178   004964  EC9D  F026         	call	_I2C_2_Master_Write
  7179                           
  7180                           ;color.c: 98:  tmp=I2C_2_Master_Read(1);
  7181   004968  0E01               	movlw	1
  7182   00496A  EC83  F025         	call	_I2C_2_Master_Read
  7183   00496E  6E07               	movwf	??_color_read_Blue^0,c
  7184   004970  5007               	movf	??_color_read_Blue^0,w,c
  7185   004972  6E0A               	movwf	color_read_Blue@tmp^0,c
  7186   004974  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  7187                           
  7188                           ;color.c: 99:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7189   004976  0E00               	movlw	0
  7190   004978  EC83  F025         	call	_I2C_2_Master_Read
  7191   00497C  6E07               	movwf	??_color_read_Blue^0,c
  7192   00497E  5007               	movf	??_color_read_Blue^0,w,c
  7193   004980  6E09               	movwf	(??_color_read_Blue+2)^0,c
  7194   004982  6A08               	clrf	(??_color_read_Blue+1)^0,c
  7195   004984  500A               	movf	color_read_Blue@tmp^0,w,c
  7196   004986  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  7197   004988  6E0A               	movwf	color_read_Blue@tmp^0,c
  7198   00498A  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  7199   00498C  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  7200   00498E  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  7201                           
  7202                           ;color.c: 100:  I2C_2_Master_Stop();
  7203   004990  ECA8  F026         	call	_I2C_2_Master_Stop	;wreg free
  7204   004994                     
  7205                           ;color.c: 101:  return tmp;
  7206   004994  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  7207   004998  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7208   00499C  0012               	return		;funcret
  7209   00499E                     __end_of_color_read_Blue:
  7210                           	callstack 0
  7211                           
  7212 ;; *************** function _I2C_2_Master_RepStart *****************
  7213 ;; Defined at:
  7214 ;;		line 33 in file "i2c.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;Total ram usage:        0 bytes
  7233 ;; Hardware stack levels used: 1
  7234 ;; Hardware stack levels required when called: 1
  7235 ;; This function calls:
  7236 ;;		_I2C_2_Master_Idle
  7237 ;; This function is called by:
  7238 ;;		_color_read_lum
  7239 ;;		_color_read_Red
  7240 ;;		_color_read_Green
  7241 ;;		_color_read_Blue
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text34
  7246   004D46                     __ptext34:
  7247                           	callstack 0
  7248   004D46                     _I2C_2_Master_RepStart:
  7249                           	callstack 27
  7250   004D46                     
  7251                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7252   004D46  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  7253   004D4A                     
  7254                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7255   004D4A  010E               	movlb	14	; () banked
  7256   004D4C  83DA               	bsf	218,1,b	;volatile
  7257   004D4E                     
  7258                           ; BSR set to: 14
  7259   004D4E  0012               	return		;funcret
  7260   004D50                     __end_of_I2C_2_Master_RepStart:
  7261                           	callstack 0
  7262                           
  7263 ;; *************** function _I2C_2_Master_Read *****************
  7264 ;; Defined at:
  7265 ;;		line 51 in file "i2c.c"
  7266 ;; Parameters:    Size  Location     Type
  7267 ;;  ack             1    wreg     unsigned char 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  ack             1    2[COMRAM] unsigned char 
  7270 ;;  tmp             1    3[COMRAM] unsigned char 
  7271 ;; Return value:  Size  Location     Type
  7272 ;;                  1    wreg      unsigned char 
  7273 ;; Registers used:
  7274 ;;		wreg, status,2, status,0, cstack
  7275 ;; Tracked objects:
  7276 ;;		On entry : 0/0
  7277 ;;		On exit  : 0/0
  7278 ;;		Unchanged: 0/0
  7279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;Total ram usage:        3 bytes
  7285 ;; Hardware stack levels used: 1
  7286 ;; Hardware stack levels required when called: 1
  7287 ;; This function calls:
  7288 ;;		_I2C_2_Master_Idle
  7289 ;; This function is called by:
  7290 ;;		_color_read_lum
  7291 ;;		_color_read_Red
  7292 ;;		_color_read_Green
  7293 ;;		_color_read_Blue
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text35
  7298   004B06                     __ptext35:
  7299                           	callstack 0
  7300   004B06                     _I2C_2_Master_Read:
  7301                           	callstack 27
  7302                           
  7303                           ; BSR set to: 14
  7304                           ;incstack = 0
  7305                           ;I2C_2_Master_Read@ack stored from wreg
  7306   004B06  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  7307   004B08                     
  7308                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7309   004B08  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  7310   004B0C                     
  7311                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7312   004B0C  010E               	movlb	14	; () banked
  7313   004B0E  87DA               	bsf	218,3,b	;volatile
  7314                           
  7315                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7316   004B10  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  7317   004B14                     
  7318                           ;i2c.c: 57:   tmp = SSP2BUF;
  7319   004B14  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7320                           
  7321                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7322   004B18  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  7323   004B1C                     
  7324                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7325   004B1C  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  7326   004B1E  B4D8               	btfsc	status,2,c
  7327   004B20  EF94  F025         	goto	u4461
  7328   004B24  EF98  F025         	goto	u4460
  7329   004B28                     u4461:
  7330   004B28  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7331   004B2A  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  7332   004B2C  EF99  F025         	goto	u4478
  7333   004B30                     u4460:
  7334   004B30  6A02               	clrf	??_I2C_2_Master_Read^0,c
  7335   004B32                     u4478:
  7336   004B32  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  7337   004B34  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  7338   004B36  010E               	movlb	14	; () banked
  7339   004B38  51DA               	movf	218,w,b	;volatile
  7340   004B3A  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7341   004B3C  0BDF               	andlw	-33
  7342   004B3E  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  7343   004B40  6FDA               	movwf	218,b	;volatile
  7344   004B42                     
  7345                           ; BSR set to: 14
  7346                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7347   004B42  89DA               	bsf	218,4,b	;volatile
  7348   004B44                     
  7349                           ; BSR set to: 14
  7350                           ;i2c.c: 61:   return tmp;
  7351   004B44  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  7352   004B46                     
  7353                           ; BSR set to: 14
  7354   004B46  0012               	return		;funcret
  7355   004B48                     __end_of_I2C_2_Master_Read:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _initUSART4 *****************
  7359 ;; Defined at:
  7360 ;;		line 4 in file "serial.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  1    wreg      void 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;Total ram usage:        0 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_main
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text36
  7388   004D04                     __ptext36:
  7389                           	callstack 0
  7390   004D04                     _initUSART4:
  7391                           	callstack 30
  7392   004D04                     
  7393                           ;serial.c: 5:     RC0PPS = 0x12;
  7394   004D04  0E12               	movlw	18
  7395   004D06  010E               	movlb	14	; () banked
  7396   004D08  6F62               	movwf	98,b	;volatile
  7397                           
  7398                           ;serial.c: 6:     RX4PPS = 0x11;
  7399   004D0A  0E11               	movlw	17
  7400   004D0C  6F15               	movwf	21,b	;volatile
  7401   004D0E                     
  7402                           ; BSR set to: 14
  7403                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7404   004D0E  97E9               	bcf	233,3,b	;volatile
  7405   004D10                     
  7406                           ; BSR set to: 14
  7407                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7408   004D10  95E8               	bcf	232,2,b	;volatile
  7409                           
  7410                           ;serial.c: 9:     SP4BRGL = 51;
  7411   004D12  0E33               	movlw	51
  7412   004D14  6FE5               	movwf	229,b	;volatile
  7413                           
  7414                           ;serial.c: 10:     SP4BRGH = 0;
  7415   004D16  0E00               	movlw	0
  7416   004D18  6FE6               	movwf	230,b	;volatile
  7417   004D1A                     
  7418                           ; BSR set to: 14
  7419                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7420   004D1A  89E7               	bsf	231,4,b	;volatile
  7421   004D1C                     
  7422                           ; BSR set to: 14
  7423                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7424   004D1C  8BE8               	bsf	232,5,b	;volatile
  7425   004D1E                     
  7426                           ; BSR set to: 14
  7427                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7428   004D1E  8FE7               	bsf	231,7,b	;volatile
  7429   004D20                     
  7430                           ; BSR set to: 14
  7431   004D20  0012               	return		;funcret
  7432   004D22                     __end_of_initUSART4:
  7433                           	callstack 0
  7434                           
  7435 ;; *************** function _initDCmotorsPWM *****************
  7436 ;; Defined at:
  7437 ;;		line 6 in file "dc_motor.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;		None
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  1    wreg      void 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7451 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7455 ;;Total ram usage:        2 bytes
  7456 ;; Hardware stack levels used: 1
  7457 ;; This function calls:
  7458 ;;		Nothing
  7459 ;; This function is called by:
  7460 ;;		_main
  7461 ;; This function uses a non-reentrant model
  7462 ;;
  7463                           
  7464                           	psect	text37
  7465   00445C                     __ptext37:
  7466                           	callstack 0
  7467   00445C                     _initDCmotorsPWM:
  7468                           	callstack 30
  7469   00445C                     
  7470                           ;dc_motor.c: 10:     RE2PPS=0x05;
  7471   00445C  0E05               	movlw	5
  7472   00445E  010E               	movlb	14	; () banked
  7473   004460  6F74               	movwf	116,b	;volatile
  7474                           
  7475                           ;dc_motor.c: 11:     RE4PPS=0x06;
  7476   004462  0E06               	movlw	6
  7477   004464  6F76               	movwf	118,b	;volatile
  7478                           
  7479                           ;dc_motor.c: 12:     RC7PPS=0x07;
  7480   004466  0E07               	movlw	7
  7481   004468  6F69               	movwf	105,b	;volatile
  7482                           
  7483                           ;dc_motor.c: 13:     RG6PPS=0x08;
  7484   00446A  0E08               	movlw	8
  7485   00446C  6F88               	movwf	136,b	;volatile
  7486   00446E                     
  7487                           ; BSR set to: 14
  7488                           ;dc_motor.c: 16:     TRISEbits.TRISE2=0;
  7489   00446E  9485               	bcf	133,2,c	;volatile
  7490   004470                     
  7491                           ; BSR set to: 14
  7492                           ;dc_motor.c: 17:     TRISEbits.TRISE4=0;
  7493   004470  9885               	bcf	133,4,c	;volatile
  7494   004472                     
  7495                           ; BSR set to: 14
  7496                           ;dc_motor.c: 18:     TRISCbits.TRISC7=0;
  7497   004472  9E83               	bcf	131,7,c	;volatile
  7498   004474                     
  7499                           ; BSR set to: 14
  7500                           ;dc_motor.c: 19:     TRISGbits.TRISG6=0;
  7501   004474  9C87               	bcf	135,6,c	;volatile
  7502                           
  7503                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b011;
  7504   004476  50BD               	movf	189,w,c	;volatile
  7505   004478  0B8F               	andlw	-113
  7506   00447A  0930               	iorlw	48
  7507   00447C  6EBD               	movwf	189,c	;volatile
  7508                           
  7509                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  7510   00447E  0EE0               	movlw	-32
  7511   004480  16BE               	andwf	190,f,c	;volatile
  7512                           
  7513                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  7514   004482  50BF               	movf	191,w,c	;volatile
  7515   004484  0BF0               	andlw	-16
  7516   004486  0901               	iorlw	1
  7517   004488  6EBF               	movwf	191,c	;volatile
  7518   00448A                     
  7519                           ; BSR set to: 14
  7520                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  7521   00448A  C001  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  7522   00448E                     
  7523                           ; BSR set to: 14
  7524                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  7525   00448E  8EBD               	bsf	189,7,c	;volatile
  7526                           
  7527                           ;dc_motor.c: 34:     CCPR1H=0;
  7528   004490  0E00               	movlw	0
  7529   004492  6EAA               	movwf	170,c	;volatile
  7530                           
  7531                           ;dc_motor.c: 35:     CCPR2H=0;
  7532   004494  0E00               	movlw	0
  7533   004496  6EA6               	movwf	166,c	;volatile
  7534                           
  7535                           ;dc_motor.c: 36:     CCPR3H=0;
  7536   004498  0E00               	movlw	0
  7537   00449A  010F               	movlb	15	; () banked
  7538   00449C  6F25               	movwf	37,b	;volatile
  7539                           
  7540                           ;dc_motor.c: 37:     CCPR4H=0;
  7541   00449E  0E00               	movlw	0
  7542   0044A0  6F21               	movwf	33,b	;volatile
  7543                           
  7544                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  7545   0044A2  0EFC               	movlw	-4
  7546   0044A4  16AD               	andwf	173,f,c	;volatile
  7547                           
  7548                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  7549   0044A6  0EF3               	movlw	-13
  7550   0044A8  16AD               	andwf	173,f,c	;volatile
  7551                           
  7552                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  7553   0044AA  0ECF               	movlw	-49
  7554   0044AC  16AD               	andwf	173,f,c	;volatile
  7555                           
  7556                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  7557   0044AE  0E3F               	movlw	-193
  7558   0044B0  16AD               	andwf	173,f,c	;volatile
  7559   0044B2                     
  7560                           ; BSR set to: 15
  7561                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  7562   0044B2  88AB               	bsf	171,4,c	;volatile
  7563                           
  7564                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  7565   0044B4  50AB               	movf	171,w,c	;volatile
  7566   0044B6  0BF0               	andlw	-16
  7567   0044B8  090C               	iorlw	12
  7568   0044BA  6EAB               	movwf	171,c	;volatile
  7569   0044BC                     
  7570                           ; BSR set to: 15
  7571                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  7572   0044BC  8EAB               	bsf	171,7,c	;volatile
  7573   0044BE                     
  7574                           ; BSR set to: 15
  7575                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  7576   0044BE  88A7               	bsf	167,4,c	;volatile
  7577                           
  7578                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  7579   0044C0  50A7               	movf	167,w,c	;volatile
  7580   0044C2  0BF0               	andlw	-16
  7581   0044C4  090C               	iorlw	12
  7582   0044C6  6EA7               	movwf	167,c	;volatile
  7583   0044C8                     
  7584                           ; BSR set to: 15
  7585                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  7586   0044C8  8EA7               	bsf	167,7,c	;volatile
  7587   0044CA                     
  7588                           ; BSR set to: 15
  7589                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  7590   0044CA  8926               	bsf	38,4,b	;volatile
  7591                           
  7592                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  7593   0044CC  5126               	movf	38,w,b	;volatile
  7594   0044CE  0BF0               	andlw	-16
  7595   0044D0  090C               	iorlw	12
  7596   0044D2  6F26               	movwf	38,b	;volatile
  7597   0044D4                     
  7598                           ; BSR set to: 15
  7599                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  7600   0044D4  8F26               	bsf	38,7,b	;volatile
  7601   0044D6                     
  7602                           ; BSR set to: 15
  7603                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  7604   0044D6  8922               	bsf	34,4,b	;volatile
  7605                           
  7606                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  7607   0044D8  5122               	movf	34,w,b	;volatile
  7608   0044DA  0BF0               	andlw	-16
  7609   0044DC  090C               	iorlw	12
  7610   0044DE  6F22               	movwf	34,b	;volatile
  7611   0044E0                     
  7612                           ; BSR set to: 15
  7613                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  7614   0044E0  8F22               	bsf	34,7,b	;volatile
  7615   0044E2                     
  7616                           ; BSR set to: 15
  7617   0044E2  0012               	return		;funcret
  7618   0044E4                     __end_of_initDCmotorsPWM:
  7619                           	callstack 0
  7620                           
  7621 ;; *************** function _getTMR0val *****************
  7622 ;; Defined at:
  7623 ;;		line 28 in file "timers.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  moving          2    0[COMRAM] int 
  7628 ;;  temp            2    0        unsigned int 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      void 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;Total ram usage:        2 bytes
  7643 ;; Hardware stack levels used: 1
  7644 ;; This function calls:
  7645 ;;		Nothing
  7646 ;; This function is called by:
  7647 ;;		_main
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text38
  7652   004C9E                     __ptext38:
  7653                           	callstack 0
  7654   004C9E                     _getTMR0val:
  7655                           	callstack 30
  7656   004C9E  50D3               	movf	211,w,c	;volatile
  7657   004CA0                     
  7658                           ;timers.c: 32:     int moving=TMR0H<<8;
  7659   004CA0  50D4               	movf	212,w,c	;volatile
  7660   004CA2  6E02               	movwf	(getTMR0val@moving+1)^0,c
  7661   004CA4  6A01               	clrf	getTMR0val@moving^0,c
  7662   004CA6                     
  7663                           ;timers.c: 33:     Time_forward[move_count]=moving;
  7664   004CA6  90D8               	bcf	status,0,c
  7665   004CA8  0101               	movlb	1	; () banked
  7666   004CAA  350C               	rlcf	_move_count& (0+255),w,b	;volatile
  7667   004CAC  6ED9               	movwf	fsr2l,c
  7668   004CAE  350D               	rlcf	(_move_count+1)& (0+255),w,b	;volatile
  7669   004CB0  6EDA               	movwf	fsr2h,c
  7670   004CB2  0E00               	movlw	low _Time_forward
  7671   004CB4  26D9               	addwf	fsr2l,f,c
  7672   004CB6  0E02               	movlw	high _Time_forward
  7673   004CB8  22DA               	addwfc	fsr2h,f,c
  7674   004CBA  C001  FFDE         	movff	getTMR0val@moving,postinc2
  7675   004CBE  C002  FFDD         	movff	getTMR0val@moving+1,postdec2
  7676   004CC2                     
  7677                           ; BSR set to: 1
  7678   004CC2  0012               	return		;funcret
  7679   004CC4                     __end_of_getTMR0val:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _colour_rel *****************
  7683 ;; Defined at:
  7684 ;;		line 114 in file "color.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  vals            2   74[COMRAM] PTR struct RGB
  7687 ;;		 -> vals(8), 
  7688 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  7689 ;;		 -> rel(12), 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;  B               4   20[BANK0 ] float 
  7692 ;;  G               4   16[BANK0 ] float 
  7693 ;;  R               4   12[BANK0 ] float 
  7694 ;;  L               4    0[BANK0 ] float 
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  1    wreg      void 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7705 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;      Totals:         4      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;Total ram usage:       28 bytes
  7709 ;; Hardware stack levels used: 1
  7710 ;; Hardware stack levels required when called: 1
  7711 ;; This function calls:
  7712 ;;		___fladd
  7713 ;;		___fldiv
  7714 ;;		___xxtofl
  7715 ;; This function is called by:
  7716 ;;		_main
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text39
  7721   002A1E                     __ptext39:
  7722                           	callstack 0
  7723   002A1E                     _colour_rel:
  7724                           	callstack 29
  7725   002A1E                     
  7726                           ;color.c: 115:     float R = vals->R;
  7727   002A1E  C04B  FFD9         	movff	colour_rel@vals,fsr2l
  7728   002A22  C04C  FFDA         	movff	colour_rel@vals+1,fsr2h
  7729   002A26  CFDE F001          	movff	postinc2,___xxtofl@val
  7730   002A2A  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7731   002A2E  0E00               	movlw	0
  7732   002A30  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7733   002A32  0EFF               	movlw	-1
  7734   002A34  6E03               	movwf	(___xxtofl@val+2)^0,c
  7735   002A36  6E04               	movwf	(___xxtofl@val+3)^0,c
  7736   002A38  0E01               	movlw	1
  7737   002A3A  EC9B  F01C         	call	___xxtofl
  7738   002A3E  C001  F06C         	movff	?___xxtofl,colour_rel@R
  7739   002A42  C002  F06D         	movff	?___xxtofl+1,colour_rel@R+1
  7740   002A46  C003  F06E         	movff	?___xxtofl+2,colour_rel@R+2
  7741   002A4A  C004  F06F         	movff	?___xxtofl+3,colour_rel@R+3
  7742                           
  7743                           ;color.c: 116:     float G = vals->G;
  7744   002A4E  EE20 F002          	lfsr	2,2
  7745   002A52  504B               	movf	colour_rel@vals^0,w,c
  7746   002A54  26D9               	addwf	fsr2l,f,c
  7747   002A56  504C               	movf	(colour_rel@vals+1)^0,w,c
  7748   002A58  22DA               	addwfc	fsr2h,f,c
  7749   002A5A  CFDE F001          	movff	postinc2,___xxtofl@val
  7750   002A5E  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7751   002A62  0E00               	movlw	0
  7752   002A64  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7753   002A66  0EFF               	movlw	-1
  7754   002A68  6E03               	movwf	(___xxtofl@val+2)^0,c
  7755   002A6A  6E04               	movwf	(___xxtofl@val+3)^0,c
  7756   002A6C  0E01               	movlw	1
  7757   002A6E  EC9B  F01C         	call	___xxtofl
  7758   002A72  C001  F070         	movff	?___xxtofl,colour_rel@G
  7759   002A76  C002  F071         	movff	?___xxtofl+1,colour_rel@G+1
  7760   002A7A  C003  F072         	movff	?___xxtofl+2,colour_rel@G+2
  7761   002A7E  C004  F073         	movff	?___xxtofl+3,colour_rel@G+3
  7762                           
  7763                           ;color.c: 117:     float B = vals->B;
  7764   002A82  EE20 F004          	lfsr	2,4
  7765   002A86  504B               	movf	colour_rel@vals^0,w,c
  7766   002A88  26D9               	addwf	fsr2l,f,c
  7767   002A8A  504C               	movf	(colour_rel@vals+1)^0,w,c
  7768   002A8C  22DA               	addwfc	fsr2h,f,c
  7769   002A8E  CFDE F001          	movff	postinc2,___xxtofl@val
  7770   002A92  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7771   002A96  0E00               	movlw	0
  7772   002A98  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7773   002A9A  0EFF               	movlw	-1
  7774   002A9C  6E03               	movwf	(___xxtofl@val+2)^0,c
  7775   002A9E  6E04               	movwf	(___xxtofl@val+3)^0,c
  7776   002AA0  0E01               	movlw	1
  7777   002AA2  EC9B  F01C         	call	___xxtofl
  7778   002AA6  C001  F074         	movff	?___xxtofl,colour_rel@B
  7779   002AAA  C002  F075         	movff	?___xxtofl+1,colour_rel@B+1
  7780   002AAE  C003  F076         	movff	?___xxtofl+2,colour_rel@B+2
  7781   002AB2  C004  F077         	movff	?___xxtofl+3,colour_rel@B+3
  7782                           
  7783                           ;color.c: 118:     float L = vals->L;
  7784   002AB6  EE20 F006          	lfsr	2,6
  7785   002ABA  504B               	movf	colour_rel@vals^0,w,c
  7786   002ABC  26D9               	addwf	fsr2l,f,c
  7787   002ABE  504C               	movf	(colour_rel@vals+1)^0,w,c
  7788   002AC0  22DA               	addwfc	fsr2h,f,c
  7789   002AC2  CFDE F001          	movff	postinc2,___xxtofl@val
  7790   002AC6  CFDD F002          	movff	postdec2,___xxtofl@val+1
  7791   002ACA  0E00               	movlw	0
  7792   002ACC  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  7793   002ACE  0EFF               	movlw	-1
  7794   002AD0  6E03               	movwf	(___xxtofl@val+2)^0,c
  7795   002AD2  6E04               	movwf	(___xxtofl@val+3)^0,c
  7796   002AD4  0E01               	movlw	1
  7797   002AD6  EC9B  F01C         	call	___xxtofl
  7798   002ADA  C001  F060         	movff	?___xxtofl,colour_rel@L
  7799   002ADE  C002  F061         	movff	?___xxtofl+1,colour_rel@L+1
  7800   002AE2  C003  F062         	movff	?___xxtofl+2,colour_rel@L+2
  7801   002AE6  C004  F063         	movff	?___xxtofl+3,colour_rel@L+3
  7802   002AEA                     
  7803                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7804   002AEA  C070  F005         	movff	colour_rel@G,___fladd@a
  7805   002AEE  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7806   002AF2  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7807   002AF6  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7808   002AFA  C06C  F001         	movff	colour_rel@R,___fladd@b
  7809   002AFE  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7810   002B02  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7811   002B06  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7812   002B0A  ECCD  F00E         	call	___fladd	;wreg free
  7813   002B0E  C001  F064         	movff	?___fladd,_colour_rel$3124
  7814   002B12  C002  F065         	movff	?___fladd+1,_colour_rel$3124+1
  7815   002B16  C003  F066         	movff	?___fladd+2,_colour_rel$3124+2
  7816   002B1A  C004  F067         	movff	?___fladd+3,_colour_rel$3124+3
  7817   002B1E                     
  7818                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7819   002B1E  C074  F005         	movff	colour_rel@B,___fladd@a
  7820   002B22  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7821   002B26  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7822   002B2A  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7823   002B2E  C064  F001         	movff	_colour_rel$3124,___fladd@b
  7824   002B32  C065  F002         	movff	_colour_rel$3124+1,___fladd@b+1
  7825   002B36  C066  F003         	movff	_colour_rel$3124+2,___fladd@b+2
  7826   002B3A  C067  F004         	movff	_colour_rel$3124+3,___fladd@b+3
  7827   002B3E  ECCD  F00E         	call	___fladd	;wreg free
  7828   002B42  C001  F068         	movff	?___fladd,_colour_rel$3125
  7829   002B46  C002  F069         	movff	?___fladd+1,_colour_rel$3125+1
  7830   002B4A  C003  F06A         	movff	?___fladd+2,_colour_rel$3125+2
  7831   002B4E  C004  F06B         	movff	?___fladd+3,_colour_rel$3125+3
  7832                           
  7833                           ;color.c: 119:     rel -> R = R/(R+G+B+L);
  7834   002B52  C06C  F032         	movff	colour_rel@R,___fldiv@b
  7835   002B56  C06D  F033         	movff	colour_rel@R+1,___fldiv@b+1
  7836   002B5A  C06E  F034         	movff	colour_rel@R+2,___fldiv@b+2
  7837   002B5E  C06F  F035         	movff	colour_rel@R+3,___fldiv@b+3
  7838   002B62  C060  F005         	movff	colour_rel@L,___fladd@a
  7839   002B66  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7840   002B6A  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7841   002B6E  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7842   002B72  C068  F001         	movff	_colour_rel$3125,___fladd@b
  7843   002B76  C069  F002         	movff	_colour_rel$3125+1,___fladd@b+1
  7844   002B7A  C06A  F003         	movff	_colour_rel$3125+2,___fladd@b+2
  7845   002B7E  C06B  F004         	movff	_colour_rel$3125+3,___fladd@b+3
  7846   002B82  ECCD  F00E         	call	___fladd	;wreg free
  7847   002B86  C001  F036         	movff	?___fladd,___fldiv@a
  7848   002B8A  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7849   002B8E  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7850   002B92  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7851   002B96  EC42  F013         	call	___fldiv	;wreg free
  7852   002B9A  C04D  FFD9         	movff	colour_rel@rel,fsr2l
  7853   002B9E  C04E  FFDA         	movff	colour_rel@rel+1,fsr2h
  7854   002BA2  C032  FFDE         	movff	?___fldiv,postinc2
  7855   002BA6  C033  FFDE         	movff	?___fldiv+1,postinc2
  7856   002BAA  C034  FFDE         	movff	?___fldiv+2,postinc2
  7857   002BAE  C035  FFDE         	movff	?___fldiv+3,postinc2
  7858   002BB2                     
  7859                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7860   002BB2  C070  F005         	movff	colour_rel@G,___fladd@a
  7861   002BB6  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7862   002BBA  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7863   002BBE  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7864   002BC2  C06C  F001         	movff	colour_rel@R,___fladd@b
  7865   002BC6  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7866   002BCA  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7867   002BCE  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7868   002BD2  ECCD  F00E         	call	___fladd	;wreg free
  7869   002BD6  C001  F064         	movff	?___fladd,_colour_rel$3124
  7870   002BDA  C002  F065         	movff	?___fladd+1,_colour_rel$3124+1
  7871   002BDE  C003  F066         	movff	?___fladd+2,_colour_rel$3124+2
  7872   002BE2  C004  F067         	movff	?___fladd+3,_colour_rel$3124+3
  7873   002BE6                     
  7874                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7875   002BE6  C074  F005         	movff	colour_rel@B,___fladd@a
  7876   002BEA  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7877   002BEE  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7878   002BF2  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7879   002BF6  C064  F001         	movff	_colour_rel$3124,___fladd@b
  7880   002BFA  C065  F002         	movff	_colour_rel$3124+1,___fladd@b+1
  7881   002BFE  C066  F003         	movff	_colour_rel$3124+2,___fladd@b+2
  7882   002C02  C067  F004         	movff	_colour_rel$3124+3,___fladd@b+3
  7883   002C06  ECCD  F00E         	call	___fladd	;wreg free
  7884   002C0A  C001  F068         	movff	?___fladd,_colour_rel$3125
  7885   002C0E  C002  F069         	movff	?___fladd+1,_colour_rel$3125+1
  7886   002C12  C003  F06A         	movff	?___fladd+2,_colour_rel$3125+2
  7887   002C16  C004  F06B         	movff	?___fladd+3,_colour_rel$3125+3
  7888                           
  7889                           ;color.c: 120:     rel -> B = B/(R+G+B+L);
  7890   002C1A  C074  F032         	movff	colour_rel@B,___fldiv@b
  7891   002C1E  C075  F033         	movff	colour_rel@B+1,___fldiv@b+1
  7892   002C22  C076  F034         	movff	colour_rel@B+2,___fldiv@b+2
  7893   002C26  C077  F035         	movff	colour_rel@B+3,___fldiv@b+3
  7894   002C2A  C060  F005         	movff	colour_rel@L,___fladd@a
  7895   002C2E  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7896   002C32  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7897   002C36  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7898   002C3A  C068  F001         	movff	_colour_rel$3125,___fladd@b
  7899   002C3E  C069  F002         	movff	_colour_rel$3125+1,___fladd@b+1
  7900   002C42  C06A  F003         	movff	_colour_rel$3125+2,___fladd@b+2
  7901   002C46  C06B  F004         	movff	_colour_rel$3125+3,___fladd@b+3
  7902   002C4A  ECCD  F00E         	call	___fladd	;wreg free
  7903   002C4E  C001  F036         	movff	?___fladd,___fldiv@a
  7904   002C52  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7905   002C56  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7906   002C5A  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7907   002C5E  EC42  F013         	call	___fldiv	;wreg free
  7908   002C62  EE20 F008          	lfsr	2,8
  7909   002C66  504D               	movf	colour_rel@rel^0,w,c
  7910   002C68  26D9               	addwf	fsr2l,f,c
  7911   002C6A  504E               	movf	(colour_rel@rel+1)^0,w,c
  7912   002C6C  22DA               	addwfc	fsr2h,f,c
  7913   002C6E  C032  FFDE         	movff	?___fldiv,postinc2
  7914   002C72  C033  FFDE         	movff	?___fldiv+1,postinc2
  7915   002C76  C034  FFDE         	movff	?___fldiv+2,postinc2
  7916   002C7A  C035  FFDE         	movff	?___fldiv+3,postinc2
  7917   002C7E                     
  7918                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7919   002C7E  C070  F005         	movff	colour_rel@G,___fladd@a
  7920   002C82  C071  F006         	movff	colour_rel@G+1,___fladd@a+1
  7921   002C86  C072  F007         	movff	colour_rel@G+2,___fladd@a+2
  7922   002C8A  C073  F008         	movff	colour_rel@G+3,___fladd@a+3
  7923   002C8E  C06C  F001         	movff	colour_rel@R,___fladd@b
  7924   002C92  C06D  F002         	movff	colour_rel@R+1,___fladd@b+1
  7925   002C96  C06E  F003         	movff	colour_rel@R+2,___fladd@b+2
  7926   002C9A  C06F  F004         	movff	colour_rel@R+3,___fladd@b+3
  7927   002C9E  ECCD  F00E         	call	___fladd	;wreg free
  7928   002CA2  C001  F064         	movff	?___fladd,_colour_rel$3124
  7929   002CA6  C002  F065         	movff	?___fladd+1,_colour_rel$3124+1
  7930   002CAA  C003  F066         	movff	?___fladd+2,_colour_rel$3124+2
  7931   002CAE  C004  F067         	movff	?___fladd+3,_colour_rel$3124+3
  7932   002CB2                     
  7933                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7934   002CB2  C074  F005         	movff	colour_rel@B,___fladd@a
  7935   002CB6  C075  F006         	movff	colour_rel@B+1,___fladd@a+1
  7936   002CBA  C076  F007         	movff	colour_rel@B+2,___fladd@a+2
  7937   002CBE  C077  F008         	movff	colour_rel@B+3,___fladd@a+3
  7938   002CC2  C064  F001         	movff	_colour_rel$3124,___fladd@b
  7939   002CC6  C065  F002         	movff	_colour_rel$3124+1,___fladd@b+1
  7940   002CCA  C066  F003         	movff	_colour_rel$3124+2,___fladd@b+2
  7941   002CCE  C067  F004         	movff	_colour_rel$3124+3,___fladd@b+3
  7942   002CD2  ECCD  F00E         	call	___fladd	;wreg free
  7943   002CD6  C001  F068         	movff	?___fladd,_colour_rel$3125
  7944   002CDA  C002  F069         	movff	?___fladd+1,_colour_rel$3125+1
  7945   002CDE  C003  F06A         	movff	?___fladd+2,_colour_rel$3125+2
  7946   002CE2  C004  F06B         	movff	?___fladd+3,_colour_rel$3125+3
  7947                           
  7948                           ;color.c: 121:     rel -> G = G/(R+G+B+L);
  7949   002CE6  C070  F032         	movff	colour_rel@G,___fldiv@b
  7950   002CEA  C071  F033         	movff	colour_rel@G+1,___fldiv@b+1
  7951   002CEE  C072  F034         	movff	colour_rel@G+2,___fldiv@b+2
  7952   002CF2  C073  F035         	movff	colour_rel@G+3,___fldiv@b+3
  7953   002CF6  C060  F005         	movff	colour_rel@L,___fladd@a
  7954   002CFA  C061  F006         	movff	colour_rel@L+1,___fladd@a+1
  7955   002CFE  C062  F007         	movff	colour_rel@L+2,___fladd@a+2
  7956   002D02  C063  F008         	movff	colour_rel@L+3,___fladd@a+3
  7957   002D06  C068  F001         	movff	_colour_rel$3125,___fladd@b
  7958   002D0A  C069  F002         	movff	_colour_rel$3125+1,___fladd@b+1
  7959   002D0E  C06A  F003         	movff	_colour_rel$3125+2,___fladd@b+2
  7960   002D12  C06B  F004         	movff	_colour_rel$3125+3,___fladd@b+3
  7961   002D16  ECCD  F00E         	call	___fladd	;wreg free
  7962   002D1A  C001  F036         	movff	?___fladd,___fldiv@a
  7963   002D1E  C002  F037         	movff	?___fladd+1,___fldiv@a+1
  7964   002D22  C003  F038         	movff	?___fladd+2,___fldiv@a+2
  7965   002D26  C004  F039         	movff	?___fladd+3,___fldiv@a+3
  7966   002D2A  EC42  F013         	call	___fldiv	;wreg free
  7967   002D2E  EE20 F004          	lfsr	2,4
  7968   002D32  504D               	movf	colour_rel@rel^0,w,c
  7969   002D34  26D9               	addwf	fsr2l,f,c
  7970   002D36  504E               	movf	(colour_rel@rel+1)^0,w,c
  7971   002D38  22DA               	addwfc	fsr2h,f,c
  7972   002D3A  C032  FFDE         	movff	?___fldiv,postinc2
  7973   002D3E  C033  FFDE         	movff	?___fldiv+1,postinc2
  7974   002D42  C034  FFDE         	movff	?___fldiv+2,postinc2
  7975   002D46  C035  FFDE         	movff	?___fldiv+3,postinc2
  7976   002D4A  0012               	return		;funcret
  7977   002D4C                     __end_of_colour_rel:
  7978                           	callstack 0
  7979                           
  7980 ;; *************** function _color_click_init *****************
  7981 ;; Defined at:
  7982 ;;		line 7 in file "color.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;		None
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;Total ram usage:        1 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 3
  8003 ;; This function calls:
  8004 ;;		_I2C_2_Master_Init
  8005 ;;		_color_writetoaddr
  8006 ;; This function is called by:
  8007 ;;		_main
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text40
  8012   0047BC                     __ptext40:
  8013                           	callstack 0
  8014   0047BC                     _color_click_init:
  8015                           	callstack 27
  8016   0047BC                     
  8017                           ;color.c: 10:     I2C_2_Master_Init();
  8018   0047BC  EC13  F026         	call	_I2C_2_Master_Init	;wreg free
  8019   0047C0                     
  8020                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  8021   0047C0  0E01               	movlw	1
  8022   0047C2  6E03               	movwf	color_writetoaddr@value^0,c
  8023   0047C4  0E00               	movlw	0
  8024   0047C6  EC62  F026         	call	_color_writetoaddr
  8025   0047CA                     
  8026                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8027   0047CA  0E3F               	movlw	63
  8028   0047CC  6E05               	movwf	??_color_click_init^0,c
  8029   0047CE  0E55               	movlw	85
  8030   0047D0                     u5367:
  8031   0047D0  2EE8               	decfsz	wreg,f,c
  8032   0047D2  D7FE               	bra	u5367
  8033   0047D4  2E05               	decfsz	??_color_click_init^0,f,c
  8034   0047D6  D7FC               	bra	u5367
  8035   0047D8  F000               	nop	
  8036   0047DA                     
  8037                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8038   0047DA  0E03               	movlw	3
  8039   0047DC  6E03               	movwf	color_writetoaddr@value^0,c
  8040   0047DE  0E00               	movlw	0
  8041   0047E0  EC62  F026         	call	_color_writetoaddr
  8042   0047E4                     
  8043                           ;color.c: 17:  color_writetoaddr(0x01, 0xD5);
  8044   0047E4  0ED5               	movlw	213
  8045   0047E6  6E03               	movwf	color_writetoaddr@value^0,c
  8046   0047E8  0E01               	movlw	1
  8047   0047EA  EC62  F026         	call	_color_writetoaddr
  8048   0047EE                     
  8049                           ;color.c: 19:     color_writetoaddr(0x0F, 0x00);
  8050   0047EE  0E00               	movlw	0
  8051   0047F0  6E03               	movwf	color_writetoaddr@value^0,c
  8052   0047F2  0E0F               	movlw	15
  8053   0047F4  EC62  F026         	call	_color_writetoaddr
  8054   0047F8                     
  8055                           ;color.c: 21:     TRISGbits.TRISG1 = 0;
  8056   0047F8  9287               	bcf	135,1,c	;volatile
  8057   0047FA                     
  8058                           ;color.c: 22:     TRISAbits.TRISA4 = 0;
  8059   0047FA  9881               	bcf	129,4,c	;volatile
  8060   0047FC                     
  8061                           ;color.c: 23:     TRISFbits.TRISF7 = 0;
  8062   0047FC  9E86               	bcf	134,7,c	;volatile
  8063   0047FE                     
  8064                           ;color.c: 25:     TRISDbits.TRISD3 = 0;
  8065   0047FE  9684               	bcf	132,3,c	;volatile
  8066   004800                     
  8067                           ;color.c: 26:     TRISDbits.TRISD4 = 0;
  8068   004800  9884               	bcf	132,4,c	;volatile
  8069   004802                     
  8070                           ;color.c: 28:     LATGbits.LATG1=0;
  8071   004802  927F               	bcf	127,1,c	;volatile
  8072   004804                     
  8073                           ;color.c: 29:     LATFbits.LATF7=0;
  8074   004804  9E7E               	bcf	126,7,c	;volatile
  8075   004806                     
  8076                           ;color.c: 30:     LATAbits.LATA4=0;
  8077   004806  9879               	bcf	121,4,c	;volatile
  8078   004808                     
  8079                           ;color.c: 32:     LATDbits.LATD3=0;
  8080   004808  967C               	bcf	124,3,c	;volatile
  8081   00480A                     
  8082                           ;color.c: 33:     LATDbits.LATD4=0;
  8083   00480A  987C               	bcf	124,4,c	;volatile
  8084   00480C  0012               	return		;funcret
  8085   00480E                     __end_of_color_click_init:
  8086                           	callstack 0
  8087                           
  8088 ;; *************** function _color_writetoaddr *****************
  8089 ;; Defined at:
  8090 ;;		line 41 in file "color.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  address         1    wreg     unsigned char 
  8093 ;;  value           1    2[COMRAM] unsigned char 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  address         1    3[COMRAM] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;Total ram usage:        2 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 2
  8112 ;; This function calls:
  8113 ;;		_I2C_2_Master_Start
  8114 ;;		_I2C_2_Master_Stop
  8115 ;;		_I2C_2_Master_Write
  8116 ;; This function is called by:
  8117 ;;		_color_click_init
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text41
  8122   004CC4                     __ptext41:
  8123                           	callstack 0
  8124   004CC4                     _color_writetoaddr:
  8125                           	callstack 27
  8126                           
  8127                           ;incstack = 0
  8128                           ;color_writetoaddr@address stored from wreg
  8129   004CC4  6E04               	movwf	color_writetoaddr@address^0,c
  8130   004CC6                     
  8131                           ;color.c: 42:     I2C_2_Master_Start();
  8132   004CC6  ECAD  F026         	call	_I2C_2_Master_Start	;wreg free
  8133                           
  8134                           ;color.c: 43:     I2C_2_Master_Write(0x52 | 0x00);
  8135   004CCA  0E52               	movlw	82
  8136   004CCC  EC9D  F026         	call	_I2C_2_Master_Write
  8137                           
  8138                           ;color.c: 44:     I2C_2_Master_Write(0x80 | address);
  8139   004CD0  5004               	movf	color_writetoaddr@address^0,w,c
  8140   004CD2  0980               	iorlw	128
  8141   004CD4  EC9D  F026         	call	_I2C_2_Master_Write
  8142                           
  8143                           ;color.c: 45:     I2C_2_Master_Write(value);
  8144   004CD8  5003               	movf	color_writetoaddr@value^0,w,c
  8145   004CDA  EC9D  F026         	call	_I2C_2_Master_Write
  8146                           
  8147                           ;color.c: 46:     I2C_2_Master_Stop();
  8148   004CDE  ECA8  F026         	call	_I2C_2_Master_Stop	;wreg free
  8149   004CE2  0012               	return		;funcret
  8150   004CE4                     __end_of_color_writetoaddr:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _I2C_2_Master_Write *****************
  8154 ;; Defined at:
  8155 ;;		line 45 in file "i2c.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  data_byte       1    wreg     unsigned char 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  data_byte       1    1[COMRAM] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;Total ram usage:        1 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 1
  8176 ;; This function calls:
  8177 ;;		_I2C_2_Master_Idle
  8178 ;; This function is called by:
  8179 ;;		_color_writetoaddr
  8180 ;;		_color_read_lum
  8181 ;;		_color_read_Red
  8182 ;;		_color_read_Green
  8183 ;;		_color_read_Blue
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text42
  8188   004D3A                     __ptext42:
  8189                           	callstack 0
  8190   004D3A                     _I2C_2_Master_Write:
  8191                           	callstack 27
  8192                           
  8193                           ;incstack = 0
  8194                           ;I2C_2_Master_Write@data_byte stored from wreg
  8195   004D3A  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  8196   004D3C                     
  8197                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8198   004D3C  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  8199   004D40                     
  8200                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8201   004D40  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8202   004D44  0012               	return		;funcret
  8203   004D46                     __end_of_I2C_2_Master_Write:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _I2C_2_Master_Stop *****************
  8207 ;; Defined at:
  8208 ;;		line 39 in file "i2c.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;		None
  8213 ;; Return value:  Size  Location     Type
  8214 ;;                  1    wreg      void 
  8215 ;; Registers used:
  8216 ;;		wreg, status,2, status,0, cstack
  8217 ;; Tracked objects:
  8218 ;;		On entry : 0/0
  8219 ;;		On exit  : 0/0
  8220 ;;		Unchanged: 0/0
  8221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8226 ;;Total ram usage:        0 bytes
  8227 ;; Hardware stack levels used: 1
  8228 ;; Hardware stack levels required when called: 1
  8229 ;; This function calls:
  8230 ;;		_I2C_2_Master_Idle
  8231 ;; This function is called by:
  8232 ;;		_color_writetoaddr
  8233 ;;		_color_read_lum
  8234 ;;		_color_read_Red
  8235 ;;		_color_read_Green
  8236 ;;		_color_read_Blue
  8237 ;; This function uses a non-reentrant model
  8238 ;;
  8239                           
  8240                           	psect	text43
  8241   004D50                     __ptext43:
  8242                           	callstack 0
  8243   004D50                     _I2C_2_Master_Stop:
  8244                           	callstack 27
  8245   004D50                     
  8246                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8247   004D50  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  8248   004D54                     
  8249                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8250   004D54  010E               	movlb	14	; () banked
  8251   004D56  85DA               	bsf	218,2,b	;volatile
  8252   004D58                     
  8253                           ; BSR set to: 14
  8254   004D58  0012               	return		;funcret
  8255   004D5A                     __end_of_I2C_2_Master_Stop:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _I2C_2_Master_Start *****************
  8259 ;; Defined at:
  8260 ;;		line 27 in file "i2c.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;		None
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0, cstack
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;Total ram usage:        0 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 1
  8281 ;; This function calls:
  8282 ;;		_I2C_2_Master_Idle
  8283 ;; This function is called by:
  8284 ;;		_color_writetoaddr
  8285 ;;		_color_read_lum
  8286 ;;		_color_read_Red
  8287 ;;		_color_read_Green
  8288 ;;		_color_read_Blue
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text44
  8293   004D5A                     __ptext44:
  8294                           	callstack 0
  8295   004D5A                     _I2C_2_Master_Start:
  8296                           	callstack 27
  8297   004D5A                     
  8298                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8299   004D5A  EC28  F026         	call	_I2C_2_Master_Idle	;wreg free
  8300   004D5E                     
  8301                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8302   004D5E  010E               	movlb	14	; () banked
  8303   004D60  81DA               	bsf	218,0,b	;volatile
  8304   004D62                     
  8305                           ; BSR set to: 14
  8306   004D62  0012               	return		;funcret
  8307   004D64                     __end_of_I2C_2_Master_Start:
  8308                           	callstack 0
  8309                           
  8310 ;; *************** function _I2C_2_Master_Idle *****************
  8311 ;; Defined at:
  8312 ;;		line 22 in file "i2c.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;Total ram usage:        1 bytes
  8331 ;; Hardware stack levels used: 1
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_I2C_2_Master_Start
  8336 ;;		_I2C_2_Master_RepStart
  8337 ;;		_I2C_2_Master_Stop
  8338 ;;		_I2C_2_Master_Write
  8339 ;;		_I2C_2_Master_Read
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text45
  8344   004C50                     __ptext45:
  8345                           	callstack 0
  8346   004C50                     _I2C_2_Master_Idle:
  8347                           	callstack 27
  8348   004C50                     l143:
  8349   004C50  010E               	movlb	14	; () banked
  8350   004C52  B5D8               	btfsc	216,2,b	;volatile
  8351   004C54  EF2E  F026         	goto	u4001
  8352   004C58  EF30  F026         	goto	u4000
  8353   004C5C                     u4001:
  8354   004C5C  EF28  F026         	goto	l143
  8355   004C60                     u4000:
  8356   004C60                     
  8357                           ; BSR set to: 14
  8358   004C60  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8359   004C64  0E1F               	movlw	31
  8360   004C66  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  8361   004C68  A4D8               	btfss	status,2,c
  8362   004C6A  EF39  F026         	goto	u4011
  8363   004C6E  EF3B  F026         	goto	u4010
  8364   004C72                     u4011:
  8365   004C72  EF28  F026         	goto	l143
  8366   004C76                     u4010:
  8367   004C76                     
  8368                           ; BSR set to: 14
  8369   004C76  0012               	return		;funcret
  8370   004C78                     __end_of_I2C_2_Master_Idle:
  8371                           	callstack 0
  8372                           
  8373 ;; *************** function _I2C_2_Master_Init *****************
  8374 ;; Defined at:
  8375 ;;		line 4 in file "i2c.c"
  8376 ;; Parameters:    Size  Location     Type
  8377 ;;		None
  8378 ;; Auto vars:     Size  Location     Type
  8379 ;;		None
  8380 ;; Return value:  Size  Location     Type
  8381 ;;                  1    wreg      void 
  8382 ;; Registers used:
  8383 ;;		wreg, status,2
  8384 ;; Tracked objects:
  8385 ;;		On entry : 0/0
  8386 ;;		On exit  : 0/0
  8387 ;;		Unchanged: 0/0
  8388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8393 ;;Total ram usage:        0 bytes
  8394 ;; Hardware stack levels used: 1
  8395 ;; This function calls:
  8396 ;;		Nothing
  8397 ;; This function is called by:
  8398 ;;		_color_click_init
  8399 ;;		_main
  8400 ;; This function uses a non-reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text46
  8404   004C26                     __ptext46:
  8405                           	callstack 0
  8406   004C26                     _I2C_2_Master_Init:
  8407                           	callstack 29
  8408   004C26                     
  8409                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8410   004C26  010E               	movlb	14	; () banked
  8411   004C28  51D9               	movf	217,w,b	;volatile
  8412   004C2A  0BF0               	andlw	-16
  8413   004C2C  0908               	iorlw	8
  8414   004C2E  6FD9               	movwf	217,b	;volatile
  8415   004C30                     
  8416                           ; BSR set to: 14
  8417                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8418   004C30  8BD9               	bsf	217,5,b	;volatile
  8419                           
  8420                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8421   004C32  0E9F               	movlw	159
  8422   004C34  6FD6               	movwf	214,b	;volatile
  8423   004C36                     
  8424                           ; BSR set to: 14
  8425                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8426   004C36  8A84               	bsf	132,5,c	;volatile
  8427   004C38                     
  8428                           ; BSR set to: 14
  8429                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8430   004C38  8C84               	bsf	132,6,c	;volatile
  8431   004C3A                     
  8432                           ; BSR set to: 14
  8433                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8434   004C3A  9BA7               	bcf	167,5,b	;volatile
  8435   004C3C                     
  8436                           ; BSR set to: 14
  8437                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8438   004C3C  9DA7               	bcf	167,6,b	;volatile
  8439                           
  8440                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8441   004C3E  0E1D               	movlw	29
  8442   004C40  6F1D               	movwf	29,b	;volatile
  8443                           
  8444                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8445   004C42  0E1E               	movlw	30
  8446   004C44  6F1C               	movwf	28,b	;volatile
  8447                           
  8448                           ;i2c.c: 18:   RD5PPS=0x1C;
  8449   004C46  0E1C               	movlw	28
  8450   004C48  6F6F               	movwf	111,b	;volatile
  8451                           
  8452                           ;i2c.c: 19:   RD6PPS=0x1B;
  8453   004C4A  0E1B               	movlw	27
  8454   004C4C  6F70               	movwf	112,b	;volatile
  8455   004C4E                     
  8456                           ; BSR set to: 14
  8457   004C4E  0012               	return		;funcret
  8458   004C50                     __end_of_I2C_2_Master_Init:
  8459                           	callstack 0
  8460                           
  8461 ;; *************** function _Timer0_init *****************
  8462 ;; Defined at:
  8463 ;;		line 8 in file "timers.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		wreg, status,2
  8472 ;; Tracked objects:
  8473 ;;		On entry : 0/0
  8474 ;;		On exit  : 0/0
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used: 1
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_main
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           	psect	text47
  8491   004CE4                     __ptext47:
  8492                           	callstack 0
  8493   004CE4                     _Timer0_init:
  8494                           	callstack 30
  8495   004CE4                     
  8496                           ;timers.c: 10:     T0CON1bits.T0CS=0b010;
  8497   004CE4  50D6               	movf	214,w,c	;volatile
  8498   004CE6  0B1F               	andlw	-225
  8499   004CE8  0940               	iorlw	64
  8500   004CEA  6ED6               	movwf	214,c	;volatile
  8501   004CEC                     
  8502                           ;timers.c: 11:     T0CON1bits.T0ASYNC=1;
  8503   004CEC  88D6               	bsf	214,4,c	;volatile
  8504                           
  8505                           ;timers.c: 12:     T0CON1bits.T0CKPS=0b1110;
  8506   004CEE  50D6               	movf	214,w,c	;volatile
  8507   004CF0  0BF0               	andlw	-16
  8508   004CF2  090E               	iorlw	14
  8509   004CF4  6ED6               	movwf	214,c	;volatile
  8510   004CF6                     
  8511                           ;timers.c: 13:     T0CON0bits.T016BIT=1;
  8512   004CF6  88D5               	bsf	213,4,c	;volatile
  8513                           
  8514                           ;timers.c: 16:     TMR0H=0;
  8515   004CF8  0E00               	movlw	0
  8516   004CFA  6ED4               	movwf	212,c	;volatile
  8517                           
  8518                           ;timers.c: 17:     TMR0L=0;
  8519   004CFC  0E00               	movlw	0
  8520   004CFE  6ED3               	movwf	211,c	;volatile
  8521   004D00                     
  8522                           ;timers.c: 18:     T0CON0bits.T0EN=0;
  8523   004D00  9ED5               	bcf	213,7,c	;volatile
  8524   004D02  0012               	return		;funcret
  8525   004D04                     __end_of_Timer0_init:
  8526                           	callstack 0
  8527                           
  8528 ;; *************** function _Interrupts_init *****************
  8529 ;; Defined at:
  8530 ;;		line 9 in file "interrupts.c"
  8531 ;; Parameters:    Size  Location     Type
  8532 ;;		None
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;                  1    wreg      void 
  8537 ;; Registers used:
  8538 ;;		None
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8548 ;;Total ram usage:        0 bytes
  8549 ;; Hardware stack levels used: 1
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text48
  8558   004D6E                     __ptext48:
  8559                           	callstack 0
  8560   004D6E                     _Interrupts_init:
  8561                           	callstack 30
  8562   004D6E  0012               	return		;funcret
  8563   004D70                     __end_of_Interrupts_init:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _Colour_decider *****************
  8567 ;; Defined at:
  8568 ;;		line 125 in file "color.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  vals            2   74[COMRAM] PTR struct RGB
  8571 ;;		 -> vals(8), 
  8572 ;;  rel             2   76[COMRAM] PTR struct RGB_rel
  8573 ;;		 -> rel(12), 
  8574 ;; Auto vars:     Size  Location     Type
  8575 ;;  RGB_col        12    6[BANK0 ] float [3]
  8576 ;;  Hue             4   28[BANK0 ] float 
  8577 ;;  Cmin            4   22[BANK0 ] float 
  8578 ;;  Cmax            4   18[BANK0 ] float 
  8579 ;;  i               2   26[BANK0 ] int 
  8580 ;;  Cmax_i          2    4[BANK0 ] int 
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  2   74[COMRAM] int 
  8583 ;; Registers used:
  8584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Totals:         6      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;Total ram usage:       38 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 2
  8597 ;; This function calls:
  8598 ;;		___fladd
  8599 ;;		___fldiv
  8600 ;;		___fleq
  8601 ;;		___flge
  8602 ;;		___flmul
  8603 ;;		___flsub
  8604 ;;		___fltol
  8605 ;;		___xxtofl
  8606 ;; This function is called by:
  8607 ;;		_main
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text49
  8612   001854                     __ptext49:
  8613                           	callstack 0
  8614   001854                     _Colour_decider:
  8615                           	callstack 28
  8616   001854                     
  8617                           ;color.c: 126:     float Cmax = 0;
  8618   001854  0E00               	movlw	0
  8619   001856  0100               	movlb	0	; () banked
  8620   001858  6F72               	movwf	Colour_decider@Cmax& (0+255),b
  8621   00185A  0E00               	movlw	0
  8622   00185C  6F73               	movwf	(Colour_decider@Cmax+1)& (0+255),b
  8623   00185E  0E00               	movlw	0
  8624   001860  6F74               	movwf	(Colour_decider@Cmax+2)& (0+255),b
  8625   001862  0E00               	movlw	0
  8626   001864  6F75               	movwf	(Colour_decider@Cmax+3)& (0+255),b
  8627                           
  8628                           ;color.c: 127:     float Cmin= 100000;
  8629   001866  0E00               	movlw	0
  8630   001868  6F76               	movwf	Colour_decider@Cmin& (0+255),b
  8631   00186A  0E50               	movlw	80
  8632   00186C  6F77               	movwf	(Colour_decider@Cmin+1)& (0+255),b
  8633   00186E  0EC3               	movlw	195
  8634   001870  6F78               	movwf	(Colour_decider@Cmin+2)& (0+255),b
  8635   001872  0E47               	movlw	71
  8636   001874  6F79               	movwf	(Colour_decider@Cmin+3)& (0+255),b
  8637                           
  8638                           ;color.c: 128:     int Cmax_i =4;
  8639   001876  0E00               	movlw	0
  8640   001878  6F65               	movwf	(Colour_decider@Cmax_i+1)& (0+255),b
  8641   00187A  0E04               	movlw	4
  8642   00187C  6F64               	movwf	Colour_decider@Cmax_i& (0+255),b
  8643   00187E                     
  8644                           ; BSR set to: 0
  8645                           ;color.c: 130:     int i;;color.c: 131:     float RGB_col[3]={vals->R,vals->G,vals->B};
  8646   00187E  EE20  F066         	lfsr	2,Colour_decider@RGB_col
  8647   001882  0E0B               	movlw	11
  8648   001884                     u4751:
  8649   001884  6ADE               	clrf	postinc2,c
  8650   001886  06E8               	decf	wreg,f,c
  8651   001888  E2FD               	bc	u4751
  8652   00188A                     
  8653                           ; BSR set to: 0
  8654   00188A  C04B  FFD9         	movff	Colour_decider@vals,fsr2l
  8655   00188E  C04C  FFDA         	movff	Colour_decider@vals+1,fsr2h
  8656   001892  CFDE F001          	movff	postinc2,___xxtofl@val
  8657   001896  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8658   00189A  0E00               	movlw	0
  8659   00189C  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8660   00189E  0EFF               	movlw	-1
  8661   0018A0  6E03               	movwf	(___xxtofl@val+2)^0,c
  8662   0018A2  6E04               	movwf	(___xxtofl@val+3)^0,c
  8663   0018A4  0E01               	movlw	1
  8664   0018A6  EC9B  F01C         	call	___xxtofl
  8665   0018AA  C001  F066         	movff	?___xxtofl,Colour_decider@RGB_col
  8666   0018AE  C002  F067         	movff	?___xxtofl+1,Colour_decider@RGB_col+1
  8667   0018B2  C003  F068         	movff	?___xxtofl+2,Colour_decider@RGB_col+2
  8668   0018B6  C004  F069         	movff	?___xxtofl+3,Colour_decider@RGB_col+3
  8669   0018BA  EE20 F002          	lfsr	2,2
  8670   0018BE  504B               	movf	Colour_decider@vals^0,w,c
  8671   0018C0  26D9               	addwf	fsr2l,f,c
  8672   0018C2  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8673   0018C4  22DA               	addwfc	fsr2h,f,c
  8674   0018C6  CFDE F001          	movff	postinc2,___xxtofl@val
  8675   0018CA  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8676   0018CE  0E00               	movlw	0
  8677   0018D0  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8678   0018D2  0EFF               	movlw	-1
  8679   0018D4  6E03               	movwf	(___xxtofl@val+2)^0,c
  8680   0018D6  6E04               	movwf	(___xxtofl@val+3)^0,c
  8681   0018D8  0E01               	movlw	1
  8682   0018DA  EC9B  F01C         	call	___xxtofl
  8683   0018DE  C001  F06A         	movff	?___xxtofl,Colour_decider@RGB_col+4
  8684   0018E2  C002  F06B         	movff	?___xxtofl+1,Colour_decider@RGB_col+5
  8685   0018E6  C003  F06C         	movff	?___xxtofl+2,Colour_decider@RGB_col+6
  8686   0018EA  C004  F06D         	movff	?___xxtofl+3,Colour_decider@RGB_col+7
  8687   0018EE  EE20 F004          	lfsr	2,4
  8688   0018F2  504B               	movf	Colour_decider@vals^0,w,c
  8689   0018F4  26D9               	addwf	fsr2l,f,c
  8690   0018F6  504C               	movf	(Colour_decider@vals+1)^0,w,c
  8691   0018F8  22DA               	addwfc	fsr2h,f,c
  8692   0018FA  CFDE F001          	movff	postinc2,___xxtofl@val
  8693   0018FE  CFDD F002          	movff	postdec2,___xxtofl@val+1
  8694   001902  0E00               	movlw	0
  8695   001904  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  8696   001906  0EFF               	movlw	-1
  8697   001908  6E03               	movwf	(___xxtofl@val+2)^0,c
  8698   00190A  6E04               	movwf	(___xxtofl@val+3)^0,c
  8699   00190C  0E01               	movlw	1
  8700   00190E  EC9B  F01C         	call	___xxtofl
  8701   001912  C001  F06E         	movff	?___xxtofl,Colour_decider@RGB_col+8
  8702   001916  C002  F06F         	movff	?___xxtofl+1,Colour_decider@RGB_col+9
  8703   00191A  C003  F070         	movff	?___xxtofl+2,Colour_decider@RGB_col+10
  8704   00191E  C004  F071         	movff	?___xxtofl+3,Colour_decider@RGB_col+11
  8705   001922                     
  8706                           ;color.c: 132:     float Hue;;color.c: 135:     for (i=0; i<3 ;i++){
  8707   001922  0E00               	movlw	0
  8708   001924  0100               	movlb	0	; () banked
  8709   001926  6F7B               	movwf	(Colour_decider@i+1)& (0+255),b
  8710   001928  0E00               	movlw	0
  8711   00192A  6F7A               	movwf	Colour_decider@i& (0+255),b
  8712   00192C                     l5142:
  8713                           
  8714                           ; BSR set to: 0
  8715                           ;color.c: 136:         if (RGB_col[i]>Cmax){
  8716   00192C  C072  F02A         	movff	Colour_decider@Cmax,___flge@ff1
  8717   001930  C073  F02B         	movff	Colour_decider@Cmax+1,___flge@ff1+1
  8718   001934  C074  F02C         	movff	Colour_decider@Cmax+2,___flge@ff1+2
  8719   001938  C075  F02D         	movff	Colour_decider@Cmax+3,___flge@ff1+3
  8720   00193C  0E66               	movlw	low Colour_decider@RGB_col
  8721   00193E  6E4F               	movwf	??_Colour_decider^0,c
  8722   001940  0E00               	movlw	high Colour_decider@RGB_col
  8723   001942  6E50               	movwf	(??_Colour_decider+1)^0,c
  8724   001944  90D8               	bcf	status,0,c
  8725   001946  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8726   001948  6ED9               	movwf	fsr2l,c
  8727   00194A  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8728   00194C  6EDA               	movwf	fsr2h,c
  8729   00194E  90D8               	bcf	status,0,c
  8730   001950  36D9               	rlcf	fsr2l,f,c
  8731   001952  36DA               	rlcf	fsr2h,f,c
  8732   001954  504F               	movf	??_Colour_decider^0,w,c
  8733   001956  26D9               	addwf	fsr2l,f,c
  8734   001958  5050               	movf	(??_Colour_decider+1)^0,w,c
  8735   00195A  22DA               	addwfc	fsr2h,f,c
  8736   00195C  CFDE F02E          	movff	postinc2,___flge@ff2
  8737   001960  CFDE F02F          	movff	postinc2,___flge@ff2+1
  8738   001964  CFDE F030          	movff	postinc2,___flge@ff2+2
  8739   001968  CFDE F031          	movff	postinc2,___flge@ff2+3
  8740   00196C  EC24  F020         	call	___flge	;wreg free
  8741   001970  B0D8               	btfsc	status,0,c
  8742   001972  EFBD  F00C         	goto	u4761
  8743   001976  EFBF  F00C         	goto	u4760
  8744   00197A                     u4761:
  8745   00197A  EFDC  F00C         	goto	l5148
  8746   00197E                     u4760:
  8747   00197E                     
  8748                           ;color.c: 137:             Cmax=RGB_col[i];
  8749   00197E  0E66               	movlw	low Colour_decider@RGB_col
  8750   001980  6E4F               	movwf	??_Colour_decider^0,c
  8751   001982  0E00               	movlw	high Colour_decider@RGB_col
  8752   001984  6E50               	movwf	(??_Colour_decider+1)^0,c
  8753   001986  90D8               	bcf	status,0,c
  8754   001988  0100               	movlb	0	; () banked
  8755   00198A  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8756   00198C  6ED9               	movwf	fsr2l,c
  8757   00198E  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8758   001990  6EDA               	movwf	fsr2h,c
  8759   001992  90D8               	bcf	status,0,c
  8760   001994  36D9               	rlcf	fsr2l,f,c
  8761   001996  36DA               	rlcf	fsr2h,f,c
  8762   001998  504F               	movf	??_Colour_decider^0,w,c
  8763   00199A  26D9               	addwf	fsr2l,f,c
  8764   00199C  5050               	movf	(??_Colour_decider+1)^0,w,c
  8765   00199E  22DA               	addwfc	fsr2h,f,c
  8766   0019A0  CFDE F072          	movff	postinc2,Colour_decider@Cmax
  8767   0019A4  CFDE F073          	movff	postinc2,Colour_decider@Cmax+1
  8768   0019A8  CFDE F074          	movff	postinc2,Colour_decider@Cmax+2
  8769   0019AC  CFDE F075          	movff	postinc2,Colour_decider@Cmax+3
  8770   0019B0                     
  8771                           ; BSR set to: 0
  8772                           ;color.c: 138:             Cmax_i=i;
  8773   0019B0  C07A  F064         	movff	Colour_decider@i,Colour_decider@Cmax_i
  8774   0019B4  C07B  F065         	movff	Colour_decider@i+1,Colour_decider@Cmax_i+1
  8775   0019B8                     l5148:
  8776                           
  8777                           ;color.c: 140:         if (RGB_col[i]<Cmin){Cmin=RGB_col[i];}
  8778   0019B8  0E66               	movlw	low Colour_decider@RGB_col
  8779   0019BA  6E4F               	movwf	??_Colour_decider^0,c
  8780   0019BC  0E00               	movlw	high Colour_decider@RGB_col
  8781   0019BE  6E50               	movwf	(??_Colour_decider+1)^0,c
  8782   0019C0  90D8               	bcf	status,0,c
  8783   0019C2  0100               	movlb	0	; () banked
  8784   0019C4  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8785   0019C6  6ED9               	movwf	fsr2l,c
  8786   0019C8  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8787   0019CA  6EDA               	movwf	fsr2h,c
  8788   0019CC  90D8               	bcf	status,0,c
  8789   0019CE  36D9               	rlcf	fsr2l,f,c
  8790   0019D0  36DA               	rlcf	fsr2h,f,c
  8791   0019D2  504F               	movf	??_Colour_decider^0,w,c
  8792   0019D4  26D9               	addwf	fsr2l,f,c
  8793   0019D6  5050               	movf	(??_Colour_decider+1)^0,w,c
  8794   0019D8  22DA               	addwfc	fsr2h,f,c
  8795   0019DA  CFDE F02A          	movff	postinc2,___flge@ff1
  8796   0019DE  CFDE F02B          	movff	postinc2,___flge@ff1+1
  8797   0019E2  CFDE F02C          	movff	postinc2,___flge@ff1+2
  8798   0019E6  CFDE F02D          	movff	postinc2,___flge@ff1+3
  8799   0019EA  C076  F02E         	movff	Colour_decider@Cmin,___flge@ff2
  8800   0019EE  C077  F02F         	movff	Colour_decider@Cmin+1,___flge@ff2+1
  8801   0019F2  C078  F030         	movff	Colour_decider@Cmin+2,___flge@ff2+2
  8802   0019F6  C079  F031         	movff	Colour_decider@Cmin+3,___flge@ff2+3
  8803   0019FA  EC24  F020         	call	___flge	;wreg free
  8804   0019FE  B0D8               	btfsc	status,0,c
  8805   001A00  EF04  F00D         	goto	u4771
  8806   001A04  EF06  F00D         	goto	u4770
  8807   001A08                     u4771:
  8808   001A08  EF1F  F00D         	goto	l5152
  8809   001A0C                     u4770:
  8810   001A0C  0E66               	movlw	low Colour_decider@RGB_col
  8811   001A0E  6E4F               	movwf	??_Colour_decider^0,c
  8812   001A10  0E00               	movlw	high Colour_decider@RGB_col
  8813   001A12  6E50               	movwf	(??_Colour_decider+1)^0,c
  8814   001A14  90D8               	bcf	status,0,c
  8815   001A16  0100               	movlb	0	; () banked
  8816   001A18  357A               	rlcf	Colour_decider@i& (0+255),w,b
  8817   001A1A  6ED9               	movwf	fsr2l,c
  8818   001A1C  357B               	rlcf	(Colour_decider@i+1)& (0+255),w,b
  8819   001A1E  6EDA               	movwf	fsr2h,c
  8820   001A20  90D8               	bcf	status,0,c
  8821   001A22  36D9               	rlcf	fsr2l,f,c
  8822   001A24  36DA               	rlcf	fsr2h,f,c
  8823   001A26  504F               	movf	??_Colour_decider^0,w,c
  8824   001A28  26D9               	addwf	fsr2l,f,c
  8825   001A2A  5050               	movf	(??_Colour_decider+1)^0,w,c
  8826   001A2C  22DA               	addwfc	fsr2h,f,c
  8827   001A2E  CFDE F076          	movff	postinc2,Colour_decider@Cmin
  8828   001A32  CFDE F077          	movff	postinc2,Colour_decider@Cmin+1
  8829   001A36  CFDE F078          	movff	postinc2,Colour_decider@Cmin+2
  8830   001A3A  CFDE F079          	movff	postinc2,Colour_decider@Cmin+3
  8831   001A3E                     l5152:
  8832                           
  8833                           ;color.c: 141:     }
  8834   001A3E  0100               	movlb	0	; () banked
  8835   001A40  4B7A               	infsnz	Colour_decider@i& (0+255),f,b
  8836   001A42  2B7B               	incf	(Colour_decider@i+1)& (0+255),f,b
  8837   001A44                     
  8838                           ; BSR set to: 0
  8839   001A44  BF7B               	btfsc	(Colour_decider@i+1)& (0+255),7,b
  8840   001A46  EF2E  F00D         	goto	u4781
  8841   001A4A  517B               	movf	(Colour_decider@i+1)& (0+255),w,b
  8842   001A4C  E109               	bnz	u4780
  8843   001A4E  0E03               	movlw	3
  8844   001A50  5D7A               	subwf	Colour_decider@i& (0+255),w,b
  8845   001A52  A0D8               	btfss	status,0,c
  8846   001A54  EF2E  F00D         	goto	u4781
  8847   001A58  EF30  F00D         	goto	u4780
  8848   001A5C                     u4781:
  8849   001A5C  EF96  F00C         	goto	l5142
  8850   001A60                     u4780:
  8851   001A60                     
  8852                           ; BSR set to: 0
  8853                           ;color.c: 143:     if (Cmax-Cmin==0){return 0;}
  8854   001A60  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8855   001A64  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8856   001A68  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8857   001A6C  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8858   001A70  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8859   001A74  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8860   001A78  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8861   001A7C  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8862   001A80  EC1C  F025         	call	___flsub	;wreg free
  8863   001A84  C02A  F032         	movff	?___flsub,___fleq@ff1
  8864   001A88  C02B  F033         	movff	?___flsub+1,___fleq@ff1+1
  8865   001A8C  C02C  F034         	movff	?___flsub+2,___fleq@ff1+2
  8866   001A90  C02D  F035         	movff	?___flsub+3,___fleq@ff1+3
  8867   001A94  0E00               	movlw	0
  8868   001A96  6E36               	movwf	___fleq@ff2^0,c
  8869   001A98  0E00               	movlw	0
  8870   001A9A  6E37               	movwf	(___fleq@ff2+1)^0,c
  8871   001A9C  0E00               	movlw	0
  8872   001A9E  6E38               	movwf	(___fleq@ff2+2)^0,c
  8873   001AA0  0E00               	movlw	0
  8874   001AA2  6E39               	movwf	(___fleq@ff2+3)^0,c
  8875   001AA4  EC8A  F021         	call	___fleq	;wreg free
  8876   001AA8  A0D8               	btfss	status,0,c
  8877   001AAA  EF59  F00D         	goto	u4791
  8878   001AAE  EF5B  F00D         	goto	u4790
  8879   001AB2                     u4791:
  8880   001AB2  EF61  F00D         	goto	l5162
  8881   001AB6                     u4790:
  8882   001AB6  0E00               	movlw	0
  8883   001AB8  6E4C               	movwf	(?_Colour_decider+1)^0,c
  8884   001ABA  0E00               	movlw	0
  8885   001ABC  6E4B               	movwf	?_Colour_decider^0,c
  8886   001ABE  EFCC  F00E         	goto	l76
  8887   001AC2                     l5162:
  8888                           
  8889                           ;color.c: 146:     if (Cmax_i==0){
  8890   001AC2  0100               	movlb	0	; () banked
  8891   001AC4  5164               	movf	Colour_decider@Cmax_i& (0+255),w,b
  8892   001AC6  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8893   001AC8  A4D8               	btfss	status,2,c
  8894   001ACA  EF69  F00D         	goto	u4801
  8895   001ACE  EF6B  F00D         	goto	u4800
  8896   001AD2                     u4801:
  8897   001AD2  EFDF  F00D         	goto	l5170
  8898   001AD6                     u4800:
  8899   001AD6                     
  8900                           ; BSR set to: 0
  8901                           ;color.c: 147:         Hue = 60 * ((RGB_col[1]-RGB_col[2])/(Cmax-Cmin));
  8902   001AD6  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8903   001ADA  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8904   001ADE  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8905   001AE2  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8906   001AE6  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8907   001AEA  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8908   001AEE  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8909   001AF2  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8910   001AF6  EC1C  F025         	call	___flsub	;wreg free
  8911   001AFA  C02A  F036         	movff	?___flsub,___fldiv@a
  8912   001AFE  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  8913   001B02  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  8914   001B06  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  8915   001B0A  C06E  F02E         	movff	Colour_decider@RGB_col+8,___flsub@a
  8916   001B0E  C06F  F02F         	movff	Colour_decider@RGB_col+9,___flsub@a+1
  8917   001B12  C070  F030         	movff	Colour_decider@RGB_col+10,___flsub@a+2
  8918   001B16  C071  F031         	movff	Colour_decider@RGB_col+11,___flsub@a+3
  8919   001B1A  C06A  F02A         	movff	Colour_decider@RGB_col+4,___flsub@b
  8920   001B1E  C06B  F02B         	movff	Colour_decider@RGB_col+5,___flsub@b+1
  8921   001B22  C06C  F02C         	movff	Colour_decider@RGB_col+6,___flsub@b+2
  8922   001B26  C06D  F02D         	movff	Colour_decider@RGB_col+7,___flsub@b+3
  8923   001B2A  EC1C  F025         	call	___flsub	;wreg free
  8924   001B2E  C02A  F032         	movff	?___flsub,___fldiv@b
  8925   001B32  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  8926   001B36  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  8927   001B3A  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  8928   001B3E  EC42  F013         	call	___fldiv	;wreg free
  8929   001B42  C032  F011         	movff	?___fldiv,___flmul@b
  8930   001B46  C033  F012         	movff	?___fldiv+1,___flmul@b+1
  8931   001B4A  C034  F013         	movff	?___fldiv+2,___flmul@b+2
  8932   001B4E  C035  F014         	movff	?___fldiv+3,___flmul@b+3
  8933   001B52  0E00               	movlw	0
  8934   001B54  6E15               	movwf	___flmul@a^0,c
  8935   001B56  0E00               	movlw	0
  8936   001B58  6E16               	movwf	(___flmul@a+1)^0,c
  8937   001B5A  0E70               	movlw	112
  8938   001B5C  6E17               	movwf	(___flmul@a+2)^0,c
  8939   001B5E  0E42               	movlw	66
  8940   001B60  6E18               	movwf	(___flmul@a+3)^0,c
  8941   001B62  EC2D  F011         	call	___flmul	;wreg free
  8942   001B66  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  8943   001B6A  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  8944   001B6E  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  8945   001B72  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  8946   001B76                     
  8947                           ;color.c: 149:         if (Hue < 0) {Hue += 360;}
  8948   001B76  0100               	movlb	0	; () banked
  8949   001B78  BF7F               	btfsc	(Colour_decider@Hue+3)& (0+255),7,b
  8950   001B7A  EFC3  F00D         	goto	u4810
  8951   001B7E  EFC1  F00D         	goto	u4811
  8952   001B82                     u4811:
  8953   001B82  EFBE  F00E         	goto	l5180
  8954   001B86                     u4810:
  8955   001B86                     
  8956                           ; BSR set to: 0
  8957   001B86  C07C  F001         	movff	Colour_decider@Hue,___fladd@b
  8958   001B8A  C07D  F002         	movff	Colour_decider@Hue+1,___fladd@b+1
  8959   001B8E  C07E  F003         	movff	Colour_decider@Hue+2,___fladd@b+2
  8960   001B92  C07F  F004         	movff	Colour_decider@Hue+3,___fladd@b+3
  8961   001B96  0E00               	movlw	0
  8962   001B98  6E05               	movwf	___fladd@a^0,c
  8963   001B9A  0E00               	movlw	0
  8964   001B9C  6E06               	movwf	(___fladd@a+1)^0,c
  8965   001B9E  0EB4               	movlw	180
  8966   001BA0  6E07               	movwf	(___fladd@a+2)^0,c
  8967   001BA2  0E43               	movlw	67
  8968   001BA4  6E08               	movwf	(___fladd@a+3)^0,c
  8969   001BA6  ECCD  F00E         	call	___fladd	;wreg free
  8970   001BAA  C001  F07C         	movff	?___fladd,Colour_decider@Hue
  8971   001BAE  C002  F07D         	movff	?___fladd+1,Colour_decider@Hue+1
  8972   001BB2  C003  F07E         	movff	?___fladd+2,Colour_decider@Hue+2
  8973   001BB6  C004  F07F         	movff	?___fladd+3,Colour_decider@Hue+3
  8974   001BBA  EFBE  F00E         	goto	l5180
  8975   001BBE                     l5170:
  8976                           
  8977                           ; BSR set to: 0
  8978   001BBE  0564               	decf	Colour_decider@Cmax_i& (0+255),w,b
  8979   001BC0  1165               	iorwf	(Colour_decider@Cmax_i+1)& (0+255),w,b
  8980   001BC2  A4D8               	btfss	status,2,c
  8981   001BC4  EFE6  F00D         	goto	u4821
  8982   001BC8  EFE8  F00D         	goto	u4820
  8983   001BCC                     u4821:
  8984   001BCC  EF54  F00E         	goto	l5176
  8985   001BD0                     u4820:
  8986   001BD0                     
  8987                           ; BSR set to: 0
  8988                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  8989   001BD0  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  8990   001BD4  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  8991   001BD8  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  8992   001BDC  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  8993   001BE0  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  8994   001BE4  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  8995   001BE8  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  8996   001BEC  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  8997   001BF0  EC1C  F025         	call	___flsub	;wreg free
  8998   001BF4  C02A  F036         	movff	?___flsub,___fldiv@a
  8999   001BF8  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9000   001BFC  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9001   001C00  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9002   001C04  C066  F02E         	movff	Colour_decider@RGB_col,___flsub@a
  9003   001C08  C067  F02F         	movff	Colour_decider@RGB_col+1,___flsub@a+1
  9004   001C0C  C068  F030         	movff	Colour_decider@RGB_col+2,___flsub@a+2
  9005   001C10  C069  F031         	movff	Colour_decider@RGB_col+3,___flsub@a+3
  9006   001C14  C06E  F02A         	movff	Colour_decider@RGB_col+8,___flsub@b
  9007   001C18  C06F  F02B         	movff	Colour_decider@RGB_col+9,___flsub@b+1
  9008   001C1C  C070  F02C         	movff	Colour_decider@RGB_col+10,___flsub@b+2
  9009   001C20  C071  F02D         	movff	Colour_decider@RGB_col+11,___flsub@b+3
  9010   001C24  EC1C  F025         	call	___flsub	;wreg free
  9011   001C28  C02A  F032         	movff	?___flsub,___fldiv@b
  9012   001C2C  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9013   001C30  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9014   001C34  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9015   001C38  EC42  F013         	call	___fldiv	;wreg free
  9016   001C3C  C032  F060         	movff	?___fldiv,_Colour_decider$3126
  9017   001C40  C033  F061         	movff	?___fldiv+1,_Colour_decider$3126+1
  9018   001C44  C034  F062         	movff	?___fldiv+2,_Colour_decider$3126+2
  9019   001C48  C035  F063         	movff	?___fldiv+3,_Colour_decider$3126+3
  9020   001C4C                     
  9021                           ;color.c: 153:         Hue=60*(2+(RGB_col[2]-RGB_col[0])/(Cmax-Cmin));
  9022   001C4C  0E00               	movlw	0
  9023   001C4E  6E05               	movwf	___fladd@a^0,c
  9024   001C50  0E00               	movlw	0
  9025   001C52  6E06               	movwf	(___fladd@a+1)^0,c
  9026   001C54  0E00               	movlw	0
  9027   001C56  6E07               	movwf	(___fladd@a+2)^0,c
  9028   001C58  0E40               	movlw	64
  9029   001C5A  6E08               	movwf	(___fladd@a+3)^0,c
  9030   001C5C  C060  F001         	movff	_Colour_decider$3126,___fladd@b
  9031   001C60  C061  F002         	movff	_Colour_decider$3126+1,___fladd@b+1
  9032   001C64  C062  F003         	movff	_Colour_decider$3126+2,___fladd@b+2
  9033   001C68  C063  F004         	movff	_Colour_decider$3126+3,___fladd@b+3
  9034   001C6C  ECCD  F00E         	call	___fladd	;wreg free
  9035   001C70  C001  F011         	movff	?___fladd,___flmul@b
  9036   001C74  C002  F012         	movff	?___fladd+1,___flmul@b+1
  9037   001C78  C003  F013         	movff	?___fladd+2,___flmul@b+2
  9038   001C7C  C004  F014         	movff	?___fladd+3,___flmul@b+3
  9039   001C80  0E00               	movlw	0
  9040   001C82  6E15               	movwf	___flmul@a^0,c
  9041   001C84  0E00               	movlw	0
  9042   001C86  6E16               	movwf	(___flmul@a+1)^0,c
  9043   001C88  0E70               	movlw	112
  9044   001C8A  6E17               	movwf	(___flmul@a+2)^0,c
  9045   001C8C  0E42               	movlw	66
  9046   001C8E  6E18               	movwf	(___flmul@a+3)^0,c
  9047   001C90  EC2D  F011         	call	___flmul	;wreg free
  9048   001C94  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9049   001C98  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9050   001C9C  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9051   001CA0  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9052                           
  9053                           ;color.c: 155:     }
  9054   001CA4  EFBE  F00E         	goto	l5180
  9055   001CA8                     l5176:
  9056                           
  9057                           ; BSR set to: 0
  9058                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9059   001CA8  C076  F02E         	movff	Colour_decider@Cmin,___flsub@a
  9060   001CAC  C077  F02F         	movff	Colour_decider@Cmin+1,___flsub@a+1
  9061   001CB0  C078  F030         	movff	Colour_decider@Cmin+2,___flsub@a+2
  9062   001CB4  C079  F031         	movff	Colour_decider@Cmin+3,___flsub@a+3
  9063   001CB8  C072  F02A         	movff	Colour_decider@Cmax,___flsub@b
  9064   001CBC  C073  F02B         	movff	Colour_decider@Cmax+1,___flsub@b+1
  9065   001CC0  C074  F02C         	movff	Colour_decider@Cmax+2,___flsub@b+2
  9066   001CC4  C075  F02D         	movff	Colour_decider@Cmax+3,___flsub@b+3
  9067   001CC8  EC1C  F025         	call	___flsub	;wreg free
  9068   001CCC  C02A  F036         	movff	?___flsub,___fldiv@a
  9069   001CD0  C02B  F037         	movff	?___flsub+1,___fldiv@a+1
  9070   001CD4  C02C  F038         	movff	?___flsub+2,___fldiv@a+2
  9071   001CD8  C02D  F039         	movff	?___flsub+3,___fldiv@a+3
  9072   001CDC  C06A  F02E         	movff	Colour_decider@RGB_col+4,___flsub@a
  9073   001CE0  C06B  F02F         	movff	Colour_decider@RGB_col+5,___flsub@a+1
  9074   001CE4  C06C  F030         	movff	Colour_decider@RGB_col+6,___flsub@a+2
  9075   001CE8  C06D  F031         	movff	Colour_decider@RGB_col+7,___flsub@a+3
  9076   001CEC  C066  F02A         	movff	Colour_decider@RGB_col,___flsub@b
  9077   001CF0  C067  F02B         	movff	Colour_decider@RGB_col+1,___flsub@b+1
  9078   001CF4  C068  F02C         	movff	Colour_decider@RGB_col+2,___flsub@b+2
  9079   001CF8  C069  F02D         	movff	Colour_decider@RGB_col+3,___flsub@b+3
  9080   001CFC  EC1C  F025         	call	___flsub	;wreg free
  9081   001D00  C02A  F032         	movff	?___flsub,___fldiv@b
  9082   001D04  C02B  F033         	movff	?___flsub+1,___fldiv@b+1
  9083   001D08  C02C  F034         	movff	?___flsub+2,___fldiv@b+2
  9084   001D0C  C02D  F035         	movff	?___flsub+3,___fldiv@b+3
  9085   001D10  EC42  F013         	call	___fldiv	;wreg free
  9086   001D14  C032  F060         	movff	?___fldiv,_Colour_decider$3126
  9087   001D18  C033  F061         	movff	?___fldiv+1,_Colour_decider$3126+1
  9088   001D1C  C034  F062         	movff	?___fldiv+2,_Colour_decider$3126+2
  9089   001D20  C035  F063         	movff	?___fldiv+3,_Colour_decider$3126+3
  9090   001D24                     
  9091                           ;color.c: 158:         Hue=(4+(RGB_col[0]-RGB_col[1])/(Cmax-Cmin))*60;
  9092   001D24  0E00               	movlw	0
  9093   001D26  6E05               	movwf	___fladd@a^0,c
  9094   001D28  0E00               	movlw	0
  9095   001D2A  6E06               	movwf	(___fladd@a+1)^0,c
  9096   001D2C  0E80               	movlw	128
  9097   001D2E  6E07               	movwf	(___fladd@a+2)^0,c
  9098   001D30  0E40               	movlw	64
  9099   001D32  6E08               	movwf	(___fladd@a+3)^0,c
  9100   001D34  C060  F001         	movff	_Colour_decider$3126,___fladd@b
  9101   001D38  C061  F002         	movff	_Colour_decider$3126+1,___fladd@b+1
  9102   001D3C  C062  F003         	movff	_Colour_decider$3126+2,___fladd@b+2
  9103   001D40  C063  F004         	movff	_Colour_decider$3126+3,___fladd@b+3
  9104   001D44  ECCD  F00E         	call	___fladd	;wreg free
  9105   001D48  C001  F011         	movff	?___fladd,___flmul@b
  9106   001D4C  C002  F012         	movff	?___fladd+1,___flmul@b+1
  9107   001D50  C003  F013         	movff	?___fladd+2,___flmul@b+2
  9108   001D54  C004  F014         	movff	?___fladd+3,___flmul@b+3
  9109   001D58  0E00               	movlw	0
  9110   001D5A  6E15               	movwf	___flmul@a^0,c
  9111   001D5C  0E00               	movlw	0
  9112   001D5E  6E16               	movwf	(___flmul@a+1)^0,c
  9113   001D60  0E70               	movlw	112
  9114   001D62  6E17               	movwf	(___flmul@a+2)^0,c
  9115   001D64  0E42               	movlw	66
  9116   001D66  6E18               	movwf	(___flmul@a+3)^0,c
  9117   001D68  EC2D  F011         	call	___flmul	;wreg free
  9118   001D6C  C011  F07C         	movff	?___flmul,Colour_decider@Hue
  9119   001D70  C012  F07D         	movff	?___flmul+1,Colour_decider@Hue+1
  9120   001D74  C013  F07E         	movff	?___flmul+2,Colour_decider@Hue+2
  9121   001D78  C014  F07F         	movff	?___flmul+3,Colour_decider@Hue+3
  9122   001D7C                     l5180:
  9123                           
  9124                           ;color.c: 161:     return Hue;
  9125   001D7C  C07C  F001         	movff	Colour_decider@Hue,___fltol@f1
  9126   001D80  C07D  F002         	movff	Colour_decider@Hue+1,___fltol@f1+1
  9127   001D84  C07E  F003         	movff	Colour_decider@Hue+2,___fltol@f1+2
  9128   001D88  C07F  F004         	movff	Colour_decider@Hue+3,___fltol@f1+3
  9129   001D8C  ECA1  F01F         	call	___fltol	;wreg free
  9130   001D90  C001  F04B         	movff	?___fltol,?_Colour_decider
  9131   001D94  C002  F04C         	movff	?___fltol+1,?_Colour_decider+1
  9132   001D98                     l76:
  9133   001D98  0012               	return		;funcret
  9134   001D9A                     __end_of_Colour_decider:
  9135                           	callstack 0
  9136                           
  9137 ;; *************** function ___xxtofl *****************
  9138 ;; Defined at:
  9139 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  sign            1    wreg     unsigned char 
  9142 ;;  val             4    0[COMRAM] long 
  9143 ;; Auto vars:     Size  Location     Type
  9144 ;;  sign            1    8[COMRAM] unsigned char 
  9145 ;;  arg             4   10[COMRAM] unsigned long 
  9146 ;;  exp             1    9[COMRAM] unsigned char 
  9147 ;; Return value:  Size  Location     Type
  9148 ;;                  4    0[COMRAM] unsigned char 
  9149 ;; Registers used:
  9150 ;;		wreg, status,2, status,0
  9151 ;; Tracked objects:
  9152 ;;		On entry : 0/0
  9153 ;;		On exit  : 0/0
  9154 ;;		Unchanged: 0/0
  9155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9156 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9158 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9159 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;Total ram usage:       14 bytes
  9161 ;; Hardware stack levels used: 1
  9162 ;; This function calls:
  9163 ;;		Nothing
  9164 ;; This function is called by:
  9165 ;;		_colour_rel
  9166 ;;		_Colour_decider
  9167 ;;		_reverseOneBlock
  9168 ;;		_ForwardOneBlock
  9169 ;;		_Forwardhalfblock
  9170 ;;		_Backhalfblock
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           	psect	text50
  9175   003936                     __ptext50:
  9176                           	callstack 0
  9177   003936                     ___xxtofl:
  9178                           	callstack 29
  9179                           
  9180                           ;incstack = 0
  9181                           ;___xxtofl@sign stored from wreg
  9182   003936  6E09               	movwf	___xxtofl@sign^0,c
  9183   003938  5009               	movf	___xxtofl@sign^0,w,c
  9184   00393A  B4D8               	btfsc	status,2,c
  9185   00393C  EFA2  F01C         	goto	u4641
  9186   003940  EFA4  F01C         	goto	u4640
  9187   003944                     u4641:
  9188   003944  EFC6  F01C         	goto	l1310
  9189   003948                     u4640:
  9190   003948  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9191   00394A  EFAB  F01C         	goto	u4650
  9192   00394E  EFA9  F01C         	goto	u4651
  9193   003952                     u4651:
  9194   003952  EFC6  F01C         	goto	l1310
  9195   003956                     u4650:
  9196   003956  C001  F005         	movff	___xxtofl@val,??___xxtofl
  9197   00395A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  9198   00395E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  9199   003962  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  9200   003966  1E05               	comf	??___xxtofl^0,f,c
  9201   003968  1E06               	comf	(??___xxtofl+1)^0,f,c
  9202   00396A  1E07               	comf	(??___xxtofl+2)^0,f,c
  9203   00396C  1E08               	comf	(??___xxtofl+3)^0,f,c
  9204   00396E  2A05               	incf	??___xxtofl^0,f,c
  9205   003970  0E00               	movlw	0
  9206   003972  2206               	addwfc	(??___xxtofl+1)^0,f,c
  9207   003974  2207               	addwfc	(??___xxtofl+2)^0,f,c
  9208   003976  2208               	addwfc	(??___xxtofl+3)^0,f,c
  9209   003978  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  9210   00397C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  9211   003980  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  9212   003984  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  9213   003988  EFCE  F01C         	goto	l5028
  9214   00398C                     l1310:
  9215   00398C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  9216   003990  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9217   003994  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9218   003998  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9219   00399C                     l5028:
  9220   00399C  5001               	movf	___xxtofl@val^0,w,c
  9221   00399E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  9222   0039A0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  9223   0039A2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  9224   0039A4  A4D8               	btfss	status,2,c
  9225   0039A6  EFD7  F01C         	goto	u4661
  9226   0039AA  EFD9  F01C         	goto	u4660
  9227   0039AE                     u4661:
  9228   0039AE  EFE3  F01C         	goto	l5034
  9229   0039B2                     u4660:
  9230   0039B2  0E00               	movlw	0
  9231   0039B4  6E01               	movwf	?___xxtofl^0,c
  9232   0039B6  0E00               	movlw	0
  9233   0039B8  6E02               	movwf	(?___xxtofl+1)^0,c
  9234   0039BA  0E00               	movlw	0
  9235   0039BC  6E03               	movwf	(?___xxtofl+2)^0,c
  9236   0039BE  0E00               	movlw	0
  9237   0039C0  6E04               	movwf	(?___xxtofl+3)^0,c
  9238   0039C2  EF74  F01D         	goto	l1313
  9239   0039C6                     l5034:
  9240   0039C6  0E96               	movlw	150
  9241   0039C8  6E0A               	movwf	___xxtofl@exp^0,c
  9242   0039CA  EFED  F01C         	goto	l5038
  9243   0039CE                     l5036:
  9244   0039CE  2A0A               	incf	___xxtofl@exp^0,f,c
  9245   0039D0  90D8               	bcf	status,0,c
  9246   0039D2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9247   0039D4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9248   0039D6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9249   0039D8  320B               	rrcf	___xxtofl@arg^0,f,c
  9250   0039DA                     l5038:
  9251   0039DA  0E00               	movlw	0
  9252   0039DC  140B               	andwf	___xxtofl@arg^0,w,c
  9253   0039DE  6E05               	movwf	??___xxtofl^0,c
  9254   0039E0  0E00               	movlw	0
  9255   0039E2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9256   0039E4  6E06               	movwf	(??___xxtofl+1)^0,c
  9257   0039E6  0E00               	movlw	0
  9258   0039E8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9259   0039EA  6E07               	movwf	(??___xxtofl+2)^0,c
  9260   0039EC  0EFE               	movlw	254
  9261   0039EE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9262   0039F0  6E08               	movwf	(??___xxtofl+3)^0,c
  9263   0039F2  5005               	movf	??___xxtofl^0,w,c
  9264   0039F4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9265   0039F6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9266   0039F8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9267   0039FA  A4D8               	btfss	status,2,c
  9268   0039FC  EF02  F01D         	goto	u4671
  9269   003A00  EF04  F01D         	goto	u4670
  9270   003A04                     u4671:
  9271   003A04  EFE7  F01C         	goto	l5036
  9272   003A08                     u4670:
  9273   003A08  EF12  F01D         	goto	l1317
  9274   003A0C                     l5040:
  9275   003A0C  2A0A               	incf	___xxtofl@exp^0,f,c
  9276   003A0E  0E01               	movlw	1
  9277   003A10  260B               	addwf	___xxtofl@arg^0,f,c
  9278   003A12  0E00               	movlw	0
  9279   003A14  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  9280   003A16  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  9281   003A18  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  9282   003A1A  90D8               	bcf	status,0,c
  9283   003A1C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  9284   003A1E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  9285   003A20  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  9286   003A22  320B               	rrcf	___xxtofl@arg^0,f,c
  9287   003A24                     l1317:
  9288   003A24  0E00               	movlw	0
  9289   003A26  140B               	andwf	___xxtofl@arg^0,w,c
  9290   003A28  6E05               	movwf	??___xxtofl^0,c
  9291   003A2A  0E00               	movlw	0
  9292   003A2C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  9293   003A2E  6E06               	movwf	(??___xxtofl+1)^0,c
  9294   003A30  0E00               	movlw	0
  9295   003A32  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  9296   003A34  6E07               	movwf	(??___xxtofl+2)^0,c
  9297   003A36  0EFF               	movlw	255
  9298   003A38  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  9299   003A3A  6E08               	movwf	(??___xxtofl+3)^0,c
  9300   003A3C  5005               	movf	??___xxtofl^0,w,c
  9301   003A3E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  9302   003A40  1007               	iorwf	(??___xxtofl+2)^0,w,c
  9303   003A42  1008               	iorwf	(??___xxtofl+3)^0,w,c
  9304   003A44  A4D8               	btfss	status,2,c
  9305   003A46  EF27  F01D         	goto	u4681
  9306   003A4A  EF29  F01D         	goto	u4680
  9307   003A4E                     u4681:
  9308   003A4E  EF06  F01D         	goto	l5040
  9309   003A52                     u4680:
  9310   003A52  EF31  F01D         	goto	l5048
  9311   003A56                     l5046:
  9312   003A56  060A               	decf	___xxtofl@exp^0,f,c
  9313   003A58  90D8               	bcf	status,0,c
  9314   003A5A  360B               	rlcf	___xxtofl@arg^0,f,c
  9315   003A5C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  9316   003A5E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  9317   003A60  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  9318   003A62                     l5048:
  9319   003A62  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  9320   003A64  EF36  F01D         	goto	u4691
  9321   003A68  EF38  F01D         	goto	u4690
  9322   003A6C                     u4691:
  9323   003A6C  EF40  F01D         	goto	l1324
  9324   003A70                     u4690:
  9325   003A70  0E02               	movlw	2
  9326   003A72  600A               	cpfslt	___xxtofl@exp^0,c
  9327   003A74  EF3E  F01D         	goto	u4701
  9328   003A78  EF40  F01D         	goto	u4700
  9329   003A7C                     u4701:
  9330   003A7C  EF2B  F01D         	goto	l5046
  9331   003A80                     u4700:
  9332   003A80                     l1324:
  9333   003A80  B00A               	btfsc	___xxtofl@exp^0,0,c
  9334   003A82  EF45  F01D         	goto	u4711
  9335   003A86  EF47  F01D         	goto	u4710
  9336   003A8A                     u4711:
  9337   003A8A  EF48  F01D         	goto	l5054
  9338   003A8E                     u4710:
  9339   003A8E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  9340   003A90                     l5054:
  9341   003A90  90D8               	bcf	status,0,c
  9342   003A92  320A               	rrcf	___xxtofl@exp^0,f,c
  9343   003A94  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  9344   003A98  6A06               	clrf	(??___xxtofl+1)^0,c
  9345   003A9A  6A07               	clrf	(??___xxtofl+2)^0,c
  9346   003A9C  6A08               	clrf	(??___xxtofl+3)^0,c
  9347   003A9E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  9348   003AA2  6A07               	clrf	(??___xxtofl+2)^0,c
  9349   003AA4  6A06               	clrf	(??___xxtofl+1)^0,c
  9350   003AA6  6A05               	clrf	??___xxtofl^0,c
  9351   003AA8  5005               	movf	??___xxtofl^0,w,c
  9352   003AAA  120B               	iorwf	___xxtofl@arg^0,f,c
  9353   003AAC  5006               	movf	(??___xxtofl+1)^0,w,c
  9354   003AAE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  9355   003AB0  5007               	movf	(??___xxtofl+2)^0,w,c
  9356   003AB2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  9357   003AB4  5008               	movf	(??___xxtofl+3)^0,w,c
  9358   003AB6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  9359   003AB8  5009               	movf	___xxtofl@sign^0,w,c
  9360   003ABA  B4D8               	btfsc	status,2,c
  9361   003ABC  EF62  F01D         	goto	u4721
  9362   003AC0  EF64  F01D         	goto	u4720
  9363   003AC4                     u4721:
  9364   003AC4  EF6C  F01D         	goto	l5064
  9365   003AC8                     u4720:
  9366   003AC8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  9367   003ACA  EF6B  F01D         	goto	u4730
  9368   003ACE  EF69  F01D         	goto	u4731
  9369   003AD2                     u4731:
  9370   003AD2  EF6C  F01D         	goto	l5064
  9371   003AD6                     u4730:
  9372   003AD6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  9373   003AD8                     l5064:
  9374   003AD8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  9375   003ADC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  9376   003AE0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  9377   003AE4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  9378   003AE8                     l1313:
  9379   003AE8  0012               	return		;funcret
  9380   003AEA                     __end_of___xxtofl:
  9381                           	callstack 0
  9382                           
  9383 ;; *************** function ___fltol *****************
  9384 ;; Defined at:
  9385 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  f1              4    0[COMRAM] unsigned char 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  exp1            1    9[COMRAM] unsigned char 
  9390 ;;  sign1           1    8[COMRAM] unsigned char 
  9391 ;; Return value:  Size  Location     Type
  9392 ;;                  4    0[COMRAM] long 
  9393 ;; Registers used:
  9394 ;;		wreg, status,2, status,0
  9395 ;; Tracked objects:
  9396 ;;		On entry : 0/0
  9397 ;;		On exit  : 0/0
  9398 ;;		Unchanged: 0/0
  9399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9403 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9404 ;;Total ram usage:       10 bytes
  9405 ;; Hardware stack levels used: 1
  9406 ;; This function calls:
  9407 ;;		Nothing
  9408 ;; This function is called by:
  9409 ;;		_Colour_decider
  9410 ;;		_efgtoa
  9411 ;;		_reverseOneBlock
  9412 ;;		_ForwardOneBlock
  9413 ;;		_Forwardhalfblock
  9414 ;;		_Backhalfblock
  9415 ;; This function uses a non-reentrant model
  9416 ;;
  9417                           
  9418                           	psect	text51
  9419   003F42                     __ptext51:
  9420                           	callstack 0
  9421   003F42                     ___fltol:
  9422                           	callstack 26
  9423   003F42  3403               	rlcf	(___fltol@f1+2)^0,w,c
  9424   003F44  3404               	rlcf	(___fltol@f1+3)^0,w,c
  9425   003F46  6E0A               	movwf	___fltol@exp1^0,c
  9426   003F48  500A               	movf	___fltol@exp1^0,w,c
  9427   003F4A  A4D8               	btfss	status,2,c
  9428   003F4C  EFAA  F01F         	goto	u3671
  9429   003F50  EFAC  F01F         	goto	u3670
  9430   003F54                     u3671:
  9431   003F54  EFB6  F01F         	goto	l4322
  9432   003F58                     u3670:
  9433   003F58                     l4318:
  9434   003F58  0E00               	movlw	0
  9435   003F5A  6E01               	movwf	?___fltol^0,c
  9436   003F5C  0E00               	movlw	0
  9437   003F5E  6E02               	movwf	(?___fltol+1)^0,c
  9438   003F60  0E00               	movlw	0
  9439   003F62  6E03               	movwf	(?___fltol+2)^0,c
  9440   003F64  0E00               	movlw	0
  9441   003F66  6E04               	movwf	(?___fltol+3)^0,c
  9442   003F68  EF23  F020         	goto	l952
  9443   003F6C                     l4322:
  9444   003F6C  C001  F005         	movff	___fltol@f1,??___fltol
  9445   003F70  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  9446   003F74  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  9447   003F78  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  9448   003F7C  0E20               	movlw	32
  9449   003F7E  EFC6  F01F         	goto	u3680
  9450   003F82                     u3685:
  9451   003F82  90D8               	bcf	status,0,c
  9452   003F84  3208               	rrcf	(??___fltol+3)^0,f,c
  9453   003F86  3207               	rrcf	(??___fltol+2)^0,f,c
  9454   003F88  3206               	rrcf	(??___fltol+1)^0,f,c
  9455   003F8A  3205               	rrcf	??___fltol^0,f,c
  9456   003F8C                     u3680:
  9457   003F8C  2EE8               	decfsz	wreg,f,c
  9458   003F8E  EFC1  F01F         	goto	u3685
  9459   003F92  5005               	movf	??___fltol^0,w,c
  9460   003F94  6E09               	movwf	___fltol@sign1^0,c
  9461   003F96  8E03               	bsf	(___fltol@f1+2)^0,7,c
  9462   003F98  0EFF               	movlw	255
  9463   003F9A  1601               	andwf	___fltol@f1^0,f,c
  9464   003F9C  0EFF               	movlw	255
  9465   003F9E  1602               	andwf	(___fltol@f1+1)^0,f,c
  9466   003FA0  0EFF               	movlw	255
  9467   003FA2  1603               	andwf	(___fltol@f1+2)^0,f,c
  9468   003FA4  0E00               	movlw	0
  9469   003FA6  1604               	andwf	(___fltol@f1+3)^0,f,c
  9470   003FA8  0E96               	movlw	150
  9471   003FAA  5E0A               	subwf	___fltol@exp1^0,f,c
  9472   003FAC  BE0A               	btfsc	___fltol@exp1^0,7,c
  9473   003FAE  EFDD  F01F         	goto	u3690
  9474   003FB2  EFDB  F01F         	goto	u3691
  9475   003FB6                     u3691:
  9476   003FB6  EFF3  F01F         	goto	l4342
  9477   003FBA                     u3690:
  9478   003FBA  500A               	movf	___fltol@exp1^0,w,c
  9479   003FBC  0A80               	xorlw	128
  9480   003FBE  0F97               	addlw	151
  9481   003FC0  B0D8               	btfsc	status,0,c
  9482   003FC2  EFE5  F01F         	goto	u3701
  9483   003FC6  EFE7  F01F         	goto	u3700
  9484   003FCA                     u3701:
  9485   003FCA  EFE9  F01F         	goto	l4338
  9486   003FCE                     u3700:
  9487   003FCE  EFAC  F01F         	goto	l4318
  9488   003FD2                     l4338:
  9489   003FD2  90D8               	bcf	status,0,c
  9490   003FD4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  9491   003FD6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  9492   003FD8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  9493   003FDA  3201               	rrcf	___fltol@f1^0,f,c
  9494   003FDC  3E0A               	incfsz	___fltol@exp1^0,f,c
  9495   003FDE  EFE9  F01F         	goto	l4338
  9496   003FE2  EF0B  F020         	goto	l4352
  9497   003FE6                     l4342:
  9498   003FE6  0E1F               	movlw	31
  9499   003FE8  640A               	cpfsgt	___fltol@exp1^0,c
  9500   003FEA  EFF9  F01F         	goto	u3711
  9501   003FEE  EFFB  F01F         	goto	u3710
  9502   003FF2                     u3711:
  9503   003FF2  EF03  F020         	goto	l4350
  9504   003FF6                     u3710:
  9505   003FF6  EFAC  F01F         	goto	l4318
  9506   003FFA                     l4348:
  9507   003FFA  90D8               	bcf	status,0,c
  9508   003FFC  3601               	rlcf	___fltol@f1^0,f,c
  9509   003FFE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  9510   004000  3603               	rlcf	(___fltol@f1+2)^0,f,c
  9511   004002  3604               	rlcf	(___fltol@f1+3)^0,f,c
  9512   004004  060A               	decf	___fltol@exp1^0,f,c
  9513   004006                     l4350:
  9514   004006  500A               	movf	___fltol@exp1^0,w,c
  9515   004008  A4D8               	btfss	status,2,c
  9516   00400A  EF09  F020         	goto	u3721
  9517   00400E  EF0B  F020         	goto	u3720
  9518   004012                     u3721:
  9519   004012  EFFD  F01F         	goto	l4348
  9520   004016                     u3720:
  9521   004016                     l4352:
  9522   004016  5009               	movf	___fltol@sign1^0,w,c
  9523   004018  B4D8               	btfsc	status,2,c
  9524   00401A  EF11  F020         	goto	u3731
  9525   00401E  EF13  F020         	goto	u3730
  9526   004022                     u3731:
  9527   004022  EF1B  F020         	goto	l4356
  9528   004026                     u3730:
  9529   004026  1E04               	comf	(___fltol@f1+3)^0,f,c
  9530   004028  1E03               	comf	(___fltol@f1+2)^0,f,c
  9531   00402A  1E02               	comf	(___fltol@f1+1)^0,f,c
  9532   00402C  6C01               	negf	___fltol@f1^0,c
  9533   00402E  0E00               	movlw	0
  9534   004030  2202               	addwfc	(___fltol@f1+1)^0,f,c
  9535   004032  2203               	addwfc	(___fltol@f1+2)^0,f,c
  9536   004034  2204               	addwfc	(___fltol@f1+3)^0,f,c
  9537   004036                     l4356:
  9538   004036  C001  F001         	movff	___fltol@f1,?___fltol
  9539   00403A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  9540   00403E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  9541   004042  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  9542   004046                     l952:
  9543   004046  0012               	return		;funcret
  9544   004048                     __end_of___fltol:
  9545                           	callstack 0
  9546                           
  9547 ;; *************** function ___flsub *****************
  9548 ;; Defined at:
  9549 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  b               4   41[COMRAM] long 
  9552 ;;  a               4   45[COMRAM] long 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  4   41[COMRAM] long 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2, status,0, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9564 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9567 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9568 ;;Total ram usage:        8 bytes
  9569 ;; Hardware stack levels used: 1
  9570 ;; Hardware stack levels required when called: 1
  9571 ;; This function calls:
  9572 ;;		___fladd
  9573 ;; This function is called by:
  9574 ;;		_Colour_decider
  9575 ;;		_efgtoa
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text52
  9580   004A38                     __ptext52:
  9581                           	callstack 0
  9582   004A38                     ___flsub:
  9583                           	callstack 25
  9584   004A38  0E00               	movlw	0
  9585   004A3A  1A2E               	xorwf	___flsub@a^0,f,c
  9586   004A3C  0E00               	movlw	0
  9587   004A3E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  9588   004A40  0E00               	movlw	0
  9589   004A42  1A30               	xorwf	(___flsub@a+2)^0,f,c
  9590   004A44  0E80               	movlw	128
  9591   004A46  1A31               	xorwf	(___flsub@a+3)^0,f,c
  9592   004A48  C02A  F001         	movff	___flsub@b,___fladd@b
  9593   004A4C  C02B  F002         	movff	___flsub@b+1,___fladd@b+1
  9594   004A50  C02C  F003         	movff	___flsub@b+2,___fladd@b+2
  9595   004A54  C02D  F004         	movff	___flsub@b+3,___fladd@b+3
  9596   004A58  C02E  F005         	movff	___flsub@a,___fladd@a
  9597   004A5C  C02F  F006         	movff	___flsub@a+1,___fladd@a+1
  9598   004A60  C030  F007         	movff	___flsub@a+2,___fladd@a+2
  9599   004A64  C031  F008         	movff	___flsub@a+3,___fladd@a+3
  9600   004A68  ECCD  F00E         	call	___fladd	;wreg free
  9601   004A6C  C001  F02A         	movff	?___fladd,?___flsub
  9602   004A70  C002  F02B         	movff	?___fladd+1,?___flsub+1
  9603   004A74  C003  F02C         	movff	?___fladd+2,?___flsub+2
  9604   004A78  C004  F02D         	movff	?___fladd+3,?___flsub+3
  9605   004A7C  0012               	return		;funcret
  9606   004A7E                     __end_of___flsub:
  9607                           	callstack 0
  9608                           
  9609 ;; *************** function ___fladd *****************
  9610 ;; Defined at:
  9611 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  9612 ;; Parameters:    Size  Location     Type
  9613 ;;  b               4    0[COMRAM] long 
  9614 ;;  a               4    4[COMRAM] long 
  9615 ;; Auto vars:     Size  Location     Type
  9616 ;;  grs             1   15[COMRAM] unsigned char 
  9617 ;;  bexp            1   14[COMRAM] unsigned char 
  9618 ;;  aexp            1   13[COMRAM] unsigned char 
  9619 ;;  signs           1   12[COMRAM] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  4    0[COMRAM] unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9629 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9630 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9631 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9632 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;Total ram usage:       16 bytes
  9634 ;; Hardware stack levels used: 1
  9635 ;; This function calls:
  9636 ;;		Nothing
  9637 ;; This function is called by:
  9638 ;;		_colour_rel
  9639 ;;		_Colour_decider
  9640 ;;		___flsub
  9641 ;;		_efgtoa
  9642 ;; This function uses a non-reentrant model
  9643 ;;
  9644                           
  9645                           	psect	text53
  9646   001D9A                     __ptext53:
  9647                           	callstack 0
  9648   001D9A                     ___fladd:
  9649                           	callstack 25
  9650   001D9A  5004               	movf	(___fladd@b+3)^0,w,c
  9651   001D9C  0B80               	andlw	128
  9652   001D9E  6E0D               	movwf	___fladd@signs^0,c
  9653   001DA0  5004               	movf	(___fladd@b+3)^0,w,c
  9654   001DA2  2404               	addwf	(___fladd@b+3)^0,w,c
  9655   001DA4  6E0F               	movwf	___fladd@bexp^0,c
  9656   001DA6  AE03               	btfss	(___fladd@b+2)^0,7,c
  9657   001DA8  EFD8  F00E         	goto	u2631
  9658   001DAC  EFDA  F00E         	goto	u2630
  9659   001DB0                     u2631:
  9660   001DB0  EFDB  F00E         	goto	l3706
  9661   001DB4                     u2630:
  9662   001DB4  800F               	bsf	___fladd@bexp^0,0,c
  9663   001DB6                     l3706:
  9664   001DB6  500F               	movf	___fladd@bexp^0,w,c
  9665   001DB8  B4D8               	btfsc	status,2,c
  9666   001DBA  EFE1  F00E         	goto	u2641
  9667   001DBE  EFE3  F00E         	goto	u2640
  9668   001DC2                     u2641:
  9669   001DC2  EFF8  F00E         	goto	l3716
  9670   001DC6                     u2640:
  9671   001DC6  280F               	incf	___fladd@bexp^0,w,c
  9672   001DC8  A4D8               	btfss	status,2,c
  9673   001DCA  EFE9  F00E         	goto	u2651
  9674   001DCE  EFEB  F00E         	goto	u2650
  9675   001DD2                     u2651:
  9676   001DD2  EFF3  F00E         	goto	l3712
  9677   001DD6                     u2650:
  9678   001DD6  0E00               	movlw	0
  9679   001DD8  6E01               	movwf	___fladd@b^0,c
  9680   001DDA  0E00               	movlw	0
  9681   001DDC  6E02               	movwf	(___fladd@b+1)^0,c
  9682   001DDE  0E00               	movlw	0
  9683   001DE0  6E03               	movwf	(___fladd@b+2)^0,c
  9684   001DE2  0E00               	movlw	0
  9685   001DE4  6E04               	movwf	(___fladd@b+3)^0,c
  9686   001DE6                     l3712:
  9687   001DE6  8E03               	bsf	(___fladd@b+2)^0,7,c
  9688   001DE8  0E00               	movlw	0
  9689   001DEA  6E04               	movwf	(___fladd@b+3)^0,c
  9690   001DEC  EF00  F00F         	goto	l3718
  9691   001DF0                     l3716:
  9692   001DF0  0E00               	movlw	0
  9693   001DF2  6E01               	movwf	___fladd@b^0,c
  9694   001DF4  0E00               	movlw	0
  9695   001DF6  6E02               	movwf	(___fladd@b+1)^0,c
  9696   001DF8  0E00               	movlw	0
  9697   001DFA  6E03               	movwf	(___fladd@b+2)^0,c
  9698   001DFC  0E00               	movlw	0
  9699   001DFE  6E04               	movwf	(___fladd@b+3)^0,c
  9700   001E00                     l3718:
  9701   001E00  5008               	movf	(___fladd@a+3)^0,w,c
  9702   001E02  0B80               	andlw	128
  9703   001E04  6E0E               	movwf	___fladd@aexp^0,c
  9704   001E06  500D               	movf	___fladd@signs^0,w,c
  9705   001E08  180E               	xorwf	___fladd@aexp^0,w,c
  9706   001E0A  B4D8               	btfsc	status,2,c
  9707   001E0C  EF0A  F00F         	goto	u2661
  9708   001E10  EF0C  F00F         	goto	u2660
  9709   001E14                     u2661:
  9710   001E14  EF0D  F00F         	goto	l3724
  9711   001E18                     u2660:
  9712   001E18  8C0D               	bsf	___fladd@signs^0,6,c
  9713   001E1A                     l3724:
  9714   001E1A  5008               	movf	(___fladd@a+3)^0,w,c
  9715   001E1C  2408               	addwf	(___fladd@a+3)^0,w,c
  9716   001E1E  6E0E               	movwf	___fladd@aexp^0,c
  9717   001E20  AE07               	btfss	(___fladd@a+2)^0,7,c
  9718   001E22  EF15  F00F         	goto	u2671
  9719   001E26  EF17  F00F         	goto	u2670
  9720   001E2A                     u2671:
  9721   001E2A  EF18  F00F         	goto	l3730
  9722   001E2E                     u2670:
  9723   001E2E  800E               	bsf	___fladd@aexp^0,0,c
  9724   001E30                     l3730:
  9725   001E30  500E               	movf	___fladd@aexp^0,w,c
  9726   001E32  B4D8               	btfsc	status,2,c
  9727   001E34  EF1E  F00F         	goto	u2681
  9728   001E38  EF20  F00F         	goto	u2680
  9729   001E3C                     u2681:
  9730   001E3C  EF35  F00F         	goto	l3740
  9731   001E40                     u2680:
  9732   001E40  280E               	incf	___fladd@aexp^0,w,c
  9733   001E42  A4D8               	btfss	status,2,c
  9734   001E44  EF26  F00F         	goto	u2691
  9735   001E48  EF28  F00F         	goto	u2690
  9736   001E4C                     u2691:
  9737   001E4C  EF30  F00F         	goto	l3736
  9738   001E50                     u2690:
  9739   001E50  0E00               	movlw	0
  9740   001E52  6E05               	movwf	___fladd@a^0,c
  9741   001E54  0E00               	movlw	0
  9742   001E56  6E06               	movwf	(___fladd@a+1)^0,c
  9743   001E58  0E00               	movlw	0
  9744   001E5A  6E07               	movwf	(___fladd@a+2)^0,c
  9745   001E5C  0E00               	movlw	0
  9746   001E5E  6E08               	movwf	(___fladd@a+3)^0,c
  9747   001E60                     l3736:
  9748   001E60  8E07               	bsf	(___fladd@a+2)^0,7,c
  9749   001E62  0E00               	movlw	0
  9750   001E64  6E08               	movwf	(___fladd@a+3)^0,c
  9751   001E66  EF3D  F00F         	goto	l3742
  9752   001E6A                     l3740:
  9753   001E6A  0E00               	movlw	0
  9754   001E6C  6E05               	movwf	___fladd@a^0,c
  9755   001E6E  0E00               	movlw	0
  9756   001E70  6E06               	movwf	(___fladd@a+1)^0,c
  9757   001E72  0E00               	movlw	0
  9758   001E74  6E07               	movwf	(___fladd@a+2)^0,c
  9759   001E76  0E00               	movlw	0
  9760   001E78  6E08               	movwf	(___fladd@a+3)^0,c
  9761   001E7A                     l3742:
  9762   001E7A  500F               	movf	___fladd@bexp^0,w,c
  9763   001E7C  5C0E               	subwf	___fladd@aexp^0,w,c
  9764   001E7E  B0D8               	btfsc	status,0,c
  9765   001E80  EF44  F00F         	goto	u2701
  9766   001E84  EF46  F00F         	goto	u2700
  9767   001E88                     u2701:
  9768   001E88  EF6D  F00F         	goto	l3778
  9769   001E8C                     u2700:
  9770   001E8C  AC0D               	btfss	___fladd@signs^0,6,c
  9771   001E8E  EF4B  F00F         	goto	u2711
  9772   001E92  EF4D  F00F         	goto	u2710
  9773   001E96                     u2711:
  9774   001E96  EF4F  F00F         	goto	l3748
  9775   001E9A                     u2710:
  9776   001E9A  0E80               	movlw	128
  9777   001E9C  1A0D               	xorwf	___fladd@signs^0,f,c
  9778   001E9E                     l3748:
  9779   001E9E  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  9780   001EA2  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9781   001EA6  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  9782   001EAA  C001  F010         	movff	___fladd@b,___fladd@grs
  9783   001EAE  C005  F001         	movff	___fladd@a,___fladd@b
  9784   001EB2  C010  F005         	movff	___fladd@grs,___fladd@a
  9785   001EB6  C002  F010         	movff	___fladd@b+1,___fladd@grs
  9786   001EBA  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  9787   001EBE  C010  F006         	movff	___fladd@grs,___fladd@a+1
  9788   001EC2  C003  F010         	movff	___fladd@b+2,___fladd@grs
  9789   001EC6  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  9790   001ECA  C010  F007         	movff	___fladd@grs,___fladd@a+2
  9791   001ECE  C004  F010         	movff	___fladd@b+3,___fladd@grs
  9792   001ED2  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  9793   001ED6  C010  F008         	movff	___fladd@grs,___fladd@a+3
  9794   001EDA                     l3778:
  9795   001EDA  0E00               	movlw	0
  9796   001EDC  6E10               	movwf	___fladd@grs^0,c
  9797   001EDE  500F               	movf	___fladd@bexp^0,w,c
  9798   001EE0  C00E  F009         	movff	___fladd@aexp,??___fladd
  9799   001EE4  6A0A               	clrf	(??___fladd+1)^0,c
  9800   001EE6  5E09               	subwf	??___fladd^0,f,c
  9801   001EE8  0E00               	movlw	0
  9802   001EEA  5A0A               	subwfb	(??___fladd+1)^0,f,c
  9803   001EEC  BE0A               	btfsc	(??___fladd+1)^0,7,c
  9804   001EEE  EF82  F00F         	goto	u2721
  9805   001EF2  500A               	movf	(??___fladd+1)^0,w,c
  9806   001EF4  E109               	bnz	u2720
  9807   001EF6  0E1A               	movlw	26
  9808   001EF8  5C09               	subwf	??___fladd^0,w,c
  9809   001EFA  A0D8               	btfss	status,0,c
  9810   001EFC  EF82  F00F         	goto	u2721
  9811   001F00  EF84  F00F         	goto	u2720
  9812   001F04                     u2721:
  9813   001F04  EFBB  F00F         	goto	l1184
  9814   001F08                     u2720:
  9815   001F08  5001               	movf	___fladd@b^0,w,c
  9816   001F0A  1002               	iorwf	(___fladd@b+1)^0,w,c
  9817   001F0C  1003               	iorwf	(___fladd@b+2)^0,w,c
  9818   001F0E  1004               	iorwf	(___fladd@b+3)^0,w,c
  9819   001F10  A4D8               	btfss	status,2,c
  9820   001F12  EF8D  F00F         	goto	u2731
  9821   001F16  EF90  F00F         	goto	u2730
  9822   001F1A                     u2731:
  9823   001F1A  0E01               	movlw	1
  9824   001F1C  EF91  F00F         	goto	u2740
  9825   001F20                     u2730:
  9826   001F20  0E00               	movlw	0
  9827   001F22                     u2740:
  9828   001F22  6E10               	movwf	___fladd@grs^0,c
  9829   001F24  0E00               	movlw	0
  9830   001F26  6E01               	movwf	___fladd@b^0,c
  9831   001F28  0E00               	movlw	0
  9832   001F2A  6E02               	movwf	(___fladd@b+1)^0,c
  9833   001F2C  0E00               	movlw	0
  9834   001F2E  6E03               	movwf	(___fladd@b+2)^0,c
  9835   001F30  0E00               	movlw	0
  9836   001F32  6E04               	movwf	(___fladd@b+3)^0,c
  9837   001F34  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  9838   001F38  EFC4  F00F         	goto	l1183
  9839   001F3C                     l1185:
  9840   001F3C  A010               	btfss	___fladd@grs^0,0,c
  9841   001F3E  EFA3  F00F         	goto	u2751
  9842   001F42  EFA5  F00F         	goto	u2750
  9843   001F46                     u2751:
  9844   001F46  EFAB  F00F         	goto	l3790
  9845   001F4A                     u2750:
  9846   001F4A  90D8               	bcf	status,0,c
  9847   001F4C  3010               	rrcf	___fladd@grs^0,w,c
  9848   001F4E  0901               	iorlw	1
  9849   001F50  6E10               	movwf	___fladd@grs^0,c
  9850   001F52  EFAD  F00F         	goto	l3792
  9851   001F56                     l3790:
  9852   001F56  90D8               	bcf	status,0,c
  9853   001F58  3210               	rrcf	___fladd@grs^0,f,c
  9854   001F5A                     l3792:
  9855   001F5A  A001               	btfss	___fladd@b^0,0,c
  9856   001F5C  EFB2  F00F         	goto	u2761
  9857   001F60  EFB4  F00F         	goto	u2760
  9858   001F64                     u2761:
  9859   001F64  EFB5  F00F         	goto	l3796
  9860   001F68                     u2760:
  9861   001F68  8E10               	bsf	___fladd@grs^0,7,c
  9862   001F6A                     l3796:
  9863   001F6A  3404               	rlcf	(___fladd@b+3)^0,w,c
  9864   001F6C  3204               	rrcf	(___fladd@b+3)^0,f,c
  9865   001F6E  3203               	rrcf	(___fladd@b+2)^0,f,c
  9866   001F70  3202               	rrcf	(___fladd@b+1)^0,f,c
  9867   001F72  3201               	rrcf	___fladd@b^0,f,c
  9868   001F74  2A0F               	incf	___fladd@bexp^0,f,c
  9869   001F76                     l1184:
  9870   001F76  500E               	movf	___fladd@aexp^0,w,c
  9871   001F78  5C0F               	subwf	___fladd@bexp^0,w,c
  9872   001F7A  A0D8               	btfss	status,0,c
  9873   001F7C  EFC2  F00F         	goto	u2771
  9874   001F80  EFC4  F00F         	goto	u2770
  9875   001F84                     u2771:
  9876   001F84  EF9E  F00F         	goto	l1185
  9877   001F88                     u2770:
  9878   001F88                     l1183:
  9879   001F88  BC0D               	btfsc	___fladd@signs^0,6,c
  9880   001F8A  EFC9  F00F         	goto	u2781
  9881   001F8E  EFCB  F00F         	goto	u2780
  9882   001F92                     u2781:
  9883   001F92  EF0B  F010         	goto	l3824
  9884   001F96                     u2780:
  9885   001F96  500F               	movf	___fladd@bexp^0,w,c
  9886   001F98  A4D8               	btfss	status,2,c
  9887   001F9A  EFD1  F00F         	goto	u2791
  9888   001F9E  EFD3  F00F         	goto	u2790
  9889   001FA2                     u2791:
  9890   001FA2  EFDD  F00F         	goto	l3806
  9891   001FA6                     u2790:
  9892   001FA6  0E00               	movlw	0
  9893   001FA8  6E01               	movwf	?___fladd^0,c
  9894   001FAA  0E00               	movlw	0
  9895   001FAC  6E02               	movwf	(?___fladd+1)^0,c
  9896   001FAE  0E00               	movlw	0
  9897   001FB0  6E03               	movwf	(?___fladd+2)^0,c
  9898   001FB2  0E00               	movlw	0
  9899   001FB4  6E04               	movwf	(?___fladd+3)^0,c
  9900   001FB6  EF2C  F011         	goto	l1192
  9901   001FBA                     l3806:
  9902   001FBA  5005               	movf	___fladd@a^0,w,c
  9903   001FBC  2601               	addwf	___fladd@b^0,f,c
  9904   001FBE  5006               	movf	(___fladd@a+1)^0,w,c
  9905   001FC0  2202               	addwfc	(___fladd@b+1)^0,f,c
  9906   001FC2  5007               	movf	(___fladd@a+2)^0,w,c
  9907   001FC4  2203               	addwfc	(___fladd@b+2)^0,f,c
  9908   001FC6  5008               	movf	(___fladd@a+3)^0,w,c
  9909   001FC8  2204               	addwfc	(___fladd@b+3)^0,f,c
  9910   001FCA  A004               	btfss	(___fladd@b+3)^0,0,c
  9911   001FCC  EFEA  F00F         	goto	u2801
  9912   001FD0  EFEC  F00F         	goto	u2800
  9913   001FD4                     u2801:
  9914   001FD4  EF98  F010         	goto	l3860
  9915   001FD8                     u2800:
  9916   001FD8  A010               	btfss	___fladd@grs^0,0,c
  9917   001FDA  EFF1  F00F         	goto	u2811
  9918   001FDE  EFF3  F00F         	goto	u2810
  9919   001FE2                     u2811:
  9920   001FE2  EFF9  F00F         	goto	l3814
  9921   001FE6                     u2810:
  9922   001FE6  90D8               	bcf	status,0,c
  9923   001FE8  3010               	rrcf	___fladd@grs^0,w,c
  9924   001FEA  0901               	iorlw	1
  9925   001FEC  6E10               	movwf	___fladd@grs^0,c
  9926   001FEE  EFFB  F00F         	goto	l3816
  9927   001FF2                     l3814:
  9928   001FF2  90D8               	bcf	status,0,c
  9929   001FF4  3210               	rrcf	___fladd@grs^0,f,c
  9930   001FF6                     l3816:
  9931   001FF6  A001               	btfss	___fladd@b^0,0,c
  9932   001FF8  EF00  F010         	goto	u2821
  9933   001FFC  EF02  F010         	goto	u2820
  9934   002000                     u2821:
  9935   002000  EF03  F010         	goto	l3820
  9936   002004                     u2820:
  9937   002004  8E10               	bsf	___fladd@grs^0,7,c
  9938   002006                     l3820:
  9939   002006  3404               	rlcf	(___fladd@b+3)^0,w,c
  9940   002008  3204               	rrcf	(___fladd@b+3)^0,f,c
  9941   00200A  3203               	rrcf	(___fladd@b+2)^0,f,c
  9942   00200C  3202               	rrcf	(___fladd@b+1)^0,f,c
  9943   00200E  3201               	rrcf	___fladd@b^0,f,c
  9944   002010  2A0F               	incf	___fladd@bexp^0,f,c
  9945   002012  EF98  F010         	goto	l3860
  9946   002016                     l3824:
  9947   002016  5005               	movf	___fladd@a^0,w,c
  9948   002018  5C01               	subwf	___fladd@b^0,w,c
  9949   00201A  5006               	movf	(___fladd@a+1)^0,w,c
  9950   00201C  5802               	subwfb	(___fladd@b+1)^0,w,c
  9951   00201E  5007               	movf	(___fladd@a+2)^0,w,c
  9952   002020  5803               	subwfb	(___fladd@b+2)^0,w,c
  9953   002022  5004               	movf	(___fladd@b+3)^0,w,c
  9954   002024  0A80               	xorlw	128
  9955   002026  6E09               	movwf	??___fladd^0,c
  9956   002028  5008               	movf	(___fladd@a+3)^0,w,c
  9957   00202A  0A80               	xorlw	128
  9958   00202C  5809               	subwfb	??___fladd^0,w,c
  9959   00202E  B0D8               	btfsc	status,0,c
  9960   002030  EF1C  F010         	goto	u2831
  9961   002034  EF1E  F010         	goto	u2830
  9962   002038                     u2831:
  9963   002038  EF49  F010         	goto	l3834
  9964   00203C                     u2830:
  9965   00203C  5001               	movf	___fladd@b^0,w,c
  9966   00203E  5C05               	subwf	___fladd@a^0,w,c
  9967   002040  6E09               	movwf	??___fladd^0,c
  9968   002042  5002               	movf	(___fladd@b+1)^0,w,c
  9969   002044  5806               	subwfb	(___fladd@a+1)^0,w,c
  9970   002046  6E0A               	movwf	(??___fladd+1)^0,c
  9971   002048  5003               	movf	(___fladd@b+2)^0,w,c
  9972   00204A  5807               	subwfb	(___fladd@a+2)^0,w,c
  9973   00204C  6E0B               	movwf	(??___fladd+2)^0,c
  9974   00204E  5004               	movf	(___fladd@b+3)^0,w,c
  9975   002050  5808               	subwfb	(___fladd@a+3)^0,w,c
  9976   002052  6E0C               	movwf	(??___fladd+3)^0,c
  9977   002054  0EFF               	movlw	255
  9978   002056  2409               	addwf	??___fladd^0,w,c
  9979   002058  6E01               	movwf	___fladd@b^0,c
  9980   00205A  0EFF               	movlw	255
  9981   00205C  200A               	addwfc	(??___fladd+1)^0,w,c
  9982   00205E  6E02               	movwf	(___fladd@b+1)^0,c
  9983   002060  0EFF               	movlw	255
  9984   002062  200B               	addwfc	(??___fladd+2)^0,w,c
  9985   002064  6E03               	movwf	(___fladd@b+2)^0,c
  9986   002066  0EFF               	movlw	255
  9987   002068  200C               	addwfc	(??___fladd+3)^0,w,c
  9988   00206A  6E04               	movwf	(___fladd@b+3)^0,c
  9989   00206C  0E80               	movlw	128
  9990   00206E  1A0D               	xorwf	___fladd@signs^0,f,c
  9991   002070  6C10               	negf	___fladd@grs^0,c
  9992   002072  5010               	movf	___fladd@grs^0,w,c
  9993   002074  A4D8               	btfss	status,2,c
  9994   002076  EF3F  F010         	goto	u2841
  9995   00207A  EF41  F010         	goto	u2840
  9996   00207E                     u2841:
  9997   00207E  EF51  F010         	goto	l1200
  9998   002082                     u2840:
  9999   002082  0E01               	movlw	1
 10000   002084  2601               	addwf	___fladd@b^0,f,c
 10001   002086  0E00               	movlw	0
 10002   002088  2202               	addwfc	(___fladd@b+1)^0,f,c
 10003   00208A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10004   00208C  2204               	addwfc	(___fladd@b+3)^0,f,c
 10005   00208E  EF51  F010         	goto	l1200
 10006   002092                     l3834:
 10007   002092  5005               	movf	___fladd@a^0,w,c
 10008   002094  5E01               	subwf	___fladd@b^0,f,c
 10009   002096  5006               	movf	(___fladd@a+1)^0,w,c
 10010   002098  5A02               	subwfb	(___fladd@b+1)^0,f,c
 10011   00209A  5007               	movf	(___fladd@a+2)^0,w,c
 10012   00209C  5A03               	subwfb	(___fladd@b+2)^0,f,c
 10013   00209E  5008               	movf	(___fladd@a+3)^0,w,c
 10014   0020A0  5A04               	subwfb	(___fladd@b+3)^0,f,c
 10015   0020A2                     l1200:
 10016   0020A2  5001               	movf	___fladd@b^0,w,c
 10017   0020A4  1002               	iorwf	(___fladd@b+1)^0,w,c
 10018   0020A6  1003               	iorwf	(___fladd@b+2)^0,w,c
 10019   0020A8  1004               	iorwf	(___fladd@b+3)^0,w,c
 10020   0020AA  A4D8               	btfss	status,2,c
 10021   0020AC  EF5A  F010         	goto	u2851
 10022   0020B0  EF5C  F010         	goto	u2850
 10023   0020B4                     u2851:
 10024   0020B4  EF91  F010         	goto	l3858
 10025   0020B8                     u2850:
 10026   0020B8  5010               	movf	___fladd@grs^0,w,c
 10027   0020BA  A4D8               	btfss	status,2,c
 10028   0020BC  EF62  F010         	goto	u2861
 10029   0020C0  EF64  F010         	goto	u2860
 10030   0020C4                     u2861:
 10031   0020C4  EF91  F010         	goto	l3858
 10032   0020C8                     u2860:
 10033   0020C8  0E00               	movlw	0
 10034   0020CA  6E01               	movwf	?___fladd^0,c
 10035   0020CC  0E00               	movlw	0
 10036   0020CE  6E02               	movwf	(?___fladd+1)^0,c
 10037   0020D0  0E00               	movlw	0
 10038   0020D2  6E03               	movwf	(?___fladd+2)^0,c
 10039   0020D4  0E00               	movlw	0
 10040   0020D6  6E04               	movwf	(?___fladd+3)^0,c
 10041   0020D8  EF2C  F011         	goto	l1192
 10042   0020DC                     l3842:
 10043   0020DC  90D8               	bcf	status,0,c
 10044   0020DE  3601               	rlcf	___fladd@b^0,f,c
 10045   0020E0  3602               	rlcf	(___fladd@b+1)^0,f,c
 10046   0020E2  3603               	rlcf	(___fladd@b+2)^0,f,c
 10047   0020E4  3604               	rlcf	(___fladd@b+3)^0,f,c
 10048   0020E6  AE10               	btfss	___fladd@grs^0,7,c
 10049   0020E8  EF78  F010         	goto	u2871
 10050   0020EC  EF7A  F010         	goto	u2870
 10051   0020F0                     u2871:
 10052   0020F0  EF7B  F010         	goto	l3848
 10053   0020F4                     u2870:
 10054   0020F4  8001               	bsf	___fladd@b^0,0,c
 10055   0020F6                     l3848:
 10056   0020F6  A010               	btfss	___fladd@grs^0,0,c
 10057   0020F8  EF80  F010         	goto	u2881
 10058   0020FC  EF82  F010         	goto	u2880
 10059   002100                     u2881:
 10060   002100  EF86  F010         	goto	l3852
 10061   002104                     u2880:
 10062   002104  80D8               	bsf	status,0,c
 10063   002106  3610               	rlcf	___fladd@grs^0,f,c
 10064   002108  EF88  F010         	goto	l3854
 10065   00210C                     l3852:
 10066   00210C  90D8               	bcf	status,0,c
 10067   00210E  3610               	rlcf	___fladd@grs^0,f,c
 10068   002110                     l3854:
 10069   002110  500F               	movf	___fladd@bexp^0,w,c
 10070   002112  B4D8               	btfsc	status,2,c
 10071   002114  EF8E  F010         	goto	u2891
 10072   002118  EF90  F010         	goto	u2890
 10073   00211C                     u2891:
 10074   00211C  EF91  F010         	goto	l3858
 10075   002120                     u2890:
 10076   002120  060F               	decf	___fladd@bexp^0,f,c
 10077   002122                     l3858:
 10078   002122  AE03               	btfss	(___fladd@b+2)^0,7,c
 10079   002124  EF96  F010         	goto	u2901
 10080   002128  EF98  F010         	goto	u2900
 10081   00212C                     u2901:
 10082   00212C  EF6E  F010         	goto	l3842
 10083   002130                     u2900:
 10084   002130                     l3860:
 10085   002130  0E00               	movlw	0
 10086   002132  6E0E               	movwf	___fladd@aexp^0,c
 10087   002134  AE10               	btfss	___fladd@grs^0,7,c
 10088   002136  EF9F  F010         	goto	u2911
 10089   00213A  EFA1  F010         	goto	u2910
 10090   00213E                     u2911:
 10091   00213E  EFB9  F010         	goto	l1209
 10092   002142                     u2910:
 10093   002142  C010  F009         	movff	___fladd@grs,??___fladd
 10094   002146  0E7F               	movlw	127
 10095   002148  1609               	andwf	??___fladd^0,f,c
 10096   00214A  B4D8               	btfsc	status,2,c
 10097   00214C  EFAA  F010         	goto	u2921
 10098   002150  EFAC  F010         	goto	u2920
 10099   002154                     u2921:
 10100   002154  EFB0  F010         	goto	l1210
 10101   002158                     u2920:
 10102   002158                     l3866:
 10103   002158  0E01               	movlw	1
 10104   00215A  6E0E               	movwf	___fladd@aexp^0,c
 10105   00215C  EFB9  F010         	goto	l1209
 10106   002160                     l1210:
 10107   002160  A001               	btfss	___fladd@b^0,0,c
 10108   002162  EFB5  F010         	goto	u2931
 10109   002166  EFB7  F010         	goto	u2930
 10110   00216A                     u2931:
 10111   00216A  EFB9  F010         	goto	l1209
 10112   00216E                     u2930:
 10113   00216E  EFAC  F010         	goto	l3866
 10114   002172                     l1209:
 10115   002172  500E               	movf	___fladd@aexp^0,w,c
 10116   002174  B4D8               	btfsc	status,2,c
 10117   002176  EFBF  F010         	goto	u2941
 10118   00217A  EFC1  F010         	goto	u2940
 10119   00217E                     u2941:
 10120   00217E  EFEC  F010         	goto	l3878
 10121   002182                     u2940:
 10122   002182  0E01               	movlw	1
 10123   002184  2601               	addwf	___fladd@b^0,f,c
 10124   002186  0E00               	movlw	0
 10125   002188  2202               	addwfc	(___fladd@b+1)^0,f,c
 10126   00218A  2203               	addwfc	(___fladd@b+2)^0,f,c
 10127   00218C  2204               	addwfc	(___fladd@b+3)^0,f,c
 10128   00218E  A004               	btfss	(___fladd@b+3)^0,0,c
 10129   002190  EFCC  F010         	goto	u2951
 10130   002194  EFCE  F010         	goto	u2950
 10131   002198                     u2951:
 10132   002198  EFEC  F010         	goto	l3878
 10133   00219C                     u2950:
 10134   00219C  C001  F009         	movff	___fladd@b,??___fladd
 10135   0021A0  C002  F00A         	movff	___fladd@b+1,??___fladd+1
 10136   0021A4  C003  F00B         	movff	___fladd@b+2,??___fladd+2
 10137   0021A8  C004  F00C         	movff	___fladd@b+3,??___fladd+3
 10138   0021AC  340C               	rlcf	(??___fladd+3)^0,w,c
 10139   0021AE  320C               	rrcf	(??___fladd+3)^0,f,c
 10140   0021B0  320B               	rrcf	(??___fladd+2)^0,f,c
 10141   0021B2  320A               	rrcf	(??___fladd+1)^0,f,c
 10142   0021B4  3209               	rrcf	??___fladd^0,f,c
 10143   0021B6  C009  F001         	movff	??___fladd,___fladd@b
 10144   0021BA  C00A  F002         	movff	??___fladd+1,___fladd@b+1
 10145   0021BE  C00B  F003         	movff	??___fladd+2,___fladd@b+2
 10146   0021C2  C00C  F004         	movff	??___fladd+3,___fladd@b+3
 10147   0021C6  280F               	incf	___fladd@bexp^0,w,c
 10148   0021C8  B4D8               	btfsc	status,2,c
 10149   0021CA  EFE9  F010         	goto	u2961
 10150   0021CE  EFEB  F010         	goto	u2960
 10151   0021D2                     u2961:
 10152   0021D2  EFEC  F010         	goto	l3878
 10153   0021D6                     u2960:
 10154   0021D6  2A0F               	incf	___fladd@bexp^0,f,c
 10155   0021D8                     l3878:
 10156   0021D8  280F               	incf	___fladd@bexp^0,w,c
 10157   0021DA  B4D8               	btfsc	status,2,c
 10158   0021DC  EFF2  F010         	goto	u2971
 10159   0021E0  EFF4  F010         	goto	u2970
 10160   0021E4                     u2971:
 10161   0021E4  EFFC  F010         	goto	l3882
 10162   0021E8                     u2970:
 10163   0021E8  500F               	movf	___fladd@bexp^0,w,c
 10164   0021EA  A4D8               	btfss	status,2,c
 10165   0021EC  EFFA  F010         	goto	u2981
 10166   0021F0  EFFC  F010         	goto	u2980
 10167   0021F4                     u2981:
 10168   0021F4  EF0E  F011         	goto	l3886
 10169   0021F8                     u2980:
 10170   0021F8                     l3882:
 10171   0021F8  0E00               	movlw	0
 10172   0021FA  6E01               	movwf	___fladd@b^0,c
 10173   0021FC  0E00               	movlw	0
 10174   0021FE  6E02               	movwf	(___fladd@b+1)^0,c
 10175   002200  0E00               	movlw	0
 10176   002202  6E03               	movwf	(___fladd@b+2)^0,c
 10177   002204  0E00               	movlw	0
 10178   002206  6E04               	movwf	(___fladd@b+3)^0,c
 10179   002208  500F               	movf	___fladd@bexp^0,w,c
 10180   00220A  A4D8               	btfss	status,2,c
 10181   00220C  EF0A  F011         	goto	u2991
 10182   002210  EF0C  F011         	goto	u2990
 10183   002214                     u2991:
 10184   002214  EF0E  F011         	goto	l3886
 10185   002218                     u2990:
 10186   002218  0E00               	movlw	0
 10187   00221A  6E0D               	movwf	___fladd@signs^0,c
 10188   00221C                     l3886:
 10189   00221C  A00F               	btfss	___fladd@bexp^0,0,c
 10190   00221E  EF13  F011         	goto	u3001
 10191   002222  EF15  F011         	goto	u3000
 10192   002226                     u3001:
 10193   002226  EF18  F011         	goto	l3890
 10194   00222A                     u3000:
 10195   00222A  8E03               	bsf	(___fladd@b+2)^0,7,c
 10196   00222C  EF19  F011         	goto	l3892
 10197   002230                     l3890:
 10198   002230  9E03               	bcf	(___fladd@b+2)^0,7,c
 10199   002232                     l3892:
 10200   002232  90D8               	bcf	status,0,c
 10201   002234  300F               	rrcf	___fladd@bexp^0,w,c
 10202   002236  6E04               	movwf	(___fladd@b+3)^0,c
 10203   002238  AE0D               	btfss	___fladd@signs^0,7,c
 10204   00223A  EF21  F011         	goto	u3011
 10205   00223E  EF23  F011         	goto	u3010
 10206   002242                     u3011:
 10207   002242  EF24  F011         	goto	l3898
 10208   002246                     u3010:
 10209   002246  8E04               	bsf	(___fladd@b+3)^0,7,c
 10210   002248                     l3898:
 10211   002248  C001  F001         	movff	___fladd@b,?___fladd
 10212   00224C  C002  F002         	movff	___fladd@b+1,?___fladd+1
 10213   002250  C003  F003         	movff	___fladd@b+2,?___fladd+2
 10214   002254  C004  F004         	movff	___fladd@b+3,?___fladd+3
 10215   002258                     l1192:
 10216   002258  0012               	return		;funcret
 10217   00225A                     __end_of___fladd:
 10218                           	callstack 0
 10219                           
 10220 ;; *************** function ___flmul *****************
 10221 ;; Defined at:
 10222 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;  b               4   16[COMRAM] unsigned char 
 10225 ;;  a               4   20[COMRAM] unsigned char 
 10226 ;; Auto vars:     Size  Location     Type
 10227 ;;  prod            4   35[COMRAM] struct .
 10228 ;;  grs             4   29[COMRAM] unsigned long 
 10229 ;;  temp            2   39[COMRAM] struct .
 10230 ;;  bexp            1   34[COMRAM] unsigned char 
 10231 ;;  aexp            1   33[COMRAM] unsigned char 
 10232 ;;  sign            1   28[COMRAM] unsigned char 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  4   16[COMRAM] unsigned char 
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0, prodl, prodh
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10242 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10243 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10244 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10245 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10246 ;;Total ram usage:       25 bytes
 10247 ;; Hardware stack levels used: 1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_Colour_decider
 10252 ;;		_efgtoa
 10253 ;;		_reverseOneBlock
 10254 ;;		_ForwardOneBlock
 10255 ;;		_Forwardhalfblock
 10256 ;;		_Backhalfblock
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text54
 10261   00225A                     __ptext54:
 10262                           	callstack 0
 10263   00225A                     ___flmul:
 10264                           	callstack 26
 10265   00225A  5014               	movf	(___flmul@b+3)^0,w,c
 10266   00225C  0B80               	andlw	128
 10267   00225E  6E1D               	movwf	___flmul@sign^0,c
 10268   002260  5014               	movf	(___flmul@b+3)^0,w,c
 10269   002262  2414               	addwf	(___flmul@b+3)^0,w,c
 10270   002264  6E23               	movwf	___flmul@bexp^0,c
 10271   002266  AE13               	btfss	(___flmul@b+2)^0,7,c
 10272   002268  EF38  F011         	goto	u3391
 10273   00226C  EF3A  F011         	goto	u3390
 10274   002270                     u3391:
 10275   002270  EF3B  F011         	goto	l4140
 10276   002274                     u3390:
 10277   002274  8023               	bsf	___flmul@bexp^0,0,c
 10278   002276                     l4140:
 10279   002276  5023               	movf	___flmul@bexp^0,w,c
 10280   002278  B4D8               	btfsc	status,2,c
 10281   00227A  EF41  F011         	goto	u3401
 10282   00227E  EF43  F011         	goto	u3400
 10283   002282                     u3401:
 10284   002282  EF56  F011         	goto	l4148
 10285   002286                     u3400:
 10286   002286  2823               	incf	___flmul@bexp^0,w,c
 10287   002288  A4D8               	btfss	status,2,c
 10288   00228A  EF49  F011         	goto	u3411
 10289   00228E  EF4B  F011         	goto	u3410
 10290   002292                     u3411:
 10291   002292  EF53  F011         	goto	l4146
 10292   002296                     u3410:
 10293   002296  0E00               	movlw	0
 10294   002298  6E11               	movwf	___flmul@b^0,c
 10295   00229A  0E00               	movlw	0
 10296   00229C  6E12               	movwf	(___flmul@b+1)^0,c
 10297   00229E  0E00               	movlw	0
 10298   0022A0  6E13               	movwf	(___flmul@b+2)^0,c
 10299   0022A2  0E00               	movlw	0
 10300   0022A4  6E14               	movwf	(___flmul@b+3)^0,c
 10301   0022A6                     l4146:
 10302   0022A6  8E13               	bsf	(___flmul@b+2)^0,7,c
 10303   0022A8  EF5E  F011         	goto	l4150
 10304   0022AC                     l4148:
 10305   0022AC  0E00               	movlw	0
 10306   0022AE  6E11               	movwf	___flmul@b^0,c
 10307   0022B0  0E00               	movlw	0
 10308   0022B2  6E12               	movwf	(___flmul@b+1)^0,c
 10309   0022B4  0E00               	movlw	0
 10310   0022B6  6E13               	movwf	(___flmul@b+2)^0,c
 10311   0022B8  0E00               	movlw	0
 10312   0022BA  6E14               	movwf	(___flmul@b+3)^0,c
 10313   0022BC                     l4150:
 10314   0022BC  5018               	movf	(___flmul@a+3)^0,w,c
 10315   0022BE  0B80               	andlw	128
 10316   0022C0  1A1D               	xorwf	___flmul@sign^0,f,c
 10317   0022C2  5018               	movf	(___flmul@a+3)^0,w,c
 10318   0022C4  2418               	addwf	(___flmul@a+3)^0,w,c
 10319   0022C6  6E22               	movwf	___flmul@aexp^0,c
 10320   0022C8  AE17               	btfss	(___flmul@a+2)^0,7,c
 10321   0022CA  EF69  F011         	goto	u3421
 10322   0022CE  EF6B  F011         	goto	u3420
 10323   0022D2                     u3421:
 10324   0022D2  EF6C  F011         	goto	l4158
 10325   0022D6                     u3420:
 10326   0022D6  8022               	bsf	___flmul@aexp^0,0,c
 10327   0022D8                     l4158:
 10328   0022D8  5022               	movf	___flmul@aexp^0,w,c
 10329   0022DA  B4D8               	btfsc	status,2,c
 10330   0022DC  EF72  F011         	goto	u3431
 10331   0022E0  EF74  F011         	goto	u3430
 10332   0022E4                     u3431:
 10333   0022E4  EF87  F011         	goto	l4166
 10334   0022E8                     u3430:
 10335   0022E8  2822               	incf	___flmul@aexp^0,w,c
 10336   0022EA  A4D8               	btfss	status,2,c
 10337   0022EC  EF7A  F011         	goto	u3441
 10338   0022F0  EF7C  F011         	goto	u3440
 10339   0022F4                     u3441:
 10340   0022F4  EF84  F011         	goto	l4164
 10341   0022F8                     u3440:
 10342   0022F8  0E00               	movlw	0
 10343   0022FA  6E15               	movwf	___flmul@a^0,c
 10344   0022FC  0E00               	movlw	0
 10345   0022FE  6E16               	movwf	(___flmul@a+1)^0,c
 10346   002300  0E00               	movlw	0
 10347   002302  6E17               	movwf	(___flmul@a+2)^0,c
 10348   002304  0E00               	movlw	0
 10349   002306  6E18               	movwf	(___flmul@a+3)^0,c
 10350   002308                     l4164:
 10351   002308  8E17               	bsf	(___flmul@a+2)^0,7,c
 10352   00230A  EF8F  F011         	goto	l1269
 10353   00230E                     l4166:
 10354   00230E  0E00               	movlw	0
 10355   002310  6E15               	movwf	___flmul@a^0,c
 10356   002312  0E00               	movlw	0
 10357   002314  6E16               	movwf	(___flmul@a+1)^0,c
 10358   002316  0E00               	movlw	0
 10359   002318  6E17               	movwf	(___flmul@a+2)^0,c
 10360   00231A  0E00               	movlw	0
 10361   00231C  6E18               	movwf	(___flmul@a+3)^0,c
 10362   00231E                     l1269:
 10363   00231E  5022               	movf	___flmul@aexp^0,w,c
 10364   002320  B4D8               	btfsc	status,2,c
 10365   002322  EF95  F011         	goto	u3451
 10366   002326  EF97  F011         	goto	u3450
 10367   00232A                     u3451:
 10368   00232A  EF9F  F011         	goto	l4170
 10369   00232E                     u3450:
 10370   00232E  5023               	movf	___flmul@bexp^0,w,c
 10371   002330  A4D8               	btfss	status,2,c
 10372   002332  EF9D  F011         	goto	u3461
 10373   002336  EF9F  F011         	goto	u3460
 10374   00233A                     u3461:
 10375   00233A  EFA9  F011         	goto	l4174
 10376   00233E                     u3460:
 10377   00233E                     l4170:
 10378   00233E  0E00               	movlw	0
 10379   002340  6E11               	movwf	?___flmul^0,c
 10380   002342  0E00               	movlw	0
 10381   002344  6E12               	movwf	(?___flmul+1)^0,c
 10382   002346  0E00               	movlw	0
 10383   002348  6E13               	movwf	(?___flmul+2)^0,c
 10384   00234A  0E00               	movlw	0
 10385   00234C  6E14               	movwf	(?___flmul+3)^0,c
 10386   00234E  EF41  F013         	goto	l1273
 10387   002352                     l4174:
 10388   002352  5017               	movf	(___flmul@a+2)^0,w,c
 10389   002354  0211               	mulwf	___flmul@b^0,c
 10390   002356  CFF3 F028          	movff	prodl,___flmul@temp
 10391   00235A  CFF4 F029          	movff	prodh,___flmul@temp+1
 10392   00235E  5028               	movf	___flmul@temp^0,w,c
 10393   002360  6E1E               	movwf	___flmul@grs^0,c
 10394   002362  6A1F               	clrf	(___flmul@grs+1)^0,c
 10395   002364  6A20               	clrf	(___flmul@grs+2)^0,c
 10396   002366  6A21               	clrf	(___flmul@grs+3)^0,c
 10397   002368  5029               	movf	(___flmul@temp+1)^0,w,c
 10398   00236A  6E24               	movwf	___flmul@prod^0,c
 10399   00236C  6A25               	clrf	(___flmul@prod+1)^0,c
 10400   00236E  6A26               	clrf	(___flmul@prod+2)^0,c
 10401   002370  6A27               	clrf	(___flmul@prod+3)^0,c
 10402   002372  5016               	movf	(___flmul@a+1)^0,w,c
 10403   002374  0212               	mulwf	(___flmul@b+1)^0,c
 10404   002376  CFF3 F028          	movff	prodl,___flmul@temp
 10405   00237A  CFF4 F029          	movff	prodh,___flmul@temp+1
 10406   00237E  5028               	movf	___flmul@temp^0,w,c
 10407   002380  261E               	addwf	___flmul@grs^0,f,c
 10408   002382  0E00               	movlw	0
 10409   002384  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10410   002386  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10411   002388  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10412   00238A  5029               	movf	(___flmul@temp+1)^0,w,c
 10413   00238C  2624               	addwf	___flmul@prod^0,f,c
 10414   00238E  0E00               	movlw	0
 10415   002390  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10416   002392  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10417   002394  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10418   002396  5015               	movf	___flmul@a^0,w,c
 10419   002398  0213               	mulwf	(___flmul@b+2)^0,c
 10420   00239A  CFF3 F028          	movff	prodl,___flmul@temp
 10421   00239E  CFF4 F029          	movff	prodh,___flmul@temp+1
 10422   0023A2  5028               	movf	___flmul@temp^0,w,c
 10423   0023A4  261E               	addwf	___flmul@grs^0,f,c
 10424   0023A6  0E00               	movlw	0
 10425   0023A8  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10426   0023AA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10427   0023AC  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10428   0023AE  5029               	movf	(___flmul@temp+1)^0,w,c
 10429   0023B0  2624               	addwf	___flmul@prod^0,f,c
 10430   0023B2  0E00               	movlw	0
 10431   0023B4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10432   0023B6  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10433   0023B8  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10434   0023BA  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10435   0023BE  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10436   0023C2  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10437   0023C6  6A1E               	clrf	___flmul@grs^0,c
 10438   0023C8  5015               	movf	___flmul@a^0,w,c
 10439   0023CA  0212               	mulwf	(___flmul@b+1)^0,c
 10440   0023CC  CFF3 F028          	movff	prodl,___flmul@temp
 10441   0023D0  CFF4 F029          	movff	prodh,___flmul@temp+1
 10442   0023D4  5028               	movf	___flmul@temp^0,w,c
 10443   0023D6  261E               	addwf	___flmul@grs^0,f,c
 10444   0023D8  5029               	movf	(___flmul@temp+1)^0,w,c
 10445   0023DA  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10446   0023DC  0E00               	movlw	0
 10447   0023DE  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10448   0023E0  0E00               	movlw	0
 10449   0023E2  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10450   0023E4  5016               	movf	(___flmul@a+1)^0,w,c
 10451   0023E6  0211               	mulwf	___flmul@b^0,c
 10452   0023E8  CFF3 F028          	movff	prodl,___flmul@temp
 10453   0023EC  CFF4 F029          	movff	prodh,___flmul@temp+1
 10454   0023F0  5028               	movf	___flmul@temp^0,w,c
 10455   0023F2  261E               	addwf	___flmul@grs^0,f,c
 10456   0023F4  5029               	movf	(___flmul@temp+1)^0,w,c
 10457   0023F6  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10458   0023F8  0E00               	movlw	0
 10459   0023FA  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10460   0023FC  0E00               	movlw	0
 10461   0023FE  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10462   002400  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10463   002404  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10464   002408  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10465   00240C  6A1E               	clrf	___flmul@grs^0,c
 10466   00240E  5015               	movf	___flmul@a^0,w,c
 10467   002410  0211               	mulwf	___flmul@b^0,c
 10468   002412  CFF3 F028          	movff	prodl,___flmul@temp
 10469   002416  CFF4 F029          	movff	prodh,___flmul@temp+1
 10470   00241A  5028               	movf	___flmul@temp^0,w,c
 10471   00241C  261E               	addwf	___flmul@grs^0,f,c
 10472   00241E  5029               	movf	(___flmul@temp+1)^0,w,c
 10473   002420  221F               	addwfc	(___flmul@grs+1)^0,f,c
 10474   002422  0E00               	movlw	0
 10475   002424  2220               	addwfc	(___flmul@grs+2)^0,f,c
 10476   002426  0E00               	movlw	0
 10477   002428  2221               	addwfc	(___flmul@grs+3)^0,f,c
 10478   00242A  5017               	movf	(___flmul@a+2)^0,w,c
 10479   00242C  0212               	mulwf	(___flmul@b+1)^0,c
 10480   00242E  CFF3 F028          	movff	prodl,___flmul@temp
 10481   002432  CFF4 F029          	movff	prodh,___flmul@temp+1
 10482   002436  5028               	movf	___flmul@temp^0,w,c
 10483   002438  2624               	addwf	___flmul@prod^0,f,c
 10484   00243A  5029               	movf	(___flmul@temp+1)^0,w,c
 10485   00243C  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10486   00243E  0E00               	movlw	0
 10487   002440  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10488   002442  0E00               	movlw	0
 10489   002444  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10490   002446  5016               	movf	(___flmul@a+1)^0,w,c
 10491   002448  0213               	mulwf	(___flmul@b+2)^0,c
 10492   00244A  CFF3 F028          	movff	prodl,___flmul@temp
 10493   00244E  CFF4 F029          	movff	prodh,___flmul@temp+1
 10494   002452  5028               	movf	___flmul@temp^0,w,c
 10495   002454  2624               	addwf	___flmul@prod^0,f,c
 10496   002456  5029               	movf	(___flmul@temp+1)^0,w,c
 10497   002458  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10498   00245A  0E00               	movlw	0
 10499   00245C  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10500   00245E  0E00               	movlw	0
 10501   002460  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10502   002462  5017               	movf	(___flmul@a+2)^0,w,c
 10503   002464  0213               	mulwf	(___flmul@b+2)^0,c
 10504   002466  CFF3 F028          	movff	prodl,___flmul@temp
 10505   00246A  CFF4 F029          	movff	prodh,___flmul@temp+1
 10506   00246E  5028               	movf	___flmul@temp^0,w,c
 10507   002470  6E19               	movwf	??___flmul^0,c
 10508   002472  5029               	movf	(___flmul@temp+1)^0,w,c
 10509   002474  6E1A               	movwf	(??___flmul+1)^0,c
 10510   002476  6A1B               	clrf	(??___flmul+2)^0,c
 10511   002478  6A1C               	clrf	(??___flmul+3)^0,c
 10512   00247A  C01B  F01C         	movff	??___flmul+2,??___flmul+3
 10513   00247E  C01A  F01B         	movff	??___flmul+1,??___flmul+2
 10514   002482  C019  F01A         	movff	??___flmul,??___flmul+1
 10515   002486  6A19               	clrf	??___flmul^0,c
 10516   002488  5019               	movf	??___flmul^0,w,c
 10517   00248A  2624               	addwf	___flmul@prod^0,f,c
 10518   00248C  501A               	movf	(??___flmul+1)^0,w,c
 10519   00248E  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10520   002490  501B               	movf	(??___flmul+2)^0,w,c
 10521   002492  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10522   002494  501C               	movf	(??___flmul+3)^0,w,c
 10523   002496  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10524   002498  C01E  F019         	movff	___flmul@grs,??___flmul
 10525   00249C  C01F  F01A         	movff	___flmul@grs+1,??___flmul+1
 10526   0024A0  C020  F01B         	movff	___flmul@grs+2,??___flmul+2
 10527   0024A4  C021  F01C         	movff	___flmul@grs+3,??___flmul+3
 10528   0024A8  0E19               	movlw	25
 10529   0024AA  EF5C  F012         	goto	u3470
 10530   0024AE                     u3475:
 10531   0024AE  90D8               	bcf	status,0,c
 10532   0024B0  321C               	rrcf	(??___flmul+3)^0,f,c
 10533   0024B2  321B               	rrcf	(??___flmul+2)^0,f,c
 10534   0024B4  321A               	rrcf	(??___flmul+1)^0,f,c
 10535   0024B6  3219               	rrcf	??___flmul^0,f,c
 10536   0024B8                     u3470:
 10537   0024B8  2EE8               	decfsz	wreg,f,c
 10538   0024BA  EF57  F012         	goto	u3475
 10539   0024BE  5019               	movf	??___flmul^0,w,c
 10540   0024C0  2624               	addwf	___flmul@prod^0,f,c
 10541   0024C2  501A               	movf	(??___flmul+1)^0,w,c
 10542   0024C4  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10543   0024C6  501B               	movf	(??___flmul+2)^0,w,c
 10544   0024C8  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10545   0024CA  501C               	movf	(??___flmul+3)^0,w,c
 10546   0024CC  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10547   0024CE  C020  F021         	movff	___flmul@grs+2,___flmul@grs+3
 10548   0024D2  C01F  F020         	movff	___flmul@grs+1,___flmul@grs+2
 10549   0024D6  C01E  F01F         	movff	___flmul@grs,___flmul@grs+1
 10550   0024DA  6A1E               	clrf	___flmul@grs^0,c
 10551   0024DC  5022               	movf	___flmul@aexp^0,w,c
 10552   0024DE  C023  F019         	movff	___flmul@bexp,??___flmul
 10553   0024E2  6A1A               	clrf	(??___flmul+1)^0,c
 10554   0024E4  2619               	addwf	??___flmul^0,f,c
 10555   0024E6  0E00               	movlw	0
 10556   0024E8  221A               	addwfc	(??___flmul+1)^0,f,c
 10557   0024EA  0E82               	movlw	130
 10558   0024EC  2419               	addwf	??___flmul^0,w,c
 10559   0024EE  6E28               	movwf	___flmul@temp^0,c
 10560   0024F0  0EFF               	movlw	255
 10561   0024F2  201A               	addwfc	(??___flmul+1)^0,w,c
 10562   0024F4  6E29               	movwf	(___flmul@temp+1)^0,c
 10563   0024F6  EF92  F012         	goto	l4222
 10564   0024FA                     l4216:
 10565   0024FA  90D8               	bcf	status,0,c
 10566   0024FC  3624               	rlcf	___flmul@prod^0,f,c
 10567   0024FE  3625               	rlcf	(___flmul@prod+1)^0,f,c
 10568   002500  3626               	rlcf	(___flmul@prod+2)^0,f,c
 10569   002502  3627               	rlcf	(___flmul@prod+3)^0,f,c
 10570   002504  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10571   002506  EF87  F012         	goto	u3481
 10572   00250A  EF89  F012         	goto	u3480
 10573   00250E                     u3481:
 10574   00250E  EF8A  F012         	goto	l1276
 10575   002512                     u3480:
 10576   002512  8024               	bsf	___flmul@prod^0,0,c
 10577   002514                     l1276:
 10578   002514  90D8               	bcf	status,0,c
 10579   002516  361E               	rlcf	___flmul@grs^0,f,c
 10580   002518  361F               	rlcf	(___flmul@grs+1)^0,f,c
 10581   00251A  3620               	rlcf	(___flmul@grs+2)^0,f,c
 10582   00251C  3621               	rlcf	(___flmul@grs+3)^0,f,c
 10583   00251E  0628               	decf	___flmul@temp^0,f,c
 10584   002520  A0D8               	btfss	status,0,c
 10585   002522  0629               	decf	(___flmul@temp+1)^0,f,c
 10586   002524                     l4222:
 10587   002524  AE26               	btfss	(___flmul@prod+2)^0,7,c
 10588   002526  EF97  F012         	goto	u3491
 10589   00252A  EF99  F012         	goto	u3490
 10590   00252E                     u3491:
 10591   00252E  EF7D  F012         	goto	l4216
 10592   002532                     u3490:
 10593   002532  0E00               	movlw	0
 10594   002534  6E22               	movwf	___flmul@aexp^0,c
 10595   002536  AE21               	btfss	(___flmul@grs+3)^0,7,c
 10596   002538  EFA0  F012         	goto	u3501
 10597   00253C  EFA2  F012         	goto	u3500
 10598   002540                     u3501:
 10599   002540  EFC6  F012         	goto	l1278
 10600   002544                     u3500:
 10601   002544  0EFF               	movlw	255
 10602   002546  141E               	andwf	___flmul@grs^0,w,c
 10603   002548  6E19               	movwf	??___flmul^0,c
 10604   00254A  0EFF               	movlw	255
 10605   00254C  141F               	andwf	(___flmul@grs+1)^0,w,c
 10606   00254E  6E1A               	movwf	(??___flmul+1)^0,c
 10607   002550  0EFF               	movlw	255
 10608   002552  1420               	andwf	(___flmul@grs+2)^0,w,c
 10609   002554  6E1B               	movwf	(??___flmul+2)^0,c
 10610   002556  0E7F               	movlw	127
 10611   002558  1421               	andwf	(___flmul@grs+3)^0,w,c
 10612   00255A  6E1C               	movwf	(??___flmul+3)^0,c
 10613   00255C  5019               	movf	??___flmul^0,w,c
 10614   00255E  101A               	iorwf	(??___flmul+1)^0,w,c
 10615   002560  101B               	iorwf	(??___flmul+2)^0,w,c
 10616   002562  101C               	iorwf	(??___flmul+3)^0,w,c
 10617   002564  B4D8               	btfsc	status,2,c
 10618   002566  EFB7  F012         	goto	u3511
 10619   00256A  EFB9  F012         	goto	u3510
 10620   00256E                     u3511:
 10621   00256E  EFBD  F012         	goto	l1279
 10622   002572                     u3510:
 10623   002572                     l4230:
 10624   002572  0E01               	movlw	1
 10625   002574  6E22               	movwf	___flmul@aexp^0,c
 10626   002576  EFC6  F012         	goto	l1278
 10627   00257A                     l1279:
 10628   00257A  A024               	btfss	___flmul@prod^0,0,c
 10629   00257C  EFC2  F012         	goto	u3521
 10630   002580  EFC4  F012         	goto	u3520
 10631   002584                     u3521:
 10632   002584  EFC6  F012         	goto	l1278
 10633   002588                     u3520:
 10634   002588  EFB9  F012         	goto	l4230
 10635   00258C                     l1278:
 10636   00258C  5022               	movf	___flmul@aexp^0,w,c
 10637   00258E  B4D8               	btfsc	status,2,c
 10638   002590  EFCC  F012         	goto	u3531
 10639   002594  EFCE  F012         	goto	u3530
 10640   002598                     u3531:
 10641   002598  EFF2  F012         	goto	l4242
 10642   00259C                     u3530:
 10643   00259C  0E01               	movlw	1
 10644   00259E  2624               	addwf	___flmul@prod^0,f,c
 10645   0025A0  0E00               	movlw	0
 10646   0025A2  2225               	addwfc	(___flmul@prod+1)^0,f,c
 10647   0025A4  2226               	addwfc	(___flmul@prod+2)^0,f,c
 10648   0025A6  2227               	addwfc	(___flmul@prod+3)^0,f,c
 10649   0025A8  A027               	btfss	(___flmul@prod+3)^0,0,c
 10650   0025AA  EFD9  F012         	goto	u3541
 10651   0025AE  EFDB  F012         	goto	u3540
 10652   0025B2                     u3541:
 10653   0025B2  EFF2  F012         	goto	l4242
 10654   0025B6                     u3540:
 10655   0025B6  C024  F019         	movff	___flmul@prod,??___flmul
 10656   0025BA  C025  F01A         	movff	___flmul@prod+1,??___flmul+1
 10657   0025BE  C026  F01B         	movff	___flmul@prod+2,??___flmul+2
 10658   0025C2  C027  F01C         	movff	___flmul@prod+3,??___flmul+3
 10659   0025C6  341C               	rlcf	(??___flmul+3)^0,w,c
 10660   0025C8  321C               	rrcf	(??___flmul+3)^0,f,c
 10661   0025CA  321B               	rrcf	(??___flmul+2)^0,f,c
 10662   0025CC  321A               	rrcf	(??___flmul+1)^0,f,c
 10663   0025CE  3219               	rrcf	??___flmul^0,f,c
 10664   0025D0  C019  F024         	movff	??___flmul,___flmul@prod
 10665   0025D4  C01A  F025         	movff	??___flmul+1,___flmul@prod+1
 10666   0025D8  C01B  F026         	movff	??___flmul+2,___flmul@prod+2
 10667   0025DC  C01C  F027         	movff	??___flmul+3,___flmul@prod+3
 10668   0025E0  4A28               	infsnz	___flmul@temp^0,f,c
 10669   0025E2  2A29               	incf	(___flmul@temp+1)^0,f,c
 10670   0025E4                     l4242:
 10671   0025E4  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10672   0025E6  EFFD  F012         	goto	u3551
 10673   0025EA  5029               	movf	(___flmul@temp+1)^0,w,c
 10674   0025EC  E108               	bnz	u3550
 10675   0025EE  2828               	incf	___flmul@temp^0,w,c
 10676   0025F0  A0D8               	btfss	status,0,c
 10677   0025F2  EFFD  F012         	goto	u3551
 10678   0025F6  EFFF  F012         	goto	u3550
 10679   0025FA                     u3551:
 10680   0025FA  EF09  F013         	goto	l4246
 10681   0025FE                     u3550:
 10682   0025FE  0E00               	movlw	0
 10683   002600  6E24               	movwf	___flmul@prod^0,c
 10684   002602  0E00               	movlw	0
 10685   002604  6E25               	movwf	(___flmul@prod+1)^0,c
 10686   002606  0E80               	movlw	128
 10687   002608  6E26               	movwf	(___flmul@prod+2)^0,c
 10688   00260A  0E7F               	movlw	127
 10689   00260C  6E27               	movwf	(___flmul@prod+3)^0,c
 10690   00260E  EF37  F013         	goto	l4258
 10691   002612                     l4246:
 10692   002612  BE29               	btfsc	(___flmul@temp+1)^0,7,c
 10693   002614  EF16  F013         	goto	u3560
 10694   002618  5029               	movf	(___flmul@temp+1)^0,w,c
 10695   00261A  E106               	bnz	u3561
 10696   00261C  0428               	decf	___flmul@temp^0,w,c
 10697   00261E  B0D8               	btfsc	status,0,c
 10698   002620  EF14  F013         	goto	u3561
 10699   002624  EF16  F013         	goto	u3560
 10700   002628                     u3561:
 10701   002628  EF22  F013         	goto	l1286
 10702   00262C                     u3560:
 10703   00262C  0E00               	movlw	0
 10704   00262E  6E24               	movwf	___flmul@prod^0,c
 10705   002630  0E00               	movlw	0
 10706   002632  6E25               	movwf	(___flmul@prod+1)^0,c
 10707   002634  0E00               	movlw	0
 10708   002636  6E26               	movwf	(___flmul@prod+2)^0,c
 10709   002638  0E00               	movlw	0
 10710   00263A  6E27               	movwf	(___flmul@prod+3)^0,c
 10711   00263C  0E00               	movlw	0
 10712   00263E  6E1D               	movwf	___flmul@sign^0,c
 10713   002640  EF37  F013         	goto	l4258
 10714   002644                     l1286:
 10715   002644  C028  F023         	movff	___flmul@temp,___flmul@bexp
 10716   002648  0EFF               	movlw	255
 10717   00264A  1624               	andwf	___flmul@prod^0,f,c
 10718   00264C  0EFF               	movlw	255
 10719   00264E  1625               	andwf	(___flmul@prod+1)^0,f,c
 10720   002650  0E7F               	movlw	127
 10721   002652  1626               	andwf	(___flmul@prod+2)^0,f,c
 10722   002654  0E00               	movlw	0
 10723   002656  1627               	andwf	(___flmul@prod+3)^0,f,c
 10724   002658  A023               	btfss	___flmul@bexp^0,0,c
 10725   00265A  EF31  F013         	goto	u3571
 10726   00265E  EF33  F013         	goto	u3570
 10727   002662                     u3571:
 10728   002662  EF34  F013         	goto	l4256
 10729   002666                     u3570:
 10730   002666  8E26               	bsf	(___flmul@prod+2)^0,7,c
 10731   002668                     l4256:
 10732   002668  90D8               	bcf	status,0,c
 10733   00266A  3023               	rrcf	___flmul@bexp^0,w,c
 10734   00266C  6E27               	movwf	(___flmul@prod+3)^0,c
 10735   00266E                     l4258:
 10736   00266E  501D               	movf	___flmul@sign^0,w,c
 10737   002670  1227               	iorwf	(___flmul@prod+3)^0,f,c
 10738   002672  C024  F011         	movff	___flmul@prod,?___flmul
 10739   002676  C025  F012         	movff	___flmul@prod+1,?___flmul+1
 10740   00267A  C026  F013         	movff	___flmul@prod+2,?___flmul+2
 10741   00267E  C027  F014         	movff	___flmul@prod+3,?___flmul+3
 10742   002682                     l1273:
 10743   002682  0012               	return		;funcret
 10744   002684                     __end_of___flmul:
 10745                           	callstack 0
 10746                           
 10747 ;; *************** function ___flge *****************
 10748 ;; Defined at:
 10749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
 10750 ;; Parameters:    Size  Location     Type
 10751 ;;  ff1             4   41[COMRAM] unsigned char 
 10752 ;;  ff2             4   45[COMRAM] unsigned char 
 10753 ;; Auto vars:     Size  Location     Type
 10754 ;;		None
 10755 ;; Return value:  Size  Location     Type
 10756 ;;		None               void
 10757 ;; Registers used:
 10758 ;;		wreg, status,2, status,0
 10759 ;; Tracked objects:
 10760 ;;		On entry : 0/0
 10761 ;;		On exit  : 0/0
 10762 ;;		Unchanged: 0/0
 10763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10764 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10767 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10768 ;;Total ram usage:       12 bytes
 10769 ;; Hardware stack levels used: 1
 10770 ;; This function calls:
 10771 ;;		Nothing
 10772 ;; This function is called by:
 10773 ;;		_Colour_decider
 10774 ;;		_efgtoa
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text55
 10779   004048                     __ptext55:
 10780                           	callstack 0
 10781   004048                     ___flge:
 10782                           	callstack 26
 10783   004048  0E00               	movlw	0
 10784   00404A  142A               	andwf	___flge@ff1^0,w,c
 10785   00404C  6E32               	movwf	??___flge^0,c
 10786   00404E  0E00               	movlw	0
 10787   004050  142B               	andwf	(___flge@ff1+1)^0,w,c
 10788   004052  6E33               	movwf	(??___flge+1)^0,c
 10789   004054  0E80               	movlw	128
 10790   004056  142C               	andwf	(___flge@ff1+2)^0,w,c
 10791   004058  6E34               	movwf	(??___flge+2)^0,c
 10792   00405A  0E7F               	movlw	127
 10793   00405C  142D               	andwf	(___flge@ff1+3)^0,w,c
 10794   00405E  6E35               	movwf	(??___flge+3)^0,c
 10795   004060  5032               	movf	??___flge^0,w,c
 10796   004062  1033               	iorwf	(??___flge+1)^0,w,c
 10797   004064  1034               	iorwf	(??___flge+2)^0,w,c
 10798   004066  1035               	iorwf	(??___flge+3)^0,w,c
 10799   004068  A4D8               	btfss	status,2,c
 10800   00406A  EF39  F020         	goto	u3611
 10801   00406E  EF3B  F020         	goto	u3610
 10802   004072                     u3611:
 10803   004072  EF43  F020         	goto	l4290
 10804   004076                     u3610:
 10805   004076  0E00               	movlw	0
 10806   004078  6E2A               	movwf	___flge@ff1^0,c
 10807   00407A  0E00               	movlw	0
 10808   00407C  6E2B               	movwf	(___flge@ff1+1)^0,c
 10809   00407E  0E00               	movlw	0
 10810   004080  6E2C               	movwf	(___flge@ff1+2)^0,c
 10811   004082  0E00               	movlw	0
 10812   004084  6E2D               	movwf	(___flge@ff1+3)^0,c
 10813   004086                     l4290:
 10814   004086  0E00               	movlw	0
 10815   004088  142E               	andwf	___flge@ff2^0,w,c
 10816   00408A  6E32               	movwf	??___flge^0,c
 10817   00408C  0E00               	movlw	0
 10818   00408E  142F               	andwf	(___flge@ff2+1)^0,w,c
 10819   004090  6E33               	movwf	(??___flge+1)^0,c
 10820   004092  0E80               	movlw	128
 10821   004094  1430               	andwf	(___flge@ff2+2)^0,w,c
 10822   004096  6E34               	movwf	(??___flge+2)^0,c
 10823   004098  0E7F               	movlw	127
 10824   00409A  1431               	andwf	(___flge@ff2+3)^0,w,c
 10825   00409C  6E35               	movwf	(??___flge+3)^0,c
 10826   00409E  5032               	movf	??___flge^0,w,c
 10827   0040A0  1033               	iorwf	(??___flge+1)^0,w,c
 10828   0040A2  1034               	iorwf	(??___flge+2)^0,w,c
 10829   0040A4  1035               	iorwf	(??___flge+3)^0,w,c
 10830   0040A6  A4D8               	btfss	status,2,c
 10831   0040A8  EF58  F020         	goto	u3621
 10832   0040AC  EF5A  F020         	goto	u3620
 10833   0040B0                     u3621:
 10834   0040B0  EF62  F020         	goto	l4294
 10835   0040B4                     u3620:
 10836   0040B4  0E00               	movlw	0
 10837   0040B6  6E2E               	movwf	___flge@ff2^0,c
 10838   0040B8  0E00               	movlw	0
 10839   0040BA  6E2F               	movwf	(___flge@ff2+1)^0,c
 10840   0040BC  0E00               	movlw	0
 10841   0040BE  6E30               	movwf	(___flge@ff2+2)^0,c
 10842   0040C0  0E00               	movlw	0
 10843   0040C2  6E31               	movwf	(___flge@ff2+3)^0,c
 10844   0040C4                     l4294:
 10845   0040C4  AE2D               	btfss	(___flge@ff1+3)^0,7,c
 10846   0040C6  EF67  F020         	goto	u3631
 10847   0040CA  EF69  F020         	goto	u3630
 10848   0040CE                     u3631:
 10849   0040CE  EF72  F020         	goto	l4298
 10850   0040D2                     u3630:
 10851   0040D2  6C2A               	negf	___flge@ff1^0,c
 10852   0040D4  1E2B               	comf	(___flge@ff1+1)^0,f,c
 10853   0040D6  B0D8               	btfsc	status,0,c
 10854   0040D8  2A2B               	incf	(___flge@ff1+1)^0,f,c
 10855   0040DA  1E2C               	comf	(___flge@ff1+2)^0,f,c
 10856   0040DC  B0D8               	btfsc	status,0,c
 10857   0040DE  2A2C               	incf	(___flge@ff1+2)^0,f,c
 10858   0040E0  0E80               	movlw	128
 10859   0040E2  562D               	subfwb	(___flge@ff1+3)^0,f,c
 10860   0040E4                     l4298:
 10861   0040E4  AE31               	btfss	(___flge@ff2+3)^0,7,c
 10862   0040E6  EF77  F020         	goto	u3641
 10863   0040EA  EF79  F020         	goto	u3640
 10864   0040EE                     u3641:
 10865   0040EE  EF82  F020         	goto	l920
 10866   0040F2                     u3640:
 10867   0040F2  6C2E               	negf	___flge@ff2^0,c
 10868   0040F4  1E2F               	comf	(___flge@ff2+1)^0,f,c
 10869   0040F6  B0D8               	btfsc	status,0,c
 10870   0040F8  2A2F               	incf	(___flge@ff2+1)^0,f,c
 10871   0040FA  1E30               	comf	(___flge@ff2+2)^0,f,c
 10872   0040FC  B0D8               	btfsc	status,0,c
 10873   0040FE  2A30               	incf	(___flge@ff2+2)^0,f,c
 10874   004100  0E80               	movlw	128
 10875   004102  5631               	subfwb	(___flge@ff2+3)^0,f,c
 10876   004104                     l920:
 10877   004104  0E00               	movlw	0
 10878   004106  1A2A               	xorwf	___flge@ff1^0,f,c
 10879   004108  0E00               	movlw	0
 10880   00410A  1A2B               	xorwf	(___flge@ff1+1)^0,f,c
 10881   00410C  0E00               	movlw	0
 10882   00410E  1A2C               	xorwf	(___flge@ff1+2)^0,f,c
 10883   004110  0E80               	movlw	128
 10884   004112  1A2D               	xorwf	(___flge@ff1+3)^0,f,c
 10885   004114  0E00               	movlw	0
 10886   004116  1A2E               	xorwf	___flge@ff2^0,f,c
 10887   004118  0E00               	movlw	0
 10888   00411A  1A2F               	xorwf	(___flge@ff2+1)^0,f,c
 10889   00411C  0E00               	movlw	0
 10890   00411E  1A30               	xorwf	(___flge@ff2+2)^0,f,c
 10891   004120  0E80               	movlw	128
 10892   004122  1A31               	xorwf	(___flge@ff2+3)^0,f,c
 10893   004124  502E               	movf	___flge@ff2^0,w,c
 10894   004126  5C2A               	subwf	___flge@ff1^0,w,c
 10895   004128  502F               	movf	(___flge@ff2+1)^0,w,c
 10896   00412A  582B               	subwfb	(___flge@ff1+1)^0,w,c
 10897   00412C  5030               	movf	(___flge@ff2+2)^0,w,c
 10898   00412E  582C               	subwfb	(___flge@ff1+2)^0,w,c
 10899   004130  5031               	movf	(___flge@ff2+3)^0,w,c
 10900   004132  582D               	subwfb	(___flge@ff1+3)^0,w,c
 10901   004134  B0D8               	btfsc	status,0,c
 10902   004136  EF9F  F020         	goto	u3651
 10903   00413A  EFA1  F020         	goto	u3650
 10904   00413E                     u3651:
 10905   00413E  EFA4  F020         	goto	l4304
 10906   004142                     u3650:
 10907   004142  90D8               	bcf	status,0,c
 10908   004144  EFA5  F020         	goto	l925
 10909   004148                     l4304:
 10910   004148  80D8               	bsf	status,0,c
 10911   00414A                     l925:
 10912   00414A  0012               	return		;funcret
 10913   00414C                     __end_of___flge:
 10914                           	callstack 0
 10915                           
 10916 ;; *************** function ___fleq *****************
 10917 ;; Defined at:
 10918 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;  ff1             4   49[COMRAM] unsigned char 
 10921 ;;  ff2             4   53[COMRAM] unsigned char 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;		None               void
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10933 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10936 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10937 ;;Total ram usage:       12 bytes
 10938 ;; Hardware stack levels used: 1
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_Colour_decider
 10943 ;;		_efgtoa
 10944 ;; This function uses a non-reentrant model
 10945 ;;
 10946                           
 10947                           	psect	text56
 10948   004314                     __ptext56:
 10949                           	callstack 0
 10950   004314                     ___fleq:
 10951                           	callstack 26
 10952   004314  0E00               	movlw	0
 10953   004316  1432               	andwf	___fleq@ff1^0,w,c
 10954   004318  6E3A               	movwf	??___fleq^0,c
 10955   00431A  0E00               	movlw	0
 10956   00431C  1433               	andwf	(___fleq@ff1+1)^0,w,c
 10957   00431E  6E3B               	movwf	(??___fleq+1)^0,c
 10958   004320  0E80               	movlw	128
 10959   004322  1434               	andwf	(___fleq@ff1+2)^0,w,c
 10960   004324  6E3C               	movwf	(??___fleq+2)^0,c
 10961   004326  0E7F               	movlw	127
 10962   004328  1435               	andwf	(___fleq@ff1+3)^0,w,c
 10963   00432A  6E3D               	movwf	(??___fleq+3)^0,c
 10964   00432C  503A               	movf	??___fleq^0,w,c
 10965   00432E  103B               	iorwf	(??___fleq+1)^0,w,c
 10966   004330  103C               	iorwf	(??___fleq+2)^0,w,c
 10967   004332  103D               	iorwf	(??___fleq+3)^0,w,c
 10968   004334  A4D8               	btfss	status,2,c
 10969   004336  EF9F  F021         	goto	u3581
 10970   00433A  EFA1  F021         	goto	u3580
 10971   00433E                     u3581:
 10972   00433E  EFA9  F021         	goto	l4274
 10973   004342                     u3580:
 10974   004342  0E00               	movlw	0
 10975   004344  6E32               	movwf	___fleq@ff1^0,c
 10976   004346  0E00               	movlw	0
 10977   004348  6E33               	movwf	(___fleq@ff1+1)^0,c
 10978   00434A  0E00               	movlw	0
 10979   00434C  6E34               	movwf	(___fleq@ff1+2)^0,c
 10980   00434E  0E00               	movlw	0
 10981   004350  6E35               	movwf	(___fleq@ff1+3)^0,c
 10982   004352                     l4274:
 10983   004352  0E00               	movlw	0
 10984   004354  1436               	andwf	___fleq@ff2^0,w,c
 10985   004356  6E3A               	movwf	??___fleq^0,c
 10986   004358  0E00               	movlw	0
 10987   00435A  1437               	andwf	(___fleq@ff2+1)^0,w,c
 10988   00435C  6E3B               	movwf	(??___fleq+1)^0,c
 10989   00435E  0E80               	movlw	128
 10990   004360  1438               	andwf	(___fleq@ff2+2)^0,w,c
 10991   004362  6E3C               	movwf	(??___fleq+2)^0,c
 10992   004364  0E7F               	movlw	127
 10993   004366  1439               	andwf	(___fleq@ff2+3)^0,w,c
 10994   004368  6E3D               	movwf	(??___fleq+3)^0,c
 10995   00436A  503A               	movf	??___fleq^0,w,c
 10996   00436C  103B               	iorwf	(??___fleq+1)^0,w,c
 10997   00436E  103C               	iorwf	(??___fleq+2)^0,w,c
 10998   004370  103D               	iorwf	(??___fleq+3)^0,w,c
 10999   004372  A4D8               	btfss	status,2,c
 11000   004374  EFBE  F021         	goto	u3591
 11001   004378  EFC0  F021         	goto	u3590
 11002   00437C                     u3591:
 11003   00437C  EFC8  F021         	goto	l4278
 11004   004380                     u3590:
 11005   004380  0E00               	movlw	0
 11006   004382  6E36               	movwf	___fleq@ff2^0,c
 11007   004384  0E00               	movlw	0
 11008   004386  6E37               	movwf	(___fleq@ff2+1)^0,c
 11009   004388  0E00               	movlw	0
 11010   00438A  6E38               	movwf	(___fleq@ff2+2)^0,c
 11011   00438C  0E00               	movlw	0
 11012   00438E  6E39               	movwf	(___fleq@ff2+3)^0,c
 11013   004390                     l4278:
 11014   004390  5036               	movf	___fleq@ff2^0,w,c
 11015   004392  1832               	xorwf	___fleq@ff1^0,w,c
 11016   004394  E10F               	bnz	u3600
 11017   004396  5037               	movf	(___fleq@ff2+1)^0,w,c
 11018   004398  1833               	xorwf	(___fleq@ff1+1)^0,w,c
 11019   00439A  E10C               	bnz	u3600
 11020   00439C  5038               	movf	(___fleq@ff2+2)^0,w,c
 11021   00439E  1834               	xorwf	(___fleq@ff1+2)^0,w,c
 11022   0043A0  E109               	bnz	u3600
 11023   0043A2  5039               	movf	(___fleq@ff2+3)^0,w,c
 11024   0043A4  1835               	xorwf	(___fleq@ff1+3)^0,w,c
 11025   0043A6  B4D8               	btfsc	status,2,c
 11026   0043A8  EFD8  F021         	goto	u3601
 11027   0043AC  EFDA  F021         	goto	u3600
 11028   0043B0                     u3601:
 11029   0043B0  EFDD  F021         	goto	l4282
 11030   0043B4                     u3600:
 11031   0043B4  90D8               	bcf	status,0,c
 11032   0043B6  EFDE  F021         	goto	l914
 11033   0043BA                     l4282:
 11034   0043BA  80D8               	bsf	status,0,c
 11035   0043BC                     l914:
 11036   0043BC  0012               	return		;funcret
 11037   0043BE                     __end_of___fleq:
 11038                           	callstack 0
 11039                           
 11040 ;; *************** function ___fldiv *****************
 11041 ;; Defined at:
 11042 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
 11043 ;; Parameters:    Size  Location     Type
 11044 ;;  b               4   49[COMRAM] unsigned char 
 11045 ;;  a               4   53[COMRAM] unsigned char 
 11046 ;; Auto vars:     Size  Location     Type
 11047 ;;  grs             4   68[COMRAM] unsigned long 
 11048 ;;  rem             4   61[COMRAM] unsigned long 
 11049 ;;  new_exp         2   66[COMRAM] short 
 11050 ;;  aexp            1   73[COMRAM] unsigned char 
 11051 ;;  bexp            1   72[COMRAM] unsigned char 
 11052 ;;  sign            1   65[COMRAM] unsigned char 
 11053 ;; Return value:  Size  Location     Type
 11054 ;;                  4   49[COMRAM] unsigned char 
 11055 ;; Registers used:
 11056 ;;		wreg, status,2, status,0
 11057 ;; Tracked objects:
 11058 ;;		On entry : 0/0
 11059 ;;		On exit  : 0/0
 11060 ;;		Unchanged: 0/0
 11061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11062 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11063 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11065 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11066 ;;Total ram usage:       25 bytes
 11067 ;; Hardware stack levels used: 1
 11068 ;; This function calls:
 11069 ;;		Nothing
 11070 ;; This function is called by:
 11071 ;;		_colour_rel
 11072 ;;		_Colour_decider
 11073 ;;		_efgtoa
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text57
 11078   002684                     __ptext57:
 11079                           	callstack 0
 11080   002684                     ___fldiv:
 11081                           	callstack 26
 11082   002684  5035               	movf	(___fldiv@b+3)^0,w,c
 11083   002686  0B80               	andlw	128
 11084   002688  6E42               	movwf	___fldiv@sign^0,c
 11085   00268A  5035               	movf	(___fldiv@b+3)^0,w,c
 11086   00268C  2435               	addwf	(___fldiv@b+3)^0,w,c
 11087   00268E  6E49               	movwf	___fldiv@bexp^0,c
 11088   002690  AE34               	btfss	(___fldiv@b+2)^0,7,c
 11089   002692  EF4D  F013         	goto	u3161
 11090   002696  EF4F  F013         	goto	u3160
 11091   00269A                     u3161:
 11092   00269A  EF50  F013         	goto	l4002
 11093   00269E                     u3160:
 11094   00269E  8049               	bsf	___fldiv@bexp^0,0,c
 11095   0026A0                     l4002:
 11096   0026A0  5049               	movf	___fldiv@bexp^0,w,c
 11097   0026A2  B4D8               	btfsc	status,2,c
 11098   0026A4  EF56  F013         	goto	u3171
 11099   0026A8  EF58  F013         	goto	u3170
 11100   0026AC                     u3171:
 11101   0026AC  EF6D  F013         	goto	l4012
 11102   0026B0                     u3170:
 11103   0026B0  2849               	incf	___fldiv@bexp^0,w,c
 11104   0026B2  A4D8               	btfss	status,2,c
 11105   0026B4  EF5E  F013         	goto	u3181
 11106   0026B8  EF60  F013         	goto	u3180
 11107   0026BC                     u3181:
 11108   0026BC  EF68  F013         	goto	l4008
 11109   0026C0                     u3180:
 11110   0026C0  0E00               	movlw	0
 11111   0026C2  6E32               	movwf	___fldiv@b^0,c
 11112   0026C4  0E00               	movlw	0
 11113   0026C6  6E33               	movwf	(___fldiv@b+1)^0,c
 11114   0026C8  0E00               	movlw	0
 11115   0026CA  6E34               	movwf	(___fldiv@b+2)^0,c
 11116   0026CC  0E00               	movlw	0
 11117   0026CE  6E35               	movwf	(___fldiv@b+3)^0,c
 11118   0026D0                     l4008:
 11119   0026D0  8E34               	bsf	(___fldiv@b+2)^0,7,c
 11120   0026D2  0E00               	movlw	0
 11121   0026D4  6E35               	movwf	(___fldiv@b+3)^0,c
 11122   0026D6  EF75  F013         	goto	l4014
 11123   0026DA                     l4012:
 11124   0026DA  0E00               	movlw	0
 11125   0026DC  6E32               	movwf	___fldiv@b^0,c
 11126   0026DE  0E00               	movlw	0
 11127   0026E0  6E33               	movwf	(___fldiv@b+1)^0,c
 11128   0026E2  0E00               	movlw	0
 11129   0026E4  6E34               	movwf	(___fldiv@b+2)^0,c
 11130   0026E6  0E00               	movlw	0
 11131   0026E8  6E35               	movwf	(___fldiv@b+3)^0,c
 11132   0026EA                     l4014:
 11133   0026EA  5039               	movf	(___fldiv@a+3)^0,w,c
 11134   0026EC  0B80               	andlw	128
 11135   0026EE  1A42               	xorwf	___fldiv@sign^0,f,c
 11136   0026F0  5039               	movf	(___fldiv@a+3)^0,w,c
 11137   0026F2  2439               	addwf	(___fldiv@a+3)^0,w,c
 11138   0026F4  6E4A               	movwf	___fldiv@aexp^0,c
 11139   0026F6  AE38               	btfss	(___fldiv@a+2)^0,7,c
 11140   0026F8  EF80  F013         	goto	u3191
 11141   0026FC  EF82  F013         	goto	u3190
 11142   002700                     u3191:
 11143   002700  EF83  F013         	goto	l4022
 11144   002704                     u3190:
 11145   002704  804A               	bsf	___fldiv@aexp^0,0,c
 11146   002706                     l4022:
 11147   002706  504A               	movf	___fldiv@aexp^0,w,c
 11148   002708  B4D8               	btfsc	status,2,c
 11149   00270A  EF89  F013         	goto	u3201
 11150   00270E  EF8B  F013         	goto	u3200
 11151   002712                     u3201:
 11152   002712  EFA0  F013         	goto	l4032
 11153   002716                     u3200:
 11154   002716  284A               	incf	___fldiv@aexp^0,w,c
 11155   002718  A4D8               	btfss	status,2,c
 11156   00271A  EF91  F013         	goto	u3211
 11157   00271E  EF93  F013         	goto	u3210
 11158   002722                     u3211:
 11159   002722  EF9B  F013         	goto	l4028
 11160   002726                     u3210:
 11161   002726  0E00               	movlw	0
 11162   002728  6E36               	movwf	___fldiv@a^0,c
 11163   00272A  0E00               	movlw	0
 11164   00272C  6E37               	movwf	(___fldiv@a+1)^0,c
 11165   00272E  0E00               	movlw	0
 11166   002730  6E38               	movwf	(___fldiv@a+2)^0,c
 11167   002732  0E00               	movlw	0
 11168   002734  6E39               	movwf	(___fldiv@a+3)^0,c
 11169   002736                     l4028:
 11170   002736  8E38               	bsf	(___fldiv@a+2)^0,7,c
 11171   002738  0E00               	movlw	0
 11172   00273A  6E39               	movwf	(___fldiv@a+3)^0,c
 11173   00273C  EFA8  F013         	goto	l4034
 11174   002740                     l4032:
 11175   002740  0E00               	movlw	0
 11176   002742  6E36               	movwf	___fldiv@a^0,c
 11177   002744  0E00               	movlw	0
 11178   002746  6E37               	movwf	(___fldiv@a+1)^0,c
 11179   002748  0E00               	movlw	0
 11180   00274A  6E38               	movwf	(___fldiv@a+2)^0,c
 11181   00274C  0E00               	movlw	0
 11182   00274E  6E39               	movwf	(___fldiv@a+3)^0,c
 11183   002750                     l4034:
 11184   002750  5036               	movf	___fldiv@a^0,w,c
 11185   002752  1037               	iorwf	(___fldiv@a+1)^0,w,c
 11186   002754  1038               	iorwf	(___fldiv@a+2)^0,w,c
 11187   002756  1039               	iorwf	(___fldiv@a+3)^0,w,c
 11188   002758  A4D8               	btfss	status,2,c
 11189   00275A  EFB1  F013         	goto	u3221
 11190   00275E  EFB3  F013         	goto	u3220
 11191   002762                     u3221:
 11192   002762  EFCB  F013         	goto	l4046
 11193   002766                     u3220:
 11194   002766  0E00               	movlw	0
 11195   002768  6E32               	movwf	___fldiv@b^0,c
 11196   00276A  0E00               	movlw	0
 11197   00276C  6E33               	movwf	(___fldiv@b+1)^0,c
 11198   00276E  0E00               	movlw	0
 11199   002770  6E34               	movwf	(___fldiv@b+2)^0,c
 11200   002772  0E00               	movlw	0
 11201   002774  6E35               	movwf	(___fldiv@b+3)^0,c
 11202   002776  0E80               	movlw	128
 11203   002778  1234               	iorwf	(___fldiv@b+2)^0,f,c
 11204   00277A  0E7F               	movlw	127
 11205   00277C  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11206   00277E                     l4040:
 11207   00277E  5042               	movf	___fldiv@sign^0,w,c
 11208   002780  1235               	iorwf	(___fldiv@b+3)^0,f,c
 11209   002782  C032  F032         	movff	___fldiv@b,?___fldiv
 11210   002786  C033  F033         	movff	___fldiv@b+1,?___fldiv+1
 11211   00278A  C034  F034         	movff	___fldiv@b+2,?___fldiv+2
 11212   00278E  C035  F035         	movff	___fldiv@b+3,?___fldiv+3
 11213   002792  EF0E  F015         	goto	l1237
 11214   002796                     l4046:
 11215   002796  5049               	movf	___fldiv@bexp^0,w,c
 11216   002798  A4D8               	btfss	status,2,c
 11217   00279A  EFD1  F013         	goto	u3231
 11218   00279E  EFD3  F013         	goto	u3230
 11219   0027A2                     u3231:
 11220   0027A2  EFDD  F013         	goto	l4054
 11221   0027A6                     u3230:
 11222   0027A6  0E00               	movlw	0
 11223   0027A8  6E32               	movwf	?___fldiv^0,c
 11224   0027AA  0E00               	movlw	0
 11225   0027AC  6E33               	movwf	(?___fldiv+1)^0,c
 11226   0027AE  0E00               	movlw	0
 11227   0027B0  6E34               	movwf	(?___fldiv+2)^0,c
 11228   0027B2  0E00               	movlw	0
 11229   0027B4  6E35               	movwf	(?___fldiv+3)^0,c
 11230   0027B6  EF0E  F015         	goto	l1237
 11231   0027BA                     l4054:
 11232   0027BA  504A               	movf	___fldiv@aexp^0,w,c
 11233   0027BC  C049  F03A         	movff	___fldiv@bexp,??___fldiv
 11234   0027C0  6A3B               	clrf	(??___fldiv+1)^0,c
 11235   0027C2  5E3A               	subwf	??___fldiv^0,f,c
 11236   0027C4  0E00               	movlw	0
 11237   0027C6  5A3B               	subwfb	(??___fldiv+1)^0,f,c
 11238   0027C8  0E7F               	movlw	127
 11239   0027CA  243A               	addwf	??___fldiv^0,w,c
 11240   0027CC  6E43               	movwf	___fldiv@new_exp^0,c
 11241   0027CE  0E00               	movlw	0
 11242   0027D0  203B               	addwfc	(??___fldiv+1)^0,w,c
 11243   0027D2  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11244   0027D4  C032  F03E         	movff	___fldiv@b,___fldiv@rem
 11245   0027D8  C033  F03F         	movff	___fldiv@b+1,___fldiv@rem+1
 11246   0027DC  C034  F040         	movff	___fldiv@b+2,___fldiv@rem+2
 11247   0027E0  C035  F041         	movff	___fldiv@b+3,___fldiv@rem+3
 11248   0027E4  0E00               	movlw	0
 11249   0027E6  6E32               	movwf	___fldiv@b^0,c
 11250   0027E8  0E00               	movlw	0
 11251   0027EA  6E33               	movwf	(___fldiv@b+1)^0,c
 11252   0027EC  0E00               	movlw	0
 11253   0027EE  6E34               	movwf	(___fldiv@b+2)^0,c
 11254   0027F0  0E00               	movlw	0
 11255   0027F2  6E35               	movwf	(___fldiv@b+3)^0,c
 11256   0027F4  0E00               	movlw	0
 11257   0027F6  6E45               	movwf	___fldiv@grs^0,c
 11258   0027F8  0E00               	movlw	0
 11259   0027FA  6E46               	movwf	(___fldiv@grs+1)^0,c
 11260   0027FC  0E00               	movlw	0
 11261   0027FE  6E47               	movwf	(___fldiv@grs+2)^0,c
 11262   002800  0E00               	movlw	0
 11263   002802  6E48               	movwf	(___fldiv@grs+3)^0,c
 11264   002804  0E00               	movlw	0
 11265   002806  6E4A               	movwf	___fldiv@aexp^0,c
 11266   002808  EF3E  F014         	goto	l1239
 11267   00280C                     l4064:
 11268   00280C  504A               	movf	___fldiv@aexp^0,w,c
 11269   00280E  B4D8               	btfsc	status,2,c
 11270   002810  EF0C  F014         	goto	u3241
 11271   002814  EF0E  F014         	goto	u3240
 11272   002818                     u3241:
 11273   002818  EF25  F014         	goto	l4072
 11274   00281C                     u3240:
 11275   00281C  90D8               	bcf	status,0,c
 11276   00281E  363E               	rlcf	___fldiv@rem^0,f,c
 11277   002820  363F               	rlcf	(___fldiv@rem+1)^0,f,c
 11278   002822  3640               	rlcf	(___fldiv@rem+2)^0,f,c
 11279   002824  3641               	rlcf	(___fldiv@rem+3)^0,f,c
 11280   002826  90D8               	bcf	status,0,c
 11281   002828  3632               	rlcf	___fldiv@b^0,f,c
 11282   00282A  3633               	rlcf	(___fldiv@b+1)^0,f,c
 11283   00282C  3634               	rlcf	(___fldiv@b+2)^0,f,c
 11284   00282E  3635               	rlcf	(___fldiv@b+3)^0,f,c
 11285   002830  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11286   002832  EF1D  F014         	goto	u3251
 11287   002836  EF1F  F014         	goto	u3250
 11288   00283A                     u3251:
 11289   00283A  EF20  F014         	goto	l1242
 11290   00283E                     u3250:
 11291   00283E  8032               	bsf	___fldiv@b^0,0,c
 11292   002840                     l1242:
 11293   002840  90D8               	bcf	status,0,c
 11294   002842  3645               	rlcf	___fldiv@grs^0,f,c
 11295   002844  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 11296   002846  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 11297   002848  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 11298   00284A                     l4072:
 11299   00284A  5036               	movf	___fldiv@a^0,w,c
 11300   00284C  5C3E               	subwf	___fldiv@rem^0,w,c
 11301   00284E  5037               	movf	(___fldiv@a+1)^0,w,c
 11302   002850  583F               	subwfb	(___fldiv@rem+1)^0,w,c
 11303   002852  5038               	movf	(___fldiv@a+2)^0,w,c
 11304   002854  5840               	subwfb	(___fldiv@rem+2)^0,w,c
 11305   002856  5039               	movf	(___fldiv@a+3)^0,w,c
 11306   002858  5841               	subwfb	(___fldiv@rem+3)^0,w,c
 11307   00285A  A0D8               	btfss	status,0,c
 11308   00285C  EF32  F014         	goto	u3261
 11309   002860  EF34  F014         	goto	u3260
 11310   002864                     u3261:
 11311   002864  EF3D  F014         	goto	l4078
 11312   002868                     u3260:
 11313   002868  8C48               	bsf	(___fldiv@grs+3)^0,6,c
 11314   00286A  5036               	movf	___fldiv@a^0,w,c
 11315   00286C  5E3E               	subwf	___fldiv@rem^0,f,c
 11316   00286E  5037               	movf	(___fldiv@a+1)^0,w,c
 11317   002870  5A3F               	subwfb	(___fldiv@rem+1)^0,f,c
 11318   002872  5038               	movf	(___fldiv@a+2)^0,w,c
 11319   002874  5A40               	subwfb	(___fldiv@rem+2)^0,f,c
 11320   002876  5039               	movf	(___fldiv@a+3)^0,w,c
 11321   002878  5A41               	subwfb	(___fldiv@rem+3)^0,f,c
 11322   00287A                     l4078:
 11323   00287A  2A4A               	incf	___fldiv@aexp^0,f,c
 11324   00287C                     l1239:
 11325   00287C  0E19               	movlw	25
 11326   00287E  644A               	cpfsgt	___fldiv@aexp^0,c
 11327   002880  EF44  F014         	goto	u3271
 11328   002884  EF46  F014         	goto	u3270
 11329   002888                     u3271:
 11330   002888  EF06  F014         	goto	l4064
 11331   00288C                     u3270:
 11332   00288C  503E               	movf	___fldiv@rem^0,w,c
 11333   00288E  103F               	iorwf	(___fldiv@rem+1)^0,w,c
 11334   002890  1040               	iorwf	(___fldiv@rem+2)^0,w,c
 11335   002892  1041               	iorwf	(___fldiv@rem+3)^0,w,c
 11336   002894  B4D8               	btfsc	status,2,c
 11337   002896  EF4F  F014         	goto	u3281
 11338   00289A  EF51  F014         	goto	u3280
 11339   00289E                     u3281:
 11340   00289E  EF69  F014         	goto	l4090
 11341   0028A2                     u3280:
 11342   0028A2  8045               	bsf	___fldiv@grs^0,0,c
 11343   0028A4  EF69  F014         	goto	l4090
 11344   0028A8                     l4084:
 11345   0028A8  90D8               	bcf	status,0,c
 11346   0028AA  3632               	rlcf	___fldiv@b^0,f,c
 11347   0028AC  3633               	rlcf	(___fldiv@b+1)^0,f,c
 11348   0028AE  3634               	rlcf	(___fldiv@b+2)^0,f,c
 11349   0028B0  3635               	rlcf	(___fldiv@b+3)^0,f,c
 11350   0028B2  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11351   0028B4  EF5E  F014         	goto	u3291
 11352   0028B8  EF60  F014         	goto	u3290
 11353   0028BC                     u3291:
 11354   0028BC  EF61  F014         	goto	l1248
 11355   0028C0                     u3290:
 11356   0028C0  8032               	bsf	___fldiv@b^0,0,c
 11357   0028C2                     l1248:
 11358   0028C2  90D8               	bcf	status,0,c
 11359   0028C4  3645               	rlcf	___fldiv@grs^0,f,c
 11360   0028C6  3646               	rlcf	(___fldiv@grs+1)^0,f,c
 11361   0028C8  3647               	rlcf	(___fldiv@grs+2)^0,f,c
 11362   0028CA  3648               	rlcf	(___fldiv@grs+3)^0,f,c
 11363   0028CC  0643               	decf	___fldiv@new_exp^0,f,c
 11364   0028CE  A0D8               	btfss	status,0,c
 11365   0028D0  0644               	decf	(___fldiv@new_exp+1)^0,f,c
 11366   0028D2                     l4090:
 11367   0028D2  AE34               	btfss	(___fldiv@b+2)^0,7,c
 11368   0028D4  EF6E  F014         	goto	u3301
 11369   0028D8  EF70  F014         	goto	u3300
 11370   0028DC                     u3301:
 11371   0028DC  EF54  F014         	goto	l4084
 11372   0028E0                     u3300:
 11373   0028E0  0E00               	movlw	0
 11374   0028E2  6E4A               	movwf	___fldiv@aexp^0,c
 11375   0028E4  AE48               	btfss	(___fldiv@grs+3)^0,7,c
 11376   0028E6  EF77  F014         	goto	u3311
 11377   0028EA  EF79  F014         	goto	u3310
 11378   0028EE                     u3311:
 11379   0028EE  EF9D  F014         	goto	l1250
 11380   0028F2                     u3310:
 11381   0028F2  0EFF               	movlw	255
 11382   0028F4  1445               	andwf	___fldiv@grs^0,w,c
 11383   0028F6  6E3A               	movwf	??___fldiv^0,c
 11384   0028F8  0EFF               	movlw	255
 11385   0028FA  1446               	andwf	(___fldiv@grs+1)^0,w,c
 11386   0028FC  6E3B               	movwf	(??___fldiv+1)^0,c
 11387   0028FE  0EFF               	movlw	255
 11388   002900  1447               	andwf	(___fldiv@grs+2)^0,w,c
 11389   002902  6E3C               	movwf	(??___fldiv+2)^0,c
 11390   002904  0E7F               	movlw	127
 11391   002906  1448               	andwf	(___fldiv@grs+3)^0,w,c
 11392   002908  6E3D               	movwf	(??___fldiv+3)^0,c
 11393   00290A  503A               	movf	??___fldiv^0,w,c
 11394   00290C  103B               	iorwf	(??___fldiv+1)^0,w,c
 11395   00290E  103C               	iorwf	(??___fldiv+2)^0,w,c
 11396   002910  103D               	iorwf	(??___fldiv+3)^0,w,c
 11397   002912  B4D8               	btfsc	status,2,c
 11398   002914  EF8E  F014         	goto	u3321
 11399   002918  EF90  F014         	goto	u3320
 11400   00291C                     u3321:
 11401   00291C  EF94  F014         	goto	l1251
 11402   002920                     u3320:
 11403   002920                     l4098:
 11404   002920  0E01               	movlw	1
 11405   002922  6E4A               	movwf	___fldiv@aexp^0,c
 11406   002924  EF9D  F014         	goto	l1250
 11407   002928                     l1251:
 11408   002928  A032               	btfss	___fldiv@b^0,0,c
 11409   00292A  EF99  F014         	goto	u3331
 11410   00292E  EF9B  F014         	goto	u3330
 11411   002932                     u3331:
 11412   002932  EF9D  F014         	goto	l1250
 11413   002936                     u3330:
 11414   002936  EF90  F014         	goto	l4098
 11415   00293A                     l1250:
 11416   00293A  504A               	movf	___fldiv@aexp^0,w,c
 11417   00293C  B4D8               	btfsc	status,2,c
 11418   00293E  EFA3  F014         	goto	u3341
 11419   002942  EFA5  F014         	goto	u3340
 11420   002946                     u3341:
 11421   002946  EFC9  F014         	goto	l4110
 11422   00294A                     u3340:
 11423   00294A  0E01               	movlw	1
 11424   00294C  2632               	addwf	___fldiv@b^0,f,c
 11425   00294E  0E00               	movlw	0
 11426   002950  2233               	addwfc	(___fldiv@b+1)^0,f,c
 11427   002952  2234               	addwfc	(___fldiv@b+2)^0,f,c
 11428   002954  2235               	addwfc	(___fldiv@b+3)^0,f,c
 11429   002956  A035               	btfss	(___fldiv@b+3)^0,0,c
 11430   002958  EFB0  F014         	goto	u3351
 11431   00295C  EFB2  F014         	goto	u3350
 11432   002960                     u3351:
 11433   002960  EFC9  F014         	goto	l4110
 11434   002964                     u3350:
 11435   002964  C032  F03A         	movff	___fldiv@b,??___fldiv
 11436   002968  C033  F03B         	movff	___fldiv@b+1,??___fldiv+1
 11437   00296C  C034  F03C         	movff	___fldiv@b+2,??___fldiv+2
 11438   002970  C035  F03D         	movff	___fldiv@b+3,??___fldiv+3
 11439   002974  343D               	rlcf	(??___fldiv+3)^0,w,c
 11440   002976  323D               	rrcf	(??___fldiv+3)^0,f,c
 11441   002978  323C               	rrcf	(??___fldiv+2)^0,f,c
 11442   00297A  323B               	rrcf	(??___fldiv+1)^0,f,c
 11443   00297C  323A               	rrcf	??___fldiv^0,f,c
 11444   00297E  C03A  F032         	movff	??___fldiv,___fldiv@b
 11445   002982  C03B  F033         	movff	??___fldiv+1,___fldiv@b+1
 11446   002986  C03C  F034         	movff	??___fldiv+2,___fldiv@b+2
 11447   00298A  C03D  F035         	movff	??___fldiv+3,___fldiv@b+3
 11448   00298E  4A43               	infsnz	___fldiv@new_exp^0,f,c
 11449   002990  2A44               	incf	(___fldiv@new_exp+1)^0,f,c
 11450   002992                     l4110:
 11451   002992  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11452   002994  EFD4  F014         	goto	u3361
 11453   002998  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 11454   00299A  E108               	bnz	u3360
 11455   00299C  2843               	incf	___fldiv@new_exp^0,w,c
 11456   00299E  A0D8               	btfss	status,0,c
 11457   0029A0  EFD4  F014         	goto	u3361
 11458   0029A4  EFD6  F014         	goto	u3360
 11459   0029A8                     u3361:
 11460   0029A8  EFE1  F014         	goto	l4114
 11461   0029AC                     u3360:
 11462   0029AC  0E00               	movlw	0
 11463   0029AE  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11464   0029B0  6843               	setf	___fldiv@new_exp^0,c
 11465   0029B2  0E00               	movlw	0
 11466   0029B4  6E32               	movwf	___fldiv@b^0,c
 11467   0029B6  0E00               	movlw	0
 11468   0029B8  6E33               	movwf	(___fldiv@b+1)^0,c
 11469   0029BA  0E00               	movlw	0
 11470   0029BC  6E34               	movwf	(___fldiv@b+2)^0,c
 11471   0029BE  0E00               	movlw	0
 11472   0029C0  6E35               	movwf	(___fldiv@b+3)^0,c
 11473   0029C2                     l4114:
 11474   0029C2  BE44               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11475   0029C4  EFEE  F014         	goto	u3370
 11476   0029C8  5044               	movf	(___fldiv@new_exp+1)^0,w,c
 11477   0029CA  E106               	bnz	u3371
 11478   0029CC  0443               	decf	___fldiv@new_exp^0,w,c
 11479   0029CE  B0D8               	btfsc	status,0,c
 11480   0029D0  EFEC  F014         	goto	u3371
 11481   0029D4  EFEE  F014         	goto	u3370
 11482   0029D8                     u3371:
 11483   0029D8  EFFC  F014         	goto	l4118
 11484   0029DC                     u3370:
 11485   0029DC  0E00               	movlw	0
 11486   0029DE  6E44               	movwf	(___fldiv@new_exp+1)^0,c
 11487   0029E0  0E00               	movlw	0
 11488   0029E2  6E43               	movwf	___fldiv@new_exp^0,c
 11489   0029E4  0E00               	movlw	0
 11490   0029E6  6E32               	movwf	___fldiv@b^0,c
 11491   0029E8  0E00               	movlw	0
 11492   0029EA  6E33               	movwf	(___fldiv@b+1)^0,c
 11493   0029EC  0E00               	movlw	0
 11494   0029EE  6E34               	movwf	(___fldiv@b+2)^0,c
 11495   0029F0  0E00               	movlw	0
 11496   0029F2  6E35               	movwf	(___fldiv@b+3)^0,c
 11497   0029F4  0E00               	movlw	0
 11498   0029F6  6E42               	movwf	___fldiv@sign^0,c
 11499   0029F8                     l4118:
 11500   0029F8  C043  F049         	movff	___fldiv@new_exp,___fldiv@bexp
 11501   0029FC  A049               	btfss	___fldiv@bexp^0,0,c
 11502   0029FE  EF03  F015         	goto	u3381
 11503   002A02  EF05  F015         	goto	u3380
 11504   002A06                     u3381:
 11505   002A06  EF08  F015         	goto	l4124
 11506   002A0A                     u3380:
 11507   002A0A  8E34               	bsf	(___fldiv@b+2)^0,7,c
 11508   002A0C  EF09  F015         	goto	l4126
 11509   002A10                     l4124:
 11510   002A10  9E34               	bcf	(___fldiv@b+2)^0,7,c
 11511   002A12                     l4126:
 11512   002A12  90D8               	bcf	status,0,c
 11513   002A14  3049               	rrcf	___fldiv@bexp^0,w,c
 11514   002A16  6E35               	movwf	(___fldiv@b+3)^0,c
 11515   002A18  EFBF  F013         	goto	l4040
 11516   002A1C                     l1237:
 11517   002A1C  0012               	return		;funcret
 11518   002A1E                     __end_of___fldiv:
 11519                           	callstack 0
 11520                           
 11521                           	psect	rparam
 11522   000000                     
 11523                           	psect	idloc
 11524                           
 11525                           ;Config register IDLOC0 @ 0x200000
 11526                           ;	unspecified, using default values
 11527   200000                     	org	2097152
 11528   200000  0FFF               	dw	4095
 11529                           
 11530                           ;Config register IDLOC1 @ 0x200002
 11531                           ;	unspecified, using default values
 11532   200002                     	org	2097154
 11533   200002  0FFF               	dw	4095
 11534                           
 11535                           ;Config register IDLOC2 @ 0x200004
 11536                           ;	unspecified, using default values
 11537   200004                     	org	2097156
 11538   200004  0FFF               	dw	4095
 11539                           
 11540                           ;Config register IDLOC3 @ 0x200006
 11541                           ;	unspecified, using default values
 11542   200006                     	org	2097158
 11543   200006  0FFF               	dw	4095
 11544                           
 11545                           ;Config register IDLOC4 @ 0x200008
 11546                           ;	unspecified, using default values
 11547   200008                     	org	2097160
 11548   200008  0FFF               	dw	4095
 11549                           
 11550                           ;Config register IDLOC5 @ 0x20000A
 11551                           ;	unspecified, using default values
 11552   20000A                     	org	2097162
 11553   20000A  0FFF               	dw	4095
 11554                           
 11555                           ;Config register IDLOC6 @ 0x20000C
 11556                           ;	unspecified, using default values
 11557   20000C                     	org	2097164
 11558   20000C  0FFF               	dw	4095
 11559                           
 11560                           ;Config register IDLOC7 @ 0x20000E
 11561                           ;	unspecified, using default values
 11562   20000E                     	org	2097166
 11563   20000E  0FFF               	dw	4095
 11564                           
 11565                           	psect	config
 11566                           
 11567                           ;Config register CONFIG1L @ 0x300000
 11568                           ;	External Oscillator mode Selection bits
 11569                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
 11570                           ;	Power-up default value for COSC bits
 11571                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
 11572   300000                     	org	3145728
 11573   300000  AA                 	db	170
 11574                           
 11575                           ;Config register CONFIG1H @ 0x300001
 11576                           ;	unspecified, using default values
 11577                           ;	Clock Out Enable bit
 11578                           ;	CLKOUTEN = 0x1, unprogrammed default
 11579                           ;	Clock Switch Enable bit
 11580                           ;	CSWEN = 0x1, unprogrammed default
 11581                           ;	Fail-Safe Clock Monitor Enable bit
 11582                           ;	FCMEN = 0x1, unprogrammed default
 11583   300001                     	org	3145729
 11584   300001  FF                 	db	255
 11585                           
 11586                           ;Config register CONFIG2L @ 0x300002
 11587                           ;	unspecified, using default values
 11588                           ;	Master Clear Enable bit
 11589                           ;	MCLRE = 0x1, unprogrammed default
 11590                           ;	Power-up Timer Enable bit
 11591                           ;	PWRTE = 0x1, unprogrammed default
 11592                           ;	Low-power BOR enable bit
 11593                           ;	LPBOREN = 0x1, unprogrammed default
 11594                           ;	Brown-out Reset Enable bits
 11595                           ;	BOREN = 0x3, unprogrammed default
 11596   300002                     	org	3145730
 11597   300002  FF                 	db	255
 11598                           
 11599                           ;Config register CONFIG2H @ 0x300003
 11600                           ;	unspecified, using default values
 11601                           ;	Brown Out Reset Voltage selection bits
 11602                           ;	BORV = 0x3, unprogrammed default
 11603                           ;	ZCD Disable bit
 11604                           ;	ZCD = 0x1, unprogrammed default
 11605                           ;	PPSLOCK bit One-Way Set Enable bit
 11606                           ;	PPS1WAY = 0x1, unprogrammed default
 11607                           ;	Stack Full/Underflow Reset Enable bit
 11608                           ;	STVREN = 0x1, unprogrammed default
 11609                           ;	Debugger Enable bit
 11610                           ;	DEBUG = 0x1, unprogrammed default
 11611                           ;	Extended Instruction Set Enable bit
 11612                           ;	XINST = 0x1, unprogrammed default
 11613   300003                     	org	3145731
 11614   300003  FF                 	db	255
 11615                           
 11616                           ;Config register CONFIG3L @ 0x300004
 11617                           ;	WDT Period Select bits
 11618                           ;	WDTCPS = 0x1F, unprogrammed default
 11619                           ;	WDT operating mode
 11620                           ;	WDTE = OFF, WDT Disabled
 11621   300004                     	org	3145732
 11622   300004  9F                 	db	159
 11623                           
 11624                           ;Config register CONFIG3H @ 0x300005
 11625                           ;	unspecified, using default values
 11626                           ;	WDT Window Select bits
 11627                           ;	WDTCWS = 0x7, unprogrammed default
 11628                           ;	WDT input clock selector
 11629                           ;	WDTCCS = 0x7, unprogrammed default
 11630   300005                     	org	3145733
 11631   300005  FF                 	db	255
 11632                           
 11633                           ;Config register CONFIG4L @ 0x300006
 11634                           ;	unspecified, using default values
 11635                           ;	Write Protection Block 0
 11636                           ;	WRT0 = 0x1, unprogrammed default
 11637                           ;	Write Protection Block 1
 11638                           ;	WRT1 = 0x1, unprogrammed default
 11639                           ;	Write Protection Block 2
 11640                           ;	WRT2 = 0x1, unprogrammed default
 11641                           ;	Write Protection Block 3
 11642                           ;	WRT3 = 0x1, unprogrammed default
 11643                           ;	Write Protection Block 3
 11644                           ;	WRT4 = 0x1, unprogrammed default
 11645                           ;	Write Protection Block 3
 11646                           ;	WRT5 = 0x1, unprogrammed default
 11647                           ;	Write Protection Block 3
 11648                           ;	WRT6 = 0x1, unprogrammed default
 11649                           ;	Write Protection Block 3
 11650                           ;	WRT7 = 0x1, unprogrammed default
 11651   300006                     	org	3145734
 11652   300006  FF                 	db	255
 11653                           
 11654                           ;Config register CONFIG4H @ 0x300007
 11655                           ;	unspecified, using default values
 11656                           ;	Configuration Register Write Protection bit
 11657                           ;	WRTC = 0x1, unprogrammed default
 11658                           ;	Boot Block Write Protection bit
 11659                           ;	WRTB = 0x1, unprogrammed default
 11660                           ;	Data EEPROM Write Protection bit
 11661                           ;	WRTD = 0x1, unprogrammed default
 11662                           ;	Scanner Enable bit
 11663                           ;	SCANE = 0x1, unprogrammed default
 11664                           ;	Low Voltage Programming Enable bit
 11665                           ;	LVP = 0x1, unprogrammed default
 11666   300007                     	org	3145735
 11667   300007  FF                 	db	255
 11668                           
 11669                           ;Config register CONFIG5L @ 0x300008
 11670                           ;	unspecified, using default values
 11671                           ;	UserNVM Program Memory Code Protection bit
 11672                           ;	CP = 0x1, unprogrammed default
 11673                           ;	DataNVM Memory Code Protection bit
 11674                           ;	CPD = 0x1, unprogrammed default
 11675   300008                     	org	3145736
 11676   300008  FF                 	db	255
 11677                           
 11678                           ;Config register CONFIG5H @ 0x300009
 11679                           ;	unspecified, using default values
 11680   300009                     	org	3145737
 11681   300009  FF                 	db	255
 11682                           
 11683                           ;Config register CONFIG6L @ 0x30000A
 11684                           ;	unspecified, using default values
 11685                           ;	Table Read Protection Block 0
 11686                           ;	EBTR0 = 0x1, unprogrammed default
 11687                           ;	Table Read Protection Block 1
 11688                           ;	EBTR1 = 0x1, unprogrammed default
 11689                           ;	Table Read Protection Block 2
 11690                           ;	EBTR2 = 0x1, unprogrammed default
 11691                           ;	Table Read Protection Block 3
 11692                           ;	EBTR3 = 0x1, unprogrammed default
 11693                           ;	Table Read Protection Block 4
 11694                           ;	EBTR4 = 0x1, unprogrammed default
 11695                           ;	Table Read Protection Block 5
 11696                           ;	EBTR5 = 0x1, unprogrammed default
 11697                           ;	Table Read Protection Block 6
 11698                           ;	EBTR6 = 0x1, unprogrammed default
 11699                           ;	Table Read Protection Block 7
 11700                           ;	EBTR7 = 0x1, unprogrammed default
 11701   30000A                     	org	3145738
 11702   30000A  FF                 	db	255
 11703                           
 11704                           ;Config register CONFIG6H @ 0x30000B
 11705                           ;	unspecified, using default values
 11706                           ;	Boot Block Table Read Protection bit
 11707                           ;	EBTRB = 0x1, unprogrammed default
 11708   30000B                     	org	3145739
 11709   30000B  FF                 	db	255
 11710                           tosu	equ	0xFFF
 11711                           tosh	equ	0xFFE
 11712                           tosl	equ	0xFFD
 11713                           stkptr	equ	0xFFC
 11714                           pclatu	equ	0xFFB
 11715                           pclath	equ	0xFFA
 11716                           pcl	equ	0xFF9
 11717                           tblptru	equ	0xFF8
 11718                           tblptrh	equ	0xFF7
 11719                           tblptrl	equ	0xFF6
 11720                           tablat	equ	0xFF5
 11721                           prodh	equ	0xFF4
 11722                           prodl	equ	0xFF3
 11723                           indf0	equ	0xFEF
 11724                           postinc0	equ	0xFEE
 11725                           postdec0	equ	0xFED
 11726                           preinc0	equ	0xFEC
 11727                           plusw0	equ	0xFEB
 11728                           fsr0h	equ	0xFEA
 11729                           fsr0l	equ	0xFE9
 11730                           wreg	equ	0xFE8
 11731                           indf1	equ	0xFE7
 11732                           postinc1	equ	0xFE6
 11733                           postdec1	equ	0xFE5
 11734                           preinc1	equ	0xFE4
 11735                           plusw1	equ	0xFE3
 11736                           fsr1h	equ	0xFE2
 11737                           fsr1l	equ	0xFE1
 11738                           bsr	equ	0xFE0
 11739                           indf2	equ	0xFDF
 11740                           postinc2	equ	0xFDE
 11741                           postdec2	equ	0xFDD
 11742                           preinc2	equ	0xFDC
 11743                           plusw2	equ	0xFDB
 11744                           fsr2h	equ	0xFDA
 11745                           fsr2l	equ	0xFD9
 11746                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        7
    BSS         383
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    115     160
    BANK1           256    102     236
    BANK2           256      0     210
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    turnCalibration@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnCalibration@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[4]), STR_3(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[35]), STR_1(CODE[44]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[35]), STR_1(CODE[44]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[35]), STR_1(CODE[44]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2668$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_2(CODE[35]), STR_1(CODE[44]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2584$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2584$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnLeft45@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft45@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    fullSpeedBack@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedBack@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    timed_forward@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    timed_forward@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> motorL(BANK1[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> motorR(BANK1[9]), motorL(BANK1[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    Colour_decider@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    Colour_decider@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK1[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S24DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S24DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlll[1]), 


Critical Paths under _main in COMRAM

    _turnCalibration->_turnLeft45
    _turnLeft45->_stop
    _turnLeft45->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _sendStringSerial4->_sendCharSerial4
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _Colour_decider->___fldiv
    ___flsub->___flmul
    ___flmul->___fladd
    ___flge->___flmul
    ___fleq->___flsub
    ___fldiv->___flsub

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               112   112      0   84538
                                            113 BANK0      2     2      0
                                              0 BANK1    102   102      0
                     _Colour_decider
                  _I2C_2_Master_Init
                    _Interrupts_init
                        _Timer0_init
                   _color_click_init
                         _colour_rel
                         _getTMR0val
                    _initDCmotorsPWM
                         _initUSART4
                        _readColours
                  _sendStringSerial4
                            _sprintf
                               _stop
                    _turnCalibration
 ---------------------------------------------------------------------------------
 (1) _turnCalibration                                      6     2      4    9049
                                             31 COMRAM     6     2      4
                         _turnLeft45
 ---------------------------------------------------------------------------------
 (2) _turnLeft45                                           6     2      4    8897
                                             25 COMRAM     6     2      4
                          _TurnDelay
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _turnLeft                                             6     2      4    2309
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _stop                                                 6     2      4    3785
                                             19 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _setMotorPWM                                          6     4      2    1981
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _TurnDelay                                            3     1      2     175
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35    15     20   36257
                                             80 BANK0     33    13     20
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   35750
                                             72 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   35397
                                             53 BANK0     19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   29551
                                              0 BANK0     53    46      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     400
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             74 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    4333
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2683
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendStringSerial4                                    2     0      2     219
                                              1 COMRAM     2     0      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (2) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getTMR0val                                           4     4      0      24
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          28    24      4    8872
                                             74 COMRAM     4     0      4
                                              0 BANK0     24    24      0
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     370
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     370
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Colour_decider                                      38    34      4   25126
                                             74 COMRAM     6     2      4
                                              0 BANK0     32    32      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     937
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     805
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    5777
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    4238
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3504
                                             16 COMRAM    25    17      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    4408
                                             41 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     798
                                             49 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2919
                                             49 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Colour_decider
     ___fladd
     ___fldiv
       ___fladd (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
     ___fleq
       ___flsub (ARG)
     ___flge
       ___flmul (ARG)
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
   _I2C_2_Master_Init
   _Interrupts_init
   _Timer0_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fladd
     ___fldiv
     ___xxtofl
   _getTMR0val
   _initDCmotorsPWM
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendStringSerial4
     _sendCharSerial4
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
   _stop
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _turnCalibration
     _turnLeft45
       _TurnDelay
       _stop
       _turnLeft
         _setMotorPWM

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D2       9       82.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     66      EC       7       92.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRllllhh     52      0       0      42        0.0%
BITBIGSFRllllhh     37      0       0      44        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRhhh        29      0       0      32        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     20      0       0      47        0.0%
BITBIGSFRllllll     1E      0       0      49        0.0%
BITBIGSFRhllh       17      0       0      37        0.0%
BITBIGSFRhhlh       13      0       0      33        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRllllll      F      0       0      57        0.0%
BITBIGSFRhhllh       E      0       0      34        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      56        0.0%
BITBIGSFRllllhl      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRhlll        5      0       0      38        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      43        0.0%
BITBIGSFRhlh         2      0       0      36        0.0%
BITBIGSFRlllhl       2      0       0      41        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRhhlll       1      0       0      35        0.0%
BITBIGSFRlllllh      1      0       0      46        0.0%
BITBIGSFRlllhh       1      0       0      40        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2BD      60        0.0%
DATA                 0      0     2BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 17:03:30 2023

               _color_read_Red 48AE                   ___fldiv@aexp 004A                   ___fldiv@bexp 0049  
               _color_read_lum 485E                   ___fldiv@sign 0042                _color_read_Blue 494E  
                           l51 48AC                             l60 499C                             l45 480C  
                           l54 48FC                             l63 4712                             l48 4CE2  
                           l57 494C                             l66 2D4A                             l76 1D98  
          ___wmul@multiplicand 0003                _turnCalibration 3756               _color_read_Green 48FE  
              readColours@vals 000C              ??_Interrupts_init 0001                            l200 4D20  
                          l140 4C4E                            l212 4D38                            l143 4C50  
                          l152 4D4E                            l161 4B46                            l209 4D24  
                          l146 4C76                            l218 4C24                            l155 4D58  
                          l149 4D62                            l501 49EA                            l158 4D44  
                          l256 4D6E                            l443 3DDC                            l371 3540  
                          l363 33A4                            l436 44E2                            l550 3774  
                          l560 38CA                            l552 37CA                            l449 4560  
                          l457 445A                            l561 391A                            l553 383E  
                          l562 3934                            l554 38AE                            l643 4D02  
                          l555 3876                            l492 4BDA                            l549 38E4  
                          l646 4CC2                            l495 4BF4                            l655 4C9C  
                          l920 4104                            l914 43BC                            l925 414A  
                          l782 3F40                            l952 4046                            l769 3C70  
                          l929 4BBE                            _abs 4B48                            _pad 4562  
                          _rel 0160                            wreg 000FE8                   ___flmul@aexp 0022  
                 ___flmul@bexp 0023                   ___flmul@sign 001D                   ___flmul@temp 0028  
                 ___flmul@prod 0024                   ___fltol@exp1 000A                Colour_decider@i 007A  
                         l1200 20A2                           l1210 2160                           ?_abs 0013  
                         l1310 398C                           l1209 2172                           l1225 4A7C  
                         l1313 3AE8                           l1153 464E                           l1250 293A  
                         l1242 2840                           l1402 11EC                           l1146 4646  
                         l1251 2928                           l1324 3A80                           l1404 1032  
                         l1237 2A1C                           l1317 3A24                           l1333 47BA  
                         l1239 287C                           l1183 1F88                           l1248 28C2  
                         l4000 269E                           l1192 2258                           l1184 1F76  
                         l1504 46A4                           l1432 1634                           l1273 2682  
                         l1185 1F3C                           l1513 485C                           l4010 26D2  
                         l4002 26A0                           l1507 46B4                           l4020 2704  
                         l4004 26B0                           l4012 26DA                           l1276 2514  
                         l1269 231E                           l1525 4312                           l1533 4B04  
                         l1365 4584                           l4102 294A                           l4110 2992  
                         l4030 2738                           l4022 2706                           l4014 26EA  
                         l4006 26C0                           l1286 2644                           l1278 258C  
                         l1374 30DE                           l1542 4AC0                           l1279 257A  
                         l1447 3050                           l4120 29FC                           l4112 29AC  
                         l4104 2956                           l4040 277E                           l4024 2716  
                         l4032 2740                           l4016 26F0                           l4008 26D0  
                         l4200 241A                           l1536 4D6C                           l1376 30E6  
                         l1369 45DA                           l1377 312C                           l4122 2A0A  
                         l4114 29C2                           l4106 2964                           l4050 27A6  
                         l4042 2782                           l4034 2750                           l4026 2726  
                         l4018 26F6                           l4210 2498                           l4202 242A  
                         l5002 499E                           l4124 2A10                           l4116 29DC  
                         l4108 298E                           l4060 27F4                           l4036 2766  
                         l4028 2736                           l4300 40F2                           l4220 2512  
                         l4212 24CE                           l4204 2446                           l4140 2276  
                         l5100 4802                           l1484 4B7E                           l1388 32CE  
                         l5004 49B2                           l1493 3754                           l1469 4768  
                         l4126 2A12                           l4118 29F8                           l4070 283E  
                         l4062 2804                           l4054 27BA                           l4038 2776  
                         l4046 2796                           l4302 4142                           l4230 2572  
                         l4222 2524                           l4214 24DC                           l4206 2452  
                         l4150 22BC                           l4142 2286                           l4134 225A  
                         l5030 39B2                           l5022 3938                           l5102 4804  
                         l5110 46B6                           l4310 4B9E                           l5006 49BE  
                         l1487 4B86                           l1479 4248                           l1399 1852  
                         l4080 288C                           l4072 284A                           l4064 280C  
                         l4056 27D4                           l4048 27A6                           l4304 4148  
                         l4240 25E0                           l4224 2532                           l4216 24FA  
                         l4208 246E                           l4160 22E8                           l4152 22C2  
                         l4144 2296                           l4136 2266                           l5040 3A0C  
                         l5024 3948                           l5104 4806                           l5120 2BE6  
                         l5112 2A1E                           l4312 4BAE                           l4400 414C  
                         l1496 3698                           l5008 49D2                           l4082 28A2  
                         l4090 28D2                           l4074 2868                           l4066 281C  
                         l4058 27E4                           l4250 2648                           l4234 259C  
                         l4242 25E4                           l4226 2536                           l4218 2504  
                         l4170 233E                           l4162 22F8                           l4154 22C8  
                         l4146 22A6                           l4138 2274                           l4330 3FAC  
                         l4322 3F6C                           l5050 3A70                           l5042 3A0E  
                         l5034 39C6                           l5026 3956                           l5130 188A  
                         l5106 4808                           l5122 2C7E                           l5114 2AEA  
                         l4402 416C                           l4092 28E0                           l4084 28A8  
                         l4076 286A                           l4068 2830                           l4260 2672  
                         l4252 2658                           l4244 25FE                           l4236 25A8  
                         l4228 2544                           l4180 237E                           l4164 2308  
                         l4156 22D6                           l4148 22AC                           l3700 1D9A  
                         l4340 3FDC                           l4332 3FBA                           l4324 3F96  
                         l4316 3F42                           l5060 3AC8                           l5052 3A8E  
                         l5044 3A1A                           l5036 39CE                           l5028 399C  
                         l5132 18BA                           l5108 480A                           l5124 2CB2  
                         l5116 2B1E                           l4500 30D2                           l4308 4B88  
                         l4404 41AA                           l4412 41EA                           l4094 28E4  
                         l4086 28B2                           l4078 287A                           l4270 4314  
                         l4254 2666                           l4246 2612                           l4238 25B6  
                         l4190 23C8                           l4182 238A                           l4174 2352  
                         l4166 230E                           l4158 22D8                           l3710 1DD6  
                         l3702 1DA6                           l4350 4006                           l4342 3FE6  
                         l4326 3F98                           l4318 3F58                           l5062 3AD6  
                         l5054 3A90                           l5046 3A56                           l5038 39DA  
                         l5150 1A0C                           l5142 192C                           l5134 18EE  
                         l5126 1854                           l5118 2BB2                           l4510 3120  
                         l4502 30EE                           l4414 41FC                           l4406 41D2  
                         l4430 3544                           l4422 4A7E                           l5070 4720  
                         l4096 28F2                           l4088 28C0                           l4280 43B4  
                         l4272 4342                           l4256 2668                           l4248 262C  
                         l4192 23D4                           l4184 23A2                           l4176 235E  
                         l4168 232E                           l3800 1F96                           l3720 1E06  
                         l3712 1DE6                           l3704 1DB4                           l4264 4A38  
                         l4352 4016                           l4328 3FA8                           l5064 3AD8  
                         l5056 3A94                           l5048 3A62                           l5152 1A3E  
                         l5144 197E                           l5136 1922                           l5128 187E  
                         l5080 47C0                           l5320 4D1A                           l4520 31C6  
                         l4512 3128                           l4504 30FE                           l4408 41DE  
                         l4432 3564                           l4424 4A8E                           l5072 473E  
                         l4360 45DC                           l5400 384C                           l4098 2920  
                         l4282 43BA                           l4274 4352                           l4290 4086  
                         l4258 266E                           l4194 23E4                           l4186 23AE  
                         l4178 2368                           l3810 1FD8                           l3802 1FA6  
                         l3730 1E30                           l3722 1E18                           l3714 1DE8  
                         l3706 1DB6                           l4266 4A48                           l4354 4026  
                         l4338 3FD2                           l5058 3AB8                           l5170 1BBE  
                         l5162 1AC2                           l5154 1A44                           l5146 19B0  
                         l5090 47F8                           l5082 47CA                           l5322 4D1C  
                         l5314 4D04                           l5330 4C08                           l4530 326E  
                         l4522 31CC                           l4514 3134                           l4506 3104  
                         l4418 4240                           l4450 370C                           l4442 364C  
                         l4434 35BA                           l4426 4650                           l4610 1048  
                         l4602 0FE2                           l5074 475E                           l4370 4614  
                         l4362 45E4                           l5410 388E                           l5402 3856  
                         l4276 4380                           l4292 40B4                           l4196 23F0  
                         l4188 23BA                           l3820 2006                           l3812 1FE6  
                         l3732 1E40                           l3740 1E6A                           l3724 1E1A  
                         l3708 1DC6                           l3716 1DF0                           l4356 4036  
                         l4348 3FFA                           l5172 1BD0                           l5180 1D7C  
                         l5164 1AD6                           l5156 1A60                           l5148 19B8  
                         l5092 47FA                           l5084 47DA                           l5324 4D1E  
                         l5316 4D0E                           l5332 4C0C                           l4532 3288  
                         l4524 31D2                           l4516 313E                           l4508 3114  
                         l4452 3734                           l4444 3688                           l4436 35CE  
                         l4428 466E                           l4460 4822                           l4700 1592  
                         l4620 113E                           l4612 107C                           l4604 0FFC  
                         l5068 4714                           l4380 4640                           l4372 461A  
                         l4364 45F6                           l5420 38CC                           l5412 3890  
                         l5404 3858                           l4278 4390                           l4294 40C4  
                         l4286 4048                           l4198 2400                           l3830 2072  
                         l3822 2010                           l3814 1FF2                           l3806 1FBA  
                         l3750 1EA2                           l3742 1E7A                           l3734 1E50  
                         l3726 1E20                           l3718 1E00                           l5174 1C4C  
                         l5166 1B76                           l5158 1AB6                           l4470 4C50  
                         l5094 47FC                           l5086 47E4                           l5078 47BC  
                         l5350 4470                           l5318 4D10                           l5326 4BF6  
                         l3902 4AC2                           l4390 45A4                           l4382 4562  
                         l4534 3298                           l4518 3144                           l4526 3236  
                         l4454 3744                           l4438 35DC                           l4446 36BC  
                         l4462 482E                           l4710 1664                           l4702 160A  
                         l4630 11F4                           l4622 1172                           l4614 10BA  
                         l4550 0E82                           l4542 0E5A                           l5430 476A  
                         l4374 4630                           l4366 45FE                           l3910 4C78  
                         l5422 391C                           l5414 38A8                           l5406 3870  
                         ?_pad 0011                           l4296 40D2                           l4288 4076  
                         l3832 2082                           l3816 1FF6                           l3808 1FCA  
                         l3824 2016                           l3760 1EB6                           l3752 1EA6  
                         l3744 1E8C                           l3736 1E60                           l3728 1E2E  
                         l5176 1CA8                           l5168 1B86                           l4472 4C60  
                         l5096 47FE                           l5088 47EE                           l5424 4C9E  
                         l5360 44B2                           l5352 4472                           l5328 4BFA  
                         l3920 3AFC                           l3904 4ACE                           l4392 45A8  
                         l4384 4570                           l4536 329E                           l4528 3250  
                         l4448 36F8                           l4464 4832                           l4720 168A  
                         l4712 1668                           l4704 162A                           l4640 1224  
                         l4632 1204                           l4624 117A                           l4616 10EC  
                         l4608 1042                           l4560 0ED8                           l4552 0EA6  
                         l4544 0E60                           l5432 477C                           l4376 4638  
                         l4368 4606                           l3912 4C94                           l4480 3CF6  
                         l4800 450C                           l5408 3884                           l5416 38AE  
                         l5600 3360                           l4298 40E4                           l3850 2104  
                         l3842 20DC                           l3826 203C                           l3834 2092  
                         l3818 2004                           l3770 1ECA                           l3762 1EBA  
                         l3754 1EAA                           l3746 1E9A                           l3738 1E62  
                         l5178 1D24                           l5098 4800                           l5426 4CA0  
                         l5370 44D4                           l5362 44BC                           l5354 4474  
                         l5346 445C                           l3930 3B52                           l3922 3B1C  
                         l3690 426E                           l3906 4AE0                           l4394 45C6  
                         l4386 457C                           l4538 32AE                           l4490 3052  
                         l4466 483E                           l4458 480E                           l4730 16BE  
                         l4722 1690                           l4714 166E                           l4706 1646  
                         l4642 1236                           l4650 1276                           l4634 1210  
                         l4618 112A                           l4570 0F28                           l4562 0EE4  
                         l4554 0EB0                           l4546 0E70                           l5434 4784  
                         l4378 463A                           l4482 3CFA                           l4474 3C72  
                         l4802 4518                           l4810 43E2                           l5418 38BC  
                         l5610 3374                           l5602 3368                           l5530 32E0  
                         l5522 32D0                           l3852 210C                           l3844 20E6  
                         l3836 20B8                           l3828 2070                           l3860 2130  
                         l3780 1EDE                           l3772 1ECE                           l3764 1EBE  
                         l3756 1EAE                           l3748 1E9E                           l5380 4CF6  
                         l5428 4CA6                           l5372 44D6                           l5364 44BE  
                         l5356 448A                           l5348 446E                           l3940 3BA6  
                         l3932 3B5E                           l3924 3B20                           l3916 3AEA  
                         l4396 4B48                           l3692 4278                           l3908 4AE4  
                         l4388 4590                           l4492 3072                           l4468 4842  
                         l4732 16C4                           l4716 1676                           l4708 1654  
                         l4724 1696                           l4740 175C                           l4660 135E  
                         l4652 127E                           l4644 1244                           l4636 1218  
                         l4628 11BA                           l4580 0F5C                           l4572 0F2C  
                         l4564 0EEC                           l4556 0EB8                           l4548 0E7E  
                         l5436 478C                           l4484 3D3C                           l4476 3C8E  
                         l4804 4530                           l4820 4442                           l4812 43FA  
                         l5620 33CC                           l5612 3374                           l5604 3368  
                         l5540 32F6                           l5532 32EC                           l5524 32D4  
                         l3870 2182                           l3862 2134                           l3854 2110  
                         l3846 20F4                           l3838 20C8                           l3790 1F56  
                         l3782 1F08                           l3774 1ED2                           l3766 1EC2  
                         l3758 1EB2                           l5382 4D00                           l5374 44E0  
                         l5366 44C8                           l5358 448E                           l3950 3C1A  
                         l3942 3BB8                           l3934 3B7C                           l3926 3B2E  
                         l3918 3AEE                           l4398 4B62                           l3694 4296  
                         l3686 424A                           l4494 3086                           l4750 17DE  
                         l4742 177A                           l4734 171C                           l4726 16A8  
                         l4718 1686                           l4670 141C                           l4662 1392  
                         l4654 128E                           l4646 125C                           l4638 1220  
                         l4590 0FB8                           l4574 0F32                           l4558 0EC8  
                         l4566 0EF0                           l4902 2EA8                           l5438 47A8  
                         l4486 3D58                           l4478 3CE2                           l4806 4548  
                         l4814 4406                           l5390 37CC                           l5630 3410  
                         l5622 33D2                           l5614 3388                           l5606 3368  
                         l5550 3302                           l5542 32F8                           l5534 32F0  
                         l5526 32D8                           l3880 21E8                           l3872 218E  
                         l3864 2142                           l3856 2120                           l3848 20F6  
                         l3792 1F5A                           l3784 1F24                           l3776 1ED6  
                         l3768 1EC6                           l5376 4CE4                           l5368 44CA  
                         l3944 3BE6                           l3936 3B84                           l3952 3C20  
                         l3928 3B4E                           l3960 3DDE                           l3696 42CC  
                         l3688 425C                           l4496 3096                           l4760 1832  
                         l4752 17EC                           l4744 1796                           l4736 1750  
                         l4728 16BA                           l4680 14B8                           l4672 1432  
                         l4656 12A2                           l4664 1398                           l4648 126E  
                         l4592 0FBE                           l4576 0F3A                           l4568 0F16  
                         l4584 0F7C                           l4912 2F66                           l4904 2EDA  
                         l4488 3D9C                           l4816 4412                           l4808 43BE  
                         l5392 381A                           l5384 3756                           l5640 3460  
                         l5632 3414                           l5624 33D2                           l5616 338A  
                         l5608 3370                           l5560 330C                           l5552 3304  
                         l5544 32FC                           l5536 32F2                           l5528 32DC  
                         l3890 2230                           l3882 21F8                           l3874 219C  
                         l3866 2158                           l3858 2122                           l3794 1F68  
                         l3786 1F34                           l3778 1EDA                           l5378 4CEC  
                         l4770 4D40                           l3954 3C30                           l3946 3C06  
                         l3938 3B98                           l3970 3E22                           l3962 3DE2  
                         l4498 30B6                           l4754 1804                           l4746 179E  
                         l4738 1758                           l4682 150E                           l4690 1560  
                         l4674 1464                           l4666 13B6                           l4658 1306  
                         l4594 0FC6                           l4586 0FA2                           l4578 0F52  
                         l4922 2FE2                           l4914 2F90                           l4906 2EFE  
                         l4818 442A                           l5394 381E                           l5386 3758  
                         l5642 34B6                           l5634 3418                           l5626 33DE  
                         l5650 352C                           l5618 33B2                           l5570 3316  
                         l5562 330E                           l5554 3306                           l5546 32FE  
                         l5538 32F4                           l3892 2232                           l3884 2218  
                         l3876 21D6                           l3796 1F6A                           l3788 1F4A  
                         l4764 4D5A                           l4772 4D50                           l4780 4B08  
                         l3956 3C50                           l3948 3C08                           l3980 3E8A  
                         l3972 3E42                           l3964 3DF0                           l4756 1814  
                         l4748 17AE                           l4692 1570                           l4684 1514  
                         l4676 1474                           l4668 13EA                           l4588 0FB4  
                         l4916 2FB0                           l4908 2F32                           l4924 3012  
                         l5396 3836                           l5388 3776                           l5636 342C  
                         l5644 34C6                           l5628 33F2                           l5580 3324  
                         l5572 3318                           l5564 3310                           l5556 3308  
                         l5548 3300                           l3894 2238                           l3886 221C  
                         l3878 21D8                           l3798 1F74                           l4766 4D5E  
                         l4774 4D54                           l4790 4B44                           l4782 4B0C  
                         l3990 3F00                           l3982 3EB8                           l3974 3E60  
                         l3966 3E10                           l4758 182A                           l4694 1578  
                         l4686 1548                           l4678 1484                           l4870 2D4C  
                         l5398 3838                           l5646 34DA                           l5638 3444  
                         l5590 3344                           l5582 3328                           l5574 331A  
                         l5566 3312                           l5558 330A                           l3896 2246  
                         l3888 222A                           l4960 4C3A                           l4952 4C26  
                         l4768 4D3C                           l4784 4B14                           l4776 4D46  
                         l3992 3F20                           l3984 3ED8                           l3976 3E68  
                         l3968 3E14                           l4696 157E                           l4688 155C  
                         l4880 2DA4                           l4872 2D74                           l4928 3024  
                         l4864 4BC0                           l5592 3348                           l5584 332C  
                         l5576 331C                           l5568 3314                           l3898 2248  
                         l4962 4C3C                           l4954 4C30                           l4786 4B1C  
                         l4778 4D4A                           l3986 3EEA                           l3978 3E7C  
                         l4698 1586                           l4890 2E6A                           l4882 2DC4  
                         l4874 2D82                           l4866 4BC4                           l4794 44E4  
                         l5594 334C                           l5586 3334                           l5578 331E  
                         l3996 2684                           l4956 4C36                           l4964 4CC6  
                         l4788 4B42                           l4980 4944                           l4972 48AE  
                         l3988 3EF0                           l4892 2E7A                           l4884 2DE4  
                         l4876 2D90                           l4868 4BD4                           l4796 44E8  
                         l5596 3350                           l5588 333C                           l3998 2690  
                         l4958 4C38                           l4974 48F4                           l4966 485E  
                         l4990 4D24                           l4894 2E90                           l4886 2E3A  
                         l4878 2D94                           l4798 4500                           l5598 3358  
                         l4984 494E                           l4968 48A4                           l4992 4D34  
                         l5864 2EBC                           l4896 2E98                           l4986 4994  
                         l4978 48FE                           l5866 2F7A                           l4898 2EA0  
                         l5868 3004                           STR_1 0E01                           STR_2 0E2D  
                         STR_3 0E50                           STR_6 0E54                           u3000 222A  
                         u3001 2226                           u3010 2246                           u3011 2242  
                         u3100 3DF0                           u3020 4B04                           u3101 3DEC  
                         u3021 4B00                           u3030 3AFC                           u3110 3E22  
                         u3031 3AF8                           u3111 3E1E                           u3200 2716  
                         u4000 4C60                           u3040 3B2E                           u3120 3E60  
                 _BAUD4CONbits 000EE9                           u3201 2712                           u4001 4C5C  
                         u3041 3B2A                           u3121 3E5C                           u3210 2726  
                         u4010 4C76                           u3130 3E8A                           u3211 2722  
                         u4011 4C72                           u3051 3B58                           u3131 3E86  
                         u3300 28E0                           u3220 2766                           u3060 3B7C  
                         u3140 3EB8                           u4100 3250                           u4020 3C8E  
                         u3301 28DC                           u3221 2762                           u3061 3B78  
                         u3141 3EB4                           u4101 324C                           u4021 3C8A  
                         u3310 28F2                           u3230 27A6                           u3070 3BA6  
                         u3150 3F00                           u4110 326E                           u4030 3D58  
                         u3311 28EE                           u3231 27A2                           u3071 3BA2  
                         u3151 3EFC                           u4111 326A                           u4031 3D54  
                         u3320 2920                           u3240 281C                           u3160 269E  
                         u3400 2286                           u3080 3BE6                           u2600 426E  
                         u4120 3288                           u4040 3082                           u4200 0FB4  
                         u3321 291C                           u3241 2818                           u3161 269A  
                         u3401 2282                           u3081 3BE2                           u2601 426A  
                         u4121 3284                           u4041 307C                           u4201 0FB0  
                         u3330 2936                           u3250 283E                           u3170 26B0  
                         u3410 2296                           u3090 3C30                           u2610 4296  
                         u4130 3298                           u4050 3084                           u4210 102E  
                         _T2PR 000FBC                           u3331 2932                           u3251 283A  
                         u3171 26AC                           u3411 2292                           u3091 3C2C  
                         u2611 4292                           u4131 3294                           u4211 102A  
                         u3340 294A                           u3260 2868                           u3180 26C0  
                         u3500 2544                           u3420 22D6                           u2700 1E8C  
                         u2620 42CC                           u4060 3096                           u4300 126E  
                         u4220 10BA                           u4140 0E7E                           u3341 2946  
                         u3261 2864                           u3181 26BC                           u3501 2540  
                         u3421 22D2                           u2701 1E88                           u2621 42C8  
                         u4061 3092                           u4301 126A                           u4221 10B6  
                         u4141 0E7A                           u3350 2964                           u3270 288C  
                         u3190 2704                           u3510 2572                           u3430 22E8  
                         u2710 1E9A                           u2630 1DB4                           u4070 30D2  
                         u4310 13B6                           u4230 10EC                           u4150 0EC8  
                         u3351 2960                           u3271 2888                           u3191 2700  
                         u3511 256E                           u3431 22E4                           u2711 1E96  
                         u2631 1DB0                           u4071 30CE                           u4311 13B2  
                         u4231 10E8                           u4151 0EC4                           u3360 29AC  
                         u3280 28A2                           u3600 43B4                           u3520 2588  
                         u3440 22F8                           u2800 1FD8                           u2720 1F08  
                         u2640 1DC6                           u4080 30FE                           u4400 16A8  
                         u4320 141C                           u4240 112A                           u4160 0ED8  
                         u5040 33B2                           u3361 29A8                           u3281 289E  
                         u3601 43B0                           u3521 2584                           u3441 22F4  
                         u2801 1FD4                           u2721 1F04                           u2641 1DC2  
                         u4081 30FA                           u4401 16A4                           u4321 1418  
                         u4241 1126                           u4161 0ED4                           u5041 33AE  
                         u3370 29DC                           u3290 28C0                           u3610 4076  
                         u3530 259C                           u3450 232E                           u2810 1FE6  
                         u2730 1F20                           u2650 1DD6                           u4090 3114  
                         u4410 177A                           u4330 1464                           u4250 11B6  
                         u4170 0F16                           u5050 3410                           u3371 29D8  
                         u3291 28BC                           u3611 4072                           u3531 2598  
                         u3451 232A                           u2811 1FE2                           u2731 1F1A  
                         u2651 1DD2                           u4091 3110                           u4411 1776  
                         u4331 1460                           u4251 11B2                           u4171 0F12  
                         u5051 340C                           u3380 2A0A                           u3620 40B4  
                         u3540 25B6                           u3460 233E                           u2900 2130  
                         u2820 2004                           u2740 1F22                           u2660 1E18  
                         u3700 3FCE                           u4420 1796                           u4340 1474  
                         u4260 11EC                           u4180 0F28                           u4500 4442  
                         u5060 3540                           u3381 2A06                           u3621 40B0  
                         u3541 25B2                           u3461 233A                           u2901 212C  
                         u2821 2000                           u2661 1E14                           u3701 3FCA  
                         u4421 1792                           u4341 1470                           u4261 11E8  
                         u4181 0F24                           u4501 443E                           u5061 353C  
                         u3630 40D2                           u3550 25FE                           u3470 24B8  
                         u3390 2274                           u2910 2142                           u2830 203C  
                         u2750 1F4A                           u2670 1E2E                           u3710 3FF6  
                         u2590 425C                           u4430 17FE                           u4350 150E  
                         u4270 1204                           u4190 0FA2                           u4510 445A  
                         u3631 40CE                           u3551 25FA                           u3391 2270  
                         u2911 213E                           u2831 2038                           u2751 1F46  
                         u2671 1E2A                           u3711 3FF2                           u2591 4258  
                         u4431 17F8                           u4351 150A                           u4271 1200  
                         u4191 0F9E                           u4511 4456                           u3640 40F2  
                         u3560 262C                           u3480 2512                           u2920 2158  
                         u2840 2082                           u2760 1F68                           u2680 1E40  
                         u3720 4016                           u3800 418C                           u4440 1800  
                         u4360 155C                           u4280 1236                           u4600 2DC4  
                         u3641 40EE                           u3561 2628                           u3481 250E  
                         u2921 2154                           u2841 207E                           u2761 1F64  
                         u2681 1E3C                           u3721 4012                           u4361 1558  
                         u4281 1232                           u4601 2DC0                           u3650 4142  
                         u3570 2666                           u3490 2532                           u2930 216E  
                         u2850 20B8                           u2770 1F88                           u2690 1E50  
                         u3730 4026                           u3810 41AA                           u4450 1814  
                         u4370 160A                           u4290 1244                           u4610 2DE4  
                         u3651 413E                           u3571 2662                           u3491 252E  
                         u3475 24AE                           u2931 216A                           u2851 20B4  
                         u2771 1F84                           u2691 1E4C                           u3731 4022  
                         u3811 41A6                           u4451 1810                           u4371 1606  
                         u4291 1240                           u4611 2DE0                           u5307 38D6  
                         u5227 3396                           u3580 4342                           u2940 2182  
                         u2860 20C8                           u2780 1F96                           u4700 3A80  
                         u4460 4B30                           u3660 4B9E                           u3820 41D2  
                         u3900 35BA                           u4380 1646                           u4620 2EFA  
                         u3740 45F6                           u3581 433E                           u2941 217E  
                         u2861 20C4                           u2781 1F92                           u4701 3A7C  
                         u4461 4B28                           u3661 4B9A                           u3821 41CE  
                         u3805 4182                           u3901 35B6                           u4381 1642  
                         u4621 2EF6                           u3741 45F2                           u5317 3926  
                         u5237 33BE                           u3590 4380                           u2950 219C  
                         u2870 20F4                           u2790 1FA6                           u3670 3F58  
                         u4710 3A8E                           u4630 4D34                           u3830 41FC  
                         u3910 35DC                           u4390 1654                           u3750 4614  
                         u3591 437C                           u2951 2198                           u2871 20F0  
                         u2791 1FA2                           u3671 3F54                           u4711 3A8A  
                         u4631 4D30                           u3831 41F8                           u3911 35D8  
                         u4391 1650                           u3751 4610                           u5327 49DC  
                         u5247 3438                           u2960 21D6                           u2880 2104  
                         u3680 3F8C                           u4720 3AC8                           u4640 3948  
                         u4800 1AD6                           u3760 4630                           u4480 4548  
                         u2961 21D2                           u2881 2100                           u4721 3AC4  
                         u4641 3944                           u4801 1AD2                           u3761 462C  
                         u4481 4544                           u5337 441C                           u5257 3762  
                         u2970 21E8                           u2890 2120                           u3690 3FBA  
                         u4730 3AD6                           u4650 3956                           u4810 1B86  
                         u3770 4570                           u3850 4236                           u3930 3648  
                         u4490 4560                           u2971 21E4                           u2891 211C  
                         u3691 3FB6                           u4731 3AD2                           u4651 3952  
                         u4811 1B82                           u3771 456C                           u3851 4230  
                         u3931 3644                           u4491 455C                           u5347 4522  
                         u5267 37D6                           u2980 21F8                           u4660 39B2  
                         u4820 1BD0                           u3780 45C6                           u3860 4238  
                         u3940 366C                           u4740 475E                           u4580 4BF4  
                         u4900 384C                           u2981 21F4                           u3685 3F82  
                         u4661 39AE                           u4821 1BCC                           u3781 45C2  
                         u3845 420E                           u3925 35F0                           u4741 475A  
                         u4581 4BF0                           u5357 4BCA                           u4901 3848  
                         u5277 3828                           u2990 2218                           u4670 3A08  
                         u4478 4B32                           u4830 4C24                           u3790 4B62  
                         u3950 3688                           u3926 35FA                           u3870 4AC0  
                         u4590 2D74                           u4910 3884                           u2991 2214  
                         u4671 3A04                           u4751 1884                           u5367 47D0  
                         u4831 4C20                           u3791 4B5E                           u3951 3684  
                         u3927 360A                           u3871 4ABC                           u4591 2D70  
                         u4911 3880                           u5287 3862                           u4680 3A52  
                         u4760 197E                           u3960 36DC                           u3880 466E  
                         u4920 38BC                           u4681 3A4E                           u4761 197A  
                         u3945 3662                           u3881 466A                           u4921 38B8  
                         u5297 389A                           u4690 3A70                           u4770 1A0C  
                         u3970 36F8                           u3890 358C                           u4930 38CA  
                         u4691 3A6C                           u4771 1A08                           u3971 36F4  
                         u4931 38C6                           u4780 1A60                           u3980 3734  
                         u4940 38F4                           u4781 1A5C                           u3981 3730  
                         u3965 36D2                           u4941 38EE                           u4790 1AB6  
                         u3990 485C                           u4950 3908                           u4942 38F6  
                         u4870 37F4                           u4791 1AB2                           u3895 3582  
                         u3991 4858                           u4951 3902                           u4871 37EE  
                         u4960 391A                           u4952 390A                           u4880 3808  
                         u4872 37F6                           u4961 3916                           u4881 3802  
                         u4890 381A                           u4882 380A                           u4891 3816  
                         abs@a 0013                           _dbuf 0110                           _labs 4650  
                         _main 32D0                           _dtoa 3052                           _prec 00F1  
                         _vals 017E                           pad@i 0018                           pad@p 0015  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 001A                           fsr2l 000FD9  
                         _stop 44E4                  ___fpclassifyf 414C                           prodh 000FF4  
                         prodl 000FF3                           start 0000                ___fldiv@new_exp 0043  
       __end_of_color_read_Red 48FE         __end_of_color_read_lum 48AE                   ___param_bank 000000  
                        ??_abs 0015                          ??_pad 0017                   ?_readColours 000C  
              _RunOneBlockTime 00F9                  ___fltol@sign1 0009                __end_of___aodiv 3C72  
                        ?_labs 0001                __end_of___fladd 225A                          ?_main 0001  
                        ?_dtoa 001C                __end_of___aomod 3F42                __end_of___fldiv 2A1E  
              __end_of___flneg 4BC0                __end_of___flmul 2684                __end_of___flsub 4A7E  
              __end_of___fltol 4048                    colour_rel@B 0074                    colour_rel@G 0070  
                        ?_stop 0014                    colour_rel@L 0060                    colour_rel@R 006C  
              __end_of___lwdiv 4650                   vfpfcnvrt@fmt 0097                          _TMR0H 000FD4  
                        _TMR0L 000FD3        __end_of_sendCharSerial4 4D3A     __end_of_I2C_2_Master_Start 4D64  
   __end_of_I2C_2_Master_Write 4D46                          _flags 00F5                          _fputc 424A  
                        _fputs 4AC2                          labs@a 0001                          pad@fp 0011  
                        _power 00FD                          _width 00EF                          _putch 4D6C  
                        dtoa@d 001E                          dtoa@i 003C                          dtoa@n 0034  
                        dtoa@p 0030                          dtoa@s 003E                          dtoa@w 0032  
                        tablat 000FF5               ??_Colour_decider 004F                          status 000FD8  
              __end_of_sprintf 47BC                 ?___fpclassifyf 0001        __end_of_color_read_Blue 499E  
        _I2C_2_Master_RepStart 4D46                ?_color_read_Red 0005                ?_color_read_lum 0005  
              __initialization 49EC        __end_of_turnCalibration 3936                   __end_of_labs 46B6  
                 __end_of_main 3544                   __end_of_dtoa 32D0                   __end_of_stop 4562  
              _colour_rel$3124 0064                _colour_rel$3125 0068                         ??_labs 0005  
                       ??_main 00D1                         ??_dtoa 0026                         ??_stop 0018  
                __activetblptr 000003              Colour_decider@Hue 007C              Colour_decider@rel 004D  
                 ?_setMotorPWM 000E                         ?_fputc 0001                         ?_fputs 000A  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RC7PPS 000E69  
                       _RD5PPS 000E6F                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       _RG6PPS 000E88       __end_of_color_click_init 480E                         _RX4PPS 000E15  
                       _TX4REG 000EE4               __end_of___xxtofl 3AEA                  ??_Timer0_init 0001  
                 _CCPTMRS0bits 000FAD                   vfprintf@cfmt 00AE                         ___flge 4048  
                       ___fleq 4314                      ??___aodiv 0011                      ??___fladd 0009  
                    ??___aomod 0011                         ___wmul 4C78                      ??___fldiv 003A  
                    ??___flneg 0005                      ??___flmul 0019                      ??___flsub 0032  
                    ??___fltol 0005                         _efgtoa 0E5A                      ??___lwdiv 000B  
                       _floorf 3544                         _memcpy 480E                         clear_0 4A12  
                       clear_1 4A1E                         clear_2 4A2A                         _motorL 0175  
                       _motorR 016C                         isa$std 000001                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 4A7E                         fputc@c 0001  
                       fputs@c 000E                         fputs@i 000F                         fputs@s 000A  
              ___fpclassifyf@e 0009                ___fpclassifyf@u 000B                ___fpclassifyf@x 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 476A                         stop@mL 0014                         stop@mR 0016  
            ??_initDCmotorsPWM 0003                      ??_sprintf 005F               __end_of_turnLeft 445C  
                   ___flge@ff1 002A                     ___flge@ff2 002E                ??___fpclassifyf 0005  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                   ___fleq@ff1 0032                     ___fleq@ff2 0036                     __accesstop 0060  
      __end_of__initialization 4A32                     ___flneg@f1 0001       __end_of_color_read_Green 494E  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0001  
             ?_color_read_Blue 0005                _Interrupts_init 4D6E                 __pcstackCOMRAM 0001  
             ?_turnCalibration 0020                   __pidataBANK0 4D64                  __end_of_fputc 4314  
                __end_of_fputs 4B06                  __end_of_putch 4D6E            __end_of_Timer0_init 4D04  
                      ??_fputc 0005                        ??_fputs 000E           Colour_decider@F14357 0100  
                      ??_putch 0001                     __pbssBANK0 00D3                     __pbssBANK1 0100  
                   __pbssBANK2 0200                     _getTMR0val 4C9E              _color_writetoaddr 4CC4  
                 _T2CLKCONbits 000FBF             Colour_decider@Cmax 0072             Colour_decider@Cmin 0076  
         Colour_decider@Cmax_i 0064                        ?___flge 002A                        ?___fleq 0032  
           ?_color_writetoaddr 0003                        ?___wmul 0001             Colour_decider@vals 004B  
                      ?_efgtoa 0060                        ?_floorf 004B                        ?_memcpy 0001  
            __end_of_TurnDelay 4BF6            ??_color_writetoaddr 0004                        ?_strcpy 0001  
                colour_rel@rel 004D                      ?___xxtofl 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 2A1E        __end_of_Interrupts_init 4D70         color_writetoaddr@value 0003  
             ??_color_read_Red 0007               ??_color_read_lum 0007      __end_of_color_writetoaddr 4CE4  
           _I2C_2_Master_Start 4D5A                     _initUSART4 4D04             _I2C_2_Master_Write 4D3A  
                      __Hparam 0000                        _WayBack 02A0                        __Lparam 0000  
            color_read_Red@tmp 000A                    _Timer0_init 4CE4        sendStringSerial4@string 0002  
                      ___aodiv 3AEA                        ___fladd 1D9A                        ___aomod 3DDE  
                      ___fldiv 2684                        ___flneg 4B88                        ___flmul 225A  
                      ___flsub 4A38                        ___fltol 3F42            ?_I2C_2_Master_Start 0001  
                      ___lwdiv 45DC            ?_I2C_2_Master_Write 0001                      ?_vfprintf 00A8  
                 __psmallconst 0E00                   turnLeft45@mL 001A                   turnLeft45@mR 001C  
                      __pcinit 49EC                        __ramtop 0E00                      ?_turnLeft 0014  
                      __ptext0 32D0                        __ptext1 3756                        __ptext2 499E  
                      __ptext3 43BE                        __ptext4 44E4                        __ptext5 3C72  
                      __ptext6 4C78                        __ptext7 45DC                        __ptext8 4BC0  
                      __ptext9 476A                      _T2CONbits 000FBD                     ??___xxtofl 0005  
                    _T2HLTbits 000FBE                        efgtoa@c 0066                        efgtoa@d 0074  
                      efgtoa@e 0078                        efgtoa@f 0062                        efgtoa@g 008D  
                      efgtoa@h 0082                        efgtoa@i 0080                        efgtoa@l 0086  
                      efgtoa@m 0076                        efgtoa@n 008B                        efgtoa@p 006B  
                      efgtoa@t 006D                        efgtoa@u 0091                        efgtoa@w 007A  
                _RxBufWriteCnt 00F8              color_read_lum@tmp 000A                        main@buf 0186  
                      _sprintf 476A           ??_I2C_2_Master_Start 0002           ??_I2C_2_Master_Write 0002  
         end_of_initialization 4A32                        floorf@e 0059                        floorf@m 0055  
                      floorf@u 005B                        floorf@x 004B                        memcpy@d 0007  
                      memcpy@n 0005                        memcpy@s 0009                        fputc@fp 0003  
                      fputs@fp 000C              ?_color_click_init 0001                    ?_getTMR0val 0001  
           ??_color_click_init 0005                     _move_count 010C              turnCalibration@mL 0020  
            turnCalibration@mR 0022              __end_of_vfpfcnvrt 3052                     efgtoa@mode 0072  
                   efgtoa@sign 008A                        postdec1 000FE5                        postdec2 000FDD  
                  _Turn45Delay 00FB                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 009D                     ??_vfprintf 005F  
                      strcpy@d 0007                        strcpy@s 0005                _initDCmotorsPWM 445C  
                   ??_turnLeft 0018                      _PORTFbits 000F8E             setMotorPWM@negDuty 0013  
                  ___fladd@grs 0010                  ___xxtofl@sign 0009                      _TRISAbits 000F81  
           setMotorPWM@posDuty 0012                      _TRISCbits 000F83                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
                    _TRISHbits 000F88                    ___fldiv@grs 0045                    ___fldiv@rem 003E  
     color_writetoaddr@address 0004        ??_I2C_2_Master_RepStart 0002                    ?_colour_rel 004B  
             ?_Interrupts_init 0001                    ___flmul@grs 001E                    _CCP1CONbits 000FAB  
                   main@colour 01EA                   _EUSART4RXbuf 00D3                   _EUSART4TXbuf 0264  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0005                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0001  
           ??_color_read_Green 0007                     _turnLeft45 499E                 __end_of___flge 414C  
               __end_of___fleq 43BE                    vfpfcnvrt@ap 0099                    vfpfcnvrt@cp 00A6  
                  vfpfcnvrt@fp 0095                 __end_of___wmul 4C9E                 __end_of_efgtoa 1854  
               __end_of_floorf 3756                 __end_of_memcpy 485E                     floorf@F526 00E7  
               __end_of_strcpy 4AC2            start_initialization 49EC                    __end_of_abs 4B88  
                  __end_of_pad 45DC                  _TxBufWriteCnt 005F          __end_of___fpclassifyf 424A  
          color_read_Green@tmp 000A        __end_of_initDCmotorsPWM 44E4                    vfprintf@fmt 00AA  
                     ??___flge 0032                       ??___fleq 003A                       ??___wmul 0005  
                ??_readColours 000E                       ??_efgtoa 0067                    __pdataBANK0 00F9  
                     ??_floorf 004F                       ??_memcpy 0007                       ??_strcpy 0005  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0036  
                    ___fldiv@b 0032                      ___flmul@a 0015                      ___flmul@b 0011  
                  __pbssCOMRAM 005F                      ___flsub@a 002E                      ___flsub@b 002A  
                    _TurnDelay 4BC0                  __pcstackBANK0 0060                  __pcstackBANK1 0186  
             ___aodiv@dividend 0001          Colour_decider@RGB_col 0066                    _efgtoa$2727 006F  
             ___lwdiv@dividend 0007                      _dtoa$2696 002E                   ?_Timer0_init 0001  
                  ?_turnLeft45 001A                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0032               ___aodiv@quotient 0013  
                     ?___flneg 0001                       ?___flmul 0011                       ?___flsub 002A  
                     ?___fltol 0001            _Colour_decider$3126 0060                       ?___lwdiv 0007  
         I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004                    __smallconst 0E00  
          __end_of_readColours 4714              _I2C_2_Master_Idle 4C50              _I2C_2_Master_Init 4C26  
            _I2C_2_Master_Read 4B06              _I2C_2_Master_Stop 4D50                     ?_TurnDelay 0001  
                 _RxBufReadCnt 00F7             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001                  ??_setMotorPWM 0010             ?_I2C_2_Master_Stop 0001  
             ___lwdiv@quotient 000B       initDCmotorsPWM@PWMperiod 0001                       ?_sprintf 00B0  
             getTMR0val@moving 0001                 colour_rel@vals 004B              _sendStringSerial4 4BF6  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Init 0001            ??_I2C_2_Master_Read 0002  
               ___wmul@product 0005                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0002  
                     _LATDbits 000F7C                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _LATHbits 000F80                   ??_getTMR0val 0001             ?_sendStringSerial4 0002  
                     _PIE4bits 000E2D                      _lost_flag 00F3                       _PIR4bits 000E37  
             ?_initDCmotorsPWM 0001              ??_sendCharSerial4 0001                       _SSP2CON2 000EDA  
               _Colour_decider 1854            ??_sendStringSerial4 0004                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 2D4C      __end_of_I2C_2_Master_Idle 4C78      __end_of_I2C_2_Master_Init 4C50  
    __end_of_I2C_2_Master_Read 4B48              ___wmul@multiplier 0001      __end_of_I2C_2_Master_Stop 4D5A  
                 setMotorPWM@m 000E                       _DataFlag 00FF    I2C_2_Master_Write@data_byte 0002  
            ??_color_read_Blue 0007             __end_of_getTMR0val 4CC4                   _TxBufReadCnt 00F6  
                   vfpfcnvrt@c 00A5              ??_turnCalibration 0024                      copy_data0 4A00  
    __end_of_sendStringSerial4 4C26                   ??_colour_rel 004F  __end_of_I2C_2_Master_RepStart 4D50  
           color_read_Blue@tmp 000A            __end_of_setMotorPWM 3DDE                   ??_initUSART4 0001  
                     __Hrparam 0000         __end_of_Colour_decider 1D9A                      memcpy@tmp 000B  
                   vfprintf@ap 00AC                       __Lrparam 0000                     vfprintf@fp 00A8  
         TurnDelay@Turn45Delay 0001                    _readColours 46B6                     ?_vfpfcnvrt 0095  
              ___aodiv@divisor 0009                ___aodiv@counter 0011             __end_of_colour_rel 2D4C  
                   _ANSELDbits 000EA7             ___fpclassifyf@F465 00EB                     _ANSELFbits 000EB4  
                   sprintf@fmt 00B2                       ___xxtofl 3936                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6                    ??_TurnDelay 0003                   _Time_forward 0200  
              ___lwdiv@divisor 0009             __end_of_initUSART4 4D22                ___lwdiv@counter 000D  
                     __ptext10 4714                       __ptext11 2D4C                       __ptext20 4562  
                     __ptext12 0E5A                       __ptext21 4AC2                       __ptext13 4A7E  
                     __ptext30 485E                       __ptext22 424A                       __ptext14 480E  
                     __ptext31 48AE                       __ptext23 4D6C                       __ptext15 4650  
                     __ptext40 47BC                       __ptext32 48FE                       __ptext24 4B48  
                     __ptext16 3544                       __ptext41 4CC4                       __ptext33 494E  
                     __ptext25 3DDE                       __ptext17 414C                       __ptext50 3936  
                     __ptext42 4D3A                       __ptext34 4D46                       __ptext26 3AEA  
                     __ptext18 4B88                       __ptext51 3F42                       __ptext43 4D50  
                     __ptext35 4B06                       __ptext27 4BF6                       __ptext19 3052  
                     __ptext52 4A38                       __ptext44 4D5A                       __ptext36 4D04  
                     __ptext28 4D22                       __ptext53 1D9A                       __ptext45 4C50  
                     __ptext37 445C                       __ptext29 46B6                       __ptext54 225A  
                     __ptext46 4C26                       __ptext38 4C9E                       __ptext55 4048  
                     __ptext47 4CE4                       __ptext39 2A1E                       __ptext56 4314  
                     __ptext48 4D6E                       __ptext57 2684                       __ptext49 1854  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                     strcpy@dest 0001  
                   turnLeft@mL 0014                     turnLeft@mR 0016                ?_Colour_decider 004B  
                     efgtoa@fp 0060                       efgtoa@ne 0069                       efgtoa@pp 0071  
                     efgtoa@ou 007C                       isa$xinst 000000                     _RC4STAbits 000EE7  
                     _vfprintf 4714                       _run_flag 010E                       _turnLeft 43BE  
             ___aomod@dividend 0001                       memcpy@d1 0001                       memcpy@s1 0003  
                  _setMotorPWM 3C72                      sprintf@ap 00C4                      strcpy@src 0003  
                 ??_turnLeft45 001E                    efgtoa@nmode 0073                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 009B                ___aomod@counter 0011               _color_click_init 47BC  
                     sprintf@f 00C6                       sprintf@s 00B0                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                  ___fladd@signs 000D             __end_of_turnLeft45 49EC  
                   _TX4STAbits 000EE8                   ___aodiv@sign 0012                _sendCharSerial4 4D22  
                 ___fladd@aexp 000E                   ___fladd@bexp 000F                   ___aomod@sign 0012  
