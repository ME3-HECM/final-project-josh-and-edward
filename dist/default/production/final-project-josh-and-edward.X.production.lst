

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
                                                                                               Sat Feb 25 21:08:49 2023
=======
                                                                                               Mon Feb 27 01:05:53 2023
>>>>>>> Stashed changes

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    70   000000                     
    71                           ; Generated 06/04/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
<<<<<<< Updated upstream
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F67K40 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000000                     
    90                           	psect	idataBANK0
    91   001BD8                     __pidataBANK0:
    92                           	callstack 0
    93                           
    94                           ;initializer for _DataFlag
    95   001BD8  01                 	db	1
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _SSP2CON2bits	set	3802
   100   000000                     _RX4PPS	set	3605
   101   000000                     _SSP2CLKPPS	set	3612
   102   000000                     _SSP2DATPPS	set	3613
   103   000000                     _ANSELDbits	set	3751
   104   000000                     _SSP2ADD	set	3798
   105   000000                     _SSP2CON1bits	set	3801
   106   000000                     _RC4REG	set	3811
   107   000000                     _SP4BRGL	set	3813
   108   000000                     _TX4STAbits	set	3816
   109   000000                     _BAUD4CONbits	set	3817
   110   000000                     _SSP2CON2	set	3802
   111   000000                     _TRISDbits	set	3972
   112   000000                     _SSP2STAT	set	3800
   113   000000                     _INTCONbits	set	4082
   114   000000                     _SSP2BUF	set	3797
   115   000000                     _PIE2bits	set	3627
   116   000000                     _PIE4bits	set	3629
   117   000000                     _PIR4bits	set	3639
   118   000000                     _RC0PPS	set	3682
   119   000000                     _RD5PPS	set	3695
   120   000000                     _RD6PPS	set	3696
   121                           
   122                           	psect	smallconst
   123   000E00                     __psmallconst:
   124                           	callstack 0
   125   000E00  00                 	db	0
   126   000E01                     STR_1:
   127   000E01  72                 	db	114	;'r'
   128   000E02  65                 	db	101	;'e'
   129   000E03  64                 	db	100	;'d'
   130   000E04  3D                 	db	61	;'='
   131   000E05  25                 	db	37
   132   000E06  64                 	db	100	;'d'
   133   000E07  20                 	db	32
   134   000E08  67                 	db	103	;'g'
   135   000E09  72                 	db	114	;'r'
   136   000E0A  65                 	db	101	;'e'
   137   000E0B  65                 	db	101	;'e'
   138   000E0C  6E                 	db	110	;'n'
   139   000E0D  3D                 	db	61	;'='
   140   000E0E  25                 	db	37
   141   000E0F  64                 	db	100	;'d'
   142   000E10  20                 	db	32
   143   000E11  62                 	db	98	;'b'
   144   000E12  6C                 	db	108	;'l'
   145   000E13  75                 	db	117	;'u'
   146   000E14  65                 	db	101	;'e'
   147   000E15  3D                 	db	61	;'='
   148   000E16  25                 	db	37
   149   000E17  64                 	db	100	;'d'
   150   000E18  20                 	db	32
   151   000E19  6C                 	db	108	;'l'
   152   000E1A  75                 	db	117	;'u'
   153   000E1B  6D                 	db	109	;'m'
   154   000E1C  3D                 	db	61	;'='
   155   000E1D  25                 	db	37
   156   000E1E  64                 	db	100	;'d'
   157   000E1F  0D                 	db	13
   158   000E20  0A                 	db	10
   159   000E21  00                 	db	0
   160   000E22  00                 	db	0	; dummy byte at the end
   161   000000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165   0018DE                     __pcinit:
   166                           	callstack 0
   167   0018DE                     start_initialization:
   168                           	callstack 0
   169   0018DE                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to BANK0 (1 bytes)
   173                           ; load TBLPTR registers with __pidataBANK0
   174   0018DE  0ED8               	movlw	low __pidataBANK0
   175   0018E0  6EF6               	movwf	tblptrl,c
   176   0018E2  0E1B               	movlw	high __pidataBANK0
   177   0018E4  6EF7               	movwf	tblptrh,c
   178   0018E6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   179   0018E8  6EF8               	movwf	tblptru,c
   180   0018EA  0009               	tblrd		*+	;fetch initializer
   181   0018EC  CFF5 F0F2          	movff	tablat,__pdataBANK0
   182                           
   183                           ; Clear objects allocated to BANK1 (60 bytes)
   184   0018F0  EE01  F000         	lfsr	0,__pbssBANK1
   185   0018F4  0E3C               	movlw	60
   186   0018F6                     clear_0:
   187   0018F6  6AEE               	clrf	postinc0,c
   188   0018F8  06E8               	decf	wreg,f,c
   189   0018FA  E1FD               	bnz	clear_0
   190                           
   191                           ; Clear objects allocated to BANK0 (65 bytes)
   192   0018FC  EE00  F0B1         	lfsr	0,__pbssBANK0
   193   001900  0E41               	movlw	65
   194   001902                     clear_1:
   195   001902  6AEE               	clrf	postinc0,c
   196   001904  06E8               	decf	wreg,f,c
   197   001906  E1FD               	bnz	clear_1
   198                           
   199                           ; Clear objects allocated to COMRAM (4 bytes)
   200   001908  6A5A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   201   00190A  6A59               	clrf	(__pbssCOMRAM+2)& (0+255),c
   202   00190C  6A58               	clrf	(__pbssCOMRAM+1)& (0+255),c
   203   00190E  6A57               	clrf	__pbssCOMRAM& (0+255),c
   204   001910                     end_of_initialization:
   205                           	callstack 0
   206   001910                     __end_of__initialization:
   207                           	callstack 0
   208   001910  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   001912  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   001914  0E00               	movlw	low (__Lsmallconst shr (0+16))
   211   001916  6EF8               	movwf	tblptru,c
   212   001918  0E0E               	movlw	high __Lsmallconst
   213   00191A  6EF7               	movwf	tblptrh,c
   214   00191C  0100               	movlb	0
   215   00191E  EFD2  F00A         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218   000057                     __pbssCOMRAM:
   219                           	callstack 0
   220   000057                     _TxBufReadCnt:
   221                           	callstack 0
   222   000057                     	ds	1
   223   000058                     _TxBufWriteCnt:
   224                           	callstack 0
   225   000058                     	ds	1
   226   000059                     _RxBufReadCnt:
   227                           	callstack 0
   228   000059                     	ds	1
   229   00005A                     _RxBufWriteCnt:
   230                           	callstack 0
   231   00005A                     	ds	1
   232                           
   233                           	psect	bssBANK0
   234   0000B1                     __pbssBANK0:
   235                           	callstack 0
   236   0000B1                     _EUSART4RXbuf:
   237                           	callstack 0
   238   0000B1                     	ds	20
   239   0000C5                     _width:
   240                           	callstack 0
   241   0000C5                     	ds	2
   242   0000C7                     _prec:
   243                           	callstack 0
   244   0000C7                     	ds	2
   245   0000C9                     _flags:
   246                           	callstack 0
   247   0000C9                     	ds	1
   248   0000CA                     _dbuf:
   249                           	callstack 0
   250   0000CA                     	ds	32
   251   0000EA                     _vals:
   252                           	callstack 0
   253   0000EA                     	ds	8
   254                           
   255                           	psect	dataBANK0
   256   0000F2                     __pdataBANK0:
   257                           	callstack 0
   258   0000F2                     _DataFlag:
   259                           	callstack 0
   260   0000F2                     	ds	1
   261                           
   262                           	psect	bssBANK1
   263   000100                     __pbssBANK1:
   264                           	callstack 0
   265   000100                     _EUSART4TXbuf:
   266                           	callstack 0
   267   000100                     	ds	60
   268                           
   269                           	psect	cstackBANK0
   270   000060                     __pcstackBANK0:
   271                           	callstack 0
   272   000060                     ?_vfprintf:
   273                           	callstack 0
   274   000060                     vfprintf@fp:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x0
   278   000060                     	ds	2
   279   000062                     vfprintf@fmt:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x2
   283   000062                     	ds	2
   284   000064                     vfprintf@ap:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x4
   288   000064                     	ds	2
   289   000066                     ?_sprintf:
   290                           	callstack 0
   291   000066                     sprintf@s:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x6
   295   000066                     	ds	2
   296   000068                     sprintf@fmt:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x8
   300   000068                     	ds	10
   301   000072                     sprintf@ap:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x12
   305   000072                     	ds	2
   306   000074                     sprintf@f:
   307                           	callstack 0
   308                           
   309                           ; 11 bytes @ 0x14
   310   000074                     	ds	11
   311   00007F                     main@buf:
   312                           	callstack 0
   313                           
   314                           ; 50 bytes @ 0x1F
   315   00007F                     	ds	50
   316                           
   317                           	psect	cstackCOMRAM
   318   000001                     __pcstackCOMRAM:
   319                           	callstack 0
   320   000001                     ??_getCharFromTxBuf:
   321   000001                     putCharToRxBuf@byte:
   322                           	callstack 0
   323   000001                     
   324                           ; 1 bytes @ 0x0
   325   000001                     	ds	2
   326   000003                     ??_HighISR:
   327                           
   328                           ; 1 bytes @ 0x2
   329   000003                     	ds	2
   330   000005                     ??_I2C_2_Master_Idle:
   331   000005                     ?___aodiv:
   332                           	callstack 0
   333   000005                     ?___aomod:
   334                           	callstack 0
   335   000005                     putCharToTxBuf@byte:
   336                           	callstack 0
   337   000005                     fputc@c:
   338                           	callstack 0
   339   000005                     ___aodiv@dividend:
   340                           	callstack 0
   341   000005                     ___aomod@dividend:
   342                           	callstack 0
   343                           
   344                           ; 8 bytes @ 0x4
   345   000005                     	ds	1
   346   000006                     ??_I2C_2_Master_Read:
   347   000006                     I2C_2_Master_Write@data_byte:
   348                           	callstack 0
   349   000006                     TxBufferedString@string:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x5
   353   000006                     	ds	1
   354   000007                     color_writetoaddr@value:
   355                           	callstack 0
   356   000007                     I2C_2_Master_Read@ack:
   357                           	callstack 0
   358   000007                     fputc@fp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x6
   362   000007                     	ds	1
   363   000008                     color_writetoaddr@address:
   364                           	callstack 0
   365   000008                     I2C_2_Master_Read@tmp:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x7
   369   000008                     	ds	1
   370   000009                     ??_fputc:
   371   000009                     ??_color_click_init:
   372   000009                     ?_color_read_lum:
   373                           	callstack 0
   374   000009                     ?_color_read_Red:
   375                           	callstack 0
   376   000009                     ?_color_read_Green:
   377                           	callstack 0
   378   000009                     ?_color_read_Blue:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x8
   382   000009                     	ds	2
   383   00000B                     ??_color_read_lum:
   384   00000B                     ??_color_read_Red:
   385   00000B                     ??_color_read_Green:
   386   00000B                     ??_color_read_Blue:
   387                           
   388                           ; 1 bytes @ 0xA
   389   00000B                     	ds	2
   390   00000D                     ___aodiv@divisor:
   391                           	callstack 0
   392   00000D                     ___aomod@divisor:
   393                           	callstack 0
   394                           
   395                           ; 8 bytes @ 0xC
   396   00000D                     	ds	1
   397   00000E                     color_read_lum@tmp:
   398                           	callstack 0
   399   00000E                     color_read_Red@tmp:
   400                           	callstack 0
   401   00000E                     color_read_Green@tmp:
   402                           	callstack 0
   403   00000E                     color_read_Blue@tmp:
   404                           	callstack 0
   405   00000E                     fputs@s:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0xD
   409   00000E                     	ds	2
   410   000010                     readColours@vals:
   411                           	callstack 0
   412   000010                     fputs@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xF
   416   000010                     	ds	2
   417   000012                     fputs@c:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0x11
   421   000012                     	ds	1
   422   000013                     fputs@i:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x12
   426   000013                     	ds	2
   427   000015                     ___aodiv@counter:
   428                           	callstack 0
   429   000015                     ___aomod@counter:
   430                           	callstack 0
   431   000015                     pad@fp:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x14
   435   000015                     	ds	1
   436   000016                     ___aodiv@sign:
   437                           	callstack 0
   438   000016                     ___aomod@sign:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x15
   442   000016                     	ds	1
   443   000017                     ?_abs:
   444                           	callstack 0
   445   000017                     pad@buf:
   446                           	callstack 0
   447   000017                     abs@a:
   448                           	callstack 0
   449   000017                     ___aodiv@quotient:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x16
   453   000017                     	ds	2
   454   000019                     ??_abs:
   455   000019                     pad@p:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x18
   459   000019                     	ds	2
   460   00001B                     ??_pad:
   461                           
   462                           ; 1 bytes @ 0x1A
   463   00001B                     	ds	1
   464   00001C                     pad@i:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x1B
   468   00001C                     	ds	2
   469   00001E                     pad@w:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x1D
   473   00001E                     	ds	2
   474   000020                     dtoa@fp:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x1F
   478   000020                     	ds	2
   479   000022                     dtoa@d:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x21
   483   000022                     	ds	8
   484   00002A                     ??_dtoa:
   485                           
   486                           ; 1 bytes @ 0x29
   487   00002A                     	ds	8
   488   000032                     _dtoa$1152:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x31
   492   000032                     	ds	2
   493   000034                     dtoa@p:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x33
   497   000034                     	ds	2
   498   000036                     dtoa@w:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x35
   502   000036                     	ds	2
   503   000038                     dtoa@n:
   504                           	callstack 0
   505                           
   506                           ; 8 bytes @ 0x37
   507   000038                     	ds	8
   508   000040                     dtoa@s:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x3F
   512   000040                     	ds	1
   513   000041                     dtoa@i:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x40
   517   000041                     	ds	2
   518   000043                     vfpfcnvrt@fp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x42
   522   000043                     	ds	2
   523   000045                     vfpfcnvrt@fmt:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x44
   527   000045                     	ds	2
   528   000047                     vfpfcnvrt@ap:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x46
   532   000047                     	ds	2
   533   000049                     ??_vfpfcnvrt:
   534                           
   535                           ; 1 bytes @ 0x48
   536   000049                     	ds	2
   537   00004B                     vfpfcnvrt@convarg:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x4A
   541   00004B                     	ds	8
   542   000053                     vfpfcnvrt@cp:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x52
   546   000053                     	ds	2
   547   000055                     vfprintf@cfmt:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x54
   551   000055                     	ds	2
   552   000057                     
   553                           ; 1 bytes @ 0x56
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 25 in file "main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  buf            50   31[BANK0 ] unsigned char [50]
   564 ;;  ADC             2    0        unsigned int 
   565 ;;  frac_part       2    0        unsigned int 
   566 ;;  int_part        2    0        unsigned int 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   577 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   579 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   580 ;;Total ram usage:       50 bytes
   581 ;; Hardware stack levels required when called: 10
   582 ;; This function calls:
   583 ;;		_I2C_2_Master_Init
   584 ;;		_Interrupts_init
   585 ;;		_TxBufferedString
   586 ;;		_color_click_init
   587 ;;		_initUSART4
   588 ;;		_readColours
   589 ;;		_sendTxBuf
   590 ;;		_sprintf
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597   0015A4                     __ptext0:
   598                           	callstack 0
   599   0015A4                     _main:
   600                           	callstack 21
   601   0015A4                     
   602                           ;main.c: 26:     initUSART4();
   603   0015A4  ECB4  F00D         	call	_initUSART4	;wreg free
   604   0015A8                     
   605                           ;main.c: 27:     Interrupts_init();
   606   0015A8  ECCF  F00D         	call	_Interrupts_init	;wreg free
   607   0015AC                     
   608                           ;main.c: 28:     color_click_init();
   609   0015AC  ECF4  F00C         	call	_color_click_init	;wreg free
   610   0015B0                     
   611                           ;main.c: 29:     I2C_2_Master_Init();
   612   0015B0  EC51  F00D         	call	_I2C_2_Master_Init	;wreg free
   613   0015B4                     l2090:
   614                           
   615                           ;main.c: 36:     {;main.c: 38:     readColours(&vals);
   616   0015B4  0EEA               	movlw	low _vals
   617   0015B6  6E10               	movwf	readColours@vals^0,c
   618   0015B8  0E00               	movlw	high _vals
   619   0015BA  6E11               	movwf	(readColours@vals+1)^0,c
   620   0015BC  EC4F  F00B         	call	_readColours	;wreg free
   621   0015C0                     
   622                           ;main.c: 39:     sprintf(buf,"red=%d green=%d blue=%d lum=%d\r\n",vals.R,vals.G,vals.B,v
      +                          als.L);
   623   0015C0  0E7F               	movlw	low main@buf
   624   0015C2  0100               	movlb	0	; () banked
   625   0015C4  6F66               	movwf	sprintf@s& (0+255),b
   626   0015C6  0E00               	movlw	high main@buf
   627   0015C8  6F67               	movwf	(sprintf@s+1)& (0+255),b
   628   0015CA  0E01               	movlw	low STR_1
   629   0015CC  6F68               	movwf	sprintf@fmt& (0+255),b
   630   0015CE  0E0E               	movlw	high STR_1
   631   0015D0  6F69               	movwf	(sprintf@fmt+1)& (0+255),b
   632   0015D2  C0EA  F06A         	movff	_vals,?_sprintf+4
   633   0015D6  C0EB  F06B         	movff	_vals+1,?_sprintf+5
   634   0015DA  C0EC  F06C         	movff	_vals+2,?_sprintf+6
   635   0015DE  C0ED  F06D         	movff	_vals+3,?_sprintf+7
   636   0015E2  C0EE  F06E         	movff	_vals+4,?_sprintf+8
   637   0015E6  C0EF  F06F         	movff	_vals+5,?_sprintf+9
   638   0015EA  C0F0  F070         	movff	_vals+6,?_sprintf+10
   639   0015EE  C0F1  F071         	movff	_vals+7,?_sprintf+11
   640   0015F2  EC7E  F00B         	call	_sprintf	;wreg free
   641   0015F6                     
   642                           ;main.c: 40:     TxBufferedString(buf);
   643   0015F6  0E7F               	movlw	low main@buf
   644   0015F8  6E06               	movwf	TxBufferedString@string^0,c
   645   0015FA  0E00               	movlw	high main@buf
   646   0015FC  6E07               	movwf	(TxBufferedString@string+1)^0,c
   647   0015FE  EC0E  F00D         	call	_TxBufferedString	;wreg free
   648                           
   649                           ;main.c: 42:     while (DataFlag){
   650   001602  EF05  F00B         	goto	l2098
   651   001606                     l2096:
   652                           
   653                           ; BSR set to: 0
   654                           ;main.c: 43:         sendTxBuf();
   655   001606  EC3C  F00D         	call	_sendTxBuf	;wreg free
   656   00160A                     l2098:
   657                           
   658                           ;main.c: 42:     while (DataFlag){
   659   00160A  0100               	movlb	0	; () banked
   660   00160C  51F2               	movf	_DataFlag& (0+255),w,b	;volatile
   661   00160E  A4D8               	btfss	status,2,c
   662   001610  EF0C  F00B         	goto	u1391
   663   001614  EF0E  F00B         	goto	u1390
   664   001618                     u1391:
   665   001618  EF03  F00B         	goto	l2096
   666   00161C                     u1390:
   667   00161C  EFDA  F00A         	goto	l2090
   668   001620  EF25  F000         	goto	start
   669   001624                     __end_of_main:
   670                           	callstack 0
   671                           
   672 ;; *************** function _sprintf *****************
   673 ;; Defined at:
   674 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;  s               2    6[BANK0 ] PTR unsigned char 
   677 ;;		 -> main@buf(50), 
   678 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
   679 ;;		 -> STR_1(33), 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  f              11   20[BANK0 ] struct _IO_FILE
   682 ;;  ap              2   18[BANK0 ] PTR void [1]
   683 ;;		 -> ?_sprintf(2), 
   684 ;;  ret             2    0        int 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  2    6[BANK0 ] int 
   687 ;; Registers used:
   688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   694 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   695 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;Total ram usage:       25 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 9
   701 ;; This function calls:
   702 ;;		_vfprintf
   703 ;; This function is called by:
   704 ;;		_main
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text1
   709   0016FC                     __ptext1:
   710                           	callstack 0
   711   0016FC                     _sprintf:
   712                           	callstack 21
   713   0016FC  0E6A               	movlw	low (?_sprintf+4)
   714   0016FE  0100               	movlb	0	; () banked
   715   001700  6F72               	movwf	sprintf@ap& (0+255),b
   716   001702  0E00               	movlw	high (?_sprintf+4)
   717   001704  6F73               	movwf	(sprintf@ap+1)& (0+255),b
   718   001706  C066  F074         	movff	sprintf@s,sprintf@f
   719   00170A  C067  F075         	movff	sprintf@s+1,sprintf@f+1
   720   00170E                     
   721                           ; BSR set to: 0
   722   00170E  0E00               	movlw	0
   723   001710  6F78               	movwf	(sprintf@f+4)& (0+255),b
   724   001712  0E00               	movlw	0
   725   001714  6F77               	movwf	(sprintf@f+3)& (0+255),b
   726   001716                     
   727                           ; BSR set to: 0
   728   001716  0E00               	movlw	0
   729   001718  6F7E               	movwf	(sprintf@f+10)& (0+255),b
   730   00171A  0E00               	movlw	0
   731   00171C  6F7D               	movwf	(sprintf@f+9)& (0+255),b
   732   00171E                     
   733                           ; BSR set to: 0
   734   00171E  0E74               	movlw	low sprintf@f
   735   001720  6F60               	movwf	vfprintf@fp& (0+255),b
   736   001722  0E00               	movlw	high sprintf@f
   737   001724  6F61               	movwf	(vfprintf@fp+1)& (0+255),b
   738   001726  C068  F062         	movff	sprintf@fmt,vfprintf@fmt
   739   00172A  C069  F063         	movff	sprintf@fmt+1,vfprintf@fmt+1
   740   00172E  0E72               	movlw	low sprintf@ap
   741   001730  6F64               	movwf	vfprintf@ap& (0+255),b
   742   001732  0E00               	movlw	high sprintf@ap
   743   001734  6F65               	movwf	(vfprintf@ap+1)& (0+255),b
   744   001736  ECA7  F00B         	call	_vfprintf	;wreg free
   745   00173A  0100               	movlb	0	; () banked
   746   00173C  5177               	movf	(sprintf@f+3)& (0+255),w,b
   747   00173E  2566               	addwf	sprintf@s& (0+255),w,b
   748   001740  6ED9               	movwf	fsr2l,c
   749   001742  5178               	movf	(sprintf@f+4)& (0+255),w,b
   750   001744  2167               	addwfc	(sprintf@s+1)& (0+255),w,b
   751   001746  6EDA               	movwf	fsr2h,c
   752   001748  0E00               	movlw	0
   753   00174A  6EDF               	movwf	indf2,c
   754   00174C                     
   755                           ; BSR set to: 0
   756   00174C  0012               	return		;funcret
   757   00174E                     __end_of_sprintf:
   758                           	callstack 0
   759                           
   760 ;; *************** function _vfprintf *****************
   761 ;; Defined at:
   762 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   765 ;;		 -> sprintf@f(11), 
   766 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   767 ;;		 -> STR_1(33), 
   768 ;;  ap              2    4[BANK0 ] PTR PTR void 
   769 ;;		 -> sprintf@ap(2), 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  cfmt            2   84[COMRAM] PTR unsigned char 
   772 ;;		 -> STR_1(33), 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  2    0[BANK0 ] int 
   775 ;; Registers used:
   776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   782 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   785 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   786 ;;Total ram usage:        8 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 8
   789 ;; This function calls:
   790 ;;		_vfpfcnvrt
   791 ;; This function is called by:
   792 ;;		_sprintf
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text2
   797   00174E                     __ptext2:
   798                           	callstack 0
   799   00174E                     _vfprintf:
   800                           	callstack 21
   801   00174E                     
   802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
=======
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F67K40 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105   000000                     
   106                           	psect	idataBANK0
   107   003EE4                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _DataFlag
   111   003EE4  01                 	db	1
   112   000000                     _TX4REG	set	3812
   113   000000                     _RC4STAbits	set	3815
   114   000000                     _SP4BRGH	set	3814
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _LATAbits	set	3961
   123   000000                     _LATGbits	set	3967
   124   000000                     _TRISAbits	set	3969
   125   000000                     _TRISGbits	set	3975
   126   000000                     _LATFbits	set	3966
   127   000000                     _INTCONbits	set	4082
   128   000000                     _TRISDbits	set	3972
   129   000000                     _TRISFbits	set	3974
   130   000000                     _RC4REG	set	3811
   131   000000                     _SP4BRGL	set	3813
   132   000000                     _TX4STAbits	set	3816
   133   000000                     _BAUD4CONbits	set	3817
   134   000000                     _SSP2CON2	set	3802
   135   000000                     _SSP2STAT	set	3800
   136   000000                     _SSP2BUF	set	3797
   137   000000                     _PIE2bits	set	3627
   138   000000                     _PIE4bits	set	3629
   139   000000                     _PIR4bits	set	3639
   140   000000                     _RC0PPS	set	3682
   141   000000                     _RD5PPS	set	3695
   142   000000                     _RD6PPS	set	3696
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149   000E01  72                 	db	114	;'r'
   150   000E02  65                 	db	101	;'e'
   151   000E03  64                 	db	100	;'d'
   152   000E04  3D                 	db	61	;'='
   153   000E05  25                 	db	37
   154   000E06  66                 	db	102	;'f'
   155   000E07  20                 	db	32
   156   000E08  67                 	db	103	;'g'
   157   000E09  72                 	db	114	;'r'
   158   000E0A  65                 	db	101	;'e'
   159   000E0B  65                 	db	101	;'e'
   160   000E0C  6E                 	db	110	;'n'
   161   000E0D  3D                 	db	61	;'='
   162   000E0E  25                 	db	37
   163   000E0F  66                 	db	102	;'f'
   164   000E10  20                 	db	32
   165   000E11  62                 	db	98	;'b'
   166   000E12  6C                 	db	108	;'l'
   167   000E13  75                 	db	117	;'u'
   168   000E14  65                 	db	101	;'e'
   169   000E15  3D                 	db	61	;'='
   170   000E16  25                 	db	37
   171   000E17  66                 	db	102	;'f'
   172   000E18  20                 	db	32
   173   000E19  6C                 	db	108	;'l'
   174   000E1A  75                 	db	117	;'u'
   175   000E1B  6D                 	db	109	;'m'
   176   000E1C  3D                 	db	61	;'='
   177   000E1D  25                 	db	37
   178   000E1E  64                 	db	100	;'d'
   179   000E1F  0D                 	db	13
   180   000E20  0A                 	db	10
   181   000E21  00                 	db	0
   182   000E22                     STR_2:
   183   000E22  69                 	db	105	;'i'
   184   000E23  6E                 	db	110	;'n'
   185   000E24  66                 	db	102	;'f'
   186   000E25  00                 	db	0
   187   000E26                     STR_5:
   188   000E26  6E                 	db	110	;'n'
   189   000E27  61                 	db	97	;'a'
   190   000E28  6E                 	db	110	;'n'
   191   000E29  00                 	db	0
   192   000E2A  00                 	db	0	; dummy byte at the end
   193   000000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197   003CB2                     __pcinit:
   198                           	callstack 0
   199   003CB2                     start_initialization:
   200                           	callstack 0
   201   003CB2                     __initialization:
   202                           	callstack 0
   203                           
   204                           ; Initialize objects allocated to BANK0 (1 bytes)
   205                           ; load TBLPTR registers with __pidataBANK0
   206   003CB2  0EE4               	movlw	low __pidataBANK0
   207   003CB4  6EF6               	movwf	tblptrl,c
   208   003CB6  0E3E               	movlw	high __pidataBANK0
   209   003CB8  6EF7               	movwf	tblptrh,c
   210   003CBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   211   003CBC  6EF8               	movwf	tblptru,c
   212   003CBE  0009               	tblrd		*+	;fetch initializer
   213   003CC0  CFF5 F0FF          	movff	tablat,__pdataBANK0
   214                           
   215                           ; Clear objects allocated to BANK1 (168 bytes)
   216   003CC4  EE01  F000         	lfsr	0,__pbssBANK1
   217   003CC8  0EA8               	movlw	168
   218   003CCA                     clear_0:
   219   003CCA  6AEE               	clrf	postinc0,c
   220   003CCC  06E8               	decf	wreg,f,c
   221   003CCE  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (24 bytes)
   224   003CD0  EE00  F0E7         	lfsr	0,__pbssBANK0
   225   003CD4  0E18               	movlw	24
   226   003CD6                     clear_1:
   227   003CD6  6AEE               	clrf	postinc0,c
   228   003CD8  06E8               	decf	wreg,f,c
   229   003CDA  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to COMRAM (5 bytes)
   232   003CDC  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   233   003CDE  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   234   003CE0  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   235   003CE2  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   236   003CE4  6A56               	clrf	__pbssCOMRAM& (0+255),c
   237   003CE6                     end_of_initialization:
   238                           	callstack 0
   239   003CE6                     __end_of__initialization:
   240                           	callstack 0
   241   003CE6  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   003CE8  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   003CEA  0100               	movlb	0
   244   003CEC  EF1E  F01B         	goto	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMRAM
   247   000056                     __pbssCOMRAM:
   248                           	callstack 0
   249   000056                     _flags:
   250                           	callstack 0
   251   000056                     	ds	1
   252   000057                     _TxBufReadCnt:
   253                           	callstack 0
   254   000057                     	ds	1
   255   000058                     _TxBufWriteCnt:
   256                           	callstack 0
   257   000058                     	ds	1
   258   000059                     _RxBufReadCnt:
   259                           	callstack 0
   260   000059                     	ds	1
   261   00005A                     _RxBufWriteCnt:
   262                           	callstack 0
   263   00005A                     	ds	1
   264                           
   265                           	psect	bssBANK0
   266   0000E7                     __pbssBANK0:
   267                           	callstack 0
   268   0000E7                     floorf@F526:
   269                           	callstack 0
   270   0000E7                     	ds	4
   271   0000EB                     ___fpclassifyf@F465:
   272                           	callstack 0
   273   0000EB                     	ds	4
   274   0000EF                     _width:
   275                           	callstack 0
   276   0000EF                     	ds	2
   277   0000F1                     _prec:
   278                           	callstack 0
   279   0000F1                     	ds	2
   280   0000F3                     _rel:
   281                           	callstack 0
   282   0000F3                     	ds	12
   283                           
   284                           	psect	dataBANK0
   285   0000FF                     __pdataBANK0:
   286                           	callstack 0
   287   0000FF                     _DataFlag:
   288                           	callstack 0
   289   0000FF                     	ds	1
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _EUSART4RXbuf:
   298                           	callstack 0
   299   00013C                     	ds	20
   300   000150                     _dbuf:
   301                           	callstack 0
   302   000150                     	ds	80
   303   0001A0                     _vals:
   304                           	callstack 0
   305   0001A0                     	ds	8
   306                           
   307                           	psect	cstackBANK0
   308   000060                     __pcstackBANK0:
   309                           	callstack 0
   310   000060                     efgtoa@ne:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x0
   314   000060                     	ds	2
   315   000062                     efgtoa@p:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2
   319   000062                     	ds	2
   320   000064                     efgtoa@t:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324   000064                     	ds	2
   325   000066                     _efgtoa$1492:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329   000066                     	ds	2
   330   000068                     efgtoa@pp:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x8
   334   000068                     	ds	1
   335   000069                     efgtoa@mode:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x9
   339   000069                     	ds	1
   340   00006A                     efgtoa@nmode:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xA
   344   00006A                     	ds	1
   345   00006B                     efgtoa@d:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0xB
   349   00006B                     	ds	2
   350   00006D                     efgtoa@m:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xD
   354   00006D                     	ds	2
   355   00006F                     efgtoa@e:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xF
   359   00006F                     	ds	2
   360   000071                     efgtoa@w:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x11
   364   000071                     	ds	2
   365   000073                     efgtoa@ou:
   366                           	callstack 0
   367                           
   368                           ; 4 bytes @ 0x13
   369   000073                     	ds	4
   370   000077                     efgtoa@i:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x17
   374   000077                     	ds	2
   375   000079                     efgtoa@h:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x19
   379   000079                     	ds	4
   380   00007D                     efgtoa@l:
   381                           	callstack 0
   382                           
   383                           ; 4 bytes @ 0x1D
   384   00007D                     	ds	4
   385   000081                     efgtoa@sign:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x21
   389   000081                     	ds	1
   390   000082                     efgtoa@g:
   391                           	callstack 0
   392                           
   393                           ; 4 bytes @ 0x22
   394   000082                     	ds	4
   395   000086                     efgtoa@n:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x26
   399   000086                     	ds	2
   400   000088                     efgtoa@u:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x28
   404   000088                     	ds	4
   405   00008C                     ?_vfprintf:
   406                           	callstack 0
   407   00008C                     vfprintf@fp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x2C
   411   00008C                     	ds	2
   412   00008E                     vfprintf@fmt:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x2E
   416   00008E                     	ds	2
   417   000090                     vfprintf@ap:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x30
   421   000090                     	ds	2
   422   000092                     vfprintf@cfmt:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x32
   426   000092                     	ds	2
   427   000094                     ?_sprintf:
   428                           	callstack 0
   429   000094                     sprintf@s:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x34
   433   000094                     	ds	2
   434   000096                     sprintf@fmt:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x36
   438   000096                     	ds	16
   439   0000A6                     sprintf@ap:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x46
   443   0000A6                     	ds	2
   444   0000A8                     sprintf@f:
   445                           	callstack 0
   446                           
   447                           ; 11 bytes @ 0x48
   448   0000A8                     	ds	11
   449   0000B3                     ??_main:
   450                           
   451                           ; 1 bytes @ 0x53
   452   0000B3                     	ds	2
   453   0000B5                     main@buf:
   454                           	callstack 0
   455                           
   456                           ; 50 bytes @ 0x55
   457   0000B5                     	ds	50
   458                           
   459                           	psect	cstackCOMRAM
   460   000001                     __pcstackCOMRAM:
   461                           	callstack 0
   462   000001                     ??_getCharFromTxBuf:
   463   000001                     putCharToRxBuf@byte:
   464                           	callstack 0
   465   000001                     
   466                           ; 1 bytes @ 0x0
   467   000001                     	ds	2
   468   000003                     ??_HighISR:
   469                           
   470                           ; 1 bytes @ 0x2
   471   000003                     	ds	2
   472   000005                     ??_I2C_2_Master_Idle:
   473   000005                     ?___fpclassifyf:
   474                           	callstack 0
   475   000005                     ?___fladd:
   476                           	callstack 0
   477   000005                     ?___fldiv:
   478                           	callstack 0
   479   000005                     ?___flmul:
   480                           	callstack 0
   481   000005                     ?_labs:
   482                           	callstack 0
   483   000005                     ?___flneg:
   484                           	callstack 0
   485   000005                     ?___fltol:
   486                           	callstack 0
   487   000005                     ?___xxtofl:
   488                           	callstack 0
   489   000005                     ?___aodiv:
   490                           	callstack 0
   491   000005                     ?___aomod:
   492                           	callstack 0
   493   000005                     putCharToTxBuf@byte:
   494                           	callstack 0
   495   000005                     memcpy@d1:
   496                           	callstack 0
   497   000005                     fputc@c:
   498                           	callstack 0
   499   000005                     strcpy@dest:
   500                           	callstack 0
   501   000005                     ___fleq@ff1:
   502                           	callstack 0
   503   000005                     ___flneg@f1:
   504                           	callstack 0
   505   000005                     ___fltol@f1:
   506                           	callstack 0
   507   000005                     ___fladd@b:
   508                           	callstack 0
   509   000005                     ___fldiv@b:
   510                           	callstack 0
   511   000005                     ___flmul@b:
   512                           	callstack 0
   513   000005                     ___xxtofl@val:
   514                           	callstack 0
   515   000005                     ___fpclassifyf@x:
   516                           	callstack 0
   517   000005                     labs@a:
   518                           	callstack 0
   519   000005                     ___aodiv@dividend:
   520                           	callstack 0
   521   000005                     ___aomod@dividend:
   522                           	callstack 0
   523                           
   524                           ; 8 bytes @ 0x4
   525   000005                     	ds	1
   526   000006                     ??_I2C_2_Master_Read:
   527   000006                     I2C_2_Master_Write@data_byte:
   528                           	callstack 0
   529   000006                     TxBufferedString@string:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x5
   533   000006                     	ds	1
   534   000007                     color_writetoaddr@value:
   535                           	callstack 0
   536   000007                     I2C_2_Master_Read@ack:
   537                           	callstack 0
   538   000007                     memcpy@s1:
   539                           	callstack 0
   540   000007                     fputc@fp:
   541                           	callstack 0
   542   000007                     strcpy@src:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x6
   546   000007                     	ds	1
   547   000008                     color_writetoaddr@address:
   548                           	callstack 0
   549   000008                     I2C_2_Master_Read@tmp:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x7
   553   000008                     	ds	1
   554   000009                     ??_fputc:
   555   000009                     ??___fpclassifyf:
   556   000009                     ??_labs:
   557   000009                     ??_color_click_init:
   558   000009                     ??___fltol:
   559   000009                     ??___xxtofl:
   560   000009                     ?_color_read_lum:
   561                           	callstack 0
   562   000009                     ?_color_read_Red:
   563                           	callstack 0
   564   000009                     ?_color_read_Green:
   565                           	callstack 0
   566   000009                     ?_color_read_Blue:
   567                           	callstack 0
   568   000009                     memcpy@n:
   569                           	callstack 0
   570   000009                     strcpy@s:
   571                           	callstack 0
   572   000009                     ___fleq@ff2:
   573                           	callstack 0
   574   000009                     ___fladd@a:
   575                           	callstack 0
   576   000009                     ___fldiv@a:
   577                           	callstack 0
   578   000009                     ___flmul@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x8
   582   000009                     	ds	2
   583   00000B                     ??_color_read_lum:
   584   00000B                     ??_color_read_Red:
   585   00000B                     ??_color_read_Green:
   586   00000B                     ??_color_read_Blue:
   587   00000B                     memcpy@tmp:
   588                           	callstack 0
   589   00000B                     strcpy@d:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0xA
   593   00000B                     	ds	1
   594   00000C                     memcpy@d:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0xB
   598   00000C                     	ds	1
   599   00000D                     ??___fladd:
   600   00000D                     ??___fldiv:
   601   00000D                     ??___flmul:
   602   00000D                     ??___fleq:
   603   00000D                     ___fltol@sign1:
   604                           	callstack 0
   605   00000D                     ___xxtofl@sign:
   606                           	callstack 0
   607   00000D                     ___fpclassifyf@e:
   608                           	callstack 0
   609   00000D                     ___aodiv@divisor:
   610                           	callstack 0
   611   00000D                     ___aomod@divisor:
   612                           	callstack 0
   613                           
   614                           ; 8 bytes @ 0xC
   615   00000D                     	ds	1
   616   00000E                     ___fltol@exp1:
   617                           	callstack 0
   618   00000E                     ___xxtofl@exp:
   619                           	callstack 0
   620   00000E                     color_read_lum@tmp:
   621                           	callstack 0
   622   00000E                     color_read_Red@tmp:
   623                           	callstack 0
   624   00000E                     color_read_Green@tmp:
   625                           	callstack 0
   626   00000E                     color_read_Blue@tmp:
   627                           	callstack 0
   628   00000E                     memcpy@s:
   629                           	callstack 0
   630   00000E                     fputs@s:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0xD
   634   00000E                     	ds	1
   635   00000F                     ___xxtofl@arg:
   636                           	callstack 0
   637   00000F                     ___fpclassifyf@u:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0xE
   641   00000F                     	ds	1
   642   000010                     readColours@vals:
   643                           	callstack 0
   644   000010                     fputs@fp:
   645                           	callstack 0
   646                           
   647                           ; 2 bytes @ 0xF
   648   000010                     	ds	1
   649   000011                     ___fladd@signs:
   650                           	callstack 0
   651   000011                     ___flmul@sign:
   652                           	callstack 0
   653   000011                     ___fldiv@rem:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x10
   657   000011                     	ds	1
   658   000012                     ___fladd@aexp:
   659                           	callstack 0
   660   000012                     ___flmul@aexp:
   661                           	callstack 0
   662   000012                     fputs@c:
   663                           	callstack 0
   664                           
   665                           ; 1 bytes @ 0x11
   666   000012                     	ds	1
   667   000013                     ___fladd@bexp:
   668                           	callstack 0
   669   000013                     fputs@i:
   670                           	callstack 0
   671   000013                     ___flmul@grs:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x12
   675   000013                     	ds	1
   676   000014                     ___fladd@grs:
   677                           	callstack 0
   678                           
   679                           ; 1 bytes @ 0x13
   680   000014                     	ds	1
   681   000015                     ___aodiv@counter:
   682                           	callstack 0
   683   000015                     ___aomod@counter:
   684                           	callstack 0
   685   000015                     ___fldiv@sign:
   686                           	callstack 0
   687   000015                     pad@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x14
   691   000015                     	ds	1
   692   000016                     ___aodiv@sign:
   693                           	callstack 0
   694   000016                     ___aomod@sign:
   695                           	callstack 0
   696   000016                     ___fldiv@new_exp:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x15
   700   000016                     	ds	1
   701   000017                     ?_abs:
   702                           	callstack 0
   703   000017                     ___flmul@bexp:
   704                           	callstack 0
   705   000017                     pad@buf:
   706                           	callstack 0
   707   000017                     abs@a:
   708                           	callstack 0
   709   000017                     ___aodiv@quotient:
   710                           	callstack 0
   711                           
   712                           ; 8 bytes @ 0x16
   713   000017                     	ds	1
   714   000018                     ___fldiv@grs:
   715                           	callstack 0
   716   000018                     ___flmul@prod:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x17
   720   000018                     	ds	1
   721   000019                     ??_abs:
   722   000019                     pad@p:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x18
   726   000019                     	ds	2
   727   00001B                     ??_pad:
   728                           
   729                           ; 1 bytes @ 0x1A
   730   00001B                     	ds	1
   731   00001C                     ___fldiv@bexp:
   732                           	callstack 0
   733   00001C                     ___flmul@temp:
   734                           	callstack 0
   735   00001C                     pad@i:
   736                           	callstack 0
   737                           
   738                           ; 2 bytes @ 0x1B
   739   00001C                     	ds	1
   740   00001D                     ___fldiv@aexp:
   741                           	callstack 0
   742                           
   743                           ; 1 bytes @ 0x1C
   744   00001D                     	ds	1
   745   00001E                     ?___flsub:
   746                           	callstack 0
   747   00001E                     ?_floorf:
   748                           	callstack 0
   749   00001E                     colour_rel@vals:
   750                           	callstack 0
   751   00001E                     pad@w:
   752                           	callstack 0
   753   00001E                     ___flge@ff1:
   754                           	callstack 0
   755   00001E                     ___flsub@b:
   756                           	callstack 0
   757   00001E                     floorf@x:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x1D
   761   00001E                     	ds	2
   762   000020                     colour_rel@rel:
   763                           	callstack 0
   764   000020                     dtoa@fp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x1F
   768   000020                     	ds	2
   769   000022                     ??_floorf:
   770   000022                     colour_rel@R:
   771                           	callstack 0
   772   000022                     ___flge@ff2:
   773                           	callstack 0
   774   000022                     ___flsub@a:
   775                           	callstack 0
   776   000022                     dtoa@d:
   777                           	callstack 0
   778                           
   779                           ; 8 bytes @ 0x21
   780   000022                     	ds	4
   781   000026                     ??___flge:
   782   000026                     colour_rel@G:
   783                           	callstack 0
   784                           
   785                           ; 4 bytes @ 0x25
   786   000026                     	ds	2
   787   000028                     floorf@m:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x27
   791   000028                     	ds	2
   792   00002A                     ??_dtoa:
   793   00002A                     colour_rel@B:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x29
   797   00002A                     	ds	2
   798   00002C                     floorf@e:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x2B
   802   00002C                     	ds	2
   803   00002E                     colour_rel@L:
   804                           	callstack 0
   805   00002E                     floorf@u:
   806                           	callstack 0
   807                           
   808                           ; 4 bytes @ 0x2D
   809   00002E                     	ds	4
   810   000032                     _dtoa$1461:
   811                           	callstack 0
   812   000032                     efgtoa@fp:
   813                           	callstack 0
   814                           
   815                           ; 2 bytes @ 0x31
   816   000032                     	ds	2
   817   000034                     dtoa@p:
   818                           	callstack 0
   819   000034                     efgtoa@f:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x33
   823   000034                     	ds	2
   824   000036                     dtoa@w:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x35
   828   000036                     	ds	2
   829   000038                     efgtoa@c:
   830                           	callstack 0
   831   000038                     dtoa@n:
   832                           	callstack 0
   833                           
   834                           ; 8 bytes @ 0x37
   835   000038                     	ds	1
   836   000039                     ??_efgtoa:
   837                           
   838                           ; 1 bytes @ 0x38
   839   000039                     	ds	7
   840   000040                     dtoa@s:
   841                           	callstack 0
   842                           
   843                           ; 1 bytes @ 0x3F
   844   000040                     	ds	1
   845   000041                     dtoa@i:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0x40
   849   000041                     	ds	2
   850   000043                     vfpfcnvrt@fp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x42
   854   000043                     	ds	2
   855   000045                     vfpfcnvrt@fmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x44
   859   000045                     	ds	2
   860   000047                     vfpfcnvrt@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x46
   864   000047                     	ds	2
   865   000049                     ??_vfpfcnvrt:
   866                           
   867                           ; 1 bytes @ 0x48
   868   000049                     	ds	2
   869   00004B                     vfpfcnvrt@convarg:
   870                           	callstack 0
   871                           
   872                           ; 8 bytes @ 0x4A
   873   00004B                     	ds	8
   874   000053                     vfpfcnvrt@c:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x52
   878   000053                     	ds	1
   879   000054                     vfpfcnvrt@cp:
   880                           	callstack 0
   881                           
   882                           ; 2 bytes @ 0x53
   883   000054                     	ds	2
   884   000056                     
   885                           ; 1 bytes @ 0x55
   886 ;;
   887 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   888 ;;
   889 ;; *************** function _main *****************
   890 ;; Defined at:
   891 ;;		line 28 in file "main.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  buf            50   85[BANK0 ] unsigned char [50]
   896 ;;  ADC             2    0        unsigned int 
   897 ;;  frac_part       2    0        unsigned int 
   898 ;;  int_part        2    0        unsigned int 
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   911 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   912 ;;Total ram usage:       52 bytes
   913 ;; Hardware stack levels required when called: 10
   914 ;; This function calls:
   915 ;;		_I2C_2_Master_Init
   916 ;;		_Interrupts_init
   917 ;;		_TxBufferedString
   918 ;;		_color_click_init
   919 ;;		_colour_rel
   920 ;;		_initUSART4
   921 ;;		_readColours
   922 ;;		_sendTxBuf
   923 ;;		_sprintf
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text0
   930   00363C                     __ptext0:
   931                           	callstack 0
   932   00363C                     _main:
   933                           	callstack 21
   934   00363C                     
   935                           ;main.c: 29:     initUSART4();
   936   00363C  EC3A  F01F         	call	_initUSART4	;wreg free
   937   003640                     
   938                           ;main.c: 30:     Interrupts_init();
   939   003640  EC55  F01F         	call	_Interrupts_init	;wreg free
   940   003644                     
   941                           ;main.c: 31:     color_click_init();
   942   003644  EC39  F01E         	call	_color_click_init	;wreg free
   943   003648                     
   944                           ;main.c: 32:     I2C_2_Master_Init();
   945   003648  ECD7  F01E         	call	_I2C_2_Master_Init	;wreg free
   946   00364C                     l5340:
   947                           
   948                           ;main.c: 39:     {;main.c: 40:    LATGbits.LATG1=1;
   949   00364C  827F               	bsf	127,1,c	;volatile
   950   00364E                     
   951                           ;main.c: 41:     _delay((unsigned long)((100)*(64000000/4000.0)));
   952   00364E  0E09               	movlw	9
   953   003650  0100               	movlb	0	; () banked
   954   003652  6FB4               	movwf	(??_main+1)& (0+255),b
   955   003654  0E1E               	movlw	30
   956   003656  6FB3               	movwf	??_main& (0+255),b
   957   003658  0EE4               	movlw	228
   958   00365A                     u6167:
   959   00365A  2EE8               	decfsz	wreg,f,c
   960   00365C  D7FE               	bra	u6167
   961   00365E  2FB3               	decfsz	??_main& (0+255),f,b
   962   003660  D7FC               	bra	u6167
   963   003662  2FB4               	decfsz	(??_main+1)& (0+255),f,b
   964   003664  D7FA               	bra	u6167
   965   003666  F000               	nop	
   966   003668                     
   967                           ;main.c: 44:     readColours(&vals);
   968   003668  0EA0               	movlw	low _vals
   969   00366A  6E10               	movwf	readColours@vals^0,c
   970   00366C  0E01               	movlw	high _vals
   971   00366E  6E11               	movwf	(readColours@vals+1)^0,c
   972   003670  EC47  F01C         	call	_readColours	;wreg free
   973   003674                     
   974                           ;main.c: 45:     colour_rel(&vals, &rel);
   975   003674  0EA0               	movlw	low _vals
   976   003676  6E1E               	movwf	colour_rel@vals^0,c
   977   003678  0E01               	movlw	high _vals
   978   00367A  6E1F               	movwf	(colour_rel@vals+1)^0,c
   979   00367C  0EF3               	movlw	low _rel
   980   00367E  6E20               	movwf	colour_rel@rel^0,c
   981   003680  0E00               	movlw	high _rel
   982   003682  6E21               	movwf	(colour_rel@rel+1)^0,c
   983   003684  ECFA  F016         	call	_colour_rel	;wreg free
   984   003688                     
   985                           ;main.c: 47:     sprintf(buf,"red=%f green=%f blue=%f lum=%d\r\n",rel.R, rel.G,rel.B,val
      +                          s.L);
   986   003688  0EB5               	movlw	low main@buf
   987   00368A  0100               	movlb	0	; () banked
   988   00368C  6F94               	movwf	sprintf@s& (0+255),b
   989   00368E  0E00               	movlw	high main@buf
   990   003690  6F95               	movwf	(sprintf@s+1)& (0+255),b
   991   003692  0E01               	movlw	low STR_1
   992   003694  6F96               	movwf	sprintf@fmt& (0+255),b
   993   003696  0E0E               	movlw	high STR_1
   994   003698  6F97               	movwf	(sprintf@fmt+1)& (0+255),b
   995   00369A  C0F3  F098         	movff	_rel,?_sprintf+4
   996   00369E  C0F4  F099         	movff	_rel+1,?_sprintf+5
   997   0036A2  C0F5  F09A         	movff	_rel+2,?_sprintf+6
   998   0036A6  C0F6  F09B         	movff	_rel+3,?_sprintf+7
   999   0036AA  C0F7  F09C         	movff	_rel+4,?_sprintf+8
  1000   0036AE  C0F8  F09D         	movff	_rel+5,?_sprintf+9
  1001   0036B2  C0F9  F09E         	movff	_rel+6,?_sprintf+10
  1002   0036B6  C0FA  F09F         	movff	_rel+7,?_sprintf+11
  1003   0036BA  C0FB  F0A0         	movff	_rel+8,?_sprintf+12
  1004   0036BE  C0FC  F0A1         	movff	_rel+9,?_sprintf+13
  1005   0036C2  C0FD  F0A2         	movff	_rel+10,?_sprintf+14
  1006   0036C6  C0FE  F0A3         	movff	_rel+11,?_sprintf+15
  1007   0036CA  C1A6  F0A4         	movff	_vals+6,?_sprintf+16
  1008   0036CE  C1A7  F0A5         	movff	_vals+7,?_sprintf+17
  1009   0036D2  ECA0  F01C         	call	_sprintf	;wreg free
  1010   0036D6                     
  1011                           ;main.c: 48:     TxBufferedString(buf);
  1012   0036D6  0EB5               	movlw	low main@buf
  1013   0036D8  6E06               	movwf	TxBufferedString@string^0,c
  1014   0036DA  0E00               	movlw	high main@buf
  1015   0036DC  6E07               	movwf	(TxBufferedString@string+1)^0,c
  1016   0036DE  EC94  F01E         	call	_TxBufferedString	;wreg free
  1017                           
  1018                           ;main.c: 50:     while (DataFlag){
  1019   0036E2  EF75  F01B         	goto	l5354
  1020   0036E6                     l5352:
  1021                           
  1022                           ; BSR set to: 0
  1023                           ;main.c: 51:         sendTxBuf();
  1024   0036E6  ECC2  F01E         	call	_sendTxBuf	;wreg free
  1025   0036EA                     l5354:
  1026                           
  1027                           ;main.c: 50:     while (DataFlag){
  1028   0036EA  0100               	movlb	0	; () banked
  1029   0036EC  51FF               	movf	_DataFlag& (0+255),w,b	;volatile
  1030   0036EE  A4D8               	btfss	status,2,c
  1031   0036F0  EF7C  F01B         	goto	u6151
  1032   0036F4  EF7E  F01B         	goto	u6150
  1033   0036F8                     u6151:
  1034   0036F8  EF73  F01B         	goto	l5352
  1035   0036FC                     u6150:
  1036   0036FC  EF26  F01B         	goto	l5340
  1037   003700  EF25  F000         	goto	start
  1038   003704                     __end_of_main:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _sprintf *****************
  1042 ;; Defined at:
  1043 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;  s               2   52[BANK0 ] PTR unsigned char 
  1046 ;;		 -> main@buf(50), 
  1047 ;;  fmt             2   54[BANK0 ] PTR const unsigned char 
  1048 ;;		 -> STR_1(33), 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  f              11   72[BANK0 ] struct _IO_FILE
  1051 ;;  ap              2   70[BANK0 ] PTR void [1]
  1052 ;;		 -> ?_sprintf(2), 
  1053 ;;  ret             2    0        int 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  2   52[BANK0 ] int 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1063 ;;      Params:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1064 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1066 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1067 ;;Total ram usage:       31 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 9
  1070 ;; This function calls:
  1071 ;;		_vfprintf
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text1
  1078   003940                     __ptext1:
  1079                           	callstack 0
  1080   003940                     _sprintf:
  1081                           	callstack 21
  1082   003940  0E98               	movlw	low (?_sprintf+4)
  1083   003942  0100               	movlb	0	; () banked
  1084   003944  6FA6               	movwf	sprintf@ap& (0+255),b
  1085   003946  0E00               	movlw	high (?_sprintf+4)
  1086   003948  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1087   00394A  C094  F0A8         	movff	sprintf@s,sprintf@f
  1088   00394E  C095  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1089   003952                     
  1090                           ; BSR set to: 0
  1091   003952  0E00               	movlw	0
  1092   003954  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1093   003956  0E00               	movlw	0
  1094   003958  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1095   00395A                     
  1096                           ; BSR set to: 0
  1097   00395A  0E00               	movlw	0
  1098   00395C  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1099   00395E  0E00               	movlw	0
  1100   003960  6FB1               	movwf	(sprintf@f+9)& (0+255),b
  1101   003962                     
  1102                           ; BSR set to: 0
  1103   003962  0EA8               	movlw	low sprintf@f
  1104   003964  6F8C               	movwf	vfprintf@fp& (0+255),b
  1105   003966  0E00               	movlw	high sprintf@f
  1106   003968  6F8D               	movwf	(vfprintf@fp+1)& (0+255),b
  1107   00396A  C096  F08E         	movff	sprintf@fmt,vfprintf@fmt
  1108   00396E  C097  F08F         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1109   003972  0EA6               	movlw	low sprintf@ap
  1110   003974  6F90               	movwf	vfprintf@ap& (0+255),b
  1111   003976  0E00               	movlw	high sprintf@ap
  1112   003978  6F91               	movwf	(vfprintf@ap+1)& (0+255),b
  1113   00397A  EC76  F01C         	call	_vfprintf	;wreg free
  1114   00397E  0100               	movlb	0	; () banked
  1115   003980  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1116   003982  2594               	addwf	sprintf@s& (0+255),w,b
  1117   003984  6ED9               	movwf	fsr2l,c
  1118   003986  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1119   003988  2195               	addwfc	(sprintf@s+1)& (0+255),w,b
  1120   00398A  6EDA               	movwf	fsr2h,c
  1121   00398C  0E00               	movlw	0
  1122   00398E  6EDF               	movwf	indf2,c
  1123   003990                     
  1124                           ; BSR set to: 0
  1125   003990  0012               	return		;funcret
  1126   003992                     __end_of_sprintf:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _vfprintf *****************
  1130 ;; Defined at:
  1131 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  fp              2   44[BANK0 ] PTR struct _IO_FILE
  1134 ;;		 -> sprintf@f(11), 
  1135 ;;  fmt             2   46[BANK0 ] PTR const unsigned char 
  1136 ;;		 -> STR_1(33), 
  1137 ;;  ap              2   48[BANK0 ] PTR PTR void 
  1138 ;;		 -> sprintf@ap(2), 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  cfmt            2   50[BANK0 ] PTR unsigned char 
  1141 ;;		 -> STR_1(33), 
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  2   44[BANK0 ] int 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1151 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1155 ;;Total ram usage:        8 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 8
  1158 ;; This function calls:
  1159 ;;		_vfpfcnvrt
  1160 ;; This function is called by:
  1161 ;;		_sprintf
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text2
  1166   0038EC                     __ptext2:
  1167                           	callstack 0
  1168   0038EC                     _vfprintf:
  1169                           	callstack 21
  1170   0038EC                     
  1171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
>>>>>>> Stashed changes
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
<<<<<<< Updated upstream
   803   00174E  C062  F055         	movff	vfprintf@fmt,vfprintf@cfmt
   804   001752  C063  F056         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   805                           
   806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   807   001756  EFBB  F00B         	goto	l2064
   808   00175A                     l2062:
   809                           
   810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   811   00175A  C060  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
   812   00175E  C061  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   813   001762  0E55               	movlw	low vfprintf@cfmt
   814   001764  6E45               	movwf	vfpfcnvrt@fmt^0,c
   815   001766  0E00               	movlw	high vfprintf@cfmt
   816   001768  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
   817   00176A  C064  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
   818   00176E  C065  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   819   001772  ECC6  F009         	call	_vfpfcnvrt	;wreg free
   820   001776                     l2064:
   821                           
   822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
   823   001776  C055  FFF6         	movff	vfprintf@cfmt,tblptrl
   824   00177A  C056  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   825   00177E                     	if	0	;tblptru may be non-zero
   826   00177E                     	endif
   827   00177E                     	if	0	;tblptru may be non-zero
   828   00177E                     	endif
   829   00177E  0008               	tblrd		*
   830   001780  50F5               	movf	tablat,w,c
   831   001782  0900               	iorlw	0
   832   001784  A4D8               	btfss	status,2,c
   833   001786  EFC7  F00B         	goto	u1381
   834   00178A  EFC9  F00B         	goto	u1380
   835   00178E                     u1381:
   836   00178E  EFAD  F00B         	goto	l2062
   837   001792                     u1380:
   838   001792                     
   839                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
   840   001792  0E00               	movlw	0
   841   001794  0100               	movlb	0	; () banked
   842   001796  6F61               	movwf	(?_vfprintf+1)& (0+255),b
   843   001798  0E00               	movlw	0
   844   00179A  6F60               	movwf	?_vfprintf& (0+255),b
   845   00179C                     
   846                           ; BSR set to: 0
   847   00179C  0012               	return		;funcret
   848   00179E                     __end_of_vfprintf:
   849                           	callstack 0
   850                           
   851 ;; *************** function _vfpfcnvrt *****************
   852 ;; Defined at:
   853 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
   856 ;;		 -> sprintf@f(11), 
   857 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
   858 ;;		 -> vfprintf@cfmt(2), 
   859 ;;  ap              2   70[COMRAM] PTR PTR void 
   860 ;;		 -> sprintf@ap(2), 
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  convarg         8   74[COMRAM] struct .
   863 ;;  cp              2   82[COMRAM] PTR unsigned char 
   864 ;;		 -> STR_1(33), 
   865 ;;  i               2    0        int 
   866 ;;  done            2    0        int 
   867 ;;  c               1    0        unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   877 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;Total ram usage:       18 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 7
   884 ;; This function calls:
   885 ;;		_dtoa
   886 ;;		_fputc
   887 ;; This function is called by:
   888 ;;		_vfprintf
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893   00138C                     __ptext3:
   894                           	callstack 0
   895   00138C                     _vfpfcnvrt:
   896                           	callstack 21
   897   00138C                     
   898                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
=======
  1172   0038EC  C08E  F092         	movff	vfprintf@fmt,vfprintf@cfmt
  1173   0038F0  C08F  F093         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1176   0038F4  EF8A  F01C         	goto	l5306
  1177   0038F8                     l5304:
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1180   0038F8  C08C  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1181   0038FC  C08D  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1182   003900  0E92               	movlw	low vfprintf@cfmt
  1183   003902  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1184   003904  0E00               	movlw	high vfprintf@cfmt
  1185   003906  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1186   003908  C090  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1187   00390C  C091  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1188   003910  EC55  F012         	call	_vfpfcnvrt	;wreg free
  1189   003914                     l5306:
  1190                           
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1192   003914  C092  FFF6         	movff	vfprintf@cfmt,tblptrl
  1193   003918  C093  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1194   00391C                     	if	0	;tblptru may be non-zero
  1195   00391C                     	endif
  1196   00391C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1197   00391C  0E00               	movlw	low (__mediumconst shr (0+16))
  1198   00391E  6EF8               	movwf	tblptru,c
  1199   003920                     	endif
  1200   003920  0008               	tblrd		*
  1201   003922  50F5               	movf	tablat,w,c
  1202   003924  0900               	iorlw	0
  1203   003926  A4D8               	btfss	status,2,c
  1204   003928  EF98  F01C         	goto	u6121
  1205   00392C  EF9A  F01C         	goto	u6120
  1206   003930                     u6121:
  1207   003930  EF7C  F01C         	goto	l5304
  1208   003934                     u6120:
  1209   003934                     
  1210                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1211   003934  0E00               	movlw	0
  1212   003936  0100               	movlb	0	; () banked
  1213   003938  6F8D               	movwf	(?_vfprintf+1)& (0+255),b
  1214   00393A  0E00               	movlw	0
  1215   00393C  6F8C               	movwf	?_vfprintf& (0+255),b
  1216   00393E                     
  1217                           ; BSR set to: 0
  1218   00393E  0012               	return		;funcret
  1219   003940                     __end_of_vfprintf:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _vfpfcnvrt *****************
  1223 ;; Defined at:
  1224 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1227 ;;		 -> sprintf@f(11), 
  1228 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1229 ;;		 -> vfprintf@cfmt(2), 
  1230 ;;  ap              2   70[COMRAM] PTR PTR void 
  1231 ;;		 -> sprintf@ap(2), 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  convarg         8   74[COMRAM] struct .
  1234 ;;  cp              2   83[COMRAM] PTR unsigned char 
  1235 ;;		 -> STR_1(33), 
  1236 ;;  i               2    0        int 
  1237 ;;  done            2    0        int 
  1238 ;;  c               1   82[COMRAM] unsigned char 
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1248 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1249 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1251 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;Total ram usage:       19 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 7
  1255 ;; This function calls:
  1256 ;;		_dtoa
  1257 ;;		_efgtoa
  1258 ;;		_fputc
  1259 ;; This function is called by:
  1260 ;;		_vfprintf
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           	psect	text3
  1265   0024AA                     __ptext3:
  1266                           	callstack 0
  1267   0024AA                     _vfpfcnvrt:
  1268                           	callstack 21
  1269   0024AA                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
>>>>>>> Stashed changes
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
<<<<<<< Updated upstream
   899   00138C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   900   001390  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   901   001394  CFDE FFF6          	movff	postinc2,tblptrl
   902   001398  CFDD FFF7          	movff	postdec2,tblptrh
   903   00139C                     	if	0	;tblptru may be non-zero
   904   00139C                     	endif
   905   00139C                     	if	0	;tblptru may be non-zero
   906   00139C                     	endif
   907   00139C  0008               	tblrd		*
   908   00139E  50F5               	movf	tablat,w,c
   909   0013A0  0A25               	xorlw	37
   910   0013A2  A4D8               	btfss	status,2,c
   911   0013A4  EFD6  F009         	goto	u1351
   912   0013A8  EFD8  F009         	goto	u1350
   913   0013AC                     u1351:
   914   0013AC  EF58  F00A         	goto	l2054
   915   0013B0                     u1350:
   916   0013B0                     
   917                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
   918   0013B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   919   0013B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   920   0013B8  2ADE               	incf	postinc2,f,c
   921   0013BA  0E00               	movlw	0
   922   0013BC  22DD               	addwfc	postdec2,f,c
   923   0013BE                     
   924                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
   925   0013BE  0E00               	movlw	0
   926   0013C0  0100               	movlb	0	; () banked
   927   0013C2  6FC6               	movwf	(_width+1)& (0+255),b
   928   0013C4  0E00               	movlw	0
   929   0013C6  6FC5               	movwf	_width& (0+255),b
   930   0013C8  C0C5  F0C9         	movff	_width,_flags
   931   0013CC                     
   932                           ; BSR set to: 0
   933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
   934   0013CC  69C7               	setf	_prec& (0+255),b
   935   0013CE  69C8               	setf	(_prec+1)& (0+255),b
   936   0013D0                     
   937                           ; BSR set to: 0
   938                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
   939   0013D0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   940   0013D4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   941   0013D8  CFDE F053          	movff	postinc2,vfpfcnvrt@cp
   942   0013DC  CFDD F054          	movff	postdec2,vfpfcnvrt@cp+1
   943   0013E0                     
   944                           ; BSR set to: 0
   945                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   946   0013E0  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   947   0013E4  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   948   0013E8                     	if	0	;tblptru may be non-zero
   949   0013E8                     	endif
   950   0013E8                     	if	0	;tblptru may be non-zero
   951   0013E8                     	endif
   952   0013E8  0008               	tblrd		*
   953   0013EA  50F5               	movf	tablat,w,c
   954   0013EC  0A64               	xorlw	100
   955   0013EE  B4D8               	btfsc	status,2,c
   956   0013F0  EFFC  F009         	goto	u1361
   957   0013F4  EFFE  F009         	goto	u1360
   958   0013F8                     u1361:
   959   0013F8  EF0C  F00A         	goto	l2044
   960   0013FC                     u1360:
   961   0013FC                     
   962                           ; BSR set to: 0
   963   0013FC  C053  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   964   001400  C054  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   965   001404                     	if	0	;tblptru may be non-zero
   966   001404                     	endif
   967   001404                     	if	0	;tblptru may be non-zero
   968   001404                     	endif
   969   001404  0008               	tblrd		*
   970   001406  50F5               	movf	tablat,w,c
   971   001408  0A69               	xorlw	105
   972   00140A  A4D8               	btfss	status,2,c
   973   00140C  EF0A  F00A         	goto	u1371
   974   001410  EF0C  F00A         	goto	u1370
   975   001414                     u1371:
   976   001414  EF4F  F00A         	goto	l2050
   977   001418                     u1370:
   978   001418                     l2044:
   979                           
   980                           ; BSR set to: 0
   981                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   982   001418  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   983   00141C  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   984   001420  CFDF F049          	movff	indf2,??_vfpfcnvrt
   985   001424  0E02               	movlw	2
   986   001426  26DE               	addwf	postinc2,f,c
   987   001428  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
   988   00142C  0E00               	movlw	0
   989   00142E  22DD               	addwfc	postdec2,f,c
   990   001430  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
   991   001434  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   992   001438  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
   993   00143C  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
   994   001440  0E00               	movlw	0
   995   001442  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   996   001444  0EFF               	movlw	-1
   997   001446  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
   998   001448  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
   999   00144A  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1000   00144C  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1001   00144E  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1002   001450  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1003                           
  1004                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1005   001452  0E01               	movlw	1
  1006   001454  2453               	addwf	vfpfcnvrt@cp^0,w,c
  1007   001456  6E49               	movwf	??_vfpfcnvrt^0,c
  1008   001458  0E00               	movlw	0
  1009   00145A  2054               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1010   00145C  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1011   00145E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1012   001462  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1013   001466  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1014   00146A  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1015   00146E                     
  1016                           ; BSR set to: 0
  1017                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1018   00146E  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1019   001472  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1020   001476  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1021   00147A  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1022   00147E  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1023   001482  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1024   001486  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1025   00148A  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1026   00148E  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1027   001492  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1028   001496  EC12  F007         	call	_dtoa	;wreg free
  1029   00149A  EF6C  F00A         	goto	l996
  1030   00149E                     l2050:
  1031                           
  1032                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1033   00149E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1034   0014A2  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1035   0014A6  2ADE               	incf	postinc2,f,c
  1036   0014A8  0E00               	movlw	0
  1037   0014AA  22DD               	addwfc	postdec2,f,c
  1038   0014AC  EF6C  F00A         	goto	l996
  1039   0014B0                     l2054:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1042   0014B0  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1043   0014B4  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1044   0014B8  CFDE FFF6          	movff	postinc2,tblptrl
  1045   0014BC  CFDD FFF7          	movff	postdec2,tblptrh
  1046   0014C0                     	if	0	;tblptru may be non-zero
  1047   0014C0                     	endif
  1048   0014C0                     	if	0	;tblptru may be non-zero
  1049   0014C0                     	endif
  1050   0014C0  0008               	tblrd		*
  1051   0014C2  50F5               	movf	tablat,w,c
  1052   0014C4  6E05               	movwf	fputc@c^0,c
  1053   0014C6  6A06               	clrf	(fputc@c+1)^0,c
  1054   0014C8  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1055   0014CC  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1056   0014D0  EC6D  F00A         	call	_fputc	;wreg free
  1057   0014D4  EF4F  F00A         	goto	l2050
  1058   0014D8                     l996:
  1059   0014D8  0012               	return		;funcret
  1060   0014DA                     __end_of_vfpfcnvrt:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _dtoa *****************
  1064 ;; Defined at:
  1065 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  1068 ;;		 -> sprintf@f(11), 
  1069 ;;  d               8   33[COMRAM] long long 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  n               8   55[COMRAM] long long 
  1072 ;;  i               2   64[COMRAM] int 
  1073 ;;  w               2   53[COMRAM] int 
  1074 ;;  p               2   51[COMRAM] int 
  1075 ;;  s               1   63[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1085 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1086 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;Total ram usage:       35 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 6
  1092 ;; This function calls:
  1093 ;;		___aodiv
  1094 ;;		___aomod
  1095 ;;		_abs
  1096 ;;		_pad
  1097 ;; This function is called by:
  1098 ;;		_vfpfcnvrt
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text4
  1103   000E24                     __ptext4:
  1104                           	callstack 0
  1105   000E24                     _dtoa:
  1106                           	callstack 21
  1107   000E24                     
  1108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
=======
  1271   0024AA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1272   0024AE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1273   0024B2  CFDE FFF6          	movff	postinc2,tblptrl
  1274   0024B6  CFDD FFF7          	movff	postdec2,tblptrh
  1275   0024BA                     	if	0	;tblptru may be non-zero
  1276   0024BA                     	endif
  1277   0024BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1278   0024BA  0E00               	movlw	low (__mediumconst shr (0+16))
  1279   0024BC  6EF8               	movwf	tblptru,c
  1280   0024BE                     	endif
  1281   0024BE  0008               	tblrd		*
  1282   0024C0  50F5               	movf	tablat,w,c
  1283   0024C2  0A25               	xorlw	37
  1284   0024C4  A4D8               	btfss	status,2,c
  1285   0024C6  EF67  F012         	goto	u6081
  1286   0024CA  EF69  F012         	goto	u6080
  1287   0024CE                     u6081:
  1288   0024CE  EFC1  F013         	goto	l5272
  1289   0024D2                     u6080:
  1290   0024D2                     
  1291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1292   0024D2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293   0024D6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294   0024DA  2ADE               	incf	postinc2,f,c
  1295   0024DC  0E00               	movlw	0
  1296   0024DE  22DD               	addwfc	postdec2,f,c
  1297   0024E0                     
  1298                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1299   0024E0  0E00               	movlw	0
  1300   0024E2  0100               	movlb	0	; () banked
  1301   0024E4  6FF0               	movwf	(_width+1)& (0+255),b
  1302   0024E6  0E00               	movlw	0
  1303   0024E8  6FEF               	movwf	_width& (0+255),b
  1304   0024EA  C0EF  F056         	movff	_width,_flags
  1305   0024EE                     
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1308   0024EE  69F1               	setf	_prec& (0+255),b
  1309   0024F0  69F2               	setf	(_prec+1)& (0+255),b
  1310   0024F2                     
  1311                           ; BSR set to: 0
  1312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  1313   0024F2  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1314   0024F6  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1315   0024FA  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1316   0024FE  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1317   002502                     
  1318                           ; BSR set to: 0
  1319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1320   002502  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1321   002506  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1322   00250A                     	if	0	;tblptru may be non-zero
  1323   00250A                     	endif
  1324   00250A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1325   00250A  0E00               	movlw	low (__mediumconst shr (0+16))
  1326   00250C  6EF8               	movwf	tblptru,c
  1327   00250E                     	endif
  1328   00250E  0008               	tblrd		*
  1329   002510  50F5               	movf	tablat,w,c
  1330   002512  0A64               	xorlw	100
  1331   002514  B4D8               	btfsc	status,2,c
  1332   002516  EF8F  F012         	goto	u6091
  1333   00251A  EF91  F012         	goto	u6090
  1334   00251E                     u6091:
  1335   00251E  EFA1  F012         	goto	l5228
  1336   002522                     u6090:
  1337   002522                     
  1338                           ; BSR set to: 0
  1339   002522  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1340   002526  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1341   00252A                     	if	0	;tblptru may be non-zero
  1342   00252A                     	endif
  1343   00252A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1344   00252A  0E00               	movlw	low (__mediumconst shr (0+16))
  1345   00252C  6EF8               	movwf	tblptru,c
  1346   00252E                     	endif
  1347   00252E  0008               	tblrd		*
  1348   002530  50F5               	movf	tablat,w,c
  1349   002532  0A69               	xorlw	105
  1350   002534  A4D8               	btfss	status,2,c
  1351   002536  EF9F  F012         	goto	u6101
  1352   00253A  EFA1  F012         	goto	u6100
  1353   00253E                     u6101:
  1354   00253E  EFE4  F012         	goto	l5234
  1355   002542                     u6100:
  1356   002542                     l5228:
  1357                           
  1358                           ; BSR set to: 0
  1359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1360   002542  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1361   002546  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1362   00254A  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1363   00254E  0E02               	movlw	2
  1364   002550  26DE               	addwf	postinc2,f,c
  1365   002552  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1366   002556  0E00               	movlw	0
  1367   002558  22DD               	addwfc	postdec2,f,c
  1368   00255A  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1369   00255E  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1370   002562  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1371   002566  CFDD F04C          	movff	postdec2,vfpfcnvrt@convarg+1
  1372   00256A  0E00               	movlw	0
  1373   00256C  BE4C               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1374   00256E  0EFF               	movlw	-1
  1375   002570  6E4D               	movwf	(vfpfcnvrt@convarg+2)^0,c
  1376   002572  6E4E               	movwf	(vfpfcnvrt@convarg+3)^0,c
  1377   002574  6E4F               	movwf	(vfpfcnvrt@convarg+4)^0,c
  1378   002576  6E50               	movwf	(vfpfcnvrt@convarg+5)^0,c
  1379   002578  6E51               	movwf	(vfpfcnvrt@convarg+6)^0,c
  1380   00257A  6E52               	movwf	(vfpfcnvrt@convarg+7)^0,c
  1381                           
  1382                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  1383   00257C  0E01               	movlw	1
  1384   00257E  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1385   002580  6E49               	movwf	??_vfpfcnvrt^0,c
  1386   002582  0E00               	movlw	0
  1387   002584  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1388   002586  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1389   002588  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1390   00258C  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1391   002590  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1392   002594  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1393   002598                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  1396   002598  C043  F020         	movff	vfpfcnvrt@fp,dtoa@fp
  1397   00259C  C044  F021         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1398   0025A0  C04B  F022         	movff	vfpfcnvrt@convarg,dtoa@d
  1399   0025A4  C04C  F023         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1400   0025A8  C04D  F024         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1401   0025AC  C04E  F025         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1402   0025B0  C04F  F026         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1403   0025B4  C050  F027         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1404   0025B8  C051  F028         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1405   0025BC  C052  F029         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1406   0025C0  ECD8  F013         	call	_dtoa	;wreg free
  1407   0025C4  EFD7  F013         	goto	l1083
  1408   0025C8                     l5234:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1392:   cp = *fmt
      +                          ;
  1412   0025C8  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413   0025CC  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414   0025D0  CFDE F054          	movff	postinc2,vfpfcnvrt@cp
  1415   0025D4  CFDD F055          	movff	postdec2,vfpfcnvrt@cp+1
  1416   0025D8                     
  1417                           ; BSR set to: 0
  1418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1393:   c = *cp;
  1419   0025D8  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1420   0025DC  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1421   0025E0                     	if	0	;tblptru may be non-zero
  1422   0025E0                     	endif
  1423   0025E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1424   0025E0  0E00               	movlw	low (__mediumconst shr (0+16))
  1425   0025E2  6EF8               	movwf	tblptru,c
  1426   0025E4                     	endif
  1427   0025E4  0008               	tblrd		*
  1428   0025E6  CFF5 F053          	movff	tablat,vfpfcnvrt@c
  1429                           
  1430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1394:   switch(c)
      +                           {
  1431   0025EA  EF03  F013         	goto	l5246
  1432   0025EE                     l5238:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1398:     cp++;
  1436   0025EE  4A54               	infsnz	vfpfcnvrt@cp^0,f,c
  1437   0025F0  2A55               	incf	(vfpfcnvrt@cp+1)^0,f,c
  1438                           
  1439                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1399:     break;
  1440   0025F2  EF1C  F013         	goto	l5248
  1441   0025F6                     l5240:
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1424:     c = 'l'
      +                          ;
  1445   0025F6  0E6C               	movlw	108
  1446   0025F8  6E53               	movwf	vfpfcnvrt@c^0,c
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1425:     break;
  1449   0025FA  EF1C  F013         	goto	l5248
  1450   0025FE                     l5242:
  1451                           
  1452                           ; BSR set to: 0
  1453                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1427:     c = 0;
  1454   0025FE  0E00               	movlw	0
  1455   002600  6E53               	movwf	vfpfcnvrt@c^0,c
  1456                           
  1457                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1428:     break;
  1458   002602  EF1C  F013         	goto	l5248
  1459   002606                     l5246:
  1460                           
  1461                           ; BSR set to: 0
  1462   002606  5053               	movf	vfpfcnvrt@c^0,w,c
  1463   002608  6E49               	movwf	??_vfpfcnvrt^0,c
  1464   00260A  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1465                           
  1466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1467                           ; Switch size 1, requested type "simple"
  1468                           ; Number of cases is 1, Range of values is 0 to 0
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte            4     3 (average)
  1472                           ;	Chosen strategy is simple_byte
  1473   00260C  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1474   00260E  0A00               	xorlw	0	; case 0
  1475   002610  B4D8               	btfsc	status,2,c
  1476   002612  EF0D  F013         	goto	l5476
  1477   002616  EFFF  F012         	goto	l5242
  1478   00261A                     l5476:
  1479                           
  1480                           ; BSR set to: 0
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 3, Range of values is 76 to 108
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ;	Chosen strategy is simple_byte
  1487   00261A  5049               	movf	??_vfpfcnvrt^0,w,c
  1488   00261C  0A4C               	xorlw	76	; case 76
  1489   00261E  B4D8               	btfsc	status,2,c
  1490   002620  EFF7  F012         	goto	l5238
  1491   002624  0A2A               	xorlw	42	; case 102
  1492   002626  B4D8               	btfsc	status,2,c
  1493   002628  EFFB  F012         	goto	l5240
  1494   00262C  0A0A               	xorlw	10	; case 108
  1495   00262E  B4D8               	btfsc	status,2,c
  1496   002630  EFF7  F012         	goto	l5238
  1497   002634  EFFF  F012         	goto	l5242
  1498   002638                     l5248:
  1499                           
  1500                           ; BSR set to: 0
  1501   002638  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1502   00263C  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1503   002640                     	if	0	;tblptru may be non-zero
  1504   002640                     	endif
  1505   002640                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1506   002640  0E00               	movlw	low (__mediumconst shr (0+16))
  1507   002642  6EF8               	movwf	tblptru,c
  1508   002644                     	endif
  1509   002644  0008               	tblrd		*
  1510   002646  50F5               	movf	tablat,w,c
  1511   002648  0A66               	xorlw	102
  1512   00264A  A4D8               	btfss	status,2,c
  1513   00264C  EF2A  F013         	goto	u6111
  1514   002650  EF2C  F013         	goto	u6110
  1515   002654                     u6111:
  1516   002654  EFB8  F013         	goto	l5268
  1517   002658                     u6110:
  1518   002658  EF62  F013         	goto	l5256
  1519   00265C                     l5250:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1459:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1523   00265C  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1524   002660  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1525   002664  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1526   002668  0E04               	movlw	4
  1527   00266A  26DE               	addwf	postinc2,f,c
  1528   00266C  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1529   002670  0E00               	movlw	0
  1530   002672  22DD               	addwfc	postdec2,f,c
  1531   002674  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1532   002678  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1533   00267C  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1534   002680  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1535   002684  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1536   002688  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1460:      break;
  1539   00268C  EF77  F013         	goto	l5258
  1540   002690                     l5252:
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1462:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1544   002690  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1545   002694  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1546   002698  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1547   00269C  0E04               	movlw	4
  1548   00269E  26DE               	addwf	postinc2,f,c
  1549   0026A0  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1550   0026A4  0E00               	movlw	0
  1551   0026A6  22DD               	addwfc	postdec2,f,c
  1552   0026A8  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1553   0026AC  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1554   0026B0  CFDE F04B          	movff	postinc2,vfpfcnvrt@convarg
  1555   0026B4  CFDE F04C          	movff	postinc2,vfpfcnvrt@convarg+1
  1556   0026B8  CFDE F04D          	movff	postinc2,vfpfcnvrt@convarg+2
  1557   0026BC  CFDE F04E          	movff	postinc2,vfpfcnvrt@convarg+3
  1558                           
  1559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1463:      break;
  1560   0026C0  EF77  F013         	goto	l5258
  1561   0026C4                     l5256:
  1562                           
  1563                           ; BSR set to: 0
  1564   0026C4  5053               	movf	vfpfcnvrt@c^0,w,c
  1565   0026C6  6E49               	movwf	??_vfpfcnvrt^0,c
  1566   0026C8  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1567                           
  1568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 1, Range of values is 0 to 0
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            4     3 (average)
  1574                           ;	Chosen strategy is simple_byte
  1575   0026CA  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1576   0026CC  0A00               	xorlw	0	; case 0
  1577   0026CE  B4D8               	btfsc	status,2,c
  1578   0026D0  EF6C  F013         	goto	l5478
  1579   0026D4  EF77  F013         	goto	l5258
  1580   0026D8                     l5478:
  1581                           
  1582                           ; BSR set to: 0
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 2, Range of values is 76 to 108
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte            7     4 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589   0026D8  5049               	movf	??_vfpfcnvrt^0,w,c
  1590   0026DA  0A4C               	xorlw	76	; case 76
  1591   0026DC  B4D8               	btfsc	status,2,c
  1592   0026DE  EF48  F013         	goto	l5252
  1593   0026E2  0A20               	xorlw	32	; case 108
  1594   0026E4  B4D8               	btfsc	status,2,c
  1595   0026E6  EF2E  F013         	goto	l5250
  1596   0026EA  EF77  F013         	goto	l5258
  1597   0026EE                     l5258:
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1465:    *fmt = c
      +                          p+1;
  1601   0026EE  0E01               	movlw	1
  1602   0026F0  2454               	addwf	vfpfcnvrt@cp^0,w,c
  1603   0026F2  6E49               	movwf	??_vfpfcnvrt^0,c
  1604   0026F4  0E00               	movlw	0
  1605   0026F6  2055               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1606   0026F8  6E4A               	movwf	(??_vfpfcnvrt+1)^0,c
  1607   0026FA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1608   0026FE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1609   002702  C049  FFDE         	movff	??_vfpfcnvrt,postinc2
  1610   002706  C04A  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1611                           
  1612                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1466:    switch (
      +                          *cp) {
  1613   00270A  EFA0  F013         	goto	l5266
  1614   00270E                     l5260:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1493:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1618   00270E  C043  F032         	movff	vfpfcnvrt@fp,efgtoa@fp
  1619   002712  C044  F033         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1620   002716  C04B  F034         	movff	vfpfcnvrt@convarg,efgtoa@f
  1621   00271A  C04C  F035         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  1622   00271E  C04D  F036         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  1623   002722  C04E  F037         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  1624   002726  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1625   00272A  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1626   00272E                     	if	0	;tblptru may be non-zero
  1627   00272E                     	endif
  1628   00272E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1629   00272E  0E00               	movlw	low (__mediumconst shr (0+16))
  1630   002730  6EF8               	movwf	tblptru,c
  1631   002732                     	endif
  1632   002732  0008               	tblrd		*
  1633   002734  CFF5 F038          	movff	tablat,efgtoa@c
  1634   002738  EC16  F007         	call	_efgtoa	;wreg free
  1635   00273C  EFD7  F013         	goto	l1083
  1636   002740                     l5266:
  1637                           
  1638                           ; BSR set to: 0
  1639   002740  C054  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1640   002744  C055  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1641   002748                     	if	0	;tblptru may be non-zero
  1642   002748                     	endif
  1643   002748                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1644   002748  0E00               	movlw	low (__mediumconst shr (0+16))
  1645   00274A  6EF8               	movwf	tblptru,c
  1646   00274C                     	endif
  1647   00274C  0008               	tblrd		*
  1648   00274E  50F5               	movf	tablat,w,c
  1649   002750  6E49               	movwf	??_vfpfcnvrt^0,c
  1650   002752  6A4A               	clrf	(??_vfpfcnvrt+1)^0,c
  1651                           
  1652                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1653                           ; Switch size 1, requested type "simple"
  1654                           ; Number of cases is 1, Range of values is 0 to 0
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            4     3 (average)
  1658                           ;	Chosen strategy is simple_byte
  1659   002754  504A               	movf	(??_vfpfcnvrt+1)^0,w,c
  1660   002756  0A00               	xorlw	0	; case 0
  1661   002758  B4D8               	btfsc	status,2,c
  1662   00275A  EFB1  F013         	goto	l5480
  1663   00275E  EFB8  F013         	goto	l5268
  1664   002762                     l5480:
  1665                           
  1666                           ; BSR set to: 0
  1667                           ; Switch size 1, requested type "simple"
  1668                           ; Number of cases is 1, Range of values is 102 to 102
  1669                           ; switch strategies available:
  1670                           ; Name         Instructions Cycles
  1671                           ; simple_byte            4     3 (average)
  1672                           ;	Chosen strategy is simple_byte
  1673   002762  5049               	movf	??_vfpfcnvrt^0,w,c
  1674   002764  0A66               	xorlw	102	; case 102
  1675   002766  B4D8               	btfsc	status,2,c
  1676   002768  EF87  F013         	goto	l5260
  1677   00276C  EFB8  F013         	goto	l5268
  1678   002770                     l5268:
  1679                           
  1680                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1681   002770  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1682   002774  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1683   002778  2ADE               	incf	postinc2,f,c
  1684   00277A  0E00               	movlw	0
  1685   00277C  22DD               	addwfc	postdec2,f,c
  1686   00277E  EFD7  F013         	goto	l1083
  1687   002782                     l5272:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1690   002782  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1691   002786  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1692   00278A  CFDE FFF6          	movff	postinc2,tblptrl
  1693   00278E  CFDD FFF7          	movff	postdec2,tblptrh
  1694   002792                     	if	0	;tblptru may be non-zero
  1695   002792                     	endif
  1696   002792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1697   002792  0E00               	movlw	low (__mediumconst shr (0+16))
  1698   002794  6EF8               	movwf	tblptru,c
  1699   002796                     	endif
  1700   002796  0008               	tblrd		*
  1701   002798  50F5               	movf	tablat,w,c
  1702   00279A  6E05               	movwf	fputc@c^0,c
  1703   00279C  6A06               	clrf	(fputc@c+1)^0,c
  1704   00279E  C043  F007         	movff	vfpfcnvrt@fp,fputc@fp
  1705   0027A2  C044  F008         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1706   0027A6  ECB9  F01A         	call	_fputc	;wreg free
  1707   0027AA  EFB8  F013         	goto	l5268
  1708   0027AE                     l1083:
  1709   0027AE  0012               	return		;funcret
  1710   0027B0                     __end_of_vfpfcnvrt:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _efgtoa *****************
  1714 ;; Defined at:
  1715 ;;		line 506 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  fp              2   49[COMRAM] PTR struct _IO_FILE
  1718 ;;		 -> sprintf@f(11), 
  1719 ;;  f               4   51[COMRAM] PTR struct _IO_FILE
  1720 ;;  c               1   55[COMRAM] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  u               4   40[BANK0 ] struct flui
  1723 ;;  g               4   34[BANK0 ] struct flui
  1724 ;;  l               4   29[BANK0 ] struct flui
  1725 ;;  h               4   25[BANK0 ] struct flui
  1726 ;;  ou              4   19[BANK0 ] struct flui
  1727 ;;  n               2   38[BANK0 ] int 
  1728 ;;  i               2   23[BANK0 ] int 
  1729 ;;  w               2   17[BANK0 ] int 
  1730 ;;  e               2   15[BANK0 ] int 
  1731 ;;  m               2   13[BANK0 ] int 
  1732 ;;  d               2   11[BANK0 ] int 
  1733 ;;  t               2    4[BANK0 ] int 
  1734 ;;  p               2    2[BANK0 ] int 
  1735 ;;  ne              2    0[BANK0 ] int 
  1736 ;;  sign            1   33[BANK0 ] unsigned char 
  1737 ;;  nmode           1   10[BANK0 ] unsigned char 
  1738 ;;  mode            1    9[BANK0 ] unsigned char 
  1739 ;;  pp              1    8[BANK0 ] unsigned char 
  1740 ;;  esign           1    0        unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1750 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1751 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1753 ;;      Totals:         9      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1754 ;;Total ram usage:       53 bytes
  1755 ;; Hardware stack levels used: 1
  1756 ;; Hardware stack levels required when called: 6
  1757 ;; This function calls:
  1758 ;;		___fladd
  1759 ;;		___fldiv
  1760 ;;		___fleq
  1761 ;;		___flge
  1762 ;;		___flmul
  1763 ;;		___flneg
  1764 ;;		___flsub
  1765 ;;		___fltol
  1766 ;;		___fpclassifyf
  1767 ;;		_floorf
  1768 ;;		_labs
  1769 ;;		_memcpy
  1770 ;;		_pad
  1771 ;;		_strcpy
  1772 ;; This function is called by:
  1773 ;;		_vfpfcnvrt
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text4
  1778   000E2C                     __ptext4:
  1779                           	callstack 0
  1780   000E2C                     _efgtoa:
  1781                           	callstack 21
  1782   000E2C                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 506: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.40\pic\sources
      +                          \c99\common\doprnt.c: 507: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 508:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .40\pic\sources\c99\common\doprnt.c: 509:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 510:     long double h, l;
  1784   000E2C  0E00               	movlw	0
  1785   000E2E  0100               	movlb	0	; () banked
  1786   000E30  6F81               	movwf	efgtoa@sign& (0+255),b
  1787   000E32                     
  1788                           ; BSR set to: 0
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 515:     g.f = f;
  1790   000E32  C034  F082         	movff	efgtoa@f,efgtoa@g
  1791   000E36  C035  F083         	movff	efgtoa@f+1,efgtoa@g+1
  1792   000E3A  C036  F084         	movff	efgtoa@f+2,efgtoa@g+2
  1793   000E3E  C037  F085         	movff	efgtoa@f+3,efgtoa@g+3
  1794   000E42                     
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 516:     if (g.f 
      +                          < 0.0) {
  1797   000E42  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  1798   000E44  EF28  F007         	goto	u5760
  1799   000E48  EF26  F007         	goto	u5761
  1800   000E4C                     u5761:
  1801   000E4C  EF3C  F007         	goto	l5002
  1802   000E50                     u5760:
  1803   000E50                     
  1804                           ; BSR set to: 0
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 517:         sign
      +                           = 1;
  1806   000E50  0E01               	movlw	1
  1807   000E52  6F81               	movwf	efgtoa@sign& (0+255),b
  1808   000E54                     
  1809                           ; BSR set to: 0
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 518:         g.f 
      +                          = -g.f;
  1811   000E54  C082  F005         	movff	efgtoa@g,___flneg@f1
  1812   000E58  C083  F006         	movff	efgtoa@g+1,___flneg@f1+1
  1813   000E5C  C084  F007         	movff	efgtoa@g+2,___flneg@f1+2
  1814   000E60  C085  F008         	movff	efgtoa@g+3,___flneg@f1+3
  1815   000E64  EC78  F01E         	call	___flneg	;wreg free
  1816   000E68  C005  F082         	movff	?___flneg,efgtoa@g
  1817   000E6C  C006  F083         	movff	?___flneg+1,efgtoa@g+1
  1818   000E70  C007  F084         	movff	?___flneg+2,efgtoa@g+2
  1819   000E74  C008  F085         	movff	?___flneg+3,efgtoa@g+3
  1820   000E78                     l5002:
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 522:     n = 0;
  1823   000E78  0E00               	movlw	0
  1824   000E7A  0100               	movlb	0	; () banked
  1825   000E7C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1826   000E7E  0E00               	movlw	0
  1827   000E80  6F86               	movwf	efgtoa@n& (0+255),b
  1828   000E82                     
  1829                           ; BSR set to: 0
  1830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 523:     w = widt
      +                          h;
  1831   000E82  C0EF  F071         	movff	_width,efgtoa@w
  1832   000E86  C0F0  F072         	movff	_width+1,efgtoa@w+1
  1833   000E8A                     
  1834                           ; BSR set to: 0
  1835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 524:     if (sign
  1836   000E8A  5181               	movf	efgtoa@sign& (0+255),w,b
  1837   000E8C  B4D8               	btfsc	status,2,c
  1838   000E8E  EF4B  F007         	goto	u5771
  1839   000E92  EF4D  F007         	goto	u5770
  1840   000E96                     u5771:
  1841   000E96  EF61  F007         	goto	l5016
  1842   000E9A                     u5770:
  1843   000E9A                     
  1844                           ; BSR set to: 0
  1845                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 528:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 529:   sign = sign ? '-
      +                          ' : '+';
  1846   000E9A  5181               	movf	efgtoa@sign& (0+255),w,b
  1847   000E9C  A4D8               	btfss	status,2,c
  1848   000E9E  EF53  F007         	goto	u5781
  1849   000EA2  EF55  F007         	goto	u5780
  1850   000EA6                     u5781:
  1851   000EA6  EF5B  F007         	goto	l5012
  1852   000EAA                     u5780:
  1853   000EAA                     
  1854                           ; BSR set to: 0
  1855   000EAA  0E00               	movlw	0
  1856   000EAC  6F67               	movwf	(_efgtoa$1492+1)& (0+255),b
  1857   000EAE  0E2B               	movlw	43
  1858   000EB0  6F66               	movwf	_efgtoa$1492& (0+255),b
  1859   000EB2  EF5F  F007         	goto	l5014
  1860   000EB6                     l5012:
  1861                           
  1862                           ; BSR set to: 0
  1863   000EB6  0E00               	movlw	0
  1864   000EB8  6F67               	movwf	(_efgtoa$1492+1)& (0+255),b
  1865   000EBA  0E2D               	movlw	45
  1866   000EBC  6F66               	movwf	_efgtoa$1492& (0+255),b
  1867   000EBE                     l5014:
  1868                           
  1869                           ; BSR set to: 0
  1870   000EBE  C066  F081         	movff	_efgtoa$1492,efgtoa@sign
  1871   000EC2                     l5016:
  1872                           
  1873                           ; BSR set to: 0
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 538:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  1875   000EC2  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1876   000EC6  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1877   000ECA  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1878   000ECE  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1879   000ED2  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1880   000ED6  0405               	decf	?___fpclassifyf^0,w,c
  1881   000ED8  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1882   000EDA  A4D8               	btfss	status,2,c
  1883   000EDC  EF72  F007         	goto	u5791
  1884   000EE0  EF74  F007         	goto	u5790
  1885   000EE4                     u5791:
  1886   000EE4  EFA7  F007         	goto	l5034
  1887   000EE8                     u5790:
  1888   000EE8                     
  1889                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 539:   if (sign) 
      +                          {
  1890   000EE8  0100               	movlb	0	; () banked
  1891   000EEA  5181               	movf	efgtoa@sign& (0+255),w,b
  1892   000EEC  B4D8               	btfsc	status,2,c
  1893   000EEE  EF7B  F007         	goto	u5801
  1894   000EF2  EF7D  F007         	goto	u5800
  1895   000EF6                     u5801:
  1896   000EF6  EF86  F007         	goto	l5026
  1897   000EFA                     u5800:
  1898   000EFA                     
  1899                           ; BSR set to: 0
  1900                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 540:    dbuf[0] =
      +                           sign;
  1901   000EFA  C081  F150         	movff	efgtoa@sign,_dbuf
  1902   000EFE                     
  1903                           ; BSR set to: 0
  1904                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 541:    w--;
  1905   000EFE  0771               	decf	efgtoa@w& (0+255),f,b
  1906   000F00  A0D8               	btfss	status,0,c
  1907   000F02  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1908   000F04                     
  1909                           ; BSR set to: 0
  1910                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 542:    n = 1;
  1911   000F04  0E00               	movlw	0
  1912   000F06  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1913   000F08  0E01               	movlw	1
  1914   000F0A  6F86               	movwf	efgtoa@n& (0+255),b
  1915   000F0C                     l5026:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 550:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 551:             strcpy(&d
      +                          buf[n], "inf");
  1919   000F0C  0E50               	movlw	low _dbuf
  1920   000F0E  2586               	addwf	efgtoa@n& (0+255),w,b
  1921   000F10  6E05               	movwf	strcpy@dest^0,c
  1922   000F12  0E01               	movlw	high _dbuf
  1923   000F14  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  1924   000F16  6E06               	movwf	(strcpy@dest+1)^0,c
  1925   000F18  0E22               	movlw	low STR_2
  1926   000F1A  6E07               	movwf	strcpy@src^0,c
  1927   000F1C  0E0E               	movlw	high STR_2
  1928   000F1E  6E08               	movwf	(strcpy@src+1)^0,c
  1929   000F20  ECB4  F01D         	call	_strcpy	;wreg free
  1930   000F24                     l5028:
  1931                           
  1932                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 552:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 553:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  1933   000F24  0100               	movlb	0	; () banked
  1934   000F26  0EFD               	movlw	253
  1935   000F28  2771               	addwf	efgtoa@w& (0+255),f,b
  1936   000F2A  0EFF               	movlw	255
  1937   000F2C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  1938   000F2E                     
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 554:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  1941   000F2E  C032  F015         	movff	efgtoa@fp,pad@fp
  1942   000F32  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  1943   000F36  0E50               	movlw	low _dbuf
  1944   000F38  6E17               	movwf	pad@buf^0,c
  1945   000F3A  0E01               	movlw	high _dbuf
  1946   000F3C  6E18               	movwf	(pad@buf+1)^0,c
  1947   000F3E  C071  F019         	movff	efgtoa@w,pad@p
  1948   000F42  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  1949   000F46  ECD7  F01B         	call	_pad	;wreg free
  1950   000F4A  EF12  F00C         	goto	l1035
  1951   000F4E                     l5034:
  1952                           
  1953                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 556:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  1954   000F4E  C082  F005         	movff	efgtoa@g,___fpclassifyf@x
  1955   000F52  C083  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  1956   000F56  C084  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  1957   000F5A  C085  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  1958   000F5E  EC3A  F01A         	call	___fpclassifyf	;wreg free
  1959   000F62  5005               	movf	?___fpclassifyf^0,w,c
  1960   000F64  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  1961   000F66  A4D8               	btfss	status,2,c
  1962   000F68  EFB8  F007         	goto	u5811
  1963   000F6C  EFBA  F007         	goto	u5810
  1964   000F70                     u5811:
  1965   000F70  EFDA  F007         	goto	l5052
  1966   000F74                     u5810:
  1967   000F74                     
  1968                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 557:   if (sign) 
      +                          {
  1969   000F74  0100               	movlb	0	; () banked
  1970   000F76  5181               	movf	efgtoa@sign& (0+255),w,b
  1971   000F78  B4D8               	btfsc	status,2,c
  1972   000F7A  EFC1  F007         	goto	u5821
  1973   000F7E  EFC3  F007         	goto	u5820
  1974   000F82                     u5821:
  1975   000F82  EFCC  F007         	goto	l5044
  1976   000F86                     u5820:
  1977   000F86                     
  1978                           ; BSR set to: 0
  1979                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 558:    dbuf[0] =
      +                           sign;
  1980   000F86  C081  F150         	movff	efgtoa@sign,_dbuf
  1981   000F8A                     
  1982                           ; BSR set to: 0
  1983                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 559:    w--;
  1984   000F8A  0771               	decf	efgtoa@w& (0+255),f,b
  1985   000F8C  A0D8               	btfss	status,0,c
  1986   000F8E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  1987   000F90                     
  1988                           ; BSR set to: 0
  1989                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 560:    n = 1;
  1990   000F90  0E00               	movlw	0
  1991   000F92  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  1992   000F94  0E01               	movlw	1
  1993   000F96  6F86               	movwf	efgtoa@n& (0+255),b
  1994   000F98                     l5044:
  1995                           
  1996                           ; BSR set to: 0
  1997                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 568:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 569:             strcpy(&d
      +                          buf[n], "nan");
  1998   000F98  0E50               	movlw	low _dbuf
  1999   000F9A  2586               	addwf	efgtoa@n& (0+255),w,b
  2000   000F9C  6E05               	movwf	strcpy@dest^0,c
  2001   000F9E  0E01               	movlw	high _dbuf
  2002   000FA0  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2003   000FA2  6E06               	movwf	(strcpy@dest+1)^0,c
  2004   000FA4  0E26               	movlw	low STR_5
  2005   000FA6  6E07               	movwf	strcpy@src^0,c
  2006   000FA8  0E0E               	movlw	high STR_5
  2007   000FAA  6E08               	movwf	(strcpy@src+1)^0,c
  2008   000FAC  ECB4  F01D         	call	_strcpy	;wreg free
  2009   000FB0  EF92  F007         	goto	l5028
  2010   000FB4                     l5052:
  2011                           
  2012                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 576:     u.f = 1.
      +                          0;
  2013   000FB4  0E00               	movlw	0
  2014   000FB6  0100               	movlb	0	; () banked
  2015   000FB8  6F88               	movwf	efgtoa@u& (0+255),b
  2016   000FBA  0E00               	movlw	0
  2017   000FBC  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2018   000FBE  0E80               	movlw	128
  2019   000FC0  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2020   000FC2  0E3F               	movlw	63
  2021   000FC4  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2022                           
  2023                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 577:     e = 0;
  2024   000FC6  0E00               	movlw	0
  2025   000FC8  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2026   000FCA  0E00               	movlw	0
  2027   000FCC  6F6F               	movwf	efgtoa@e& (0+255),b
  2028   000FCE                     
  2029                           ; BSR set to: 0
  2030                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 578:  if (!(g.f =
      +                          = 0.0)) {
  2031   000FCE  C082  F005         	movff	efgtoa@g,___fleq@ff1
  2032   000FD2  C083  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2033   000FD6  C084  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2034   000FDA  C085  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2035   000FDE  0E00               	movlw	0
  2036   000FE0  6E09               	movwf	___fleq@ff2^0,c
  2037   000FE2  0E00               	movlw	0
  2038   000FE4  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2039   000FE6  0E00               	movlw	0
  2040   000FE8  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2041   000FEA  0E00               	movlw	0
  2042   000FEC  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2043   000FEE  EC82  F01B         	call	___fleq	;wreg free
  2044   000FF2  B0D8               	btfsc	status,0,c
  2045   000FF4  EFFE  F007         	goto	u5831
  2046   000FF8  EF00  F008         	goto	u5830
  2047   000FFC                     u5831:
  2048   000FFC  EFDF  F008         	goto	l1038
  2049   001000                     u5830:
  2050   001000  EF0D  F008         	goto	l5060
  2051   001004                     l1040:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 580:    u = ou;
  2054   001004  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2055   001008  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2056   00100C  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2057   001010  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2058   001014                     
  2059                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 581:    ++e;
  2060   001014  0100               	movlb	0	; () banked
  2061   001016  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2062   001018  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2063   00101A                     l5060:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 579:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  2066   00101A  C088  F005         	movff	efgtoa@u,___flmul@b
  2067   00101E  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2068   001022  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2069   001026  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2070   00102A  0E00               	movlw	0
  2071   00102C  6E09               	movwf	___flmul@a^0,c
  2072   00102E  0E00               	movlw	0
  2073   001030  6E0A               	movwf	(___flmul@a+1)^0,c
  2074   001032  0E20               	movlw	32
  2075   001034  6E0B               	movwf	(___flmul@a+2)^0,c
  2076   001036  0E41               	movlw	65
  2077   001038  6E0C               	movwf	(___flmul@a+3)^0,c
  2078   00103A  EC73  F00E         	call	___flmul	;wreg free
  2079   00103E  C005  F073         	movff	?___flmul,efgtoa@ou
  2080   001042  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2081   001046  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2082   00104A  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2083   00104E  0100               	movlb	0	; () banked
  2084   001050  5173               	movf	efgtoa@ou& (0+255),w,b
  2085   001052  5D82               	subwf	efgtoa@g& (0+255),w,b
  2086   001054  6E05               	movwf	labs@a^0,c
  2087   001056  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  2088   001058  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2089   00105A  6E06               	movwf	(labs@a+1)^0,c
  2090   00105C  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  2091   00105E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2092   001060  6E07               	movwf	(labs@a+2)^0,c
  2093   001062  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  2094   001064  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2095   001066  6E08               	movwf	(labs@a+3)^0,c
  2096   001068  EC14  F01C         	call	_labs	;wreg free
  2097   00106C  BE08               	btfsc	(?_labs+3)^0,7,c
  2098   00106E  EF44  F008         	goto	u5841
  2099   001072  5008               	movf	(?_labs+3)^0,w,c
  2100   001074  1007               	iorwf	(?_labs+2)^0,w,c
  2101   001076  1006               	iorwf	(?_labs+1)^0,w,c
  2102   001078  E109               	bnz	u5840
  2103   00107A  0E02               	movlw	2
  2104   00107C  5C05               	subwf	?_labs^0,w,c
  2105   00107E  A0D8               	btfss	status,0,c
  2106   001080  EF44  F008         	goto	u5841
  2107   001084  EF46  F008         	goto	u5840
  2108   001088                     u5841:
  2109   001088  EF02  F008         	goto	l1040
  2110   00108C                     u5840:
  2111   00108C  C073  F01E         	movff	efgtoa@ou,___flge@ff1
  2112   001090  C074  F01F         	movff	efgtoa@ou+1,___flge@ff1+1
  2113   001094  C075  F020         	movff	efgtoa@ou+2,___flge@ff1+2
  2114   001098  C076  F021         	movff	efgtoa@ou+3,___flge@ff1+3
  2115   00109C  C082  F022         	movff	efgtoa@g,___flge@ff2
  2116   0010A0  C083  F023         	movff	efgtoa@g+1,___flge@ff2+1
  2117   0010A4  C084  F024         	movff	efgtoa@g+2,___flge@ff2+2
  2118   0010A8  C085  F025         	movff	efgtoa@g+3,___flge@ff2+3
  2119   0010AC  ECB8  F019         	call	___flge	;wreg free
  2120   0010B0  A0D8               	btfss	status,0,c
  2121   0010B2  EF5D  F008         	goto	u5851
  2122   0010B6  EF5F  F008         	goto	u5850
  2123   0010BA                     u5851:
  2124   0010BA  EF02  F008         	goto	l1040
  2125   0010BE                     u5850:
  2126   0010BE                     
  2127                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 583:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  2128   0010BE  0100               	movlb	0	; () banked
  2129   0010C0  5188               	movf	efgtoa@u& (0+255),w,b
  2130   0010C2  5D82               	subwf	efgtoa@g& (0+255),w,b
  2131   0010C4  6E05               	movwf	labs@a^0,c
  2132   0010C6  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2133   0010C8  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2134   0010CA  6E06               	movwf	(labs@a+1)^0,c
  2135   0010CC  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2136   0010CE  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2137   0010D0  6E07               	movwf	(labs@a+2)^0,c
  2138   0010D2  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2139   0010D4  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2140   0010D6  6E08               	movwf	(labs@a+3)^0,c
  2141   0010D8  EC14  F01C         	call	_labs	;wreg free
  2142   0010DC  BE08               	btfsc	(?_labs+3)^0,7,c
  2143   0010DE  EF7E  F008         	goto	u5860
  2144   0010E2  5008               	movf	(?_labs+3)^0,w,c
  2145   0010E4  1007               	iorwf	(?_labs+2)^0,w,c
  2146   0010E6  1006               	iorwf	(?_labs+1)^0,w,c
  2147   0010E8  E107               	bnz	u5861
  2148   0010EA  0E02               	movlw	2
  2149   0010EC  5C05               	subwf	?_labs^0,w,c
  2150   0010EE  B0D8               	btfsc	status,0,c
  2151   0010F0  EF7C  F008         	goto	u5861
  2152   0010F4  EF7E  F008         	goto	u5860
  2153   0010F8                     u5861:
  2154   0010F8  EFC6  F008         	goto	l5078
  2155   0010FC                     u5860:
  2156   0010FC                     l5068:
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 584:    g = u;
  2159   0010FC  C088  F082         	movff	efgtoa@u,efgtoa@g
  2160   001100  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  2161   001104  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  2162   001108  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 585:   }
  2165   00110C  EFDF  F008         	goto	l1038
  2166   001110                     l5070:
  2167                           
  2168                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 588:     u.f = u.
      +                          f/10.0;
  2169   001110  C088  F005         	movff	efgtoa@u,___fldiv@b
  2170   001114  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2171   001118  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2172   00111C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2173   001120  0E00               	movlw	0
  2174   001122  6E09               	movwf	___fldiv@a^0,c
  2175   001124  0E00               	movlw	0
  2176   001126  6E0A               	movwf	(___fldiv@a+1)^0,c
  2177   001128  0E20               	movlw	32
  2178   00112A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2179   00112C  0E41               	movlw	65
  2180   00112E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2181   001130  EC88  F010         	call	___fldiv	;wreg free
  2182   001134  C005  F088         	movff	?___fldiv,efgtoa@u
  2183   001138  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2184   00113C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2185   001140  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2186   001144                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 589:     --e;
  2188   001144  0100               	movlb	0	; () banked
  2189   001146  076F               	decf	efgtoa@e& (0+255),f,b
  2190   001148  A0D8               	btfss	status,0,c
  2191   00114A  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  2192   00114C                     
  2193                           ; BSR set to: 0
  2194                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 590:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  2195   00114C  5188               	movf	efgtoa@u& (0+255),w,b
  2196   00114E  5D82               	subwf	efgtoa@g& (0+255),w,b
  2197   001150  6E05               	movwf	labs@a^0,c
  2198   001152  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  2199   001154  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  2200   001156  6E06               	movwf	(labs@a+1)^0,c
  2201   001158  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  2202   00115A  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  2203   00115C  6E07               	movwf	(labs@a+2)^0,c
  2204   00115E  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  2205   001160  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  2206   001162  6E08               	movwf	(labs@a+3)^0,c
  2207   001164  EC14  F01C         	call	_labs	;wreg free
  2208   001168  BE08               	btfsc	(?_labs+3)^0,7,c
  2209   00116A  EFC4  F008         	goto	u5870
  2210   00116E  5008               	movf	(?_labs+3)^0,w,c
  2211   001170  1007               	iorwf	(?_labs+2)^0,w,c
  2212   001172  1006               	iorwf	(?_labs+1)^0,w,c
  2213   001174  E107               	bnz	u5871
  2214   001176  0E02               	movlw	2
  2215   001178  5C05               	subwf	?_labs^0,w,c
  2216   00117A  B0D8               	btfsc	status,0,c
  2217   00117C  EFC2  F008         	goto	u5871
  2218   001180  EFC4  F008         	goto	u5870
  2219   001184                     u5871:
  2220   001184  EFC6  F008         	goto	l5078
  2221   001188                     u5870:
  2222   001188  EF7E  F008         	goto	l5068
  2223   00118C                     l5078:
  2224                           
  2225                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 587:    while (g.
      +                          f < u.f) {
  2226   00118C  C082  F01E         	movff	efgtoa@g,___flge@ff1
  2227   001190  C083  F01F         	movff	efgtoa@g+1,___flge@ff1+1
  2228   001194  C084  F020         	movff	efgtoa@g+2,___flge@ff1+2
  2229   001198  C085  F021         	movff	efgtoa@g+3,___flge@ff1+3
  2230   00119C  C088  F022         	movff	efgtoa@u,___flge@ff2
  2231   0011A0  C089  F023         	movff	efgtoa@u+1,___flge@ff2+1
  2232   0011A4  C08A  F024         	movff	efgtoa@u+2,___flge@ff2+2
  2233   0011A8  C08B  F025         	movff	efgtoa@u+3,___flge@ff2+3
  2234   0011AC  ECB8  F019         	call	___flge	;wreg free
  2235   0011B0  A0D8               	btfss	status,0,c
  2236   0011B2  EFDD  F008         	goto	u5881
  2237   0011B6  EFDF  F008         	goto	u5880
  2238   0011BA                     u5881:
  2239   0011BA  EF88  F008         	goto	l5070
  2240   0011BE                     u5880:
  2241   0011BE                     l1038:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 602:  mode = c;
  2244   0011BE  C038  F069         	movff	efgtoa@c,efgtoa@mode
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 604:     nmode = 
      +                          mode;
  2247   0011C2  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  2248   0011C6                     
  2249                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 614:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 615:         p = (prec < 0)
      +                           ? 6 : prec;
  2250   0011C6  0100               	movlb	0	; () banked
  2251   0011C8  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  2252   0011CA  EFE9  F008         	goto	u5891
  2253   0011CE  EFEB  F008         	goto	u5890
  2254   0011D2                     u5891:
  2255   0011D2  EFF1  F008         	goto	l5084
  2256   0011D6                     u5890:
  2257   0011D6                     
  2258                           ; BSR set to: 0
  2259   0011D6  C0F1  F062         	movff	_prec,efgtoa@p
  2260   0011DA  C0F2  F063         	movff	_prec+1,efgtoa@p+1
  2261   0011DE  EFF5  F008         	goto	l5086
  2262   0011E2                     l5084:
  2263                           
  2264                           ; BSR set to: 0
  2265   0011E2  0E00               	movlw	0
  2266   0011E4  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  2267   0011E6  0E06               	movlw	6
  2268   0011E8  6F62               	movwf	efgtoa@p& (0+255),b
  2269   0011EA                     l5086:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 616:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 630:     m = p;
  2273   0011EA  C062  F06D         	movff	efgtoa@p,efgtoa@m
  2274   0011EE  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  2275   0011F2                     
  2276                           ; BSR set to: 0
  2277                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 634:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 635:         ++m;
  2278   0011F2  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2279   0011F4  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2280   0011F6                     
  2281                           ; BSR set to: 0
  2282                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 636:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 640:     if (nmode == 'f
      +                          ') {
  2283   0011F6  0E66               	movlw	102
  2284   0011F8  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2285   0011FA  A4D8               	btfss	status,2,c
  2286   0011FC  EF02  F009         	goto	u5901
  2287   001200  EF04  F009         	goto	u5900
  2288   001204                     u5901:
  2289   001204  EF24  F009         	goto	l5100
  2290   001208                     u5900:
  2291   001208                     
  2292                           ; BSR set to: 0
  2293                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 641:         if (
      +                          e < 0) {
  2294   001208  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2295   00120A  EF0B  F009         	goto	u5910
  2296   00120E  EF09  F009         	goto	u5911
  2297   001212                     u5911:
  2298   001212  EF17  F009         	goto	l5096
  2299   001216                     u5910:
  2300   001216                     
  2301                           ; BSR set to: 0
  2302                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 642:             
      +                          u.f = 1.0;
  2303   001216  0E00               	movlw	0
  2304   001218  6F88               	movwf	efgtoa@u& (0+255),b
  2305   00121A  0E00               	movlw	0
  2306   00121C  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  2307   00121E  0E80               	movlw	128
  2308   001220  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  2309   001222  0E3F               	movlw	63
  2310   001224  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 643:             
      +                          e = 0;
  2313   001226  0E00               	movlw	0
  2314   001228  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  2315   00122A  0E00               	movlw	0
  2316   00122C  6F6F               	movwf	efgtoa@e& (0+255),b
  2317   00122E                     l5096:
  2318                           
  2319                           ; BSR set to: 0
  2320                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 645:         if (
      +                          !(mode == 'g')) {
  2321   00122E  0E67               	movlw	103
  2322   001230  1969               	xorwf	efgtoa@mode& (0+255),w,b
  2323   001232  B4D8               	btfsc	status,2,c
  2324   001234  EF1E  F009         	goto	u5921
  2325   001238  EF20  F009         	goto	u5920
  2326   00123C                     u5921:
  2327   00123C  EF24  F009         	goto	l5100
  2328   001240                     u5920:
  2329   001240                     
  2330                           ; BSR set to: 0
  2331                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 646:             
      +                          m += e;
  2332   001240  516F               	movf	efgtoa@e& (0+255),w,b
  2333   001242  276D               	addwf	efgtoa@m& (0+255),f,b
  2334   001244  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  2335   001246  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2336   001248                     l5100:
  2337                           
  2338                           ; BSR set to: 0
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 652:     i = 0;
  2340   001248  0E00               	movlw	0
  2341   00124A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2342   00124C  0E00               	movlw	0
  2343   00124E  6F77               	movwf	efgtoa@i& (0+255),b
  2344   001250                     
  2345                           ; BSR set to: 0
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 653:     h = g.f;
  2347   001250  C082  F079         	movff	efgtoa@g,efgtoa@h
  2348   001254  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  2349   001258  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  2350   00125C  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  2351   001260                     
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 654:     ou = u;
  2354   001260  C088  F073         	movff	efgtoa@u,efgtoa@ou
  2355   001264  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  2356   001268  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  2357   00126C  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2360   001270  EFB5  F009         	goto	l5114
  2361   001274                     l5106:
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 656:         l = 
      +                          floorf(h/u.f);
  2365   001274  C079  F005         	movff	efgtoa@h,___fldiv@b
  2366   001278  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2367   00127C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2368   001280  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2369   001284  C088  F009         	movff	efgtoa@u,___fldiv@a
  2370   001288  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2371   00128C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2372   001290  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2373   001294  EC88  F010         	call	___fldiv	;wreg free
  2374   001298  C005  F01E         	movff	?___fldiv,floorf@x
  2375   00129C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2376   0012A0  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2377   0012A4  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2378   0012A8  EC17  F015         	call	_floorf	;wreg free
  2379   0012AC  C01E  F07D         	movff	?_floorf,efgtoa@l
  2380   0012B0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2381   0012B4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2382   0012B8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 657:         d = 
      +                          (int)l;
  2385   0012BC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2386   0012C0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2387   0012C4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2388   0012C8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2389   0012CC  EC35  F019         	call	___fltol	;wreg free
  2390   0012D0  C005  F06B         	movff	?___fltol,efgtoa@d
  2391   0012D4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2392   0012D8                     
  2393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 658:         h -=
      +                           l*u.f;
  2394   0012D8  C079  F01E         	movff	efgtoa@h,___flsub@b
  2395   0012DC  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2396   0012E0  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2397   0012E4  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2398   0012E8  C07D  F009         	movff	efgtoa@l,___flmul@a
  2399   0012EC  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2400   0012F0  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2401   0012F4  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2402   0012F8  C088  F005         	movff	efgtoa@u,___flmul@b
  2403   0012FC  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2404   001300  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2405   001304  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2406   001308  EC73  F00E         	call	___flmul	;wreg free
  2407   00130C  C005  F022         	movff	?___flmul,___flsub@a
  2408   001310  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2409   001314  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2410   001318  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2411   00131C  EC91  F01D         	call	___flsub	;wreg free
  2412   001320  C01E  F079         	movff	?___flsub,efgtoa@h
  2413   001324  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2414   001328  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2415   00132C  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2416   001330                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 659:         u.f 
      +                          = u.f/10.0;
  2418   001330  C088  F005         	movff	efgtoa@u,___fldiv@b
  2419   001334  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2420   001338  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2421   00133C  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2422   001340  0E00               	movlw	0
  2423   001342  6E09               	movwf	___fldiv@a^0,c
  2424   001344  0E00               	movlw	0
  2425   001346  6E0A               	movwf	(___fldiv@a+1)^0,c
  2426   001348  0E20               	movlw	32
  2427   00134A  6E0B               	movwf	(___fldiv@a+2)^0,c
  2428   00134C  0E41               	movlw	65
  2429   00134E  6E0C               	movwf	(___fldiv@a+3)^0,c
  2430   001350  EC88  F010         	call	___fldiv	;wreg free
  2431   001354  C005  F088         	movff	?___fldiv,efgtoa@u
  2432   001358  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2433   00135C  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2434   001360  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2435   001364                     
  2436                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 660:         ++i;
  2437   001364  0100               	movlb	0	; () banked
  2438   001366  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2439   001368  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2440   00136A                     l5114:
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 655:     while (i
      +                           < m) {
  2444   00136A  516D               	movf	efgtoa@m& (0+255),w,b
  2445   00136C  5D77               	subwf	efgtoa@i& (0+255),w,b
  2446   00136E  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2447   001370  0A80               	xorlw	128
  2448   001372  6E39               	movwf	??_efgtoa^0,c
  2449   001374  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2450   001376  0A80               	xorlw	128
  2451   001378  5839               	subwfb	??_efgtoa^0,w,c
  2452   00137A  A0D8               	btfss	status,0,c
  2453   00137C  EFC2  F009         	goto	u5931
  2454   001380  EFC4  F009         	goto	u5930
  2455   001384                     u5931:
  2456   001384  EF3A  F009         	goto	l5106
  2457   001388                     u5930:
  2458   001388                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 664:     l = u.f*
      +                          5.0;
  2461   001388  C088  F005         	movff	efgtoa@u,___flmul@b
  2462   00138C  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2463   001390  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2464   001394  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2465   001398  0E00               	movlw	0
  2466   00139A  6E09               	movwf	___flmul@a^0,c
  2467   00139C  0E00               	movlw	0
  2468   00139E  6E0A               	movwf	(___flmul@a+1)^0,c
  2469   0013A0  0EA0               	movlw	160
  2470   0013A2  6E0B               	movwf	(___flmul@a+2)^0,c
  2471   0013A4  0E40               	movlw	64
  2472   0013A6  6E0C               	movwf	(___flmul@a+3)^0,c
  2473   0013A8  EC73  F00E         	call	___flmul	;wreg free
  2474   0013AC  C005  F07D         	movff	?___flmul,efgtoa@l
  2475   0013B0  C006  F07E         	movff	?___flmul+1,efgtoa@l+1
  2476   0013B4  C007  F07F         	movff	?___flmul+2,efgtoa@l+2
  2477   0013B8  C008  F080         	movff	?___flmul+3,efgtoa@l+3
  2478   0013BC                     
  2479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 665:     if (h < 
      +                          l) {
  2480   0013BC  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2481   0013C0  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2482   0013C4  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2483   0013C8  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2484   0013CC  C07D  F022         	movff	efgtoa@l,___flge@ff2
  2485   0013D0  C07E  F023         	movff	efgtoa@l+1,___flge@ff2+1
  2486   0013D4  C07F  F024         	movff	efgtoa@l+2,___flge@ff2+2
  2487   0013D8  C080  F025         	movff	efgtoa@l+3,___flge@ff2+3
  2488   0013DC  ECB8  F019         	call	___flge	;wreg free
  2489   0013E0  B0D8               	btfsc	status,0,c
  2490   0013E2  EFF5  F009         	goto	u5941
  2491   0013E6  EFF7  F009         	goto	u5940
  2492   0013EA                     u5941:
  2493   0013EA  EF02  F00A         	goto	l5122
  2494   0013EE                     u5940:
  2495   0013EE                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 666:         l = 
      +                          0.0;
  2497   0013EE  0E00               	movlw	0
  2498   0013F0  0100               	movlb	0	; () banked
  2499   0013F2  6F7D               	movwf	efgtoa@l& (0+255),b
  2500   0013F4  0E00               	movlw	0
  2501   0013F6  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2502   0013F8  0E00               	movlw	0
  2503   0013FA  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2504   0013FC  0E00               	movlw	0
  2505   0013FE  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2506                           
  2507                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 667:     } else {
  2508   001400  EF2B  F00A         	goto	l5128
  2509   001404                     l5122:
  2510                           
  2511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 669:         if (
      +                          (h == l) && !(d % 2)) {
  2512   001404  C079  F005         	movff	efgtoa@h,___fleq@ff1
  2513   001408  C07A  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  2514   00140C  C07B  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  2515   001410  C07C  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  2516   001414  C07D  F009         	movff	efgtoa@l,___fleq@ff2
  2517   001418  C07E  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  2518   00141C  C07F  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  2519   001420  C080  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  2520   001424  EC82  F01B         	call	___fleq	;wreg free
  2521   001428  A0D8               	btfss	status,0,c
  2522   00142A  EF19  F00A         	goto	u5951
  2523   00142E  EF1B  F00A         	goto	u5950
  2524   001432                     u5951:
  2525   001432  EF2B  F00A         	goto	l5128
  2526   001436                     u5950:
  2527   001436  0100               	movlb	0	; () banked
  2528   001438  B16B               	btfsc	efgtoa@d& (0+255),0,b
  2529   00143A  EF21  F00A         	goto	u5961
  2530   00143E  EF23  F00A         	goto	u5960
  2531   001442                     u5961:
  2532   001442  EF2B  F00A         	goto	l5128
  2533   001446                     u5960:
  2534   001446                     
  2535                           ; BSR set to: 0
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 670:             
      +                          l = 0.0;
  2537   001446  0E00               	movlw	0
  2538   001448  6F7D               	movwf	efgtoa@l& (0+255),b
  2539   00144A  0E00               	movlw	0
  2540   00144C  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  2541   00144E  0E00               	movlw	0
  2542   001450  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  2543   001452  0E00               	movlw	0
  2544   001454  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  2545   001456                     l5128:
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 675:     h = g.f 
      +                          + l;
  2548   001456  C082  F005         	movff	efgtoa@g,___fladd@b
  2549   00145A  C083  F006         	movff	efgtoa@g+1,___fladd@b+1
  2550   00145E  C084  F007         	movff	efgtoa@g+2,___fladd@b+2
  2551   001462  C085  F008         	movff	efgtoa@g+3,___fladd@b+3
  2552   001466  C07D  F009         	movff	efgtoa@l,___fladd@a
  2553   00146A  C07E  F00A         	movff	efgtoa@l+1,___fladd@a+1
  2554   00146E  C07F  F00B         	movff	efgtoa@l+2,___fladd@a+2
  2555   001472  C080  F00C         	movff	efgtoa@l+3,___fladd@a+3
  2556   001476  EC13  F00C         	call	___fladd	;wreg free
  2557   00147A  C005  F079         	movff	?___fladd,efgtoa@h
  2558   00147E  C006  F07A         	movff	?___fladd+1,efgtoa@h+1
  2559   001482  C007  F07B         	movff	?___fladd+2,efgtoa@h+2
  2560   001486  C008  F07C         	movff	?___fladd+3,efgtoa@h+3
  2561   00148A                     
  2562                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 677:  if (h >= (o
      +                          u.f*10.0)) {
  2563   00148A  C079  F01E         	movff	efgtoa@h,___flge@ff1
  2564   00148E  C07A  F01F         	movff	efgtoa@h+1,___flge@ff1+1
  2565   001492  C07B  F020         	movff	efgtoa@h+2,___flge@ff1+2
  2566   001496  C07C  F021         	movff	efgtoa@h+3,___flge@ff1+3
  2567   00149A  0E00               	movlw	0
  2568   00149C  6E09               	movwf	___flmul@a^0,c
  2569   00149E  0E00               	movlw	0
  2570   0014A0  6E0A               	movwf	(___flmul@a+1)^0,c
  2571   0014A2  0E20               	movlw	32
  2572   0014A4  6E0B               	movwf	(___flmul@a+2)^0,c
  2573   0014A6  0E41               	movlw	65
  2574   0014A8  6E0C               	movwf	(___flmul@a+3)^0,c
  2575   0014AA  C073  F005         	movff	efgtoa@ou,___flmul@b
  2576   0014AE  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2577   0014B2  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2578   0014B6  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2579   0014BA  EC73  F00E         	call	___flmul	;wreg free
  2580   0014BE  C005  F022         	movff	?___flmul,___flge@ff2
  2581   0014C2  C006  F023         	movff	?___flmul+1,___flge@ff2+1
  2582   0014C6  C007  F024         	movff	?___flmul+2,___flge@ff2+2
  2583   0014CA  C008  F025         	movff	?___flmul+3,___flge@ff2+3
  2584   0014CE  ECB8  F019         	call	___flge	;wreg free
  2585   0014D2  A0D8               	btfss	status,0,c
  2586   0014D4  EF6E  F00A         	goto	u5971
  2587   0014D8  EF70  F00A         	goto	u5970
  2588   0014DC                     u5971:
  2589   0014DC  EF99  F00A         	goto	l5140
  2590   0014E0                     u5970:
  2591   0014E0                     
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 678:   e++;
  2593   0014E0  0100               	movlb	0	; () banked
  2594   0014E2  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  2595   0014E4  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  2596   0014E6                     
  2597                           ; BSR set to: 0
  2598                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 679:   ou.f *= 10
      +                          .0;
  2599   0014E6  C073  F005         	movff	efgtoa@ou,___flmul@b
  2600   0014EA  C074  F006         	movff	efgtoa@ou+1,___flmul@b+1
  2601   0014EE  C075  F007         	movff	efgtoa@ou+2,___flmul@b+2
  2602   0014F2  C076  F008         	movff	efgtoa@ou+3,___flmul@b+3
  2603   0014F6  0E00               	movlw	0
  2604   0014F8  6E09               	movwf	___flmul@a^0,c
  2605   0014FA  0E00               	movlw	0
  2606   0014FC  6E0A               	movwf	(___flmul@a+1)^0,c
  2607   0014FE  0E20               	movlw	32
  2608   001500  6E0B               	movwf	(___flmul@a+2)^0,c
  2609   001502  0E41               	movlw	65
  2610   001504  6E0C               	movwf	(___flmul@a+3)^0,c
  2611   001506  EC73  F00E         	call	___flmul	;wreg free
  2612   00150A  C005  F073         	movff	?___flmul,efgtoa@ou
  2613   00150E  C006  F074         	movff	?___flmul+1,efgtoa@ou+1
  2614   001512  C007  F075         	movff	?___flmul+2,efgtoa@ou+2
  2615   001516  C008  F076         	movff	?___flmul+3,efgtoa@ou+3
  2616   00151A                     
  2617                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 681:   if (nmode 
      +                          == 'f') {
  2618   00151A  0E66               	movlw	102
  2619   00151C  0100               	movlb	0	; () banked
  2620   00151E  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  2621   001520  A4D8               	btfss	status,2,c
  2622   001522  EF95  F00A         	goto	u5981
  2623   001526  EF97  F00A         	goto	u5980
  2624   00152A                     u5981:
  2625   00152A  EF99  F00A         	goto	l5140
  2626   00152E                     u5980:
  2627   00152E                     
  2628                           ; BSR set to: 0
  2629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 683:    m++;
  2630   00152E  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  2631   001530  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  2632   001532                     l5140:
  2633                           
  2634                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 689:     u = ou;
  2635   001532  C073  F088         	movff	efgtoa@ou,efgtoa@u
  2636   001536  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  2637   00153A  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  2638   00153E  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  2639   001542                     
  2640                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 693:  ne = e;
  2641   001542  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  2642   001546  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  2643   00154A                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 695:     pp = 0;
  2645   00154A  0E00               	movlw	0
  2646   00154C  0100               	movlb	0	; () banked
  2647   00154E  6F68               	movwf	efgtoa@pp& (0+255),b
  2648   001550                     
  2649                           ; BSR set to: 0
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 696:     t = 0;
  2651   001550  0E00               	movlw	0
  2652   001552  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  2653   001554  0E00               	movlw	0
  2654   001556  6F64               	movwf	efgtoa@t& (0+255),b
  2655   001558                     
  2656                           ; BSR set to: 0
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 697:     i = 0;
  2658   001558  0E00               	movlw	0
  2659   00155A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2660   00155C  0E00               	movlw	0
  2661   00155E  6F77               	movwf	efgtoa@i& (0+255),b
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2664   001560  EF97  F00B         	goto	l5190
  2665   001564                     l5150:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 699:         l = 
      +                          floorf(h/u.f);
  2669   001564  C079  F005         	movff	efgtoa@h,___fldiv@b
  2670   001568  C07A  F006         	movff	efgtoa@h+1,___fldiv@b+1
  2671   00156C  C07B  F007         	movff	efgtoa@h+2,___fldiv@b+2
  2672   001570  C07C  F008         	movff	efgtoa@h+3,___fldiv@b+3
  2673   001574  C088  F009         	movff	efgtoa@u,___fldiv@a
  2674   001578  C089  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  2675   00157C  C08A  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  2676   001580  C08B  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  2677   001584  EC88  F010         	call	___fldiv	;wreg free
  2678   001588  C005  F01E         	movff	?___fldiv,floorf@x
  2679   00158C  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  2680   001590  C007  F020         	movff	?___fldiv+2,floorf@x+2
  2681   001594  C008  F021         	movff	?___fldiv+3,floorf@x+3
  2682   001598  EC17  F015         	call	_floorf	;wreg free
  2683   00159C  C01E  F07D         	movff	?_floorf,efgtoa@l
  2684   0015A0  C01F  F07E         	movff	?_floorf+1,efgtoa@l+1
  2685   0015A4  C020  F07F         	movff	?_floorf+2,efgtoa@l+2
  2686   0015A8  C021  F080         	movff	?_floorf+3,efgtoa@l+3
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 700:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  2689   0015AC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2690   0015B0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2691   0015B4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2692   0015B8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2693   0015BC  EC35  F019         	call	___fltol	;wreg free
  2694   0015C0  BE06               	btfsc	(?___fltol+1)^0,7,c
  2695   0015C2  EFEE  F00A         	goto	u5990
  2696   0015C6  5006               	movf	(?___fltol+1)^0,w,c
  2697   0015C8  E107               	bnz	u5991
  2698   0015CA  0E0A               	movlw	10
  2699   0015CC  5C05               	subwf	?___fltol^0,w,c
  2700   0015CE  B0D8               	btfsc	status,0,c
  2701   0015D0  EFEC  F00A         	goto	u5991
  2702   0015D4  EFEE  F00A         	goto	u5990
  2703   0015D8                     u5991:
  2704   0015D8  EFFE  F00A         	goto	l5154
  2705   0015DC                     u5990:
  2706   0015DC  C07D  F005         	movff	efgtoa@l,___fltol@f1
  2707   0015E0  C07E  F006         	movff	efgtoa@l+1,___fltol@f1+1
  2708   0015E4  C07F  F007         	movff	efgtoa@l+2,___fltol@f1+2
  2709   0015E8  C080  F008         	movff	efgtoa@l+3,___fltol@f1+3
  2710   0015EC  EC35  F019         	call	___fltol	;wreg free
  2711   0015F0  C005  F06B         	movff	?___fltol,efgtoa@d
  2712   0015F4  C006  F06C         	movff	?___fltol+1,efgtoa@d+1
  2713   0015F8  EF03  F00B         	goto	l1068
  2714   0015FC                     l5154:
  2715   0015FC  0E00               	movlw	0
  2716   0015FE  0100               	movlb	0	; () banked
  2717   001600  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  2718   001602  0E09               	movlw	9
  2719   001604  6F6B               	movwf	efgtoa@d& (0+255),b
  2720   001606                     l1068:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 711:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 712:             if (!pp &
      +                          & (ne < 0)) {
  2723   001606  0100               	movlb	0	; () banked
  2724   001608  5168               	movf	efgtoa@pp& (0+255),w,b
  2725   00160A  A4D8               	btfss	status,2,c
  2726   00160C  EF0A  F00B         	goto	u6001
  2727   001610  EF0C  F00B         	goto	u6000
  2728   001614                     u6001:
  2729   001614  EF34  F00B         	goto	l5174
  2730   001618                     u6000:
  2731   001618                     
  2732                           ; BSR set to: 0
  2733   001618  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  2734   00161A  EF13  F00B         	goto	u6010
  2735   00161E  EF11  F00B         	goto	u6011
  2736   001622                     u6011:
  2737   001622  EF34  F00B         	goto	l5174
  2738   001626                     u6010:
  2739   001626                     
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 713:             
      +                              dbuf[n++] = '.';
  2742   001626  0E50               	movlw	low _dbuf
  2743   001628  2586               	addwf	efgtoa@n& (0+255),w,b
  2744   00162A  6ED9               	movwf	fsr2l,c
  2745   00162C  0E01               	movlw	high _dbuf
  2746   00162E  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2747   001630  6EDA               	movwf	fsr2h,c
  2748   001632  0E2E               	movlw	46
  2749   001634  6EDF               	movwf	indf2,c
  2750   001636                     
  2751                           ; BSR set to: 0
  2752   001636  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2753   001638  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2754   00163A                     
  2755                           ; BSR set to: 0
  2756                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 714:             
      +                              --w;
  2757   00163A  0771               	decf	efgtoa@w& (0+255),f,b
  2758   00163C  A0D8               	btfss	status,0,c
  2759   00163E  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2760   001640                     
  2761                           ; BSR set to: 0
  2762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 715:             
      +                              pp = 1;
  2763   001640  0E01               	movlw	1
  2764   001642  6F68               	movwf	efgtoa@pp& (0+255),b
  2765   001644  EF34  F00B         	goto	l5174
  2766   001648                     l5166:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 718:             
      +                              dbuf[n++] = '0';
  2770   001648  0E50               	movlw	low _dbuf
  2771   00164A  2586               	addwf	efgtoa@n& (0+255),w,b
  2772   00164C  6ED9               	movwf	fsr2l,c
  2773   00164E  0E01               	movlw	high _dbuf
  2774   001650  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2775   001652  6EDA               	movwf	fsr2h,c
  2776   001654  0E30               	movlw	48
  2777   001656  6EDF               	movwf	indf2,c
  2778   001658                     
  2779                           ; BSR set to: 0
  2780   001658  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2781   00165A  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2782   00165C                     
  2783                           ; BSR set to: 0
  2784                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 719:             
      +                              --w;
  2785   00165C  0771               	decf	efgtoa@w& (0+255),f,b
  2786   00165E  A0D8               	btfss	status,0,c
  2787   001660  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2788   001662                     
  2789                           ; BSR set to: 0
  2790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 720:             
      +                              --t;
  2791   001662  0764               	decf	efgtoa@t& (0+255),f,b
  2792   001664  A0D8               	btfss	status,0,c
  2793   001666  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  2794   001668                     l5174:
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 717:             
      +                          while (t) {
  2798   001668  5164               	movf	efgtoa@t& (0+255),w,b
  2799   00166A  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  2800   00166C  A4D8               	btfss	status,2,c
  2801   00166E  EF3B  F00B         	goto	u6021
  2802   001672  EF3D  F00B         	goto	u6020
  2803   001676                     u6021:
  2804   001676  EF24  F00B         	goto	l5166
  2805   00167A                     u6020:
  2806   00167A                     
  2807                           ; BSR set to: 0
  2808                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 722:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  2809   00167A  0E50               	movlw	low _dbuf
  2810   00167C  2586               	addwf	efgtoa@n& (0+255),w,b
  2811   00167E  6ED9               	movwf	fsr2l,c
  2812   001680  0E01               	movlw	high _dbuf
  2813   001682  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2814   001684  6EDA               	movwf	fsr2h,c
  2815   001686  516B               	movf	efgtoa@d& (0+255),w,b
  2816   001688  0F30               	addlw	48
  2817   00168A  6EDF               	movwf	indf2,c
  2818   00168C                     
  2819                           ; BSR set to: 0
  2820   00168C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  2821   00168E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  2822   001690                     
  2823                           ; BSR set to: 0
  2824                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 723:             
      +                          --w;
  2825   001690  0771               	decf	efgtoa@w& (0+255),f,b
  2826   001692  A0D8               	btfss	status,0,c
  2827   001694  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  2828   001696                     
  2829                           ; BSR set to: 0
  2830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 724:         };C:
      +                          \Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 725:         h -= l*
      +                          u.f;
  2831   001696  C079  F01E         	movff	efgtoa@h,___flsub@b
  2832   00169A  C07A  F01F         	movff	efgtoa@h+1,___flsub@b+1
  2833   00169E  C07B  F020         	movff	efgtoa@h+2,___flsub@b+2
  2834   0016A2  C07C  F021         	movff	efgtoa@h+3,___flsub@b+3
  2835   0016A6  C07D  F009         	movff	efgtoa@l,___flmul@a
  2836   0016AA  C07E  F00A         	movff	efgtoa@l+1,___flmul@a+1
  2837   0016AE  C07F  F00B         	movff	efgtoa@l+2,___flmul@a+2
  2838   0016B2  C080  F00C         	movff	efgtoa@l+3,___flmul@a+3
  2839   0016B6  C088  F005         	movff	efgtoa@u,___flmul@b
  2840   0016BA  C089  F006         	movff	efgtoa@u+1,___flmul@b+1
  2841   0016BE  C08A  F007         	movff	efgtoa@u+2,___flmul@b+2
  2842   0016C2  C08B  F008         	movff	efgtoa@u+3,___flmul@b+3
  2843   0016C6  EC73  F00E         	call	___flmul	;wreg free
  2844   0016CA  C005  F022         	movff	?___flmul,___flsub@a
  2845   0016CE  C006  F023         	movff	?___flmul+1,___flsub@a+1
  2846   0016D2  C007  F024         	movff	?___flmul+2,___flsub@a+2
  2847   0016D6  C008  F025         	movff	?___flmul+3,___flsub@a+3
  2848   0016DA  EC91  F01D         	call	___flsub	;wreg free
  2849   0016DE  C01E  F079         	movff	?___flsub,efgtoa@h
  2850   0016E2  C01F  F07A         	movff	?___flsub+1,efgtoa@h+1
  2851   0016E6  C020  F07B         	movff	?___flsub+2,efgtoa@h+2
  2852   0016EA  C021  F07C         	movff	?___flsub+3,efgtoa@h+3
  2853   0016EE                     
  2854                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 726:         u.f 
      +                          = u.f/10.0;
  2855   0016EE  C088  F005         	movff	efgtoa@u,___fldiv@b
  2856   0016F2  C089  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2857   0016F6  C08A  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2858   0016FA  C08B  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2859   0016FE  0E00               	movlw	0
  2860   001700  6E09               	movwf	___fldiv@a^0,c
  2861   001702  0E00               	movlw	0
  2862   001704  6E0A               	movwf	(___fldiv@a+1)^0,c
  2863   001706  0E20               	movlw	32
  2864   001708  6E0B               	movwf	(___fldiv@a+2)^0,c
  2865   00170A  0E41               	movlw	65
  2866   00170C  6E0C               	movwf	(___fldiv@a+3)^0,c
  2867   00170E  EC88  F010         	call	___fldiv	;wreg free
  2868   001712  C005  F088         	movff	?___fldiv,efgtoa@u
  2869   001716  C006  F089         	movff	?___fldiv+1,efgtoa@u+1
  2870   00171A  C007  F08A         	movff	?___fldiv+2,efgtoa@u+2
  2871   00171E  C008  F08B         	movff	?___fldiv+3,efgtoa@u+3
  2872   001722                     
  2873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 727:         --ne
      +                          ;
  2874   001722  0100               	movlb	0	; () banked
  2875   001724  0760               	decf	efgtoa@ne& (0+255),f,b
  2876   001726  A0D8               	btfss	status,0,c
  2877   001728  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  2878   00172A                     
  2879                           ; BSR set to: 0
  2880                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 728:         ++i;
  2881   00172A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  2882   00172C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  2883   00172E                     l5190:
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 698:     while ((
      +                          i < m) && (n < (80 - 5))) {
  2887   00172E  516D               	movf	efgtoa@m& (0+255),w,b
  2888   001730  5D77               	subwf	efgtoa@i& (0+255),w,b
  2889   001732  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2890   001734  0A80               	xorlw	128
  2891   001736  6E39               	movwf	??_efgtoa^0,c
  2892   001738  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  2893   00173A  0A80               	xorlw	128
  2894   00173C  5839               	subwfb	??_efgtoa^0,w,c
  2895   00173E  B0D8               	btfsc	status,0,c
  2896   001740  EFA4  F00B         	goto	u6031
  2897   001744  EFA6  F00B         	goto	u6030
  2898   001748                     u6031:
  2899   001748  EFB4  F00B         	goto	l5194
  2900   00174C                     u6030:
  2901   00174C                     
  2902                           ; BSR set to: 0
  2903   00174C  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  2904   00174E  EFB2  F00B         	goto	u6041
  2905   001752  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2906   001754  E109               	bnz	u6040
  2907   001756  0E4B               	movlw	75
  2908   001758  5D86               	subwf	efgtoa@n& (0+255),w,b
  2909   00175A  A0D8               	btfss	status,0,c
  2910   00175C  EFB2  F00B         	goto	u6041
  2911   001760  EFB4  F00B         	goto	u6040
  2912   001764                     u6041:
  2913   001764  EFB2  F00A         	goto	l5150
  2914   001768                     u6040:
  2915   001768                     l5194:
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 735:  i = sizeof(
      +                          dbuf) - 1;
  2919   001768  0E00               	movlw	0
  2920   00176A  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  2921   00176C  0E4F               	movlw	79
  2922   00176E  6F77               	movwf	efgtoa@i& (0+255),b
  2923   001770                     
  2924                           ; BSR set to: 0
  2925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 736:     dbuf[i] 
      +                          = '\0';
  2926   001770  0E50               	movlw	low _dbuf
  2927   001772  2577               	addwf	efgtoa@i& (0+255),w,b
  2928   001774  6ED9               	movwf	fsr2l,c
  2929   001776  0E01               	movlw	high _dbuf
  2930   001778  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  2931   00177A  6EDA               	movwf	fsr2h,c
  2932   00177C  0E00               	movlw	0
  2933   00177E  6EDF               	movwf	indf2,c
  2934   001780                     
  2935                           ; BSR set to: 0
  2936                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 767:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  2937   001780  0E50               	movlw	low _dbuf
  2938   001782  6E39               	movwf	??_efgtoa^0,c
  2939   001784  0E01               	movlw	high _dbuf
  2940   001786  6E3A               	movwf	(??_efgtoa+1)^0,c
  2941   001788  5186               	movf	efgtoa@n& (0+255),w,b
  2942   00178A  5E39               	subwf	??_efgtoa^0,f,c
  2943   00178C  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2944   00178E  5A3A               	subwfb	(??_efgtoa+1)^0,f,c
  2945   001790  5177               	movf	efgtoa@i& (0+255),w,b
  2946   001792  2439               	addwf	??_efgtoa^0,w,c
  2947   001794  6E05               	movwf	memcpy@d1^0,c
  2948   001796  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  2949   001798  203A               	addwfc	(??_efgtoa+1)^0,w,c
  2950   00179A  6E06               	movwf	(memcpy@d1+1)^0,c
  2951   00179C  0E50               	movlw	low _dbuf
  2952   00179E  6E07               	movwf	memcpy@s1^0,c
  2953   0017A0  0E01               	movlw	high _dbuf
  2954   0017A2  6E08               	movwf	(memcpy@s1+1)^0,c
  2955   0017A4  C086  F009         	movff	efgtoa@n,memcpy@n
  2956   0017A8  C087  F00A         	movff	efgtoa@n+1,memcpy@n+1
  2957   0017AC  ECC9  F01C         	call	_memcpy	;wreg free
  2958   0017B0                     
  2959                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 768:  n = i-n;
  2960   0017B0  0100               	movlb	0	; () banked
  2961   0017B2  5186               	movf	efgtoa@n& (0+255),w,b
  2962   0017B4  5D77               	subwf	efgtoa@i& (0+255),w,b
  2963   0017B6  6F86               	movwf	efgtoa@n& (0+255),b
  2964   0017B8  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  2965   0017BA  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  2966   0017BC  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  2967   0017BE                     
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 769:  i = sign ==
      +                           0 ? 0 : 1;
  2970   0017BE  5181               	movf	efgtoa@sign& (0+255),w,b
  2971   0017C0  A4D8               	btfss	status,2,c
  2972   0017C2  EFE5  F00B         	goto	u6051
  2973   0017C6  EFE8  F00B         	goto	u6050
  2974   0017CA                     u6051:
  2975   0017CA  0E01               	movlw	1
  2976   0017CC  EFE9  F00B         	goto	u6060
  2977   0017D0                     u6050:
  2978   0017D0  0E00               	movlw	0
  2979   0017D2                     u6060:
  2980   0017D2  6F77               	movwf	efgtoa@i& (0+255),b
  2981   0017D4  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  2982   0017D6                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 780:  if (sign) {
  2985   0017D6  5181               	movf	efgtoa@sign& (0+255),w,b
  2986   0017D8  B4D8               	btfsc	status,2,c
  2987   0017DA  EFF1  F00B         	goto	u6071
  2988   0017DE  EFF3  F00B         	goto	u6070
  2989   0017E2                     u6071:
  2990   0017E2  EFFE  F00B         	goto	l5208
  2991   0017E6                     u6070:
  2992   0017E6                     
  2993                           ; BSR set to: 0
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 781:   dbuf[--n] 
      +                          = sign;
  2995   0017E6  0786               	decf	efgtoa@n& (0+255),f,b
  2996   0017E8  A0D8               	btfss	status,0,c
  2997   0017EA  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  2998   0017EC  0E50               	movlw	low _dbuf
  2999   0017EE  2586               	addwf	efgtoa@n& (0+255),w,b
  3000   0017F0  6ED9               	movwf	fsr2l,c
  3001   0017F2  0E01               	movlw	high _dbuf
  3002   0017F4  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3003   0017F6  6EDA               	movwf	fsr2h,c
  3004   0017F8  C081  FFDF         	movff	efgtoa@sign,indf2
  3005   0017FC                     l5208:
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 783:  w -= i;
  3009   0017FC  5177               	movf	efgtoa@i& (0+255),w,b
  3010   0017FE  5F71               	subwf	efgtoa@w& (0+255),f,b
  3011   001800  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3012   001802  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  3013   001804                     
  3014                           ; BSR set to: 0
  3015                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 786:     return (
      +                          void) pad(fp, &dbuf[n], w);
  3016   001804  C032  F015         	movff	efgtoa@fp,pad@fp
  3017   001808  C033  F016         	movff	efgtoa@fp+1,pad@fp+1
  3018   00180C  0E50               	movlw	low _dbuf
  3019   00180E  2586               	addwf	efgtoa@n& (0+255),w,b
  3020   001810  6E17               	movwf	pad@buf^0,c
  3021   001812  0E01               	movlw	high _dbuf
  3022   001814  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3023   001816  6E18               	movwf	(pad@buf+1)^0,c
  3024   001818  C071  F019         	movff	efgtoa@w,pad@p
  3025   00181C  C072  F01A         	movff	efgtoa@w+1,pad@p+1
  3026   001820  ECD7  F01B         	call	_pad	;wreg free
  3027   001824                     l1035:
  3028   001824  0012               	return		;funcret
  3029   001826                     __end_of_efgtoa:
  3030                           	callstack 0
  3031                           
  3032 ;; *************** function _strcpy *****************
  3033 ;; Defined at:
  3034 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\strcpy.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  dest            2    4[COMRAM] PTR unsigned char 
  3037 ;;		 -> dbuf(80), 
  3038 ;;  src             2    6[COMRAM] PTR const unsigned char 
  3039 ;;		 -> STR_5(4), STR_2(4), 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  d               2   10[COMRAM] PTR unsigned char 
  3042 ;;		 -> dbuf(80), 
  3043 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3044 ;;		 -> STR_5(4), STR_2(4), 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2    4[COMRAM] PTR unsigned char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3054 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3055 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3057 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;Total ram usage:        8 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 2
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_efgtoa
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text5
  3069   003B68                     __ptext5:
  3070                           	callstack 0
  3071   003B68                     _strcpy:
  3072                           	callstack 24
  3073   003B68  C007  F009         	movff	strcpy@src,strcpy@s
  3074   003B6C  C008  F00A         	movff	strcpy@src+1,strcpy@s+1
  3075   003B70  C005  F00B         	movff	strcpy@dest,strcpy@d
  3076   003B74  C006  F00C         	movff	strcpy@dest+1,strcpy@d+1
  3077   003B78                     l4894:
  3078   003B78  C009  FFF6         	movff	strcpy@s,tblptrl
  3079   003B7C  C00A  FFF7         	movff	strcpy@s+1,tblptrh
  3080   003B80  4A09               	infsnz	strcpy@s^0,f,c
  3081   003B82  2A0A               	incf	(strcpy@s+1)^0,f,c
  3082   003B84                     	if	0	;tblptru may be non-zero
  3083   003B84                     	endif
  3084   003B84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3085   003B84  0E00               	movlw	low (__mediumconst shr (0+16))
  3086   003B86  6EF8               	movwf	tblptru,c
  3087   003B88                     	endif
  3088   003B88  C00B  FFD9         	movff	strcpy@d,fsr2l
  3089   003B8C  C00C  FFDA         	movff	strcpy@d+1,fsr2h
  3090   003B90  4A0B               	infsnz	strcpy@d^0,f,c
  3091   003B92  2A0C               	incf	(strcpy@d+1)^0,f,c
  3092   003B94  0008               	tblrd		*
  3093   003B96  CFF5 FFDF          	movff	tablat,indf2
  3094   003B9A  50DF               	movf	indf2,w,c
  3095   003B9C  A4D8               	btfss	status,2,c
  3096   003B9E  EFD3  F01D         	goto	u5531
  3097   003BA2  EFD5  F01D         	goto	u5530
  3098   003BA6                     u5531:
  3099   003BA6  EFBC  F01D         	goto	l4894
  3100   003BAA                     u5530:
  3101   003BAA  0012               	return		;funcret
  3102   003BAC                     __end_of_strcpy:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function _memcpy *****************
  3106 ;; Defined at:
  3107 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\memcpy.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  d1              2    4[COMRAM] PTR void 
  3110 ;;		 -> dbuf(80), 
  3111 ;;  s1              2    6[COMRAM] PTR const void 
  3112 ;;		 -> dbuf(80), 
  3113 ;;  n               2    8[COMRAM] unsigned int 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;  s               2   13[COMRAM] PTR const unsigned char 
  3116 ;;		 -> dbuf(80), 
  3117 ;;  d               2   11[COMRAM] PTR unsigned char 
  3118 ;;		 -> dbuf(80), 
  3119 ;;  tmp             1   10[COMRAM] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2    4[COMRAM] PTR void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3129 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3130 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;Total ram usage:       11 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_efgtoa
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text6
  3144   003992                     __ptext6:
  3145                           	callstack 0
  3146   003992                     _memcpy:
  3147                           	callstack 24
  3148   003992  C007  F00E         	movff	memcpy@s1,memcpy@s
  3149   003996  C008  F00F         	movff	memcpy@s1+1,memcpy@s+1
  3150   00399A  C005  F00C         	movff	memcpy@d1,memcpy@d
  3151   00399E  C006  F00D         	movff	memcpy@d1+1,memcpy@d+1
  3152   0039A2  EFE3  F01C         	goto	l4938
  3153   0039A6                     l4930:
  3154   0039A6  C00E  FFD9         	movff	memcpy@s,fsr2l
  3155   0039AA  C00F  FFDA         	movff	memcpy@s+1,fsr2h
  3156   0039AE  50DF               	movf	indf2,w,c
  3157   0039B0  6E0B               	movwf	memcpy@tmp^0,c
  3158   0039B2  4A0E               	infsnz	memcpy@s^0,f,c
  3159   0039B4  2A0F               	incf	(memcpy@s+1)^0,f,c
  3160   0039B6  C00C  FFD9         	movff	memcpy@d,fsr2l
  3161   0039BA  C00D  FFDA         	movff	memcpy@d+1,fsr2h
  3162   0039BE  C00B  FFDF         	movff	memcpy@tmp,indf2
  3163   0039C2  4A0C               	infsnz	memcpy@d^0,f,c
  3164   0039C4  2A0D               	incf	(memcpy@d+1)^0,f,c
  3165   0039C6                     l4938:
  3166   0039C6  0609               	decf	memcpy@n^0,f,c
  3167   0039C8  A0D8               	btfss	status,0,c
  3168   0039CA  060A               	decf	(memcpy@n+1)^0,f,c
  3169   0039CC  2809               	incf	memcpy@n^0,w,c
  3170   0039CE  E106               	bnz	u5651
  3171   0039D0  280A               	incf	(memcpy@n+1)^0,w,c
  3172   0039D2  A4D8               	btfss	status,2,c
  3173   0039D4  EFEE  F01C         	goto	u5651
  3174   0039D8  EFF0  F01C         	goto	u5650
  3175   0039DC                     u5651:
  3176   0039DC  EFD3  F01C         	goto	l4930
  3177   0039E0                     u5650:
  3178   0039E0  0012               	return		;funcret
  3179   0039E2                     __end_of_memcpy:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _labs *****************
  3183 ;; Defined at:
  3184 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\labs.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  a               4    4[COMRAM] long 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;		None
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  4    4[COMRAM] long 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;Total ram usage:        8 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 2
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_efgtoa
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text7
  3213   003828                     __ptext7:
  3214                           	callstack 0
  3215   003828                     _labs:
  3216                           	callstack 24
  3217   003828  BE08               	btfsc	(labs@a+3)^0,7,c
  3218   00382A  EF23  F01C         	goto	u5540
  3219   00382E  5008               	movf	(labs@a+3)^0,w,c
  3220   003830  1007               	iorwf	(labs@a+2)^0,w,c
  3221   003832  1006               	iorwf	(labs@a+1)^0,w,c
  3222   003834  E106               	bnz	u5541
  3223   003836  0405               	decf	labs@a^0,w,c
  3224   003838  B0D8               	btfsc	status,0,c
  3225   00383A  EF21  F01C         	goto	u5541
  3226   00383E  EF23  F01C         	goto	u5540
  3227   003842                     u5541:
  3228   003842  EF3E  F01C         	goto	l1140
  3229   003846                     u5540:
  3230   003846  C005  F009         	movff	labs@a,??_labs
  3231   00384A  C006  F00A         	movff	labs@a+1,??_labs+1
  3232   00384E  C007  F00B         	movff	labs@a+2,??_labs+2
  3233   003852  C008  F00C         	movff	labs@a+3,??_labs+3
  3234   003856  1E09               	comf	??_labs^0,f,c
  3235   003858  1E0A               	comf	(??_labs+1)^0,f,c
  3236   00385A  1E0B               	comf	(??_labs+2)^0,f,c
  3237   00385C  1E0C               	comf	(??_labs+3)^0,f,c
  3238   00385E  2A09               	incf	??_labs^0,f,c
  3239   003860  0E00               	movlw	0
  3240   003862  220A               	addwfc	(??_labs+1)^0,f,c
  3241   003864  220B               	addwfc	(??_labs+2)^0,f,c
  3242   003866  220C               	addwfc	(??_labs+3)^0,f,c
  3243   003868  C009  F005         	movff	??_labs,?_labs
  3244   00386C  C00A  F006         	movff	??_labs+1,?_labs+1
  3245   003870  C00B  F007         	movff	??_labs+2,?_labs+2
  3246   003874  C00C  F008         	movff	??_labs+3,?_labs+3
  3247   003878  EF46  F01C         	goto	l1143
  3248   00387C                     l1140:
  3249   00387C  C005  F005         	movff	labs@a,?_labs
  3250   003880  C006  F006         	movff	labs@a+1,?_labs+1
  3251   003884  C007  F007         	movff	labs@a+2,?_labs+2
  3252   003888  C008  F008         	movff	labs@a+3,?_labs+3
  3253   00388C                     l1143:
  3254   00388C  0012               	return		;funcret
  3255   00388E                     __end_of_labs:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _floorf *****************
  3259 ;; Defined at:
  3260 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\floorf.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  x               4   29[COMRAM] float 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  u               4   45[COMRAM] struct .
  3265 ;;  m               4   39[COMRAM] unsigned long 
  3266 ;;  e               2   43[COMRAM] int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  4   29[COMRAM] float 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3278 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3279 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;Total ram usage:       20 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 2
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_efgtoa
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text8
  3291   002A2E                     __ptext8:
  3292                           	callstack 0
  3293   002A2E                     _floorf:
  3294                           	callstack 24
  3295   002A2E  C0E7  F02E         	movff	floorf@F526,floorf@u
  3296   002A32  C0E8  F02F         	movff	floorf@F526+1,floorf@u+1
  3297   002A36  C0E9  F030         	movff	floorf@F526+2,floorf@u+2
  3298   002A3A  C0EA  F031         	movff	floorf@F526+3,floorf@u+3
  3299   002A3E  C01E  F02E         	movff	floorf@x,floorf@u
  3300   002A42  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  3301   002A46  C020  F030         	movff	floorf@x+2,floorf@u+2
  3302   002A4A  C021  F031         	movff	floorf@x+3,floorf@u+3
  3303   002A4E  0E81               	movlw	129
  3304   002A50  6E22               	movwf	??_floorf^0,c
  3305   002A52  0EFF               	movlw	255
  3306   002A54  6E23               	movwf	(??_floorf+1)^0,c
  3307   002A56  C02E  F024         	movff	floorf@u,??_floorf+2
  3308   002A5A  C02F  F025         	movff	floorf@u+1,??_floorf+3
  3309   002A5E  C030  F026         	movff	floorf@u+2,??_floorf+4
  3310   002A62  C031  F027         	movff	floorf@u+3,??_floorf+5
  3311   002A66  0E18               	movlw	24
  3312   002A68  EF3B  F015         	goto	u5550
  3313   002A6C                     u5555:
  3314   002A6C  90D8               	bcf	status,0,c
  3315   002A6E  3227               	rrcf	(??_floorf+5)^0,f,c
  3316   002A70  3226               	rrcf	(??_floorf+4)^0,f,c
  3317   002A72  3225               	rrcf	(??_floorf+3)^0,f,c
  3318   002A74  3224               	rrcf	(??_floorf+2)^0,f,c
  3319   002A76                     u5550:
  3320   002A76  2EE8               	decfsz	wreg,f,c
  3321   002A78  EF36  F015         	goto	u5555
  3322   002A7C  5024               	movf	(??_floorf+2)^0,w,c
  3323   002A7E  2422               	addwf	??_floorf^0,w,c
  3324   002A80  6E2C               	movwf	floorf@e^0,c
  3325   002A82  0E00               	movlw	0
  3326   002A84  2023               	addwfc	(??_floorf+1)^0,w,c
  3327   002A86  6E2D               	movwf	(floorf@e+1)^0,c
  3328   002A88  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3329   002A8A  EF50  F015         	goto	u5561
  3330   002A8E  502D               	movf	(floorf@e+1)^0,w,c
  3331   002A90  E109               	bnz	u5560
  3332   002A92  0E17               	movlw	23
  3333   002A94  5C2C               	subwf	floorf@e^0,w,c
  3334   002A96  A0D8               	btfss	status,0,c
  3335   002A98  EF50  F015         	goto	u5561
  3336   002A9C  EF52  F015         	goto	u5560
  3337   002AA0                     u5561:
  3338   002AA0  EF5C  F015         	goto	l4906
  3339   002AA4                     u5560:
  3340   002AA4                     l4904:
  3341   002AA4  C01E  F01E         	movff	floorf@x,?_floorf
  3342   002AA8  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  3343   002AAC  C020  F020         	movff	floorf@x+2,?_floorf+2
  3344   002AB0  C021  F021         	movff	floorf@x+3,?_floorf+3
  3345   002AB4  EF1F  F016         	goto	l1129
  3346   002AB8                     l4906:
  3347   002AB8  BE2D               	btfsc	(floorf@e+1)^0,7,c
  3348   002ABA  EF61  F015         	goto	u5571
  3349   002ABE  EF63  F015         	goto	u5570
  3350   002AC2                     u5571:
  3351   002AC2  EFD3  F015         	goto	l4916
  3352   002AC6                     u5570:
  3353   002AC6  C02C  F022         	movff	floorf@e,??_floorf
  3354   002ACA  0EFF               	movlw	255
  3355   002ACC  6E23               	movwf	(??_floorf+1)^0,c
  3356   002ACE  0EFF               	movlw	255
  3357   002AD0  6E24               	movwf	(??_floorf+2)^0,c
  3358   002AD2  0E7F               	movlw	127
  3359   002AD4  6E25               	movwf	(??_floorf+3)^0,c
  3360   002AD6  0E00               	movlw	0
  3361   002AD8  6E26               	movwf	(??_floorf+4)^0,c
  3362   002ADA                     u5585:
  3363   002ADA  6622               	tstfsz	??_floorf^0,c
  3364   002ADC  EF72  F015         	goto	u5586
  3365   002AE0  EF7A  F015         	goto	u5587
  3366   002AE4                     u5586:
  3367   002AE4  3426               	rlcf	(??_floorf+4)^0,w,c
  3368   002AE6  3226               	rrcf	(??_floorf+4)^0,f,c
  3369   002AE8  3225               	rrcf	(??_floorf+3)^0,f,c
  3370   002AEA  3224               	rrcf	(??_floorf+2)^0,f,c
  3371   002AEC  3223               	rrcf	(??_floorf+1)^0,f,c
  3372   002AEE  2E22               	decfsz	??_floorf^0,f,c
  3373   002AF0  EF6D  F015         	goto	u5585
  3374   002AF4                     u5587:
  3375   002AF4  C023  F028         	movff	??_floorf+1,floorf@m
  3376   002AF8  C024  F029         	movff	??_floorf+2,floorf@m+1
  3377   002AFC  C025  F02A         	movff	??_floorf+3,floorf@m+2
  3378   002B00  C026  F02B         	movff	??_floorf+4,floorf@m+3
  3379   002B04  5028               	movf	floorf@m^0,w,c
  3380   002B06  142E               	andwf	floorf@u^0,w,c
  3381   002B08  6E22               	movwf	??_floorf^0,c
  3382   002B0A  5029               	movf	(floorf@m+1)^0,w,c
  3383   002B0C  142F               	andwf	(floorf@u+1)^0,w,c
  3384   002B0E  6E23               	movwf	(??_floorf+1)^0,c
  3385   002B10  502A               	movf	(floorf@m+2)^0,w,c
  3386   002B12  1430               	andwf	(floorf@u+2)^0,w,c
  3387   002B14  6E24               	movwf	(??_floorf+2)^0,c
  3388   002B16  502B               	movf	(floorf@m+3)^0,w,c
  3389   002B18  1431               	andwf	(floorf@u+3)^0,w,c
  3390   002B1A  6E25               	movwf	(??_floorf+3)^0,c
  3391   002B1C  5022               	movf	??_floorf^0,w,c
  3392   002B1E  1023               	iorwf	(??_floorf+1)^0,w,c
  3393   002B20  1024               	iorwf	(??_floorf+2)^0,w,c
  3394   002B22  1025               	iorwf	(??_floorf+3)^0,w,c
  3395   002B24  A4D8               	btfss	status,2,c
  3396   002B26  EF97  F015         	goto	u5591
  3397   002B2A  EF99  F015         	goto	u5590
  3398   002B2E                     u5591:
  3399   002B2E  EF9B  F015         	goto	l4912
  3400   002B32                     u5590:
  3401   002B32  EF52  F015         	goto	l4904
  3402   002B36                     l4912:
  3403   002B36  C02E  F022         	movff	floorf@u,??_floorf
  3404   002B3A  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3405   002B3E  C030  F024         	movff	floorf@u+2,??_floorf+2
  3406   002B42  C031  F025         	movff	floorf@u+3,??_floorf+3
  3407   002B46  0E20               	movlw	32
  3408   002B48  EFAB  F015         	goto	u5600
  3409   002B4C                     u5605:
  3410   002B4C  90D8               	bcf	status,0,c
  3411   002B4E  3225               	rrcf	(??_floorf+3)^0,f,c
  3412   002B50  3224               	rrcf	(??_floorf+2)^0,f,c
  3413   002B52  3223               	rrcf	(??_floorf+1)^0,f,c
  3414   002B54  3222               	rrcf	??_floorf^0,f,c
  3415   002B56                     u5600:
  3416   002B56  2EE8               	decfsz	wreg,f,c
  3417   002B58  EFA6  F015         	goto	u5605
  3418   002B5C  5022               	movf	??_floorf^0,w,c
  3419   002B5E  1023               	iorwf	(??_floorf+1)^0,w,c
  3420   002B60  1024               	iorwf	(??_floorf+2)^0,w,c
  3421   002B62  1025               	iorwf	(??_floorf+3)^0,w,c
  3422   002B64  B4D8               	btfsc	status,2,c
  3423   002B66  EFB7  F015         	goto	u5611
  3424   002B6A  EFB9  F015         	goto	u5610
  3425   002B6E                     u5611:
  3426   002B6E  EFC1  F015         	goto	l1132
  3427   002B72                     u5610:
  3428   002B72  5028               	movf	floorf@m^0,w,c
  3429   002B74  262E               	addwf	floorf@u^0,f,c
  3430   002B76  5029               	movf	(floorf@m+1)^0,w,c
  3431   002B78  222F               	addwfc	(floorf@u+1)^0,f,c
  3432   002B7A  502A               	movf	(floorf@m+2)^0,w,c
  3433   002B7C  2230               	addwfc	(floorf@u+2)^0,f,c
  3434   002B7E  502B               	movf	(floorf@m+3)^0,w,c
  3435   002B80  2231               	addwfc	(floorf@u+3)^0,f,c
  3436   002B82                     l1132:
  3437   002B82  1C28               	comf	floorf@m^0,w,c
  3438   002B84  6E22               	movwf	??_floorf^0,c
  3439   002B86  1C29               	comf	(floorf@m+1)^0,w,c
  3440   002B88  6E23               	movwf	(??_floorf+1)^0,c
  3441   002B8A  1C2A               	comf	(floorf@m+2)^0,w,c
  3442   002B8C  6E24               	movwf	(??_floorf+2)^0,c
  3443   002B8E  1C2B               	comf	(floorf@m+3)^0,w,c
  3444   002B90  6E25               	movwf	(??_floorf+3)^0,c
  3445   002B92  5022               	movf	??_floorf^0,w,c
  3446   002B94  162E               	andwf	floorf@u^0,f,c
  3447   002B96  5023               	movf	(??_floorf+1)^0,w,c
  3448   002B98  162F               	andwf	(floorf@u+1)^0,f,c
  3449   002B9A  5024               	movf	(??_floorf+2)^0,w,c
  3450   002B9C  1630               	andwf	(floorf@u+2)^0,f,c
  3451   002B9E  5025               	movf	(??_floorf+3)^0,w,c
  3452   002BA0  1631               	andwf	(floorf@u+3)^0,f,c
  3453   002BA2  EF17  F016         	goto	l4924
  3454   002BA6                     l4916:
  3455   002BA6  C02E  F022         	movff	floorf@u,??_floorf
  3456   002BAA  C02F  F023         	movff	floorf@u+1,??_floorf+1
  3457   002BAE  C030  F024         	movff	floorf@u+2,??_floorf+2
  3458   002BB2  C031  F025         	movff	floorf@u+3,??_floorf+3
  3459   002BB6  0E20               	movlw	32
  3460   002BB8  EFE3  F015         	goto	u5620
  3461   002BBC                     u5625:
  3462   002BBC  90D8               	bcf	status,0,c
  3463   002BBE  3225               	rrcf	(??_floorf+3)^0,f,c
  3464   002BC0  3224               	rrcf	(??_floorf+2)^0,f,c
  3465   002BC2  3223               	rrcf	(??_floorf+1)^0,f,c
  3466   002BC4  3222               	rrcf	??_floorf^0,f,c
  3467   002BC6                     u5620:
  3468   002BC6  2EE8               	decfsz	wreg,f,c
  3469   002BC8  EFDE  F015         	goto	u5625
  3470   002BCC  5022               	movf	??_floorf^0,w,c
  3471   002BCE  1023               	iorwf	(??_floorf+1)^0,w,c
  3472   002BD0  1024               	iorwf	(??_floorf+2)^0,w,c
  3473   002BD2  1025               	iorwf	(??_floorf+3)^0,w,c
  3474   002BD4  A4D8               	btfss	status,2,c
  3475   002BD6  EFEF  F015         	goto	u5631
  3476   002BDA  EFF1  F015         	goto	u5630
  3477   002BDE                     u5631:
  3478   002BDE  EFFB  F015         	goto	l4920
  3479   002BE2                     u5630:
  3480   002BE2  0E00               	movlw	0
  3481   002BE4  6E2E               	movwf	floorf@u^0,c
  3482   002BE6  0E00               	movlw	0
  3483   002BE8  6E2F               	movwf	(floorf@u+1)^0,c
  3484   002BEA  0E00               	movlw	0
  3485   002BEC  6E30               	movwf	(floorf@u+2)^0,c
  3486   002BEE  0E00               	movlw	0
  3487   002BF0  6E31               	movwf	(floorf@u+3)^0,c
  3488   002BF2  EF17  F016         	goto	l4924
  3489   002BF6                     l4920:
  3490   002BF6  90D8               	bcf	status,0,c
  3491   002BF8  342E               	rlcf	floorf@u^0,w,c
  3492   002BFA  6E22               	movwf	??_floorf^0,c
  3493   002BFC  342F               	rlcf	(floorf@u+1)^0,w,c
  3494   002BFE  6E23               	movwf	(??_floorf+1)^0,c
  3495   002C00  3430               	rlcf	(floorf@u+2)^0,w,c
  3496   002C02  6E24               	movwf	(??_floorf+2)^0,c
  3497   002C04  3431               	rlcf	(floorf@u+3)^0,w,c
  3498   002C06  6E25               	movwf	(??_floorf+3)^0,c
  3499   002C08  5022               	movf	??_floorf^0,w,c
  3500   002C0A  1023               	iorwf	(??_floorf+1)^0,w,c
  3501   002C0C  1024               	iorwf	(??_floorf+2)^0,w,c
  3502   002C0E  1025               	iorwf	(??_floorf+3)^0,w,c
  3503   002C10  B4D8               	btfsc	status,2,c
  3504   002C12  EF0D  F016         	goto	u5641
  3505   002C16  EF0F  F016         	goto	u5640
  3506   002C1A                     u5641:
  3507   002C1A  EF17  F016         	goto	l4924
  3508   002C1E                     u5640:
  3509   002C1E  0E00               	movlw	0
  3510   002C20  6E2E               	movwf	floorf@u^0,c
  3511   002C22  0E00               	movlw	0
  3512   002C24  6E2F               	movwf	(floorf@u+1)^0,c
  3513   002C26  0E80               	movlw	128
  3514   002C28  6E30               	movwf	(floorf@u+2)^0,c
  3515   002C2A  0EBF               	movlw	191
  3516   002C2C  6E31               	movwf	(floorf@u+3)^0,c
  3517   002C2E                     l4924:
  3518   002C2E  C02E  F01E         	movff	floorf@u,?_floorf
  3519   002C32  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  3520   002C36  C030  F020         	movff	floorf@u+2,?_floorf+2
  3521   002C3A  C031  F021         	movff	floorf@u+3,?_floorf+3
  3522   002C3E                     l1129:
  3523   002C3E  0012               	return		;funcret
  3524   002C40                     __end_of_floorf:
  3525                           	callstack 0
  3526                           
  3527 ;; *************** function ___fpclassifyf *****************
  3528 ;; Defined at:
  3529 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\__fpclassifyf.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  x               4    4[COMRAM] float 
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  u               4   14[COMRAM] struct .
  3534 ;;  e               2   12[COMRAM] int 
  3535 ;; Return value:  Size  Location     Type
  3536 ;;                  2    4[COMRAM] int 
  3537 ;; Registers used:
  3538 ;;		wreg, status,2, status,0
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3545 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3546 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3547 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3548 ;;Total ram usage:       14 bytes
  3549 ;; Hardware stack levels used: 1
  3550 ;; Hardware stack levels required when called: 2
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_efgtoa
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text9
  3559   003474                     __ptext9:
  3560                           	callstack 0
  3561   003474                     ___fpclassifyf:
  3562                           	callstack 24
  3563   003474  C0EB  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  3564   003478  C0EC  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  3565   00347C  C0ED  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  3566   003480  C0EE  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  3567   003484  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  3568   003488  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  3569   00348C  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  3570   003490  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  3571   003494  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3572   003498  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3573   00349C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3574   0034A0  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3575   0034A4  0E18               	movlw	24
  3576   0034A6  EF5A  F01A         	goto	u5460
  3577   0034AA                     u5465:
  3578   0034AA  90D8               	bcf	status,0,c
  3579   0034AC  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  3580   0034AE  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  3581   0034B0  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  3582   0034B2  3209               	rrcf	??___fpclassifyf^0,f,c
  3583   0034B4                     u5460:
  3584   0034B4  2EE8               	decfsz	wreg,f,c
  3585   0034B6  EF55  F01A         	goto	u5465
  3586   0034BA  5009               	movf	??___fpclassifyf^0,w,c
  3587   0034BC  6E0D               	movwf	___fpclassifyf@e^0,c
  3588   0034BE  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  3589   0034C0  500D               	movf	___fpclassifyf@e^0,w,c
  3590   0034C2  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3591   0034C4  A4D8               	btfss	status,2,c
  3592   0034C6  EF67  F01A         	goto	u5471
  3593   0034CA  EF69  F01A         	goto	u5470
  3594   0034CE                     u5471:
  3595   0034CE  EF89  F01A         	goto	l4882
  3596   0034D2                     u5470:
  3597   0034D2  90D8               	bcf	status,0,c
  3598   0034D4  340F               	rlcf	___fpclassifyf@u^0,w,c
  3599   0034D6  6E09               	movwf	??___fpclassifyf^0,c
  3600   0034D8  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  3601   0034DA  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  3602   0034DC  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  3603   0034DE  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  3604   0034E0  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  3605   0034E2  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  3606   0034E4  5009               	movf	??___fpclassifyf^0,w,c
  3607   0034E6  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3608   0034E8  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3609   0034EA  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3610   0034EC  A4D8               	btfss	status,2,c
  3611   0034EE  EF7B  F01A         	goto	u5481
  3612   0034F2  EF7D  F01A         	goto	u5480
  3613   0034F6                     u5481:
  3614   0034F6  EF83  F01A         	goto	l4878
  3615   0034FA                     u5480:
  3616   0034FA  0E00               	movlw	0
  3617   0034FC  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3618   0034FE  0E02               	movlw	2
  3619   003500  6E05               	movwf	?___fpclassifyf^0,c
  3620   003502  EFB8  F01A         	goto	l1115
  3621   003506                     l4878:
  3622   003506  0E00               	movlw	0
  3623   003508  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3624   00350A  0E03               	movlw	3
  3625   00350C  6E05               	movwf	?___fpclassifyf^0,c
  3626   00350E  EFB8  F01A         	goto	l1115
  3627   003512                     l4882:
  3628   003512  280D               	incf	___fpclassifyf@e^0,w,c
  3629   003514  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  3630   003516  A4D8               	btfss	status,2,c
  3631   003518  EF90  F01A         	goto	u5491
  3632   00351C  EF92  F01A         	goto	u5490
  3633   003520                     u5491:
  3634   003520  EFB4  F01A         	goto	l4888
  3635   003524                     u5490:
  3636   003524  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  3637   003528  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  3638   00352C  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  3639   003530  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  3640   003534  0E09               	movlw	9
  3641   003536                     u5505:
  3642   003536  90D8               	bcf	status,0,c
  3643   003538  3609               	rlcf	??___fpclassifyf^0,f,c
  3644   00353A  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  3645   00353C  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  3646   00353E  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  3647   003540  2EE8               	decfsz	wreg,f,c
  3648   003542  EF9B  F01A         	goto	u5505
  3649   003546  5009               	movf	??___fpclassifyf^0,w,c
  3650   003548  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  3651   00354A  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  3652   00354C  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  3653   00354E  B4D8               	btfsc	status,2,c
  3654   003550  EFAC  F01A         	goto	u5511
  3655   003554  EFAF  F01A         	goto	u5510
  3656   003558                     u5511:
  3657   003558  0E01               	movlw	1
  3658   00355A  EFB0  F01A         	goto	u5520
  3659   00355E                     u5510:
  3660   00355E  0E00               	movlw	0
  3661   003560                     u5520:
  3662   003560  6E05               	movwf	?___fpclassifyf^0,c
  3663   003562  6A06               	clrf	(?___fpclassifyf+1)^0,c
  3664   003564  EFB8  F01A         	goto	l1115
  3665   003568                     l4888:
  3666   003568  0E00               	movlw	0
  3667   00356A  6E06               	movwf	(?___fpclassifyf+1)^0,c
  3668   00356C  0E04               	movlw	4
  3669   00356E  6E05               	movwf	?___fpclassifyf^0,c
  3670   003570                     l1115:
  3671   003570  0012               	return		;funcret
  3672   003572                     __end_of___fpclassifyf:
  3673                           	callstack 0
  3674                           
  3675 ;; *************** function ___fltol *****************
  3676 ;; Defined at:
  3677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  f1              4    4[COMRAM] int 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  exp1            1   13[COMRAM] unsigned char 
  3682 ;;  sign1           1   12[COMRAM] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  4    4[COMRAM] long 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;Total ram usage:       10 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 2
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_efgtoa
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text10
  3707   00326A                     __ptext10:
  3708                           	callstack 0
  3709   00326A                     ___fltol:
  3710                           	callstack 24
  3711   00326A  3407               	rlcf	(___fltol@f1+2)^0,w,c
  3712   00326C  3408               	rlcf	(___fltol@f1+3)^0,w,c
  3713   00326E  6E0E               	movwf	___fltol@exp1^0,c
  3714   003270  500E               	movf	___fltol@exp1^0,w,c
  3715   003272  A4D8               	btfss	status,2,c
  3716   003274  EF3E  F019         	goto	u5361
  3717   003278  EF40  F019         	goto	u5360
  3718   00327C                     u5361:
  3719   00327C  EF4A  F019         	goto	l4814
  3720   003280                     u5360:
  3721   003280                     l4810:
  3722   003280  0E00               	movlw	0
  3723   003282  6E05               	movwf	?___fltol^0,c
  3724   003284  0E00               	movlw	0
  3725   003286  6E06               	movwf	(?___fltol+1)^0,c
  3726   003288  0E00               	movlw	0
  3727   00328A  6E07               	movwf	(?___fltol+2)^0,c
  3728   00328C  0E00               	movlw	0
  3729   00328E  6E08               	movwf	(?___fltol+3)^0,c
  3730   003290  EFB7  F019         	goto	l588
  3731   003294                     l4814:
  3732   003294  C005  F009         	movff	___fltol@f1,??___fltol
  3733   003298  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  3734   00329C  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  3735   0032A0  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  3736   0032A4  0E20               	movlw	32
  3737   0032A6  EF5A  F019         	goto	u5370
  3738   0032AA                     u5375:
  3739   0032AA  90D8               	bcf	status,0,c
  3740   0032AC  320C               	rrcf	(??___fltol+3)^0,f,c
  3741   0032AE  320B               	rrcf	(??___fltol+2)^0,f,c
  3742   0032B0  320A               	rrcf	(??___fltol+1)^0,f,c
  3743   0032B2  3209               	rrcf	??___fltol^0,f,c
  3744   0032B4                     u5370:
  3745   0032B4  2EE8               	decfsz	wreg,f,c
  3746   0032B6  EF55  F019         	goto	u5375
  3747   0032BA  5009               	movf	??___fltol^0,w,c
  3748   0032BC  6E0D               	movwf	___fltol@sign1^0,c
  3749   0032BE  8E07               	bsf	(___fltol@f1+2)^0,7,c
  3750   0032C0  0EFF               	movlw	255
  3751   0032C2  1605               	andwf	___fltol@f1^0,f,c
  3752   0032C4  0EFF               	movlw	255
  3753   0032C6  1606               	andwf	(___fltol@f1+1)^0,f,c
  3754   0032C8  0EFF               	movlw	255
  3755   0032CA  1607               	andwf	(___fltol@f1+2)^0,f,c
  3756   0032CC  0E00               	movlw	0
  3757   0032CE  1608               	andwf	(___fltol@f1+3)^0,f,c
  3758   0032D0  0E96               	movlw	150
  3759   0032D2  5E0E               	subwf	___fltol@exp1^0,f,c
  3760   0032D4  BE0E               	btfsc	___fltol@exp1^0,7,c
  3761   0032D6  EF71  F019         	goto	u5380
  3762   0032DA  EF6F  F019         	goto	u5381
  3763   0032DE                     u5381:
  3764   0032DE  EF87  F019         	goto	l4834
  3765   0032E2                     u5380:
  3766   0032E2  500E               	movf	___fltol@exp1^0,w,c
  3767   0032E4  0A80               	xorlw	128
  3768   0032E6  0F97               	addlw	151
  3769   0032E8  B0D8               	btfsc	status,0,c
  3770   0032EA  EF79  F019         	goto	u5391
  3771   0032EE  EF7B  F019         	goto	u5390
  3772   0032F2                     u5391:
  3773   0032F2  EF7D  F019         	goto	l4830
  3774   0032F6                     u5390:
  3775   0032F6  EF40  F019         	goto	l4810
  3776   0032FA                     l4830:
  3777   0032FA  90D8               	bcf	status,0,c
  3778   0032FC  3208               	rrcf	(___fltol@f1+3)^0,f,c
  3779   0032FE  3207               	rrcf	(___fltol@f1+2)^0,f,c
  3780   003300  3206               	rrcf	(___fltol@f1+1)^0,f,c
  3781   003302  3205               	rrcf	___fltol@f1^0,f,c
  3782   003304  3E0E               	incfsz	___fltol@exp1^0,f,c
  3783   003306  EF7D  F019         	goto	l4830
  3784   00330A  EF9F  F019         	goto	l4844
  3785   00330E                     l4834:
  3786   00330E  0E1F               	movlw	31
  3787   003310  640E               	cpfsgt	___fltol@exp1^0,c
  3788   003312  EF8D  F019         	goto	u5401
  3789   003316  EF8F  F019         	goto	u5400
  3790   00331A                     u5401:
  3791   00331A  EF97  F019         	goto	l4842
  3792   00331E                     u5400:
  3793   00331E  EF40  F019         	goto	l4810
  3794   003322                     l4840:
  3795   003322  90D8               	bcf	status,0,c
  3796   003324  3605               	rlcf	___fltol@f1^0,f,c
  3797   003326  3606               	rlcf	(___fltol@f1+1)^0,f,c
  3798   003328  3607               	rlcf	(___fltol@f1+2)^0,f,c
  3799   00332A  3608               	rlcf	(___fltol@f1+3)^0,f,c
  3800   00332C  060E               	decf	___fltol@exp1^0,f,c
  3801   00332E                     l4842:
  3802   00332E  500E               	movf	___fltol@exp1^0,w,c
  3803   003330  A4D8               	btfss	status,2,c
  3804   003332  EF9D  F019         	goto	u5411
  3805   003336  EF9F  F019         	goto	u5410
  3806   00333A                     u5411:
  3807   00333A  EF91  F019         	goto	l4840
  3808   00333E                     u5410:
  3809   00333E                     l4844:
  3810   00333E  500D               	movf	___fltol@sign1^0,w,c
  3811   003340  B4D8               	btfsc	status,2,c
  3812   003342  EFA5  F019         	goto	u5421
  3813   003346  EFA7  F019         	goto	u5420
  3814   00334A                     u5421:
  3815   00334A  EFAF  F019         	goto	l4848
  3816   00334E                     u5420:
  3817   00334E  1E08               	comf	(___fltol@f1+3)^0,f,c
  3818   003350  1E07               	comf	(___fltol@f1+2)^0,f,c
  3819   003352  1E06               	comf	(___fltol@f1+1)^0,f,c
  3820   003354  6C05               	negf	___fltol@f1^0,c
  3821   003356  0E00               	movlw	0
  3822   003358  2206               	addwfc	(___fltol@f1+1)^0,f,c
  3823   00335A  2207               	addwfc	(___fltol@f1+2)^0,f,c
  3824   00335C  2208               	addwfc	(___fltol@f1+3)^0,f,c
  3825   00335E                     l4848:
  3826   00335E  C005  F005         	movff	___fltol@f1,?___fltol
  3827   003362  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  3828   003366  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  3829   00336A  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  3830   00336E                     l588:
  3831   00336E  0012               	return		;funcret
  3832   003370                     __end_of___fltol:
  3833                           	callstack 0
  3834                           
  3835 ;; *************** function ___flsub *****************
  3836 ;; Defined at:
  3837 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3838 ;; Parameters:    Size  Location     Type
  3839 ;;  b               4   29[COMRAM] long 
  3840 ;;  a               4   33[COMRAM] long 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  4   29[COMRAM] long 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0, cstack
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3852 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;Total ram usage:        8 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 3
  3859 ;; This function calls:
  3860 ;;		___fladd
  3861 ;; This function is called by:
  3862 ;;		_efgtoa
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text11
  3867   003B22                     __ptext11:
  3868                           	callstack 0
  3869   003B22                     ___flsub:
  3870                           	callstack 23
  3871   003B22  0E00               	movlw	0
  3872   003B24  1A22               	xorwf	___flsub@a^0,f,c
  3873   003B26  0E00               	movlw	0
  3874   003B28  1A23               	xorwf	(___flsub@a+1)^0,f,c
  3875   003B2A  0E00               	movlw	0
  3876   003B2C  1A24               	xorwf	(___flsub@a+2)^0,f,c
  3877   003B2E  0E80               	movlw	128
  3878   003B30  1A25               	xorwf	(___flsub@a+3)^0,f,c
  3879   003B32  C01E  F005         	movff	___flsub@b,___fladd@b
  3880   003B36  C01F  F006         	movff	___flsub@b+1,___fladd@b+1
  3881   003B3A  C020  F007         	movff	___flsub@b+2,___fladd@b+2
  3882   003B3E  C021  F008         	movff	___flsub@b+3,___fladd@b+3
  3883   003B42  C022  F009         	movff	___flsub@a,___fladd@a
  3884   003B46  C023  F00A         	movff	___flsub@a+1,___fladd@a+1
  3885   003B4A  C024  F00B         	movff	___flsub@a+2,___fladd@a+2
  3886   003B4E  C025  F00C         	movff	___flsub@a+3,___fladd@a+3
  3887   003B52  EC13  F00C         	call	___fladd	;wreg free
  3888   003B56  C005  F01E         	movff	?___fladd,?___flsub
  3889   003B5A  C006  F01F         	movff	?___fladd+1,?___flsub+1
  3890   003B5E  C007  F020         	movff	?___fladd+2,?___flsub+2
  3891   003B62  C008  F021         	movff	?___fladd+3,?___flsub+3
  3892   003B66  0012               	return		;funcret
  3893   003B68                     __end_of___flsub:
  3894                           	callstack 0
  3895                           
  3896 ;; *************** function ___fladd *****************
  3897 ;; Defined at:
  3898 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  b               4    4[COMRAM] long 
  3901 ;;  a               4    8[COMRAM] long 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  grs             1   19[COMRAM] unsigned char 
  3904 ;;  bexp            1   18[COMRAM] unsigned char 
  3905 ;;  aexp            1   17[COMRAM] unsigned char 
  3906 ;;  signs           1   16[COMRAM] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  4    4[COMRAM] unsigned char 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:       16 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 2
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		___flsub
  3927 ;;		_efgtoa
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           
  3931                           	psect	text12
  3932   001826                     __ptext12:
  3933                           	callstack 0
  3934   001826                     ___fladd:
  3935                           	callstack 23
  3936   001826  5008               	movf	(___fladd@b+3)^0,w,c
  3937   001828  0B80               	andlw	128
  3938   00182A  6E11               	movwf	___fladd@signs^0,c
  3939   00182C  5008               	movf	(___fladd@b+3)^0,w,c
  3940   00182E  2408               	addwf	(___fladd@b+3)^0,w,c
  3941   001830  6E13               	movwf	___fladd@bexp^0,c
  3942   001832  AE07               	btfss	(___fladd@b+2)^0,7,c
  3943   001834  EF1E  F00C         	goto	u4321
  3944   001838  EF20  F00C         	goto	u4320
  3945   00183C                     u4321:
  3946   00183C  EF21  F00C         	goto	l4204
  3947   001840                     u4320:
  3948   001840  8013               	bsf	___fladd@bexp^0,0,c
  3949   001842                     l4204:
  3950   001842  5013               	movf	___fladd@bexp^0,w,c
  3951   001844  B4D8               	btfsc	status,2,c
  3952   001846  EF27  F00C         	goto	u4331
  3953   00184A  EF29  F00C         	goto	u4330
  3954   00184E                     u4331:
  3955   00184E  EF3E  F00C         	goto	l4214
  3956   001852                     u4330:
  3957   001852  2813               	incf	___fladd@bexp^0,w,c
  3958   001854  A4D8               	btfss	status,2,c
  3959   001856  EF2F  F00C         	goto	u4341
  3960   00185A  EF31  F00C         	goto	u4340
  3961   00185E                     u4341:
  3962   00185E  EF39  F00C         	goto	l4210
  3963   001862                     u4340:
  3964   001862  0E00               	movlw	0
  3965   001864  6E05               	movwf	___fladd@b^0,c
  3966   001866  0E00               	movlw	0
  3967   001868  6E06               	movwf	(___fladd@b+1)^0,c
  3968   00186A  0E00               	movlw	0
  3969   00186C  6E07               	movwf	(___fladd@b+2)^0,c
  3970   00186E  0E00               	movlw	0
  3971   001870  6E08               	movwf	(___fladd@b+3)^0,c
  3972   001872                     l4210:
  3973   001872  8E07               	bsf	(___fladd@b+2)^0,7,c
  3974   001874  0E00               	movlw	0
  3975   001876  6E08               	movwf	(___fladd@b+3)^0,c
  3976   001878  EF46  F00C         	goto	l4216
  3977   00187C                     l4214:
  3978   00187C  0E00               	movlw	0
  3979   00187E  6E05               	movwf	___fladd@b^0,c
  3980   001880  0E00               	movlw	0
  3981   001882  6E06               	movwf	(___fladd@b+1)^0,c
  3982   001884  0E00               	movlw	0
  3983   001886  6E07               	movwf	(___fladd@b+2)^0,c
  3984   001888  0E00               	movlw	0
  3985   00188A  6E08               	movwf	(___fladd@b+3)^0,c
  3986   00188C                     l4216:
  3987   00188C  500C               	movf	(___fladd@a+3)^0,w,c
  3988   00188E  0B80               	andlw	128
  3989   001890  6E12               	movwf	___fladd@aexp^0,c
  3990   001892  5011               	movf	___fladd@signs^0,w,c
  3991   001894  1812               	xorwf	___fladd@aexp^0,w,c
  3992   001896  B4D8               	btfsc	status,2,c
  3993   001898  EF50  F00C         	goto	u4351
  3994   00189C  EF52  F00C         	goto	u4350
  3995   0018A0                     u4351:
  3996   0018A0  EF53  F00C         	goto	l4222
  3997   0018A4                     u4350:
  3998   0018A4  8C11               	bsf	___fladd@signs^0,6,c
  3999   0018A6                     l4222:
  4000   0018A6  500C               	movf	(___fladd@a+3)^0,w,c
  4001   0018A8  240C               	addwf	(___fladd@a+3)^0,w,c
  4002   0018AA  6E12               	movwf	___fladd@aexp^0,c
  4003   0018AC  AE0B               	btfss	(___fladd@a+2)^0,7,c
  4004   0018AE  EF5B  F00C         	goto	u4361
  4005   0018B2  EF5D  F00C         	goto	u4360
  4006   0018B6                     u4361:
  4007   0018B6  EF5E  F00C         	goto	l4228
  4008   0018BA                     u4360:
  4009   0018BA  8012               	bsf	___fladd@aexp^0,0,c
  4010   0018BC                     l4228:
  4011   0018BC  5012               	movf	___fladd@aexp^0,w,c
  4012   0018BE  B4D8               	btfsc	status,2,c
  4013   0018C0  EF64  F00C         	goto	u4371
  4014   0018C4  EF66  F00C         	goto	u4370
  4015   0018C8                     u4371:
  4016   0018C8  EF7B  F00C         	goto	l4238
  4017   0018CC                     u4370:
  4018   0018CC  2812               	incf	___fladd@aexp^0,w,c
  4019   0018CE  A4D8               	btfss	status,2,c
  4020   0018D0  EF6C  F00C         	goto	u4381
  4021   0018D4  EF6E  F00C         	goto	u4380
  4022   0018D8                     u4381:
  4023   0018D8  EF76  F00C         	goto	l4234
  4024   0018DC                     u4380:
  4025   0018DC  0E00               	movlw	0
  4026   0018DE  6E09               	movwf	___fladd@a^0,c
  4027   0018E0  0E00               	movlw	0
  4028   0018E2  6E0A               	movwf	(___fladd@a+1)^0,c
  4029   0018E4  0E00               	movlw	0
  4030   0018E6  6E0B               	movwf	(___fladd@a+2)^0,c
  4031   0018E8  0E00               	movlw	0
  4032   0018EA  6E0C               	movwf	(___fladd@a+3)^0,c
  4033   0018EC                     l4234:
  4034   0018EC  8E0B               	bsf	(___fladd@a+2)^0,7,c
  4035   0018EE  0E00               	movlw	0
  4036   0018F0  6E0C               	movwf	(___fladd@a+3)^0,c
  4037   0018F2  EF83  F00C         	goto	l4240
  4038   0018F6                     l4238:
  4039   0018F6  0E00               	movlw	0
  4040   0018F8  6E09               	movwf	___fladd@a^0,c
  4041   0018FA  0E00               	movlw	0
  4042   0018FC  6E0A               	movwf	(___fladd@a+1)^0,c
  4043   0018FE  0E00               	movlw	0
  4044   001900  6E0B               	movwf	(___fladd@a+2)^0,c
  4045   001902  0E00               	movlw	0
  4046   001904  6E0C               	movwf	(___fladd@a+3)^0,c
  4047   001906                     l4240:
  4048   001906  5013               	movf	___fladd@bexp^0,w,c
  4049   001908  5C12               	subwf	___fladd@aexp^0,w,c
  4050   00190A  B0D8               	btfsc	status,0,c
  4051   00190C  EF8A  F00C         	goto	u4391
  4052   001910  EF8C  F00C         	goto	u4390
  4053   001914                     u4391:
  4054   001914  EFB3  F00C         	goto	l4276
  4055   001918                     u4390:
  4056   001918  AC11               	btfss	___fladd@signs^0,6,c
  4057   00191A  EF91  F00C         	goto	u4401
  4058   00191E  EF93  F00C         	goto	u4400
  4059   001922                     u4401:
  4060   001922  EF95  F00C         	goto	l4246
  4061   001926                     u4400:
  4062   001926  0E80               	movlw	128
  4063   001928  1A11               	xorwf	___fladd@signs^0,f,c
  4064   00192A                     l4246:
  4065   00192A  C013  F014         	movff	___fladd@bexp,___fladd@grs
  4066   00192E  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4067   001932  C014  F012         	movff	___fladd@grs,___fladd@aexp
  4068   001936  C005  F014         	movff	___fladd@b,___fladd@grs
  4069   00193A  C009  F005         	movff	___fladd@a,___fladd@b
  4070   00193E  C014  F009         	movff	___fladd@grs,___fladd@a
  4071   001942  C006  F014         	movff	___fladd@b+1,___fladd@grs
  4072   001946  C00A  F006         	movff	___fladd@a+1,___fladd@b+1
  4073   00194A  C014  F00A         	movff	___fladd@grs,___fladd@a+1
  4074   00194E  C007  F014         	movff	___fladd@b+2,___fladd@grs
  4075   001952  C00B  F007         	movff	___fladd@a+2,___fladd@b+2
  4076   001956  C014  F00B         	movff	___fladd@grs,___fladd@a+2
  4077   00195A  C008  F014         	movff	___fladd@b+3,___fladd@grs
  4078   00195E  C00C  F008         	movff	___fladd@a+3,___fladd@b+3
  4079   001962  C014  F00C         	movff	___fladd@grs,___fladd@a+3
  4080   001966                     l4276:
  4081   001966  0E00               	movlw	0
  4082   001968  6E14               	movwf	___fladd@grs^0,c
  4083   00196A  5013               	movf	___fladd@bexp^0,w,c
  4084   00196C  C012  F00D         	movff	___fladd@aexp,??___fladd
  4085   001970  6A0E               	clrf	(??___fladd+1)^0,c
  4086   001972  5E0D               	subwf	??___fladd^0,f,c
  4087   001974  0E00               	movlw	0
  4088   001976  5A0E               	subwfb	(??___fladd+1)^0,f,c
  4089   001978  BE0E               	btfsc	(??___fladd+1)^0,7,c
  4090   00197A  EFC8  F00C         	goto	u4411
  4091   00197E  500E               	movf	(??___fladd+1)^0,w,c
  4092   001980  E109               	bnz	u4410
  4093   001982  0E1A               	movlw	26
  4094   001984  5C0D               	subwf	??___fladd^0,w,c
  4095   001986  A0D8               	btfss	status,0,c
  4096   001988  EFC8  F00C         	goto	u4411
  4097   00198C  EFCA  F00C         	goto	u4410
  4098   001990                     u4411:
  4099   001990  EF01  F00D         	goto	l820
  4100   001994                     u4410:
  4101   001994  5005               	movf	___fladd@b^0,w,c
  4102   001996  1006               	iorwf	(___fladd@b+1)^0,w,c
  4103   001998  1007               	iorwf	(___fladd@b+2)^0,w,c
  4104   00199A  1008               	iorwf	(___fladd@b+3)^0,w,c
  4105   00199C  A4D8               	btfss	status,2,c
  4106   00199E  EFD3  F00C         	goto	u4421
  4107   0019A2  EFD6  F00C         	goto	u4420
  4108   0019A6                     u4421:
  4109   0019A6  0E01               	movlw	1
  4110   0019A8  EFD7  F00C         	goto	u4430
  4111   0019AC                     u4420:
  4112   0019AC  0E00               	movlw	0
  4113   0019AE                     u4430:
  4114   0019AE  6E14               	movwf	___fladd@grs^0,c
  4115   0019B0  0E00               	movlw	0
  4116   0019B2  6E05               	movwf	___fladd@b^0,c
  4117   0019B4  0E00               	movlw	0
  4118   0019B6  6E06               	movwf	(___fladd@b+1)^0,c
  4119   0019B8  0E00               	movlw	0
  4120   0019BA  6E07               	movwf	(___fladd@b+2)^0,c
  4121   0019BC  0E00               	movlw	0
  4122   0019BE  6E08               	movwf	(___fladd@b+3)^0,c
  4123   0019C0  C012  F013         	movff	___fladd@aexp,___fladd@bexp
  4124   0019C4  EF0A  F00D         	goto	l819
  4125   0019C8                     l821:
  4126   0019C8  A014               	btfss	___fladd@grs^0,0,c
  4127   0019CA  EFE9  F00C         	goto	u4441
  4128   0019CE  EFEB  F00C         	goto	u4440
  4129   0019D2                     u4441:
  4130   0019D2  EFF1  F00C         	goto	l4288
  4131   0019D6                     u4440:
  4132   0019D6  90D8               	bcf	status,0,c
  4133   0019D8  3014               	rrcf	___fladd@grs^0,w,c
  4134   0019DA  0901               	iorlw	1
  4135   0019DC  6E14               	movwf	___fladd@grs^0,c
  4136   0019DE  EFF3  F00C         	goto	l4290
  4137   0019E2                     l4288:
  4138   0019E2  90D8               	bcf	status,0,c
  4139   0019E4  3214               	rrcf	___fladd@grs^0,f,c
  4140   0019E6                     l4290:
  4141   0019E6  A005               	btfss	___fladd@b^0,0,c
  4142   0019E8  EFF8  F00C         	goto	u4451
  4143   0019EC  EFFA  F00C         	goto	u4450
  4144   0019F0                     u4451:
  4145   0019F0  EFFB  F00C         	goto	l4294
  4146   0019F4                     u4450:
  4147   0019F4  8E14               	bsf	___fladd@grs^0,7,c
  4148   0019F6                     l4294:
  4149   0019F6  3408               	rlcf	(___fladd@b+3)^0,w,c
  4150   0019F8  3208               	rrcf	(___fladd@b+3)^0,f,c
  4151   0019FA  3207               	rrcf	(___fladd@b+2)^0,f,c
  4152   0019FC  3206               	rrcf	(___fladd@b+1)^0,f,c
  4153   0019FE  3205               	rrcf	___fladd@b^0,f,c
  4154   001A00  2A13               	incf	___fladd@bexp^0,f,c
  4155   001A02                     l820:
  4156   001A02  5012               	movf	___fladd@aexp^0,w,c
  4157   001A04  5C13               	subwf	___fladd@bexp^0,w,c
  4158   001A06  A0D8               	btfss	status,0,c
  4159   001A08  EF08  F00D         	goto	u4461
  4160   001A0C  EF0A  F00D         	goto	u4460
  4161   001A10                     u4461:
  4162   001A10  EFE4  F00C         	goto	l821
  4163   001A14                     u4460:
  4164   001A14                     l819:
  4165   001A14  BC11               	btfsc	___fladd@signs^0,6,c
  4166   001A16  EF0F  F00D         	goto	u4471
  4167   001A1A  EF11  F00D         	goto	u4470
  4168   001A1E                     u4471:
  4169   001A1E  EF51  F00D         	goto	l4322
  4170   001A22                     u4470:
  4171   001A22  5013               	movf	___fladd@bexp^0,w,c
  4172   001A24  A4D8               	btfss	status,2,c
  4173   001A26  EF17  F00D         	goto	u4481
  4174   001A2A  EF19  F00D         	goto	u4480
  4175   001A2E                     u4481:
  4176   001A2E  EF23  F00D         	goto	l4304
  4177   001A32                     u4480:
  4178   001A32  0E00               	movlw	0
  4179   001A34  6E05               	movwf	?___fladd^0,c
  4180   001A36  0E00               	movlw	0
  4181   001A38  6E06               	movwf	(?___fladd+1)^0,c
  4182   001A3A  0E00               	movlw	0
  4183   001A3C  6E07               	movwf	(?___fladd+2)^0,c
  4184   001A3E  0E00               	movlw	0
  4185   001A40  6E08               	movwf	(?___fladd+3)^0,c
  4186   001A42  EF72  F00E         	goto	l828
  4187   001A46                     l4304:
  4188   001A46  5009               	movf	___fladd@a^0,w,c
  4189   001A48  2605               	addwf	___fladd@b^0,f,c
  4190   001A4A  500A               	movf	(___fladd@a+1)^0,w,c
  4191   001A4C  2206               	addwfc	(___fladd@b+1)^0,f,c
  4192   001A4E  500B               	movf	(___fladd@a+2)^0,w,c
  4193   001A50  2207               	addwfc	(___fladd@b+2)^0,f,c
  4194   001A52  500C               	movf	(___fladd@a+3)^0,w,c
  4195   001A54  2208               	addwfc	(___fladd@b+3)^0,f,c
  4196   001A56  A008               	btfss	(___fladd@b+3)^0,0,c
  4197   001A58  EF30  F00D         	goto	u4491
  4198   001A5C  EF32  F00D         	goto	u4490
  4199   001A60                     u4491:
  4200   001A60  EFDE  F00D         	goto	l4358
  4201   001A64                     u4490:
  4202   001A64  A014               	btfss	___fladd@grs^0,0,c
  4203   001A66  EF37  F00D         	goto	u4501
  4204   001A6A  EF39  F00D         	goto	u4500
  4205   001A6E                     u4501:
  4206   001A6E  EF3F  F00D         	goto	l4312
  4207   001A72                     u4500:
  4208   001A72  90D8               	bcf	status,0,c
  4209   001A74  3014               	rrcf	___fladd@grs^0,w,c
  4210   001A76  0901               	iorlw	1
  4211   001A78  6E14               	movwf	___fladd@grs^0,c
  4212   001A7A  EF41  F00D         	goto	l4314
  4213   001A7E                     l4312:
  4214   001A7E  90D8               	bcf	status,0,c
  4215   001A80  3214               	rrcf	___fladd@grs^0,f,c
  4216   001A82                     l4314:
  4217   001A82  A005               	btfss	___fladd@b^0,0,c
  4218   001A84  EF46  F00D         	goto	u4511
  4219   001A88  EF48  F00D         	goto	u4510
  4220   001A8C                     u4511:
  4221   001A8C  EF49  F00D         	goto	l4318
  4222   001A90                     u4510:
  4223   001A90  8E14               	bsf	___fladd@grs^0,7,c
  4224   001A92                     l4318:
  4225   001A92  3408               	rlcf	(___fladd@b+3)^0,w,c
  4226   001A94  3208               	rrcf	(___fladd@b+3)^0,f,c
  4227   001A96  3207               	rrcf	(___fladd@b+2)^0,f,c
  4228   001A98  3206               	rrcf	(___fladd@b+1)^0,f,c
  4229   001A9A  3205               	rrcf	___fladd@b^0,f,c
  4230   001A9C  2A13               	incf	___fladd@bexp^0,f,c
  4231   001A9E  EFDE  F00D         	goto	l4358
  4232   001AA2                     l4322:
  4233   001AA2  5009               	movf	___fladd@a^0,w,c
  4234   001AA4  5C05               	subwf	___fladd@b^0,w,c
  4235   001AA6  500A               	movf	(___fladd@a+1)^0,w,c
  4236   001AA8  5806               	subwfb	(___fladd@b+1)^0,w,c
  4237   001AAA  500B               	movf	(___fladd@a+2)^0,w,c
  4238   001AAC  5807               	subwfb	(___fladd@b+2)^0,w,c
  4239   001AAE  5008               	movf	(___fladd@b+3)^0,w,c
  4240   001AB0  0A80               	xorlw	128
  4241   001AB2  6E0D               	movwf	??___fladd^0,c
  4242   001AB4  500C               	movf	(___fladd@a+3)^0,w,c
  4243   001AB6  0A80               	xorlw	128
  4244   001AB8  580D               	subwfb	??___fladd^0,w,c
  4245   001ABA  B0D8               	btfsc	status,0,c
  4246   001ABC  EF62  F00D         	goto	u4521
  4247   001AC0  EF64  F00D         	goto	u4520
  4248   001AC4                     u4521:
  4249   001AC4  EF8F  F00D         	goto	l4332
  4250   001AC8                     u4520:
  4251   001AC8  5005               	movf	___fladd@b^0,w,c
  4252   001ACA  5C09               	subwf	___fladd@a^0,w,c
  4253   001ACC  6E0D               	movwf	??___fladd^0,c
  4254   001ACE  5006               	movf	(___fladd@b+1)^0,w,c
  4255   001AD0  580A               	subwfb	(___fladd@a+1)^0,w,c
  4256   001AD2  6E0E               	movwf	(??___fladd+1)^0,c
  4257   001AD4  5007               	movf	(___fladd@b+2)^0,w,c
  4258   001AD6  580B               	subwfb	(___fladd@a+2)^0,w,c
  4259   001AD8  6E0F               	movwf	(??___fladd+2)^0,c
  4260   001ADA  5008               	movf	(___fladd@b+3)^0,w,c
  4261   001ADC  580C               	subwfb	(___fladd@a+3)^0,w,c
  4262   001ADE  6E10               	movwf	(??___fladd+3)^0,c
  4263   001AE0  0EFF               	movlw	255
  4264   001AE2  240D               	addwf	??___fladd^0,w,c
  4265   001AE4  6E05               	movwf	___fladd@b^0,c
  4266   001AE6  0EFF               	movlw	255
  4267   001AE8  200E               	addwfc	(??___fladd+1)^0,w,c
  4268   001AEA  6E06               	movwf	(___fladd@b+1)^0,c
  4269   001AEC  0EFF               	movlw	255
  4270   001AEE  200F               	addwfc	(??___fladd+2)^0,w,c
  4271   001AF0  6E07               	movwf	(___fladd@b+2)^0,c
  4272   001AF2  0EFF               	movlw	255
  4273   001AF4  2010               	addwfc	(??___fladd+3)^0,w,c
  4274   001AF6  6E08               	movwf	(___fladd@b+3)^0,c
  4275   001AF8  0E80               	movlw	128
  4276   001AFA  1A11               	xorwf	___fladd@signs^0,f,c
  4277   001AFC  6C14               	negf	___fladd@grs^0,c
  4278   001AFE  5014               	movf	___fladd@grs^0,w,c
  4279   001B00  A4D8               	btfss	status,2,c
  4280   001B02  EF85  F00D         	goto	u4531
  4281   001B06  EF87  F00D         	goto	u4530
  4282   001B0A                     u4531:
  4283   001B0A  EF97  F00D         	goto	l836
  4284   001B0E                     u4530:
  4285   001B0E  0E01               	movlw	1
  4286   001B10  2605               	addwf	___fladd@b^0,f,c
  4287   001B12  0E00               	movlw	0
  4288   001B14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4289   001B16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4290   001B18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4291   001B1A  EF97  F00D         	goto	l836
  4292   001B1E                     l4332:
  4293   001B1E  5009               	movf	___fladd@a^0,w,c
  4294   001B20  5E05               	subwf	___fladd@b^0,f,c
  4295   001B22  500A               	movf	(___fladd@a+1)^0,w,c
  4296   001B24  5A06               	subwfb	(___fladd@b+1)^0,f,c
  4297   001B26  500B               	movf	(___fladd@a+2)^0,w,c
  4298   001B28  5A07               	subwfb	(___fladd@b+2)^0,f,c
  4299   001B2A  500C               	movf	(___fladd@a+3)^0,w,c
  4300   001B2C  5A08               	subwfb	(___fladd@b+3)^0,f,c
  4301   001B2E                     l836:
  4302   001B2E  5005               	movf	___fladd@b^0,w,c
  4303   001B30  1006               	iorwf	(___fladd@b+1)^0,w,c
  4304   001B32  1007               	iorwf	(___fladd@b+2)^0,w,c
  4305   001B34  1008               	iorwf	(___fladd@b+3)^0,w,c
  4306   001B36  A4D8               	btfss	status,2,c
  4307   001B38  EFA0  F00D         	goto	u4541
  4308   001B3C  EFA2  F00D         	goto	u4540
  4309   001B40                     u4541:
  4310   001B40  EFD7  F00D         	goto	l4356
  4311   001B44                     u4540:
  4312   001B44  5014               	movf	___fladd@grs^0,w,c
  4313   001B46  A4D8               	btfss	status,2,c
  4314   001B48  EFA8  F00D         	goto	u4551
  4315   001B4C  EFAA  F00D         	goto	u4550
  4316   001B50                     u4551:
  4317   001B50  EFD7  F00D         	goto	l4356
  4318   001B54                     u4550:
  4319   001B54  0E00               	movlw	0
  4320   001B56  6E05               	movwf	?___fladd^0,c
  4321   001B58  0E00               	movlw	0
  4322   001B5A  6E06               	movwf	(?___fladd+1)^0,c
  4323   001B5C  0E00               	movlw	0
  4324   001B5E  6E07               	movwf	(?___fladd+2)^0,c
  4325   001B60  0E00               	movlw	0
  4326   001B62  6E08               	movwf	(?___fladd+3)^0,c
  4327   001B64  EF72  F00E         	goto	l828
  4328   001B68                     l4340:
  4329   001B68  90D8               	bcf	status,0,c
  4330   001B6A  3605               	rlcf	___fladd@b^0,f,c
  4331   001B6C  3606               	rlcf	(___fladd@b+1)^0,f,c
  4332   001B6E  3607               	rlcf	(___fladd@b+2)^0,f,c
  4333   001B70  3608               	rlcf	(___fladd@b+3)^0,f,c
  4334   001B72  AE14               	btfss	___fladd@grs^0,7,c
  4335   001B74  EFBE  F00D         	goto	u4561
  4336   001B78  EFC0  F00D         	goto	u4560
  4337   001B7C                     u4561:
  4338   001B7C  EFC1  F00D         	goto	l4346
  4339   001B80                     u4560:
  4340   001B80  8005               	bsf	___fladd@b^0,0,c
  4341   001B82                     l4346:
  4342   001B82  A014               	btfss	___fladd@grs^0,0,c
  4343   001B84  EFC6  F00D         	goto	u4571
  4344   001B88  EFC8  F00D         	goto	u4570
  4345   001B8C                     u4571:
  4346   001B8C  EFCC  F00D         	goto	l4350
  4347   001B90                     u4570:
  4348   001B90  80D8               	bsf	status,0,c
  4349   001B92  3614               	rlcf	___fladd@grs^0,f,c
  4350   001B94  EFCE  F00D         	goto	l4352
  4351   001B98                     l4350:
  4352   001B98  90D8               	bcf	status,0,c
  4353   001B9A  3614               	rlcf	___fladd@grs^0,f,c
  4354   001B9C                     l4352:
  4355   001B9C  5013               	movf	___fladd@bexp^0,w,c
  4356   001B9E  B4D8               	btfsc	status,2,c
  4357   001BA0  EFD4  F00D         	goto	u4581
  4358   001BA4  EFD6  F00D         	goto	u4580
  4359   001BA8                     u4581:
  4360   001BA8  EFD7  F00D         	goto	l4356
  4361   001BAC                     u4580:
  4362   001BAC  0613               	decf	___fladd@bexp^0,f,c
  4363   001BAE                     l4356:
  4364   001BAE  AE07               	btfss	(___fladd@b+2)^0,7,c
  4365   001BB0  EFDC  F00D         	goto	u4591
  4366   001BB4  EFDE  F00D         	goto	u4590
  4367   001BB8                     u4591:
  4368   001BB8  EFB4  F00D         	goto	l4340
  4369   001BBC                     u4590:
  4370   001BBC                     l4358:
  4371   001BBC  0E00               	movlw	0
  4372   001BBE  6E12               	movwf	___fladd@aexp^0,c
  4373   001BC0  AE14               	btfss	___fladd@grs^0,7,c
  4374   001BC2  EFE5  F00D         	goto	u4601
  4375   001BC6  EFE7  F00D         	goto	u4600
  4376   001BCA                     u4601:
  4377   001BCA  EFFF  F00D         	goto	l845
  4378   001BCE                     u4600:
  4379   001BCE  C014  F00D         	movff	___fladd@grs,??___fladd
  4380   001BD2  0E7F               	movlw	127
  4381   001BD4  160D               	andwf	??___fladd^0,f,c
  4382   001BD6  B4D8               	btfsc	status,2,c
  4383   001BD8  EFF0  F00D         	goto	u4611
  4384   001BDC  EFF2  F00D         	goto	u4610
  4385   001BE0                     u4611:
  4386   001BE0  EFF6  F00D         	goto	l846
  4387   001BE4                     u4610:
  4388   001BE4                     l4364:
  4389   001BE4  0E01               	movlw	1
  4390   001BE6  6E12               	movwf	___fladd@aexp^0,c
  4391   001BE8  EFFF  F00D         	goto	l845
  4392   001BEC                     l846:
  4393   001BEC  A005               	btfss	___fladd@b^0,0,c
  4394   001BEE  EFFB  F00D         	goto	u4621
  4395   001BF2  EFFD  F00D         	goto	u4620
  4396   001BF6                     u4621:
  4397   001BF6  EFFF  F00D         	goto	l845
  4398   001BFA                     u4620:
  4399   001BFA  EFF2  F00D         	goto	l4364
  4400   001BFE                     l845:
  4401   001BFE  5012               	movf	___fladd@aexp^0,w,c
  4402   001C00  B4D8               	btfsc	status,2,c
  4403   001C02  EF05  F00E         	goto	u4631
  4404   001C06  EF07  F00E         	goto	u4630
  4405   001C0A                     u4631:
  4406   001C0A  EF32  F00E         	goto	l4376
  4407   001C0E                     u4630:
  4408   001C0E  0E01               	movlw	1
  4409   001C10  2605               	addwf	___fladd@b^0,f,c
  4410   001C12  0E00               	movlw	0
  4411   001C14  2206               	addwfc	(___fladd@b+1)^0,f,c
  4412   001C16  2207               	addwfc	(___fladd@b+2)^0,f,c
  4413   001C18  2208               	addwfc	(___fladd@b+3)^0,f,c
  4414   001C1A  A008               	btfss	(___fladd@b+3)^0,0,c
  4415   001C1C  EF12  F00E         	goto	u4641
  4416   001C20  EF14  F00E         	goto	u4640
  4417   001C24                     u4641:
  4418   001C24  EF32  F00E         	goto	l4376
  4419   001C28                     u4640:
  4420   001C28  C005  F00D         	movff	___fladd@b,??___fladd
  4421   001C2C  C006  F00E         	movff	___fladd@b+1,??___fladd+1
  4422   001C30  C007  F00F         	movff	___fladd@b+2,??___fladd+2
  4423   001C34  C008  F010         	movff	___fladd@b+3,??___fladd+3
  4424   001C38  3410               	rlcf	(??___fladd+3)^0,w,c
  4425   001C3A  3210               	rrcf	(??___fladd+3)^0,f,c
  4426   001C3C  320F               	rrcf	(??___fladd+2)^0,f,c
  4427   001C3E  320E               	rrcf	(??___fladd+1)^0,f,c
  4428   001C40  320D               	rrcf	??___fladd^0,f,c
  4429   001C42  C00D  F005         	movff	??___fladd,___fladd@b
  4430   001C46  C00E  F006         	movff	??___fladd+1,___fladd@b+1
  4431   001C4A  C00F  F007         	movff	??___fladd+2,___fladd@b+2
  4432   001C4E  C010  F008         	movff	??___fladd+3,___fladd@b+3
  4433   001C52  2813               	incf	___fladd@bexp^0,w,c
  4434   001C54  B4D8               	btfsc	status,2,c
  4435   001C56  EF2F  F00E         	goto	u4651
  4436   001C5A  EF31  F00E         	goto	u4650
  4437   001C5E                     u4651:
  4438   001C5E  EF32  F00E         	goto	l4376
  4439   001C62                     u4650:
  4440   001C62  2A13               	incf	___fladd@bexp^0,f,c
  4441   001C64                     l4376:
  4442   001C64  2813               	incf	___fladd@bexp^0,w,c
  4443   001C66  B4D8               	btfsc	status,2,c
  4444   001C68  EF38  F00E         	goto	u4661
  4445   001C6C  EF3A  F00E         	goto	u4660
  4446   001C70                     u4661:
  4447   001C70  EF42  F00E         	goto	l4380
  4448   001C74                     u4660:
  4449   001C74  5013               	movf	___fladd@bexp^0,w,c
  4450   001C76  A4D8               	btfss	status,2,c
  4451   001C78  EF40  F00E         	goto	u4671
  4452   001C7C  EF42  F00E         	goto	u4670
  4453   001C80                     u4671:
  4454   001C80  EF54  F00E         	goto	l4384
  4455   001C84                     u4670:
  4456   001C84                     l4380:
  4457   001C84  0E00               	movlw	0
  4458   001C86  6E05               	movwf	___fladd@b^0,c
  4459   001C88  0E00               	movlw	0
  4460   001C8A  6E06               	movwf	(___fladd@b+1)^0,c
  4461   001C8C  0E00               	movlw	0
  4462   001C8E  6E07               	movwf	(___fladd@b+2)^0,c
  4463   001C90  0E00               	movlw	0
  4464   001C92  6E08               	movwf	(___fladd@b+3)^0,c
  4465   001C94  5013               	movf	___fladd@bexp^0,w,c
  4466   001C96  A4D8               	btfss	status,2,c
  4467   001C98  EF50  F00E         	goto	u4681
  4468   001C9C  EF52  F00E         	goto	u4680
  4469   001CA0                     u4681:
  4470   001CA0  EF54  F00E         	goto	l4384
  4471   001CA4                     u4680:
  4472   001CA4  0E00               	movlw	0
  4473   001CA6  6E11               	movwf	___fladd@signs^0,c
  4474   001CA8                     l4384:
  4475   001CA8  A013               	btfss	___fladd@bexp^0,0,c
  4476   001CAA  EF59  F00E         	goto	u4691
  4477   001CAE  EF5B  F00E         	goto	u4690
  4478   001CB2                     u4691:
  4479   001CB2  EF5E  F00E         	goto	l4388
  4480   001CB6                     u4690:
  4481   001CB6  8E07               	bsf	(___fladd@b+2)^0,7,c
  4482   001CB8  EF5F  F00E         	goto	l4390
  4483   001CBC                     l4388:
  4484   001CBC  9E07               	bcf	(___fladd@b+2)^0,7,c
  4485   001CBE                     l4390:
  4486   001CBE  90D8               	bcf	status,0,c
  4487   001CC0  3013               	rrcf	___fladd@bexp^0,w,c
  4488   001CC2  6E08               	movwf	(___fladd@b+3)^0,c
  4489   001CC4  AE11               	btfss	___fladd@signs^0,7,c
  4490   001CC6  EF67  F00E         	goto	u4701
  4491   001CCA  EF69  F00E         	goto	u4700
  4492   001CCE                     u4701:
  4493   001CCE  EF6A  F00E         	goto	l4396
  4494   001CD2                     u4700:
  4495   001CD2  8E08               	bsf	(___fladd@b+3)^0,7,c
  4496   001CD4                     l4396:
  4497   001CD4  C005  F005         	movff	___fladd@b,?___fladd
  4498   001CD8  C006  F006         	movff	___fladd@b+1,?___fladd+1
  4499   001CDC  C007  F007         	movff	___fladd@b+2,?___fladd+2
  4500   001CE0  C008  F008         	movff	___fladd@b+3,?___fladd+3
  4501   001CE4                     l828:
  4502   001CE4  0012               	return		;funcret
  4503   001CE6                     __end_of___fladd:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function ___flneg *****************
  4507 ;; Defined at:
  4508 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flneg.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  f1              4    4[COMRAM] unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;		None
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  4    4[COMRAM] unsigned char 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4522 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;Total ram usage:        4 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_efgtoa
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text13
  4537   003CF0                     __ptext13:
  4538                           	callstack 0
  4539   003CF0                     ___flneg:
  4540                           	callstack 24
  4541   003CF0  5005               	movf	___flneg@f1^0,w,c
  4542   003CF2  1006               	iorwf	(___flneg@f1+1)^0,w,c
  4543   003CF4  1007               	iorwf	(___flneg@f1+2)^0,w,c
  4544   003CF6  1008               	iorwf	(___flneg@f1+3)^0,w,c
  4545   003CF8  B4D8               	btfsc	status,2,c
  4546   003CFA  EF81  F01E         	goto	u5351
  4547   003CFE  EF83  F01E         	goto	u5350
  4548   003D02                     u5351:
  4549   003D02  EF8B  F01E         	goto	l4804
  4550   003D06                     u5350:
  4551   003D06  0E00               	movlw	0
  4552   003D08  1A05               	xorwf	___flneg@f1^0,f,c
  4553   003D0A  0E00               	movlw	0
  4554   003D0C  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  4555   003D0E  0E00               	movlw	0
  4556   003D10  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  4557   003D12  0E80               	movlw	128
  4558   003D14  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  4559   003D16                     l4804:
  4560   003D16  C005  F005         	movff	___flneg@f1,?___flneg
  4561   003D1A  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  4562   003D1E  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  4563   003D22  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  4564   003D26  0012               	return		;funcret
  4565   003D28                     __end_of___flneg:
  4566                           	callstack 0
  4567                           
  4568 ;; *************** function ___flmul *****************
  4569 ;; Defined at:
  4570 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;  b               4    4[COMRAM] unsigned char 
  4573 ;;  a               4    8[COMRAM] unsigned char 
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  prod            4   23[COMRAM] struct .
  4576 ;;  grs             4   18[COMRAM] unsigned long 
  4577 ;;  temp            2   27[COMRAM] struct .
  4578 ;;  bexp            1   22[COMRAM] unsigned char 
  4579 ;;  aexp            1   17[COMRAM] unsigned char 
  4580 ;;  sign            1   16[COMRAM] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  4    4[COMRAM] unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2, status,0, prodl, prodh
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4590 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4591 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;Total ram usage:       25 bytes
  4595 ;; Hardware stack levels used: 1
  4596 ;; Hardware stack levels required when called: 2
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_efgtoa
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text14
  4605   001CE6                     __ptext14:
  4606                           	callstack 0
  4607   001CE6                     ___flmul:
  4608                           	callstack 24
  4609   001CE6  5008               	movf	(___flmul@b+3)^0,w,c
  4610   001CE8  0B80               	andlw	128
  4611   001CEA  6E11               	movwf	___flmul@sign^0,c
  4612   001CEC  5008               	movf	(___flmul@b+3)^0,w,c
  4613   001CEE  2408               	addwf	(___flmul@b+3)^0,w,c
  4614   001CF0  6E17               	movwf	___flmul@bexp^0,c
  4615   001CF2  AE07               	btfss	(___flmul@b+2)^0,7,c
  4616   001CF4  EF7E  F00E         	goto	u5081
  4617   001CF8  EF80  F00E         	goto	u5080
  4618   001CFC                     u5081:
  4619   001CFC  EF81  F00E         	goto	l4632
  4620   001D00                     u5080:
  4621   001D00  8017               	bsf	___flmul@bexp^0,0,c
  4622   001D02                     l4632:
  4623   001D02  5017               	movf	___flmul@bexp^0,w,c
  4624   001D04  B4D8               	btfsc	status,2,c
  4625   001D06  EF87  F00E         	goto	u5091
  4626   001D0A  EF89  F00E         	goto	u5090
  4627   001D0E                     u5091:
  4628   001D0E  EF9C  F00E         	goto	l4640
  4629   001D12                     u5090:
  4630   001D12  2817               	incf	___flmul@bexp^0,w,c
  4631   001D14  A4D8               	btfss	status,2,c
  4632   001D16  EF8F  F00E         	goto	u5101
  4633   001D1A  EF91  F00E         	goto	u5100
  4634   001D1E                     u5101:
  4635   001D1E  EF99  F00E         	goto	l4638
  4636   001D22                     u5100:
  4637   001D22  0E00               	movlw	0
  4638   001D24  6E05               	movwf	___flmul@b^0,c
  4639   001D26  0E00               	movlw	0
  4640   001D28  6E06               	movwf	(___flmul@b+1)^0,c
  4641   001D2A  0E00               	movlw	0
  4642   001D2C  6E07               	movwf	(___flmul@b+2)^0,c
  4643   001D2E  0E00               	movlw	0
  4644   001D30  6E08               	movwf	(___flmul@b+3)^0,c
  4645   001D32                     l4638:
  4646   001D32  8E07               	bsf	(___flmul@b+2)^0,7,c
  4647   001D34  EFA4  F00E         	goto	l4642
  4648   001D38                     l4640:
  4649   001D38  0E00               	movlw	0
  4650   001D3A  6E05               	movwf	___flmul@b^0,c
  4651   001D3C  0E00               	movlw	0
  4652   001D3E  6E06               	movwf	(___flmul@b+1)^0,c
  4653   001D40  0E00               	movlw	0
  4654   001D42  6E07               	movwf	(___flmul@b+2)^0,c
  4655   001D44  0E00               	movlw	0
  4656   001D46  6E08               	movwf	(___flmul@b+3)^0,c
  4657   001D48                     l4642:
  4658   001D48  500C               	movf	(___flmul@a+3)^0,w,c
  4659   001D4A  0B80               	andlw	128
  4660   001D4C  1A11               	xorwf	___flmul@sign^0,f,c
  4661   001D4E  500C               	movf	(___flmul@a+3)^0,w,c
  4662   001D50  240C               	addwf	(___flmul@a+3)^0,w,c
  4663   001D52  6E12               	movwf	___flmul@aexp^0,c
  4664   001D54  AE0B               	btfss	(___flmul@a+2)^0,7,c
  4665   001D56  EFAF  F00E         	goto	u5111
  4666   001D5A  EFB1  F00E         	goto	u5110
  4667   001D5E                     u5111:
  4668   001D5E  EFB2  F00E         	goto	l4650
  4669   001D62                     u5110:
  4670   001D62  8012               	bsf	___flmul@aexp^0,0,c
  4671   001D64                     l4650:
  4672   001D64  5012               	movf	___flmul@aexp^0,w,c
  4673   001D66  B4D8               	btfsc	status,2,c
  4674   001D68  EFB8  F00E         	goto	u5121
  4675   001D6C  EFBA  F00E         	goto	u5120
  4676   001D70                     u5121:
  4677   001D70  EFCD  F00E         	goto	l4658
  4678   001D74                     u5120:
  4679   001D74  2812               	incf	___flmul@aexp^0,w,c
  4680   001D76  A4D8               	btfss	status,2,c
  4681   001D78  EFC0  F00E         	goto	u5131
  4682   001D7C  EFC2  F00E         	goto	u5130
  4683   001D80                     u5131:
  4684   001D80  EFCA  F00E         	goto	l4656
  4685   001D84                     u5130:
  4686   001D84  0E00               	movlw	0
  4687   001D86  6E09               	movwf	___flmul@a^0,c
  4688   001D88  0E00               	movlw	0
  4689   001D8A  6E0A               	movwf	(___flmul@a+1)^0,c
  4690   001D8C  0E00               	movlw	0
  4691   001D8E  6E0B               	movwf	(___flmul@a+2)^0,c
  4692   001D90  0E00               	movlw	0
  4693   001D92  6E0C               	movwf	(___flmul@a+3)^0,c
  4694   001D94                     l4656:
  4695   001D94  8E0B               	bsf	(___flmul@a+2)^0,7,c
  4696   001D96  EFD5  F00E         	goto	l905
  4697   001D9A                     l4658:
  4698   001D9A  0E00               	movlw	0
  4699   001D9C  6E09               	movwf	___flmul@a^0,c
  4700   001D9E  0E00               	movlw	0
  4701   001DA0  6E0A               	movwf	(___flmul@a+1)^0,c
  4702   001DA2  0E00               	movlw	0
  4703   001DA4  6E0B               	movwf	(___flmul@a+2)^0,c
  4704   001DA6  0E00               	movlw	0
  4705   001DA8  6E0C               	movwf	(___flmul@a+3)^0,c
  4706   001DAA                     l905:
  4707   001DAA  5012               	movf	___flmul@aexp^0,w,c
  4708   001DAC  B4D8               	btfsc	status,2,c
  4709   001DAE  EFDB  F00E         	goto	u5141
  4710   001DB2  EFDD  F00E         	goto	u5140
  4711   001DB6                     u5141:
  4712   001DB6  EFE5  F00E         	goto	l4662
  4713   001DBA                     u5140:
  4714   001DBA  5017               	movf	___flmul@bexp^0,w,c
  4715   001DBC  A4D8               	btfss	status,2,c
  4716   001DBE  EFE3  F00E         	goto	u5151
  4717   001DC2  EFE5  F00E         	goto	u5150
  4718   001DC6                     u5151:
  4719   001DC6  EFEF  F00E         	goto	l4666
  4720   001DCA                     u5150:
  4721   001DCA                     l4662:
  4722   001DCA  0E00               	movlw	0
  4723   001DCC  6E05               	movwf	?___flmul^0,c
  4724   001DCE  0E00               	movlw	0
  4725   001DD0  6E06               	movwf	(?___flmul+1)^0,c
  4726   001DD2  0E00               	movlw	0
  4727   001DD4  6E07               	movwf	(?___flmul+2)^0,c
  4728   001DD6  0E00               	movlw	0
  4729   001DD8  6E08               	movwf	(?___flmul+3)^0,c
  4730   001DDA  EF87  F010         	goto	l909
  4731   001DDE                     l4666:
  4732   001DDE  500B               	movf	(___flmul@a+2)^0,w,c
  4733   001DE0  0205               	mulwf	___flmul@b^0,c
  4734   001DE2  CFF3 F01C          	movff	prodl,___flmul@temp
  4735   001DE6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4736   001DEA  501C               	movf	___flmul@temp^0,w,c
  4737   001DEC  6E13               	movwf	___flmul@grs^0,c
  4738   001DEE  6A14               	clrf	(___flmul@grs+1)^0,c
  4739   001DF0  6A15               	clrf	(___flmul@grs+2)^0,c
  4740   001DF2  6A16               	clrf	(___flmul@grs+3)^0,c
  4741   001DF4  501D               	movf	(___flmul@temp+1)^0,w,c
  4742   001DF6  6E18               	movwf	___flmul@prod^0,c
  4743   001DF8  6A19               	clrf	(___flmul@prod+1)^0,c
  4744   001DFA  6A1A               	clrf	(___flmul@prod+2)^0,c
  4745   001DFC  6A1B               	clrf	(___flmul@prod+3)^0,c
  4746   001DFE  500A               	movf	(___flmul@a+1)^0,w,c
  4747   001E00  0206               	mulwf	(___flmul@b+1)^0,c
  4748   001E02  CFF3 F01C          	movff	prodl,___flmul@temp
  4749   001E06  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4750   001E0A  501C               	movf	___flmul@temp^0,w,c
  4751   001E0C  2613               	addwf	___flmul@grs^0,f,c
  4752   001E0E  0E00               	movlw	0
  4753   001E10  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4754   001E12  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4755   001E14  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4756   001E16  501D               	movf	(___flmul@temp+1)^0,w,c
  4757   001E18  2618               	addwf	___flmul@prod^0,f,c
  4758   001E1A  0E00               	movlw	0
  4759   001E1C  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4760   001E1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4761   001E20  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4762   001E22  5009               	movf	___flmul@a^0,w,c
  4763   001E24  0207               	mulwf	(___flmul@b+2)^0,c
  4764   001E26  CFF3 F01C          	movff	prodl,___flmul@temp
  4765   001E2A  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4766   001E2E  501C               	movf	___flmul@temp^0,w,c
  4767   001E30  2613               	addwf	___flmul@grs^0,f,c
  4768   001E32  0E00               	movlw	0
  4769   001E34  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4770   001E36  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4771   001E38  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4772   001E3A  501D               	movf	(___flmul@temp+1)^0,w,c
  4773   001E3C  2618               	addwf	___flmul@prod^0,f,c
  4774   001E3E  0E00               	movlw	0
  4775   001E40  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4776   001E42  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4777   001E44  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4778   001E46  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4779   001E4A  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4780   001E4E  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4781   001E52  6A13               	clrf	___flmul@grs^0,c
  4782   001E54  5009               	movf	___flmul@a^0,w,c
  4783   001E56  0206               	mulwf	(___flmul@b+1)^0,c
  4784   001E58  CFF3 F01C          	movff	prodl,___flmul@temp
  4785   001E5C  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4786   001E60  501C               	movf	___flmul@temp^0,w,c
  4787   001E62  2613               	addwf	___flmul@grs^0,f,c
  4788   001E64  501D               	movf	(___flmul@temp+1)^0,w,c
  4789   001E66  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4790   001E68  0E00               	movlw	0
  4791   001E6A  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4792   001E6C  0E00               	movlw	0
  4793   001E6E  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4794   001E70  500A               	movf	(___flmul@a+1)^0,w,c
  4795   001E72  0205               	mulwf	___flmul@b^0,c
  4796   001E74  CFF3 F01C          	movff	prodl,___flmul@temp
  4797   001E78  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4798   001E7C  501C               	movf	___flmul@temp^0,w,c
  4799   001E7E  2613               	addwf	___flmul@grs^0,f,c
  4800   001E80  501D               	movf	(___flmul@temp+1)^0,w,c
  4801   001E82  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4802   001E84  0E00               	movlw	0
  4803   001E86  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4804   001E88  0E00               	movlw	0
  4805   001E8A  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4806   001E8C  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4807   001E90  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4808   001E94  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4809   001E98  6A13               	clrf	___flmul@grs^0,c
  4810   001E9A  5009               	movf	___flmul@a^0,w,c
  4811   001E9C  0205               	mulwf	___flmul@b^0,c
  4812   001E9E  CFF3 F01C          	movff	prodl,___flmul@temp
  4813   001EA2  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4814   001EA6  501C               	movf	___flmul@temp^0,w,c
  4815   001EA8  2613               	addwf	___flmul@grs^0,f,c
  4816   001EAA  501D               	movf	(___flmul@temp+1)^0,w,c
  4817   001EAC  2214               	addwfc	(___flmul@grs+1)^0,f,c
  4818   001EAE  0E00               	movlw	0
  4819   001EB0  2215               	addwfc	(___flmul@grs+2)^0,f,c
  4820   001EB2  0E00               	movlw	0
  4821   001EB4  2216               	addwfc	(___flmul@grs+3)^0,f,c
  4822   001EB6  500B               	movf	(___flmul@a+2)^0,w,c
  4823   001EB8  0206               	mulwf	(___flmul@b+1)^0,c
  4824   001EBA  CFF3 F01C          	movff	prodl,___flmul@temp
  4825   001EBE  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4826   001EC2  501C               	movf	___flmul@temp^0,w,c
  4827   001EC4  2618               	addwf	___flmul@prod^0,f,c
  4828   001EC6  501D               	movf	(___flmul@temp+1)^0,w,c
  4829   001EC8  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4830   001ECA  0E00               	movlw	0
  4831   001ECC  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4832   001ECE  0E00               	movlw	0
  4833   001ED0  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4834   001ED2  500A               	movf	(___flmul@a+1)^0,w,c
  4835   001ED4  0207               	mulwf	(___flmul@b+2)^0,c
  4836   001ED6  CFF3 F01C          	movff	prodl,___flmul@temp
  4837   001EDA  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4838   001EDE  501C               	movf	___flmul@temp^0,w,c
  4839   001EE0  2618               	addwf	___flmul@prod^0,f,c
  4840   001EE2  501D               	movf	(___flmul@temp+1)^0,w,c
  4841   001EE4  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4842   001EE6  0E00               	movlw	0
  4843   001EE8  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4844   001EEA  0E00               	movlw	0
  4845   001EEC  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4846   001EEE  500B               	movf	(___flmul@a+2)^0,w,c
  4847   001EF0  0207               	mulwf	(___flmul@b+2)^0,c
  4848   001EF2  CFF3 F01C          	movff	prodl,___flmul@temp
  4849   001EF6  CFF4 F01D          	movff	prodh,___flmul@temp+1
  4850   001EFA  501C               	movf	___flmul@temp^0,w,c
  4851   001EFC  6E0D               	movwf	??___flmul^0,c
  4852   001EFE  501D               	movf	(___flmul@temp+1)^0,w,c
  4853   001F00  6E0E               	movwf	(??___flmul+1)^0,c
  4854   001F02  6A0F               	clrf	(??___flmul+2)^0,c
  4855   001F04  6A10               	clrf	(??___flmul+3)^0,c
  4856   001F06  C00F  F010         	movff	??___flmul+2,??___flmul+3
  4857   001F0A  C00E  F00F         	movff	??___flmul+1,??___flmul+2
  4858   001F0E  C00D  F00E         	movff	??___flmul,??___flmul+1
  4859   001F12  6A0D               	clrf	??___flmul^0,c
  4860   001F14  500D               	movf	??___flmul^0,w,c
  4861   001F16  2618               	addwf	___flmul@prod^0,f,c
  4862   001F18  500E               	movf	(??___flmul+1)^0,w,c
  4863   001F1A  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4864   001F1C  500F               	movf	(??___flmul+2)^0,w,c
  4865   001F1E  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4866   001F20  5010               	movf	(??___flmul+3)^0,w,c
  4867   001F22  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4868   001F24  C013  F00D         	movff	___flmul@grs,??___flmul
  4869   001F28  C014  F00E         	movff	___flmul@grs+1,??___flmul+1
  4870   001F2C  C015  F00F         	movff	___flmul@grs+2,??___flmul+2
  4871   001F30  C016  F010         	movff	___flmul@grs+3,??___flmul+3
  4872   001F34  0E19               	movlw	25
  4873   001F36  EFA2  F00F         	goto	u5160
  4874   001F3A                     u5165:
  4875   001F3A  90D8               	bcf	status,0,c
  4876   001F3C  3210               	rrcf	(??___flmul+3)^0,f,c
  4877   001F3E  320F               	rrcf	(??___flmul+2)^0,f,c
  4878   001F40  320E               	rrcf	(??___flmul+1)^0,f,c
  4879   001F42  320D               	rrcf	??___flmul^0,f,c
  4880   001F44                     u5160:
  4881   001F44  2EE8               	decfsz	wreg,f,c
  4882   001F46  EF9D  F00F         	goto	u5165
  4883   001F4A  500D               	movf	??___flmul^0,w,c
  4884   001F4C  2618               	addwf	___flmul@prod^0,f,c
  4885   001F4E  500E               	movf	(??___flmul+1)^0,w,c
  4886   001F50  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4887   001F52  500F               	movf	(??___flmul+2)^0,w,c
  4888   001F54  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4889   001F56  5010               	movf	(??___flmul+3)^0,w,c
  4890   001F58  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4891   001F5A  C015  F016         	movff	___flmul@grs+2,___flmul@grs+3
  4892   001F5E  C014  F015         	movff	___flmul@grs+1,___flmul@grs+2
  4893   001F62  C013  F014         	movff	___flmul@grs,___flmul@grs+1
  4894   001F66  6A13               	clrf	___flmul@grs^0,c
  4895   001F68  5012               	movf	___flmul@aexp^0,w,c
  4896   001F6A  C017  F00D         	movff	___flmul@bexp,??___flmul
  4897   001F6E  6A0E               	clrf	(??___flmul+1)^0,c
  4898   001F70  260D               	addwf	??___flmul^0,f,c
  4899   001F72  0E00               	movlw	0
  4900   001F74  220E               	addwfc	(??___flmul+1)^0,f,c
  4901   001F76  0E82               	movlw	130
  4902   001F78  240D               	addwf	??___flmul^0,w,c
  4903   001F7A  6E1C               	movwf	___flmul@temp^0,c
  4904   001F7C  0EFF               	movlw	255
  4905   001F7E  200E               	addwfc	(??___flmul+1)^0,w,c
  4906   001F80  6E1D               	movwf	(___flmul@temp+1)^0,c
  4907   001F82  EFD8  F00F         	goto	l4714
  4908   001F86                     l4708:
  4909   001F86  90D8               	bcf	status,0,c
  4910   001F88  3618               	rlcf	___flmul@prod^0,f,c
  4911   001F8A  3619               	rlcf	(___flmul@prod+1)^0,f,c
  4912   001F8C  361A               	rlcf	(___flmul@prod+2)^0,f,c
  4913   001F8E  361B               	rlcf	(___flmul@prod+3)^0,f,c
  4914   001F90  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4915   001F92  EFCD  F00F         	goto	u5171
  4916   001F96  EFCF  F00F         	goto	u5170
  4917   001F9A                     u5171:
  4918   001F9A  EFD0  F00F         	goto	l912
  4919   001F9E                     u5170:
  4920   001F9E  8018               	bsf	___flmul@prod^0,0,c
  4921   001FA0                     l912:
  4922   001FA0  90D8               	bcf	status,0,c
  4923   001FA2  3613               	rlcf	___flmul@grs^0,f,c
  4924   001FA4  3614               	rlcf	(___flmul@grs+1)^0,f,c
  4925   001FA6  3615               	rlcf	(___flmul@grs+2)^0,f,c
  4926   001FA8  3616               	rlcf	(___flmul@grs+3)^0,f,c
  4927   001FAA  061C               	decf	___flmul@temp^0,f,c
  4928   001FAC  A0D8               	btfss	status,0,c
  4929   001FAE  061D               	decf	(___flmul@temp+1)^0,f,c
  4930   001FB0                     l4714:
  4931   001FB0  AE1A               	btfss	(___flmul@prod+2)^0,7,c
  4932   001FB2  EFDD  F00F         	goto	u5181
  4933   001FB6  EFDF  F00F         	goto	u5180
  4934   001FBA                     u5181:
  4935   001FBA  EFC3  F00F         	goto	l4708
  4936   001FBE                     u5180:
  4937   001FBE  0E00               	movlw	0
  4938   001FC0  6E12               	movwf	___flmul@aexp^0,c
  4939   001FC2  AE16               	btfss	(___flmul@grs+3)^0,7,c
  4940   001FC4  EFE6  F00F         	goto	u5191
  4941   001FC8  EFE8  F00F         	goto	u5190
  4942   001FCC                     u5191:
  4943   001FCC  EF0C  F010         	goto	l914
  4944   001FD0                     u5190:
  4945   001FD0  0EFF               	movlw	255
  4946   001FD2  1413               	andwf	___flmul@grs^0,w,c
  4947   001FD4  6E0D               	movwf	??___flmul^0,c
  4948   001FD6  0EFF               	movlw	255
  4949   001FD8  1414               	andwf	(___flmul@grs+1)^0,w,c
  4950   001FDA  6E0E               	movwf	(??___flmul+1)^0,c
  4951   001FDC  0EFF               	movlw	255
  4952   001FDE  1415               	andwf	(___flmul@grs+2)^0,w,c
  4953   001FE0  6E0F               	movwf	(??___flmul+2)^0,c
  4954   001FE2  0E7F               	movlw	127
  4955   001FE4  1416               	andwf	(___flmul@grs+3)^0,w,c
  4956   001FE6  6E10               	movwf	(??___flmul+3)^0,c
  4957   001FE8  500D               	movf	??___flmul^0,w,c
  4958   001FEA  100E               	iorwf	(??___flmul+1)^0,w,c
  4959   001FEC  100F               	iorwf	(??___flmul+2)^0,w,c
  4960   001FEE  1010               	iorwf	(??___flmul+3)^0,w,c
  4961   001FF0  B4D8               	btfsc	status,2,c
  4962   001FF2  EFFD  F00F         	goto	u5201
  4963   001FF6  EFFF  F00F         	goto	u5200
  4964   001FFA                     u5201:
  4965   001FFA  EF03  F010         	goto	l915
  4966   001FFE                     u5200:
  4967   001FFE                     l4722:
  4968   001FFE  0E01               	movlw	1
  4969   002000  6E12               	movwf	___flmul@aexp^0,c
  4970   002002  EF0C  F010         	goto	l914
  4971   002006                     l915:
  4972   002006  A018               	btfss	___flmul@prod^0,0,c
  4973   002008  EF08  F010         	goto	u5211
  4974   00200C  EF0A  F010         	goto	u5210
  4975   002010                     u5211:
  4976   002010  EF0C  F010         	goto	l914
  4977   002014                     u5210:
  4978   002014  EFFF  F00F         	goto	l4722
  4979   002018                     l914:
  4980   002018  5012               	movf	___flmul@aexp^0,w,c
  4981   00201A  B4D8               	btfsc	status,2,c
  4982   00201C  EF12  F010         	goto	u5221
  4983   002020  EF14  F010         	goto	u5220
  4984   002024                     u5221:
  4985   002024  EF38  F010         	goto	l4734
  4986   002028                     u5220:
  4987   002028  0E01               	movlw	1
  4988   00202A  2618               	addwf	___flmul@prod^0,f,c
  4989   00202C  0E00               	movlw	0
  4990   00202E  2219               	addwfc	(___flmul@prod+1)^0,f,c
  4991   002030  221A               	addwfc	(___flmul@prod+2)^0,f,c
  4992   002032  221B               	addwfc	(___flmul@prod+3)^0,f,c
  4993   002034  A01B               	btfss	(___flmul@prod+3)^0,0,c
  4994   002036  EF1F  F010         	goto	u5231
  4995   00203A  EF21  F010         	goto	u5230
  4996   00203E                     u5231:
  4997   00203E  EF38  F010         	goto	l4734
  4998   002042                     u5230:
  4999   002042  C018  F00D         	movff	___flmul@prod,??___flmul
  5000   002046  C019  F00E         	movff	___flmul@prod+1,??___flmul+1
  5001   00204A  C01A  F00F         	movff	___flmul@prod+2,??___flmul+2
  5002   00204E  C01B  F010         	movff	___flmul@prod+3,??___flmul+3
  5003   002052  3410               	rlcf	(??___flmul+3)^0,w,c
  5004   002054  3210               	rrcf	(??___flmul+3)^0,f,c
  5005   002056  320F               	rrcf	(??___flmul+2)^0,f,c
  5006   002058  320E               	rrcf	(??___flmul+1)^0,f,c
  5007   00205A  320D               	rrcf	??___flmul^0,f,c
  5008   00205C  C00D  F018         	movff	??___flmul,___flmul@prod
  5009   002060  C00E  F019         	movff	??___flmul+1,___flmul@prod+1
  5010   002064  C00F  F01A         	movff	??___flmul+2,___flmul@prod+2
  5011   002068  C010  F01B         	movff	??___flmul+3,___flmul@prod+3
  5012   00206C  4A1C               	infsnz	___flmul@temp^0,f,c
  5013   00206E  2A1D               	incf	(___flmul@temp+1)^0,f,c
  5014   002070                     l4734:
  5015   002070  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5016   002072  EF43  F010         	goto	u5241
  5017   002076  501D               	movf	(___flmul@temp+1)^0,w,c
  5018   002078  E108               	bnz	u5240
  5019   00207A  281C               	incf	___flmul@temp^0,w,c
  5020   00207C  A0D8               	btfss	status,0,c
  5021   00207E  EF43  F010         	goto	u5241
  5022   002082  EF45  F010         	goto	u5240
  5023   002086                     u5241:
  5024   002086  EF4F  F010         	goto	l4738
  5025   00208A                     u5240:
  5026   00208A  0E00               	movlw	0
  5027   00208C  6E18               	movwf	___flmul@prod^0,c
  5028   00208E  0E00               	movlw	0
  5029   002090  6E19               	movwf	(___flmul@prod+1)^0,c
  5030   002092  0E80               	movlw	128
  5031   002094  6E1A               	movwf	(___flmul@prod+2)^0,c
  5032   002096  0E7F               	movlw	127
  5033   002098  6E1B               	movwf	(___flmul@prod+3)^0,c
  5034   00209A  EF7D  F010         	goto	l4750
  5035   00209E                     l4738:
  5036   00209E  BE1D               	btfsc	(___flmul@temp+1)^0,7,c
  5037   0020A0  EF5C  F010         	goto	u5250
  5038   0020A4  501D               	movf	(___flmul@temp+1)^0,w,c
  5039   0020A6  E106               	bnz	u5251
  5040   0020A8  041C               	decf	___flmul@temp^0,w,c
  5041   0020AA  B0D8               	btfsc	status,0,c
  5042   0020AC  EF5A  F010         	goto	u5251
  5043   0020B0  EF5C  F010         	goto	u5250
  5044   0020B4                     u5251:
  5045   0020B4  EF68  F010         	goto	l922
  5046   0020B8                     u5250:
  5047   0020B8  0E00               	movlw	0
  5048   0020BA  6E18               	movwf	___flmul@prod^0,c
  5049   0020BC  0E00               	movlw	0
  5050   0020BE  6E19               	movwf	(___flmul@prod+1)^0,c
  5051   0020C0  0E00               	movlw	0
  5052   0020C2  6E1A               	movwf	(___flmul@prod+2)^0,c
  5053   0020C4  0E00               	movlw	0
  5054   0020C6  6E1B               	movwf	(___flmul@prod+3)^0,c
  5055   0020C8  0E00               	movlw	0
  5056   0020CA  6E11               	movwf	___flmul@sign^0,c
  5057   0020CC  EF7D  F010         	goto	l4750
  5058   0020D0                     l922:
  5059   0020D0  C01C  F017         	movff	___flmul@temp,___flmul@bexp
  5060   0020D4  0EFF               	movlw	255
  5061   0020D6  1618               	andwf	___flmul@prod^0,f,c
  5062   0020D8  0EFF               	movlw	255
  5063   0020DA  1619               	andwf	(___flmul@prod+1)^0,f,c
  5064   0020DC  0E7F               	movlw	127
  5065   0020DE  161A               	andwf	(___flmul@prod+2)^0,f,c
  5066   0020E0  0E00               	movlw	0
  5067   0020E2  161B               	andwf	(___flmul@prod+3)^0,f,c
  5068   0020E4  A017               	btfss	___flmul@bexp^0,0,c
  5069   0020E6  EF77  F010         	goto	u5261
  5070   0020EA  EF79  F010         	goto	u5260
  5071   0020EE                     u5261:
  5072   0020EE  EF7A  F010         	goto	l4748
  5073   0020F2                     u5260:
  5074   0020F2  8E1A               	bsf	(___flmul@prod+2)^0,7,c
  5075   0020F4                     l4748:
  5076   0020F4  90D8               	bcf	status,0,c
  5077   0020F6  3017               	rrcf	___flmul@bexp^0,w,c
  5078   0020F8  6E1B               	movwf	(___flmul@prod+3)^0,c
  5079   0020FA                     l4750:
  5080   0020FA  5011               	movf	___flmul@sign^0,w,c
  5081   0020FC  121B               	iorwf	(___flmul@prod+3)^0,f,c
  5082   0020FE  C018  F005         	movff	___flmul@prod,?___flmul
  5083   002102  C019  F006         	movff	___flmul@prod+1,?___flmul+1
  5084   002106  C01A  F007         	movff	___flmul@prod+2,?___flmul+2
  5085   00210A  C01B  F008         	movff	___flmul@prod+3,?___flmul+3
  5086   00210E                     l909:
  5087   00210E  0012               	return		;funcret
  5088   002110                     __end_of___flmul:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function ___flge *****************
  5092 ;; Defined at:
  5093 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  ff1             4   29[COMRAM] unsigned char 
  5096 ;;  ff2             4   33[COMRAM] unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;		None
  5099 ;; Return value:  Size  Location     Type
  5100 ;;		None               void
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5108 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;Total ram usage:       12 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; Hardware stack levels required when called: 2
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_efgtoa
  5119 ;;		_Colour_decider
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           	psect	text15
  5124   003370                     __ptext15:
  5125                           	callstack 0
  5126   003370                     ___flge:
  5127                           	callstack 24
  5128   003370  0E00               	movlw	0
  5129   003372  141E               	andwf	___flge@ff1^0,w,c
  5130   003374  6E26               	movwf	??___flge^0,c
  5131   003376  0E00               	movlw	0
  5132   003378  141F               	andwf	(___flge@ff1+1)^0,w,c
  5133   00337A  6E27               	movwf	(??___flge+1)^0,c
  5134   00337C  0E80               	movlw	128
  5135   00337E  1420               	andwf	(___flge@ff1+2)^0,w,c
  5136   003380  6E28               	movwf	(??___flge+2)^0,c
  5137   003382  0E7F               	movlw	127
  5138   003384  1421               	andwf	(___flge@ff1+3)^0,w,c
  5139   003386  6E29               	movwf	(??___flge+3)^0,c
  5140   003388  5026               	movf	??___flge^0,w,c
  5141   00338A  1027               	iorwf	(??___flge+1)^0,w,c
  5142   00338C  1028               	iorwf	(??___flge+2)^0,w,c
  5143   00338E  1029               	iorwf	(??___flge+3)^0,w,c
  5144   003390  A4D8               	btfss	status,2,c
  5145   003392  EFCD  F019         	goto	u5301
  5146   003396  EFCF  F019         	goto	u5300
  5147   00339A                     u5301:
  5148   00339A  EFD7  F019         	goto	l4782
  5149   00339E                     u5300:
  5150   00339E  0E00               	movlw	0
  5151   0033A0  6E1E               	movwf	___flge@ff1^0,c
  5152   0033A2  0E00               	movlw	0
  5153   0033A4  6E1F               	movwf	(___flge@ff1+1)^0,c
  5154   0033A6  0E00               	movlw	0
  5155   0033A8  6E20               	movwf	(___flge@ff1+2)^0,c
  5156   0033AA  0E00               	movlw	0
  5157   0033AC  6E21               	movwf	(___flge@ff1+3)^0,c
  5158   0033AE                     l4782:
  5159   0033AE  0E00               	movlw	0
  5160   0033B0  1422               	andwf	___flge@ff2^0,w,c
  5161   0033B2  6E26               	movwf	??___flge^0,c
  5162   0033B4  0E00               	movlw	0
  5163   0033B6  1423               	andwf	(___flge@ff2+1)^0,w,c
  5164   0033B8  6E27               	movwf	(??___flge+1)^0,c
  5165   0033BA  0E80               	movlw	128
  5166   0033BC  1424               	andwf	(___flge@ff2+2)^0,w,c
  5167   0033BE  6E28               	movwf	(??___flge+2)^0,c
  5168   0033C0  0E7F               	movlw	127
  5169   0033C2  1425               	andwf	(___flge@ff2+3)^0,w,c
  5170   0033C4  6E29               	movwf	(??___flge+3)^0,c
  5171   0033C6  5026               	movf	??___flge^0,w,c
  5172   0033C8  1027               	iorwf	(??___flge+1)^0,w,c
  5173   0033CA  1028               	iorwf	(??___flge+2)^0,w,c
  5174   0033CC  1029               	iorwf	(??___flge+3)^0,w,c
  5175   0033CE  A4D8               	btfss	status,2,c
  5176   0033D0  EFEC  F019         	goto	u5311
  5177   0033D4  EFEE  F019         	goto	u5310
  5178   0033D8                     u5311:
  5179   0033D8  EFF6  F019         	goto	l4786
  5180   0033DC                     u5310:
  5181   0033DC  0E00               	movlw	0
  5182   0033DE  6E22               	movwf	___flge@ff2^0,c
  5183   0033E0  0E00               	movlw	0
  5184   0033E2  6E23               	movwf	(___flge@ff2+1)^0,c
  5185   0033E4  0E00               	movlw	0
  5186   0033E6  6E24               	movwf	(___flge@ff2+2)^0,c
  5187   0033E8  0E00               	movlw	0
  5188   0033EA  6E25               	movwf	(___flge@ff2+3)^0,c
  5189   0033EC                     l4786:
  5190   0033EC  AE21               	btfss	(___flge@ff1+3)^0,7,c
  5191   0033EE  EFFB  F019         	goto	u5321
  5192   0033F2  EFFD  F019         	goto	u5320
  5193   0033F6                     u5321:
  5194   0033F6  EF06  F01A         	goto	l4790
  5195   0033FA                     u5320:
  5196   0033FA  6C1E               	negf	___flge@ff1^0,c
  5197   0033FC  1E1F               	comf	(___flge@ff1+1)^0,f,c
  5198   0033FE  B0D8               	btfsc	status,0,c
  5199   003400  2A1F               	incf	(___flge@ff1+1)^0,f,c
  5200   003402  1E20               	comf	(___flge@ff1+2)^0,f,c
  5201   003404  B0D8               	btfsc	status,0,c
  5202   003406  2A20               	incf	(___flge@ff1+2)^0,f,c
  5203   003408  0E80               	movlw	128
  5204   00340A  5621               	subfwb	(___flge@ff1+3)^0,f,c
  5205   00340C                     l4790:
  5206   00340C  AE25               	btfss	(___flge@ff2+3)^0,7,c
  5207   00340E  EF0B  F01A         	goto	u5331
  5208   003412  EF0D  F01A         	goto	u5330
  5209   003416                     u5331:
  5210   003416  EF16  F01A         	goto	l556
  5211   00341A                     u5330:
  5212   00341A  6C22               	negf	___flge@ff2^0,c
  5213   00341C  1E23               	comf	(___flge@ff2+1)^0,f,c
  5214   00341E  B0D8               	btfsc	status,0,c
  5215   003420  2A23               	incf	(___flge@ff2+1)^0,f,c
  5216   003422  1E24               	comf	(___flge@ff2+2)^0,f,c
  5217   003424  B0D8               	btfsc	status,0,c
  5218   003426  2A24               	incf	(___flge@ff2+2)^0,f,c
  5219   003428  0E80               	movlw	128
  5220   00342A  5625               	subfwb	(___flge@ff2+3)^0,f,c
  5221   00342C                     l556:
  5222   00342C  0E00               	movlw	0
  5223   00342E  1A1E               	xorwf	___flge@ff1^0,f,c
  5224   003430  0E00               	movlw	0
  5225   003432  1A1F               	xorwf	(___flge@ff1+1)^0,f,c
  5226   003434  0E00               	movlw	0
  5227   003436  1A20               	xorwf	(___flge@ff1+2)^0,f,c
  5228   003438  0E80               	movlw	128
  5229   00343A  1A21               	xorwf	(___flge@ff1+3)^0,f,c
  5230   00343C  0E00               	movlw	0
  5231   00343E  1A22               	xorwf	___flge@ff2^0,f,c
  5232   003440  0E00               	movlw	0
  5233   003442  1A23               	xorwf	(___flge@ff2+1)^0,f,c
  5234   003444  0E00               	movlw	0
  5235   003446  1A24               	xorwf	(___flge@ff2+2)^0,f,c
  5236   003448  0E80               	movlw	128
  5237   00344A  1A25               	xorwf	(___flge@ff2+3)^0,f,c
  5238   00344C  5022               	movf	___flge@ff2^0,w,c
  5239   00344E  5C1E               	subwf	___flge@ff1^0,w,c
  5240   003450  5023               	movf	(___flge@ff2+1)^0,w,c
  5241   003452  581F               	subwfb	(___flge@ff1+1)^0,w,c
  5242   003454  5024               	movf	(___flge@ff2+2)^0,w,c
  5243   003456  5820               	subwfb	(___flge@ff1+2)^0,w,c
  5244   003458  5025               	movf	(___flge@ff2+3)^0,w,c
  5245   00345A  5821               	subwfb	(___flge@ff1+3)^0,w,c
  5246   00345C  B0D8               	btfsc	status,0,c
  5247   00345E  EF33  F01A         	goto	u5341
  5248   003462  EF35  F01A         	goto	u5340
  5249   003466                     u5341:
  5250   003466  EF38  F01A         	goto	l4796
  5251   00346A                     u5340:
  5252   00346A  90D8               	bcf	status,0,c
  5253   00346C  EF39  F01A         	goto	l561
  5254   003470                     l4796:
  5255   003470  80D8               	bsf	status,0,c
  5256   003472                     l561:
  5257   003472  0012               	return		;funcret
  5258   003474                     __end_of___flge:
  5259                           	callstack 0
  5260                           
  5261 ;; *************** function ___fleq *****************
  5262 ;; Defined at:
  5263 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  ff1             4    4[COMRAM] unsigned char 
  5266 ;;  ff2             4    8[COMRAM] unsigned char 
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;		None               void
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5278 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;Total ram usage:       12 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 2
  5285 ;; This function calls:
  5286 ;;		Nothing
  5287 ;; This function is called by:
  5288 ;;		_efgtoa
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text16
  5293   003704                     __ptext16:
  5294                           	callstack 0
  5295   003704                     ___fleq:
  5296                           	callstack 24
  5297   003704  0E00               	movlw	0
  5298   003706  1405               	andwf	___fleq@ff1^0,w,c
  5299   003708  6E0D               	movwf	??___fleq^0,c
  5300   00370A  0E00               	movlw	0
  5301   00370C  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5302   00370E  6E0E               	movwf	(??___fleq+1)^0,c
  5303   003710  0E80               	movlw	128
  5304   003712  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5305   003714  6E0F               	movwf	(??___fleq+2)^0,c
  5306   003716  0E7F               	movlw	127
  5307   003718  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5308   00371A  6E10               	movwf	(??___fleq+3)^0,c
  5309   00371C  500D               	movf	??___fleq^0,w,c
  5310   00371E  100E               	iorwf	(??___fleq+1)^0,w,c
  5311   003720  100F               	iorwf	(??___fleq+2)^0,w,c
  5312   003722  1010               	iorwf	(??___fleq+3)^0,w,c
  5313   003724  A4D8               	btfss	status,2,c
  5314   003726  EF97  F01B         	goto	u5271
  5315   00372A  EF99  F01B         	goto	u5270
  5316   00372E                     u5271:
  5317   00372E  EFA1  F01B         	goto	l4766
  5318   003732                     u5270:
  5319   003732  0E00               	movlw	0
  5320   003734  6E05               	movwf	___fleq@ff1^0,c
  5321   003736  0E00               	movlw	0
  5322   003738  6E06               	movwf	(___fleq@ff1+1)^0,c
  5323   00373A  0E00               	movlw	0
  5324   00373C  6E07               	movwf	(___fleq@ff1+2)^0,c
  5325   00373E  0E00               	movlw	0
  5326   003740  6E08               	movwf	(___fleq@ff1+3)^0,c
  5327   003742                     l4766:
  5328   003742  0E00               	movlw	0
  5329   003744  1409               	andwf	___fleq@ff2^0,w,c
  5330   003746  6E0D               	movwf	??___fleq^0,c
  5331   003748  0E00               	movlw	0
  5332   00374A  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5333   00374C  6E0E               	movwf	(??___fleq+1)^0,c
  5334   00374E  0E80               	movlw	128
  5335   003750  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5336   003752  6E0F               	movwf	(??___fleq+2)^0,c
  5337   003754  0E7F               	movlw	127
  5338   003756  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5339   003758  6E10               	movwf	(??___fleq+3)^0,c
  5340   00375A  500D               	movf	??___fleq^0,w,c
  5341   00375C  100E               	iorwf	(??___fleq+1)^0,w,c
  5342   00375E  100F               	iorwf	(??___fleq+2)^0,w,c
  5343   003760  1010               	iorwf	(??___fleq+3)^0,w,c
  5344   003762  A4D8               	btfss	status,2,c
  5345   003764  EFB6  F01B         	goto	u5281
  5346   003768  EFB8  F01B         	goto	u5280
  5347   00376C                     u5281:
  5348   00376C  EFC0  F01B         	goto	l4770
  5349   003770                     u5280:
  5350   003770  0E00               	movlw	0
  5351   003772  6E09               	movwf	___fleq@ff2^0,c
  5352   003774  0E00               	movlw	0
  5353   003776  6E0A               	movwf	(___fleq@ff2+1)^0,c
  5354   003778  0E00               	movlw	0
  5355   00377A  6E0B               	movwf	(___fleq@ff2+2)^0,c
  5356   00377C  0E00               	movlw	0
  5357   00377E  6E0C               	movwf	(___fleq@ff2+3)^0,c
  5358   003780                     l4770:
  5359   003780  5009               	movf	___fleq@ff2^0,w,c
  5360   003782  1805               	xorwf	___fleq@ff1^0,w,c
  5361   003784  E10F               	bnz	u5290
  5362   003786  500A               	movf	(___fleq@ff2+1)^0,w,c
  5363   003788  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  5364   00378A  E10C               	bnz	u5290
  5365   00378C  500B               	movf	(___fleq@ff2+2)^0,w,c
  5366   00378E  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  5367   003790  E109               	bnz	u5290
  5368   003792  500C               	movf	(___fleq@ff2+3)^0,w,c
  5369   003794  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  5370   003796  B4D8               	btfsc	status,2,c
  5371   003798  EFD0  F01B         	goto	u5291
  5372   00379C  EFD2  F01B         	goto	u5290
  5373   0037A0                     u5291:
  5374   0037A0  EFD5  F01B         	goto	l4774
  5375   0037A4                     u5290:
  5376   0037A4  90D8               	bcf	status,0,c
  5377   0037A6  EFD6  F01B         	goto	l550
  5378   0037AA                     l4774:
  5379   0037AA  80D8               	bsf	status,0,c
  5380   0037AC                     l550:
  5381   0037AC  0012               	return		;funcret
  5382   0037AE                     __end_of___fleq:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function _dtoa *****************
  5386 ;; Defined at:
  5387 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;  fp              2   31[COMRAM] PTR struct _IO_FILE
  5390 ;;		 -> sprintf@f(11), 
  5391 ;;  d               8   33[COMRAM] long long 
  5392 ;; Auto vars:     Size  Location     Type
  5393 ;;  n               8   55[COMRAM] long long 
  5394 ;;  i               2   64[COMRAM] int 
  5395 ;;  w               2   53[COMRAM] int 
  5396 ;;  p               2   51[COMRAM] int 
  5397 ;;  s               1   63[COMRAM] unsigned char 
  5398 ;; Return value:  Size  Location     Type
  5399 ;;                  1    wreg      void 
  5400 ;; Registers used:
  5401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5402 ;; Tracked objects:
  5403 ;;		On entry : 0/0
  5404 ;;		On exit  : 0/0
  5405 ;;		Unchanged: 0/0
  5406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5407 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5408 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;Total ram usage:       35 bytes
  5412 ;; Hardware stack levels used: 1
  5413 ;; Hardware stack levels required when called: 6
  5414 ;; This function calls:
  5415 ;;		___aodiv
  5416 ;;		___aomod
  5417 ;;		_abs
  5418 ;;		_pad
  5419 ;; This function is called by:
  5420 ;;		_vfpfcnvrt
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text17
  5425   0027B0                     __ptext17:
  5426                           	callstack 0
  5427   0027B0                     _dtoa:
  5428                           	callstack 21
  5429   0027B0                     
  5430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
>>>>>>> Stashed changes
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
<<<<<<< Updated upstream
  1109   000E24  C022  F038         	movff	dtoa@d,dtoa@n
  1110   000E28  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  1111   000E2C  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  1112   000E30  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  1113   000E34  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  1114   000E38  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  1115   000E3C  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  1116   000E40  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  1117   000E44                     
  1118                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  1119   000E44  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1120   000E46  EF27  F007         	goto	u1251
  1121   000E4A  EF2A  F007         	goto	u1250
  1122   000E4E                     u1251:
  1123   000E4E  0E01               	movlw	1
  1124   000E50  EF2B  F007         	goto	u1260
  1125   000E54                     u1250:
  1126   000E54  0E00               	movlw	0
  1127   000E56                     u1260:
  1128   000E56  6E40               	movwf	dtoa@s^0,c
  1129   000E58                     
  1130                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1131   000E58  5040               	movf	dtoa@s^0,w,c
  1132   000E5A  B4D8               	btfsc	status,2,c
  1133   000E5C  EF32  F007         	goto	u1271
  1134   000E60  EF34  F007         	goto	u1270
  1135   000E64                     u1271:
  1136   000E64  EF44  F007         	goto	l1986
  1137   000E68                     u1270:
  1138   000E68                     
  1139                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  1140   000E68  1E3F               	comf	(dtoa@n+7)^0,f,c
  1141   000E6A  1E3E               	comf	(dtoa@n+6)^0,f,c
  1142   000E6C  1E3D               	comf	(dtoa@n+5)^0,f,c
  1143   000E6E  1E3C               	comf	(dtoa@n+4)^0,f,c
  1144   000E70  1E3B               	comf	(dtoa@n+3)^0,f,c
  1145   000E72  1E3A               	comf	(dtoa@n+2)^0,f,c
  1146   000E74  1E39               	comf	(dtoa@n+1)^0,f,c
  1147   000E76  6C38               	negf	dtoa@n^0,c
  1148   000E78  0E00               	movlw	0
  1149   000E7A  2239               	addwfc	(dtoa@n+1)^0,f,c
  1150   000E7C  223A               	addwfc	(dtoa@n+2)^0,f,c
  1151   000E7E  223B               	addwfc	(dtoa@n+3)^0,f,c
  1152   000E80  223C               	addwfc	(dtoa@n+4)^0,f,c
  1153   000E82  223D               	addwfc	(dtoa@n+5)^0,f,c
  1154   000E84  223E               	addwfc	(dtoa@n+6)^0,f,c
  1155   000E86  223F               	addwfc	(dtoa@n+7)^0,f,c
  1156   000E88                     l1986:
  1157                           
  1158                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  1159   000E88  0100               	movlb	0	; () banked
  1160   000E8A  BFC8               	btfsc	(_prec+1)& (0+255),7,b
  1161   000E8C  EF52  F007         	goto	u1280
  1162   000E90  51C8               	movf	(_prec+1)& (0+255),w,b
  1163   000E92  E106               	bnz	u1281
  1164   000E94  05C7               	decf	_prec& (0+255),w,b
  1165   000E96  B0D8               	btfsc	status,0,c
  1166   000E98  EF50  F007         	goto	u1281
  1167   000E9C  EF52  F007         	goto	u1280
  1168   000EA0                     u1281:
  1169   000EA0  EF58  F007         	goto	l975
  1170   000EA4                     u1280:
  1171   000EA4                     
  1172                           ; BSR set to: 0
  1173   000EA4  0E00               	movlw	0
  1174   000EA6  6E35               	movwf	(dtoa@p+1)^0,c
  1175   000EA8  0E01               	movlw	1
  1176   000EAA  6E34               	movwf	dtoa@p^0,c
  1177   000EAC  EF5C  F007         	goto	l977
  1178   000EB0                     l975:
  1179                           
  1180                           ; BSR set to: 0
  1181   000EB0  C0C7  F034         	movff	_prec,dtoa@p
  1182   000EB4  C0C8  F035         	movff	_prec+1,dtoa@p+1
  1183   000EB8                     l977:
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  1187   000EB8  C0C5  F036         	movff	_width,dtoa@w
  1188   000EBC  C0C6  F037         	movff	_width+1,dtoa@w+1
  1189   000EC0                     
  1190                           ; BSR set to: 0
  1191                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  1192   000EC0  5040               	movf	dtoa@s^0,w,c
  1193   000EC2  B4D8               	btfsc	status,2,c
  1194   000EC4  EF66  F007         	goto	u1291
  1195   000EC8  EF68  F007         	goto	u1290
  1196   000ECC                     u1291:
  1197   000ECC  EF7F  F007         	goto	l978
  1198   000ED0                     u1290:
  1199   000ED0                     
  1200                           ; BSR set to: 0
  1201                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  1202   000ED0  0636               	decf	dtoa@w^0,f,c
  1203   000ED2  A0D8               	btfss	status,0,c
  1204   000ED4  0637               	decf	(dtoa@w+1)^0,f,c
  1205   000ED6                     
  1206                           ; BSR set to: 0
  1207                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  1208   000ED6  5040               	movf	dtoa@s^0,w,c
  1209   000ED8  A4D8               	btfss	status,2,c
  1210   000EDA  EF71  F007         	goto	u1301
  1211   000EDE  EF73  F007         	goto	u1300
  1212   000EE2                     u1301:
  1213   000EE2  EF79  F007         	goto	l1998
  1214   000EE6                     u1300:
  1215   000EE6                     
  1216                           ; BSR set to: 0
  1217   000EE6  0E00               	movlw	0
  1218   000EE8  6E33               	movwf	(_dtoa$1152+1)^0,c
  1219   000EEA  0E2B               	movlw	43
  1220   000EEC  6E32               	movwf	_dtoa$1152^0,c
  1221   000EEE  EF7D  F007         	goto	l2000
  1222   000EF2                     l1998:
  1223                           
  1224                           ; BSR set to: 0
  1225   000EF2  0E00               	movlw	0
  1226   000EF4  6E33               	movwf	(_dtoa$1152+1)^0,c
  1227   000EF6  0E2D               	movlw	45
  1228   000EF8  6E32               	movwf	_dtoa$1152^0,c
  1229   000EFA                     l2000:
  1230                           
  1231                           ; BSR set to: 0
  1232   000EFA  C032  F040         	movff	_dtoa$1152,dtoa@s
  1233   000EFE                     l978:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  1237   000EFE  0E00               	movlw	0
  1238   000F00  6E42               	movwf	(dtoa@i+1)^0,c
  1239   000F02  0E1F               	movlw	31
  1240   000F04  6E41               	movwf	dtoa@i^0,c
  1241   000F06                     
  1242                           ; BSR set to: 0
  1243                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  1244   000F06  0E00               	movlw	0
  1245   000F08  6FE9               	movwf	(_dbuf+31)& (0+255),b
  1246                           
  1247                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1248   000F0A  EF03  F008         	goto	l2014
  1249   000F0E                     l2004:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  1252   000F0E  0641               	decf	dtoa@i^0,f,c
  1253   000F10  A0D8               	btfss	status,0,c
  1254   000F12  0642               	decf	(dtoa@i+1)^0,f,c
  1255   000F14                     
  1256                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1257   000F14  0ECA               	movlw	low _dbuf
  1258   000F16  2441               	addwf	dtoa@i^0,w,c
  1259   000F18  6ED9               	movwf	fsr2l,c
  1260   000F1A  0E00               	movlw	high _dbuf
  1261   000F1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1262   000F1E  6EDA               	movwf	fsr2h,c
  1263   000F20  C038  F005         	movff	dtoa@n,___aomod@dividend
  1264   000F24  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  1265   000F28  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  1266   000F2C  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  1267   000F30  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  1268   000F34  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  1269   000F38  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  1270   000F3C  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  1271   000F40  0E0A               	movlw	10
  1272   000F42  6E0D               	movwf	___aomod@divisor^0,c
  1273   000F44  0E00               	movlw	0
  1274   000F46  6E0E               	movwf	(___aomod@divisor+1)^0,c
  1275   000F48  0E00               	movlw	0
  1276   000F4A  6E0F               	movwf	(___aomod@divisor+2)^0,c
  1277   000F4C  0E00               	movlw	0
  1278   000F4E  6E10               	movwf	(___aomod@divisor+3)^0,c
  1279   000F50  0E00               	movlw	0
  1280   000F52  6E11               	movwf	(___aomod@divisor+4)^0,c
  1281   000F54  0E00               	movlw	0
  1282   000F56  6E12               	movwf	(___aomod@divisor+5)^0,c
  1283   000F58  0E00               	movlw	0
  1284   000F5A  6E13               	movwf	(___aomod@divisor+6)^0,c
  1285   000F5C  0E00               	movlw	0
  1286   000F5E  6E14               	movwf	(___aomod@divisor+7)^0,c
  1287   000F60  EC14  F009         	call	___aomod	;wreg free
  1288   000F64  C005  F02A         	movff	?___aomod,??_dtoa
  1289   000F68  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  1290   000F6C  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  1291   000F70  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  1292   000F74  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  1293   000F78  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  1294   000F7C  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  1295   000F80  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  1296   000F84  C02A  F017         	movff	??_dtoa,abs@a
  1297   000F88  C02B  F018         	movff	??_dtoa+1,abs@a+1
  1298   000F8C  ECD4  F00C         	call	_abs	;wreg free
  1299   000F90  5017               	movf	?_abs^0,w,c
  1300   000F92  0F30               	addlw	48
  1301   000F94  6EDF               	movwf	indf2,c
  1302   000F96                     
  1303                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  1304   000F96  0634               	decf	dtoa@p^0,f,c
  1305   000F98  A0D8               	btfss	status,0,c
  1306   000F9A  0635               	decf	(dtoa@p+1)^0,f,c
  1307   000F9C                     
  1308                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  1309   000F9C  0636               	decf	dtoa@w^0,f,c
  1310   000F9E  A0D8               	btfss	status,0,c
  1311   000FA0  0637               	decf	(dtoa@w+1)^0,f,c
  1312   000FA2                     
  1313                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  1314   000FA2  C038  F005         	movff	dtoa@n,___aodiv@dividend
  1315   000FA6  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  1316   000FAA  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  1317   000FAE  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  1318   000FB2  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  1319   000FB6  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  1320   000FBA  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  1321   000FBE  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  1322   000FC2  0E0A               	movlw	10
  1323   000FC4  6E0D               	movwf	___aodiv@divisor^0,c
  1324   000FC6  0E00               	movlw	0
  1325   000FC8  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  1326   000FCA  0E00               	movlw	0
  1327   000FCC  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  1328   000FCE  0E00               	movlw	0
  1329   000FD0  6E10               	movwf	(___aodiv@divisor+3)^0,c
  1330   000FD2  0E00               	movlw	0
  1331   000FD4  6E11               	movwf	(___aodiv@divisor+4)^0,c
  1332   000FD6  0E00               	movlw	0
  1333   000FD8  6E12               	movwf	(___aodiv@divisor+5)^0,c
  1334   000FDA  0E00               	movlw	0
  1335   000FDC  6E13               	movwf	(___aodiv@divisor+6)^0,c
  1336   000FDE  0E00               	movlw	0
  1337   000FE0  6E14               	movwf	(___aodiv@divisor+7)^0,c
  1338   000FE2  EC50  F008         	call	___aodiv	;wreg free
  1339   000FE6  C005  F038         	movff	?___aodiv,dtoa@n
  1340   000FEA  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  1341   000FEE  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  1342   000FF2  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  1343   000FF6  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  1344   000FFA  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  1345   000FFE  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  1346   001002  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  1347   001006                     l2014:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  1350   001006  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1351   001008  EF0E  F008         	goto	u1311
  1352   00100C  5042               	movf	(dtoa@i+1)^0,w,c
  1353   00100E  E108               	bnz	u1310
  1354   001010  0441               	decf	dtoa@i^0,w,c
  1355   001012  A0D8               	btfss	status,0,c
  1356   001014  EF0E  F008         	goto	u1311
  1357   001018  EF10  F008         	goto	u1310
  1358   00101C                     u1311:
  1359   00101C  EF2C  F008         	goto	l2020
  1360   001020                     u1310:
  1361   001020  5038               	movf	dtoa@n^0,w,c
  1362   001022  1039               	iorwf	(dtoa@n+1)^0,w,c
  1363   001024  103A               	iorwf	(dtoa@n+2)^0,w,c
  1364   001026  103B               	iorwf	(dtoa@n+3)^0,w,c
  1365   001028  103C               	iorwf	(dtoa@n+4)^0,w,c
  1366   00102A  103D               	iorwf	(dtoa@n+5)^0,w,c
  1367   00102C  103E               	iorwf	(dtoa@n+6)^0,w,c
  1368   00102E  103F               	iorwf	(dtoa@n+7)^0,w,c
  1369   001030  A4D8               	btfss	status,2,c
  1370   001032  EF1D  F008         	goto	u1321
  1371   001036  EF1F  F008         	goto	u1320
  1372   00103A                     u1321:
  1373   00103A  EF87  F007         	goto	l2004
  1374   00103E                     u1320:
  1375   00103E  BE35               	btfsc	(dtoa@p+1)^0,7,c
  1376   001040  EF2C  F008         	goto	u1330
  1377   001044  5035               	movf	(dtoa@p+1)^0,w,c
  1378   001046  E106               	bnz	u1331
  1379   001048  0434               	decf	dtoa@p^0,w,c
  1380   00104A  B0D8               	btfsc	status,0,c
  1381   00104C  EF2A  F008         	goto	u1331
  1382   001050  EF2C  F008         	goto	u1330
  1383   001054                     u1331:
  1384   001054  EF87  F007         	goto	l2004
  1385   001058                     u1330:
  1386   001058                     l2020:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  1389   001058  5040               	movf	dtoa@s^0,w,c
  1390   00105A  B4D8               	btfsc	status,2,c
  1391   00105C  EF32  F008         	goto	u1341
  1392   001060  EF34  F008         	goto	u1340
  1393   001064                     u1341:
  1394   001064  EF3F  F008         	goto	l2026
  1395   001068                     u1340:
  1396   001068                     
  1397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  1398   001068  0641               	decf	dtoa@i^0,f,c
  1399   00106A  A0D8               	btfss	status,0,c
  1400   00106C  0642               	decf	(dtoa@i+1)^0,f,c
  1401   00106E                     
  1402                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  1403   00106E  0ECA               	movlw	low _dbuf
  1404   001070  2441               	addwf	dtoa@i^0,w,c
  1405   001072  6ED9               	movwf	fsr2l,c
  1406   001074  0E00               	movlw	high _dbuf
  1407   001076  2042               	addwfc	(dtoa@i+1)^0,w,c
  1408   001078  6EDA               	movwf	fsr2h,c
  1409   00107A  C040  FFDF         	movff	dtoa@s,indf2
  1410   00107E                     l2026:
  1411                           
  1412                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1413   00107E  C020  F015         	movff	dtoa@fp,pad@fp
  1414   001082  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  1415   001086  0ECA               	movlw	low _dbuf
  1416   001088  2441               	addwf	dtoa@i^0,w,c
  1417   00108A  6E17               	movwf	pad@buf^0,c
  1418   00108C  0E00               	movlw	high _dbuf
  1419   00108E  2042               	addwfc	(dtoa@i+1)^0,w,c
  1420   001090  6E18               	movwf	(pad@buf+1)^0,c
  1421   001092  C036  F019         	movff	dtoa@w,pad@p
  1422   001096  C037  F01A         	movff	dtoa@w+1,pad@p+1
  1423   00109A  EC12  F00B         	call	_pad	;wreg free
  1424   00109E  0012               	return		;funcret
  1425   0010A0                     __end_of_dtoa:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _pad *****************
  1429 ;; Defined at:
  1430 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1433 ;;		 -> sprintf@f(11), 
  1434 ;;  buf             2   22[COMRAM] PTR unsigned char 
  1435 ;;		 -> dbuf(32), 
  1436 ;;  p               2   24[COMRAM] int 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  w               2   29[COMRAM] int 
  1439 ;;  i               2   27[COMRAM] int 
  1440 ;; Return value:  Size  Location     Type
  1441 ;;                  1    wreg      void 
  1442 ;; Registers used:
  1443 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1444 ;; Tracked objects:
  1445 ;;		On entry : 0/0
  1446 ;;		On exit  : 0/0
  1447 ;;		Unchanged: 0/0
  1448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1453 ;;Total ram usage:       11 bytes
  1454 ;; Hardware stack levels used: 1
  1455 ;; Hardware stack levels required when called: 5
  1456 ;; This function calls:
  1457 ;;		_fputc
  1458 ;;		_fputs
  1459 ;; This function is called by:
  1460 ;;		_dtoa
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text5
  1465   001624                     __ptext5:
  1466                           	callstack 0
  1467   001624                     _pad:
  1468                           	callstack 21
  1469   001624                     
  1470                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
=======
  5431   0027B0  C022  F038         	movff	dtoa@d,dtoa@n
  5432   0027B4  C023  F039         	movff	dtoa@d+1,dtoa@n+1
  5433   0027B8  C024  F03A         	movff	dtoa@d+2,dtoa@n+2
  5434   0027BC  C025  F03B         	movff	dtoa@d+3,dtoa@n+3
  5435   0027C0  C026  F03C         	movff	dtoa@d+4,dtoa@n+4
  5436   0027C4  C027  F03D         	movff	dtoa@d+5,dtoa@n+5
  5437   0027C8  C028  F03E         	movff	dtoa@d+6,dtoa@n+6
  5438   0027CC  C029  F03F         	movff	dtoa@d+7,dtoa@n+7
  5439   0027D0                     
  5440                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  5441   0027D0  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  5442   0027D2  EFED  F013         	goto	u5661
  5443   0027D6  EFF0  F013         	goto	u5660
  5444   0027DA                     u5661:
  5445   0027DA  0E01               	movlw	1
  5446   0027DC  EFF1  F013         	goto	u5670
  5447   0027E0                     u5660:
  5448   0027E0  0E00               	movlw	0
  5449   0027E2                     u5670:
  5450   0027E2  6E40               	movwf	dtoa@s^0,c
  5451   0027E4                     
  5452                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  5453   0027E4  5040               	movf	dtoa@s^0,w,c
  5454   0027E6  B4D8               	btfsc	status,2,c
  5455   0027E8  EFF8  F013         	goto	u5681
  5456   0027EC  EFFA  F013         	goto	u5680
  5457   0027F0                     u5681:
  5458   0027F0  EF0A  F014         	goto	l4948
  5459   0027F4                     u5680:
  5460   0027F4                     
  5461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  5462   0027F4  1E3F               	comf	(dtoa@n+7)^0,f,c
  5463   0027F6  1E3E               	comf	(dtoa@n+6)^0,f,c
  5464   0027F8  1E3D               	comf	(dtoa@n+5)^0,f,c
  5465   0027FA  1E3C               	comf	(dtoa@n+4)^0,f,c
  5466   0027FC  1E3B               	comf	(dtoa@n+3)^0,f,c
  5467   0027FE  1E3A               	comf	(dtoa@n+2)^0,f,c
  5468   002800  1E39               	comf	(dtoa@n+1)^0,f,c
  5469   002802  6C38               	negf	dtoa@n^0,c
  5470   002804  0E00               	movlw	0
  5471   002806  2239               	addwfc	(dtoa@n+1)^0,f,c
  5472   002808  223A               	addwfc	(dtoa@n+2)^0,f,c
  5473   00280A  223B               	addwfc	(dtoa@n+3)^0,f,c
  5474   00280C  223C               	addwfc	(dtoa@n+4)^0,f,c
  5475   00280E  223D               	addwfc	(dtoa@n+5)^0,f,c
  5476   002810  223E               	addwfc	(dtoa@n+6)^0,f,c
  5477   002812  223F               	addwfc	(dtoa@n+7)^0,f,c
  5478   002814                     l4948:
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  5481   002814  0100               	movlb	0	; () banked
  5482   002816  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  5483   002818  EF18  F014         	goto	u5690
  5484   00281C  51F2               	movf	(_prec+1)& (0+255),w,b
  5485   00281E  E106               	bnz	u5691
  5486   002820  05F1               	decf	_prec& (0+255),w,b
  5487   002822  B0D8               	btfsc	status,0,c
  5488   002824  EF16  F014         	goto	u5691
  5489   002828  EF18  F014         	goto	u5690
  5490   00282C                     u5691:
  5491   00282C  EF1E  F014         	goto	l1010
  5492   002830                     u5690:
  5493   002830                     
  5494                           ; BSR set to: 0
  5495   002830  0E00               	movlw	0
  5496   002832  6E35               	movwf	(dtoa@p+1)^0,c
  5497   002834  0E01               	movlw	1
  5498   002836  6E34               	movwf	dtoa@p^0,c
  5499   002838  EF22  F014         	goto	l1012
  5500   00283C                     l1010:
  5501                           
  5502                           ; BSR set to: 0
  5503   00283C  C0F1  F034         	movff	_prec,dtoa@p
  5504   002840  C0F2  F035         	movff	_prec+1,dtoa@p+1
  5505   002844                     l1012:
  5506                           
  5507                           ; BSR set to: 0
  5508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  5509   002844  C0EF  F036         	movff	_width,dtoa@w
  5510   002848  C0F0  F037         	movff	_width+1,dtoa@w+1
  5511   00284C                     
  5512                           ; BSR set to: 0
  5513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  5514   00284C  5040               	movf	dtoa@s^0,w,c
  5515   00284E  B4D8               	btfsc	status,2,c
  5516   002850  EF2C  F014         	goto	u5701
  5517   002854  EF2E  F014         	goto	u5700
  5518   002858                     u5701:
  5519   002858  EF45  F014         	goto	l1013
  5520   00285C                     u5700:
  5521   00285C                     
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  5524   00285C  0636               	decf	dtoa@w^0,f,c
  5525   00285E  A0D8               	btfss	status,0,c
  5526   002860  0637               	decf	(dtoa@w+1)^0,f,c
  5527   002862                     
  5528                           ; BSR set to: 0
  5529                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  5530   002862  5040               	movf	dtoa@s^0,w,c
  5531   002864  A4D8               	btfss	status,2,c
  5532   002866  EF37  F014         	goto	u5711
  5533   00286A  EF39  F014         	goto	u5710
  5534   00286E                     u5711:
  5535   00286E  EF3F  F014         	goto	l4960
  5536   002872                     u5710:
  5537   002872                     
  5538                           ; BSR set to: 0
  5539   002872  0E00               	movlw	0
  5540   002874  6E33               	movwf	(_dtoa$1461+1)^0,c
  5541   002876  0E2B               	movlw	43
  5542   002878  6E32               	movwf	_dtoa$1461^0,c
  5543   00287A  EF43  F014         	goto	l4962
  5544   00287E                     l4960:
  5545                           
  5546                           ; BSR set to: 0
  5547   00287E  0E00               	movlw	0
  5548   002880  6E33               	movwf	(_dtoa$1461+1)^0,c
  5549   002882  0E2D               	movlw	45
  5550   002884  6E32               	movwf	_dtoa$1461^0,c
  5551   002886                     l4962:
  5552                           
  5553                           ; BSR set to: 0
  5554   002886  C032  F040         	movff	_dtoa$1461,dtoa@s
  5555   00288A                     l1013:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  5559   00288A  0E00               	movlw	0
  5560   00288C  6E42               	movwf	(dtoa@i+1)^0,c
  5561   00288E  0E4F               	movlw	79
  5562   002890  6E41               	movwf	dtoa@i^0,c
  5563   002892                     
  5564                           ; BSR set to: 0
  5565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  5566   002892  0E00               	movlw	0
  5567   002894  0101               	movlb	1	; () banked
  5568   002896  6F9F               	movwf	(_dbuf+79)& (0+255),b
  5569                           
  5570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5571   002898  EFCA  F014         	goto	l4976
  5572   00289C                     l4966:
  5573                           
  5574                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  5575   00289C  0641               	decf	dtoa@i^0,f,c
  5576   00289E  A0D8               	btfss	status,0,c
  5577   0028A0  0642               	decf	(dtoa@i+1)^0,f,c
  5578   0028A2                     
  5579                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  5580   0028A2  0E50               	movlw	low _dbuf
  5581   0028A4  2441               	addwf	dtoa@i^0,w,c
  5582   0028A6  6ED9               	movwf	fsr2l,c
  5583   0028A8  0E01               	movlw	high _dbuf
  5584   0028AA  2042               	addwfc	(dtoa@i+1)^0,w,c
  5585   0028AC  6EDA               	movwf	fsr2h,c
  5586   0028AE  C038  F005         	movff	dtoa@n,___aomod@dividend
  5587   0028B2  C039  F006         	movff	dtoa@n+1,___aomod@dividend+1
  5588   0028B6  C03A  F007         	movff	dtoa@n+2,___aomod@dividend+2
  5589   0028BA  C03B  F008         	movff	dtoa@n+3,___aomod@dividend+3
  5590   0028BE  C03C  F009         	movff	dtoa@n+4,___aomod@dividend+4
  5591   0028C2  C03D  F00A         	movff	dtoa@n+5,___aomod@dividend+5
  5592   0028C6  C03E  F00B         	movff	dtoa@n+6,___aomod@dividend+6
  5593   0028CA  C03F  F00C         	movff	dtoa@n+7,___aomod@dividend+7
  5594   0028CE  0E0A               	movlw	10
  5595   0028D0  6E0D               	movwf	___aomod@divisor^0,c
  5596   0028D2  0E00               	movlw	0
  5597   0028D4  6E0E               	movwf	(___aomod@divisor+1)^0,c
  5598   0028D6  0E00               	movlw	0
  5599   0028D8  6E0F               	movwf	(___aomod@divisor+2)^0,c
  5600   0028DA  0E00               	movlw	0
  5601   0028DC  6E10               	movwf	(___aomod@divisor+3)^0,c
  5602   0028DE  0E00               	movlw	0
  5603   0028E0  6E11               	movwf	(___aomod@divisor+4)^0,c
  5604   0028E2  0E00               	movlw	0
  5605   0028E4  6E12               	movwf	(___aomod@divisor+5)^0,c
  5606   0028E6  0E00               	movlw	0
  5607   0028E8  6E13               	movwf	(___aomod@divisor+6)^0,c
  5608   0028EA  0E00               	movlw	0
  5609   0028EC  6E14               	movwf	(___aomod@divisor+7)^0,c
  5610   0028EE  EC83  F018         	call	___aomod	;wreg free
  5611   0028F2  C005  F02A         	movff	?___aomod,??_dtoa
  5612   0028F6  C006  F02B         	movff	?___aomod+1,??_dtoa+1
  5613   0028FA  C007  F02C         	movff	?___aomod+2,??_dtoa+2
  5614   0028FE  C008  F02D         	movff	?___aomod+3,??_dtoa+3
  5615   002902  C009  F02E         	movff	?___aomod+4,??_dtoa+4
  5616   002906  C00A  F02F         	movff	?___aomod+5,??_dtoa+5
  5617   00290A  C00B  F030         	movff	?___aomod+6,??_dtoa+6
  5618   00290E  C00C  F031         	movff	?___aomod+7,??_dtoa+7
  5619   002912  C02A  F017         	movff	??_dtoa,abs@a
  5620   002916  C02B  F018         	movff	??_dtoa+1,abs@a+1
  5621   00291A  EC19  F01E         	call	_abs	;wreg free
  5622   00291E  5017               	movf	?_abs^0,w,c
  5623   002920  0F30               	addlw	48
  5624   002922  6EDF               	movwf	indf2,c
  5625   002924                     
  5626                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  5627   002924  0634               	decf	dtoa@p^0,f,c
  5628   002926  A0D8               	btfss	status,0,c
  5629   002928  0635               	decf	(dtoa@p+1)^0,f,c
  5630   00292A                     
  5631                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  5632   00292A  0636               	decf	dtoa@w^0,f,c
  5633   00292C  A0D8               	btfss	status,0,c
  5634   00292E  0637               	decf	(dtoa@w+1)^0,f,c
  5635   002930                     
  5636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  5637   002930  C038  F005         	movff	dtoa@n,___aodiv@dividend
  5638   002934  C039  F006         	movff	dtoa@n+1,___aodiv@dividend+1
  5639   002938  C03A  F007         	movff	dtoa@n+2,___aodiv@dividend+2
  5640   00293C  C03B  F008         	movff	dtoa@n+3,___aodiv@dividend+3
  5641   002940  C03C  F009         	movff	dtoa@n+4,___aodiv@dividend+4
  5642   002944  C03D  F00A         	movff	dtoa@n+5,___aodiv@dividend+5
  5643   002948  C03E  F00B         	movff	dtoa@n+6,___aodiv@dividend+6
  5644   00294C  C03F  F00C         	movff	dtoa@n+7,___aodiv@dividend+7
  5645   002950  0E0A               	movlw	10
  5646   002952  6E0D               	movwf	___aodiv@divisor^0,c
  5647   002954  0E00               	movlw	0
  5648   002956  6E0E               	movwf	(___aodiv@divisor+1)^0,c
  5649   002958  0E00               	movlw	0
  5650   00295A  6E0F               	movwf	(___aodiv@divisor+2)^0,c
  5651   00295C  0E00               	movlw	0
  5652   00295E  6E10               	movwf	(___aodiv@divisor+3)^0,c
  5653   002960  0E00               	movlw	0
  5654   002962  6E11               	movwf	(___aodiv@divisor+4)^0,c
  5655   002964  0E00               	movlw	0
  5656   002966  6E12               	movwf	(___aodiv@divisor+5)^0,c
  5657   002968  0E00               	movlw	0
  5658   00296A  6E13               	movwf	(___aodiv@divisor+6)^0,c
  5659   00296C  0E00               	movlw	0
  5660   00296E  6E14               	movwf	(___aodiv@divisor+7)^0,c
  5661   002970  ECBF  F017         	call	___aodiv	;wreg free
  5662   002974  C005  F038         	movff	?___aodiv,dtoa@n
  5663   002978  C006  F039         	movff	?___aodiv+1,dtoa@n+1
  5664   00297C  C007  F03A         	movff	?___aodiv+2,dtoa@n+2
  5665   002980  C008  F03B         	movff	?___aodiv+3,dtoa@n+3
  5666   002984  C009  F03C         	movff	?___aodiv+4,dtoa@n+4
  5667   002988  C00A  F03D         	movff	?___aodiv+5,dtoa@n+5
  5668   00298C  C00B  F03E         	movff	?___aodiv+6,dtoa@n+6
  5669   002990  C00C  F03F         	movff	?___aodiv+7,dtoa@n+7
  5670   002994                     l4976:
  5671                           
  5672                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  5673   002994  BE42               	btfsc	(dtoa@i+1)^0,7,c
  5674   002996  EFD5  F014         	goto	u5721
  5675   00299A  5042               	movf	(dtoa@i+1)^0,w,c
  5676   00299C  E108               	bnz	u5720
  5677   00299E  0441               	decf	dtoa@i^0,w,c
  5678   0029A0  A0D8               	btfss	status,0,c
  5679   0029A2  EFD5  F014         	goto	u5721
  5680   0029A6  EFD7  F014         	goto	u5720
  5681   0029AA                     u5721:
  5682   0029AA  EFF3  F014         	goto	l4982
  5683   0029AE                     u5720:
  5684   0029AE  5038               	movf	dtoa@n^0,w,c
  5685   0029B0  1039               	iorwf	(dtoa@n+1)^0,w,c
  5686   0029B2  103A               	iorwf	(dtoa@n+2)^0,w,c
  5687   0029B4  103B               	iorwf	(dtoa@n+3)^0,w,c
  5688   0029B6  103C               	iorwf	(dtoa@n+4)^0,w,c
  5689   0029B8  103D               	iorwf	(dtoa@n+5)^0,w,c
  5690   0029BA  103E               	iorwf	(dtoa@n+6)^0,w,c
  5691   0029BC  103F               	iorwf	(dtoa@n+7)^0,w,c
  5692   0029BE  A4D8               	btfss	status,2,c
  5693   0029C0  EFE4  F014         	goto	u5731
  5694   0029C4  EFE6  F014         	goto	u5730
  5695   0029C8                     u5731:
  5696   0029C8  EF4E  F014         	goto	l4966
  5697   0029CC                     u5730:
  5698   0029CC  BE35               	btfsc	(dtoa@p+1)^0,7,c
  5699   0029CE  EFF3  F014         	goto	u5740
  5700   0029D2  5035               	movf	(dtoa@p+1)^0,w,c
  5701   0029D4  E106               	bnz	u5741
  5702   0029D6  0434               	decf	dtoa@p^0,w,c
  5703   0029D8  B0D8               	btfsc	status,0,c
  5704   0029DA  EFF1  F014         	goto	u5741
  5705   0029DE  EFF3  F014         	goto	u5740
  5706   0029E2                     u5741:
  5707   0029E2  EF4E  F014         	goto	l4966
  5708   0029E6                     u5740:
  5709   0029E6                     l4982:
  5710                           
  5711                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  5712   0029E6  5040               	movf	dtoa@s^0,w,c
  5713   0029E8  B4D8               	btfsc	status,2,c
  5714   0029EA  EFF9  F014         	goto	u5751
  5715   0029EE  EFFB  F014         	goto	u5750
  5716   0029F2                     u5751:
  5717   0029F2  EF06  F015         	goto	l4988
  5718   0029F6                     u5750:
  5719   0029F6                     
  5720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  5721   0029F6  0641               	decf	dtoa@i^0,f,c
  5722   0029F8  A0D8               	btfss	status,0,c
  5723   0029FA  0642               	decf	(dtoa@i+1)^0,f,c
  5724   0029FC                     
  5725                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  5726   0029FC  0E50               	movlw	low _dbuf
  5727   0029FE  2441               	addwf	dtoa@i^0,w,c
  5728   002A00  6ED9               	movwf	fsr2l,c
  5729   002A02  0E01               	movlw	high _dbuf
  5730   002A04  2042               	addwfc	(dtoa@i+1)^0,w,c
  5731   002A06  6EDA               	movwf	fsr2h,c
  5732   002A08  C040  FFDF         	movff	dtoa@s,indf2
  5733   002A0C                     l4988:
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5736   002A0C  C020  F015         	movff	dtoa@fp,pad@fp
  5737   002A10  C021  F016         	movff	dtoa@fp+1,pad@fp+1
  5738   002A14  0E50               	movlw	low _dbuf
  5739   002A16  2441               	addwf	dtoa@i^0,w,c
  5740   002A18  6E17               	movwf	pad@buf^0,c
  5741   002A1A  0E01               	movlw	high _dbuf
  5742   002A1C  2042               	addwfc	(dtoa@i+1)^0,w,c
  5743   002A1E  6E18               	movwf	(pad@buf+1)^0,c
  5744   002A20  C036  F019         	movff	dtoa@w,pad@p
  5745   002A24  C037  F01A         	movff	dtoa@w+1,pad@p+1
  5746   002A28  ECD7  F01B         	call	_pad	;wreg free
  5747   002A2C  0012               	return		;funcret
  5748   002A2E                     __end_of_dtoa:
  5749                           	callstack 0
  5750                           
  5751 ;; *************** function _pad *****************
  5752 ;; Defined at:
  5753 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  5756 ;;		 -> sprintf@f(11), 
  5757 ;;  buf             2   22[COMRAM] PTR unsigned char 
  5758 ;;		 -> dbuf(80), 
  5759 ;;  p               2   24[COMRAM] int 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  w               2   29[COMRAM] int 
  5762 ;;  i               2   27[COMRAM] int 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  1    wreg      void 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5772 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;Total ram usage:       11 bytes
  5777 ;; Hardware stack levels used: 1
  5778 ;; Hardware stack levels required when called: 5
  5779 ;; This function calls:
  5780 ;;		_fputc
  5781 ;;		_fputs
  5782 ;; This function is called by:
  5783 ;;		_dtoa
  5784 ;;		_efgtoa
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text18
  5789   0037AE                     __ptext18:
  5790                           	callstack 0
  5791   0037AE                     _pad:
  5792                           	callstack 21
  5793   0037AE                     
  5794                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
>>>>>>> Stashed changes
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
<<<<<<< Updated upstream
  1471   001624  BE1A               	btfsc	(pad@p+1)^0,7,c
  1472   001626  EF17  F00B         	goto	u1221
  1473   00162A  EF19  F00B         	goto	u1220
  1474   00162E                     u1221:
  1475   00162E  EF1F  F00B         	goto	l1964
  1476   001632                     u1220:
  1477   001632  C019  F01E         	movff	pad@p,pad@w
  1478   001636  C01A  F01F         	movff	pad@p+1,pad@w+1
  1479   00163A  EF23  F00B         	goto	l966
  1480   00163E                     l1964:
  1481   00163E  0E00               	movlw	0
  1482   001640  6E1F               	movwf	(pad@w+1)^0,c
  1483   001642  0E00               	movlw	0
  1484   001644  6E1E               	movwf	pad@w^0,c
  1485   001646                     l966:
  1486                           
  1487                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1488   001646  0E00               	movlw	0
  1489   001648  6E1D               	movwf	(pad@i+1)^0,c
  1490   00164A  0E00               	movlw	0
  1491   00164C  6E1C               	movwf	pad@i^0,c
  1492                           
  1493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1494   00164E  EF35  F00B         	goto	l1970
  1495   001652                     l1966:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1498   001652  0E00               	movlw	0
  1499   001654  6E06               	movwf	(fputc@c+1)^0,c
  1500   001656  0E20               	movlw	32
  1501   001658  6E05               	movwf	fputc@c^0,c
  1502   00165A  C015  F007         	movff	pad@fp,fputc@fp
  1503   00165E  C016  F008         	movff	pad@fp+1,fputc@fp+1
  1504   001662  EC6D  F00A         	call	_fputc	;wreg free
  1505   001666                     
  1506                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1507   001666  4A1C               	infsnz	pad@i^0,f,c
  1508   001668  2A1D               	incf	(pad@i+1)^0,f,c
  1509   00166A                     l1970:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1512   00166A  501E               	movf	pad@w^0,w,c
  1513   00166C  5C1C               	subwf	pad@i^0,w,c
  1514   00166E  501D               	movf	(pad@i+1)^0,w,c
  1515   001670  0A80               	xorlw	128
  1516   001672  6E1B               	movwf	??_pad^0,c
  1517   001674  501F               	movf	(pad@w+1)^0,w,c
  1518   001676  0A80               	xorlw	128
  1519   001678  581B               	subwfb	??_pad^0,w,c
  1520   00167A  A0D8               	btfss	status,0,c
  1521   00167C  EF42  F00B         	goto	u1231
  1522   001680  EF44  F00B         	goto	u1230
  1523   001684                     u1231:
  1524   001684  EF29  F00B         	goto	l1966
  1525   001688                     u1230:
  1526   001688                     
  1527                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1528   001688  C017  F00E         	movff	pad@buf,fputs@s
  1529   00168C  C018  F00F         	movff	pad@buf+1,fputs@s+1
  1530   001690  C015  F010         	movff	pad@fp,fputs@fp
  1531   001694  C016  F011         	movff	pad@fp+1,fputs@fp+1
  1532   001698  EC91  F00C         	call	_fputs	;wreg free
  1533   00169C  0012               	return		;funcret
  1534   00169E                     __end_of_pad:
  1535                           	callstack 0
  1536                           
  1537 ;; *************** function _fputs *****************
  1538 ;; Defined at:
  1539 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  s               2   13[COMRAM] PTR const unsigned char 
  1542 ;;		 -> dbuf(32), 
  1543 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1544 ;;		 -> sprintf@f(11), 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  i               2   18[COMRAM] int 
  1547 ;;  c               1   17[COMRAM] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  2   13[COMRAM] int 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1557 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1561 ;;Total ram usage:        7 bytes
  1562 ;; Hardware stack levels used: 1
  1563 ;; Hardware stack levels required when called: 4
  1564 ;; This function calls:
  1565 ;;		_fputc
  1566 ;; This function is called by:
  1567 ;;		_pad
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text6
  1572   001922                     __ptext6:
  1573                           	callstack 0
  1574   001922                     _fputs:
  1575                           	callstack 21
  1576   001922  0E00               	movlw	0
  1577   001924  6E14               	movwf	(fputs@i+1)^0,c
  1578   001926  0E00               	movlw	0
  1579   001928  6E13               	movwf	fputs@i^0,c
  1580   00192A  EFA2  F00C         	goto	l1878
  1581   00192E                     l1874:
  1582   00192E  C012  F005         	movff	fputs@c,fputc@c
  1583   001932  6A06               	clrf	(fputc@c+1)^0,c
  1584   001934  C010  F007         	movff	fputs@fp,fputc@fp
  1585   001938  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  1586   00193C  EC6D  F00A         	call	_fputc	;wreg free
  1587   001940  4A13               	infsnz	fputs@i^0,f,c
  1588   001942  2A14               	incf	(fputs@i+1)^0,f,c
  1589   001944                     l1878:
  1590   001944  5013               	movf	fputs@i^0,w,c
  1591   001946  240E               	addwf	fputs@s^0,w,c
  1592   001948  6ED9               	movwf	fsr2l,c
  1593   00194A  5014               	movf	(fputs@i+1)^0,w,c
  1594   00194C  200F               	addwfc	(fputs@s+1)^0,w,c
  1595   00194E  6EDA               	movwf	fsr2h,c
  1596   001950  50DF               	movf	indf2,w,c
  1597   001952  6E12               	movwf	fputs@c^0,c
  1598   001954  5012               	movf	fputs@c^0,w,c
  1599   001956  A4D8               	btfss	status,2,c
  1600   001958  EFB0  F00C         	goto	u1081
  1601   00195C  EFB2  F00C         	goto	u1080
  1602   001960                     u1081:
  1603   001960  EF97  F00C         	goto	l1874
  1604   001964                     u1080:
  1605   001964  0012               	return		;funcret
  1606   001966                     __end_of_fputs:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _fputc *****************
  1610 ;; Defined at:
  1611 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  c               2    4[COMRAM] int 
  1614 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  1615 ;;		 -> sprintf@f(11), 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;		None
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  2    4[COMRAM] int 
  1620 ;; Registers used:
  1621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1627 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1629 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1630 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1631 ;;Total ram usage:        9 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 3
  1634 ;; This function calls:
  1635 ;;		_putch
  1636 ;; This function is called by:
  1637 ;;		_pad
  1638 ;;		_vfpfcnvrt
  1639 ;;		_fputs
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text7
  1644   0014DA                     __ptext7:
  1645                           	callstack 0
  1646   0014DA                     _fputc:
  1647                           	callstack 24
  1648   0014DA  5007               	movf	fputc@fp^0,w,c
  1649   0014DC  1008               	iorwf	(fputc@fp+1)^0,w,c
  1650   0014DE  B4D8               	btfsc	status,2,c
  1651   0014E0  EF74  F00A         	goto	u1041
  1652   0014E4  EF76  F00A         	goto	u1040
  1653   0014E8                     u1041:
  1654   0014E8  EF7F  F00A         	goto	l1862
  1655   0014EC                     u1040:
  1656   0014EC  5007               	movf	fputc@fp^0,w,c
  1657   0014EE  1008               	iorwf	(fputc@fp+1)^0,w,c
  1658   0014F0  A4D8               	btfss	status,2,c
  1659   0014F2  EF7D  F00A         	goto	u1051
  1660   0014F6  EF7F  F00A         	goto	u1050
  1661   0014FA                     u1051:
  1662   0014FA  EF84  F00A         	goto	l1864
  1663   0014FE                     u1050:
  1664   0014FE                     l1862:
  1665   0014FE  5005               	movf	fputc@c^0,w,c
  1666   001500  ECEB  F00D         	call	_putch
  1667   001504  EFD1  F00A         	goto	l1021
  1668   001508                     l1864:
  1669   001508  EE20 F009          	lfsr	2,9
  1670   00150C  5007               	movf	fputc@fp^0,w,c
  1671   00150E  26D9               	addwf	fsr2l,f,c
  1672   001510  5008               	movf	(fputc@fp+1)^0,w,c
  1673   001512  22DA               	addwfc	fsr2h,f,c
  1674   001514  50DE               	movf	postinc2,w,c
  1675   001516  10DE               	iorwf	postinc2,w,c
  1676   001518  B4D8               	btfsc	status,2,c
  1677   00151A  EF91  F00A         	goto	u1061
  1678   00151E  EF93  F00A         	goto	u1060
  1679   001522                     u1061:
  1680   001522  EFAE  F00A         	goto	l1868
  1681   001526                     u1060:
  1682   001526  EE20 F009          	lfsr	2,9
  1683   00152A  5007               	movf	fputc@fp^0,w,c
  1684   00152C  26D9               	addwf	fsr2l,f,c
  1685   00152E  5008               	movf	(fputc@fp+1)^0,w,c
  1686   001530  22DA               	addwfc	fsr2h,f,c
  1687   001532  EE10 F003          	lfsr	1,3
  1688   001536  5007               	movf	fputc@fp^0,w,c
  1689   001538  26E1               	addwf	fsr1l,f,c
  1690   00153A  5008               	movf	(fputc@fp+1)^0,w,c
  1691   00153C  22E2               	addwfc	fsr1h,f,c
  1692   00153E  50DE               	movf	postinc2,w,c
  1693   001540  5CE6               	subwf	postinc1,w,c
  1694   001542  50E6               	movf	postinc1,w,c
  1695   001544  0A80               	xorlw	128
  1696   001546  6E0D               	movwf	(??_fputc+4)^0,c
  1697   001548  50DE               	movf	postinc2,w,c
  1698   00154A  0A80               	xorlw	128
  1699   00154C  580D               	subwfb	(??_fputc+4)^0,w,c
  1700   00154E  B0D8               	btfsc	status,0,c
  1701   001550  EFAC  F00A         	goto	u1071
  1702   001554  EFAE  F00A         	goto	u1070
  1703   001558                     u1071:
  1704   001558  EFD1  F00A         	goto	l1021
  1705   00155C                     u1070:
  1706   00155C                     l1868:
  1707   00155C  EE20 F003          	lfsr	2,3
  1708   001560  5007               	movf	fputc@fp^0,w,c
  1709   001562  26D9               	addwf	fsr2l,f,c
  1710   001564  5008               	movf	(fputc@fp+1)^0,w,c
  1711   001566  22DA               	addwfc	fsr2h,f,c
  1712   001568  CFDE F009          	movff	postinc2,??_fputc
  1713   00156C  CFDD F00A          	movff	postdec2,??_fputc+1
  1714   001570  C007  FFD9         	movff	fputc@fp,fsr2l
  1715   001574  C008  FFDA         	movff	fputc@fp+1,fsr2h
  1716   001578  CFDE F00B          	movff	postinc2,??_fputc+2
  1717   00157C  CFDD F00C          	movff	postdec2,??_fputc+3
  1718   001580  5009               	movf	??_fputc^0,w,c
  1719   001582  240B               	addwf	(??_fputc+2)^0,w,c
  1720   001584  6ED9               	movwf	fsr2l,c
  1721   001586  500A               	movf	(??_fputc+1)^0,w,c
  1722   001588  200C               	addwfc	(??_fputc+3)^0,w,c
  1723   00158A  6EDA               	movwf	fsr2h,c
  1724   00158C  C005  FFDF         	movff	fputc@c,indf2
  1725   001590  EE20 F003          	lfsr	2,3
  1726   001594  5007               	movf	fputc@fp^0,w,c
  1727   001596  26D9               	addwf	fsr2l,f,c
  1728   001598  5008               	movf	(fputc@fp+1)^0,w,c
  1729   00159A  22DA               	addwfc	fsr2h,f,c
  1730   00159C  2ADE               	incf	postinc2,f,c
  1731   00159E  0E00               	movlw	0
  1732   0015A0  22DD               	addwfc	postdec2,f,c
  1733   0015A2                     l1021:
  1734   0015A2  0012               	return		;funcret
  1735   0015A4                     __end_of_fputc:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _putch *****************
  1739 ;; Defined at:
  1740 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  c               1    wreg     unsigned char 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  c               1    0[COMRAM] unsigned char 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 2
  1761 ;; This function calls:
  1762 ;;		Nothing
  1763 ;; This function is called by:
  1764 ;;		_fputc
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text8
  1769   001BD6                     __ptext8:
  1770                           	callstack 0
  1771   001BD6                     _putch:
  1772                           	callstack 24
  1773   001BD6  0012               	return		;funcret
  1774   001BD8                     __end_of_putch:
  1775                           	callstack 0
  1776                           
  1777 ;; *************** function _abs *****************
  1778 ;; Defined at:
  1779 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  a               2   22[COMRAM] int 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  2   22[COMRAM] int 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1793 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1797 ;;Total ram usage:        4 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 2
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_dtoa
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text9
  1808   0019A8                     __ptext9:
  1809                           	callstack 0
  1810   0019A8                     _abs:
  1811                           	callstack 24
  1812   0019A8  BE18               	btfsc	(abs@a+1)^0,7,c
  1813   0019AA  EFE1  F00C         	goto	u1240
  1814   0019AE  5018               	movf	(abs@a+1)^0,w,c
  1815   0019B0  E106               	bnz	u1241
  1816   0019B2  0417               	decf	abs@a^0,w,c
  1817   0019B4  B0D8               	btfsc	status,0,c
  1818   0019B6  EFDF  F00C         	goto	u1241
  1819   0019BA  EFE1  F00C         	goto	u1240
  1820   0019BE                     u1241:
  1821   0019BE  EFEF  F00C         	goto	l1006
  1822   0019C2                     u1240:
  1823   0019C2  C017  F019         	movff	abs@a,??_abs
  1824   0019C6  C018  F01A         	movff	abs@a+1,??_abs+1
  1825   0019CA  1E19               	comf	??_abs^0,f,c
  1826   0019CC  1E1A               	comf	(??_abs+1)^0,f,c
  1827   0019CE  4A19               	infsnz	??_abs^0,f,c
  1828   0019D0  2A1A               	incf	(??_abs+1)^0,f,c
  1829   0019D2  C019  F017         	movff	??_abs,?_abs
  1830   0019D6  C01A  F018         	movff	??_abs+1,?_abs+1
  1831   0019DA  EFF3  F00C         	goto	l1009
  1832   0019DE                     l1006:
  1833   0019DE  C017  F017         	movff	abs@a,?_abs
  1834   0019E2  C018  F018         	movff	abs@a+1,?_abs+1
  1835   0019E6                     l1009:
  1836   0019E6  0012               	return		;funcret
  1837   0019E8                     __end_of_abs:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function ___aomod *****************
  1841 ;; Defined at:
  1842 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  dividend        8    4[COMRAM] long long 
  1845 ;;  divisor         8   12[COMRAM] long long 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  sign            1   21[COMRAM] unsigned char 
  1848 ;;  counter         1   20[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  8    4[COMRAM] long long 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1858 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;Total ram usage:       18 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; Hardware stack levels required when called: 2
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_dtoa
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text10
  1873   001228                     __ptext10:
  1874                           	callstack 0
  1875   001228                     ___aomod:
  1876                           	callstack 24
  1877   001228  0E00               	movlw	0
  1878   00122A  6E16               	movwf	___aomod@sign^0,c
  1879   00122C  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  1880   00122E  EF1D  F009         	goto	u1160
  1881   001232  EF1B  F009         	goto	u1161
  1882   001236                     u1161:
  1883   001236  EF2F  F009         	goto	l1932
  1884   00123A                     u1160:
  1885   00123A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  1886   00123C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  1887   00123E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  1888   001240  1E09               	comf	(___aomod@dividend+4)^0,f,c
  1889   001242  1E08               	comf	(___aomod@dividend+3)^0,f,c
  1890   001244  1E07               	comf	(___aomod@dividend+2)^0,f,c
  1891   001246  1E06               	comf	(___aomod@dividend+1)^0,f,c
  1892   001248  6C05               	negf	___aomod@dividend^0,c
  1893   00124A  0E00               	movlw	0
  1894   00124C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  1895   00124E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  1896   001250  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  1897   001252  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  1898   001254  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  1899   001256  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  1900   001258  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  1901   00125A  0E01               	movlw	1
  1902   00125C  6E16               	movwf	___aomod@sign^0,c
  1903   00125E                     l1932:
  1904   00125E  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  1905   001260  EF36  F009         	goto	u1170
  1906   001264  EF34  F009         	goto	u1171
  1907   001268                     u1171:
  1908   001268  EF46  F009         	goto	l1936
  1909   00126C                     u1170:
  1910   00126C  1E14               	comf	(___aomod@divisor+7)^0,f,c
  1911   00126E  1E13               	comf	(___aomod@divisor+6)^0,f,c
  1912   001270  1E12               	comf	(___aomod@divisor+5)^0,f,c
  1913   001272  1E11               	comf	(___aomod@divisor+4)^0,f,c
  1914   001274  1E10               	comf	(___aomod@divisor+3)^0,f,c
  1915   001276  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  1916   001278  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  1917   00127A  6C0D               	negf	___aomod@divisor^0,c
  1918   00127C  0E00               	movlw	0
  1919   00127E  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  1920   001280  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  1921   001282  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  1922   001284  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  1923   001286  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  1924   001288  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  1925   00128A  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  1926   00128C                     l1936:
  1927   00128C  500D               	movf	___aomod@divisor^0,w,c
  1928   00128E  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  1929   001290  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  1930   001292  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  1931   001294  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  1932   001296  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  1933   001298  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  1934   00129A  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  1935   00129C  B4D8               	btfsc	status,2,c
  1936   00129E  EF53  F009         	goto	u1181
  1937   0012A2  EF55  F009         	goto	u1180
  1938   0012A6                     u1181:
  1939   0012A6  EF9D  F009         	goto	l1952
  1940   0012AA                     u1180:
  1941   0012AA  0E01               	movlw	1
  1942   0012AC  6E15               	movwf	___aomod@counter^0,c
  1943   0012AE  EF63  F009         	goto	l1942
  1944   0012B2                     l1940:
  1945   0012B2  90D8               	bcf	status,0,c
  1946   0012B4  360D               	rlcf	___aomod@divisor^0,f,c
  1947   0012B6  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  1948   0012B8  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  1949   0012BA  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  1950   0012BC  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  1951   0012BE  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  1952   0012C0  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  1953   0012C2  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  1954   0012C4  2A15               	incf	___aomod@counter^0,f,c
  1955   0012C6                     l1942:
  1956   0012C6  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  1957   0012C8  EF68  F009         	goto	u1191
  1958   0012CC  EF6A  F009         	goto	u1190
  1959   0012D0                     u1191:
  1960   0012D0  EF59  F009         	goto	l1940
  1961   0012D4                     u1190:
  1962   0012D4                     l1944:
  1963   0012D4  500D               	movf	___aomod@divisor^0,w,c
  1964   0012D6  5C05               	subwf	___aomod@dividend^0,w,c
  1965   0012D8  500E               	movf	(___aomod@divisor+1)^0,w,c
  1966   0012DA  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  1967   0012DC  500F               	movf	(___aomod@divisor+2)^0,w,c
  1968   0012DE  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  1969   0012E0  5010               	movf	(___aomod@divisor+3)^0,w,c
  1970   0012E2  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  1971   0012E4  5011               	movf	(___aomod@divisor+4)^0,w,c
  1972   0012E6  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  1973   0012E8  5012               	movf	(___aomod@divisor+5)^0,w,c
  1974   0012EA  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  1975   0012EC  5013               	movf	(___aomod@divisor+6)^0,w,c
  1976   0012EE  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  1977   0012F0  5014               	movf	(___aomod@divisor+7)^0,w,c
  1978   0012F2  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  1979   0012F4  A0D8               	btfss	status,0,c
  1980   0012F6  EF7F  F009         	goto	u1201
  1981   0012FA  EF81  F009         	goto	u1200
  1982   0012FE                     u1201:
  1983   0012FE  EF91  F009         	goto	l1948
  1984   001302                     u1200:
  1985   001302  500D               	movf	___aomod@divisor^0,w,c
  1986   001304  5E05               	subwf	___aomod@dividend^0,f,c
  1987   001306  500E               	movf	(___aomod@divisor+1)^0,w,c
  1988   001308  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  1989   00130A  500F               	movf	(___aomod@divisor+2)^0,w,c
  1990   00130C  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  1991   00130E  5010               	movf	(___aomod@divisor+3)^0,w,c
  1992   001310  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  1993   001312  5011               	movf	(___aomod@divisor+4)^0,w,c
  1994   001314  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  1995   001316  5012               	movf	(___aomod@divisor+5)^0,w,c
  1996   001318  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  1997   00131A  5013               	movf	(___aomod@divisor+6)^0,w,c
  1998   00131C  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  1999   00131E  5014               	movf	(___aomod@divisor+7)^0,w,c
  2000   001320  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  2001   001322                     l1948:
  2002   001322  90D8               	bcf	status,0,c
  2003   001324  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  2004   001326  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  2005   001328  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  2006   00132A  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  2007   00132C  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  2008   00132E  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  2009   001330  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  2010   001332  320D               	rrcf	___aomod@divisor^0,f,c
  2011   001334  2E15               	decfsz	___aomod@counter^0,f,c
  2012   001336  EF6A  F009         	goto	l1944
  2013   00133A                     l1952:
  2014   00133A  5016               	movf	___aomod@sign^0,w,c
  2015   00133C  B4D8               	btfsc	status,2,c
  2016   00133E  EFA3  F009         	goto	u1211
  2017   001342  EFA5  F009         	goto	u1210
  2018   001346                     u1211:
  2019   001346  EFB5  F009         	goto	l1956
  2020   00134A                     u1210:
  2021   00134A  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  2022   00134C  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  2023   00134E  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  2024   001350  1E09               	comf	(___aomod@dividend+4)^0,f,c
  2025   001352  1E08               	comf	(___aomod@dividend+3)^0,f,c
  2026   001354  1E07               	comf	(___aomod@dividend+2)^0,f,c
  2027   001356  1E06               	comf	(___aomod@dividend+1)^0,f,c
  2028   001358  6C05               	negf	___aomod@dividend^0,c
  2029   00135A  0E00               	movlw	0
  2030   00135C  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  2031   00135E  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  2032   001360  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  2033   001362  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  2034   001364  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  2035   001366  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  2036   001368  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  2037   00136A                     l1956:
  2038   00136A  C005  F005         	movff	___aomod@dividend,?___aomod
  2039   00136E  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  2040   001372  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  2041   001376  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  2042   00137A  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  2043   00137E  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  2044   001382  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  2045   001386  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  2046   00138A  0012               	return		;funcret
  2047   00138C                     __end_of___aomod:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function ___aodiv *****************
  2051 ;; Defined at:
  2052 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  dividend        8    4[COMRAM] long long 
  2055 ;;  divisor         8   12[COMRAM] long long 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;  quotient        8   22[COMRAM] long long 
  2058 ;;  sign            1   21[COMRAM] unsigned char 
  2059 ;;  counter         1   20[COMRAM] unsigned char 
  2060 ;; Return value:  Size  Location     Type
  2061 ;;                  8    4[COMRAM] long long 
  2062 ;; Registers used:
  2063 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2064 ;; Tracked objects:
  2065 ;;		On entry : 0/0
  2066 ;;		On exit  : 0/0
  2067 ;;		Unchanged: 0/0
  2068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2069 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;Total ram usage:       26 bytes
  2074 ;; Hardware stack levels used: 1
  2075 ;; Hardware stack levels required when called: 2
  2076 ;; This function calls:
  2077 ;;		Nothing
  2078 ;; This function is called by:
  2079 ;;		_dtoa
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text11
  2084   0010A0                     __ptext11:
  2085                           	callstack 0
  2086   0010A0                     ___aodiv:
  2087                           	callstack 24
  2088   0010A0  0E00               	movlw	0
  2089   0010A2  6E16               	movwf	___aodiv@sign^0,c
  2090   0010A4  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  2091   0010A6  EF59  F008         	goto	u1090
  2092   0010AA  EF57  F008         	goto	u1091
  2093   0010AE                     u1091:
  2094   0010AE  EF6B  F008         	goto	l1888
  2095   0010B2                     u1090:
  2096   0010B2  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  2097   0010B4  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  2098   0010B6  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  2099   0010B8  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  2100   0010BA  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  2101   0010BC  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  2102   0010BE  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  2103   0010C0  6C0D               	negf	___aodiv@divisor^0,c
  2104   0010C2  0E00               	movlw	0
  2105   0010C4  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  2106   0010C6  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  2107   0010C8  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  2108   0010CA  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  2109   0010CC  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  2110   0010CE  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  2111   0010D0  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  2112   0010D2  0E01               	movlw	1
  2113   0010D4  6E16               	movwf	___aodiv@sign^0,c
  2114   0010D6                     l1888:
  2115   0010D6  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  2116   0010D8  EF72  F008         	goto	u1100
  2117   0010DC  EF70  F008         	goto	u1101
  2118   0010E0                     u1101:
  2119   0010E0  EF84  F008         	goto	l1894
  2120   0010E4                     u1100:
  2121   0010E4  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  2122   0010E6  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  2123   0010E8  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  2124   0010EA  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  2125   0010EC  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  2126   0010EE  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  2127   0010F0  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  2128   0010F2  6C05               	negf	___aodiv@dividend^0,c
  2129   0010F4  0E00               	movlw	0
  2130   0010F6  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  2131   0010F8  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  2132   0010FA  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  2133   0010FC  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  2134   0010FE  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  2135   001100  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  2136   001102  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  2137   001104  0E01               	movlw	1
  2138   001106  1A16               	xorwf	___aodiv@sign^0,f,c
  2139   001108                     l1894:
  2140   001108  EE20  F017         	lfsr	2,___aodiv@quotient
  2141   00110C  0E07               	movlw	7
  2142   00110E                     u1111:
  2143   00110E  6ADE               	clrf	postinc2,c
  2144   001110  06E8               	decf	wreg,f,c
  2145   001112  E2FD               	bc	u1111
  2146   001114  500D               	movf	___aodiv@divisor^0,w,c
  2147   001116  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  2148   001118  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  2149   00111A  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  2150   00111C  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  2151   00111E  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  2152   001120  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  2153   001122  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  2154   001124  B4D8               	btfsc	status,2,c
  2155   001126  EF97  F008         	goto	u1121
  2156   00112A  EF99  F008         	goto	u1120
  2157   00112E                     u1121:
  2158   00112E  EFEB  F008         	goto	l1916
  2159   001132                     u1120:
  2160   001132  0E01               	movlw	1
  2161   001134  6E15               	movwf	___aodiv@counter^0,c
  2162   001136  EFA7  F008         	goto	l1902
  2163   00113A                     l1900:
  2164   00113A  90D8               	bcf	status,0,c
  2165   00113C  360D               	rlcf	___aodiv@divisor^0,f,c
  2166   00113E  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  2167   001140  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  2168   001142  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  2169   001144  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  2170   001146  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  2171   001148  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  2172   00114A  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  2173   00114C  2A15               	incf	___aodiv@counter^0,f,c
  2174   00114E                     l1902:
  2175   00114E  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  2176   001150  EFAC  F008         	goto	u1131
  2177   001154  EFAE  F008         	goto	u1130
  2178   001158                     u1131:
  2179   001158  EF9D  F008         	goto	l1900
  2180   00115C                     u1130:
  2181   00115C                     l1904:
  2182   00115C  90D8               	bcf	status,0,c
  2183   00115E  3617               	rlcf	___aodiv@quotient^0,f,c
  2184   001160  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  2185   001162  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  2186   001164  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  2187   001166  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  2188   001168  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  2189   00116A  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  2190   00116C  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  2191   00116E  500D               	movf	___aodiv@divisor^0,w,c
  2192   001170  5C05               	subwf	___aodiv@dividend^0,w,c
  2193   001172  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2194   001174  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  2195   001176  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2196   001178  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  2197   00117A  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2198   00117C  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  2199   00117E  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2200   001180  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  2201   001182  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2202   001184  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  2203   001186  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2204   001188  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  2205   00118A  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2206   00118C  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  2207   00118E  A0D8               	btfss	status,0,c
  2208   001190  EFCC  F008         	goto	u1141
  2209   001194  EFCE  F008         	goto	u1140
  2210   001198                     u1141:
  2211   001198  EFDF  F008         	goto	l1912
  2212   00119C                     u1140:
  2213   00119C  500D               	movf	___aodiv@divisor^0,w,c
  2214   00119E  5E05               	subwf	___aodiv@dividend^0,f,c
  2215   0011A0  500E               	movf	(___aodiv@divisor+1)^0,w,c
  2216   0011A2  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  2217   0011A4  500F               	movf	(___aodiv@divisor+2)^0,w,c
  2218   0011A6  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  2219   0011A8  5010               	movf	(___aodiv@divisor+3)^0,w,c
  2220   0011AA  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  2221   0011AC  5011               	movf	(___aodiv@divisor+4)^0,w,c
  2222   0011AE  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  2223   0011B0  5012               	movf	(___aodiv@divisor+5)^0,w,c
  2224   0011B2  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  2225   0011B4  5013               	movf	(___aodiv@divisor+6)^0,w,c
  2226   0011B6  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  2227   0011B8  5014               	movf	(___aodiv@divisor+7)^0,w,c
  2228   0011BA  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  2229   0011BC  8017               	bsf	___aodiv@quotient^0,0,c
  2230   0011BE                     l1912:
  2231   0011BE  90D8               	bcf	status,0,c
  2232   0011C0  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  2233   0011C2  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  2234   0011C4  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  2235   0011C6  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  2236   0011C8  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  2237   0011CA  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  2238   0011CC  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  2239   0011CE  320D               	rrcf	___aodiv@divisor^0,f,c
  2240   0011D0  2E15               	decfsz	___aodiv@counter^0,f,c
  2241   0011D2  EFAE  F008         	goto	l1904
  2242   0011D6                     l1916:
  2243   0011D6  5016               	movf	___aodiv@sign^0,w,c
  2244   0011D8  B4D8               	btfsc	status,2,c
  2245   0011DA  EFF1  F008         	goto	u1151
  2246   0011DE  EFF3  F008         	goto	u1150
  2247   0011E2                     u1151:
  2248   0011E2  EF03  F009         	goto	l1920
  2249   0011E6                     u1150:
  2250   0011E6  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  2251   0011E8  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  2252   0011EA  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  2253   0011EC  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  2254   0011EE  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  2255   0011F0  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  2256   0011F2  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  2257   0011F4  6C17               	negf	___aodiv@quotient^0,c
  2258   0011F6  0E00               	movlw	0
  2259   0011F8  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  2260   0011FA  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  2261   0011FC  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  2262   0011FE  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  2263   001200  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  2264   001202  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  2265   001204  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  2266   001206                     l1920:
  2267   001206  C017  F005         	movff	___aodiv@quotient,?___aodiv
  2268   00120A  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  2269   00120E  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  2270   001212  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  2271   001216  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  2272   00121A  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  2273   00121E  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  2274   001222  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  2275   001226  0012               	return		;funcret
  2276   001228                     __end_of___aodiv:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _sendTxBuf *****************
  2280 ;; Defined at:
  2281 ;;		line 93 in file "serial.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2299 ;;Total ram usage:        0 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 3
  2302 ;; This function calls:
  2303 ;;		_isDataInTxBuf
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text12
  2310   001A78                     __ptext12:
  2311                           	callstack 0
  2312   001A78                     _sendTxBuf:
  2313                           	callstack 27
  2314   001A78                     
  2315                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  2316   001A78  ECC3  F00D         	call	_isDataInTxBuf	;wreg free
  2317   001A7C  0900               	iorlw	0
  2318   001A7E  B4D8               	btfsc	status,2,c
  2319   001A80  EF44  F00D         	goto	u991
  2320   001A84  EF46  F00D         	goto	u990
  2321   001A88                     u991:
  2322   001A88  EF4D  F00D         	goto	l1806
  2323   001A8C                     u990:
  2324   001A8C  010E               	movlb	14	; () banked
  2325   001A8E  852D               	bsf	45,2,b	;volatile
  2326   001A90                     
  2327                           ; BSR set to: 14
  2328                           ;serial.c: 95:     DataFlag =1;}
  2329   001A90  0E01               	movlw	1
  2330   001A92  0100               	movlb	0	; () banked
  2331   001A94  6FF2               	movwf	_DataFlag& (0+255),b	;volatile
  2332   001A96  EF50  F00D         	goto	l177
  2333   001A9A                     l1806:
  2334                           
  2335                           ;serial.c: 97:         DataFlag=0;}
  2336   001A9A  0E00               	movlw	0
  2337   001A9C  0100               	movlb	0	; () banked
  2338   001A9E  6FF2               	movwf	_DataFlag& (0+255),b	;volatile
  2339   001AA0                     l177:
  2340                           
  2341                           ; BSR set to: 0
  2342   001AA0  0012               	return		;funcret
  2343   001AA2                     __end_of_sendTxBuf:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _isDataInTxBuf *****************
  2347 ;; Defined at:
  2348 ;;		line 80 in file "serial.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;		None
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      unsigned char 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2366 ;;Total ram usage:        0 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_sendTxBuf
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text13
  2377   001B86                     __ptext13:
  2378                           	callstack 0
  2379   001B86                     _isDataInTxBuf:
  2380                           	callstack 27
  2381   001B86                     
  2382                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  2383   001B86  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  2384   001B88  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  2385   001B8A  A4D8               	btfss	status,2,c
  2386   001B8C  EFCA  F00D         	goto	u931
  2387   001B90  EFCD  F00D         	goto	u930
  2388   001B94                     u931:
  2389   001B94  0E01               	movlw	1
  2390   001B96  EFCE  F00D         	goto	u940
  2391   001B9A                     u930:
  2392   001B9A  0E00               	movlw	0
  2393   001B9C                     u940:
  2394   001B9C  0012               	return		;funcret
  2395   001B9E                     __end_of_isDataInTxBuf:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _readColours *****************
  2399 ;; Defined at:
  2400 ;;		line 85 in file "color.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;  vals            2   15[COMRAM] PTR struct RGB
  2403 ;;		 -> vals(8), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;Total ram usage:        2 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 5
  2422 ;; This function calls:
  2423 ;;		_color_read_Blue
  2424 ;;		_color_read_Green
  2425 ;;		_color_read_Red
  2426 ;;		_color_read_lum
  2427 ;; This function is called by:
  2428 ;;		_main
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text14
  2433   00169E                     __ptext14:
  2434                           	callstack 0
  2435   00169E                     _readColours:
  2436                           	callstack 25
  2437   00169E                     
  2438                           ;color.c: 86:     vals ->R = color_read_Red();
  2439   00169E  ECF7  F00B         	call	_color_read_Red	;wreg free
  2440   0016A2  C010  FFD9         	movff	readColours@vals,fsr2l
  2441   0016A6  C011  FFDA         	movff	readColours@vals+1,fsr2h
  2442   0016AA  C009  FFDE         	movff	?_color_read_Red,postinc2
  2443   0016AE  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  2444                           
  2445                           ;color.c: 87:     vals ->B = color_read_Blue();
  2446   0016B2  EC47  F00C         	call	_color_read_Blue	;wreg free
  2447   0016B6  EE20 F004          	lfsr	2,4
  2448   0016BA  5010               	movf	readColours@vals^0,w,c
  2449   0016BC  26D9               	addwf	fsr2l,f,c
  2450   0016BE  5011               	movf	(readColours@vals+1)^0,w,c
  2451   0016C0  22DA               	addwfc	fsr2h,f,c
  2452   0016C2  C009  FFDE         	movff	?_color_read_Blue,postinc2
  2453   0016C6  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  2454                           
  2455                           ;color.c: 88:     vals ->G = color_read_Green();
  2456   0016CA  EC1F  F00C         	call	_color_read_Green	;wreg free
  2457   0016CE  EE20 F002          	lfsr	2,2
  2458   0016D2  5010               	movf	readColours@vals^0,w,c
  2459   0016D4  26D9               	addwf	fsr2l,f,c
  2460   0016D6  5011               	movf	(readColours@vals+1)^0,w,c
  2461   0016D8  22DA               	addwfc	fsr2h,f,c
  2462   0016DA  C009  FFDE         	movff	?_color_read_Green,postinc2
  2463   0016DE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  2464                           
  2465                           ;color.c: 89:     vals ->L = color_read_lum();
  2466   0016E2  ECCF  F00B         	call	_color_read_lum	;wreg free
  2467   0016E6  EE20 F006          	lfsr	2,6
  2468   0016EA  5010               	movf	readColours@vals^0,w,c
  2469   0016EC  26D9               	addwf	fsr2l,f,c
  2470   0016EE  5011               	movf	(readColours@vals+1)^0,w,c
  2471   0016F0  22DA               	addwfc	fsr2h,f,c
  2472   0016F2  C009  FFDE         	movff	?_color_read_lum,postinc2
  2473   0016F6  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  2474   0016FA  0012               	return		;funcret
  2475   0016FC                     __end_of_readColours:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _color_read_lum *****************
  2479 ;; Defined at:
  2480 ;;		line 29 in file "color.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;		None
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  tmp             2   13[COMRAM] unsigned int 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2    8[COMRAM] unsigned int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0, cstack
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2494 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2498 ;;Total ram usage:        7 bytes
  2499 ;; Hardware stack levels used: 1
  2500 ;; Hardware stack levels required when called: 4
  2501 ;; This function calls:
  2502 ;;		_I2C_2_Master_Read
  2503 ;;		_I2C_2_Master_RepStart
  2504 ;;		_I2C_2_Master_Start
  2505 ;;		_I2C_2_Master_Stop
  2506 ;;		_I2C_2_Master_Write
  2507 ;; This function is called by:
  2508 ;;		_readColours
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text15
  2513   00179E                     __ptext15:
  2514                           	callstack 0
  2515   00179E                     _color_read_lum:
  2516                           	callstack 25
  2517   00179E                     
  2518                           ;color.c: 31:  unsigned int tmp;;color.c: 32:  I2C_2_Master_Start();
  2519   00179E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2520                           
  2521                           ;color.c: 33:  I2C_2_Master_Write(0x52 | 0x00);
  2522   0017A2  0E52               	movlw	82
  2523   0017A4  ECD6  F00D         	call	_I2C_2_Master_Write
  2524                           
  2525                           ;color.c: 34:  I2C_2_Master_Write(0xA0 | 0x14);
  2526   0017A8  0EB4               	movlw	180
  2527   0017AA  ECD6  F00D         	call	_I2C_2_Master_Write
  2528                           
  2529                           ;color.c: 35:  I2C_2_Master_RepStart();
  2530   0017AE  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2531                           
  2532                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x01);
  2533   0017B2  0E53               	movlw	83
  2534   0017B4  ECD6  F00D         	call	_I2C_2_Master_Write
  2535                           
  2536                           ;color.c: 37:  tmp=I2C_2_Master_Read(1);
  2537   0017B8  0E01               	movlw	1
  2538   0017BA  ECB3  F00C         	call	_I2C_2_Master_Read
  2539   0017BE  6E0B               	movwf	??_color_read_lum^0,c
  2540   0017C0  500B               	movf	??_color_read_lum^0,w,c
  2541   0017C2  6E0E               	movwf	color_read_lum@tmp^0,c
  2542   0017C4  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  2543                           
  2544                           ;color.c: 38:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2545   0017C6  0E00               	movlw	0
  2546   0017C8  ECB3  F00C         	call	_I2C_2_Master_Read
  2547   0017CC  6E0B               	movwf	??_color_read_lum^0,c
  2548   0017CE  500B               	movf	??_color_read_lum^0,w,c
  2549   0017D0  6E0D               	movwf	(??_color_read_lum+2)^0,c
  2550   0017D2  6A0C               	clrf	(??_color_read_lum+1)^0,c
  2551   0017D4  500E               	movf	color_read_lum@tmp^0,w,c
  2552   0017D6  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  2553   0017D8  6E0E               	movwf	color_read_lum@tmp^0,c
  2554   0017DA  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  2555   0017DC  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  2556   0017DE  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  2557                           
  2558                           ;color.c: 39:  I2C_2_Master_Stop();
  2559   0017E0  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2560   0017E4                     
  2561                           ;color.c: 40:  return tmp;
  2562   0017E4  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  2563   0017E8  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  2564   0017EC  0012               	return		;funcret
  2565   0017EE                     __end_of_color_read_lum:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _color_read_Red *****************
  2569 ;; Defined at:
  2570 ;;		line 43 in file "color.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  tmp             2   13[COMRAM] unsigned int 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2    8[COMRAM] unsigned int 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2, status,0, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2585 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2587 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;Total ram usage:        7 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 4
  2591 ;; This function calls:
  2592 ;;		_I2C_2_Master_Read
  2593 ;;		_I2C_2_Master_RepStart
  2594 ;;		_I2C_2_Master_Start
  2595 ;;		_I2C_2_Master_Stop
  2596 ;;		_I2C_2_Master_Write
  2597 ;; This function is called by:
  2598 ;;		_readColours
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text16
  2603   0017EE                     __ptext16:
  2604                           	callstack 0
  2605   0017EE                     _color_read_Red:
  2606                           	callstack 25
  2607   0017EE                     
  2608                           ;color.c: 45:  unsigned int tmp;;color.c: 46:  I2C_2_Master_Start();
  2609   0017EE  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2610                           
  2611                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
  2612   0017F2  0E52               	movlw	82
  2613   0017F4  ECD6  F00D         	call	_I2C_2_Master_Write
  2614                           
  2615                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | 0x16);
  2616   0017F8  0EB6               	movlw	182
  2617   0017FA  ECD6  F00D         	call	_I2C_2_Master_Write
  2618                           
  2619                           ;color.c: 49:  I2C_2_Master_RepStart();
  2620   0017FE  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2621                           
  2622                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
  2623   001802  0E53               	movlw	83
  2624   001804  ECD6  F00D         	call	_I2C_2_Master_Write
  2625                           
  2626                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
  2627   001808  0E01               	movlw	1
  2628   00180A  ECB3  F00C         	call	_I2C_2_Master_Read
  2629   00180E  6E0B               	movwf	??_color_read_Red^0,c
  2630   001810  500B               	movf	??_color_read_Red^0,w,c
  2631   001812  6E0E               	movwf	color_read_Red@tmp^0,c
  2632   001814  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  2633                           
  2634                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2635   001816  0E00               	movlw	0
  2636   001818  ECB3  F00C         	call	_I2C_2_Master_Read
  2637   00181C  6E0B               	movwf	??_color_read_Red^0,c
  2638   00181E  500B               	movf	??_color_read_Red^0,w,c
  2639   001820  6E0D               	movwf	(??_color_read_Red+2)^0,c
  2640   001822  6A0C               	clrf	(??_color_read_Red+1)^0,c
  2641   001824  500E               	movf	color_read_Red@tmp^0,w,c
  2642   001826  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  2643   001828  6E0E               	movwf	color_read_Red@tmp^0,c
  2644   00182A  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  2645   00182C  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  2646   00182E  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  2647                           
  2648                           ;color.c: 53:  I2C_2_Master_Stop();
  2649   001830  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2650   001834                     
  2651                           ;color.c: 54:  return tmp;
  2652   001834  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  2653   001838  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2654   00183C  0012               	return		;funcret
  2655   00183E                     __end_of_color_read_Red:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _color_read_Green *****************
  2659 ;; Defined at:
  2660 ;;		line 56 in file "color.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  tmp             2   13[COMRAM] unsigned int 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    8[COMRAM] unsigned int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:        7 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 4
  2681 ;; This function calls:
  2682 ;;		_I2C_2_Master_Read
  2683 ;;		_I2C_2_Master_RepStart
  2684 ;;		_I2C_2_Master_Start
  2685 ;;		_I2C_2_Master_Stop
  2686 ;;		_I2C_2_Master_Write
  2687 ;; This function is called by:
  2688 ;;		_readColours
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text17
  2693   00183E                     __ptext17:
  2694                           	callstack 0
  2695   00183E                     _color_read_Green:
  2696                           	callstack 25
  2697   00183E                     
  2698                           ;color.c: 58:  unsigned int tmp;;color.c: 59:  I2C_2_Master_Start();
  2699   00183E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2700                           
  2701                           ;color.c: 60:  I2C_2_Master_Write(0x52 | 0x00);
  2702   001842  0E52               	movlw	82
  2703   001844  ECD6  F00D         	call	_I2C_2_Master_Write
  2704                           
  2705                           ;color.c: 61:  I2C_2_Master_Write(0xA0 | 0x16);
  2706   001848  0EB6               	movlw	182
  2707   00184A  ECD6  F00D         	call	_I2C_2_Master_Write
  2708                           
  2709                           ;color.c: 62:  I2C_2_Master_RepStart();
  2710   00184E  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2711                           
  2712                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x01);
  2713   001852  0E53               	movlw	83
  2714   001854  ECD6  F00D         	call	_I2C_2_Master_Write
  2715                           
  2716                           ;color.c: 64:  tmp=I2C_2_Master_Read(1);
  2717   001858  0E01               	movlw	1
  2718   00185A  ECB3  F00C         	call	_I2C_2_Master_Read
  2719   00185E  6E0B               	movwf	??_color_read_Green^0,c
  2720   001860  500B               	movf	??_color_read_Green^0,w,c
  2721   001862  6E0E               	movwf	color_read_Green@tmp^0,c
  2722   001864  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  2723                           
  2724                           ;color.c: 65:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2725   001866  0E00               	movlw	0
  2726   001868  ECB3  F00C         	call	_I2C_2_Master_Read
  2727   00186C  6E0B               	movwf	??_color_read_Green^0,c
  2728   00186E  500B               	movf	??_color_read_Green^0,w,c
  2729   001870  6E0D               	movwf	(??_color_read_Green+2)^0,c
  2730   001872  6A0C               	clrf	(??_color_read_Green+1)^0,c
  2731   001874  500E               	movf	color_read_Green@tmp^0,w,c
  2732   001876  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  2733   001878  6E0E               	movwf	color_read_Green@tmp^0,c
  2734   00187A  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  2735   00187C  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  2736   00187E  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  2737                           
  2738                           ;color.c: 66:  I2C_2_Master_Stop();
  2739   001880  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2740   001884                     
  2741                           ;color.c: 67:  return tmp;
  2742   001884  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  2743   001888  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2744   00188C  0012               	return		;funcret
  2745   00188E                     __end_of_color_read_Green:
  2746                           	callstack 0
  2747                           
  2748 ;; *************** function _color_read_Blue *****************
  2749 ;; Defined at:
  2750 ;;		line 70 in file "color.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;  tmp             2   13[COMRAM] unsigned int 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  2    8[COMRAM] unsigned int 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;Total ram usage:        7 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 4
  2771 ;; This function calls:
  2772 ;;		_I2C_2_Master_Read
  2773 ;;		_I2C_2_Master_RepStart
  2774 ;;		_I2C_2_Master_Start
  2775 ;;		_I2C_2_Master_Stop
  2776 ;;		_I2C_2_Master_Write
  2777 ;; This function is called by:
  2778 ;;		_readColours
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text18
  2783   00188E                     __ptext18:
  2784                           	callstack 0
  2785   00188E                     _color_read_Blue:
  2786                           	callstack 25
  2787   00188E                     
  2788                           ;color.c: 72:  unsigned int tmp;;color.c: 73:  I2C_2_Master_Start();
  2789   00188E  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  2790                           
  2791                           ;color.c: 74:  I2C_2_Master_Write(0x52 | 0x00);
  2792   001892  0E52               	movlw	82
  2793   001894  ECD6  F00D         	call	_I2C_2_Master_Write
  2794                           
  2795                           ;color.c: 75:  I2C_2_Master_Write(0xA0 | 0x1A);
  2796   001898  0EBA               	movlw	186
  2797   00189A  ECD6  F00D         	call	_I2C_2_Master_Write
  2798                           
  2799                           ;color.c: 76:  I2C_2_Master_RepStart();
  2800   00189E  ECDC  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2801                           
  2802                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x01);
  2803   0018A2  0E53               	movlw	83
  2804   0018A4  ECD6  F00D         	call	_I2C_2_Master_Write
  2805                           
  2806                           ;color.c: 78:  tmp=I2C_2_Master_Read(1);
  2807   0018A8  0E01               	movlw	1
  2808   0018AA  ECB3  F00C         	call	_I2C_2_Master_Read
  2809   0018AE  6E0B               	movwf	??_color_read_Blue^0,c
  2810   0018B0  500B               	movf	??_color_read_Blue^0,w,c
  2811   0018B2  6E0E               	movwf	color_read_Blue@tmp^0,c
  2812   0018B4  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  2813                           
  2814                           ;color.c: 79:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2815   0018B6  0E00               	movlw	0
  2816   0018B8  ECB3  F00C         	call	_I2C_2_Master_Read
  2817   0018BC  6E0B               	movwf	??_color_read_Blue^0,c
  2818   0018BE  500B               	movf	??_color_read_Blue^0,w,c
  2819   0018C0  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  2820   0018C2  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  2821   0018C4  500E               	movf	color_read_Blue@tmp^0,w,c
  2822   0018C6  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  2823   0018C8  6E0E               	movwf	color_read_Blue@tmp^0,c
  2824   0018CA  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  2825   0018CC  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  2826   0018CE  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  2827                           
  2828                           ;color.c: 80:  I2C_2_Master_Stop();
  2829   0018D0  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2830   0018D4                     
  2831                           ;color.c: 81:  return tmp;
  2832   0018D4  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  2833   0018D8  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2834   0018DC  0012               	return		;funcret
  2835   0018DE                     __end_of_color_read_Blue:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _I2C_2_Master_RepStart *****************
  2839 ;; Defined at:
  2840 ;;		line 33 in file "i2c.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 3
  2861 ;; This function calls:
  2862 ;;		_I2C_2_Master_Idle
  2863 ;; This function is called by:
  2864 ;;		_color_read_lum
  2865 ;;		_color_read_Red
  2866 ;;		_color_read_Green
  2867 ;;		_color_read_Blue
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           
  2871                           	psect	text19
  2872   001BB8                     __ptext19:
  2873                           	callstack 0
  2874   001BB8                     _I2C_2_Master_RepStart:
  2875                           	callstack 25
  2876   001BB8                     
  2877                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2878   001BB8  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2879   001BBC                     
  2880                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2881   001BBC  010E               	movlb	14	; () banked
  2882   001BBE  83DA               	bsf	218,1,b	;volatile
  2883   001BC0                     
  2884                           ; BSR set to: 14
  2885   001BC0  0012               	return		;funcret
  2886   001BC2                     __end_of_I2C_2_Master_RepStart:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _I2C_2_Master_Read *****************
  2890 ;; Defined at:
  2891 ;;		line 51 in file "i2c.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  ack             1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  ack             1    6[COMRAM] unsigned char 
  2896 ;;  tmp             1    7[COMRAM] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      unsigned char 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;Total ram usage:        3 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 3
  2913 ;; This function calls:
  2914 ;;		_I2C_2_Master_Idle
  2915 ;; This function is called by:
  2916 ;;		_color_read_lum
  2917 ;;		_color_read_Red
  2918 ;;		_color_read_Green
  2919 ;;		_color_read_Blue
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text20
  2924   001966                     __ptext20:
  2925                           	callstack 0
  2926   001966                     _I2C_2_Master_Read:
  2927                           	callstack 25
  2928                           
  2929                           ; BSR set to: 14
  2930                           ;incstack = 0
  2931                           ;I2C_2_Master_Read@ack stored from wreg
  2932   001966  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  2933   001968                     
  2934                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2935   001968  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2936   00196C                     
  2937                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2938   00196C  010E               	movlb	14	; () banked
  2939   00196E  87DA               	bsf	218,3,b	;volatile
  2940                           
  2941                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2942   001970  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2943   001974                     
  2944                           ;i2c.c: 57:   tmp = SSP2BUF;
  2945   001974  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2946                           
  2947                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2948   001978  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  2949   00197C                     
  2950                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2951   00197C  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  2952   00197E  B4D8               	btfsc	status,2,c
  2953   001980  EFC4  F00C         	goto	u871
  2954   001984  EFC8  F00C         	goto	u870
  2955   001988                     u871:
  2956   001988  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2957   00198A  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  2958   00198C  EFC9  F00C         	goto	u888
  2959   001990                     u870:
  2960   001990  6A06               	clrf	??_I2C_2_Master_Read^0,c
  2961   001992                     u888:
  2962   001992  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  2963   001994  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  2964   001996  010E               	movlb	14	; () banked
  2965   001998  51DA               	movf	218,w,b	;volatile
  2966   00199A  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2967   00199C  0BDF               	andlw	-33
  2968   00199E  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  2969   0019A0  6FDA               	movwf	218,b	;volatile
  2970   0019A2                     
  2971                           ; BSR set to: 14
  2972                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2973   0019A2  89DA               	bsf	218,4,b	;volatile
  2974   0019A4                     
  2975                           ; BSR set to: 14
  2976                           ;i2c.c: 61:   return tmp;
  2977   0019A4  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  2978   0019A6                     
  2979                           ; BSR set to: 14
  2980   0019A6  0012               	return		;funcret
  2981   0019A8                     __end_of_I2C_2_Master_Read:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _initUSART4 *****************
  2985 ;; Defined at:
  2986 ;;		line 4 in file "serial.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;		None
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;		None
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  1    wreg      void 
  2993 ;; Registers used:
  2994 ;;		wreg, status,2
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3004 ;;Total ram usage:        0 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 2
  3007 ;; This function calls:
  3008 ;;		Nothing
  3009 ;; This function is called by:
  3010 ;;		_main
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text21
  3015   001B68                     __ptext21:
  3016                           	callstack 0
  3017   001B68                     _initUSART4:
  3018                           	callstack 28
  3019   001B68                     
  3020                           ;serial.c: 5:     RC0PPS = 0x12;
  3021   001B68  0E12               	movlw	18
  3022   001B6A  010E               	movlb	14	; () banked
  3023   001B6C  6F62               	movwf	98,b	;volatile
  3024                           
  3025                           ;serial.c: 6:     RX4PPS = 0x11;
  3026   001B6E  0E11               	movlw	17
  3027   001B70  6F15               	movwf	21,b	;volatile
  3028   001B72                     
  3029                           ; BSR set to: 14
  3030                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  3031   001B72  97E9               	bcf	233,3,b	;volatile
  3032   001B74                     
  3033                           ; BSR set to: 14
  3034                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  3035   001B74  95E8               	bcf	232,2,b	;volatile
  3036                           
  3037                           ;serial.c: 9:     SP4BRGL = 51;
  3038   001B76  0E33               	movlw	51
  3039   001B78  6FE5               	movwf	229,b	;volatile
  3040                           
  3041                           ;serial.c: 10:     SP4BRGH = 0;
  3042   001B7A  0E00               	movlw	0
  3043   001B7C  6FE6               	movwf	230,b	;volatile
  3044   001B7E                     
  3045                           ; BSR set to: 14
  3046                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  3047   001B7E  89E7               	bsf	231,4,b	;volatile
  3048   001B80                     
  3049                           ; BSR set to: 14
  3050                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  3051   001B80  8BE8               	bsf	232,5,b	;volatile
  3052   001B82                     
  3053                           ; BSR set to: 14
  3054                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  3055   001B82  8FE7               	bsf	231,7,b	;volatile
  3056   001B84                     
  3057                           ; BSR set to: 14
  3058   001B84  0012               	return		;funcret
  3059   001B86                     __end_of_initUSART4:
  3060                           	callstack 0
  3061                           
  3062 ;; *************** function _color_click_init *****************
  3063 ;; Defined at:
  3064 ;;		line 5 in file "color.c"
  3065 ;; Parameters:    Size  Location     Type
  3066 ;;		None
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;		None
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  1    wreg      void 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, cstack
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;Total ram usage:        1 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; Hardware stack levels required when called: 5
  3085 ;; This function calls:
  3086 ;;		_I2C_2_Master_Init
  3087 ;;		_color_writetoaddr
  3088 ;; This function is called by:
  3089 ;;		_main
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text22
  3094   0019E8                     __ptext22:
  3095                           	callstack 0
  3096   0019E8                     _color_click_init:
  3097                           	callstack 25
  3098   0019E8                     
  3099                           ;color.c: 8:     I2C_2_Master_Init();
  3100   0019E8  EC51  F00D         	call	_I2C_2_Master_Init	;wreg free
  3101   0019EC                     
  3102                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3103   0019EC  0E01               	movlw	1
  3104   0019EE  6E07               	movwf	color_writetoaddr@value^0,c
  3105   0019F0  0E00               	movlw	0
  3106   0019F2  ECA4  F00D         	call	_color_writetoaddr
  3107   0019F6                     
  3108                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3109   0019F6  0E3F               	movlw	63
  3110   0019F8  6E09               	movwf	??_color_click_init^0,c
  3111   0019FA  0E55               	movlw	85
  3112   0019FC                     u1407:
  3113   0019FC  2EE8               	decfsz	wreg,f,c
  3114   0019FE  D7FE               	bra	u1407
  3115   001A00  2E09               	decfsz	??_color_click_init^0,f,c
  3116   001A02  D7FC               	bra	u1407
  3117   001A04  F000               	nop	
  3118   001A06                     
  3119                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3120   001A06  0E03               	movlw	3
  3121   001A08  6E07               	movwf	color_writetoaddr@value^0,c
  3122   001A0A  0E00               	movlw	0
  3123   001A0C  ECA4  F00D         	call	_color_writetoaddr
  3124   001A10                     
  3125                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3126   001A10  0ED5               	movlw	213
  3127   001A12  6E07               	movwf	color_writetoaddr@value^0,c
  3128   001A14  0E01               	movlw	1
  3129   001A16  ECA4  F00D         	call	_color_writetoaddr
  3130   001A1A  0012               	return		;funcret
  3131   001A1C                     __end_of_color_click_init:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _color_writetoaddr *****************
  3135 ;; Defined at:
  3136 ;;		line 21 in file "color.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  address         1    wreg     unsigned char 
  3139 ;;  value           1    6[COMRAM] unsigned char 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  address         1    7[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, status,2, status,0, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3154 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3155 ;;Total ram usage:        2 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 4
  3158 ;; This function calls:
  3159 ;;		_I2C_2_Master_Start
  3160 ;;		_I2C_2_Master_Stop
  3161 ;;		_I2C_2_Master_Write
  3162 ;; This function is called by:
  3163 ;;		_color_click_init
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text23
  3168   001B48                     __ptext23:
  3169                           	callstack 0
  3170   001B48                     _color_writetoaddr:
  3171                           	callstack 25
  3172                           
  3173                           ;incstack = 0
  3174                           ;color_writetoaddr@address stored from wreg
  3175   001B48  6E08               	movwf	color_writetoaddr@address^0,c
  3176   001B4A                     
  3177                           ;color.c: 22:     I2C_2_Master_Start();
  3178   001B4A  ECE6  F00D         	call	_I2C_2_Master_Start	;wreg free
  3179                           
  3180                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3181   001B4E  0E52               	movlw	82
  3182   001B50  ECD6  F00D         	call	_I2C_2_Master_Write
  3183                           
  3184                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3185   001B54  5008               	movf	color_writetoaddr@address^0,w,c
  3186   001B56  0980               	iorlw	128
  3187   001B58  ECD6  F00D         	call	_I2C_2_Master_Write
  3188                           
  3189                           ;color.c: 25:     I2C_2_Master_Write(value);
  3190   001B5C  5007               	movf	color_writetoaddr@value^0,w,c
  3191   001B5E  ECD6  F00D         	call	_I2C_2_Master_Write
  3192                           
  3193                           ;color.c: 26:     I2C_2_Master_Stop();
  3194   001B62  ECE1  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3195   001B66  0012               	return		;funcret
  3196   001B68                     __end_of_color_writetoaddr:
  3197                           	callstack 0
  3198                           
  3199 ;; *************** function _I2C_2_Master_Write *****************
  3200 ;; Defined at:
  3201 ;;		line 45 in file "i2c.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  data_byte       1    wreg     unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  data_byte       1    5[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0, cstack
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used: 1
  3221 ;; Hardware stack levels required when called: 3
  3222 ;; This function calls:
  3223 ;;		_I2C_2_Master_Idle
  3224 ;; This function is called by:
  3225 ;;		_color_writetoaddr
  3226 ;;		_color_read_lum
  3227 ;;		_color_read_Red
  3228 ;;		_color_read_Green
  3229 ;;		_color_read_Blue
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text24
  3234   001BAC                     __ptext24:
  3235                           	callstack 0
  3236   001BAC                     _I2C_2_Master_Write:
  3237                           	callstack 25
  3238                           
  3239                           ;incstack = 0
  3240                           ;I2C_2_Master_Write@data_byte stored from wreg
  3241   001BAC  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  3242   001BAE                     
  3243                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3244   001BAE  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3245   001BB2                     
  3246                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3247   001BB2  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3248   001BB6  0012               	return		;funcret
  3249   001BB8                     __end_of_I2C_2_Master_Write:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _I2C_2_Master_Stop *****************
  3253 ;; Defined at:
  3254 ;;		line 39 in file "i2c.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 3
  3275 ;; This function calls:
  3276 ;;		_I2C_2_Master_Idle
  3277 ;; This function is called by:
  3278 ;;		_color_writetoaddr
  3279 ;;		_color_read_lum
  3280 ;;		_color_read_Red
  3281 ;;		_color_read_Green
  3282 ;;		_color_read_Blue
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text25
  3287   001BC2                     __ptext25:
  3288                           	callstack 0
  3289   001BC2                     _I2C_2_Master_Stop:
  3290                           	callstack 25
  3291   001BC2                     
  3292                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3293   001BC2  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3294   001BC6                     
  3295                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3296   001BC6  010E               	movlb	14	; () banked
  3297   001BC8  85DA               	bsf	218,2,b	;volatile
  3298   001BCA                     
  3299                           ; BSR set to: 14
  3300   001BCA  0012               	return		;funcret
  3301   001BCC                     __end_of_I2C_2_Master_Stop:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _I2C_2_Master_Start *****************
  3305 ;; Defined at:
  3306 ;;		line 27 in file "i2c.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 3
  3327 ;; This function calls:
  3328 ;;		_I2C_2_Master_Idle
  3329 ;; This function is called by:
  3330 ;;		_color_writetoaddr
  3331 ;;		_color_read_lum
  3332 ;;		_color_read_Red
  3333 ;;		_color_read_Green
  3334 ;;		_color_read_Blue
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text26
  3339   001BCC                     __ptext26:
  3340                           	callstack 0
  3341   001BCC                     _I2C_2_Master_Start:
  3342                           	callstack 25
  3343   001BCC                     
  3344                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3345   001BCC  EC90  F00D         	call	_I2C_2_Master_Idle	;wreg free
  3346   001BD0                     
  3347                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3348   001BD0  010E               	movlb	14	; () banked
  3349   001BD2  81DA               	bsf	218,0,b	;volatile
  3350   001BD4                     
  3351                           ; BSR set to: 14
  3352   001BD4  0012               	return		;funcret
  3353   001BD6                     __end_of_I2C_2_Master_Start:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _I2C_2_Master_Idle *****************
  3357 ;; Defined at:
  3358 ;;		line 22 in file "i2c.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;Total ram usage:        1 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 2
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_I2C_2_Master_Start
  3383 ;;		_I2C_2_Master_RepStart
  3384 ;;		_I2C_2_Master_Stop
  3385 ;;		_I2C_2_Master_Write
  3386 ;;		_I2C_2_Master_Read
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text27
  3391   001B20                     __ptext27:
  3392                           	callstack 0
  3393   001B20                     _I2C_2_Master_Idle:
  3394                           	callstack 25
  3395   001B20                     l69:
  3396   001B20  010E               	movlb	14	; () banked
  3397   001B22  B5D8               	btfsc	216,2,b	;volatile
  3398   001B24  EF96  F00D         	goto	u751
  3399   001B28  EF98  F00D         	goto	u750
  3400   001B2C                     u751:
  3401   001B2C  EF90  F00D         	goto	l69
  3402   001B30                     u750:
  3403   001B30                     
  3404                           ; BSR set to: 14
  3405   001B30  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3406   001B34  0E1F               	movlw	31
  3407   001B36  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  3408   001B38  A4D8               	btfss	status,2,c
  3409   001B3A  EFA1  F00D         	goto	u761
  3410   001B3E  EFA3  F00D         	goto	u760
  3411   001B42                     u761:
  3412   001B42  EF90  F00D         	goto	l69
  3413   001B46                     u760:
  3414   001B46                     
  3415                           ; BSR set to: 14
  3416   001B46  0012               	return		;funcret
  3417   001B48                     __end_of_I2C_2_Master_Idle:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _I2C_2_Master_Init *****************
  3421 ;; Defined at:
  3422 ;;		line 4 in file "i2c.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; Hardware stack levels required when called: 2
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_color_click_init
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text28
  3452   001AA2                     __ptext28:
  3453                           	callstack 0
  3454   001AA2                     _I2C_2_Master_Init:
  3455                           	callstack 27
  3456   001AA2                     
  3457                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3458   001AA2  010E               	movlb	14	; () banked
  3459   001AA4  51D9               	movf	217,w,b	;volatile
  3460   001AA6  0BF0               	andlw	-16
  3461   001AA8  0908               	iorlw	8
  3462   001AAA  6FD9               	movwf	217,b	;volatile
  3463   001AAC                     
  3464                           ; BSR set to: 14
  3465                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3466   001AAC  8BD9               	bsf	217,5,b	;volatile
  3467                           
  3468                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3469   001AAE  0E9F               	movlw	159
  3470   001AB0  6FD6               	movwf	214,b	;volatile
  3471   001AB2                     
  3472                           ; BSR set to: 14
  3473                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3474   001AB2  8A84               	bsf	132,5,c	;volatile
  3475   001AB4                     
  3476                           ; BSR set to: 14
  3477                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3478   001AB4  8C84               	bsf	132,6,c	;volatile
  3479   001AB6                     
  3480                           ; BSR set to: 14
  3481                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3482   001AB6  9BA7               	bcf	167,5,b	;volatile
  3483   001AB8                     
  3484                           ; BSR set to: 14
  3485                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3486   001AB8  9DA7               	bcf	167,6,b	;volatile
  3487                           
  3488                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3489   001ABA  0E1D               	movlw	29
  3490   001ABC  6F1D               	movwf	29,b	;volatile
  3491                           
  3492                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3493   001ABE  0E1E               	movlw	30
  3494   001AC0  6F1C               	movwf	28,b	;volatile
  3495                           
  3496                           ;i2c.c: 18:   RD5PPS=0x1C;
  3497   001AC2  0E1C               	movlw	28
  3498   001AC4  6F6F               	movwf	111,b	;volatile
  3499                           
  3500                           ;i2c.c: 19:   RD6PPS=0x1B;
  3501   001AC6  0E1B               	movlw	27
  3502   001AC8  6F70               	movwf	112,b	;volatile
  3503   001ACA                     
  3504                           ; BSR set to: 14
  3505   001ACA  0012               	return		;funcret
  3506   001ACC                     __end_of_I2C_2_Master_Init:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _TxBufferedString *****************
  3510 ;; Defined at:
  3511 ;;		line 85 in file "serial.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  string          2    5[COMRAM] PTR unsigned char 
  3514 ;;		 -> main@buf(50), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3526 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;Total ram usage:        2 bytes
  3531 ;; Hardware stack levels used: 1
  3532 ;; Hardware stack levels required when called: 3
  3533 ;; This function calls:
  3534 ;;		_putCharToTxBuf
  3535 ;; This function is called by:
  3536 ;;		_main
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text29
  3541   001A1C                     __ptext29:
  3542                           	callstack 0
  3543   001A1C                     _TxBufferedString:
  3544                           	callstack 27
  3545   001A1C                     
  3546                           ;serial.c: 86:  while (*string!=0){
  3547   001A1C  EF19  F00D         	goto	l1798
  3548   001A20                     l1794:
  3549                           
  3550                           ;serial.c: 87:         putCharToTxBuf(*string++);
  3551   001A20  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3552   001A24  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3553   001A28  50DF               	movf	indf2,w,c
  3554   001A2A  EC66  F00D         	call	_putCharToTxBuf
  3555   001A2E  4A06               	infsnz	TxBufferedString@string^0,f,c
  3556   001A30  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  3557   001A32                     l1798:
  3558                           
  3559                           ;serial.c: 86:  while (*string!=0){
  3560   001A32  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  3561   001A36  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  3562   001A3A  50DF               	movf	indf2,w,c
  3563   001A3C  A4D8               	btfss	status,2,c
  3564   001A3E  EF23  F00D         	goto	u981
  3565   001A42  EF25  F00D         	goto	u980
  3566   001A46                     u981:
  3567   001A46  EF10  F00D         	goto	l1794
  3568   001A4A                     u980:
  3569   001A4A  0012               	return		;funcret
  3570   001A4C                     __end_of_TxBufferedString:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _putCharToTxBuf *****************
  3574 ;; Defined at:
  3575 ;;		line 72 in file "serial.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  byte            1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  byte            1    4[COMRAM] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  1    wreg      void 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3593 ;;Total ram usage:        1 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 2
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		_TxBufferedString
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text30
  3604   001ACC                     __ptext30:
  3605                           	callstack 0
  3606   001ACC                     _putCharToTxBuf:
  3607                           	callstack 27
  3608                           
  3609                           ;incstack = 0
  3610                           ;putCharToTxBuf@byte stored from wreg
  3611   001ACC  6E05               	movwf	putCharToTxBuf@byte^0,c
  3612   001ACE                     
  3613                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  3614   001ACE  0E3B               	movlw	59
  3615   001AD0  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  3616   001AD2  EF6D  F00D         	goto	u921
  3617   001AD6  EF6F  F00D         	goto	u920
  3618   001ADA                     u921:
  3619   001ADA  EF71  F00D         	goto	l1734
  3620   001ADE                     u920:
  3621   001ADE  0E00               	movlw	0
  3622   001AE0  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  3623   001AE2                     l1734:
  3624                           
  3625                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  3626   001AE2  0E00               	movlw	low _EUSART4TXbuf
  3627   001AE4  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  3628   001AE6  6ED9               	movwf	fsr2l,c
  3629   001AE8  6ADA               	clrf	fsr2h,c
  3630   001AEA  0E01               	movlw	high _EUSART4TXbuf
  3631   001AEC  22DA               	addwfc	fsr2h,f,c
  3632   001AEE  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  3633   001AF2  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  3634   001AF4  0012               	return		;funcret
  3635   001AF6                     __end_of_putCharToTxBuf:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _Interrupts_init *****************
  3639 ;; Defined at:
  3640 ;;		line 10 in file "interrupts.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		None
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;Total ram usage:        0 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 2
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_main
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           	psect	text31
  3669   001B9E                     __ptext31:
  3670                           	callstack 0
  3671   001B9E                     _Interrupts_init:
  3672                           	callstack 28
  3673   001B9E                     
  3674                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  3675   001B9E  9AF2               	bcf	242,5,c	;volatile
  3676                           
  3677                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  3678   001BA0  010E               	movlb	14	; () banked
  3679   001BA2  812B               	bsf	43,0,b	;volatile
  3680                           
  3681                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  3682   001BA4  8CF2               	bsf	242,6,c	;volatile
  3683                           
  3684                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  3685   001BA6  8EF2               	bsf	242,7,c	;volatile
  3686                           
  3687                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  3688   001BA8  872D               	bsf	45,3,b	;volatile
  3689   001BAA                     
  3690                           ; BSR set to: 14
  3691   001BAA  0012               	return		;funcret
  3692   001BAC                     __end_of_Interrupts_init:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _HighISR *****************
  3696 ;; Defined at:
  3697 ;;		line 25 in file "interrupts.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		_getCharFromTxBuf
  3720 ;;		_putCharToRxBuf
  3721 ;; This function is called by:
  3722 ;;		Interrupt level 2
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	intcode
  3727   000008                     __pintcode:
  3728                           	callstack 0
  3729   000008                     _HighISR:
  3730                           	callstack 21
  3731                           
  3732                           ; BSR set to: 14
  3733                           ;incstack = 0
  3734   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3735   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  3736   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  3737   000012                     
  3738                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  3739   000012  010E               	movlb	14	; () banked
  3740   000014  A537               	btfss	55,2,b	;volatile
  3741   000016  EF0F  F000         	goto	i2u101_41
  3742   00001A  EF11  F000         	goto	i2u101_40
  3743   00001E                     i2u101_41:
  3744   00001E  EF15  F000         	goto	i2l216
  3745   000022                     i2u101_40:
  3746   000022                     
  3747                           ; BSR set to: 14
  3748                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  3749   000022  EC26  F00D         	call	_getCharFromTxBuf	;wreg free
  3750   000026  010E               	movlb	14	; () banked
  3751   000028  6FE4               	movwf	228,b	;volatile
  3752   00002A                     i2l216:
  3753                           
  3754                           ; BSR set to: 14
  3755                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  3756   00002A  A737               	btfss	55,3,b	;volatile
  3757   00002C  EF1A  F000         	goto	i2u102_41
  3758   000030  EF1C  F000         	goto	i2u102_40
  3759   000034                     i2u102_41:
  3760   000034  EF1F  F000         	goto	i2l218
  3761   000038                     i2u102_40:
  3762   000038                     
  3763                           ; BSR set to: 14
  3764                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  3765   000038  51E3               	movf	227,w,b	;volatile
  3766   00003A  EC7B  F00D         	call	_putCharToRxBuf
  3767   00003E                     i2l218:
  3768   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  3769   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  3770   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3771   000048  0011               	retfie		f
  3772   00004A                     __end_of_HighISR:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _putCharToRxBuf *****************
  3776 ;; Defined at:
  3777 ;;		line 52 in file "serial.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  byte            1    wreg     unsigned char 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  byte            1    0[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;Total ram usage:        1 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; This function calls:
  3798 ;;		Nothing
  3799 ;; This function is called by:
  3800 ;;		_HighISR
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text33
  3805   001AF6                     __ptext33:
  3806                           	callstack 0
  3807   001AF6                     _putCharToRxBuf:
  3808                           	callstack 21
  3809                           
  3810                           ;incstack = 0
  3811                           ;putCharToRxBuf@byte stored from wreg
  3812   001AF6  6E01               	movwf	putCharToRxBuf@byte^0,c
  3813   001AF8                     
  3814                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  3815   001AF8  0E13               	movlw	19
  3816   001AFA  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  3817   001AFC  EF82  F00D         	goto	i2u96_41
  3818   001B00  EF84  F00D         	goto	i2u96_40
  3819   001B04                     i2u96_41:
  3820   001B04  EF86  F00D         	goto	i2l1780
  3821   001B08                     i2u96_40:
  3822   001B08  0E00               	movlw	0
  3823   001B0A  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  3824   001B0C                     i2l1780:
  3825                           
  3826                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  3827   001B0C  0EB1               	movlw	low _EUSART4RXbuf
  3828   001B0E  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  3829   001B10  6ED9               	movwf	fsr2l,c
  3830   001B12  6ADA               	clrf	fsr2h,c
  3831   001B14  0E00               	movlw	high _EUSART4RXbuf
  3832   001B16  22DA               	addwfc	fsr2h,f,c
  3833   001B18  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  3834   001B1C  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  3835   001B1E  0012               	return		;funcret
  3836   001B20                     __end_of_putCharToRxBuf:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _getCharFromTxBuf *****************
  3840 ;; Defined at:
  3841 ;;		line 66 in file "serial.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      unsigned char 
  3848 ;; Registers used:
  3849 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;Total ram usage:        2 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; This function calls:
  3862 ;;		Nothing
  3863 ;; This function is called by:
  3864 ;;		_HighISR
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text34
  3869   001A4C                     __ptext34:
  3870                           	callstack 0
  3871   001A4C                     _getCharFromTxBuf:
  3872                           	callstack 21
  3873   001A4C                     
  3874                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  3875   001A4C  0E3B               	movlw	59
  3876   001A4E  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  3877   001A50  EF2C  F00D         	goto	i2u97_41
  3878   001A54  EF2E  F00D         	goto	i2u97_40
  3879   001A58                     i2u97_41:
  3880   001A58  EF30  F00D         	goto	i2l1788
  3881   001A5C                     i2u97_40:
  3882   001A5C  0E00               	movlw	0
  3883   001A5E  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  3884   001A60                     i2l1788:
  3885                           
  3886                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  3887   001A60  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  3888   001A62  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  3889   001A64  6E01               	movwf	??_getCharFromTxBuf^0,c
  3890   001A66  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  3891   001A68  0E00               	movlw	low _EUSART4TXbuf
  3892   001A6A  2401               	addwf	??_getCharFromTxBuf^0,w,c
  3893   001A6C  6ED9               	movwf	fsr2l,c
  3894   001A6E  0E01               	movlw	high _EUSART4TXbuf
  3895   001A70  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  3896   001A72  6EDA               	movwf	fsr2h,c
  3897   001A74  50DF               	movf	indf2,w,c
  3898   001A76  0012               	return		;funcret
  3899   001A78                     __end_of_getCharFromTxBuf:
  3900                           	callstack 0
  3901                           
  3902                           	psect	rparam
  3903   000000                     
  3904                           	psect	temp
  3905   00005B                     btemp:
  3906                           	callstack 0
  3907   00005B                     	ds	1
  3908   000000                     int$flags	set	btemp
  3909   000000                     wtemp8	set	btemp+1
  3910   000000                     ttemp5	set	btemp+1
  3911   000000                     ttemp6	set	btemp+4
  3912   000000                     ttemp7	set	btemp+8
  3913                           
  3914                           	psect	idloc
  3915                           
  3916                           ;Config register IDLOC0 @ 0x200000
  3917                           ;	unspecified, using default values
  3918   200000                     	org	2097152
  3919   200000  0FFF               	dw	4095
  3920                           
  3921                           ;Config register IDLOC1 @ 0x200002
  3922                           ;	unspecified, using default values
  3923   200002                     	org	2097154
  3924   200002  0FFF               	dw	4095
  3925                           
  3926                           ;Config register IDLOC2 @ 0x200004
  3927                           ;	unspecified, using default values
  3928   200004                     	org	2097156
  3929   200004  0FFF               	dw	4095
  3930                           
  3931                           ;Config register IDLOC3 @ 0x200006
  3932                           ;	unspecified, using default values
  3933   200006                     	org	2097158
  3934   200006  0FFF               	dw	4095
  3935                           
  3936                           ;Config register IDLOC4 @ 0x200008
  3937                           ;	unspecified, using default values
  3938   200008                     	org	2097160
  3939   200008  0FFF               	dw	4095
  3940                           
  3941                           ;Config register IDLOC5 @ 0x20000A
  3942                           ;	unspecified, using default values
  3943   20000A                     	org	2097162
  3944   20000A  0FFF               	dw	4095
  3945                           
  3946                           ;Config register IDLOC6 @ 0x20000C
  3947                           ;	unspecified, using default values
  3948   20000C                     	org	2097164
  3949   20000C  0FFF               	dw	4095
  3950                           
  3951                           ;Config register IDLOC7 @ 0x20000E
  3952                           ;	unspecified, using default values
  3953   20000E                     	org	2097166
  3954   20000E  0FFF               	dw	4095
  3955                           
  3956                           	psect	config
  3957                           
  3958                           ;Config register CONFIG1L @ 0x300000
  3959                           ;	External Oscillator mode Selection bits
  3960                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3961                           ;	Power-up default value for COSC bits
  3962                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3963   300000                     	org	3145728
  3964   300000  AA                 	db	170
  3965                           
  3966                           ;Config register CONFIG1H @ 0x300001
  3967                           ;	unspecified, using default values
  3968                           ;	Clock Out Enable bit
  3969                           ;	CLKOUTEN = 0x1, unprogrammed default
  3970                           ;	Clock Switch Enable bit
  3971                           ;	CSWEN = 0x1, unprogrammed default
  3972                           ;	Fail-Safe Clock Monitor Enable bit
  3973                           ;	FCMEN = 0x1, unprogrammed default
  3974   300001                     	org	3145729
  3975   300001  FF                 	db	255
  3976                           
  3977                           ;Config register CONFIG2L @ 0x300002
  3978                           ;	unspecified, using default values
  3979                           ;	Master Clear Enable bit
  3980                           ;	MCLRE = 0x1, unprogrammed default
  3981                           ;	Power-up Timer Enable bit
  3982                           ;	PWRTE = 0x1, unprogrammed default
  3983                           ;	Low-power BOR enable bit
  3984                           ;	LPBOREN = 0x1, unprogrammed default
  3985                           ;	Brown-out Reset Enable bits
  3986                           ;	BOREN = 0x3, unprogrammed default
  3987   300002                     	org	3145730
  3988   300002  FF                 	db	255
  3989                           
  3990                           ;Config register CONFIG2H @ 0x300003
  3991                           ;	unspecified, using default values
  3992                           ;	Brown Out Reset Voltage selection bits
  3993                           ;	BORV = 0x3, unprogrammed default
  3994                           ;	ZCD Disable bit
  3995                           ;	ZCD = 0x1, unprogrammed default
  3996                           ;	PPSLOCK bit One-Way Set Enable bit
  3997                           ;	PPS1WAY = 0x1, unprogrammed default
  3998                           ;	Stack Full/Underflow Reset Enable bit
  3999                           ;	STVREN = 0x1, unprogrammed default
  4000                           ;	Debugger Enable bit
  4001                           ;	DEBUG = 0x1, unprogrammed default
  4002                           ;	Extended Instruction Set Enable bit
  4003                           ;	XINST = 0x1, unprogrammed default
  4004   300003                     	org	3145731
  4005   300003  FF                 	db	255
  4006                           
  4007                           ;Config register CONFIG3L @ 0x300004
  4008                           ;	WDT Period Select bits
  4009                           ;	WDTCPS = 0x1F, unprogrammed default
  4010                           ;	WDT operating mode
  4011                           ;	WDTE = OFF, WDT Disabled
  4012   300004                     	org	3145732
  4013   300004  9F                 	db	159
  4014                           
  4015                           ;Config register CONFIG3H @ 0x300005
  4016                           ;	unspecified, using default values
  4017                           ;	WDT Window Select bits
  4018                           ;	WDTCWS = 0x7, unprogrammed default
  4019                           ;	WDT input clock selector
  4020                           ;	WDTCCS = 0x7, unprogrammed default
  4021   300005                     	org	3145733
  4022   300005  FF                 	db	255
  4023                           
  4024                           ;Config register CONFIG4L @ 0x300006
  4025                           ;	unspecified, using default values
  4026                           ;	Write Protection Block 0
  4027                           ;	WRT0 = 0x1, unprogrammed default
  4028                           ;	Write Protection Block 1
  4029                           ;	WRT1 = 0x1, unprogrammed default
  4030                           ;	Write Protection Block 2
  4031                           ;	WRT2 = 0x1, unprogrammed default
  4032                           ;	Write Protection Block 3
  4033                           ;	WRT3 = 0x1, unprogrammed default
  4034                           ;	Write Protection Block 3
  4035                           ;	WRT4 = 0x1, unprogrammed default
  4036                           ;	Write Protection Block 3
  4037                           ;	WRT5 = 0x1, unprogrammed default
  4038                           ;	Write Protection Block 3
  4039                           ;	WRT6 = 0x1, unprogrammed default
  4040                           ;	Write Protection Block 3
  4041                           ;	WRT7 = 0x1, unprogrammed default
  4042   300006                     	org	3145734
  4043   300006  FF                 	db	255
  4044                           
  4045                           ;Config register CONFIG4H @ 0x300007
  4046                           ;	unspecified, using default values
  4047                           ;	Configuration Register Write Protection bit
  4048                           ;	WRTC = 0x1, unprogrammed default
  4049                           ;	Boot Block Write Protection bit
  4050                           ;	WRTB = 0x1, unprogrammed default
  4051                           ;	Data EEPROM Write Protection bit
  4052                           ;	WRTD = 0x1, unprogrammed default
  4053                           ;	Scanner Enable bit
  4054                           ;	SCANE = 0x1, unprogrammed default
  4055                           ;	Low Voltage Programming Enable bit
  4056                           ;	LVP = 0x1, unprogrammed default
  4057   300007                     	org	3145735
  4058   300007  FF                 	db	255
  4059                           
  4060                           ;Config register CONFIG5L @ 0x300008
  4061                           ;	unspecified, using default values
  4062                           ;	UserNVM Program Memory Code Protection bit
  4063                           ;	CP = 0x1, unprogrammed default
  4064                           ;	DataNVM Memory Code Protection bit
  4065                           ;	CPD = 0x1, unprogrammed default
  4066   300008                     	org	3145736
  4067   300008  FF                 	db	255
  4068                           
  4069                           ;Config register CONFIG5H @ 0x300009
  4070                           ;	unspecified, using default values
  4071   300009                     	org	3145737
  4072   300009  FF                 	db	255
  4073                           
  4074                           ;Config register CONFIG6L @ 0x30000A
  4075                           ;	unspecified, using default values
  4076                           ;	Table Read Protection Block 0
  4077                           ;	EBTR0 = 0x1, unprogrammed default
  4078                           ;	Table Read Protection Block 1
  4079                           ;	EBTR1 = 0x1, unprogrammed default
  4080                           ;	Table Read Protection Block 2
  4081                           ;	EBTR2 = 0x1, unprogrammed default
  4082                           ;	Table Read Protection Block 3
  4083                           ;	EBTR3 = 0x1, unprogrammed default
  4084                           ;	Table Read Protection Block 4
  4085                           ;	EBTR4 = 0x1, unprogrammed default
  4086                           ;	Table Read Protection Block 5
  4087                           ;	EBTR5 = 0x1, unprogrammed default
  4088                           ;	Table Read Protection Block 6
  4089                           ;	EBTR6 = 0x1, unprogrammed default
  4090                           ;	Table Read Protection Block 7
  4091                           ;	EBTR7 = 0x1, unprogrammed default
  4092   30000A                     	org	3145738
  4093   30000A  FF                 	db	255
  4094                           
  4095                           ;Config register CONFIG6H @ 0x30000B
  4096                           ;	unspecified, using default values
  4097                           ;	Boot Block Table Read Protection bit
  4098                           ;	EBTRB = 0x1, unprogrammed default
  4099   30000B                     	org	3145739
  4100   30000B  FF                 	db	255
  4101                           tosu	equ	0xFFF
  4102                           tosh	equ	0xFFE
  4103                           tosl	equ	0xFFD
  4104                           stkptr	equ	0xFFC
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           pcl	equ	0xFF9
  4108                           tblptru	equ	0xFF8
  4109                           tblptrh	equ	0xFF7
  4110                           tblptrl	equ	0xFF6
  4111                           tablat	equ	0xFF5
  4112                           prodh	equ	0xFF4
  4113                           prodl	equ	0xFF3
  4114                           indf0	equ	0xFEF
  4115                           postinc0	equ	0xFEE
  4116                           postdec0	equ	0xFED
  4117                           preinc0	equ	0xFEC
  4118                           plusw0	equ	0xFEB
  4119                           fsr0h	equ	0xFEA
  4120                           fsr0l	equ	0xFE9
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postinc1	equ	0xFE6
  4124                           postdec1	equ	0xFE5
  4125                           preinc1	equ	0xFE4
  4126                           plusw1	equ	0xFE3
  4127                           fsr1h	equ	0xFE2
  4128                           fsr1l	equ	0xFE1
  4129                           bsr	equ	0xFE0
  4130                           indf2	equ	0xFDF
  4131                           postinc2	equ	0xFDE
  4132                           postdec2	equ	0xFDD
  4133                           preinc2	equ	0xFDC
  4134                           plusw2	equ	0xFDB
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
=======
  5795   0037AE  BE1A               	btfsc	(pad@p+1)^0,7,c
  5796   0037B0  EFDC  F01B         	goto	u5431
  5797   0037B4  EFDE  F01B         	goto	u5430
  5798   0037B8                     u5431:
  5799   0037B8  EFE4  F01B         	goto	l4856
  5800   0037BC                     u5430:
  5801   0037BC  C019  F01E         	movff	pad@p,pad@w
  5802   0037C0  C01A  F01F         	movff	pad@p+1,pad@w+1
  5803   0037C4  EFE8  F01B         	goto	l1001
  5804   0037C8                     l4856:
  5805   0037C8  0E00               	movlw	0
  5806   0037CA  6E1F               	movwf	(pad@w+1)^0,c
  5807   0037CC  0E00               	movlw	0
  5808   0037CE  6E1E               	movwf	pad@w^0,c
  5809   0037D0                     l1001:
  5810                           
  5811                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  5812   0037D0  0E00               	movlw	0
  5813   0037D2  6E1D               	movwf	(pad@i+1)^0,c
  5814   0037D4  0E00               	movlw	0
  5815   0037D6  6E1C               	movwf	pad@i^0,c
  5816                           
  5817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5818   0037D8  EFFA  F01B         	goto	l4862
  5819   0037DC                     l4858:
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  5822   0037DC  0E00               	movlw	0
  5823   0037DE  6E06               	movwf	(fputc@c+1)^0,c
  5824   0037E0  0E20               	movlw	32
  5825   0037E2  6E05               	movwf	fputc@c^0,c
  5826   0037E4  C015  F007         	movff	pad@fp,fputc@fp
  5827   0037E8  C016  F008         	movff	pad@fp+1,fputc@fp+1
  5828   0037EC  ECB9  F01A         	call	_fputc	;wreg free
  5829   0037F0                     
  5830                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  5831   0037F0  4A1C               	infsnz	pad@i^0,f,c
  5832   0037F2  2A1D               	incf	(pad@i+1)^0,f,c
  5833   0037F4                     l4862:
  5834                           
  5835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  5836   0037F4  501E               	movf	pad@w^0,w,c
  5837   0037F6  5C1C               	subwf	pad@i^0,w,c
  5838   0037F8  501D               	movf	(pad@i+1)^0,w,c
  5839   0037FA  0A80               	xorlw	128
  5840   0037FC  6E1B               	movwf	??_pad^0,c
  5841   0037FE  501F               	movf	(pad@w+1)^0,w,c
  5842   003800  0A80               	xorlw	128
  5843   003802  581B               	subwfb	??_pad^0,w,c
  5844   003804  A0D8               	btfss	status,0,c
  5845   003806  EF07  F01C         	goto	u5441
  5846   00380A  EF09  F01C         	goto	u5440
  5847   00380E                     u5441:
  5848   00380E  EFEE  F01B         	goto	l4858
  5849   003812                     u5440:
  5850   003812                     
  5851                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  5852   003812  C017  F00E         	movff	pad@buf,fputs@s
  5853   003816  C018  F00F         	movff	pad@buf+1,fputs@s+1
  5854   00381A  C015  F010         	movff	pad@fp,fputs@fp
  5855   00381E  C016  F011         	movff	pad@fp+1,fputs@fp+1
  5856   003822  ECD6  F01D         	call	_fputs	;wreg free
  5857   003826  0012               	return		;funcret
  5858   003828                     __end_of_pad:
  5859                           	callstack 0
  5860                           
  5861 ;; *************** function _fputs *****************
  5862 ;; Defined at:
  5863 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  s               2   13[COMRAM] PTR const unsigned char 
  5866 ;;		 -> dbuf(80), 
  5867 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  5868 ;;		 -> sprintf@f(11), 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  i               2   18[COMRAM] int 
  5871 ;;  c               1   17[COMRAM] unsigned char 
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  2   13[COMRAM] int 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5882 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5884 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;Total ram usage:        7 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; Hardware stack levels required when called: 4
  5888 ;; This function calls:
  5889 ;;		_fputc
  5890 ;; This function is called by:
  5891 ;;		_pad
  5892 ;; This function uses a non-reentrant model
  5893 ;;
  5894                           
  5895                           	psect	text19
  5896   003BAC                     __ptext19:
  5897                           	callstack 0
  5898   003BAC                     _fputs:
  5899                           	callstack 21
  5900   003BAC  0E00               	movlw	0
  5901   003BAE  6E14               	movwf	(fputs@i+1)^0,c
  5902   003BB0  0E00               	movlw	0
  5903   003BB2  6E13               	movwf	fputs@i^0,c
  5904   003BB4  EFE7  F01D         	goto	l4406
  5905   003BB8                     l4402:
  5906   003BB8  C012  F005         	movff	fputs@c,fputc@c
  5907   003BBC  6A06               	clrf	(fputc@c+1)^0,c
  5908   003BBE  C010  F007         	movff	fputs@fp,fputc@fp
  5909   003BC2  C011  F008         	movff	fputs@fp+1,fputc@fp+1
  5910   003BC6  ECB9  F01A         	call	_fputc	;wreg free
  5911   003BCA  4A13               	infsnz	fputs@i^0,f,c
  5912   003BCC  2A14               	incf	(fputs@i+1)^0,f,c
  5913   003BCE                     l4406:
  5914   003BCE  5013               	movf	fputs@i^0,w,c
  5915   003BD0  240E               	addwf	fputs@s^0,w,c
  5916   003BD2  6ED9               	movwf	fsr2l,c
  5917   003BD4  5014               	movf	(fputs@i+1)^0,w,c
  5918   003BD6  200F               	addwfc	(fputs@s+1)^0,w,c
  5919   003BD8  6EDA               	movwf	fsr2h,c
  5920   003BDA  50DF               	movf	indf2,w,c
  5921   003BDC  6E12               	movwf	fputs@c^0,c
  5922   003BDE  5012               	movf	fputs@c^0,w,c
  5923   003BE0  A4D8               	btfss	status,2,c
  5924   003BE2  EFF5  F01D         	goto	u4711
  5925   003BE6  EFF7  F01D         	goto	u4710
  5926   003BEA                     u4711:
  5927   003BEA  EFDC  F01D         	goto	l4402
  5928   003BEE                     u4710:
  5929   003BEE  0012               	return		;funcret
  5930   003BF0                     __end_of_fputs:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _fputc *****************
  5934 ;; Defined at:
  5935 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  c               2    4[COMRAM] int 
  5938 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  5939 ;;		 -> sprintf@f(11), 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;		None
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  2    4[COMRAM] int 
  5944 ;; Registers used:
  5945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5951 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;Total ram usage:        9 bytes
  5956 ;; Hardware stack levels used: 1
  5957 ;; Hardware stack levels required when called: 3
  5958 ;; This function calls:
  5959 ;;		_putch
  5960 ;; This function is called by:
  5961 ;;		_pad
  5962 ;;		_vfpfcnvrt
  5963 ;;		_fputs
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text20
  5968   003572                     __ptext20:
  5969                           	callstack 0
  5970   003572                     _fputc:
  5971                           	callstack 24
  5972   003572  5007               	movf	fputc@fp^0,w,c
  5973   003574  1008               	iorwf	(fputc@fp+1)^0,w,c
  5974   003576  B4D8               	btfsc	status,2,c
  5975   003578  EFC0  F01A         	goto	u4281
  5976   00357C  EFC2  F01A         	goto	u4280
  5977   003580                     u4281:
  5978   003580  EFCB  F01A         	goto	l4188
  5979   003584                     u4280:
  5980   003584  5007               	movf	fputc@fp^0,w,c
  5981   003586  1008               	iorwf	(fputc@fp+1)^0,w,c
  5982   003588  A4D8               	btfss	status,2,c
  5983   00358A  EFC9  F01A         	goto	u4291
  5984   00358E  EFCB  F01A         	goto	u4290
  5985   003592                     u4291:
  5986   003592  EFD0  F01A         	goto	l4190
  5987   003596                     u4290:
  5988   003596                     l4188:
  5989   003596  5005               	movf	fputc@c^0,w,c
  5990   003598  EC71  F01F         	call	_putch
  5991   00359C  EF1D  F01B         	goto	l1161
  5992   0035A0                     l4190:
  5993   0035A0  EE20 F009          	lfsr	2,9
  5994   0035A4  5007               	movf	fputc@fp^0,w,c
  5995   0035A6  26D9               	addwf	fsr2l,f,c
  5996   0035A8  5008               	movf	(fputc@fp+1)^0,w,c
  5997   0035AA  22DA               	addwfc	fsr2h,f,c
  5998   0035AC  50DE               	movf	postinc2,w,c
  5999   0035AE  10DE               	iorwf	postinc2,w,c
  6000   0035B0  B4D8               	btfsc	status,2,c
  6001   0035B2  EFDD  F01A         	goto	u4301
  6002   0035B6  EFDF  F01A         	goto	u4300
  6003   0035BA                     u4301:
  6004   0035BA  EFFA  F01A         	goto	l4194
  6005   0035BE                     u4300:
  6006   0035BE  EE20 F009          	lfsr	2,9
  6007   0035C2  5007               	movf	fputc@fp^0,w,c
  6008   0035C4  26D9               	addwf	fsr2l,f,c
  6009   0035C6  5008               	movf	(fputc@fp+1)^0,w,c
  6010   0035C8  22DA               	addwfc	fsr2h,f,c
  6011   0035CA  EE10 F003          	lfsr	1,3
  6012   0035CE  5007               	movf	fputc@fp^0,w,c
  6013   0035D0  26E1               	addwf	fsr1l,f,c
  6014   0035D2  5008               	movf	(fputc@fp+1)^0,w,c
  6015   0035D4  22E2               	addwfc	fsr1h,f,c
  6016   0035D6  50DE               	movf	postinc2,w,c
  6017   0035D8  5CE6               	subwf	postinc1,w,c
  6018   0035DA  50E6               	movf	postinc1,w,c
  6019   0035DC  0A80               	xorlw	128
  6020   0035DE  6E0D               	movwf	(??_fputc+4)^0,c
  6021   0035E0  50DE               	movf	postinc2,w,c
  6022   0035E2  0A80               	xorlw	128
  6023   0035E4  580D               	subwfb	(??_fputc+4)^0,w,c
  6024   0035E6  B0D8               	btfsc	status,0,c
  6025   0035E8  EFF8  F01A         	goto	u4311
  6026   0035EC  EFFA  F01A         	goto	u4310
  6027   0035F0                     u4311:
  6028   0035F0  EF1D  F01B         	goto	l1161
  6029   0035F4                     u4310:
  6030   0035F4                     l4194:
  6031   0035F4  EE20 F003          	lfsr	2,3
  6032   0035F8  5007               	movf	fputc@fp^0,w,c
  6033   0035FA  26D9               	addwf	fsr2l,f,c
  6034   0035FC  5008               	movf	(fputc@fp+1)^0,w,c
  6035   0035FE  22DA               	addwfc	fsr2h,f,c
  6036   003600  CFDE F009          	movff	postinc2,??_fputc
  6037   003604  CFDD F00A          	movff	postdec2,??_fputc+1
  6038   003608  C007  FFD9         	movff	fputc@fp,fsr2l
  6039   00360C  C008  FFDA         	movff	fputc@fp+1,fsr2h
  6040   003610  CFDE F00B          	movff	postinc2,??_fputc+2
  6041   003614  CFDD F00C          	movff	postdec2,??_fputc+3
  6042   003618  5009               	movf	??_fputc^0,w,c
  6043   00361A  240B               	addwf	(??_fputc+2)^0,w,c
  6044   00361C  6ED9               	movwf	fsr2l,c
  6045   00361E  500A               	movf	(??_fputc+1)^0,w,c
  6046   003620  200C               	addwfc	(??_fputc+3)^0,w,c
  6047   003622  6EDA               	movwf	fsr2h,c
  6048   003624  C005  FFDF         	movff	fputc@c,indf2
  6049   003628  EE20 F003          	lfsr	2,3
  6050   00362C  5007               	movf	fputc@fp^0,w,c
  6051   00362E  26D9               	addwf	fsr2l,f,c
  6052   003630  5008               	movf	(fputc@fp+1)^0,w,c
  6053   003632  22DA               	addwfc	fsr2h,f,c
  6054   003634  2ADE               	incf	postinc2,f,c
  6055   003636  0E00               	movlw	0
  6056   003638  22DD               	addwfc	postdec2,f,c
  6057   00363A                     l1161:
  6058   00363A  0012               	return		;funcret
  6059   00363C                     __end_of_fputc:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _putch *****************
  6063 ;; Defined at:
  6064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  c               1    wreg     unsigned char 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  c               1    0[COMRAM] unsigned char 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;Total ram usage:        0 bytes
  6083 ;; Hardware stack levels used: 1
  6084 ;; Hardware stack levels required when called: 2
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		_fputc
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text21
  6093   003EE2                     __ptext21:
  6094                           	callstack 0
  6095   003EE2                     _putch:
  6096                           	callstack 24
  6097   003EE2  0012               	return		;funcret
  6098   003EE4                     __end_of_putch:
  6099                           	callstack 0
  6100                           
  6101 ;; *************** function _abs *****************
  6102 ;; Defined at:
  6103 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  a               2   22[COMRAM] int 
  6106 ;; Auto vars:     Size  Location     Type
  6107 ;;		None
  6108 ;; Return value:  Size  Location     Type
  6109 ;;                  2   22[COMRAM] int 
  6110 ;; Registers used:
  6111 ;;		wreg, status,2, status,0
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6121 ;;Total ram usage:        4 bytes
  6122 ;; Hardware stack levels used: 1
  6123 ;; Hardware stack levels required when called: 2
  6124 ;; This function calls:
  6125 ;;		Nothing
  6126 ;; This function is called by:
  6127 ;;		_dtoa
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text22
  6132   003C32                     __ptext22:
  6133                           	callstack 0
  6134   003C32                     _abs:
  6135                           	callstack 24
  6136   003C32  BE18               	btfsc	(abs@a+1)^0,7,c
  6137   003C34  EF26  F01E         	goto	u5450
  6138   003C38  5018               	movf	(abs@a+1)^0,w,c
  6139   003C3A  E106               	bnz	u5451
  6140   003C3C  0417               	decf	abs@a^0,w,c
  6141   003C3E  B0D8               	btfsc	status,0,c
  6142   003C40  EF24  F01E         	goto	u5451
  6143   003C44  EF26  F01E         	goto	u5450
  6144   003C48                     u5451:
  6145   003C48  EF34  F01E         	goto	l1120
  6146   003C4C                     u5450:
  6147   003C4C  C017  F019         	movff	abs@a,??_abs
  6148   003C50  C018  F01A         	movff	abs@a+1,??_abs+1
  6149   003C54  1E19               	comf	??_abs^0,f,c
  6150   003C56  1E1A               	comf	(??_abs+1)^0,f,c
  6151   003C58  4A19               	infsnz	??_abs^0,f,c
  6152   003C5A  2A1A               	incf	(??_abs+1)^0,f,c
  6153   003C5C  C019  F017         	movff	??_abs,?_abs
  6154   003C60  C01A  F018         	movff	??_abs+1,?_abs+1
  6155   003C64  EF38  F01E         	goto	l1123
  6156   003C68                     l1120:
  6157   003C68  C017  F017         	movff	abs@a,?_abs
  6158   003C6C  C018  F018         	movff	abs@a+1,?_abs+1
  6159   003C70                     l1123:
  6160   003C70  0012               	return		;funcret
  6161   003C72                     __end_of_abs:
  6162                           	callstack 0
  6163                           
  6164 ;; *************** function ___aomod *****************
  6165 ;; Defined at:
  6166 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  6167 ;; Parameters:    Size  Location     Type
  6168 ;;  dividend        8    4[COMRAM] long long 
  6169 ;;  divisor         8   12[COMRAM] long long 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  sign            1   21[COMRAM] unsigned char 
  6172 ;;  counter         1   20[COMRAM] unsigned char 
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  8    4[COMRAM] long long 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6182 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;Total ram usage:       18 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 2
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_dtoa
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text23
  6197   003106                     __ptext23:
  6198                           	callstack 0
  6199   003106                     ___aomod:
  6200                           	callstack 24
  6201   003106  0E00               	movlw	0
  6202   003108  6E16               	movwf	___aomod@sign^0,c
  6203   00310A  BE0C               	btfsc	(___aomod@dividend+7)^0,7,c
  6204   00310C  EF8C  F018         	goto	u4790
  6205   003110  EF8A  F018         	goto	u4791
  6206   003114                     u4791:
  6207   003114  EF9E  F018         	goto	l4460
  6208   003118                     u4790:
  6209   003118  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6210   00311A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6211   00311C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6212   00311E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6213   003120  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6214   003122  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6215   003124  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6216   003126  6C05               	negf	___aomod@dividend^0,c
  6217   003128  0E00               	movlw	0
  6218   00312A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6219   00312C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6220   00312E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6221   003130  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6222   003132  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6223   003134  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6224   003136  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6225   003138  0E01               	movlw	1
  6226   00313A  6E16               	movwf	___aomod@sign^0,c
  6227   00313C                     l4460:
  6228   00313C  BE14               	btfsc	(___aomod@divisor+7)^0,7,c
  6229   00313E  EFA5  F018         	goto	u4800
  6230   003142  EFA3  F018         	goto	u4801
  6231   003146                     u4801:
  6232   003146  EFB5  F018         	goto	l4464
  6233   00314A                     u4800:
  6234   00314A  1E14               	comf	(___aomod@divisor+7)^0,f,c
  6235   00314C  1E13               	comf	(___aomod@divisor+6)^0,f,c
  6236   00314E  1E12               	comf	(___aomod@divisor+5)^0,f,c
  6237   003150  1E11               	comf	(___aomod@divisor+4)^0,f,c
  6238   003152  1E10               	comf	(___aomod@divisor+3)^0,f,c
  6239   003154  1E0F               	comf	(___aomod@divisor+2)^0,f,c
  6240   003156  1E0E               	comf	(___aomod@divisor+1)^0,f,c
  6241   003158  6C0D               	negf	___aomod@divisor^0,c
  6242   00315A  0E00               	movlw	0
  6243   00315C  220E               	addwfc	(___aomod@divisor+1)^0,f,c
  6244   00315E  220F               	addwfc	(___aomod@divisor+2)^0,f,c
  6245   003160  2210               	addwfc	(___aomod@divisor+3)^0,f,c
  6246   003162  2211               	addwfc	(___aomod@divisor+4)^0,f,c
  6247   003164  2212               	addwfc	(___aomod@divisor+5)^0,f,c
  6248   003166  2213               	addwfc	(___aomod@divisor+6)^0,f,c
  6249   003168  2214               	addwfc	(___aomod@divisor+7)^0,f,c
  6250   00316A                     l4464:
  6251   00316A  500D               	movf	___aomod@divisor^0,w,c
  6252   00316C  100E               	iorwf	(___aomod@divisor+1)^0,w,c
  6253   00316E  100F               	iorwf	(___aomod@divisor+2)^0,w,c
  6254   003170  1010               	iorwf	(___aomod@divisor+3)^0,w,c
  6255   003172  1011               	iorwf	(___aomod@divisor+4)^0,w,c
  6256   003174  1012               	iorwf	(___aomod@divisor+5)^0,w,c
  6257   003176  1013               	iorwf	(___aomod@divisor+6)^0,w,c
  6258   003178  1014               	iorwf	(___aomod@divisor+7)^0,w,c
  6259   00317A  B4D8               	btfsc	status,2,c
  6260   00317C  EFC2  F018         	goto	u4811
  6261   003180  EFC4  F018         	goto	u4810
  6262   003184                     u4811:
  6263   003184  EF0C  F019         	goto	l4480
  6264   003188                     u4810:
  6265   003188  0E01               	movlw	1
  6266   00318A  6E15               	movwf	___aomod@counter^0,c
  6267   00318C  EFD2  F018         	goto	l4470
  6268   003190                     l4468:
  6269   003190  90D8               	bcf	status,0,c
  6270   003192  360D               	rlcf	___aomod@divisor^0,f,c
  6271   003194  360E               	rlcf	(___aomod@divisor+1)^0,f,c
  6272   003196  360F               	rlcf	(___aomod@divisor+2)^0,f,c
  6273   003198  3610               	rlcf	(___aomod@divisor+3)^0,f,c
  6274   00319A  3611               	rlcf	(___aomod@divisor+4)^0,f,c
  6275   00319C  3612               	rlcf	(___aomod@divisor+5)^0,f,c
  6276   00319E  3613               	rlcf	(___aomod@divisor+6)^0,f,c
  6277   0031A0  3614               	rlcf	(___aomod@divisor+7)^0,f,c
  6278   0031A2  2A15               	incf	___aomod@counter^0,f,c
  6279   0031A4                     l4470:
  6280   0031A4  AE14               	btfss	(___aomod@divisor+7)^0,7,c
  6281   0031A6  EFD7  F018         	goto	u4821
  6282   0031AA  EFD9  F018         	goto	u4820
  6283   0031AE                     u4821:
  6284   0031AE  EFC8  F018         	goto	l4468
  6285   0031B2                     u4820:
  6286   0031B2                     l4472:
  6287   0031B2  500D               	movf	___aomod@divisor^0,w,c
  6288   0031B4  5C05               	subwf	___aomod@dividend^0,w,c
  6289   0031B6  500E               	movf	(___aomod@divisor+1)^0,w,c
  6290   0031B8  5806               	subwfb	(___aomod@dividend+1)^0,w,c
  6291   0031BA  500F               	movf	(___aomod@divisor+2)^0,w,c
  6292   0031BC  5807               	subwfb	(___aomod@dividend+2)^0,w,c
  6293   0031BE  5010               	movf	(___aomod@divisor+3)^0,w,c
  6294   0031C0  5808               	subwfb	(___aomod@dividend+3)^0,w,c
  6295   0031C2  5011               	movf	(___aomod@divisor+4)^0,w,c
  6296   0031C4  5809               	subwfb	(___aomod@dividend+4)^0,w,c
  6297   0031C6  5012               	movf	(___aomod@divisor+5)^0,w,c
  6298   0031C8  580A               	subwfb	(___aomod@dividend+5)^0,w,c
  6299   0031CA  5013               	movf	(___aomod@divisor+6)^0,w,c
  6300   0031CC  580B               	subwfb	(___aomod@dividend+6)^0,w,c
  6301   0031CE  5014               	movf	(___aomod@divisor+7)^0,w,c
  6302   0031D0  580C               	subwfb	(___aomod@dividend+7)^0,w,c
  6303   0031D2  A0D8               	btfss	status,0,c
  6304   0031D4  EFEE  F018         	goto	u4831
  6305   0031D8  EFF0  F018         	goto	u4830
  6306   0031DC                     u4831:
  6307   0031DC  EF00  F019         	goto	l4476
  6308   0031E0                     u4830:
  6309   0031E0  500D               	movf	___aomod@divisor^0,w,c
  6310   0031E2  5E05               	subwf	___aomod@dividend^0,f,c
  6311   0031E4  500E               	movf	(___aomod@divisor+1)^0,w,c
  6312   0031E6  5A06               	subwfb	(___aomod@dividend+1)^0,f,c
  6313   0031E8  500F               	movf	(___aomod@divisor+2)^0,w,c
  6314   0031EA  5A07               	subwfb	(___aomod@dividend+2)^0,f,c
  6315   0031EC  5010               	movf	(___aomod@divisor+3)^0,w,c
  6316   0031EE  5A08               	subwfb	(___aomod@dividend+3)^0,f,c
  6317   0031F0  5011               	movf	(___aomod@divisor+4)^0,w,c
  6318   0031F2  5A09               	subwfb	(___aomod@dividend+4)^0,f,c
  6319   0031F4  5012               	movf	(___aomod@divisor+5)^0,w,c
  6320   0031F6  5A0A               	subwfb	(___aomod@dividend+5)^0,f,c
  6321   0031F8  5013               	movf	(___aomod@divisor+6)^0,w,c
  6322   0031FA  5A0B               	subwfb	(___aomod@dividend+6)^0,f,c
  6323   0031FC  5014               	movf	(___aomod@divisor+7)^0,w,c
  6324   0031FE  5A0C               	subwfb	(___aomod@dividend+7)^0,f,c
  6325   003200                     l4476:
  6326   003200  90D8               	bcf	status,0,c
  6327   003202  3214               	rrcf	(___aomod@divisor+7)^0,f,c
  6328   003204  3213               	rrcf	(___aomod@divisor+6)^0,f,c
  6329   003206  3212               	rrcf	(___aomod@divisor+5)^0,f,c
  6330   003208  3211               	rrcf	(___aomod@divisor+4)^0,f,c
  6331   00320A  3210               	rrcf	(___aomod@divisor+3)^0,f,c
  6332   00320C  320F               	rrcf	(___aomod@divisor+2)^0,f,c
  6333   00320E  320E               	rrcf	(___aomod@divisor+1)^0,f,c
  6334   003210  320D               	rrcf	___aomod@divisor^0,f,c
  6335   003212  2E15               	decfsz	___aomod@counter^0,f,c
  6336   003214  EFD9  F018         	goto	l4472
  6337   003218                     l4480:
  6338   003218  5016               	movf	___aomod@sign^0,w,c
  6339   00321A  B4D8               	btfsc	status,2,c
  6340   00321C  EF12  F019         	goto	u4841
  6341   003220  EF14  F019         	goto	u4840
  6342   003224                     u4841:
  6343   003224  EF24  F019         	goto	l4484
  6344   003228                     u4840:
  6345   003228  1E0C               	comf	(___aomod@dividend+7)^0,f,c
  6346   00322A  1E0B               	comf	(___aomod@dividend+6)^0,f,c
  6347   00322C  1E0A               	comf	(___aomod@dividend+5)^0,f,c
  6348   00322E  1E09               	comf	(___aomod@dividend+4)^0,f,c
  6349   003230  1E08               	comf	(___aomod@dividend+3)^0,f,c
  6350   003232  1E07               	comf	(___aomod@dividend+2)^0,f,c
  6351   003234  1E06               	comf	(___aomod@dividend+1)^0,f,c
  6352   003236  6C05               	negf	___aomod@dividend^0,c
  6353   003238  0E00               	movlw	0
  6354   00323A  2206               	addwfc	(___aomod@dividend+1)^0,f,c
  6355   00323C  2207               	addwfc	(___aomod@dividend+2)^0,f,c
  6356   00323E  2208               	addwfc	(___aomod@dividend+3)^0,f,c
  6357   003240  2209               	addwfc	(___aomod@dividend+4)^0,f,c
  6358   003242  220A               	addwfc	(___aomod@dividend+5)^0,f,c
  6359   003244  220B               	addwfc	(___aomod@dividend+6)^0,f,c
  6360   003246  220C               	addwfc	(___aomod@dividend+7)^0,f,c
  6361   003248                     l4484:
  6362   003248  C005  F005         	movff	___aomod@dividend,?___aomod
  6363   00324C  C006  F006         	movff	___aomod@dividend+1,?___aomod+1
  6364   003250  C007  F007         	movff	___aomod@dividend+2,?___aomod+2
  6365   003254  C008  F008         	movff	___aomod@dividend+3,?___aomod+3
  6366   003258  C009  F009         	movff	___aomod@dividend+4,?___aomod+4
  6367   00325C  C00A  F00A         	movff	___aomod@dividend+5,?___aomod+5
  6368   003260  C00B  F00B         	movff	___aomod@dividend+6,?___aomod+6
  6369   003264  C00C  F00C         	movff	___aomod@dividend+7,?___aomod+7
  6370   003268  0012               	return		;funcret
  6371   00326A                     __end_of___aomod:
  6372                           	callstack 0
  6373                           
  6374 ;; *************** function ___aodiv *****************
  6375 ;; Defined at:
  6376 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  6377 ;; Parameters:    Size  Location     Type
  6378 ;;  dividend        8    4[COMRAM] long long 
  6379 ;;  divisor         8   12[COMRAM] long long 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  quotient        8   22[COMRAM] long long 
  6382 ;;  sign            1   21[COMRAM] unsigned char 
  6383 ;;  counter         1   20[COMRAM] unsigned char 
  6384 ;; Return value:  Size  Location     Type
  6385 ;;                  8    4[COMRAM] long long 
  6386 ;; Registers used:
  6387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6388 ;; Tracked objects:
  6389 ;;		On entry : 0/0
  6390 ;;		On exit  : 0/0
  6391 ;;		Unchanged: 0/0
  6392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6393 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;Total ram usage:       26 bytes
  6398 ;; Hardware stack levels used: 1
  6399 ;; Hardware stack levels required when called: 2
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_dtoa
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text24
  6408   002F7E                     __ptext24:
  6409                           	callstack 0
  6410   002F7E                     ___aodiv:
  6411                           	callstack 24
  6412   002F7E  0E00               	movlw	0
  6413   002F80  6E16               	movwf	___aodiv@sign^0,c
  6414   002F82  BE14               	btfsc	(___aodiv@divisor+7)^0,7,c
  6415   002F84  EFC8  F017         	goto	u4720
  6416   002F88  EFC6  F017         	goto	u4721
  6417   002F8C                     u4721:
  6418   002F8C  EFDA  F017         	goto	l4416
  6419   002F90                     u4720:
  6420   002F90  1E14               	comf	(___aodiv@divisor+7)^0,f,c
  6421   002F92  1E13               	comf	(___aodiv@divisor+6)^0,f,c
  6422   002F94  1E12               	comf	(___aodiv@divisor+5)^0,f,c
  6423   002F96  1E11               	comf	(___aodiv@divisor+4)^0,f,c
  6424   002F98  1E10               	comf	(___aodiv@divisor+3)^0,f,c
  6425   002F9A  1E0F               	comf	(___aodiv@divisor+2)^0,f,c
  6426   002F9C  1E0E               	comf	(___aodiv@divisor+1)^0,f,c
  6427   002F9E  6C0D               	negf	___aodiv@divisor^0,c
  6428   002FA0  0E00               	movlw	0
  6429   002FA2  220E               	addwfc	(___aodiv@divisor+1)^0,f,c
  6430   002FA4  220F               	addwfc	(___aodiv@divisor+2)^0,f,c
  6431   002FA6  2210               	addwfc	(___aodiv@divisor+3)^0,f,c
  6432   002FA8  2211               	addwfc	(___aodiv@divisor+4)^0,f,c
  6433   002FAA  2212               	addwfc	(___aodiv@divisor+5)^0,f,c
  6434   002FAC  2213               	addwfc	(___aodiv@divisor+6)^0,f,c
  6435   002FAE  2214               	addwfc	(___aodiv@divisor+7)^0,f,c
  6436   002FB0  0E01               	movlw	1
  6437   002FB2  6E16               	movwf	___aodiv@sign^0,c
  6438   002FB4                     l4416:
  6439   002FB4  BE0C               	btfsc	(___aodiv@dividend+7)^0,7,c
  6440   002FB6  EFE1  F017         	goto	u4730
  6441   002FBA  EFDF  F017         	goto	u4731
  6442   002FBE                     u4731:
  6443   002FBE  EFF3  F017         	goto	l4422
  6444   002FC2                     u4730:
  6445   002FC2  1E0C               	comf	(___aodiv@dividend+7)^0,f,c
  6446   002FC4  1E0B               	comf	(___aodiv@dividend+6)^0,f,c
  6447   002FC6  1E0A               	comf	(___aodiv@dividend+5)^0,f,c
  6448   002FC8  1E09               	comf	(___aodiv@dividend+4)^0,f,c
  6449   002FCA  1E08               	comf	(___aodiv@dividend+3)^0,f,c
  6450   002FCC  1E07               	comf	(___aodiv@dividend+2)^0,f,c
  6451   002FCE  1E06               	comf	(___aodiv@dividend+1)^0,f,c
  6452   002FD0  6C05               	negf	___aodiv@dividend^0,c
  6453   002FD2  0E00               	movlw	0
  6454   002FD4  2206               	addwfc	(___aodiv@dividend+1)^0,f,c
  6455   002FD6  2207               	addwfc	(___aodiv@dividend+2)^0,f,c
  6456   002FD8  2208               	addwfc	(___aodiv@dividend+3)^0,f,c
  6457   002FDA  2209               	addwfc	(___aodiv@dividend+4)^0,f,c
  6458   002FDC  220A               	addwfc	(___aodiv@dividend+5)^0,f,c
  6459   002FDE  220B               	addwfc	(___aodiv@dividend+6)^0,f,c
  6460   002FE0  220C               	addwfc	(___aodiv@dividend+7)^0,f,c
  6461   002FE2  0E01               	movlw	1
  6462   002FE4  1A16               	xorwf	___aodiv@sign^0,f,c
  6463   002FE6                     l4422:
  6464   002FE6  EE20  F017         	lfsr	2,___aodiv@quotient
  6465   002FEA  0E07               	movlw	7
  6466   002FEC                     u4741:
  6467   002FEC  6ADE               	clrf	postinc2,c
  6468   002FEE  06E8               	decf	wreg,f,c
  6469   002FF0  E2FD               	bc	u4741
  6470   002FF2  500D               	movf	___aodiv@divisor^0,w,c
  6471   002FF4  100E               	iorwf	(___aodiv@divisor+1)^0,w,c
  6472   002FF6  100F               	iorwf	(___aodiv@divisor+2)^0,w,c
  6473   002FF8  1010               	iorwf	(___aodiv@divisor+3)^0,w,c
  6474   002FFA  1011               	iorwf	(___aodiv@divisor+4)^0,w,c
  6475   002FFC  1012               	iorwf	(___aodiv@divisor+5)^0,w,c
  6476   002FFE  1013               	iorwf	(___aodiv@divisor+6)^0,w,c
  6477   003000  1014               	iorwf	(___aodiv@divisor+7)^0,w,c
  6478   003002  B4D8               	btfsc	status,2,c
  6479   003004  EF06  F018         	goto	u4751
  6480   003008  EF08  F018         	goto	u4750
  6481   00300C                     u4751:
  6482   00300C  EF5A  F018         	goto	l4444
  6483   003010                     u4750:
  6484   003010  0E01               	movlw	1
  6485   003012  6E15               	movwf	___aodiv@counter^0,c
  6486   003014  EF16  F018         	goto	l4430
  6487   003018                     l4428:
  6488   003018  90D8               	bcf	status,0,c
  6489   00301A  360D               	rlcf	___aodiv@divisor^0,f,c
  6490   00301C  360E               	rlcf	(___aodiv@divisor+1)^0,f,c
  6491   00301E  360F               	rlcf	(___aodiv@divisor+2)^0,f,c
  6492   003020  3610               	rlcf	(___aodiv@divisor+3)^0,f,c
  6493   003022  3611               	rlcf	(___aodiv@divisor+4)^0,f,c
  6494   003024  3612               	rlcf	(___aodiv@divisor+5)^0,f,c
  6495   003026  3613               	rlcf	(___aodiv@divisor+6)^0,f,c
  6496   003028  3614               	rlcf	(___aodiv@divisor+7)^0,f,c
  6497   00302A  2A15               	incf	___aodiv@counter^0,f,c
  6498   00302C                     l4430:
  6499   00302C  AE14               	btfss	(___aodiv@divisor+7)^0,7,c
  6500   00302E  EF1B  F018         	goto	u4761
  6501   003032  EF1D  F018         	goto	u4760
  6502   003036                     u4761:
  6503   003036  EF0C  F018         	goto	l4428
  6504   00303A                     u4760:
  6505   00303A                     l4432:
  6506   00303A  90D8               	bcf	status,0,c
  6507   00303C  3617               	rlcf	___aodiv@quotient^0,f,c
  6508   00303E  3618               	rlcf	(___aodiv@quotient+1)^0,f,c
  6509   003040  3619               	rlcf	(___aodiv@quotient+2)^0,f,c
  6510   003042  361A               	rlcf	(___aodiv@quotient+3)^0,f,c
  6511   003044  361B               	rlcf	(___aodiv@quotient+4)^0,f,c
  6512   003046  361C               	rlcf	(___aodiv@quotient+5)^0,f,c
  6513   003048  361D               	rlcf	(___aodiv@quotient+6)^0,f,c
  6514   00304A  361E               	rlcf	(___aodiv@quotient+7)^0,f,c
  6515   00304C  500D               	movf	___aodiv@divisor^0,w,c
  6516   00304E  5C05               	subwf	___aodiv@dividend^0,w,c
  6517   003050  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6518   003052  5806               	subwfb	(___aodiv@dividend+1)^0,w,c
  6519   003054  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6520   003056  5807               	subwfb	(___aodiv@dividend+2)^0,w,c
  6521   003058  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6522   00305A  5808               	subwfb	(___aodiv@dividend+3)^0,w,c
  6523   00305C  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6524   00305E  5809               	subwfb	(___aodiv@dividend+4)^0,w,c
  6525   003060  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6526   003062  580A               	subwfb	(___aodiv@dividend+5)^0,w,c
  6527   003064  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6528   003066  580B               	subwfb	(___aodiv@dividend+6)^0,w,c
  6529   003068  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6530   00306A  580C               	subwfb	(___aodiv@dividend+7)^0,w,c
  6531   00306C  A0D8               	btfss	status,0,c
  6532   00306E  EF3B  F018         	goto	u4771
  6533   003072  EF3D  F018         	goto	u4770
  6534   003076                     u4771:
  6535   003076  EF4E  F018         	goto	l4440
  6536   00307A                     u4770:
  6537   00307A  500D               	movf	___aodiv@divisor^0,w,c
  6538   00307C  5E05               	subwf	___aodiv@dividend^0,f,c
  6539   00307E  500E               	movf	(___aodiv@divisor+1)^0,w,c
  6540   003080  5A06               	subwfb	(___aodiv@dividend+1)^0,f,c
  6541   003082  500F               	movf	(___aodiv@divisor+2)^0,w,c
  6542   003084  5A07               	subwfb	(___aodiv@dividend+2)^0,f,c
  6543   003086  5010               	movf	(___aodiv@divisor+3)^0,w,c
  6544   003088  5A08               	subwfb	(___aodiv@dividend+3)^0,f,c
  6545   00308A  5011               	movf	(___aodiv@divisor+4)^0,w,c
  6546   00308C  5A09               	subwfb	(___aodiv@dividend+4)^0,f,c
  6547   00308E  5012               	movf	(___aodiv@divisor+5)^0,w,c
  6548   003090  5A0A               	subwfb	(___aodiv@dividend+5)^0,f,c
  6549   003092  5013               	movf	(___aodiv@divisor+6)^0,w,c
  6550   003094  5A0B               	subwfb	(___aodiv@dividend+6)^0,f,c
  6551   003096  5014               	movf	(___aodiv@divisor+7)^0,w,c
  6552   003098  5A0C               	subwfb	(___aodiv@dividend+7)^0,f,c
  6553   00309A  8017               	bsf	___aodiv@quotient^0,0,c
  6554   00309C                     l4440:
  6555   00309C  90D8               	bcf	status,0,c
  6556   00309E  3214               	rrcf	(___aodiv@divisor+7)^0,f,c
  6557   0030A0  3213               	rrcf	(___aodiv@divisor+6)^0,f,c
  6558   0030A2  3212               	rrcf	(___aodiv@divisor+5)^0,f,c
  6559   0030A4  3211               	rrcf	(___aodiv@divisor+4)^0,f,c
  6560   0030A6  3210               	rrcf	(___aodiv@divisor+3)^0,f,c
  6561   0030A8  320F               	rrcf	(___aodiv@divisor+2)^0,f,c
  6562   0030AA  320E               	rrcf	(___aodiv@divisor+1)^0,f,c
  6563   0030AC  320D               	rrcf	___aodiv@divisor^0,f,c
  6564   0030AE  2E15               	decfsz	___aodiv@counter^0,f,c
  6565   0030B0  EF1D  F018         	goto	l4432
  6566   0030B4                     l4444:
  6567   0030B4  5016               	movf	___aodiv@sign^0,w,c
  6568   0030B6  B4D8               	btfsc	status,2,c
  6569   0030B8  EF60  F018         	goto	u4781
  6570   0030BC  EF62  F018         	goto	u4780
  6571   0030C0                     u4781:
  6572   0030C0  EF72  F018         	goto	l4448
  6573   0030C4                     u4780:
  6574   0030C4  1E1E               	comf	(___aodiv@quotient+7)^0,f,c
  6575   0030C6  1E1D               	comf	(___aodiv@quotient+6)^0,f,c
  6576   0030C8  1E1C               	comf	(___aodiv@quotient+5)^0,f,c
  6577   0030CA  1E1B               	comf	(___aodiv@quotient+4)^0,f,c
  6578   0030CC  1E1A               	comf	(___aodiv@quotient+3)^0,f,c
  6579   0030CE  1E19               	comf	(___aodiv@quotient+2)^0,f,c
  6580   0030D0  1E18               	comf	(___aodiv@quotient+1)^0,f,c
  6581   0030D2  6C17               	negf	___aodiv@quotient^0,c
  6582   0030D4  0E00               	movlw	0
  6583   0030D6  2218               	addwfc	(___aodiv@quotient+1)^0,f,c
  6584   0030D8  2219               	addwfc	(___aodiv@quotient+2)^0,f,c
  6585   0030DA  221A               	addwfc	(___aodiv@quotient+3)^0,f,c
  6586   0030DC  221B               	addwfc	(___aodiv@quotient+4)^0,f,c
  6587   0030DE  221C               	addwfc	(___aodiv@quotient+5)^0,f,c
  6588   0030E0  221D               	addwfc	(___aodiv@quotient+6)^0,f,c
  6589   0030E2  221E               	addwfc	(___aodiv@quotient+7)^0,f,c
  6590   0030E4                     l4448:
  6591   0030E4  C017  F005         	movff	___aodiv@quotient,?___aodiv
  6592   0030E8  C018  F006         	movff	___aodiv@quotient+1,?___aodiv+1
  6593   0030EC  C019  F007         	movff	___aodiv@quotient+2,?___aodiv+2
  6594   0030F0  C01A  F008         	movff	___aodiv@quotient+3,?___aodiv+3
  6595   0030F4  C01B  F009         	movff	___aodiv@quotient+4,?___aodiv+4
  6596   0030F8  C01C  F00A         	movff	___aodiv@quotient+5,?___aodiv+5
  6597   0030FC  C01D  F00B         	movff	___aodiv@quotient+6,?___aodiv+6
  6598   003100  C01E  F00C         	movff	___aodiv@quotient+7,?___aodiv+7
  6599   003104  0012               	return		;funcret
  6600   003106                     __end_of___aodiv:
  6601                           	callstack 0
  6602                           
  6603 ;; *************** function _sendTxBuf *****************
  6604 ;; Defined at:
  6605 ;;		line 93 in file "serial.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;		None
  6610 ;; Return value:  Size  Location     Type
  6611 ;;                  1    wreg      void 
  6612 ;; Registers used:
  6613 ;;		wreg, status,2, status,0, cstack
  6614 ;; Tracked objects:
  6615 ;;		On entry : 0/0
  6616 ;;		On exit  : 0/0
  6617 ;;		Unchanged: 0/0
  6618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;Total ram usage:        0 bytes
  6624 ;; Hardware stack levels used: 1
  6625 ;; Hardware stack levels required when called: 3
  6626 ;; This function calls:
  6627 ;;		_isDataInTxBuf
  6628 ;; This function is called by:
  6629 ;;		_main
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text25
  6634   003D84                     __ptext25:
  6635                           	callstack 0
  6636   003D84                     _sendTxBuf:
  6637                           	callstack 27
  6638   003D84                     
  6639                           ;serial.c: 94:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;
  6640   003D84  EC49  F01F         	call	_isDataInTxBuf	;wreg free
  6641   003D88  0900               	iorlw	0
  6642   003D8A  B4D8               	btfsc	status,2,c
  6643   003D8C  EFCA  F01E         	goto	u4211
  6644   003D90  EFCC  F01E         	goto	u4210
  6645   003D94                     u4211:
  6646   003D94  EFD3  F01E         	goto	l4000
  6647   003D98                     u4210:
  6648   003D98  010E               	movlb	14	; () banked
  6649   003D9A  852D               	bsf	45,2,b	;volatile
  6650   003D9C                     
  6651                           ; BSR set to: 14
  6652                           ;serial.c: 95:     DataFlag =1;}
  6653   003D9C  0E01               	movlw	1
  6654   003D9E  0100               	movlb	0	; () banked
  6655   003DA0  6FFF               	movwf	_DataFlag& (0+255),b	;volatile
  6656   003DA2  EFD6  F01E         	goto	l194
  6657   003DA6                     l4000:
  6658                           
  6659                           ;serial.c: 97:         DataFlag=0;}
  6660   003DA6  0E00               	movlw	0
  6661   003DA8  0100               	movlb	0	; () banked
  6662   003DAA  6FFF               	movwf	_DataFlag& (0+255),b	;volatile
  6663   003DAC                     l194:
  6664                           
  6665                           ; BSR set to: 0
  6666   003DAC  0012               	return		;funcret
  6667   003DAE                     __end_of_sendTxBuf:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _isDataInTxBuf *****************
  6671 ;; Defined at:
  6672 ;;		line 80 in file "serial.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      unsigned char 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 2
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_sendTxBuf
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text26
  6701   003E92                     __ptext26:
  6702                           	callstack 0
  6703   003E92                     _isDataInTxBuf:
  6704                           	callstack 27
  6705   003E92                     
  6706                           ;serial.c: 81:     return (TxBufWriteCnt!=TxBufReadCnt);
  6707   003E92  5057               	movf	_TxBufReadCnt^0,w,c	;volatile
  6708   003E94  1858               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  6709   003E96  A4D8               	btfss	status,2,c
  6710   003E98  EF50  F01F         	goto	u4051
  6711   003E9C  EF53  F01F         	goto	u4050
  6712   003EA0                     u4051:
  6713   003EA0  0E01               	movlw	1
  6714   003EA2  EF54  F01F         	goto	u4060
  6715   003EA6                     u4050:
  6716   003EA6  0E00               	movlw	0
  6717   003EA8                     u4060:
  6718   003EA8  0012               	return		;funcret
  6719   003EAA                     __end_of_isDataInTxBuf:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _readColours *****************
  6723 ;; Defined at:
  6724 ;;		line 93 in file "color.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  vals            2   15[COMRAM] PTR struct RGB
  6727 ;;		 -> vals(8), 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  1    wreg      void 
  6732 ;; Registers used:
  6733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6742 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6743 ;;Total ram usage:        2 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; Hardware stack levels required when called: 5
  6746 ;; This function calls:
  6747 ;;		_color_read_Blue
  6748 ;;		_color_read_Green
  6749 ;;		_color_read_Red
  6750 ;;		_color_read_lum
  6751 ;; This function is called by:
  6752 ;;		_main
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text27
  6757   00388E                     __ptext27:
  6758                           	callstack 0
  6759   00388E                     _readColours:
  6760                           	callstack 25
  6761   00388E                     
  6762                           ;color.c: 94:     vals ->R = color_read_Red();
  6763   00388E  EC19  F01D         	call	_color_read_Red	;wreg free
  6764   003892  C010  FFD9         	movff	readColours@vals,fsr2l
  6765   003896  C011  FFDA         	movff	readColours@vals+1,fsr2h
  6766   00389A  C009  FFDE         	movff	?_color_read_Red,postinc2
  6767   00389E  C00A  FFDD         	movff	?_color_read_Red+1,postdec2
  6768                           
  6769                           ;color.c: 95:     vals ->B = color_read_Blue();
  6770   0038A2  EC69  F01D         	call	_color_read_Blue	;wreg free
  6771   0038A6  EE20 F004          	lfsr	2,4
  6772   0038AA  5010               	movf	readColours@vals^0,w,c
  6773   0038AC  26D9               	addwf	fsr2l,f,c
  6774   0038AE  5011               	movf	(readColours@vals+1)^0,w,c
  6775   0038B0  22DA               	addwfc	fsr2h,f,c
  6776   0038B2  C009  FFDE         	movff	?_color_read_Blue,postinc2
  6777   0038B6  C00A  FFDD         	movff	?_color_read_Blue+1,postdec2
  6778                           
  6779                           ;color.c: 96:     vals ->G = color_read_Green();
  6780   0038BA  EC41  F01D         	call	_color_read_Green	;wreg free
  6781   0038BE  EE20 F002          	lfsr	2,2
  6782   0038C2  5010               	movf	readColours@vals^0,w,c
  6783   0038C4  26D9               	addwf	fsr2l,f,c
  6784   0038C6  5011               	movf	(readColours@vals+1)^0,w,c
  6785   0038C8  22DA               	addwfc	fsr2h,f,c
  6786   0038CA  C009  FFDE         	movff	?_color_read_Green,postinc2
  6787   0038CE  C00A  FFDD         	movff	?_color_read_Green+1,postdec2
  6788                           
  6789                           ;color.c: 97:     vals ->L = color_read_lum();
  6790   0038D2  ECF1  F01C         	call	_color_read_lum	;wreg free
  6791   0038D6  EE20 F006          	lfsr	2,6
  6792   0038DA  5010               	movf	readColours@vals^0,w,c
  6793   0038DC  26D9               	addwf	fsr2l,f,c
  6794   0038DE  5011               	movf	(readColours@vals+1)^0,w,c
  6795   0038E0  22DA               	addwfc	fsr2h,f,c
  6796   0038E2  C009  FFDE         	movff	?_color_read_lum,postinc2
  6797   0038E6  C00A  FFDD         	movff	?_color_read_lum+1,postdec2
  6798   0038EA  0012               	return		;funcret
  6799   0038EC                     __end_of_readColours:
  6800                           	callstack 0
  6801                           
  6802 ;; *************** function _color_read_lum *****************
  6803 ;; Defined at:
  6804 ;;		line 37 in file "color.c"
  6805 ;; Parameters:    Size  Location     Type
  6806 ;;		None
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  tmp             2   13[COMRAM] unsigned int 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  2    8[COMRAM] unsigned int 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0, cstack
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6820 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6821 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6822 ;;Total ram usage:        7 bytes
  6823 ;; Hardware stack levels used: 1
  6824 ;; Hardware stack levels required when called: 4
  6825 ;; This function calls:
  6826 ;;		_I2C_2_Master_Read
  6827 ;;		_I2C_2_Master_RepStart
  6828 ;;		_I2C_2_Master_Start
  6829 ;;		_I2C_2_Master_Stop
  6830 ;;		_I2C_2_Master_Write
  6831 ;; This function is called by:
  6832 ;;		_readColours
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text28
  6837   0039E2                     __ptext28:
  6838                           	callstack 0
  6839   0039E2                     _color_read_lum:
  6840                           	callstack 25
  6841   0039E2                     
  6842                           ;color.c: 39:  unsigned int tmp;;color.c: 40:  I2C_2_Master_Start();
  6843   0039E2  EC6C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6844                           
  6845                           ;color.c: 41:  I2C_2_Master_Write(0x52 | 0x00);
  6846   0039E6  0E52               	movlw	82
  6847   0039E8  EC5C  F01F         	call	_I2C_2_Master_Write
  6848                           
  6849                           ;color.c: 42:  I2C_2_Master_Write(0xA0 | 0x14);
  6850   0039EC  0EB4               	movlw	180
  6851   0039EE  EC5C  F01F         	call	_I2C_2_Master_Write
  6852                           
  6853                           ;color.c: 43:  I2C_2_Master_RepStart();
  6854   0039F2  EC62  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6855                           
  6856                           ;color.c: 44:  I2C_2_Master_Write(0x52 | 0x01);
  6857   0039F6  0E53               	movlw	83
  6858   0039F8  EC5C  F01F         	call	_I2C_2_Master_Write
  6859                           
  6860                           ;color.c: 45:  tmp=I2C_2_Master_Read(1);
  6861   0039FC  0E01               	movlw	1
  6862   0039FE  ECF8  F01D         	call	_I2C_2_Master_Read
  6863   003A02  6E0B               	movwf	??_color_read_lum^0,c
  6864   003A04  500B               	movf	??_color_read_lum^0,w,c
  6865   003A06  6E0E               	movwf	color_read_lum@tmp^0,c
  6866   003A08  6A0F               	clrf	(color_read_lum@tmp+1)^0,c
  6867                           
  6868                           ;color.c: 46:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6869   003A0A  0E00               	movlw	0
  6870   003A0C  ECF8  F01D         	call	_I2C_2_Master_Read
  6871   003A10  6E0B               	movwf	??_color_read_lum^0,c
  6872   003A12  500B               	movf	??_color_read_lum^0,w,c
  6873   003A14  6E0D               	movwf	(??_color_read_lum+2)^0,c
  6874   003A16  6A0C               	clrf	(??_color_read_lum+1)^0,c
  6875   003A18  500E               	movf	color_read_lum@tmp^0,w,c
  6876   003A1A  100C               	iorwf	(??_color_read_lum+1)^0,w,c
  6877   003A1C  6E0E               	movwf	color_read_lum@tmp^0,c
  6878   003A1E  500F               	movf	(color_read_lum@tmp+1)^0,w,c
  6879   003A20  100D               	iorwf	(??_color_read_lum+2)^0,w,c
  6880   003A22  6E0F               	movwf	(color_read_lum@tmp+1)^0,c
  6881                           
  6882                           ;color.c: 47:  I2C_2_Master_Stop();
  6883   003A24  EC67  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6884   003A28                     
  6885                           ;color.c: 48:  return tmp;
  6886   003A28  C00E  F009         	movff	color_read_lum@tmp,?_color_read_lum
  6887   003A2C  C00F  F00A         	movff	color_read_lum@tmp+1,?_color_read_lum+1
  6888   003A30  0012               	return		;funcret
  6889   003A32                     __end_of_color_read_lum:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function _color_read_Red *****************
  6893 ;; Defined at:
  6894 ;;		line 51 in file "color.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;		None
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  tmp             2   13[COMRAM] unsigned int 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  2    8[COMRAM] unsigned int 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6908 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;Total ram usage:        7 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 4
  6915 ;; This function calls:
  6916 ;;		_I2C_2_Master_Read
  6917 ;;		_I2C_2_Master_RepStart
  6918 ;;		_I2C_2_Master_Start
  6919 ;;		_I2C_2_Master_Stop
  6920 ;;		_I2C_2_Master_Write
  6921 ;; This function is called by:
  6922 ;;		_readColours
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text29
  6927   003A32                     __ptext29:
  6928                           	callstack 0
  6929   003A32                     _color_read_Red:
  6930                           	callstack 25
  6931   003A32                     
  6932                           ;color.c: 53:  unsigned int tmp;;color.c: 54:  I2C_2_Master_Start();
  6933   003A32  EC6C  F01F         	call	_I2C_2_Master_Start	;wreg free
  6934                           
  6935                           ;color.c: 55:  I2C_2_Master_Write(0x52 | 0x00);
  6936   003A36  0E52               	movlw	82
  6937   003A38  EC5C  F01F         	call	_I2C_2_Master_Write
  6938                           
  6939                           ;color.c: 56:  I2C_2_Master_Write(0xA0 | 0x16);
  6940   003A3C  0EB6               	movlw	182
  6941   003A3E  EC5C  F01F         	call	_I2C_2_Master_Write
  6942                           
  6943                           ;color.c: 57:  I2C_2_Master_RepStart();
  6944   003A42  EC62  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  6945                           
  6946                           ;color.c: 58:  I2C_2_Master_Write(0x52 | 0x01);
  6947   003A46  0E53               	movlw	83
  6948   003A48  EC5C  F01F         	call	_I2C_2_Master_Write
  6949                           
  6950                           ;color.c: 59:  tmp=I2C_2_Master_Read(1);
  6951   003A4C  0E01               	movlw	1
  6952   003A4E  ECF8  F01D         	call	_I2C_2_Master_Read
  6953   003A52  6E0B               	movwf	??_color_read_Red^0,c
  6954   003A54  500B               	movf	??_color_read_Red^0,w,c
  6955   003A56  6E0E               	movwf	color_read_Red@tmp^0,c
  6956   003A58  6A0F               	clrf	(color_read_Red@tmp+1)^0,c
  6957                           
  6958                           ;color.c: 60:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  6959   003A5A  0E00               	movlw	0
  6960   003A5C  ECF8  F01D         	call	_I2C_2_Master_Read
  6961   003A60  6E0B               	movwf	??_color_read_Red^0,c
  6962   003A62  500B               	movf	??_color_read_Red^0,w,c
  6963   003A64  6E0D               	movwf	(??_color_read_Red+2)^0,c
  6964   003A66  6A0C               	clrf	(??_color_read_Red+1)^0,c
  6965   003A68  500E               	movf	color_read_Red@tmp^0,w,c
  6966   003A6A  100C               	iorwf	(??_color_read_Red+1)^0,w,c
  6967   003A6C  6E0E               	movwf	color_read_Red@tmp^0,c
  6968   003A6E  500F               	movf	(color_read_Red@tmp+1)^0,w,c
  6969   003A70  100D               	iorwf	(??_color_read_Red+2)^0,w,c
  6970   003A72  6E0F               	movwf	(color_read_Red@tmp+1)^0,c
  6971                           
  6972                           ;color.c: 61:  I2C_2_Master_Stop();
  6973   003A74  EC67  F01F         	call	_I2C_2_Master_Stop	;wreg free
  6974   003A78                     
  6975                           ;color.c: 62:  return tmp;
  6976   003A78  C00E  F009         	movff	color_read_Red@tmp,?_color_read_Red
  6977   003A7C  C00F  F00A         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  6978   003A80  0012               	return		;funcret
  6979   003A82                     __end_of_color_read_Red:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _color_read_Green *****************
  6983 ;; Defined at:
  6984 ;;		line 64 in file "color.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  tmp             2   13[COMRAM] unsigned int 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  2    8[COMRAM] unsigned int 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, cstack
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;Total ram usage:        7 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 4
  7005 ;; This function calls:
  7006 ;;		_I2C_2_Master_Read
  7007 ;;		_I2C_2_Master_RepStart
  7008 ;;		_I2C_2_Master_Start
  7009 ;;		_I2C_2_Master_Stop
  7010 ;;		_I2C_2_Master_Write
  7011 ;; This function is called by:
  7012 ;;		_readColours
  7013 ;; This function uses a non-reentrant model
  7014 ;;
  7015                           
  7016                           	psect	text30
  7017   003A82                     __ptext30:
  7018                           	callstack 0
  7019   003A82                     _color_read_Green:
  7020                           	callstack 25
  7021   003A82                     
  7022                           ;color.c: 66:  unsigned int tmp;;color.c: 67:  I2C_2_Master_Start();
  7023   003A82  EC6C  F01F         	call	_I2C_2_Master_Start	;wreg free
  7024                           
  7025                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x00);
  7026   003A86  0E52               	movlw	82
  7027   003A88  EC5C  F01F         	call	_I2C_2_Master_Write
  7028                           
  7029                           ;color.c: 69:  I2C_2_Master_Write(0xA0 | 0x16);
  7030   003A8C  0EB6               	movlw	182
  7031   003A8E  EC5C  F01F         	call	_I2C_2_Master_Write
  7032                           
  7033                           ;color.c: 70:  I2C_2_Master_RepStart();
  7034   003A92  EC62  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7035                           
  7036                           ;color.c: 71:  I2C_2_Master_Write(0x52 | 0x01);
  7037   003A96  0E53               	movlw	83
  7038   003A98  EC5C  F01F         	call	_I2C_2_Master_Write
  7039                           
  7040                           ;color.c: 72:  tmp=I2C_2_Master_Read(1);
  7041   003A9C  0E01               	movlw	1
  7042   003A9E  ECF8  F01D         	call	_I2C_2_Master_Read
  7043   003AA2  6E0B               	movwf	??_color_read_Green^0,c
  7044   003AA4  500B               	movf	??_color_read_Green^0,w,c
  7045   003AA6  6E0E               	movwf	color_read_Green@tmp^0,c
  7046   003AA8  6A0F               	clrf	(color_read_Green@tmp+1)^0,c
  7047                           
  7048                           ;color.c: 73:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7049   003AAA  0E00               	movlw	0
  7050   003AAC  ECF8  F01D         	call	_I2C_2_Master_Read
  7051   003AB0  6E0B               	movwf	??_color_read_Green^0,c
  7052   003AB2  500B               	movf	??_color_read_Green^0,w,c
  7053   003AB4  6E0D               	movwf	(??_color_read_Green+2)^0,c
  7054   003AB6  6A0C               	clrf	(??_color_read_Green+1)^0,c
  7055   003AB8  500E               	movf	color_read_Green@tmp^0,w,c
  7056   003ABA  100C               	iorwf	(??_color_read_Green+1)^0,w,c
  7057   003ABC  6E0E               	movwf	color_read_Green@tmp^0,c
  7058   003ABE  500F               	movf	(color_read_Green@tmp+1)^0,w,c
  7059   003AC0  100D               	iorwf	(??_color_read_Green+2)^0,w,c
  7060   003AC2  6E0F               	movwf	(color_read_Green@tmp+1)^0,c
  7061                           
  7062                           ;color.c: 74:  I2C_2_Master_Stop();
  7063   003AC4  EC67  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7064   003AC8                     
  7065                           ;color.c: 75:  return tmp;
  7066   003AC8  C00E  F009         	movff	color_read_Green@tmp,?_color_read_Green
  7067   003ACC  C00F  F00A         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7068   003AD0  0012               	return		;funcret
  7069   003AD2                     __end_of_color_read_Green:
  7070                           	callstack 0
  7071                           
  7072 ;; *************** function _color_read_Blue *****************
  7073 ;; Defined at:
  7074 ;;		line 78 in file "color.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;		None
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  tmp             2   13[COMRAM] unsigned int 
  7079 ;; Return value:  Size  Location     Type
  7080 ;;                  2    8[COMRAM] unsigned int 
  7081 ;; Registers used:
  7082 ;;		wreg, status,2, status,0, cstack
  7083 ;; Tracked objects:
  7084 ;;		On entry : 0/0
  7085 ;;		On exit  : 0/0
  7086 ;;		Unchanged: 0/0
  7087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7088 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7092 ;;Total ram usage:        7 bytes
  7093 ;; Hardware stack levels used: 1
  7094 ;; Hardware stack levels required when called: 4
  7095 ;; This function calls:
  7096 ;;		_I2C_2_Master_Read
  7097 ;;		_I2C_2_Master_RepStart
  7098 ;;		_I2C_2_Master_Start
  7099 ;;		_I2C_2_Master_Stop
  7100 ;;		_I2C_2_Master_Write
  7101 ;; This function is called by:
  7102 ;;		_readColours
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text31
  7107   003AD2                     __ptext31:
  7108                           	callstack 0
  7109   003AD2                     _color_read_Blue:
  7110                           	callstack 25
  7111   003AD2                     
  7112                           ;color.c: 80:  unsigned int tmp;;color.c: 81:  I2C_2_Master_Start();
  7113   003AD2  EC6C  F01F         	call	_I2C_2_Master_Start	;wreg free
  7114                           
  7115                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x00);
  7116   003AD6  0E52               	movlw	82
  7117   003AD8  EC5C  F01F         	call	_I2C_2_Master_Write
  7118                           
  7119                           ;color.c: 83:  I2C_2_Master_Write(0xA0 | 0x1A);
  7120   003ADC  0EBA               	movlw	186
  7121   003ADE  EC5C  F01F         	call	_I2C_2_Master_Write
  7122                           
  7123                           ;color.c: 84:  I2C_2_Master_RepStart();
  7124   003AE2  EC62  F01F         	call	_I2C_2_Master_RepStart	;wreg free
  7125                           
  7126                           ;color.c: 85:  I2C_2_Master_Write(0x52 | 0x01);
  7127   003AE6  0E53               	movlw	83
  7128   003AE8  EC5C  F01F         	call	_I2C_2_Master_Write
  7129                           
  7130                           ;color.c: 86:  tmp=I2C_2_Master_Read(1);
  7131   003AEC  0E01               	movlw	1
  7132   003AEE  ECF8  F01D         	call	_I2C_2_Master_Read
  7133   003AF2  6E0B               	movwf	??_color_read_Blue^0,c
  7134   003AF4  500B               	movf	??_color_read_Blue^0,w,c
  7135   003AF6  6E0E               	movwf	color_read_Blue@tmp^0,c
  7136   003AF8  6A0F               	clrf	(color_read_Blue@tmp+1)^0,c
  7137                           
  7138                           ;color.c: 87:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7139   003AFA  0E00               	movlw	0
  7140   003AFC  ECF8  F01D         	call	_I2C_2_Master_Read
  7141   003B00  6E0B               	movwf	??_color_read_Blue^0,c
  7142   003B02  500B               	movf	??_color_read_Blue^0,w,c
  7143   003B04  6E0D               	movwf	(??_color_read_Blue+2)^0,c
  7144   003B06  6A0C               	clrf	(??_color_read_Blue+1)^0,c
  7145   003B08  500E               	movf	color_read_Blue@tmp^0,w,c
  7146   003B0A  100C               	iorwf	(??_color_read_Blue+1)^0,w,c
  7147   003B0C  6E0E               	movwf	color_read_Blue@tmp^0,c
  7148   003B0E  500F               	movf	(color_read_Blue@tmp+1)^0,w,c
  7149   003B10  100D               	iorwf	(??_color_read_Blue+2)^0,w,c
  7150   003B12  6E0F               	movwf	(color_read_Blue@tmp+1)^0,c
  7151                           
  7152                           ;color.c: 88:  I2C_2_Master_Stop();
  7153   003B14  EC67  F01F         	call	_I2C_2_Master_Stop	;wreg free
  7154   003B18                     
  7155                           ;color.c: 89:  return tmp;
  7156   003B18  C00E  F009         	movff	color_read_Blue@tmp,?_color_read_Blue
  7157   003B1C  C00F  F00A         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7158   003B20  0012               	return		;funcret
  7159   003B22                     __end_of_color_read_Blue:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function _I2C_2_Master_RepStart *****************
  7163 ;; Defined at:
  7164 ;;		line 33 in file "i2c.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0, cstack
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;Total ram usage:        0 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; Hardware stack levels required when called: 3
  7185 ;; This function calls:
  7186 ;;		_I2C_2_Master_Idle
  7187 ;; This function is called by:
  7188 ;;		_color_read_lum
  7189 ;;		_color_read_Red
  7190 ;;		_color_read_Green
  7191 ;;		_color_read_Blue
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           	psect	text32
  7196   003EC4                     __ptext32:
  7197                           	callstack 0
  7198   003EC4                     _I2C_2_Master_RepStart:
  7199                           	callstack 25
  7200   003EC4                     
  7201                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7202   003EC4  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7203   003EC8                     
  7204                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7205   003EC8  010E               	movlb	14	; () banked
  7206   003ECA  83DA               	bsf	218,1,b	;volatile
  7207   003ECC                     
  7208                           ; BSR set to: 14
  7209   003ECC  0012               	return		;funcret
  7210   003ECE                     __end_of_I2C_2_Master_RepStart:
  7211                           	callstack 0
  7212                           
  7213 ;; *************** function _I2C_2_Master_Read *****************
  7214 ;; Defined at:
  7215 ;;		line 51 in file "i2c.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  ack             1    wreg     unsigned char 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  ack             1    6[COMRAM] unsigned char 
  7220 ;;  tmp             1    7[COMRAM] unsigned char 
  7221 ;; Return value:  Size  Location     Type
  7222 ;;                  1    wreg      unsigned char 
  7223 ;; Registers used:
  7224 ;;		wreg, status,2, status,0, cstack
  7225 ;; Tracked objects:
  7226 ;;		On entry : 0/0
  7227 ;;		On exit  : 0/0
  7228 ;;		Unchanged: 0/0
  7229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;Total ram usage:        3 bytes
  7235 ;; Hardware stack levels used: 1
  7236 ;; Hardware stack levels required when called: 3
  7237 ;; This function calls:
  7238 ;;		_I2C_2_Master_Idle
  7239 ;; This function is called by:
  7240 ;;		_color_read_lum
  7241 ;;		_color_read_Red
  7242 ;;		_color_read_Green
  7243 ;;		_color_read_Blue
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text33
  7248   003BF0                     __ptext33:
  7249                           	callstack 0
  7250   003BF0                     _I2C_2_Master_Read:
  7251                           	callstack 25
  7252                           
  7253                           ; BSR set to: 14
  7254                           ;incstack = 0
  7255                           ;I2C_2_Master_Read@ack stored from wreg
  7256   003BF0  6E07               	movwf	I2C_2_Master_Read@ack^0,c
  7257   003BF2                     
  7258                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7259   003BF2  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7260   003BF6                     
  7261                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7262   003BF6  010E               	movlb	14	; () banked
  7263   003BF8  87DA               	bsf	218,3,b	;volatile
  7264                           
  7265                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7266   003BFA  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7267   003BFE                     
  7268                           ;i2c.c: 57:   tmp = SSP2BUF;
  7269   003BFE  CED5 F008          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7270                           
  7271                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7272   003C02  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  7273   003C06                     
  7274                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7275   003C06  5007               	movf	I2C_2_Master_Read@ack^0,w,c
  7276   003C08  B4D8               	btfsc	status,2,c
  7277   003C0A  EF09  F01E         	goto	u3981
  7278   003C0E  EF0D  F01E         	goto	u3980
  7279   003C12                     u3981:
  7280   003C12  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7281   003C14  2A06               	incf	??_I2C_2_Master_Read^0,f,c
  7282   003C16  EF0E  F01E         	goto	u3998
  7283   003C1A                     u3980:
  7284   003C1A  6A06               	clrf	??_I2C_2_Master_Read^0,c
  7285   003C1C                     u3998:
  7286   003C1C  3A06               	swapf	??_I2C_2_Master_Read^0,f,c
  7287   003C1E  4606               	rlncf	??_I2C_2_Master_Read^0,f,c
  7288   003C20  010E               	movlb	14	; () banked
  7289   003C22  51DA               	movf	218,w,b	;volatile
  7290   003C24  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7291   003C26  0BDF               	andlw	-33
  7292   003C28  1806               	xorwf	??_I2C_2_Master_Read^0,w,c
  7293   003C2A  6FDA               	movwf	218,b	;volatile
  7294   003C2C                     
  7295                           ; BSR set to: 14
  7296                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7297   003C2C  89DA               	bsf	218,4,b	;volatile
  7298   003C2E                     
  7299                           ; BSR set to: 14
  7300                           ;i2c.c: 61:   return tmp;
  7301   003C2E  5008               	movf	I2C_2_Master_Read@tmp^0,w,c
  7302   003C30                     
  7303                           ; BSR set to: 14
  7304   003C30  0012               	return		;funcret
  7305   003C32                     __end_of_I2C_2_Master_Read:
  7306                           	callstack 0
  7307                           
  7308 ;; *************** function _initUSART4 *****************
  7309 ;; Defined at:
  7310 ;;		line 4 in file "serial.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;		None
  7313 ;; Auto vars:     Size  Location     Type
  7314 ;;		None
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  1    wreg      void 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7328 ;;Total ram usage:        0 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 2
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_main
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text34
  7339   003E74                     __ptext34:
  7340                           	callstack 0
  7341   003E74                     _initUSART4:
  7342                           	callstack 28
  7343   003E74                     
  7344                           ;serial.c: 5:     RC0PPS = 0x12;
  7345   003E74  0E12               	movlw	18
  7346   003E76  010E               	movlb	14	; () banked
  7347   003E78  6F62               	movwf	98,b	;volatile
  7348                           
  7349                           ;serial.c: 6:     RX4PPS = 0x11;
  7350   003E7A  0E11               	movlw	17
  7351   003E7C  6F15               	movwf	21,b	;volatile
  7352   003E7E                     
  7353                           ; BSR set to: 14
  7354                           ;serial.c: 7:     BAUD4CONbits.BRG16 = 0;
  7355   003E7E  97E9               	bcf	233,3,b	;volatile
  7356   003E80                     
  7357                           ; BSR set to: 14
  7358                           ;serial.c: 8:     TX4STAbits.BRGH = 0;
  7359   003E80  95E8               	bcf	232,2,b	;volatile
  7360                           
  7361                           ;serial.c: 9:     SP4BRGL = 51;
  7362   003E82  0E33               	movlw	51
  7363   003E84  6FE5               	movwf	229,b	;volatile
  7364                           
  7365                           ;serial.c: 10:     SP4BRGH = 0;
  7366   003E86  0E00               	movlw	0
  7367   003E88  6FE6               	movwf	230,b	;volatile
  7368   003E8A                     
  7369                           ; BSR set to: 14
  7370                           ;serial.c: 12:     RC4STAbits.CREN = 1;
  7371   003E8A  89E7               	bsf	231,4,b	;volatile
  7372   003E8C                     
  7373                           ; BSR set to: 14
  7374                           ;serial.c: 13:     TX4STAbits.TXEN = 1;
  7375   003E8C  8BE8               	bsf	232,5,b	;volatile
  7376   003E8E                     
  7377                           ; BSR set to: 14
  7378                           ;serial.c: 14:     RC4STAbits.SPEN = 1;
  7379   003E8E  8FE7               	bsf	231,7,b	;volatile
  7380   003E90                     
  7381                           ; BSR set to: 14
  7382   003E90  0012               	return		;funcret
  7383   003E92                     __end_of_initUSART4:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _colour_rel *****************
  7387 ;; Defined at:
  7388 ;;		line 100 in file "color.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  vals            2   29[COMRAM] PTR struct RGB
  7391 ;;		 -> vals(8), 
  7392 ;;  rel             2   31[COMRAM] PTR struct RGB_rel
  7393 ;;		 -> rel(12), 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  L               4   45[COMRAM] float 
  7396 ;;  B               4   41[COMRAM] float 
  7397 ;;  G               4   37[COMRAM] float 
  7398 ;;  R               4   33[COMRAM] float 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;Total ram usage:       20 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 3
  7415 ;; This function calls:
  7416 ;;		___fldiv
  7417 ;;		___xxtofl
  7418 ;; This function is called by:
  7419 ;;		_main
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text35
  7424   002DF4                     __ptext35:
  7425                           	callstack 0
  7426   002DF4                     _colour_rel:
  7427                           	callstack 27
  7428   002DF4                     
  7429                           ;color.c: 101:     float R = vals->R;
  7430   002DF4  C01E  FFD9         	movff	colour_rel@vals,fsr2l
  7431   002DF8  C01F  FFDA         	movff	colour_rel@vals+1,fsr2h
  7432   002DFC  CFDE F005          	movff	postinc2,___xxtofl@val
  7433   002E00  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7434   002E04  0E00               	movlw	0
  7435   002E06  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7436   002E08  0EFF               	movlw	-1
  7437   002E0A  6E07               	movwf	(___xxtofl@val+2)^0,c
  7438   002E0C  6E08               	movwf	(___xxtofl@val+3)^0,c
  7439   002E0E  0E01               	movlw	1
  7440   002E10  EC20  F016         	call	___xxtofl
  7441   002E14  C005  F022         	movff	?___xxtofl,colour_rel@R
  7442   002E18  C006  F023         	movff	?___xxtofl+1,colour_rel@R+1
  7443   002E1C  C007  F024         	movff	?___xxtofl+2,colour_rel@R+2
  7444   002E20  C008  F025         	movff	?___xxtofl+3,colour_rel@R+3
  7445                           
  7446                           ;color.c: 102:     float G = vals->G;
  7447   002E24  EE20 F002          	lfsr	2,2
  7448   002E28  501E               	movf	colour_rel@vals^0,w,c
  7449   002E2A  26D9               	addwf	fsr2l,f,c
  7450   002E2C  501F               	movf	(colour_rel@vals+1)^0,w,c
  7451   002E2E  22DA               	addwfc	fsr2h,f,c
  7452   002E30  CFDE F005          	movff	postinc2,___xxtofl@val
  7453   002E34  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7454   002E38  0E00               	movlw	0
  7455   002E3A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7456   002E3C  0EFF               	movlw	-1
  7457   002E3E  6E07               	movwf	(___xxtofl@val+2)^0,c
  7458   002E40  6E08               	movwf	(___xxtofl@val+3)^0,c
  7459   002E42  0E01               	movlw	1
  7460   002E44  EC20  F016         	call	___xxtofl
  7461   002E48  C005  F026         	movff	?___xxtofl,colour_rel@G
  7462   002E4C  C006  F027         	movff	?___xxtofl+1,colour_rel@G+1
  7463   002E50  C007  F028         	movff	?___xxtofl+2,colour_rel@G+2
  7464   002E54  C008  F029         	movff	?___xxtofl+3,colour_rel@G+3
  7465                           
  7466                           ;color.c: 103:     float B = vals->B;
  7467   002E58  EE20 F004          	lfsr	2,4
  7468   002E5C  501E               	movf	colour_rel@vals^0,w,c
  7469   002E5E  26D9               	addwf	fsr2l,f,c
  7470   002E60  501F               	movf	(colour_rel@vals+1)^0,w,c
  7471   002E62  22DA               	addwfc	fsr2h,f,c
  7472   002E64  CFDE F005          	movff	postinc2,___xxtofl@val
  7473   002E68  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7474   002E6C  0E00               	movlw	0
  7475   002E6E  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7476   002E70  0EFF               	movlw	-1
  7477   002E72  6E07               	movwf	(___xxtofl@val+2)^0,c
  7478   002E74  6E08               	movwf	(___xxtofl@val+3)^0,c
  7479   002E76  0E01               	movlw	1
  7480   002E78  EC20  F016         	call	___xxtofl
  7481   002E7C  C005  F02A         	movff	?___xxtofl,colour_rel@B
  7482   002E80  C006  F02B         	movff	?___xxtofl+1,colour_rel@B+1
  7483   002E84  C007  F02C         	movff	?___xxtofl+2,colour_rel@B+2
  7484   002E88  C008  F02D         	movff	?___xxtofl+3,colour_rel@B+3
  7485                           
  7486                           ;color.c: 104:     float L = vals->L;
  7487   002E8C  EE20 F006          	lfsr	2,6
  7488   002E90  501E               	movf	colour_rel@vals^0,w,c
  7489   002E92  26D9               	addwf	fsr2l,f,c
  7490   002E94  501F               	movf	(colour_rel@vals+1)^0,w,c
  7491   002E96  22DA               	addwfc	fsr2h,f,c
  7492   002E98  CFDE F005          	movff	postinc2,___xxtofl@val
  7493   002E9C  CFDD F006          	movff	postdec2,___xxtofl@val+1
  7494   002EA0  0E00               	movlw	0
  7495   002EA2  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7496   002EA4  0EFF               	movlw	-1
  7497   002EA6  6E07               	movwf	(___xxtofl@val+2)^0,c
  7498   002EA8  6E08               	movwf	(___xxtofl@val+3)^0,c
  7499   002EAA  0E01               	movlw	1
  7500   002EAC  EC20  F016         	call	___xxtofl
  7501   002EB0  C005  F02E         	movff	?___xxtofl,colour_rel@L
  7502   002EB4  C006  F02F         	movff	?___xxtofl+1,colour_rel@L+1
  7503   002EB8  C007  F030         	movff	?___xxtofl+2,colour_rel@L+2
  7504   002EBC  C008  F031         	movff	?___xxtofl+3,colour_rel@L+3
  7505                           
  7506                           ;color.c: 105:     rel -> R = R/L;
  7507   002EC0  C022  F005         	movff	colour_rel@R,___fldiv@b
  7508   002EC4  C023  F006         	movff	colour_rel@R+1,___fldiv@b+1
  7509   002EC8  C024  F007         	movff	colour_rel@R+2,___fldiv@b+2
  7510   002ECC  C025  F008         	movff	colour_rel@R+3,___fldiv@b+3
  7511   002ED0  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7512   002ED4  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7513   002ED8  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7514   002EDC  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7515   002EE0  EC88  F010         	call	___fldiv	;wreg free
  7516   002EE4  C020  FFD9         	movff	colour_rel@rel,fsr2l
  7517   002EE8  C021  FFDA         	movff	colour_rel@rel+1,fsr2h
  7518   002EEC  C005  FFDE         	movff	?___fldiv,postinc2
  7519   002EF0  C006  FFDE         	movff	?___fldiv+1,postinc2
  7520   002EF4  C007  FFDE         	movff	?___fldiv+2,postinc2
  7521   002EF8  C008  FFDE         	movff	?___fldiv+3,postinc2
  7522                           
  7523                           ;color.c: 106:     rel -> B = B/L;
  7524   002EFC  C02A  F005         	movff	colour_rel@B,___fldiv@b
  7525   002F00  C02B  F006         	movff	colour_rel@B+1,___fldiv@b+1
  7526   002F04  C02C  F007         	movff	colour_rel@B+2,___fldiv@b+2
  7527   002F08  C02D  F008         	movff	colour_rel@B+3,___fldiv@b+3
  7528   002F0C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7529   002F10  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7530   002F14  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7531   002F18  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7532   002F1C  EC88  F010         	call	___fldiv	;wreg free
  7533   002F20  EE20 F008          	lfsr	2,8
  7534   002F24  5020               	movf	colour_rel@rel^0,w,c
  7535   002F26  26D9               	addwf	fsr2l,f,c
  7536   002F28  5021               	movf	(colour_rel@rel+1)^0,w,c
  7537   002F2A  22DA               	addwfc	fsr2h,f,c
  7538   002F2C  C005  FFDE         	movff	?___fldiv,postinc2
  7539   002F30  C006  FFDE         	movff	?___fldiv+1,postinc2
  7540   002F34  C007  FFDE         	movff	?___fldiv+2,postinc2
  7541   002F38  C008  FFDE         	movff	?___fldiv+3,postinc2
  7542                           
  7543                           ;color.c: 107:     rel -> G = G/L;
  7544   002F3C  C026  F005         	movff	colour_rel@G,___fldiv@b
  7545   002F40  C027  F006         	movff	colour_rel@G+1,___fldiv@b+1
  7546   002F44  C028  F007         	movff	colour_rel@G+2,___fldiv@b+2
  7547   002F48  C029  F008         	movff	colour_rel@G+3,___fldiv@b+3
  7548   002F4C  C02E  F009         	movff	colour_rel@L,___fldiv@a
  7549   002F50  C02F  F00A         	movff	colour_rel@L+1,___fldiv@a+1
  7550   002F54  C030  F00B         	movff	colour_rel@L+2,___fldiv@a+2
  7551   002F58  C031  F00C         	movff	colour_rel@L+3,___fldiv@a+3
  7552   002F5C  EC88  F010         	call	___fldiv	;wreg free
  7553   002F60  EE20 F004          	lfsr	2,4
  7554   002F64  5020               	movf	colour_rel@rel^0,w,c
  7555   002F66  26D9               	addwf	fsr2l,f,c
  7556   002F68  5021               	movf	(colour_rel@rel+1)^0,w,c
  7557   002F6A  22DA               	addwfc	fsr2h,f,c
  7558   002F6C  C005  FFDE         	movff	?___fldiv,postinc2
  7559   002F70  C006  FFDE         	movff	?___fldiv+1,postinc2
  7560   002F74  C007  FFDE         	movff	?___fldiv+2,postinc2
  7561   002F78  C008  FFDE         	movff	?___fldiv+3,postinc2
  7562   002F7C  0012               	return		;funcret
  7563   002F7E                     __end_of_colour_rel:
  7564                           	callstack 0
  7565                           
  7566 ;; *************** function ___xxtofl *****************
  7567 ;; Defined at:
  7568 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  sign            1    wreg     unsigned char 
  7571 ;;  val             4    4[COMRAM] long 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  sign            1   12[COMRAM] unsigned char 
  7574 ;;  arg             4   14[COMRAM] unsigned long 
  7575 ;;  exp             1   13[COMRAM] unsigned char 
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  4    4[COMRAM] unsigned char 
  7578 ;; Registers used:
  7579 ;;		wreg, status,2, status,0
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7586 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7587 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;Total ram usage:       14 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; Hardware stack levels required when called: 2
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_colour_rel
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text36
  7600   002C40                     __ptext36:
  7601                           	callstack 0
  7602   002C40                     ___xxtofl:
  7603                           	callstack 27
  7604                           
  7605                           ;incstack = 0
  7606                           ;___xxtofl@sign stored from wreg
  7607   002C40  6E0D               	movwf	___xxtofl@sign^0,c
  7608   002C42  500D               	movf	___xxtofl@sign^0,w,c
  7609   002C44  B4D8               	btfsc	status,2,c
  7610   002C46  EF27  F016         	goto	u4071
  7611   002C4A  EF29  F016         	goto	u4070
  7612   002C4E                     u4071:
  7613   002C4E  EF4B  F016         	goto	l946
  7614   002C52                     u4070:
  7615   002C52  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7616   002C54  EF30  F016         	goto	u4080
  7617   002C58  EF2E  F016         	goto	u4081
  7618   002C5C                     u4081:
  7619   002C5C  EF4B  F016         	goto	l946
  7620   002C60                     u4080:
  7621   002C60  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7622   002C64  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7623   002C68  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7624   002C6C  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7625   002C70  1E09               	comf	??___xxtofl^0,f,c
  7626   002C72  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7627   002C74  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7628   002C76  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7629   002C78  2A09               	incf	??___xxtofl^0,f,c
  7630   002C7A  0E00               	movlw	0
  7631   002C7C  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7632   002C7E  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7633   002C80  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7634   002C82  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7635   002C86  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7636   002C8A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7637   002C8E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7638   002C92  EF53  F016         	goto	l3882
  7639   002C96                     l946:
  7640   002C96  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7641   002C9A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7642   002C9E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7643   002CA2  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7644   002CA6                     l3882:
  7645   002CA6  5005               	movf	___xxtofl@val^0,w,c
  7646   002CA8  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7647   002CAA  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7648   002CAC  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7649   002CAE  A4D8               	btfss	status,2,c
  7650   002CB0  EF5C  F016         	goto	u4091
  7651   002CB4  EF5E  F016         	goto	u4090
  7652   002CB8                     u4091:
  7653   002CB8  EF68  F016         	goto	l3888
  7654   002CBC                     u4090:
  7655   002CBC  0E00               	movlw	0
  7656   002CBE  6E05               	movwf	?___xxtofl^0,c
  7657   002CC0  0E00               	movlw	0
  7658   002CC2  6E06               	movwf	(?___xxtofl+1)^0,c
  7659   002CC4  0E00               	movlw	0
  7660   002CC6  6E07               	movwf	(?___xxtofl+2)^0,c
  7661   002CC8  0E00               	movlw	0
  7662   002CCA  6E08               	movwf	(?___xxtofl+3)^0,c
  7663   002CCC  EFF9  F016         	goto	l949
  7664   002CD0                     l3888:
  7665   002CD0  0E96               	movlw	150
  7666   002CD2  6E0E               	movwf	___xxtofl@exp^0,c
  7667   002CD4  EF72  F016         	goto	l3892
  7668   002CD8                     l3890:
  7669   002CD8  2A0E               	incf	___xxtofl@exp^0,f,c
  7670   002CDA  90D8               	bcf	status,0,c
  7671   002CDC  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7672   002CDE  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7673   002CE0  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7674   002CE2  320F               	rrcf	___xxtofl@arg^0,f,c
  7675   002CE4                     l3892:
  7676   002CE4  0E00               	movlw	0
  7677   002CE6  140F               	andwf	___xxtofl@arg^0,w,c
  7678   002CE8  6E09               	movwf	??___xxtofl^0,c
  7679   002CEA  0E00               	movlw	0
  7680   002CEC  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7681   002CEE  6E0A               	movwf	(??___xxtofl+1)^0,c
  7682   002CF0  0E00               	movlw	0
  7683   002CF2  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7684   002CF4  6E0B               	movwf	(??___xxtofl+2)^0,c
  7685   002CF6  0EFE               	movlw	254
  7686   002CF8  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7687   002CFA  6E0C               	movwf	(??___xxtofl+3)^0,c
  7688   002CFC  5009               	movf	??___xxtofl^0,w,c
  7689   002CFE  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7690   002D00  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7691   002D02  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7692   002D04  A4D8               	btfss	status,2,c
  7693   002D06  EF87  F016         	goto	u4101
  7694   002D0A  EF89  F016         	goto	u4100
  7695   002D0E                     u4101:
  7696   002D0E  EF6C  F016         	goto	l3890
  7697   002D12                     u4100:
  7698   002D12  EF97  F016         	goto	l953
  7699   002D16                     l3894:
  7700   002D16  2A0E               	incf	___xxtofl@exp^0,f,c
  7701   002D18  0E01               	movlw	1
  7702   002D1A  260F               	addwf	___xxtofl@arg^0,f,c
  7703   002D1C  0E00               	movlw	0
  7704   002D1E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7705   002D20  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7706   002D22  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7707   002D24  90D8               	bcf	status,0,c
  7708   002D26  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7709   002D28  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7710   002D2A  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7711   002D2C  320F               	rrcf	___xxtofl@arg^0,f,c
  7712   002D2E                     l953:
  7713   002D2E  0E00               	movlw	0
  7714   002D30  140F               	andwf	___xxtofl@arg^0,w,c
  7715   002D32  6E09               	movwf	??___xxtofl^0,c
  7716   002D34  0E00               	movlw	0
  7717   002D36  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7718   002D38  6E0A               	movwf	(??___xxtofl+1)^0,c
  7719   002D3A  0E00               	movlw	0
  7720   002D3C  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7721   002D3E  6E0B               	movwf	(??___xxtofl+2)^0,c
  7722   002D40  0EFF               	movlw	255
  7723   002D42  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7724   002D44  6E0C               	movwf	(??___xxtofl+3)^0,c
  7725   002D46  5009               	movf	??___xxtofl^0,w,c
  7726   002D48  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7727   002D4A  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7728   002D4C  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7729   002D4E  A4D8               	btfss	status,2,c
  7730   002D50  EFAC  F016         	goto	u4111
  7731   002D54  EFAE  F016         	goto	u4110
  7732   002D58                     u4111:
  7733   002D58  EF8B  F016         	goto	l3894
  7734   002D5C                     u4110:
  7735   002D5C  EFB6  F016         	goto	l3902
  7736   002D60                     l3900:
  7737   002D60  060E               	decf	___xxtofl@exp^0,f,c
  7738   002D62  90D8               	bcf	status,0,c
  7739   002D64  360F               	rlcf	___xxtofl@arg^0,f,c
  7740   002D66  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7741   002D68  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7742   002D6A  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7743   002D6C                     l3902:
  7744   002D6C  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7745   002D6E  EFBB  F016         	goto	u4121
  7746   002D72  EFBD  F016         	goto	u4120
  7747   002D76                     u4121:
  7748   002D76  EFC5  F016         	goto	l960
  7749   002D7A                     u4120:
  7750   002D7A  0E02               	movlw	2
  7751   002D7C  600E               	cpfslt	___xxtofl@exp^0,c
  7752   002D7E  EFC3  F016         	goto	u4131
  7753   002D82  EFC5  F016         	goto	u4130
  7754   002D86                     u4131:
  7755   002D86  EFB0  F016         	goto	l3900
  7756   002D8A                     u4130:
  7757   002D8A                     l960:
  7758   002D8A  B00E               	btfsc	___xxtofl@exp^0,0,c
  7759   002D8C  EFCA  F016         	goto	u4141
  7760   002D90  EFCC  F016         	goto	u4140
  7761   002D94                     u4141:
  7762   002D94  EFCD  F016         	goto	l3908
  7763   002D98                     u4140:
  7764   002D98  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7765   002D9A                     l3908:
  7766   002D9A  90D8               	bcf	status,0,c
  7767   002D9C  320E               	rrcf	___xxtofl@exp^0,f,c
  7768   002D9E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7769   002DA2  6A0A               	clrf	(??___xxtofl+1)^0,c
  7770   002DA4  6A0B               	clrf	(??___xxtofl+2)^0,c
  7771   002DA6  6A0C               	clrf	(??___xxtofl+3)^0,c
  7772   002DA8  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7773   002DAC  6A0B               	clrf	(??___xxtofl+2)^0,c
  7774   002DAE  6A0A               	clrf	(??___xxtofl+1)^0,c
  7775   002DB0  6A09               	clrf	??___xxtofl^0,c
  7776   002DB2  5009               	movf	??___xxtofl^0,w,c
  7777   002DB4  120F               	iorwf	___xxtofl@arg^0,f,c
  7778   002DB6  500A               	movf	(??___xxtofl+1)^0,w,c
  7779   002DB8  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7780   002DBA  500B               	movf	(??___xxtofl+2)^0,w,c
  7781   002DBC  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7782   002DBE  500C               	movf	(??___xxtofl+3)^0,w,c
  7783   002DC0  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7784   002DC2  500D               	movf	___xxtofl@sign^0,w,c
  7785   002DC4  B4D8               	btfsc	status,2,c
  7786   002DC6  EFE7  F016         	goto	u4151
  7787   002DCA  EFE9  F016         	goto	u4150
  7788   002DCE                     u4151:
  7789   002DCE  EFF1  F016         	goto	l3918
  7790   002DD2                     u4150:
  7791   002DD2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7792   002DD4  EFF0  F016         	goto	u4160
  7793   002DD8  EFEE  F016         	goto	u4161
  7794   002DDC                     u4161:
  7795   002DDC  EFF1  F016         	goto	l3918
  7796   002DE0                     u4160:
  7797   002DE0  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  7798   002DE2                     l3918:
  7799   002DE2  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  7800   002DE6  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  7801   002DEA  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  7802   002DEE  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  7803   002DF2                     l949:
  7804   002DF2  0012               	return		;funcret
  7805   002DF4                     __end_of___xxtofl:
  7806                           	callstack 0
  7807                           
  7808 ;; *************** function ___fldiv *****************
  7809 ;; Defined at:
  7810 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  b               4    4[COMRAM] unsigned char 
  7813 ;;  a               4    8[COMRAM] unsigned char 
  7814 ;; Auto vars:     Size  Location     Type
  7815 ;;  grs             4   23[COMRAM] unsigned long 
  7816 ;;  rem             4   16[COMRAM] unsigned long 
  7817 ;;  new_exp         2   21[COMRAM] short 
  7818 ;;  aexp            1   28[COMRAM] unsigned char 
  7819 ;;  bexp            1   27[COMRAM] unsigned char 
  7820 ;;  sign            1   20[COMRAM] unsigned char 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  4    4[COMRAM] unsigned char 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2, status,0
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7830 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;Total ram usage:       25 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 2
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_colour_rel
  7841 ;;		_efgtoa
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text37
  7846   002110                     __ptext37:
  7847                           	callstack 0
  7848   002110                     ___fldiv:
  7849                           	callstack 24
  7850   002110  5008               	movf	(___fldiv@b+3)^0,w,c
  7851   002112  0B80               	andlw	128
  7852   002114  6E15               	movwf	___fldiv@sign^0,c
  7853   002116  5008               	movf	(___fldiv@b+3)^0,w,c
  7854   002118  2408               	addwf	(___fldiv@b+3)^0,w,c
  7855   00211A  6E1C               	movwf	___fldiv@bexp^0,c
  7856   00211C  AE07               	btfss	(___fldiv@b+2)^0,7,c
  7857   00211E  EF93  F010         	goto	u4851
  7858   002122  EF95  F010         	goto	u4850
  7859   002126                     u4851:
  7860   002126  EF96  F010         	goto	l4494
  7861   00212A                     u4850:
  7862   00212A  801C               	bsf	___fldiv@bexp^0,0,c
  7863   00212C                     l4494:
  7864   00212C  501C               	movf	___fldiv@bexp^0,w,c
  7865   00212E  B4D8               	btfsc	status,2,c
  7866   002130  EF9C  F010         	goto	u4861
  7867   002134  EF9E  F010         	goto	u4860
  7868   002138                     u4861:
  7869   002138  EFB3  F010         	goto	l4504
  7870   00213C                     u4860:
  7871   00213C  281C               	incf	___fldiv@bexp^0,w,c
  7872   00213E  A4D8               	btfss	status,2,c
  7873   002140  EFA4  F010         	goto	u4871
  7874   002144  EFA6  F010         	goto	u4870
  7875   002148                     u4871:
  7876   002148  EFAE  F010         	goto	l4500
  7877   00214C                     u4870:
  7878   00214C  0E00               	movlw	0
  7879   00214E  6E05               	movwf	___fldiv@b^0,c
  7880   002150  0E00               	movlw	0
  7881   002152  6E06               	movwf	(___fldiv@b+1)^0,c
  7882   002154  0E00               	movlw	0
  7883   002156  6E07               	movwf	(___fldiv@b+2)^0,c
  7884   002158  0E00               	movlw	0
  7885   00215A  6E08               	movwf	(___fldiv@b+3)^0,c
  7886   00215C                     l4500:
  7887   00215C  8E07               	bsf	(___fldiv@b+2)^0,7,c
  7888   00215E  0E00               	movlw	0
  7889   002160  6E08               	movwf	(___fldiv@b+3)^0,c
  7890   002162  EFBB  F010         	goto	l4506
  7891   002166                     l4504:
  7892   002166  0E00               	movlw	0
  7893   002168  6E05               	movwf	___fldiv@b^0,c
  7894   00216A  0E00               	movlw	0
  7895   00216C  6E06               	movwf	(___fldiv@b+1)^0,c
  7896   00216E  0E00               	movlw	0
  7897   002170  6E07               	movwf	(___fldiv@b+2)^0,c
  7898   002172  0E00               	movlw	0
  7899   002174  6E08               	movwf	(___fldiv@b+3)^0,c
  7900   002176                     l4506:
  7901   002176  500C               	movf	(___fldiv@a+3)^0,w,c
  7902   002178  0B80               	andlw	128
  7903   00217A  1A15               	xorwf	___fldiv@sign^0,f,c
  7904   00217C  500C               	movf	(___fldiv@a+3)^0,w,c
  7905   00217E  240C               	addwf	(___fldiv@a+3)^0,w,c
  7906   002180  6E1D               	movwf	___fldiv@aexp^0,c
  7907   002182  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  7908   002184  EFC6  F010         	goto	u4881
  7909   002188  EFC8  F010         	goto	u4880
  7910   00218C                     u4881:
  7911   00218C  EFC9  F010         	goto	l4514
  7912   002190                     u4880:
  7913   002190  801D               	bsf	___fldiv@aexp^0,0,c
  7914   002192                     l4514:
  7915   002192  501D               	movf	___fldiv@aexp^0,w,c
  7916   002194  B4D8               	btfsc	status,2,c
  7917   002196  EFCF  F010         	goto	u4891
  7918   00219A  EFD1  F010         	goto	u4890
  7919   00219E                     u4891:
  7920   00219E  EFE6  F010         	goto	l4524
  7921   0021A2                     u4890:
  7922   0021A2  281D               	incf	___fldiv@aexp^0,w,c
  7923   0021A4  A4D8               	btfss	status,2,c
  7924   0021A6  EFD7  F010         	goto	u4901
  7925   0021AA  EFD9  F010         	goto	u4900
  7926   0021AE                     u4901:
  7927   0021AE  EFE1  F010         	goto	l4520
  7928   0021B2                     u4900:
  7929   0021B2  0E00               	movlw	0
  7930   0021B4  6E09               	movwf	___fldiv@a^0,c
  7931   0021B6  0E00               	movlw	0
  7932   0021B8  6E0A               	movwf	(___fldiv@a+1)^0,c
  7933   0021BA  0E00               	movlw	0
  7934   0021BC  6E0B               	movwf	(___fldiv@a+2)^0,c
  7935   0021BE  0E00               	movlw	0
  7936   0021C0  6E0C               	movwf	(___fldiv@a+3)^0,c
  7937   0021C2                     l4520:
  7938   0021C2  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  7939   0021C4  0E00               	movlw	0
  7940   0021C6  6E0C               	movwf	(___fldiv@a+3)^0,c
  7941   0021C8  EFEE  F010         	goto	l4526
  7942   0021CC                     l4524:
  7943   0021CC  0E00               	movlw	0
  7944   0021CE  6E09               	movwf	___fldiv@a^0,c
  7945   0021D0  0E00               	movlw	0
  7946   0021D2  6E0A               	movwf	(___fldiv@a+1)^0,c
  7947   0021D4  0E00               	movlw	0
  7948   0021D6  6E0B               	movwf	(___fldiv@a+2)^0,c
  7949   0021D8  0E00               	movlw	0
  7950   0021DA  6E0C               	movwf	(___fldiv@a+3)^0,c
  7951   0021DC                     l4526:
  7952   0021DC  5009               	movf	___fldiv@a^0,w,c
  7953   0021DE  100A               	iorwf	(___fldiv@a+1)^0,w,c
  7954   0021E0  100B               	iorwf	(___fldiv@a+2)^0,w,c
  7955   0021E2  100C               	iorwf	(___fldiv@a+3)^0,w,c
  7956   0021E4  A4D8               	btfss	status,2,c
  7957   0021E6  EFF7  F010         	goto	u4911
  7958   0021EA  EFF9  F010         	goto	u4910
  7959   0021EE                     u4911:
  7960   0021EE  EF11  F011         	goto	l4538
  7961   0021F2                     u4910:
  7962   0021F2  0E00               	movlw	0
  7963   0021F4  6E05               	movwf	___fldiv@b^0,c
  7964   0021F6  0E00               	movlw	0
  7965   0021F8  6E06               	movwf	(___fldiv@b+1)^0,c
  7966   0021FA  0E00               	movlw	0
  7967   0021FC  6E07               	movwf	(___fldiv@b+2)^0,c
  7968   0021FE  0E00               	movlw	0
  7969   002200  6E08               	movwf	(___fldiv@b+3)^0,c
  7970   002202  0E80               	movlw	128
  7971   002204  1207               	iorwf	(___fldiv@b+2)^0,f,c
  7972   002206  0E7F               	movlw	127
  7973   002208  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7974   00220A                     l4532:
  7975   00220A  5015               	movf	___fldiv@sign^0,w,c
  7976   00220C  1208               	iorwf	(___fldiv@b+3)^0,f,c
  7977   00220E  C005  F005         	movff	___fldiv@b,?___fldiv
  7978   002212  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  7979   002216  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  7980   00221A  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  7981   00221E  EF54  F012         	goto	l873
  7982   002222                     l4538:
  7983   002222  501C               	movf	___fldiv@bexp^0,w,c
  7984   002224  A4D8               	btfss	status,2,c
  7985   002226  EF17  F011         	goto	u4921
  7986   00222A  EF19  F011         	goto	u4920
  7987   00222E                     u4921:
  7988   00222E  EF23  F011         	goto	l4546
  7989   002232                     u4920:
  7990   002232  0E00               	movlw	0
  7991   002234  6E05               	movwf	?___fldiv^0,c
  7992   002236  0E00               	movlw	0
  7993   002238  6E06               	movwf	(?___fldiv+1)^0,c
  7994   00223A  0E00               	movlw	0
  7995   00223C  6E07               	movwf	(?___fldiv+2)^0,c
  7996   00223E  0E00               	movlw	0
  7997   002240  6E08               	movwf	(?___fldiv+3)^0,c
  7998   002242  EF54  F012         	goto	l873
  7999   002246                     l4546:
  8000   002246  501D               	movf	___fldiv@aexp^0,w,c
  8001   002248  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  8002   00224C  6A0E               	clrf	(??___fldiv+1)^0,c
  8003   00224E  5E0D               	subwf	??___fldiv^0,f,c
  8004   002250  0E00               	movlw	0
  8005   002252  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  8006   002254  0E7F               	movlw	127
  8007   002256  240D               	addwf	??___fldiv^0,w,c
  8008   002258  6E16               	movwf	___fldiv@new_exp^0,c
  8009   00225A  0E00               	movlw	0
  8010   00225C  200E               	addwfc	(??___fldiv+1)^0,w,c
  8011   00225E  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8012   002260  C005  F011         	movff	___fldiv@b,___fldiv@rem
  8013   002264  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  8014   002268  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  8015   00226C  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  8016   002270  0E00               	movlw	0
  8017   002272  6E05               	movwf	___fldiv@b^0,c
  8018   002274  0E00               	movlw	0
  8019   002276  6E06               	movwf	(___fldiv@b+1)^0,c
  8020   002278  0E00               	movlw	0
  8021   00227A  6E07               	movwf	(___fldiv@b+2)^0,c
  8022   00227C  0E00               	movlw	0
  8023   00227E  6E08               	movwf	(___fldiv@b+3)^0,c
  8024   002280  0E00               	movlw	0
  8025   002282  6E18               	movwf	___fldiv@grs^0,c
  8026   002284  0E00               	movlw	0
  8027   002286  6E19               	movwf	(___fldiv@grs+1)^0,c
  8028   002288  0E00               	movlw	0
  8029   00228A  6E1A               	movwf	(___fldiv@grs+2)^0,c
  8030   00228C  0E00               	movlw	0
  8031   00228E  6E1B               	movwf	(___fldiv@grs+3)^0,c
  8032   002290  0E00               	movlw	0
  8033   002292  6E1D               	movwf	___fldiv@aexp^0,c
  8034   002294  EF84  F011         	goto	l875
  8035   002298                     l4556:
  8036   002298  501D               	movf	___fldiv@aexp^0,w,c
  8037   00229A  B4D8               	btfsc	status,2,c
  8038   00229C  EF52  F011         	goto	u4931
  8039   0022A0  EF54  F011         	goto	u4930
  8040   0022A4                     u4931:
  8041   0022A4  EF6B  F011         	goto	l4564
  8042   0022A8                     u4930:
  8043   0022A8  90D8               	bcf	status,0,c
  8044   0022AA  3611               	rlcf	___fldiv@rem^0,f,c
  8045   0022AC  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  8046   0022AE  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  8047   0022B0  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  8048   0022B2  90D8               	bcf	status,0,c
  8049   0022B4  3605               	rlcf	___fldiv@b^0,f,c
  8050   0022B6  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8051   0022B8  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8052   0022BA  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8053   0022BC  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8054   0022BE  EF63  F011         	goto	u4941
  8055   0022C2  EF65  F011         	goto	u4940
  8056   0022C6                     u4941:
  8057   0022C6  EF66  F011         	goto	l878
  8058   0022CA                     u4940:
  8059   0022CA  8005               	bsf	___fldiv@b^0,0,c
  8060   0022CC                     l878:
  8061   0022CC  90D8               	bcf	status,0,c
  8062   0022CE  3618               	rlcf	___fldiv@grs^0,f,c
  8063   0022D0  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8064   0022D2  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8065   0022D4  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8066   0022D6                     l4564:
  8067   0022D6  5009               	movf	___fldiv@a^0,w,c
  8068   0022D8  5C11               	subwf	___fldiv@rem^0,w,c
  8069   0022DA  500A               	movf	(___fldiv@a+1)^0,w,c
  8070   0022DC  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  8071   0022DE  500B               	movf	(___fldiv@a+2)^0,w,c
  8072   0022E0  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  8073   0022E2  500C               	movf	(___fldiv@a+3)^0,w,c
  8074   0022E4  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  8075   0022E6  A0D8               	btfss	status,0,c
  8076   0022E8  EF78  F011         	goto	u4951
  8077   0022EC  EF7A  F011         	goto	u4950
  8078   0022F0                     u4951:
  8079   0022F0  EF83  F011         	goto	l4570
  8080   0022F4                     u4950:
  8081   0022F4  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  8082   0022F6  5009               	movf	___fldiv@a^0,w,c
  8083   0022F8  5E11               	subwf	___fldiv@rem^0,f,c
  8084   0022FA  500A               	movf	(___fldiv@a+1)^0,w,c
  8085   0022FC  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  8086   0022FE  500B               	movf	(___fldiv@a+2)^0,w,c
  8087   002300  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  8088   002302  500C               	movf	(___fldiv@a+3)^0,w,c
  8089   002304  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  8090   002306                     l4570:
  8091   002306  2A1D               	incf	___fldiv@aexp^0,f,c
  8092   002308                     l875:
  8093   002308  0E19               	movlw	25
  8094   00230A  641D               	cpfsgt	___fldiv@aexp^0,c
  8095   00230C  EF8A  F011         	goto	u4961
  8096   002310  EF8C  F011         	goto	u4960
  8097   002314                     u4961:
  8098   002314  EF4C  F011         	goto	l4556
  8099   002318                     u4960:
  8100   002318  5011               	movf	___fldiv@rem^0,w,c
  8101   00231A  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  8102   00231C  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  8103   00231E  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  8104   002320  B4D8               	btfsc	status,2,c
  8105   002322  EF95  F011         	goto	u4971
  8106   002326  EF97  F011         	goto	u4970
  8107   00232A                     u4971:
  8108   00232A  EFAF  F011         	goto	l4582
  8109   00232E                     u4970:
  8110   00232E  8018               	bsf	___fldiv@grs^0,0,c
  8111   002330  EFAF  F011         	goto	l4582
  8112   002334                     l4576:
  8113   002334  90D8               	bcf	status,0,c
  8114   002336  3605               	rlcf	___fldiv@b^0,f,c
  8115   002338  3606               	rlcf	(___fldiv@b+1)^0,f,c
  8116   00233A  3607               	rlcf	(___fldiv@b+2)^0,f,c
  8117   00233C  3608               	rlcf	(___fldiv@b+3)^0,f,c
  8118   00233E  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8119   002340  EFA4  F011         	goto	u4981
  8120   002344  EFA6  F011         	goto	u4980
  8121   002348                     u4981:
  8122   002348  EFA7  F011         	goto	l884
  8123   00234C                     u4980:
  8124   00234C  8005               	bsf	___fldiv@b^0,0,c
  8125   00234E                     l884:
  8126   00234E  90D8               	bcf	status,0,c
  8127   002350  3618               	rlcf	___fldiv@grs^0,f,c
  8128   002352  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  8129   002354  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  8130   002356  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  8131   002358  0616               	decf	___fldiv@new_exp^0,f,c
  8132   00235A  A0D8               	btfss	status,0,c
  8133   00235C  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  8134   00235E                     l4582:
  8135   00235E  AE07               	btfss	(___fldiv@b+2)^0,7,c
  8136   002360  EFB4  F011         	goto	u4991
  8137   002364  EFB6  F011         	goto	u4990
  8138   002368                     u4991:
  8139   002368  EF9A  F011         	goto	l4576
  8140   00236C                     u4990:
  8141   00236C  0E00               	movlw	0
  8142   00236E  6E1D               	movwf	___fldiv@aexp^0,c
  8143   002370  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  8144   002372  EFBD  F011         	goto	u5001
  8145   002376  EFBF  F011         	goto	u5000
  8146   00237A                     u5001:
  8147   00237A  EFE3  F011         	goto	l886
  8148   00237E                     u5000:
  8149   00237E  0EFF               	movlw	255
  8150   002380  1418               	andwf	___fldiv@grs^0,w,c
  8151   002382  6E0D               	movwf	??___fldiv^0,c
  8152   002384  0EFF               	movlw	255
  8153   002386  1419               	andwf	(___fldiv@grs+1)^0,w,c
  8154   002388  6E0E               	movwf	(??___fldiv+1)^0,c
  8155   00238A  0EFF               	movlw	255
  8156   00238C  141A               	andwf	(___fldiv@grs+2)^0,w,c
  8157   00238E  6E0F               	movwf	(??___fldiv+2)^0,c
  8158   002390  0E7F               	movlw	127
  8159   002392  141B               	andwf	(___fldiv@grs+3)^0,w,c
  8160   002394  6E10               	movwf	(??___fldiv+3)^0,c
  8161   002396  500D               	movf	??___fldiv^0,w,c
  8162   002398  100E               	iorwf	(??___fldiv+1)^0,w,c
  8163   00239A  100F               	iorwf	(??___fldiv+2)^0,w,c
  8164   00239C  1010               	iorwf	(??___fldiv+3)^0,w,c
  8165   00239E  B4D8               	btfsc	status,2,c
  8166   0023A0  EFD4  F011         	goto	u5011
  8167   0023A4  EFD6  F011         	goto	u5010
  8168   0023A8                     u5011:
  8169   0023A8  EFDA  F011         	goto	l887
  8170   0023AC                     u5010:
  8171   0023AC                     l4590:
  8172   0023AC  0E01               	movlw	1
  8173   0023AE  6E1D               	movwf	___fldiv@aexp^0,c
  8174   0023B0  EFE3  F011         	goto	l886
  8175   0023B4                     l887:
  8176   0023B4  A005               	btfss	___fldiv@b^0,0,c
  8177   0023B6  EFDF  F011         	goto	u5021
  8178   0023BA  EFE1  F011         	goto	u5020
  8179   0023BE                     u5021:
  8180   0023BE  EFE3  F011         	goto	l886
  8181   0023C2                     u5020:
  8182   0023C2  EFD6  F011         	goto	l4590
  8183   0023C6                     l886:
  8184   0023C6  501D               	movf	___fldiv@aexp^0,w,c
  8185   0023C8  B4D8               	btfsc	status,2,c
  8186   0023CA  EFE9  F011         	goto	u5031
  8187   0023CE  EFEB  F011         	goto	u5030
  8188   0023D2                     u5031:
  8189   0023D2  EF0F  F012         	goto	l4602
  8190   0023D6                     u5030:
  8191   0023D6  0E01               	movlw	1
  8192   0023D8  2605               	addwf	___fldiv@b^0,f,c
  8193   0023DA  0E00               	movlw	0
  8194   0023DC  2206               	addwfc	(___fldiv@b+1)^0,f,c
  8195   0023DE  2207               	addwfc	(___fldiv@b+2)^0,f,c
  8196   0023E0  2208               	addwfc	(___fldiv@b+3)^0,f,c
  8197   0023E2  A008               	btfss	(___fldiv@b+3)^0,0,c
  8198   0023E4  EFF6  F011         	goto	u5041
  8199   0023E8  EFF8  F011         	goto	u5040
  8200   0023EC                     u5041:
  8201   0023EC  EF0F  F012         	goto	l4602
  8202   0023F0                     u5040:
  8203   0023F0  C005  F00D         	movff	___fldiv@b,??___fldiv
  8204   0023F4  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  8205   0023F8  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  8206   0023FC  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  8207   002400  3410               	rlcf	(??___fldiv+3)^0,w,c
  8208   002402  3210               	rrcf	(??___fldiv+3)^0,f,c
  8209   002404  320F               	rrcf	(??___fldiv+2)^0,f,c
  8210   002406  320E               	rrcf	(??___fldiv+1)^0,f,c
  8211   002408  320D               	rrcf	??___fldiv^0,f,c
  8212   00240A  C00D  F005         	movff	??___fldiv,___fldiv@b
  8213   00240E  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  8214   002412  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  8215   002416  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  8216   00241A  4A16               	infsnz	___fldiv@new_exp^0,f,c
  8217   00241C  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  8218   00241E                     l4602:
  8219   00241E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8220   002420  EF1A  F012         	goto	u5051
  8221   002424  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8222   002426  E108               	bnz	u5050
  8223   002428  2816               	incf	___fldiv@new_exp^0,w,c
  8224   00242A  A0D8               	btfss	status,0,c
  8225   00242C  EF1A  F012         	goto	u5051
  8226   002430  EF1C  F012         	goto	u5050
  8227   002434                     u5051:
  8228   002434  EF27  F012         	goto	l4606
  8229   002438                     u5050:
  8230   002438  0E00               	movlw	0
  8231   00243A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8232   00243C  6816               	setf	___fldiv@new_exp^0,c
  8233   00243E  0E00               	movlw	0
  8234   002440  6E05               	movwf	___fldiv@b^0,c
  8235   002442  0E00               	movlw	0
  8236   002444  6E06               	movwf	(___fldiv@b+1)^0,c
  8237   002446  0E00               	movlw	0
  8238   002448  6E07               	movwf	(___fldiv@b+2)^0,c
  8239   00244A  0E00               	movlw	0
  8240   00244C  6E08               	movwf	(___fldiv@b+3)^0,c
  8241   00244E                     l4606:
  8242   00244E  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8243   002450  EF34  F012         	goto	u5060
  8244   002454  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  8245   002456  E106               	bnz	u5061
  8246   002458  0416               	decf	___fldiv@new_exp^0,w,c
  8247   00245A  B0D8               	btfsc	status,0,c
  8248   00245C  EF32  F012         	goto	u5061
  8249   002460  EF34  F012         	goto	u5060
  8250   002464                     u5061:
  8251   002464  EF42  F012         	goto	l4610
  8252   002468                     u5060:
  8253   002468  0E00               	movlw	0
  8254   00246A  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  8255   00246C  0E00               	movlw	0
  8256   00246E  6E16               	movwf	___fldiv@new_exp^0,c
  8257   002470  0E00               	movlw	0
  8258   002472  6E05               	movwf	___fldiv@b^0,c
  8259   002474  0E00               	movlw	0
  8260   002476  6E06               	movwf	(___fldiv@b+1)^0,c
  8261   002478  0E00               	movlw	0
  8262   00247A  6E07               	movwf	(___fldiv@b+2)^0,c
  8263   00247C  0E00               	movlw	0
  8264   00247E  6E08               	movwf	(___fldiv@b+3)^0,c
  8265   002480  0E00               	movlw	0
  8266   002482  6E15               	movwf	___fldiv@sign^0,c
  8267   002484                     l4610:
  8268   002484  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  8269   002488  A01C               	btfss	___fldiv@bexp^0,0,c
  8270   00248A  EF49  F012         	goto	u5071
  8271   00248E  EF4B  F012         	goto	u5070
  8272   002492                     u5071:
  8273   002492  EF4E  F012         	goto	l4616
  8274   002496                     u5070:
  8275   002496  8E07               	bsf	(___fldiv@b+2)^0,7,c
  8276   002498  EF4F  F012         	goto	l4618
  8277   00249C                     l4616:
  8278   00249C  9E07               	bcf	(___fldiv@b+2)^0,7,c
  8279   00249E                     l4618:
  8280   00249E  90D8               	bcf	status,0,c
  8281   0024A0  301C               	rrcf	___fldiv@bexp^0,w,c
  8282   0024A2  6E08               	movwf	(___fldiv@b+3)^0,c
  8283   0024A4  EF05  F011         	goto	l4532
  8284   0024A8                     l873:
  8285   0024A8  0012               	return		;funcret
  8286   0024AA                     __end_of___fldiv:
  8287                           	callstack 0
  8288                           
  8289 ;; *************** function _color_click_init *****************
  8290 ;; Defined at:
  8291 ;;		line 5 in file "color.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;		None
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;		None
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, status,2, status,0, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8309 ;;Total ram usage:        1 bytes
  8310 ;; Hardware stack levels used: 1
  8311 ;; Hardware stack levels required when called: 5
  8312 ;; This function calls:
  8313 ;;		_I2C_2_Master_Init
  8314 ;;		_color_writetoaddr
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text38
  8321   003C72                     __ptext38:
  8322                           	callstack 0
  8323   003C72                     _color_click_init:
  8324                           	callstack 25
  8325   003C72                     
  8326                           ;color.c: 8:     I2C_2_Master_Init();
  8327   003C72  ECD7  F01E         	call	_I2C_2_Master_Init	;wreg free
  8328   003C76                     
  8329                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  8330   003C76  0E01               	movlw	1
  8331   003C78  6E07               	movwf	color_writetoaddr@value^0,c
  8332   003C7A  0E00               	movlw	0
  8333   003C7C  EC2A  F01F         	call	_color_writetoaddr
  8334   003C80                     
  8335                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8336   003C80  0E3F               	movlw	63
  8337   003C82  6E09               	movwf	??_color_click_init^0,c
  8338   003C84  0E55               	movlw	85
  8339   003C86                     u6177:
  8340   003C86  2EE8               	decfsz	wreg,f,c
  8341   003C88  D7FE               	bra	u6177
  8342   003C8A  2E09               	decfsz	??_color_click_init^0,f,c
  8343   003C8C  D7FC               	bra	u6177
  8344   003C8E  F000               	nop	
  8345   003C90                     
  8346                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  8347   003C90  0E03               	movlw	3
  8348   003C92  6E07               	movwf	color_writetoaddr@value^0,c
  8349   003C94  0E00               	movlw	0
  8350   003C96  EC2A  F01F         	call	_color_writetoaddr
  8351   003C9A                     
  8352                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  8353   003C9A  0ED5               	movlw	213
  8354   003C9C  6E07               	movwf	color_writetoaddr@value^0,c
  8355   003C9E  0E01               	movlw	1
  8356   003CA0  EC2A  F01F         	call	_color_writetoaddr
  8357   003CA4                     
  8358                           ;color.c: 20:     LATGbits.LATG1=0;
  8359   003CA4  927F               	bcf	127,1,c	;volatile
  8360   003CA6                     
  8361                           ;color.c: 21:     LATAbits.LATA4=0;
  8362   003CA6  9879               	bcf	121,4,c	;volatile
  8363   003CA8                     
  8364                           ;color.c: 22:     LATFbits.LATF7=0;
  8365   003CA8  9E7E               	bcf	126,7,c	;volatile
  8366   003CAA                     
  8367                           ;color.c: 23:     TRISGbits.TRISG1=0;
  8368   003CAA  9287               	bcf	135,1,c	;volatile
  8369   003CAC                     
  8370                           ;color.c: 24:     TRISAbits.TRISA4 = 0;
  8371   003CAC  9881               	bcf	129,4,c	;volatile
  8372   003CAE                     
  8373                           ;color.c: 25:     TRISFbits.TRISF7 = 0;
  8374   003CAE  9E86               	bcf	134,7,c	;volatile
  8375   003CB0  0012               	return		;funcret
  8376   003CB2                     __end_of_color_click_init:
  8377                           	callstack 0
  8378                           
  8379 ;; *************** function _color_writetoaddr *****************
  8380 ;; Defined at:
  8381 ;;		line 29 in file "color.c"
  8382 ;; Parameters:    Size  Location     Type
  8383 ;;  address         1    wreg     unsigned char 
  8384 ;;  value           1    6[COMRAM] unsigned char 
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;  address         1    7[COMRAM] unsigned char 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;Total ram usage:        2 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 4
  8403 ;; This function calls:
  8404 ;;		_I2C_2_Master_Start
  8405 ;;		_I2C_2_Master_Stop
  8406 ;;		_I2C_2_Master_Write
  8407 ;; This function is called by:
  8408 ;;		_color_click_init
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           	psect	text39
  8413   003E54                     __ptext39:
  8414                           	callstack 0
  8415   003E54                     _color_writetoaddr:
  8416                           	callstack 25
  8417                           
  8418                           ;incstack = 0
  8419                           ;color_writetoaddr@address stored from wreg
  8420   003E54  6E08               	movwf	color_writetoaddr@address^0,c
  8421   003E56                     
  8422                           ;color.c: 30:     I2C_2_Master_Start();
  8423   003E56  EC6C  F01F         	call	_I2C_2_Master_Start	;wreg free
  8424                           
  8425                           ;color.c: 31:     I2C_2_Master_Write(0x52 | 0x00);
  8426   003E5A  0E52               	movlw	82
  8427   003E5C  EC5C  F01F         	call	_I2C_2_Master_Write
  8428                           
  8429                           ;color.c: 32:     I2C_2_Master_Write(0x80 | address);
  8430   003E60  5008               	movf	color_writetoaddr@address^0,w,c
  8431   003E62  0980               	iorlw	128
  8432   003E64  EC5C  F01F         	call	_I2C_2_Master_Write
  8433                           
  8434                           ;color.c: 33:     I2C_2_Master_Write(value);
  8435   003E68  5007               	movf	color_writetoaddr@value^0,w,c
  8436   003E6A  EC5C  F01F         	call	_I2C_2_Master_Write
  8437                           
  8438                           ;color.c: 34:     I2C_2_Master_Stop();
  8439   003E6E  EC67  F01F         	call	_I2C_2_Master_Stop	;wreg free
  8440   003E72  0012               	return		;funcret
  8441   003E74                     __end_of_color_writetoaddr:
  8442                           	callstack 0
  8443                           
  8444 ;; *************** function _I2C_2_Master_Write *****************
  8445 ;; Defined at:
  8446 ;;		line 45 in file "i2c.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  data_byte       1    wreg     unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  data_byte       1    5[COMRAM] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8464 ;;Total ram usage:        1 bytes
  8465 ;; Hardware stack levels used: 1
  8466 ;; Hardware stack levels required when called: 3
  8467 ;; This function calls:
  8468 ;;		_I2C_2_Master_Idle
  8469 ;; This function is called by:
  8470 ;;		_color_writetoaddr
  8471 ;;		_color_read_lum
  8472 ;;		_color_read_Red
  8473 ;;		_color_read_Green
  8474 ;;		_color_read_Blue
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text40
  8479   003EB8                     __ptext40:
  8480                           	callstack 0
  8481   003EB8                     _I2C_2_Master_Write:
  8482                           	callstack 25
  8483                           
  8484                           ;incstack = 0
  8485                           ;I2C_2_Master_Write@data_byte stored from wreg
  8486   003EB8  6E06               	movwf	I2C_2_Master_Write@data_byte^0,c
  8487   003EBA                     
  8488                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8489   003EBA  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8490   003EBE                     
  8491                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8492   003EBE  C006  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8493   003EC2  0012               	return		;funcret
  8494   003EC4                     __end_of_I2C_2_Master_Write:
  8495                           	callstack 0
  8496                           
  8497 ;; *************** function _I2C_2_Master_Stop *****************
  8498 ;; Defined at:
  8499 ;;		line 39 in file "i2c.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, status,2, status,0, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels used: 1
  8519 ;; Hardware stack levels required when called: 3
  8520 ;; This function calls:
  8521 ;;		_I2C_2_Master_Idle
  8522 ;; This function is called by:
  8523 ;;		_color_writetoaddr
  8524 ;;		_color_read_lum
  8525 ;;		_color_read_Red
  8526 ;;		_color_read_Green
  8527 ;;		_color_read_Blue
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           	psect	text41
  8532   003ECE                     __ptext41:
  8533                           	callstack 0
  8534   003ECE                     _I2C_2_Master_Stop:
  8535                           	callstack 25
  8536   003ECE                     
  8537                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8538   003ECE  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8539   003ED2                     
  8540                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8541   003ED2  010E               	movlb	14	; () banked
  8542   003ED4  85DA               	bsf	218,2,b	;volatile
  8543   003ED6                     
  8544                           ; BSR set to: 14
  8545   003ED6  0012               	return		;funcret
  8546   003ED8                     __end_of_I2C_2_Master_Stop:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _I2C_2_Master_Start *****************
  8550 ;; Defined at:
  8551 ;;		line 27 in file "i2c.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;		None
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;		None
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8569 ;;Total ram usage:        0 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 3
  8572 ;; This function calls:
  8573 ;;		_I2C_2_Master_Idle
  8574 ;; This function is called by:
  8575 ;;		_color_writetoaddr
  8576 ;;		_color_read_lum
  8577 ;;		_color_read_Red
  8578 ;;		_color_read_Green
  8579 ;;		_color_read_Blue
  8580 ;; This function uses a non-reentrant model
  8581 ;;
  8582                           
  8583                           	psect	text42
  8584   003ED8                     __ptext42:
  8585                           	callstack 0
  8586   003ED8                     _I2C_2_Master_Start:
  8587                           	callstack 25
  8588   003ED8                     
  8589                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8590   003ED8  EC16  F01F         	call	_I2C_2_Master_Idle	;wreg free
  8591   003EDC                     
  8592                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8593   003EDC  010E               	movlb	14	; () banked
  8594   003EDE  81DA               	bsf	218,0,b	;volatile
  8595   003EE0                     
  8596                           ; BSR set to: 14
  8597   003EE0  0012               	return		;funcret
  8598   003EE2                     __end_of_I2C_2_Master_Start:
  8599                           	callstack 0
  8600                           
  8601 ;; *************** function _I2C_2_Master_Idle *****************
  8602 ;; Defined at:
  8603 ;;		line 22 in file "i2c.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  1    wreg      void 
  8610 ;; Registers used:
  8611 ;;		wreg, status,2, status,0
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;Total ram usage:        1 bytes
  8622 ;; Hardware stack levels used: 1
  8623 ;; Hardware stack levels required when called: 2
  8624 ;; This function calls:
  8625 ;;		Nothing
  8626 ;; This function is called by:
  8627 ;;		_I2C_2_Master_Start
  8628 ;;		_I2C_2_Master_RepStart
  8629 ;;		_I2C_2_Master_Stop
  8630 ;;		_I2C_2_Master_Write
  8631 ;;		_I2C_2_Master_Read
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           	psect	text43
  8636   003E2C                     __ptext43:
  8637                           	callstack 0
  8638   003E2C                     _I2C_2_Master_Idle:
  8639                           	callstack 25
  8640   003E2C                     l86:
  8641   003E2C  010E               	movlb	14	; () banked
  8642   003E2E  B5D8               	btfsc	216,2,b	;volatile
  8643   003E30  EF1C  F01F         	goto	u3541
  8644   003E34  EF1E  F01F         	goto	u3540
  8645   003E38                     u3541:
  8646   003E38  EF16  F01F         	goto	l86
  8647   003E3C                     u3540:
  8648   003E3C                     
  8649                           ; BSR set to: 14
  8650   003E3C  CEDA F005          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8651   003E40  0E1F               	movlw	31
  8652   003E42  1605               	andwf	??_I2C_2_Master_Idle^0,f,c
  8653   003E44  A4D8               	btfss	status,2,c
  8654   003E46  EF27  F01F         	goto	u3551
  8655   003E4A  EF29  F01F         	goto	u3550
  8656   003E4E                     u3551:
  8657   003E4E  EF16  F01F         	goto	l86
  8658   003E52                     u3550:
  8659   003E52                     
  8660                           ; BSR set to: 14
  8661   003E52  0012               	return		;funcret
  8662   003E54                     __end_of_I2C_2_Master_Idle:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function _I2C_2_Master_Init *****************
  8666 ;; Defined at:
  8667 ;;		line 4 in file "i2c.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;Total ram usage:        0 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; Hardware stack levels required when called: 2
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		_color_click_init
  8692 ;;		_main
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           	psect	text44
  8697   003DAE                     __ptext44:
  8698                           	callstack 0
  8699   003DAE                     _I2C_2_Master_Init:
  8700                           	callstack 27
  8701   003DAE                     
  8702                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  8703   003DAE  010E               	movlb	14	; () banked
  8704   003DB0  51D9               	movf	217,w,b	;volatile
  8705   003DB2  0BF0               	andlw	-16
  8706   003DB4  0908               	iorlw	8
  8707   003DB6  6FD9               	movwf	217,b	;volatile
  8708   003DB8                     
  8709                           ; BSR set to: 14
  8710                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  8711   003DB8  8BD9               	bsf	217,5,b	;volatile
  8712                           
  8713                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  8714   003DBA  0E9F               	movlw	159
  8715   003DBC  6FD6               	movwf	214,b	;volatile
  8716   003DBE                     
  8717                           ; BSR set to: 14
  8718                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  8719   003DBE  8A84               	bsf	132,5,c	;volatile
  8720   003DC0                     
  8721                           ; BSR set to: 14
  8722                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  8723   003DC0  8C84               	bsf	132,6,c	;volatile
  8724   003DC2                     
  8725                           ; BSR set to: 14
  8726                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  8727   003DC2  9BA7               	bcf	167,5,b	;volatile
  8728   003DC4                     
  8729                           ; BSR set to: 14
  8730                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  8731   003DC4  9DA7               	bcf	167,6,b	;volatile
  8732                           
  8733                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  8734   003DC6  0E1D               	movlw	29
  8735   003DC8  6F1D               	movwf	29,b	;volatile
  8736                           
  8737                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  8738   003DCA  0E1E               	movlw	30
  8739   003DCC  6F1C               	movwf	28,b	;volatile
  8740                           
  8741                           ;i2c.c: 18:   RD5PPS=0x1C;
  8742   003DCE  0E1C               	movlw	28
  8743   003DD0  6F6F               	movwf	111,b	;volatile
  8744                           
  8745                           ;i2c.c: 19:   RD6PPS=0x1B;
  8746   003DD2  0E1B               	movlw	27
  8747   003DD4  6F70               	movwf	112,b	;volatile
  8748   003DD6                     
  8749                           ; BSR set to: 14
  8750   003DD6  0012               	return		;funcret
  8751   003DD8                     __end_of_I2C_2_Master_Init:
  8752                           	callstack 0
  8753                           
  8754 ;; *************** function _TxBufferedString *****************
  8755 ;; Defined at:
  8756 ;;		line 85 in file "serial.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;  string          2    5[COMRAM] PTR unsigned char 
  8759 ;;		 -> main@buf(50), 
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;		None
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;Total ram usage:        2 bytes
  8776 ;; Hardware stack levels used: 1
  8777 ;; Hardware stack levels required when called: 3
  8778 ;; This function calls:
  8779 ;;		_putCharToTxBuf
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text45
  8786   003D28                     __ptext45:
  8787                           	callstack 0
  8788   003D28                     _TxBufferedString:
  8789                           	callstack 27
  8790   003D28                     
  8791                           ;serial.c: 86:  while (*string!=0){
  8792   003D28  EF9F  F01E         	goto	l3992
  8793   003D2C                     l3988:
  8794                           
  8795                           ;serial.c: 87:         putCharToTxBuf(*string++);
  8796   003D2C  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8797   003D30  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8798   003D34  50DF               	movf	indf2,w,c
  8799   003D36  ECEC  F01E         	call	_putCharToTxBuf
  8800   003D3A  4A06               	infsnz	TxBufferedString@string^0,f,c
  8801   003D3C  2A07               	incf	(TxBufferedString@string+1)^0,f,c
  8802   003D3E                     l3992:
  8803                           
  8804                           ;serial.c: 86:  while (*string!=0){
  8805   003D3E  C006  FFD9         	movff	TxBufferedString@string,fsr2l
  8806   003D42  C007  FFDA         	movff	TxBufferedString@string+1,fsr2h
  8807   003D46  50DF               	movf	indf2,w,c
  8808   003D48  A4D8               	btfss	status,2,c
  8809   003D4A  EFA9  F01E         	goto	u4201
  8810   003D4E  EFAB  F01E         	goto	u4200
  8811   003D52                     u4201:
  8812   003D52  EF96  F01E         	goto	l3988
  8813   003D56                     u4200:
  8814   003D56  0012               	return		;funcret
  8815   003D58                     __end_of_TxBufferedString:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function _putCharToTxBuf *****************
  8819 ;; Defined at:
  8820 ;;		line 72 in file "serial.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  byte            1    wreg     unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  byte            1    4[COMRAM] unsigned char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  1    wreg      void 
  8827 ;; Registers used:
  8828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8829 ;; Tracked objects:
  8830 ;;		On entry : 0/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8835 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;Total ram usage:        1 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; Hardware stack levels required when called: 2
  8841 ;; This function calls:
  8842 ;;		Nothing
  8843 ;; This function is called by:
  8844 ;;		_TxBufferedString
  8845 ;; This function uses a non-reentrant model
  8846 ;;
  8847                           
  8848                           	psect	text46
  8849   003DD8                     __ptext46:
  8850                           	callstack 0
  8851   003DD8                     _putCharToTxBuf:
  8852                           	callstack 27
  8853                           
  8854                           ;incstack = 0
  8855                           ;putCharToTxBuf@byte stored from wreg
  8856   003DD8  6E05               	movwf	putCharToTxBuf@byte^0,c
  8857   003DDA                     
  8858                           ;serial.c: 73:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  8859   003DDA  0E3B               	movlw	59
  8860   003DDC  6458               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  8861   003DDE  EFF3  F01E         	goto	u4041
  8862   003DE2  EFF5  F01E         	goto	u4040
  8863   003DE6                     u4041:
  8864   003DE6  EFF7  F01E         	goto	l3868
  8865   003DEA                     u4040:
  8866   003DEA  0E00               	movlw	0
  8867   003DEC  6E58               	movwf	_TxBufWriteCnt^0,c	;volatile
  8868   003DEE                     l3868:
  8869                           
  8870                           ;serial.c: 74:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  8871   003DEE  0E00               	movlw	low _EUSART4TXbuf
  8872   003DF0  2458               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  8873   003DF2  6ED9               	movwf	fsr2l,c
  8874   003DF4  6ADA               	clrf	fsr2h,c
  8875   003DF6  0E01               	movlw	high _EUSART4TXbuf
  8876   003DF8  22DA               	addwfc	fsr2h,f,c
  8877   003DFA  C005  FFDF         	movff	putCharToTxBuf@byte,indf2
  8878   003DFE  2A58               	incf	_TxBufWriteCnt^0,f,c	;volatile
  8879   003E00  0012               	return		;funcret
  8880   003E02                     __end_of_putCharToTxBuf:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _Interrupts_init *****************
  8884 ;; Defined at:
  8885 ;;		line 10 in file "interrupts.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		None
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 2
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_main
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           	psect	text47
  8914   003EAA                     __ptext47:
  8915                           	callstack 0
  8916   003EAA                     _Interrupts_init:
  8917                           	callstack 28
  8918   003EAA                     
  8919                           ;interrupts.c: 12:     INTCONbits.IPEN=0;
  8920   003EAA  9AF2               	bcf	242,5,c	;volatile
  8921                           
  8922                           ;interrupts.c: 13:     PIE2bits.C1IE=1;
  8923   003EAC  010E               	movlb	14	; () banked
  8924   003EAE  812B               	bsf	43,0,b	;volatile
  8925                           
  8926                           ;interrupts.c: 14:     INTCONbits.PEIE=1;
  8927   003EB0  8CF2               	bsf	242,6,c	;volatile
  8928                           
  8929                           ;interrupts.c: 15:     INTCONbits.GIE=1;
  8930   003EB2  8EF2               	bsf	242,7,c	;volatile
  8931                           
  8932                           ;interrupts.c: 16:     PIE4bits.RC4IE=1;
  8933   003EB4  872D               	bsf	45,3,b	;volatile
  8934   003EB6                     
  8935                           ; BSR set to: 14
  8936   003EB6  0012               	return		;funcret
  8937   003EB8                     __end_of_Interrupts_init:
  8938                           	callstack 0
  8939                           
  8940 ;; *************** function _HighISR *****************
  8941 ;; Defined at:
  8942 ;;		line 25 in file "interrupts.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;		None
  8945 ;; Auto vars:     Size  Location     Type
  8946 ;;		None
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  1    wreg      void 
  8949 ;; Registers used:
  8950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8960 ;;Total ram usage:        2 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; Hardware stack levels required when called: 1
  8963 ;; This function calls:
  8964 ;;		_getCharFromTxBuf
  8965 ;;		_putCharToRxBuf
  8966 ;; This function is called by:
  8967 ;;		Interrupt level 2
  8968 ;; This function uses a non-reentrant model
  8969 ;;
  8970                           
  8971                           	psect	intcode
  8972   000008                     __pintcode:
  8973                           	callstack 0
  8974   000008                     _HighISR:
  8975                           	callstack 21
  8976                           
  8977                           ; BSR set to: 14
  8978                           ;incstack = 0
  8979   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8980   00000A  CFD9 F003          	movff	fsr2l,??_HighISR
  8981   00000E  CFDA F004          	movff	fsr2h,??_HighISR+1
  8982   000012                     
  8983                           ;interrupts.c: 27:     if (PIR4bits.TX4IF){
  8984   000012  010E               	movlb	14	; () banked
  8985   000014  A537               	btfss	55,2,b	;volatile
  8986   000016  EF0F  F000         	goto	i2u425_41
  8987   00001A  EF11  F000         	goto	i2u425_40
  8988   00001E                     i2u425_41:
  8989   00001E  EF15  F000         	goto	i2l233
  8990   000022                     i2u425_40:
  8991   000022                     
  8992                           ; BSR set to: 14
  8993                           ;interrupts.c: 28:         TX4REG = getCharFromTxBuf();
  8994   000022  ECAC  F01E         	call	_getCharFromTxBuf	;wreg free
  8995   000026  010E               	movlb	14	; () banked
  8996   000028  6FE4               	movwf	228,b	;volatile
  8997   00002A                     i2l233:
  8998                           
  8999                           ; BSR set to: 14
  9000                           ;interrupts.c: 33:     if (PIR4bits.RC4IF){
  9001   00002A  A737               	btfss	55,3,b	;volatile
  9002   00002C  EF1A  F000         	goto	i2u426_41
  9003   000030  EF1C  F000         	goto	i2u426_40
  9004   000034                     i2u426_41:
  9005   000034  EF1F  F000         	goto	i2l235
  9006   000038                     i2u426_40:
  9007   000038                     
  9008                           ; BSR set to: 14
  9009                           ;interrupts.c: 34:         putCharToRxBuf(RC4REG);
  9010   000038  51E3               	movf	227,w,b	;volatile
  9011   00003A  EC01  F01F         	call	_putCharToRxBuf
  9012   00003E                     i2l235:
  9013   00003E  C004  FFDA         	movff	??_HighISR+1,fsr2h
  9014   000042  C003  FFD9         	movff	??_HighISR,fsr2l
  9015   000046  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9016   000048  0011               	retfie		f
  9017   00004A                     __end_of_HighISR:
  9018                           	callstack 0
  9019                           
  9020 ;; *************** function _putCharToRxBuf *****************
  9021 ;; Defined at:
  9022 ;;		line 52 in file "serial.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  byte            1    wreg     unsigned char 
  9025 ;; Auto vars:     Size  Location     Type
  9026 ;;  byte            1    0[COMRAM] unsigned char 
  9027 ;; Return value:  Size  Location     Type
  9028 ;;                  1    wreg      void 
  9029 ;; Registers used:
  9030 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9031 ;; Tracked objects:
  9032 ;;		On entry : 0/0
  9033 ;;		On exit  : 0/0
  9034 ;;		Unchanged: 0/0
  9035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9039 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;Total ram usage:        1 bytes
  9041 ;; Hardware stack levels used: 1
  9042 ;; This function calls:
  9043 ;;		Nothing
  9044 ;; This function is called by:
  9045 ;;		_HighISR
  9046 ;; This function uses a non-reentrant model
  9047 ;;
  9048                           
  9049                           	psect	text49
  9050   003E02                     __ptext49:
  9051                           	callstack 0
  9052   003E02                     _putCharToRxBuf:
  9053                           	callstack 21
  9054                           
  9055                           ;incstack = 0
  9056                           ;putCharToRxBuf@byte stored from wreg
  9057   003E02  6E01               	movwf	putCharToRxBuf@byte^0,c
  9058   003E04                     
  9059                           ;serial.c: 53:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  9060   003E04  0E13               	movlw	19
  9061   003E06  645A               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  9062   003E08  EF08  F01F         	goto	i2u418_41
  9063   003E0C  EF0A  F01F         	goto	i2u418_40
  9064   003E10                     i2u418_41:
  9065   003E10  EF0C  F01F         	goto	i2l3974
  9066   003E14                     i2u418_40:
  9067   003E14  0E00               	movlw	0
  9068   003E16  6E5A               	movwf	_RxBufWriteCnt^0,c	;volatile
  9069   003E18                     i2l3974:
  9070                           
  9071                           ;serial.c: 54:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  9072   003E18  0E3C               	movlw	low _EUSART4RXbuf
  9073   003E1A  245A               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  9074   003E1C  6ED9               	movwf	fsr2l,c
  9075   003E1E  6ADA               	clrf	fsr2h,c
  9076   003E20  0E01               	movlw	high _EUSART4RXbuf
  9077   003E22  22DA               	addwfc	fsr2h,f,c
  9078   003E24  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  9079   003E28  2A5A               	incf	_RxBufWriteCnt^0,f,c	;volatile
  9080   003E2A  0012               	return		;funcret
  9081   003E2C                     __end_of_putCharToRxBuf:
  9082                           	callstack 0
  9083                           
  9084 ;; *************** function _getCharFromTxBuf *****************
  9085 ;; Defined at:
  9086 ;;		line 66 in file "serial.c"
  9087 ;; Parameters:    Size  Location     Type
  9088 ;;		None
  9089 ;; Auto vars:     Size  Location     Type
  9090 ;;		None
  9091 ;; Return value:  Size  Location     Type
  9092 ;;                  1    wreg      unsigned char 
  9093 ;; Registers used:
  9094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9095 ;; Tracked objects:
  9096 ;;		On entry : 0/0
  9097 ;;		On exit  : 0/0
  9098 ;;		Unchanged: 0/0
  9099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9102 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;Total ram usage:        2 bytes
  9105 ;; Hardware stack levels used: 1
  9106 ;; This function calls:
  9107 ;;		Nothing
  9108 ;; This function is called by:
  9109 ;;		_HighISR
  9110 ;; This function uses a non-reentrant model
  9111 ;;
  9112                           
  9113                           	psect	text50
  9114   003D58                     __ptext50:
  9115                           	callstack 0
  9116   003D58                     _getCharFromTxBuf:
  9117                           	callstack 21
  9118   003D58                     
  9119                           ;serial.c: 67:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  9120   003D58  0E3B               	movlw	59
  9121   003D5A  6457               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  9122   003D5C  EFB2  F01E         	goto	i2u419_41
  9123   003D60  EFB4  F01E         	goto	i2u419_40
  9124   003D64                     i2u419_41:
  9125   003D64  EFB6  F01E         	goto	i2l3982
  9126   003D68                     i2u419_40:
  9127   003D68  0E00               	movlw	0
  9128   003D6A  6E57               	movwf	_TxBufReadCnt^0,c	;volatile
  9129   003D6C                     i2l3982:
  9130                           
  9131                           ;serial.c: 68:     return EUSART4TXbuf[TxBufReadCnt++];
  9132   003D6C  2A57               	incf	_TxBufReadCnt^0,f,c	;volatile
  9133   003D6E  0457               	decf	_TxBufReadCnt^0,w,c	;volatile
  9134   003D70  6E01               	movwf	??_getCharFromTxBuf^0,c
  9135   003D72  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  9136   003D74  0E00               	movlw	low _EUSART4TXbuf
  9137   003D76  2401               	addwf	??_getCharFromTxBuf^0,w,c
  9138   003D78  6ED9               	movwf	fsr2l,c
  9139   003D7A  0E01               	movlw	high _EUSART4TXbuf
  9140   003D7C  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  9141   003D7E  6EDA               	movwf	fsr2h,c
  9142   003D80  50DF               	movf	indf2,w,c
  9143   003D82  0012               	return		;funcret
  9144   003D84                     __end_of_getCharFromTxBuf:
  9145                           	callstack 0
  9146                           
  9147                           	psect	rparam
  9148   000000                     
  9149                           	psect	temp
  9150   00005B                     btemp:
  9151                           	callstack 0
  9152   00005B                     	ds	1
  9153   000000                     int$flags	set	btemp
  9154   000000                     wtemp8	set	btemp+1
  9155   000000                     ttemp5	set	btemp+1
  9156   000000                     ttemp6	set	btemp+4
  9157   000000                     ttemp7	set	btemp+8
  9158                           
  9159                           	psect	idloc
  9160                           
  9161                           ;Config register IDLOC0 @ 0x200000
  9162                           ;	unspecified, using default values
  9163   200000                     	org	2097152
  9164   200000  0FFF               	dw	4095
  9165                           
  9166                           ;Config register IDLOC1 @ 0x200002
  9167                           ;	unspecified, using default values
  9168   200002                     	org	2097154
  9169   200002  0FFF               	dw	4095
  9170                           
  9171                           ;Config register IDLOC2 @ 0x200004
  9172                           ;	unspecified, using default values
  9173   200004                     	org	2097156
  9174   200004  0FFF               	dw	4095
  9175                           
  9176                           ;Config register IDLOC3 @ 0x200006
  9177                           ;	unspecified, using default values
  9178   200006                     	org	2097158
  9179   200006  0FFF               	dw	4095
  9180                           
  9181                           ;Config register IDLOC4 @ 0x200008
  9182                           ;	unspecified, using default values
  9183   200008                     	org	2097160
  9184   200008  0FFF               	dw	4095
  9185                           
  9186                           ;Config register IDLOC5 @ 0x20000A
  9187                           ;	unspecified, using default values
  9188   20000A                     	org	2097162
  9189   20000A  0FFF               	dw	4095
  9190                           
  9191                           ;Config register IDLOC6 @ 0x20000C
  9192                           ;	unspecified, using default values
  9193   20000C                     	org	2097164
  9194   20000C  0FFF               	dw	4095
  9195                           
  9196                           ;Config register IDLOC7 @ 0x20000E
  9197                           ;	unspecified, using default values
  9198   20000E                     	org	2097166
  9199   20000E  0FFF               	dw	4095
  9200                           
  9201                           	psect	config
  9202                           
  9203                           ;Config register CONFIG1L @ 0x300000
  9204                           ;	External Oscillator mode Selection bits
  9205                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9206                           ;	Power-up default value for COSC bits
  9207                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9208   300000                     	org	3145728
  9209   300000  AA                 	db	170
  9210                           
  9211                           ;Config register CONFIG1H @ 0x300001
  9212                           ;	unspecified, using default values
  9213                           ;	Clock Out Enable bit
  9214                           ;	CLKOUTEN = 0x1, unprogrammed default
  9215                           ;	Clock Switch Enable bit
  9216                           ;	CSWEN = 0x1, unprogrammed default
  9217                           ;	Fail-Safe Clock Monitor Enable bit
  9218                           ;	FCMEN = 0x1, unprogrammed default
  9219   300001                     	org	3145729
  9220   300001  FF                 	db	255
  9221                           
  9222                           ;Config register CONFIG2L @ 0x300002
  9223                           ;	unspecified, using default values
  9224                           ;	Master Clear Enable bit
  9225                           ;	MCLRE = 0x1, unprogrammed default
  9226                           ;	Power-up Timer Enable bit
  9227                           ;	PWRTE = 0x1, unprogrammed default
  9228                           ;	Low-power BOR enable bit
  9229                           ;	LPBOREN = 0x1, unprogrammed default
  9230                           ;	Brown-out Reset Enable bits
  9231                           ;	BOREN = 0x3, unprogrammed default
  9232   300002                     	org	3145730
  9233   300002  FF                 	db	255
  9234                           
  9235                           ;Config register CONFIG2H @ 0x300003
  9236                           ;	unspecified, using default values
  9237                           ;	Brown Out Reset Voltage selection bits
  9238                           ;	BORV = 0x3, unprogrammed default
  9239                           ;	ZCD Disable bit
  9240                           ;	ZCD = 0x1, unprogrammed default
  9241                           ;	PPSLOCK bit One-Way Set Enable bit
  9242                           ;	PPS1WAY = 0x1, unprogrammed default
  9243                           ;	Stack Full/Underflow Reset Enable bit
  9244                           ;	STVREN = 0x1, unprogrammed default
  9245                           ;	Debugger Enable bit
  9246                           ;	DEBUG = 0x1, unprogrammed default
  9247                           ;	Extended Instruction Set Enable bit
  9248                           ;	XINST = 0x1, unprogrammed default
  9249   300003                     	org	3145731
  9250   300003  FF                 	db	255
  9251                           
  9252                           ;Config register CONFIG3L @ 0x300004
  9253                           ;	WDT Period Select bits
  9254                           ;	WDTCPS = 0x1F, unprogrammed default
  9255                           ;	WDT operating mode
  9256                           ;	WDTE = OFF, WDT Disabled
  9257   300004                     	org	3145732
  9258   300004  9F                 	db	159
  9259                           
  9260                           ;Config register CONFIG3H @ 0x300005
  9261                           ;	unspecified, using default values
  9262                           ;	WDT Window Select bits
  9263                           ;	WDTCWS = 0x7, unprogrammed default
  9264                           ;	WDT input clock selector
  9265                           ;	WDTCCS = 0x7, unprogrammed default
  9266   300005                     	org	3145733
  9267   300005  FF                 	db	255
  9268                           
  9269                           ;Config register CONFIG4L @ 0x300006
  9270                           ;	unspecified, using default values
  9271                           ;	Write Protection Block 0
  9272                           ;	WRT0 = 0x1, unprogrammed default
  9273                           ;	Write Protection Block 1
  9274                           ;	WRT1 = 0x1, unprogrammed default
  9275                           ;	Write Protection Block 2
  9276                           ;	WRT2 = 0x1, unprogrammed default
  9277                           ;	Write Protection Block 3
  9278                           ;	WRT3 = 0x1, unprogrammed default
  9279                           ;	Write Protection Block 3
  9280                           ;	WRT4 = 0x1, unprogrammed default
  9281                           ;	Write Protection Block 3
  9282                           ;	WRT5 = 0x1, unprogrammed default
  9283                           ;	Write Protection Block 3
  9284                           ;	WRT6 = 0x1, unprogrammed default
  9285                           ;	Write Protection Block 3
  9286                           ;	WRT7 = 0x1, unprogrammed default
  9287   300006                     	org	3145734
  9288   300006  FF                 	db	255
  9289                           
  9290                           ;Config register CONFIG4H @ 0x300007
  9291                           ;	unspecified, using default values
  9292                           ;	Configuration Register Write Protection bit
  9293                           ;	WRTC = 0x1, unprogrammed default
  9294                           ;	Boot Block Write Protection bit
  9295                           ;	WRTB = 0x1, unprogrammed default
  9296                           ;	Data EEPROM Write Protection bit
  9297                           ;	WRTD = 0x1, unprogrammed default
  9298                           ;	Scanner Enable bit
  9299                           ;	SCANE = 0x1, unprogrammed default
  9300                           ;	Low Voltage Programming Enable bit
  9301                           ;	LVP = 0x1, unprogrammed default
  9302   300007                     	org	3145735
  9303   300007  FF                 	db	255
  9304                           
  9305                           ;Config register CONFIG5L @ 0x300008
  9306                           ;	unspecified, using default values
  9307                           ;	UserNVM Program Memory Code Protection bit
  9308                           ;	CP = 0x1, unprogrammed default
  9309                           ;	DataNVM Memory Code Protection bit
  9310                           ;	CPD = 0x1, unprogrammed default
  9311   300008                     	org	3145736
  9312   300008  FF                 	db	255
  9313                           
  9314                           ;Config register CONFIG5H @ 0x300009
  9315                           ;	unspecified, using default values
  9316   300009                     	org	3145737
  9317   300009  FF                 	db	255
  9318                           
  9319                           ;Config register CONFIG6L @ 0x30000A
  9320                           ;	unspecified, using default values
  9321                           ;	Table Read Protection Block 0
  9322                           ;	EBTR0 = 0x1, unprogrammed default
  9323                           ;	Table Read Protection Block 1
  9324                           ;	EBTR1 = 0x1, unprogrammed default
  9325                           ;	Table Read Protection Block 2
  9326                           ;	EBTR2 = 0x1, unprogrammed default
  9327                           ;	Table Read Protection Block 3
  9328                           ;	EBTR3 = 0x1, unprogrammed default
  9329                           ;	Table Read Protection Block 4
  9330                           ;	EBTR4 = 0x1, unprogrammed default
  9331                           ;	Table Read Protection Block 5
  9332                           ;	EBTR5 = 0x1, unprogrammed default
  9333                           ;	Table Read Protection Block 6
  9334                           ;	EBTR6 = 0x1, unprogrammed default
  9335                           ;	Table Read Protection Block 7
  9336                           ;	EBTR7 = 0x1, unprogrammed default
  9337   30000A                     	org	3145738
  9338   30000A  FF                 	db	255
  9339                           
  9340                           ;Config register CONFIG6H @ 0x30000B
  9341                           ;	unspecified, using default values
  9342                           ;	Boot Block Table Read Protection bit
  9343                           ;	EBTRB = 0x1, unprogrammed default
  9344   30000B                     	org	3145739
  9345   30000B  FF                 	db	255
  9346                           tosu	equ	0xFFF
  9347                           tosh	equ	0xFFE
  9348                           tosl	equ	0xFFD
  9349                           stkptr	equ	0xFFC
  9350                           pclatu	equ	0xFFB
  9351                           pclath	equ	0xFFA
  9352                           pcl	equ	0xFF9
  9353                           tblptru	equ	0xFF8
  9354                           tblptrh	equ	0xFF7
  9355                           tblptrl	equ	0xFF6
  9356                           tablat	equ	0xFF5
  9357                           prodh	equ	0xFF4
  9358                           prodl	equ	0xFF3
  9359                           indf0	equ	0xFEF
  9360                           postinc0	equ	0xFEE
  9361                           postdec0	equ	0xFED
  9362                           preinc0	equ	0xFEC
  9363                           plusw0	equ	0xFEB
  9364                           fsr0h	equ	0xFEA
  9365                           fsr0l	equ	0xFE9
  9366                           wreg	equ	0xFE8
  9367                           indf1	equ	0xFE7
  9368                           postinc1	equ	0xFE6
  9369                           postdec1	equ	0xFE5
  9370                           preinc1	equ	0xFE4
  9371                           plusw1	equ	0xFE3
  9372                           fsr1h	equ	0xFE2
  9373                           fsr1l	equ	0xFE1
  9374                           bsr	equ	0xFE0
  9375                           indf2	equ	0xFDF
  9376                           postinc2	equ	0xFDE
  9377                           postdec2	equ	0xFDD
  9378                           preinc2	equ	0xFDC
  9379                           plusw2	equ	0xFDB
  9380                           fsr2h	equ	0xFDA
  9381                           fsr2l	equ	0xFD9
  9382                           status	equ	0xFD8
>>>>>>> Stashed changes

Data Sizes:
    Strings     41
    Constant    0
    Data        1
<<<<<<< Updated upstream
    BSS         129
=======
    BSS         197
>>>>>>> Stashed changes
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
<<<<<<< Updated upstream
    COMRAM           94     86      90
    BANK0           160     81     147
    BANK1           256      0      60
=======
    COMRAM           94     85      90
    BANK0           160    135     160
    BANK1           256      0     168
>>>>>>> Stashed changes
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[4]), STR_2(CODE[4]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

<<<<<<< Updated upstream
    S1124$vp	PTR void  size(2) Largest target is 0
=======
    S1433$vp	PTR void  size(2) Largest target is 0
>>>>>>> Stashed changes

    convarg.vp	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_1(CODE[33]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

<<<<<<< Updated upstream
    S1071$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1071$buffer	PTR unsigned char  size(2) Largest target is 0
=======
    S1349$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1349$buffer	PTR unsigned char  size(2) Largest target is 0
>>>>>>> Stashed changes

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 50
		 -> main@buf(BANK0[50]), 

    colour_rel@rel	PTR struct RGB_rel size(2) Largest target is 12
		 -> rel(BANK0[12]), 

    colour_rel@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 

    readColours@vals	PTR struct RGB size(2) Largest target is 8
		 -> vals(BANK1[8]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _readColours->_color_read_Blue
    _readColours->_color_read_Green
    _readColours->_color_read_Red
    _readColours->_color_read_lum
    _color_read_lum->_I2C_2_Master_Read
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _colour_rel->___fldiv
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   40512
                                             83 BANK0     52    52      0
                  _I2C_2_Master_Init
                    _Interrupts_init
                   _TxBufferedString
                   _color_click_init
                         _colour_rel
                         _initUSART4
                        _readColours
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             33    15     18   35003
                                             52 BANK0     31    13     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   34505
                                             44 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           23    17      6   34035
                                             66 COMRAM    19    13      6
                               _dtoa
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              54    47      7   26432
                                             49 COMRAM     9     2      7
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               8     4      4     497
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     478
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     363
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4007
                                             29 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3442
                                              4 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3413
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                             29 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5612
                                             31 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3343
                                             20 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             22 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              4 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              4 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readColours                                          2     0      2     616
                                             15 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Green
                     _color_read_Red
                     _color_read_lum
 ---------------------------------------------------------------------------------
 (2) _color_read_lum                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              8 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              5 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colour_rel                                          20    16      4    4376
                                             29 COMRAM    20    16      4
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     518
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3263
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              8 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              6 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                              5 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              2     2      0      22
                                              2 COMRAM     2     2      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
 ---------------------------------------------------------------------------------
 (10) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (10) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_2_Master_Init
   _Interrupts_init
   _TxBufferedString
     _putCharToTxBuf
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _colour_rel
     ___fldiv
     ___xxtofl
   _initUSART4
   _readColours
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_lum
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A8       7       65.6%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
<<<<<<< Updated upstream
BANK0               A0     51      93       5       91.9%
BITBIGSFRhlh        9A      0       0      34        0.0%
BITBIGSFRhhl        6D      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     56      5A       1       95.7%
BITBIGSFRlllhh      36      0       0      38        0.0%
BITBIGSFRllh        2D      0       0      37        0.0%
BITBIGSFRlllhll     2A      0       0      40        0.0%
BITBIGSFRlllll      26      0       0      45        0.0%
=======
BANK0               A0     87      A0       5      100.0%
BITBIGSFRllhh       8F      0       0      38        0.0%
BITBIGSFRhhl        6A      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITBIGSFRlllllh     36      0       0      42        0.0%
BITBIGSFRllllh      2D      0       0      41        0.0%
BITBIGSFRlllllh     2A      0       0      44        0.0%
BITBIGSFRllllll     26      0       0      49        0.0%
>>>>>>> Stashed changes
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRlllhll      D      0       0      43        0.0%
BITBIGSFRlllhlh      C      0       0      39        0.0%
BITBIGSFRlllhll      9      0       0      41        0.0%
BITBIGSFRhllll       8      0       0      35        0.0%
BITBIGSFRllllh       6      0       0      44        0.0%
BITBIGSFRlllhll      1      0       0      42        0.0%
BITBIGSFRlh          1      0       0      36        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
<<<<<<< Updated upstream
ABS                  0      0     129      46        0.0%
DATA                 0      0     129       3        0.0%
=======
ABS                  0      0     1A2      50        0.0%
DATA                 0      0     1A2       3        0.0%
>>>>>>> Stashed changes
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
<<<<<<< Updated upstream
Symbol Table                                                                                   Sat Feb 25 21:08:49 2023

               _color_read_Red 17EE                 _color_read_lum 179E                _color_read_Blue 188E  
                           l21 1A1A                             l30 183C                             l24 1B66  
                           l33 188C                             l27 17EC                             l36 18DC  
                           l39 16FA                             l72 1B46                             l81 1BCA  
                           l66 1ACA                             l75 1BD4                             l84 1BB6  
                           l69 1B20                             l78 1BC0                             l87 19A6  
             _color_read_Green 183E                readColours@vals 0010              ??_Interrupts_init 0005  
                          l210 1BAA                            l126 1B84                            l163 1AF4  
                          l172 1A4A                            l166 1B9C                            l177 1AA0  
                          l380 1226                            l393 138A                            l944 174C  
                          l970 169C                            l966 1646                            l975 0EB0  
                          l977 0EB8                            l978 0EFE                            l996 14D8  
                          l989 109E                            u750 1B30                            u751 1B2C  
                          u920 1ADE                            u760 1B46                            u921 1ADA  
                          u761 1B42                            u930 1B9A                            u931 1B94  
                          u940 1B9C                            u870 1990                            u871 1988  
                          u980 1A4A                            u981 1A46                            u990 1A8C  
                          u991 1A88                            u888 1992                            _abs 19A8  
                          _pad 1624                            wreg 000FE8                           l1002 179C  
                         l1021 15A2                           l1006 19DE                           l1032 1BD6  
                         l2000 0EFA                           l1009 19E6                           l2010 0F9C  
                         l2002 0F06                           ?_abs 0017                           l2020 1058  
                         l2012 0FA2                           l2004 0F0E                           l1029 1964  
                         l2022 1068                           l2006 0F14                           l2014 1006  
                         l2030 138C                           l2024 106E                           l2016 1020  
                         l2008 0F96                           l2040 13E0                           l2032 13B0  
                         l2026 107E                           l2018 103E                           l2050 149E  
                         l2042 13FC                           l2034 13BE                           l2044 1418  
                         l2036 13CC                           l2060 174E                           l2046 146E  
                         l2038 13D0                           l2054 14B0                           l2062 175A  
                         l2070 16FC                           l2064 1776                           l2072 170E  
                         l2066 1792                           l2074 1716                           l2090 15B4  
                         l2082 15A4                           l1700 1AB6                           l2076 171E  
                         l2092 15C0                           l2084 15A8                           l1702 1AB8  
                         l2078 173A                           l2094 15F6                           l2086 15AC  
                         l1632 1BCC                           l1640 1BC2                           l1704 1B4A  
                         l1720 1884                           l1712 17EE                           l1800 1A78  
                         l2096 1606                           l2088 15B0                           l1730 1ACE  
                         l1634 1BD0                           l1642 1BC6                           l1650 196C  
                         l1714 1834                           l1706 179E                           l1802 1A8C  
                         l2098 160A                           l1732 1ADE                           l1636 1BAE  
                         l1652 1974                           l1644 1BB8                           l1724 188E  
                         l1708 17E4                           l1804 1A90                           l1900 113A  
                         l1734 1AE2                           l1638 1BB2                           l1654 197C  
                         l1646 1BBC                           l1726 18D4                           l1718 183E  
                         l1806 1A9A                           l1910 11BC                           l1902 114E  
                         l1808 1B9E                           l1736 1AF2                           l1576 1B20  
                         l1760 1A10                           l1752 19E8                           l1656 19A2  
                         l1648 1968                           l1920 1206                           l1912 11BE  
                         l1904 115C                           l1578 1B30                           l1754 19EC  
                         l1770 1B7E                           l1658 19A4                           l1762 169E  
                         l1738 1B86                           l1914 11D0                           l1906 116E  
                         l1930 125A                           l1692 1AA2                           l1756 19F6  
                         l1772 1B80                           l1764 1B68                           l1908 119C  
                         l1916 11D6                           l1940 12B2                           l1932 125E  
                         l1924 1228                           l1860 14EC                           l1694 1AAC  
                         l1758 1A06                           l1774 1B82                           l1766 1B72  
                         l1918 11E6                           l1950 1334                           l1942 12C6  
                         l1934 126C                           l1926 122C                           l1862 14FE  
                         l1792 1A1C                           l1696 1AB2                           l1768 1B74  
                         l1880 10A0                           l1944 12D4                           l1952 133A  
                         l1936 128C                           l1928 123A                           l1864 1508  
                         l1872 1922                           l1960 1624                           l1794 1A20  
                         l1698 1AB4                           l1890 10E4                           l1882 10A4  
                         l1954 134A                           l1946 1302                           l1938 12AA  
                         l1866 1526                           l1858 14DA                           l1874 192E  
                         l1970 166A                           l1962 1632                           l1796 1A2E  
                         l1892 1104                           l1884 10B2                           l1956 136A  
                         l1948 1322                           l1868 155C                           l1876 1940  
                         l1972 1688                           l1964 163E                           l1980 0E44  
                         l1798 1A32                           l1894 1108                           l1886 10D2  
                         l1974 19A8                           l1878 1944                           l1966 1652  
                         l1990 0EC0                           l1982 0E58                           ?_pad 0015  
                         l1896 1114                           l1888 10D6                           l1976 19C2  
                         l1968 1666                           l1992 0ED0                           l1984 0E68  
                         l1898 1132                           l1994 0ED6                           l1986 0E88  
                         l1978 0E24                           l1996 0EE6                           l1988 0EA4  
                         l1998 0EF2                           STR_1 0E01                           u1100 10E4  
                         u1101 10E0                           u1111 110E                           u1120 1132  
                         u1200 1302                           u1040 14EC                           u1121 112E  
                         u1201 12FE                           u1041 14E8                           u1130 115C  
                         u1210 134A                           u1050 14FE                           u1131 1158  
                         u1211 1346                           u1051 14FA                           u1140 119C  
                         u1060 1526                           u1220 1632                           u1300 0EE6  
                         u1141 1198                           u1061 1522                           u1221 162E  
                         u1301 0EE2                           u1150 11E6                           u1070 155C  
                         u1230 1688                           u1310 1020                           u1151 11E2  
                         u1071 1558                           u1231 1684                           u1311 101C  
                         u1160 123A                           u1240 19C2                           u1080 1964  
                         u1320 103E                           u1161 1236                           u1241 19BE  
                         u1081 1960                           u1321 103A                           u1090 10B2  
                         u1170 126C                           u1330 1058                           u1250 0E54  
                         u1091 10AE                           u1171 1268                           u1331 1054  
                         u1251 0E4E                           u1180 12AA                           u1340 1068  
                         u1260 0E56                           u1181 12A6                           u1341 1064  
                         u1190 12D4                           u1270 0E68                           u1350 13B0  
                         u1407 19FC                           u1191 12D0                           u1271 0E64  
                         u1351 13AC                           u1280 0EA4                           u1360 13FC  
                 _BAUD4CONbits 000EE9                           u1281 0EA0                           u1361 13F8  
                         u1290 0ED0                           u1370 1418                           u1291 0ECC  
                         u1371 1414                           u1380 1792                           u1381 178E  
                         u1390 161C                           u1391 1618                           abs@a 0017  
                         _dbuf 00CA                           _main 15A4                           _dtoa 0E24  
                         _prec 00C7                           _vals 00EA                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                           start 004A  
       __end_of_color_read_Red 183E                __end_of_HighISR 004A         __end_of_color_read_lum 17EE  
                 ___param_bank 000000                          ??_abs 0019                          ??_pad 001B  
                 ?_readColours 0010                __end_of___aodiv 1228                          ?_main 0001  
                        ?_dtoa 0020                __end_of___aomod 138C                          i2l152 1B1E  
                        i2l216 002A                          i2l218 003E                          i2l159 1A76  
                 vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 1BD6     __end_of_I2C_2_Master_Write 1BB8  
                        _flags 00C9                          _fputc 14DA                          _fputs 1922  
                        pad@fp 0015                          _width 00C5                          _putch 1BD6  
                        dtoa@d 0022                          dtoa@i 0041                          dtoa@n 0038  
                        dtoa@p 0034                          dtoa@s 0040                          dtoa@w 0036  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 174E        __end_of_color_read_Blue 18DE          _I2C_2_Master_RepStart 1BB8  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                ?_color_read_lum 0009  
              __initialization 18DE                   __end_of_main 1624                   __end_of_dtoa 10A0  
           putCharToTxBuf@byte 0005                         ??_main 0057                         ??_dtoa 002A  
                __activetblptr 000001                         ?_fputc 0005                         ?_fputs 000E  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RD5PPS 000E6F                         _RD6PPS 000E70                         i2l1832 0012  
                       i2l1834 0022                         i2l1780 1B0C                         i2l1782 1B1C  
                       i2l1838 0038                         i2l1784 1A4C                         i2l1776 1AF8  
                       i2l1786 1A5C                         i2l1778 1B08                         i2l1788 1A60  
                    ??_HighISR 0003       __end_of_color_click_init 1A1C                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   vfprintf@cfmt 0055               _getCharFromTxBuf 1A4C  
                    ??___aodiv 0015                      ??___aomod 0015                         clear_0 18F6  
                       clear_1 1902                         isa$std 000001                         pad@buf 0017  
                       dtoa@fp 0020                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 179E                      ??_sprintf 0057          __end_of_isDataInTxBuf 1B9E  
                   __accesstop 0060        __end_of__initialization 1910       __end_of_color_read_Green 188E  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_Blue 0009  
              _Interrupts_init 1B9E                 __pcstackCOMRAM 0001                   __pidataBANK0 1BD8  
                __end_of_fputc 15A4                  __end_of_fputs 1966                  __end_of_putch 1BD8  
                      ??_fputc 0009                        ??_fputs 0012                        ??_putch 0005  
                   __pbssBANK0 00B1                     __pbssBANK1 0100              _color_writetoaddr 1B48  
           ?_color_writetoaddr 0007            ??_color_writetoaddr 0008                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u96_40 1B08                        i2u96_41 1B04  
                      i2u97_40 1A5C                        i2u97_41 1A58                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5        __end_of_Interrupts_init 1BAC         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 1B68             _I2C_2_Master_Start 1BCC                     _initUSART4 1B68  
           _I2C_2_Master_Write 1BAC                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 10A0                        ___aomod 1228  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0060  
                 __psmallconst 0E00                        __pcinit 18DE                        __ramtop 0E00  
                      __ptext0 15A4                        __ptext1 16FC                        __ptext2 174E  
                      __ptext3 138C                        __ptext4 0E24                        __ptext5 1624  
                      __ptext6 1922                        __ptext7 14DA                        __ptext8 1BD6  
                      __ptext9 19A8                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 1A78  
            color_read_lum@tmp 000E                        main@buf 007F                        _sprintf 16FC  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 1910  
            __end_of_sendTxBuf 1AA2                        fputc@fp 0007                        fputs@fp 0010  
            ?_color_click_init 0001             ??_color_click_init 0009              __end_of_vfpfcnvrt 14DA  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0055  
                    _TRISDbits 000F84       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
             ?_Interrupts_init 0001                   _EUSART4RXbuf 00B1                   _EUSART4TXbuf 0100  
            ?_color_read_Green 0009                    ?_initUSART4 0001             ??_color_read_Green 000B  
                  vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0053                    vfpfcnvrt@fp 0043  
          start_initialization 18DE                    __end_of_abs 19E8                    __end_of_pad 169E  
                _TxBufWriteCnt 0058            color_read_Green@tmp 000E                    vfprintf@fmt 0062  
                ??_readColours 0012                 _putCharToRxBuf 1AF6                 _putCharToTxBuf 1ACC  
                  __pdataBANK0 00F2                    __pbssCOMRAM 0057                  __pcstackBANK0 0060  
             ___aodiv@dividend 0005                       ?_HighISR 0001                      _dtoa$1152 0032  
       __end_of_putCharToRxBuf 1B20         __end_of_putCharToTxBuf 1AF6                      __pintcode 0008  
                     ?___aodiv 0005                       ?___aomod 0005               ___aodiv@quotient 0017  
       TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007           I2C_2_Master_Read@tmp 0008  
                  __smallconst 0E00            __end_of_readColours 16FC              _I2C_2_Master_Idle 1B20  
            _I2C_2_Master_Init 1AA2              _I2C_2_Master_Read 1966              _I2C_2_Master_Stop 1BC2  
                 _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 0066  
            ?_getCharFromTxBuf 0001             ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005  
          ??_I2C_2_Master_Init 0005            ??_I2C_2_Master_Read 0006            ??_I2C_2_Master_Stop 0006  
                _isDataInTxBuf 1B86               _TxBufferedString 1A1C                      _sendTxBuf 1A78  
                     _PIE2bits 000E2B                       _PIE4bits 000E2D                       i2u101_40 0022  
                     i2u101_41 001E                       i2u102_40 0038                       i2u102_41 0034  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 138C  
    __end_of_I2C_2_Master_Idle 1B48      __end_of_I2C_2_Master_Init 1ACC      __end_of_I2C_2_Master_Read 19A8  
    __end_of_I2C_2_Master_Stop 1BCC                       _DataFlag 00F2    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057                 ?_isDataInTxBuf 0001  
__end_of_I2C_2_Master_RepStart 1BC2             color_read_Blue@tmp 000E                     ?_sendTxBuf 0001  
                 ??_initUSART4 0005                       __Hrparam 0000                     vfprintf@ap 0064  
                     __Lrparam 0000                     vfprintf@fp 0060                   __Lsmallconst 0E00  
                  _readColours 169E                     ?_vfpfcnvrt 0043                ___aodiv@divisor 000D  
              ___aodiv@counter 0015                     _ANSELDbits 000EA7                     sprintf@fmt 0068  
           __end_of_initUSART4 1B86                       __ptext10 1228                       __ptext11 10A0  
                     __ptext20 1966                       __ptext12 1A78                       __ptext21 1B68  
                     __ptext13 1B86                       __ptext30 1ACC                       __ptext22 19E8  
                     __ptext14 169E                       __ptext31 1B9E                       __ptext23 1B48  
                     __ptext15 179E                       __ptext24 1BAC                       __ptext16 17EE  
                     __ptext33 1AF6                       __ptext25 1BC2                       __ptext17 183E  
                     __ptext34 1A4C                       __ptext26 1BCC                       __ptext18 188E  
                     __ptext27 1B20                       __ptext19 1BB8                       __ptext28 1AA2  
                     __ptext29 1A1C                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       int$flags 005B  
                     _vfprintf 174E               ___aomod@dividend 0005                     _INTCONbits 000FF2  
              ??_isDataInTxBuf 0005                       intlevel2 0000                      sprintf@ap 0072  
                  ??_sendTxBuf 0005                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 19E8       __end_of_TxBufferedString 1A4C  
                     sprintf@f 0074                       sprintf@s 0066                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8                   ___aodiv@sign 0016  
=======
Symbol Table                                                                                   Mon Feb 27 01:05:53 2023

               _color_read_Red 3A32                   ___fldiv@aexp 001D                   ___fldiv@bexp 001C  
               _color_read_lum 39E2                   ___fldiv@sign 0015                _color_read_Blue 3AD2  
                           l31 3CB0                             l40 3A80                             l34 3E72  
                           l43 3AD0                             l52 2F7C                             l37 3A30  
                           l46 3B20                             l49 38EA                             l83 3DD6  
                           l92 3EE0                             l86 3E2C                             l95 3ECC  
                           l89 3E52                             l98 3ED6               _color_read_Green 3A82  
              readColours@vals 0010              ??_Interrupts_init 0005                            l101 3EC2  
                          l104 3C30                            l143 3E90                            l227 3EB6  
                          l180 3E00                            l405 3104                            l183 3EA8  
                          l194 3DAC                            l418 3268                            l189 3D56  
                          l550 37AC                            l561 3472                            l556 342C  
                          l820 1A02                            l565 3D26                            l821 19C8  
                          l912 1FA0                            l905 1DAA                            l922 20D0  
                          l914 2018                            l915 2006                            l819 1A14  
                          l836 1B2E                            l828 1CE4                            l588 336E  
                          l909 210E                            l845 1BFE                            l861 3B66  
                          l846 1BEC                            l960 2D8A                            l873 24A8  
                          l953 2D2E                            l946 2C96                            l875 2308  
                          l884 234E                            l949 2DF2                            l886 23C6  
                          l878 22CC                            l887 23B4                            l969 3990  
                          _abs 3C32                            _pad 37AE                            _rel 00F3  
                          wreg 000FE8                   ___flmul@aexp 0012                   ___flmul@bexp 0017  
                 ___flmul@sign 0011                   ___flmul@temp 001C                   ___flmul@prod 0018  
                 ___fltol@exp1 000E                           l1001 37D0                           l1010 283C  
                         l1012 2844                           l1005 3826                           l1013 288A  
                         l1120 3C68                           l1024 2A2C                           l1040 1004  
                         l1105 393E                           l1123 3C70                           l1115 3570  
                         l1035 1824                           ?_abs 0017                           l1132 2B82  
                         l1140 387C                           l1038 11BE                           l1143 388C  
                         l1161 363A                           l1129 2C3E                           l1083 27AE  
                         l1172 3EE2                           l1068 1606                           l1149 39E0  
                         l4000 3DA6                           l1169 3BEE                           l4002 3EAA  
                         l1178 3BAA                           l4200 1832                           l5000 0E54  
                         l4210 1872                           l4202 1840                           l5010 0EAA  
                         l5002 0E78                           l4300 1A32                           l4220 18A4  
                         l4212 1874                           l4204 1842                           l5100 1248  
                         l5020 0EFA                           l5012 0EB6                           l5004 0E82  
                         l3430 3E2C                           l4310 1A72                           l4230 18CC  
                         l4222 18A6                           l4206 1852                           l4214 187C  
                         l5110 1330                           l5102 1250                           l5030 0F2E  
                         l5022 0EFE                           l5014 0EBE                           l5006 0E8A  
                         l3432 3E3C                           l4400 3BAC                           l4320 1A9C  
                         l4312 1A7E                           l4304 1A46                           l4240 1906  
                         l4232 18DC                           l4224 18AC                           l4216 188C  
                         l4208 1862                           l5200 17B0                           l5120 13EE  
                         l5112 1364                           l5104 1260                           l5040 0F8A  
                         l5024 0F04                           l5008 0E9A                           l5016 0EC2  
                         l4410 2F82                           l4402 3BB8                           l4330 1B0E  
                         l4314 1A82                           l4306 1A56                           l4322 1AA2  
                         l4250 1932                           l4242 1918                           l4234 18EC  
                         l4226 18BA                           l4218 1892                           l5210 1804  
                         l5202 17BE                           l5130 148A                           l5122 1404  
                         l5106 1274                           l5114 136A                           l5042 0F90  
                         l5026 0F0C                           l5018 0EE8                           l5034 0F4E  
                         l4500 215C                           l4420 2FE2                           l4412 2F90  
                         l4404 3BCA                           l4340 1B68                           l4324 1AC8  
                         l4332 1B1E                           l4316 1A90                           l4308 1A64  
                         l4260 1946                           l4252 1936                           l4244 1926  
                         l4236 18EE                           l4228 18BC                           l5204 17D6  
                         l5132 14E0                           l5140 1532                           l5124 1436  
                         l5116 1388                           l5108 12D8                           l5060 101A  
                         l5044 0F98                           l5036 0F74                           l5052 0FB4  
                         l5028 0F24                           l5220 24EE                           l3710 3EDC  
                         l4510 2182                           l4502 215E                           l4430 302C  
                         l4422 2FE6                           l4414 2FB0                           l4190 35A0  
                         l4406 3BCE                           l4350 1B98                           l4342 1B72  
                         l4334 1B44                           l4326 1AFC                           l4318 1A92  
                         l4270 195A                           l4262 194A                           l4254 193A  
                         l4246 192A                           l4238 18F6                           l5206 17E6  
                         l5150 1564                           l5142 1542                           l5134 14E6  
                         l5126 1446                           l5118 13BC                           l5070 1110  
                         l5062 104E                           l5054 0FCE                           l5038 0F86  
                         l5230 2598                           l5222 24F2                           l5214 24AA  
                         l5302 38EC                           l3712 3EBA                           l4600 241A  
                         l4520 21C2                           l4512 2190                           l4504 2166  
                         l5312 2DF4                           l3720 3EC4                           l4440 309C  
                         l4432 303A                           l4424 2FF2                           l4416 2FB4  
                         l4408 2F7E                           l4192 35BE                           l4184 3572  
                         l4360 1BC0                           l4352 1B9C                           l4344 1B80  
                         l4336 1B54                           l4328 1AFE                           l4280 1994  
                         l4272 195E                           l4264 194E                           l4256 193E  
                         l4248 192E                           l5208 17FC                           l5160 1636  
                         l5152 15DC                           l5144 154A                           l5136 151A  
                         l5128 1456                           l5080 11C6                           l5072 1144  
                         l5064 108C                           l5240 25F6                           l5224 2502  
                         l5216 24D2                           l5304 38F8                           l5320 3962  
                         l3714 3EBE                           l4610 2484                           l4602 241E  
                         l4530 2202                           l4522 21C4                           l4514 2192  
                         l4506 2176                           l3730 3C06                           l3722 3EC8  
                         l4442 30AE                           l4434 304C                           l4426 3010  
                         l4418 2FC2                           l4194 35F4                           l4186 3584  
                         l4370 1C1A                           l4362 1BCE                           l4354 1BAC  
                         l4346 1B82                           l4290 19E6                           l4282 19B0  
                         l4274 1962                           l4266 1952                           l4258 1942  
                         l5170 165C                           l5162 163A                           l5154 15FC  
                         l5146 1550                           l5138 152E                           l5090 11F6  
                         l5082 11D6                           l5074 114C                           l5066 10BE  
                         l5058 1014                           l5250 265C                           l5242 25FE  
                         l5234 25C8                           l5226 2522                           l5218 24E0  
                         l5306 3914                           l5322 397E                           l5314 3940  
                         l3708 3ED8                           l3716 3ECE                           l4612 2488  
                         l4604 2438                           l4540 2232                           l4532 220A  
                         l4516 21A2                           l4524 21CC                           l4508 217C  
                         l3900 2D60                           l3732 3C2C                           l3724 3BF2  
                         l4436 307A                           l4428 3018                           l4444 30B4  
                         l4460 313C                           l4452 3106                           l4188 3596  
                         l4700 1EFA                           l4380 1C84                           l4372 1C28  
                         l4364 1BE4                           l4348 1B90                           l4356 1BAE  
                         l4292 19F4                           l4284 19C0                           l4268 1956  
                         l4276 1966                           l5180 1690                           l5172 1662  
                         l5164 1640                           l5156 1618                           l5148 1558  
                         l5092 1208                           l5084 11E2                           l5068 10FC  
                         l5260 270E                           l5252 2690                           l5236 25D8  
                         l5228 2542                           l5308 3934                           l5316 3952  
                         l5340 364C                           l5332 363C                           l3830 3DBE  
                         l3718 3ED2                           l4614 2496                           l4606 244E  
                         l4550 2270                           l4542 2232                           l4534 220E  
                         l4526 21DC                           l4518 21B2                           l3910 2D9E  
                         l3902 2D6C                           l3734 3C2E                           l3726 3BF6  
                         l4446 30C4                           l4438 309A                           l4470 31A4  
                         l4462 314A                           l4454 310A                           l4710 1F90  
                         l4702 1F24                           l4630 1D00                           l4390 1CBE  
                         l4382 1CA4                           l4374 1C62                           l4358 1BBC  
                         l4294 19F6                           l4286 19D6                           l4278 196A  
                         l4198 1826                           l5182 1696                           l5166 1648  
                         l5158 1626                           l5174 1668                           l5190 172E  
                         l5094 1216                           l5086 11EA                           l5078 118C  
                         l5238 25EE                           l5246 2606                           l5318 395A  
                         l5350 36D6                           l5342 364E                           l5334 3640  
                         ?_pad 0015                           l3832 3DC0                           l4616 249C  
                         l4608 2468                           l4560 22BC                           l4552 2280  
                         l4528 21F2                           l3912 2DC2                           l3904 2D7A  
                         l3728 3BFE                           l3840 39E2                           l4448 30E4  
                         l4472 31B2                           l4480 3218                           l4464 316A  
                         l4456 3118                           l4720 1FD0                           l4712 1F9E  
                         l4704 1F5A                           l4640 1D38                           l4632 1D02  
                         l4800 3CF0                           l4392 1CC4                           l4384 1CA8  
                         l4368 1C0E                           l4376 1C64                           l4296 1A00  
                         l4288 19E2                           l5192 174C                           l5184 16EE  
                         l5176 167A                           l5168 1658                           l5096 122E  
                         l5088 11F2                           l5256 26C4                           l5248 2638  
                         l5272 2782                           l5352 36E6                           l5344 3668  
                         l5336 3644                           l3834 3DC2                           l3826 3DAE  
                         l4618 249E                           l4570 2306                           l4562 22CA  
                         l4554 2290                           l4546 2246                           l4538 2222  
                         l4490 211C                           l3914 2DD2                           l3906 2D98  
                         l3842 3A28                           l4482 3228                           l4474 31E0  
                         l4466 3188                           l4458 3138                           l4730 2042  
                         l4722 1FFE                           l4714 1FB0                           l4706 1F68  
                         l4650 1D64                           l4642 1D48                           l4634 1D12  
                         l4626 1CE6                           l4802 3D06                           l4394 1CD2  
                         l4386 1CB6                           l4378 1C74                           l4298 1A22  
                         l4810 3280                           l5194 1768                           l5186 1722  
                         l5178 168C                           l5098 1240                           l5266 2740  
                         l5258 26EE                           l5354 36EA                           l5346 3674  
                         l5338 3648                           l3836 3DC4                           l3828 3DB8  
                         l3940 3C9A                           l3932 3C72                           l4580 234C  
                         l4572 2318                           l4564 22D6                           l4556 2298  
                         l4548 2260                           l4492 212A                           l3916 2DE0  
                         l3908 2D9A                           l3860 3B18                           l3852 3A82  
                         l4484 3248                           l4476 3200                           l4468 3190  
                         l4740 20B8                           l4732 206C                           l4716 1FBE  
                         l4708 1F86                           l4660 1DBA                           l4652 1D74  
                         l4644 1D4E                           l4636 1D22                           l4628 1CF2  
                         l4804 3D16                           l4396 1CD4                           l4388 1CBC  
                         l4820 32D0                           l4900 2A2E                           l5196 1770  
                         l5188 172A                           l5268 2770                           l5348 3688  
                         l3870 3DFE                           l3838 3E56                           l3950 3CAC  
                         l3942 3CA4                           l3934 3C76                           l4590 23AC  
                         l4574 232E                           l4582 235E                           l4566 22F4  
                         l4558 22A8                           l4494 212C                           l3918 2DE2  
                         l3854 3AC8                           l3846 3A32                           l4478 3212  
                         l4742 20D4                           l4750 20FA                           l4726 2028  
                         l4734 2070                           l4718 1FC2                           l4670 1DF4  
                         l4662 1DCA                           l4654 1D84                           l4646 1D54  
                         l4638 1D32                           l4830 32FA                           l4822 32D4  
                         l4814 3294                           l4902 2A4E                           l5198 1780  
                         l3864 3DDA                           l3952 3CAE                           l3944 3CA6  
                         l3936 3C80                           l4584 236C                           l4576 2334  
                         l4568 22F6                           l4496 213C                           l4488 2110  
                         l3880 2C60                           l3960 3E7E                           l3848 3A78  
                         l3872 3E92                           l4752 20FE                           l4744 20E4  
                         l4736 208A                           l4728 2034                           l4680 1E46  
                         l4672 1E0A                           l4656 1D94                           l4648 1D62  
                         l4840 3322                           l4832 3304                           l4824 32E2  
                         l4816 32BE                           l4808 326A                           l4920 2BF6  
                         l4912 2B36                           l4904 2AA4                           l5480 2762  
                         l3866 3DEA                           l3946 3CA8                           l3938 3C90  
                         l4594 23D6                           l4586 2370                           l4578 233E  
                         l4498 214C                           l3890 2CD8                           l3882 2CA6  
                         l3962 3E80                           l3858 3AD2                           l3954 388E  
                         l4770 3780                           l4762 3704                           l4746 20F2  
                         l4738 209E                           l4690 1E8C                           l4682 1E54  
                         l4674 1E16                           l4666 1DDE                           l4658 1D9A  
                         l4842 332E                           l4834 330E                           l4818 32C0  
                         l4922 2C1E                           l4914 2B72                           l4906 2AB8  
                         l4930 39A6                           l3868 3DEE                           l3948 3CAA  
                         l4596 23E2                           l4588 237E                           l3892 2CE4  
                         l3884 2CBC                           l3876 2C42                           l3964 3E8A  
                         l4860 37F0                           l4852 37AE                           l4940 27B0  
                         l4772 37A4                           l4764 3732                           l4780 339E  
                         l4748 20F4                           l4692 1EA6                           l4684 1E60  
                         l4676 1E2E                           l4668 1DEA                           l4756 3B22  
                         l4844 333E                           l4924 2C2E                           l4908 2AC6  
                         l4916 2BA6                           l4932 39B2                           l5476 261A  
                         l3990 3D3A                           l4598 23F0                           l3894 2D16  
                         l3878 2C52                           l3966 3E8C                           l3958 3E74  
                         l4862 37F4                           l4854 37BC                           l4950 2830  
                         l4942 27D0                           l4774 37AA                           l4766 3742  
                         l4790 340C                           l4782 33AE                           l4694 1EB6  
                         l4686 1E70                           l4678 1E3A                           l4758 3B32  
                         l4846 334E                           l4870 3474                           l4918 2BE2  
                         l4934 39B6                           l5478 26D8                           l3992 3D3E  
                         l3896 2D18                           l3888 2CD0                           l3968 3E8E  
                         l4864 3812                           l4856 37C8                           l4960 287E  
                         l4952 284C                           l4944 27E4                           l4768 3770  
                         l4792 341A                           l4784 33DC                           l4696 1ED2  
                         l4688 1E7C                           l4848 335E                           l4872 3494  
                         l4936 39C2                           l4928 3992                           l3986 3D28  
                         l3898 2D24                           l3994 3D84                           l4866 3C32  
                         l4858 37DC                           l4970 2924                           l4962 2886  
                         l4954 285C                           l4946 27F4                           l4794 346A  
                         l4786 33EC                           l4778 3370                           l4698 1EDE  
                         l4874 34D2                           l4882 3512                           l4938 39C6  
                         l3988 3D2C                           l3996 3D98                           l4868 3C4C  
                         l4980 29CC                           l4972 292A                           l4964 2892  
                         l4956 2862                           l4948 2814                           l4796 3470  
                         l4788 33FA                           l4884 3524                           l4876 34FA  
                         l4892 3B68                           l3998 3D9C                           l4982 29E6  
                         l4974 2930                           l4966 289C                           l4958 2872  
                         l4878 3506                           l4894 3B78                           l4984 29F6  
                         l4968 28A2                           l4976 2994                           l4888 3568  
                         l4896 3828                           l4992 0E2C                           l4986 29FC  
                         l4978 29AE                           l4898 3846                           l4994 0E32  
                         l4988 2A0C                           l4996 0E42                           l4998 0E50  
                         STR_1 0E01                           STR_2 0E22                           STR_5 0E26  
                 _BAUD4CONbits 000EE9                           u4100 2D12                           u4101 2D0E  
                         u4110 2D5C                           u4111 2D58                           u4040 3DEA  
                         u4200 3D56                           u5000 237E                           u4120 2D7A  
                         u4041 3DE6                           u4201 3D52                           u5001 237A  
                         u4121 2D76                           u5010 23AC                           u4130 2D8A  
                         u4050 3EA6                           u4210 3D98                           u5011 23A8  
                         u4131 2D86                           u4051 3EA0                           u4211 3D94  
                         u5020 23C2                           u4140 2D98                           u4060 3EA8  
                         u4300 35BE                           u5100 1D22                           u5021 23BE  
                         u4141 2D94                           u4301 35BA                           u5101 1D1E  
                         u5030 23D6                           u4150 2DD2                           u4070 2C52  
                         u4310 35F4                           u5110 1D62                           u5031 23D2  
                         u4151 2DCE                           u4071 2C4E                           u4311 35F0  
                         u5111 1D5E                           u5040 23F0                           u4160 2DE0  
                         u4080 2C60                           u5200 1FFE                           u5120 1D74  
                         u4400 1926                           u4320 1840                           u6000 1618  
                         u5041 23EC                           u4161 2DDC                           u4081 2C5C  
                         u5201 1FFA                           u5121 1D70                           u4401 1922  
                         u4321 183C                           u6001 1614                           u5050 2438  
                         u4090 2CBC                           u5210 2014                           u5130 1D84  
                         u4410 1994                           u4330 1852                           u6010 1626  
                         u5051 2434                           u4091 2CB8                           u5211 2010  
                         u5131 1D80                           u4411 1990                           u4331 184E  
                         u6011 1622                           u3540 3E3C                           u5060 2468  
                         u5300 339E                           u5220 2028                           u5140 1DBA  
                         u4500 1A72                           u4420 19AC                           u4340 1862  
                         u6020 167A                           u6100 2542                           u3541 3E38  
                         u5061 2464                           u5301 339A                           u5221 2024  
                         u5141 1DB6                           u4501 1A6E                           u4421 19A6  
                         u4341 185E                           u6021 1676                           u6101 253E  
                         u3550 3E52                           u5070 2496                           u5310 33DC  
                         u5230 2042                           u5150 1DCA                           u4510 1A90  
                         u4430 19AE                           u4350 18A4                           u6030 174C  
                         u6110 2658                           u3551 3E4E                           u5071 2492  
                         u5311 33D8                           u5231 203E                           u5151 1DC6  
                         u4511 1A8C                           u4351 18A0                           u6031 1748  
                         u6111 2654                           u4280 3584                           u5320 33FA  
                         u5240 208A                           u5160 1F44                           u5080 1D00  
                         u4600 1BCE                           u4520 1AC8                           u4440 19D6  
                         u4360 18BA                           u5400 331E                           u6040 1768  
                         u6120 3934                           u4281 3580                           u5321 33F6  
                         u5241 2086                           u5081 1CFC                           u4601 1BCA  
                         u4521 1AC4                           u4441 19D2                           u4361 18B6  
                         u5401 331A                           u6041 1764                           u6121 3930  
                         u4290 3596                           u5330 341A                           u5250 20B8  
                         u5170 1F9E                           u5090 1D12                           u4610 1BE4  
                         u4530 1B0E                           u4450 19F4                           u4370 18CC  
                         u5410 333E                           u6050 17D0                           u4291 3592  
                         u5331 3416                           u5251 20B4                           u5171 1F9A  
                         u5091 1D0E                           u4611 1BE0                           u4531 1B0A  
                         u4451 19F0                           u4371 18C8                           u5411 333A  
                         u6051 17CA                           u5340 346A                           u5260 20F2  
                         u5180 1FBE                           u4700 1CD2                           u4620 1BFA  
                         u4540 1B44                           u4460 1A14                           u4380 18DC  
                         u5420 334E                           u6060 17D2                           u5341 3466  
                         u5261 20EE                           u5181 1FBA                           u5165 1F3A  
                         u4701 1CCE                           u4621 1BF6                           u4541 1B40  
                         u4461 1A10                           u4381 18D8                           u5421 334A  
                         u4710 3BEE                           u5430 37BC                           u5270 3732  
                         u5190 1FD0                           u5350 3D06                           u4630 1C0E  
                         u4550 1B54                           u4470 1A22                           u4390 1918  
                         u5510 355E                           u6070 17E6                           u6150 36FC  
                         u4711 3BEA                           u5431 37B8                           u5271 372E  
                         u5191 1FCC                           u5351 3D02                           u4631 1C0A  
                         u4551 1B50                           u4471 1A1E                           u4391 1914  
                         u5511 3558                           u6071 17E2                           u6151 36F8  
                         u4720 2F90                           u4800 314A                           u5440 3812  
                         u5280 3770                           u4640 1C28                           u4560 1B80  
                         u4480 1A32                           u5360 3280                           u5520 3560  
                         u5600 2B56                           u6080 24D2                           u4721 2F8C  
                         u4801 3146                           u5441 380E                           u5281 376C  
                         u4641 1C24                           u4561 1B7C                           u4481 1A2E  
                         u5361 327C                           u5505 3536                           u6081 24CE  
                         u4730 2FC2                           u4810 3188                           u5450 3C4C  
                         u5290 37A4                           u4650 1C62                           u4570 1B90  
                         u4490 1A64                           u5370 32B4                           u5610 2B72  
                         u5530 3BAA                           u6090 2522                           u4731 2FBE  
                         u4811 3184                           u5451 3C48                           u5291 37A0  
                         u4651 1C5E                           u4571 1B8C                           u4491 1A60  
                         u5611 2B6E                           u5531 3BA6                           u6091 251E  
                         u4900 21B2                           u4820 31B2                           u5700 285C  
                         u4660 1C74                           u4580 1BAC                           u5380 32E2  
                         u5460 34B4                           u5620 2BC6                           u5540 3846  
                         u4901 21AE                           u4741 2FEC                           u4821 31AE  
                         u5701 2858                           u4661 1C70                           u4581 1BA8  
                         u5381 32DE                           u5605 2B4C                           u5541 3842  
                         u4910 21F2                           u4750 3010                           u4830 31E0  
                         u5710 2872                           u4670 1C84                           u4590 1BBC  
                         u5390 32F6                           u5470 34D2                           u5630 2BE2  
                         u5550 2A76                           u4911 21EE                           u4751 300C  
                         u4831 31DC                           u5711 286E                           u4671 1C80  
                         u4591 1BB8                           u5391 32F2                           u5375 32AA  
                         u5471 34CE                           u5631 2BDE                           u6167 365A  
                         u4920 2232                           u4760 303A                           u4840 3228  
                         u5720 29AE                           u4680 1CA4                           u5480 34FA  
                         u5640 2C1E                           u5560 2AA4                           u5800 0EFA  
                         u6177 3C86                           u4921 222E                           u4761 3036  
                         u4841 3224                           u5721 29AA                           u4681 1CA0  
                         u5481 34F6                           u5465 34AA                           u5641 2C1A  
                         u5625 2BBC                           u5561 2AA0                           u5801 0EF6  
                         u4930 22A8                           u4850 212A                           u4770 307A  
                         u5730 29CC                           u4690 1CB6                           u5490 3524  
                         u5570 2AC6                           u5650 39E0                           u5810 0F74  
                         u4931 22A4                           u4851 2126                           u4771 3076  
                         u5731 29C8                           u4691 1CB2                           u5491 3520  
                         u5571 2AC2                           u5555 2A6C                           u5651 39DC  
                         u5811 0F70                           u4940 22CA                           u4860 213C  
                         u3980 3C1A                           u4780 30C4                           u5740 29E6  
                         u5660 27E0                           u5900 1208                           u5820 0F86  
                         u4941 22C6                           u4861 2138                           u3981 3C12  
                         u4781 30C0                           u5741 29E2                           u5661 27DA  
                         u5901 1204                           u5821 0F82                           u4950 22F4  
                         u4870 214C                           u4790 3118                           u5750 29F6  
                         u5670 27E2                           u5590 2B32                           u5910 1216  
                         u5830 1000                           u4951 22F0                           u4871 2148  
                         u4791 3114                           u5751 29F2                           u5591 2B2E  
                         u5911 1212                           u5831 0FFC                           u4960 2318  
                         u4880 2190                           u5680 27F4                           u5920 1240  
                         u5840 108C                           u5760 0E50                           u4961 2314  
                         u4881 218C                           u5681 27F0                           u5585 2ADA  
                         u5921 123C                           u5841 1088                           u5761 0E4C  
                         u4970 232E                           u4890 21A2                           u5690 2830  
                         u5586 2AE4                           u5930 1388                           u5850 10BE  
                         u5770 0E9A                           u4971 232A                           u4891 219E  
                         u5691 282C                           u5587 2AF4                           u5931 1384  
                         u5851 10BA                           u5771 0E96                           u4980 234C  
                         u5940 13EE                           u5860 10FC                           u5780 0EAA  
                         u4981 2348                           u5941 13EA                           u5861 10F8  
                         u5781 0EA6                           u4990 236C                           u3998 3C1C  
                         u5950 1436                           u5870 1188                           u5790 0EE8  
                         u4991 2368                           u5951 1432                           u5871 1184  
                         u5791 0EE4                           u5960 1446                           u5880 11BE  
                         u5961 1442                           u5881 11BA                           u5970 14E0  
                         u5890 11D6                           u5971 14DC                           u5891 11D2  
                         u5980 152E                           u5981 152A                           u5990 15DC  
                         u5991 15D8                           abs@a 0017                           _dbuf 0150  
                         _labs 3828                           _main 363C                           _dtoa 27B0  
                         _prec 00F1                           _vals 01A0                           pad@i 001C  
                         pad@p 0019                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001E  
                         fsr2l 000FD9                           btemp 005B                  ___fpclassifyf 3474  
                         prodh 000FF4                           prodl 000FF3                           start 004A  
              ___fldiv@new_exp 0016         __end_of_color_read_Red 3A82                __end_of_HighISR 004A  
       __end_of_color_read_lum 3A32                   ___param_bank 000000                          ??_abs 0019  
                        ??_pad 001B                   ?_readColours 0010                  ___fltol@sign1 000D  
              __end_of___aodiv 3106                          ?_labs 0005                __end_of___fladd 1CE6  
                        ?_main 0001                          ?_dtoa 0020                __end_of___aomod 326A  
              __end_of___fldiv 24AA                __end_of___flneg 3D28                __end_of___flmul 2110  
              __end_of___flsub 3B68                __end_of___fltol 3370                    colour_rel@B 002A  
                  colour_rel@G 0026                    colour_rel@L 002E                    colour_rel@R 0022  
                        i2l233 002A                          i2l235 003E                          i2l176 3D82  
                        i2l169 3E2A                   vfpfcnvrt@fmt 0045     __end_of_I2C_2_Master_Start 3EE2  
   __end_of_I2C_2_Master_Write 3EC4                          _flags 0056                          _fputc 3572  
                        _fputs 3BAC                          labs@a 0005                          pad@fp 0015  
                        _width 00EF                          _putch 3EE2                          dtoa@d 0022  
                        dtoa@i 0041                          dtoa@n 0038                          dtoa@p 0034  
                        dtoa@s 0040                          dtoa@w 0036                          tablat 000FF5  
                        ttemp5 005C                          ttemp6 005F                          ttemp7 0063  
                        status 000FD8                          wtemp8 005C                __end_of_sprintf 3992  
               ?___fpclassifyf 0005        __end_of_color_read_Blue 3B22          _I2C_2_Master_RepStart 3EC4  
           putCharToRxBuf@byte 0001                ?_color_read_Red 0009                ?_color_read_lum 0009  
              __initialization 3CB2                   __end_of_labs 388E                   __end_of_main 3704  
                 __end_of_dtoa 2A2E             putCharToTxBuf@byte 0005                         ??_labs 0009  
                       ??_main 00B3                         ??_dtoa 002A                  __activetblptr 000003  
                       ?_fputc 0005                         ?_fputs 000E                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RD5PPS 000E6F  
                       _RD6PPS 000E70                         i2l4032 0012                         i2l4034 0022  
                       i2l4038 0038                         i2l3970 3E04                         i2l3980 3D68  
                       i2l3972 3E14                         i2l3982 3D6C                         i2l3974 3E18  
                       i2l3976 3E28                         i2l3978 3D58                      ??_HighISR 0003  
     __end_of_color_click_init 3CB2                         _RX4PPS 000E15                         _TX4REG 000EE4  
             __end_of___xxtofl 2DF4                   vfprintf@cfmt 0092                         ___flge 3370  
             _getCharFromTxBuf 3D58                         ___fleq 3704                      ??___aodiv 0015  
                    ??___fladd 000D                      ??___aomod 0015                      ??___fldiv 000D  
                    ??___flneg 0009                      ??___flmul 000D                      ??___flsub 0026  
                    ??___fltol 0009                         _efgtoa 0E2C                         _floorf 2A2E  
                       _memcpy 3992                         clear_0 3CCA                         clear_1 3CD6  
                       isa$std 000001                         pad@buf 0017                         dtoa@fp 0020  
                       _strcpy 3B68                         fputc@c 0005              ?_TxBufferedString 0006  
                       fputs@c 0012                         fputs@i 0013                         fputs@s 000E  
              ___fpclassifyf@e 000D                ___fpclassifyf@u 000F                ___fpclassifyf@x 0005  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 0008                         putch@c 0001  
             __end_of_vfprintf 3940                      ??_sprintf 0056                     ___flge@ff1 001E  
                   ___flge@ff2 0022                ??___fpclassifyf 0009                   ___xxtofl@arg 000F  
                 ___xxtofl@exp 000E                   ___xxtofl@val 0005                     ___fleq@ff1 0005  
                   ___fleq@ff2 0009          __end_of_isDataInTxBuf 3EAA                     __accesstop 0060  
      __end_of__initialization 3CE6                     ___flneg@f1 0005       __end_of_color_read_Green 3AD2  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001                     ___fltol@f1 0005  
             ?_color_read_Blue 0009                _Interrupts_init 3EAA                 __pcstackCOMRAM 0001  
                 __pidataBANK0 3EE4                  __end_of_fputc 363C                  __end_of_fputs 3BF0  
                __end_of_putch 3EE4                        ??_fputc 0009                        ??_fputs 0012  
                      ??_putch 0005                     __pbssBANK0 00E7                     __pbssBANK1 0100  
            _color_writetoaddr 3E54                        ?___flge 001E                        ?___fleq 0005  
           ?_color_writetoaddr 0007                        ?_efgtoa 0032                        ?_floorf 001E  
                      ?_memcpy 0005            ??_color_writetoaddr 0008                        ?_strcpy 0005  
                colour_rel@rel 0020                      ?___xxtofl 0005                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
                   _colour_rel 2DF4        __end_of_Interrupts_init 3EB8         color_writetoaddr@value 0007  
             ??_color_read_Red 000B                        _HighISR 0008               ??_color_read_lum 000B  
    __end_of_color_writetoaddr 3E74             _I2C_2_Master_Start 3ED8                     _initUSART4 3E74  
           _I2C_2_Master_Write 3EB8                        __Hparam 0000                        __Lparam 0000  
            color_read_Red@tmp 000E                        ___aodiv 2F7E                        ___fladd 1826  
                      ___aomod 3106                        ___fldiv 2110                        ___flneg 3CF0  
                      ___flmul 1CE6                        ___flsub 3B22                        ___fltol 326A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 008C  
                 __psmallconst 0E00                        __pcinit 3CB2                        __ramtop 0E00  
                      __ptext0 363C                        __ptext1 3940                        __ptext2 38EC  
                      __ptext3 24AA                        __ptext4 0E2C                        __ptext5 3B68  
                      __ptext6 3992                        __ptext7 3828                        __ptext8 2A2E  
                      __ptext9 3474                     ??___xxtofl 0009                        efgtoa@c 0038  
                      efgtoa@d 006B                        efgtoa@e 006F                        efgtoa@f 0034  
                      efgtoa@g 0082                        efgtoa@h 0079                        efgtoa@i 0077  
                      efgtoa@l 007D                        efgtoa@m 006D                        efgtoa@n 0086  
                      efgtoa@p 0062                        efgtoa@t 0064                        efgtoa@u 0088  
                      efgtoa@w 0071                  _RxBufWriteCnt 005A       __end_of_getCharFromTxBuf 3D84  
            color_read_lum@tmp 000E                        main@buf 00B5                        _sprintf 3940  
         ??_I2C_2_Master_Start 0006           ??_I2C_2_Master_Write 0006           end_of_initialization 3CE6  
            __end_of_sendTxBuf 3DAE                        floorf@e 002C                        floorf@m 0028  
                      floorf@u 002E                        floorf@x 001E                        memcpy@d 000C  
                      memcpy@n 0009                        memcpy@s 000E                        fputc@fp 0007  
                      fputs@fp 0010              ?_color_click_init 0001             ??_color_click_init 0009  
            __end_of_vfpfcnvrt 27B0                     efgtoa@mode 0069                     efgtoa@sign 0081  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE               vfpfcnvrt@convarg 004B                     ??_vfprintf 0056  
                      strcpy@d 000B                        strcpy@s 0009                    ___fladd@grs 0014  
                ___xxtofl@sign 000D                      _TRISAbits 000F81                      _TRISDbits 000F84  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ___fldiv@grs 0018  
                  ___fldiv@rem 0011       color_writetoaddr@address 0008        ??_I2C_2_Master_RepStart 0006  
                  ?_colour_rel 001E               ?_Interrupts_init 0001                    ___flmul@grs 0013  
                 _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100              ?_color_read_Green 0009  
                  ?_initUSART4 0001             ??_color_read_Green 000B                 __end_of___flge 3474  
               __end_of___fleq 37AE                    vfpfcnvrt@ap 0047                    vfpfcnvrt@cp 0054  
                  vfpfcnvrt@fp 0043                 __end_of_efgtoa 1826                 __end_of_floorf 2C40  
               __end_of_memcpy 39E2                     floorf@F526 00E7                 __end_of_strcpy 3BAC  
          start_initialization 3CB2                    __end_of_abs 3C72                    __end_of_pad 3828  
                _TxBufWriteCnt 0058          __end_of___fpclassifyf 3572            color_read_Green@tmp 000E  
                  vfprintf@fmt 008E                       ??___flge 0026                       ??___fleq 000D  
                ??_readColours 0012                       ??_efgtoa 0039                 _putCharToRxBuf 3E02  
               _putCharToTxBuf 3DD8                    __pdataBANK0 00FF                       ??_floorf 0022  
                     ??_memcpy 000B                       ??_strcpy 0009                      ___fladd@a 0009  
                    ___fladd@b 0005                      ___fldiv@a 0009                      ___fldiv@b 0005  
                    ___flmul@a 0009                      ___flmul@b 0005                    __pbssCOMRAM 0056  
                    ___flsub@a 0022                      ___flsub@b 001E                  __pcstackBANK0 0060  
             ___aodiv@dividend 0005                       ?_HighISR 0001                    _efgtoa$1492 0066  
                    _dtoa$1461 0032         __end_of_putCharToRxBuf 3E2C         __end_of_putCharToTxBuf 3E02  
                    __pintcode 0008                       ?___aodiv 0005                       ?___fladd 0005  
                     ?___aomod 0005                       ?___fldiv 0005               ___aodiv@quotient 0017  
                     ?___flneg 0005                       ?___flmul 0005                       ?___flsub 001E  
                     ?___fltol 0005         TxBufferedString@string 0006           I2C_2_Master_Read@ack 0007  
         I2C_2_Master_Read@tmp 0008                    __smallconst 0E00            __end_of_readColours 38EC  
            _I2C_2_Master_Idle 3E2C              _I2C_2_Master_Init 3DAE              _I2C_2_Master_Read 3BF0  
            _I2C_2_Master_Stop 3ECE                   _RxBufReadCnt 0059             ?_I2C_2_Master_Idle 0001  
           ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
                     ?_sprintf 0094              ?_getCharFromTxBuf 0001                 colour_rel@vals 001E  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 0005            ??_I2C_2_Master_Init 0005  
          ??_I2C_2_Master_Read 0006                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0006  
                _isDataInTxBuf 3E92                       _LATFbits 000F7E               _TxBufferedString 3D28  
                     _LATGbits 000F7F                      _sendTxBuf 3D84                       _PIE2bits 000E2B  
                     _PIE4bits 000E2D                       i2u425_40 0022                       i2u425_41 001E  
                     i2u418_40 3E14                       i2u426_40 0038                       i2u418_41 3E10  
                     i2u426_41 0034                       i2u419_40 3D68                       i2u419_41 3D64  
                     _PIR4bits 000E37                ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001  
                     _SSP2CON2 000EDA                       _SSP2STAT 000ED8                      _vfpfcnvrt 24AA  
    __end_of_I2C_2_Master_Idle 3E54      __end_of_I2C_2_Master_Init 3DD8      __end_of_I2C_2_Master_Read 3C32  
    __end_of_I2C_2_Master_Stop 3ED8                       _DataFlag 00FF    I2C_2_Master_Write@data_byte 0006  
            ??_color_read_Blue 000B                   _TxBufReadCnt 0057                     vfpfcnvrt@c 0053  
                 ??_colour_rel 0022                 ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 3ECE  
           color_read_Blue@tmp 000E                     ?_sendTxBuf 0001                   ??_initUSART4 0005  
                     __Hrparam 0000                      memcpy@tmp 000B                     vfprintf@ap 0090  
                     __Lrparam 0000                     vfprintf@fp 008C                    _readColours 388E  
                   ?_vfpfcnvrt 0043                ___aodiv@divisor 000D                ___aodiv@counter 0015  
           __end_of_colour_rel 2F7E                     _ANSELDbits 000EA7             ___fpclassifyf@F465 00EB  
                   sprintf@fmt 0096                       ___xxtofl 2C40             __end_of_initUSART4 3E92  
                     __ptext10 326A                       __ptext11 3B22                       __ptext20 3572  
                     __ptext12 1826                       __ptext21 3EE2                       __ptext13 3CF0  
                     __ptext30 3A82                       __ptext22 3C32                       __ptext14 1CE6  
                     __ptext31 3AD2                       __ptext23 3106                       __ptext15 3370  
                     __ptext40 3EB8                       __ptext32 3EC4                       __ptext24 2F7E  
                     __ptext16 3704                       __ptext41 3ECE                       __ptext33 3BF0  
                     __ptext25 3D84                       __ptext17 27B0                       __ptext50 3D58  
                     __ptext42 3ED8                       __ptext34 3E74                       __ptext26 3E92  
                     __ptext18 37AE                       __ptext43 3E2C                       __ptext35 2DF4  
                     __ptext27 388E                       __ptext19 3BAC                       __ptext44 3DAE  
                     __ptext36 2C40                       __ptext28 39E2                       __ptext45 3D28  
                     __ptext37 2110                       __ptext29 3A32                       __ptext46 3DD8  
                     __ptext38 3C72                       __ptext47 3EAA                       __ptext39 3E54  
                     __ptext49 3E02                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                   strcpy@dest 0005                       efgtoa@fp 0032                       efgtoa@ne 0060  
                     efgtoa@pp 0068                       efgtoa@ou 0073                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 005B                       _vfprintf 38EC  
             ___aomod@dividend 0005                     _INTCONbits 000FF2                       memcpy@d1 0005  
                     memcpy@s1 0007                ??_isDataInTxBuf 0005                       intlevel2 0000  
                    sprintf@ap 00A6                    ??_sendTxBuf 0005                      strcpy@src 0007  
                  efgtoa@nmode 006A                ___aomod@divisor 000D                    ??_vfpfcnvrt 0049  
              ___aomod@counter 0015               _color_click_init 3C72       __end_of_TxBufferedString 3D58  
                     sprintf@f 00A8                       sprintf@s 0094                     _SSP2DATPPS 000E1D  
                   _SSP2CLKPPS 000E1C                  ___fladd@signs 0011                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0016                   ___fladd@aexp 0012                   ___fladd@bexp 0013  
>>>>>>> Stashed changes
             ??_putCharToRxBuf 0001               ??_putCharToTxBuf 0005                   ___aomod@sign 0016  
